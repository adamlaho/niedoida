/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pddd_AB_xx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1222_12_11(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C150616 = 0 * ae;
    const double C150615 = ae * be;
    const double C150614 = 0 * be;
    const double C150613 = ae + be;
    const double C150612 = 0 * be;
    const double C150611 = xA - xB;
    const double C150713 = p + q;
    const double C150712 = p * q;
    const double C150718 = xP - xQ;
    const double C150717 = bs[2];
    const double C150723 = bs[3];
    const double C150734 = bs[4];
    const double C150755 = bs[5];
    const double C150791 = bs[6];
    const double C150847 = bs[7];
    const double C150923 = bs[8];
    const double C151005 = yP - yQ;
    const double C151078 = zP - zQ;
    const double C142 = bs[0];
    const double C151930 = ce + de;
    const double C151929 = ce * de;
    const double C151928 = xC - xD;
    const double C151962 = yC - yD;
    const double C151980 = zC - zD;
    const double C152150 = yA - yB;
    const double C152162 = zA - zB;
    const double C150645 = 2 * C150615;
    const double C150643 = -2 * C150614;
    const double C150621 = C150616 / C150613;
    const double C150618 = 2 * C150613;
    const double C150617 = std::pow(C150613, 2);
    const double C150620 = C150615 * C150611;
    const double C150619 = C150611 * C150614;
    const double C151904 = C150611 * be;
    const double C151903 = C150611 * ae;
    const double C151902 = std::pow(C150611, 2);
    const double C150714 = 2 * C150712;
    const double C150726 = C150718 * ae;
    const double C150725 = C150718 * be;
    const double C150722 = std::pow(C150718, 2);
    const double C151012 = std::pow(C151005, 2);
    const double C151085 = std::pow(C151078, 2);
    const double C151934 = 2 * C151930;
    const double C151933 = std::pow(C151930, 2);
    const double C151935 = C151928 * de;
    const double C151932 = C151928 * ce;
    const double C151931 = std::pow(C151928, 2);
    const double C151963 = std::pow(C151962, 2);
    const double C152022 = C151962 * de;
    const double C152020 = C151962 * ce;
    const double C151981 = std::pow(C151980, 2);
    const double C152064 = C151980 * de;
    const double C152062 = C151980 * ce;
    const double C152151 = std::pow(C152150, 2);
    const double C152201 = C152150 * be;
    const double C152200 = C152150 * ae;
    const double C152163 = std::pow(C152162, 2);
    const double C152227 = C152162 * be;
    const double C152226 = C152162 * ae;
    const double C150646 = ae * C150643;
    const double C151912 = std::pow(C150618, -1);
    const double C152299 = std::pow(C150618, -2);
    const double C150622 = 2 * C150617;
    const double C150642 = C150617 * C150618;
    const double C152267 = 4 * C150617;
    const double C150623 = C150619 / C150613;
    const double C151905 = C151902 * C150615;
    const double C150716 = C150714 / C150713;
    const double C166 =
        ((std::pow(xP - xQ, 2) * bs[2] * std::pow(C150714 / C150713, 2) -
          (bs[1] * C150714) / C150713) *
         C150615) /
        C150617;
    const double C143 = -(C150718 * bs[1] * C150714) / C150713;
    const double C329 = -(C151005 * bs[1] * C150714) / C150713;
    const double C526 = -(C151078 * bs[1] * C150714) / C150713;
    const double C150729 = C150723 * C150726;
    const double C150740 = C150734 * C150726;
    const double C150763 = C150755 * C150726;
    const double C150803 = C150791 * C150726;
    const double C150863 = C150847 * C150726;
    const double C150943 = C150923 * C150726;
    const double C151 = (-(bs[1] * C150726 * C150714) / C150713) / C150613;
    const double C150728 = C150723 * C150725;
    const double C150737 = C150734 * C150725;
    const double C150759 = C150755 * C150725;
    const double C150799 = C150791 * C150725;
    const double C150859 = C150847 * C150725;
    const double C150939 = C150923 * C150725;
    const double C150 = (-(bs[1] * C150725 * C150714) / C150713) / C150613;
    const double C150736 = C150722 * C150734;
    const double C150758 = C150722 * C150755;
    const double C150798 = C150722 * C150791;
    const double C150858 = C150722 * C150847;
    const double C150938 = C150722 * C150923;
    const double C151947 = std::pow(C151934, -1);
    const double C152275 = std::pow(C151934, -2);
    const double C151948 = 2 * C151933;
    const double C152279 = C151933 * C151934;
    const double C152278 = 4 * C151933;
    const double C152268 = std::pow(C151932, 2);
    const double C151936 = C151931 * C151929;
    const double C151964 = C151963 * C151929;
    const double C152280 = std::pow(C152020, 2);
    const double C151982 = C151981 * C151929;
    const double C152282 = std::pow(C152062, 2);
    const double C152152 = C152151 * C150615;
    const double C152164 = C152163 * C150615;
    const double C150628 = C150614 / C150622;
    const double C150626 = C150612 / C150622;
    const double C150625 = 0 - C150623;
    const double C151906 = C151905 / C150613;
    const double C150719 = std::pow(C150716, 2);
    const double C150724 = -C150716;
    const double C150735 = std::pow(C150716, 4);
    const double C150792 = std::pow(C150716, 6);
    const double C150924 = std::pow(C150716, 8);
    const double C152323 = 4 * C152279;
    const double C152322 = C151930 * C152278;
    const double C151937 = C151936 / C151930;
    const double C151965 = C151964 / C151930;
    const double C151983 = C151982 / C151930;
    const double C152153 = C152152 / C150613;
    const double C152165 = C152164 / C150613;
    const double C150630 = C150625 * ae;
    const double C151907 = -C151906;
    const double C150721 = C150717 * C150719;
    const double C167 = (ae * C150719 * C150717 * C150718 * be +
                         be * C150719 * C150717 * C150718 * ae +
                         C150718 *
                             (C150717 * C150719 + std::pow(C150718, 2) * bs[3] *
                                                      std::pow(-C150716, 3)) *
                             C150615) /
                        C150617;
    const double C152 = (C150718 * C150719 * C150717 * C150725) / C150613 -
                        (be * bs[1] * C150714) / (C150713 * C150613);
    const double C153 = (C150718 * C150719 * C150717 * C150726) / C150613 -
                        (ae * bs[1] * C150714) / (C150713 * C150613);
    const double C344 = (C151005 * C150719 * C150717 * C150725) / C150613;
    const double C345 = (C151005 * C150719 * C150717 * C150726) / C150613;
    const double C541 = (C151078 * C150719 * C150717 * C150725) / C150613;
    const double C542 = (C151078 * C150719 * C150717 * C150726) / C150613;
    const double C150727 = std::pow(C150724, 3);
    const double C150756 = std::pow(C150724, 5);
    const double C150848 = std::pow(C150724, 7);
    const double C150744 = C150735 * C150740;
    const double C150743 = C150735 * C150737;
    const double C150742 = C150736 * C150735;
    const double C150754 = C150734 * C150735;
    const double C150810 = C150792 * C150803;
    const double C150807 = C150792 * C150799;
    const double C150806 = C150798 * C150792;
    const double C150846 = C150791 * C150792;
    const double C150952 = C150924 * C150943;
    const double C150949 = C150924 * C150939;
    const double C150948 = C150938 * C150924;
    const double C151938 = -C151937;
    const double C151966 = -C151965;
    const double C151984 = -C151983;
    const double C152154 = -C152153;
    const double C152166 = -C152165;
    const double C150633 = C150630 / C150613;
    const double C151908 = std::exp(C151907);
    const double C144 = C150721 * C150722 - (bs[1] * C150714) / C150713;
    const double C328 = C151005 * C150718 * C150721;
    const double C330 = C150721 * C151012 - (bs[1] * C150714) / C150713;
    const double C525 = C151078 * C150718 * C150721;
    const double C527 = C150721 * C151085 - (bs[1] * C150714) / C150713;
    const double C1041 = C151078 * C151005 * C150721;
    const double C150731 = C150727 * C150729;
    const double C150730 = C150727 * C150728;
    const double C150733 = C150723 * C150727;
    const double C365 =
        (C151005 * (C150721 + C150722 * C150723 * C150727) * C150615) / C150617;
    const double C562 =
        (C151078 * (C150721 + C150722 * C150723 * C150727) * C150615) / C150617;
    const double C150769 = C150756 * C150763;
    const double C150766 = C150756 * C150759;
    const double C150765 = C150758 * C150756;
    const double C150790 = C150755 * C150756;
    const double C150871 = C150848 * C150863;
    const double C150868 = C150848 * C150859;
    const double C150867 = C150858 * C150848;
    const double C150922 = C150847 * C150848;
    const double C150747 = C150718 * C150744;
    const double C150753 = be * C150744;
    const double C151536 = C151005 * C150744;
    const double C150746 = C150718 * C150743;
    const double C150752 = ae * C150743;
    const double C151534 = C151005 * C150743;
    const double C150764 = C150754 * ae;
    const double C150762 = C150754 * C150722;
    const double C150761 = C150718 * C150754;
    const double C150760 = C150754 * be;
    const double C151795 = C150754 * C151012;
    const double C151798 = C151005 * C150754;
    const double C151837 = C150754 * C151085;
    const double C151840 = C151078 * C150754;
    const double C150816 = C150718 * C150810;
    const double C150845 = be * C150810;
    const double C151028 = C150810 * C151012;
    const double C151042 = C151005 * C150810;
    const double C151101 = C150810 * C151085;
    const double C151115 = C151078 * C150810;
    const double C150813 = C150718 * C150807;
    const double C150844 = ae * C150807;
    const double C151027 = C150807 * C151012;
    const double C151041 = C151005 * C150807;
    const double C151100 = C150807 * C151085;
    const double C151114 = C151078 * C150807;
    const double C150864 = C150846 * ae;
    const double C150862 = C150846 * C150722;
    const double C150861 = C150718 * C150846;
    const double C150860 = C150846 * be;
    const double C151869 = C150846 * C151012;
    const double C151881 = C151005 * C150846;
    const double C151893 = C150846 * C151085;
    const double C150958 = C150718 * C150952;
    const double C150955 = C150718 * C150949;
    const double C151939 = std::exp(C151938);
    const double C151967 = std::exp(C151966);
    const double C151985 = std::exp(C151984);
    const double C152155 = std::exp(C152154);
    const double C152167 = std::exp(C152166);
    const double C150635 = C150633 - C150626;
    const double C150624 = C150620 * C151908;
    const double C151909 = C151908 * C151903;
    const double C151913 = C151912 * C151908;
    const double C152264 = C151908 * C151904;
    const double C152261 = C151908 / C150618;
    const double C50891 = C152299 * C151908;
    const double C155 = (C150719 * C150717 * C150726 +
                         C150718 * (C150718 * C150731 + C150721 * ae) +
                         C150718 * C150721 * ae) /
                        C150613;
    const double C343 =
        (C151005 * (C150718 * C150731 + C150721 * ae)) / C150613;
    const double C347 =
        (C150719 * C150717 * C150726 + C150731 * C151012) / C150613;
    const double C540 =
        (C151078 * (C150718 * C150731 + C150721 * ae)) / C150613;
    const double C544 =
        (C150719 * C150717 * C150726 + C150731 * C151085) / C150613;
    const double C1048 = (C151078 * C151005 * C150731) / C150613;
    const double C1320 =
        (2 * C151005 * C150731 + C151005 * (C150731 + C150744 * C151012)) /
        C150613;
    const double C1502 =
        (C151005 * C150731 + C151005 * C150744 * C151085) / C150613;
    const double C1510 = (C151078 * (C150731 + C150744 * C151012)) / C150613;
    const double C2412 =
        (2 * C151078 * C150731 + C151078 * (C150731 + C150744 * C151085)) /
        C150613;
    const double C168 =
        ((C150721 + C150722 * C150723 * C150727) * C150615 +
         ae * (C150718 * C150730 + C150721 * be) +
         be * (C150718 * C150731 + C150721 * ae) +
         C150718 *
             (ae * C150730 + be * C150731 +
              C150718 *
                  (C150723 * C150727 + C150722 * bs[4] * std::pow(C150716, 4)) *
                  C150615)) /
        C150617;
    const double C154 = (C150719 * C150717 * C150725 +
                         C150718 * (C150718 * C150730 + C150721 * be) +
                         C150718 * C150721 * be) /
                        C150613;
    const double C342 =
        (C151005 * (C150718 * C150730 + C150721 * be)) / C150613;
    const double C346 =
        (C150719 * C150717 * C150725 + C150730 * C151012) / C150613;
    const double C539 =
        (C151078 * (C150718 * C150730 + C150721 * be)) / C150613;
    const double C543 =
        (C150719 * C150717 * C150725 + C150730 * C151085) / C150613;
    const double C1047 = (C151078 * C151005 * C150730) / C150613;
    const double C1319 =
        (2 * C151005 * C150730 + C151005 * (C150730 + C150743 * C151012)) /
        C150613;
    const double C1501 =
        (C151005 * C150730 + C151005 * C150743 * C151085) / C150613;
    const double C1509 = (C151078 * (C150730 + C150743 * C151012)) / C150613;
    const double C2411 =
        (2 * C151078 * C150730 + C151078 * (C150730 + C150743 * C151085)) /
        C150613;
    const double C150741 = C150733 * ae;
    const double C150739 = C150718 * C150733;
    const double C150738 = C150733 * be;
    const double C150745 = C150733 + C150742;
    const double C151784 = C151005 * C150733;
    const double C145 =
        2 * C150718 * C150721 + C150718 * (C150721 + C150733 * C150722);
    const double C327 = C151005 * (C150721 + C150733 * C150722);
    const double C524 = C151078 * (C150721 + C150733 * C150722);
    const double C1308 =
        2 * C151005 * C150721 + C151005 * (C150721 + C150733 * C151012);
    const double C1309 = 3 * (C150721 + C150733 * C151012) +
                         C151005 * (2 * C151005 * C150733 +
                                    C151005 * (C150733 + C150754 * C151012));
    const double C1486 = C151005 * C150721 + C151005 * C150733 * C151085;
    const double C1490 = C151078 * (C150721 + C150733 * C151012);
    const double C1491 =
        C150721 + C150733 * C151012 + (C150733 + C150754 * C151012) * C151085;
    const double C1999 = C151078 * (2 * C151005 * C150733 +
                                    C151005 * (C150733 + C150754 * C151012));
    const double C2400 =
        2 * C151078 * C150721 + C151078 * (C150721 + C150733 * C151085);
    const double C2401 = 3 * (C150721 + C150733 * C151085) +
                         C151078 * (2 * C151078 * C150733 +
                                    C151078 * (C150733 + C150754 * C151085));
    const double C59573 = C151908 * C365;
    const double C65723 = C151908 * C562;
    const double C150773 = C150718 * C150769;
    const double C150789 = be * C150769;
    const double C151019 = C151005 * C150769;
    const double C151092 = C151078 * C150769;
    const double C151559 = C150769 * C151012;
    const double C151631 = C150769 * C151085;
    const double C1322 = (3 * (C150731 + C150744 * C151012) +
                          C151005 * (2 * C151005 * C150744 +
                                     C151005 * (C150744 + C150769 * C151012))) /
                         C150613;
    const double C1512 = (C150731 + C150744 * C151012 +
                          (C150744 + C150769 * C151012) * C151085) /
                         C150613;
    const double C2004 = (C151078 * (2 * C151005 * C150744 +
                                     C151005 * (C150744 + C150769 * C151012))) /
                         C150613;
    const double C2414 = (3 * (C150731 + C150744 * C151085) +
                          C151078 * (2 * C151078 * C150744 +
                                     C151078 * (C150744 + C150769 * C151085))) /
                         C150613;
    const double C150772 = C150718 * C150766;
    const double C150788 = ae * C150766;
    const double C151018 = C151005 * C150766;
    const double C151091 = C151078 * C150766;
    const double C151556 = C150766 * C151012;
    const double C151628 = C150766 * C151085;
    const double C1321 = (3 * (C150730 + C150743 * C151012) +
                          C151005 * (2 * C151005 * C150743 +
                                     C151005 * (C150743 + C150766 * C151012))) /
                         C150613;
    const double C1511 = (C150730 + C150743 * C151012 +
                          (C150743 + C150766 * C151012) * C151085) /
                         C150613;
    const double C2003 = (C151078 * (2 * C151005 * C150743 +
                                     C151005 * (C150743 + C150766 * C151012))) /
                         C150613;
    const double C2413 = (3 * (C150730 + C150743 * C151085) +
                          C151078 * (2 * C151078 * C150743 +
                                     C151078 * (C150743 + C150766 * C151085))) /
                         C150613;
    const double C150771 = C150754 + C150765;
    const double C150804 = C150790 * ae;
    const double C150802 = C150790 * C150722;
    const double C150801 = C150718 * C150790;
    const double C150800 = C150790 * be;
    const double C150812 = C150790 + C150806;
    const double C151799 = C150790 * C151012;
    const double C151841 = C150790 * C151085;
    const double C151859 = C151005 * C150790;
    const double C151892 = C151078 * C150790;
    const double C150877 = C150718 * C150871;
    const double C150921 = be * C150871;
    const double C151059 = C150871 * C151012;
    const double C151132 = C150871 * C151085;
    const double C151157 = C151005 * C150871;
    const double C151183 = C151078 * C150871;
    const double C150874 = C150718 * C150868;
    const double C150920 = ae * C150868;
    const double C151058 = C150868 * C151012;
    const double C151131 = C150868 * C151085;
    const double C151156 = C151005 * C150868;
    const double C151182 = C151078 * C150868;
    const double C150873 = C150846 + C150867;
    const double C150944 = C150922 * ae;
    const double C150942 = C150922 * C150722;
    const double C150941 = C150718 * C150922;
    const double C150940 = C150922 * be;
    const double C150954 = C150922 + C150948;
    const double C150757 = C150752 + C150753;
    const double C150768 = C150733 + C150762;
    const double C150770 = C150761 * ae;
    const double C150767 = C150761 * be;
    const double C150794 = 2 * C150761;
    const double C151786 = C151005 * C150761;
    const double C151796 = C150733 + C151795;
    const double C151800 = 2 * C151798;
    const double C151838 = C150733 + C151837;
    const double C151842 = 2 * C151840;
    const double C151031 = C150769 + C151028;
    const double C151047 = be * C151042;
    const double C151209 = C151078 * C151042;
    const double C151270 = 2 * C151042;
    const double C151661 = C151042 * C151085;
    const double C151104 = C150769 + C151101;
    const double C151120 = be * C151115;
    const double C151325 = 2 * C151115;
    const double C150857 = C150844 + C150845;
    const double C151030 = C150766 + C151027;
    const double C151046 = ae * C151041;
    const double C151208 = C151078 * C151041;
    const double C151268 = 2 * C151041;
    const double C151658 = C151041 * C151085;
    const double C151103 = C150766 + C151100;
    const double C151119 = ae * C151114;
    const double C151323 = 2 * C151114;
    const double C150870 = C150790 + C150862;
    const double C150872 = C150861 * ae;
    const double C150869 = C150861 * be;
    const double C150928 = 2 * C150861;
    const double C151806 = C150861 * C151012;
    const double C151848 = C150861 * C151085;
    const double C151863 = C151005 * C150861;
    const double C151870 = C150790 + C151869;
    const double C151883 = C151881 * C151085;
    const double C151895 = C150790 + C151893;
    const double C151941 = C151939 * C151932;
    const double C151940 = C151939 / C151934;
    const double C151950 = C151947 * C151939;
    const double C152271 = C151939 * C151935;
    const double C152320 = C152275 * C151939;
    const double C152314 = C151939 * C152268;
    const double C152021 = C151967 / C151934;
    const double C152023 = C151967 * C152020;
    const double C152030 = C151947 * C151967;
    const double C152286 = C151967 * C152022;
    const double C152326 = C152275 * C151967;
    const double C152324 = C151967 * C152280;
    const double C152063 = C151985 / C151934;
    const double C152065 = C151985 * C152062;
    const double C152072 = C151947 * C151985;
    const double C152292 = C151985 * C152064;
    const double C152329 = C152275 * C151985;
    const double C152327 = C151985 * C152282;
    const double C152202 = C152155 * C152200;
    const double C152205 = C151912 * C152155;
    const double C152303 = C152155 * C152201;
    const double C152298 = C152155 / C150618;
    const double C6028 = C152299 * C152155;
    const double C152228 = C152167 * C152226;
    const double C152231 = C151912 * C152167;
    const double C152307 = C152167 * C152227;
    const double C152300 = C152167 / C150618;
    const double C14707 = C152299 * C152167;
    const double C150629 = C150624 / C150617;
    const double C150627 = 2 * C150624;
    const double C150644 = -4 * C150624;
    const double C152265 = C151909 / C150622;
    const double C152263 = C151909 / C150613;
    const double C152262 = C151909 * C151904;
    const double C50890 = (2 * C151912 * C151909) / C150613;
    const double C152266 = C151913 * C151904;
    const double C124 = C151913 / C152267;
    const double C23125 = C151913 / C150618;
    const double C152312 = C152264 / C150613;
    const double C50889 = (C151908 * std::pow(C151903, 2)) / C150617 + C152261;
    const double C150750 = C150747 + C150741;
    const double C331 = C150718 * C150721 + C150739 * C151012;
    const double C528 = C150718 * C150721 + C150739 * C151085;
    const double C1042 = C151078 * C151005 * C150739;
    const double C1307 =
        2 * C151005 * C150739 + C151005 * (C150739 + C150761 * C151012);
    const double C1485 = C151005 * C150739 + C151005 * C150761 * C151085;
    const double C1489 = C151078 * (C150739 + C150761 * C151012);
    const double C2399 =
        2 * C151078 * C150739 + C151078 * (C150739 + C150761 * C151085);
    const double C150749 = C150746 + C150738;
    const double C150748 = C150745 * C150615;
    const double C2895 = 2 * C151078 * C151784 +
                         C151078 * (C151784 + C151005 * C150754 * C151085);
    const double C9383 =
        3 * (C151784 + C151798 * C151085) +
        C151078 * (2 * C151078 * C151798 +
                   C151078 * (C151798 + C151005 * C150790 * C151085));
    const double C150776 = C150773 + C150764;
    const double C151022 = be * C151019;
    const double C151566 = 2 * C151019;
    const double C2900 =
        (2 * C151078 * C151536 + C151078 * (C151536 + C151019 * C151085)) /
        C150613;
    const double C9392 = (3 * (C151536 + C151019 * C151085) +
                          C151078 * (2 * C151078 * C151019 +
                                     C151078 * (C151019 + C151042 * C151085))) /
                         C150613;
    const double C151095 = be * C151092;
    const double C151638 = 2 * C151092;
    const double C151560 = C150744 + C151559;
    const double C151632 = C150744 + C151631;
    const double C150775 = C150772 + C150760;
    const double C150797 = C150788 + C150789;
    const double C151021 = ae * C151018;
    const double C151562 = 2 * C151018;
    const double C2899 =
        (2 * C151078 * C151534 + C151078 * (C151534 + C151018 * C151085)) /
        C150613;
    const double C9391 = (3 * (C151534 + C151018 * C151085) +
                          C151078 * (2 * C151078 * C151018 +
                                     C151078 * (C151018 + C151041 * C151085))) /
                         C150613;
    const double C151094 = ae * C151091;
    const double C151634 = 2 * C151091;
    const double C151557 = C150743 + C151556;
    const double C151629 = C150743 + C151628;
    const double C150774 = C150771 * C150615;
    const double C150821 = C150816 + C150804;
    const double C150809 = C150754 + C150802;
    const double C150811 = C150801 * ae;
    const double C150808 = C150801 * be;
    const double C150851 = 2 * C150801;
    const double C151792 = C150801 * C151012;
    const double C151805 = C151005 * C150801;
    const double C151834 = C150801 * C151085;
    const double C151847 = C151078 * C150801;
    const double C1310 = 3 * (C150739 + C150761 * C151012) +
                         C151005 * (2 * C151005 * C150761 +
                                    C151005 * (C150761 + C150801 * C151012));
    const double C1492 =
        C150739 + C150761 * C151012 + (C150761 + C150801 * C151012) * C151085;
    const double C2000 = C151078 * (2 * C151005 * C150761 +
                                    C151005 * (C150761 + C150801 * C151012));
    const double C2402 = 3 * (C150739 + C150761 * C151085) +
                         C151078 * (2 * C151078 * C150761 +
                                    C151078 * (C150761 + C150801 * C151085));
    const double C150819 = C150813 + C150800;
    const double C150818 = C150812 * C150615;
    const double C151801 = C150754 + C151799;
    const double C151843 = C150754 + C151841;
    const double C151860 = C151859 * C151085;
    const double C151868 = 2 * C151859;
    const double C151880 = C151078 * C151859;
    const double C151894 = 2 * C151892;
    const double C150882 = C150877 + C150864;
    const double C151064 = C150810 + C151059;
    const double C151137 = C150810 + C151132;
    const double C151164 = be * C151157;
    const double C151220 = C151078 * C151157;
    const double C151312 = C151157 * C151085;
    const double C151190 = be * C151183;
    const double C150880 = C150874 + C150860;
    const double C150937 = C150920 + C150921;
    const double C151063 = C150807 + C151058;
    const double C151136 = C150807 + C151131;
    const double C151163 = ae * C151156;
    const double C151219 = C151078 * C151156;
    const double C151311 = C151156 * C151085;
    const double C151189 = ae * C151182;
    const double C150879 = C150873 * C150615;
    const double C150963 = C150958 + C150944;
    const double C150951 = C150846 + C150942;
    const double C150953 = C150941 * ae;
    const double C150950 = C150941 * be;
    const double C150961 = C150955 + C150940;
    const double C150960 = C150954 * C150615;
    const double C146 = 3 * (C150721 + C150733 * C150722) +
                        C150718 * (2 * C150739 + C150718 * C150768);
    const double C326 = C151005 * (2 * C150739 + C150718 * C150768);
    const double C332 = C150721 + C150733 * C150722 + C150768 * C151012;
    const double C523 = C151078 * (2 * C150739 + C150718 * C150768);
    const double C529 = C150721 + C150733 * C150722 + C150768 * C151085;
    const double C1043 = C151078 * C151005 * C150768;
    const double C2896 = 2 * C151078 * C151786 +
                         C151078 * (C151786 + C151005 * C150801 * C151085);
    const double C7732 =
        4 * (2 * C151784 + C151005 * C151796) +
        C151005 *
            (3 * C151796 + C151005 * (2 * C151005 * C150754 +
                                      C151005 * (C150754 + C150790 * C151012)));
    const double C17789 =
        4 * (2 * C151078 * C150733 + C151078 * C151838) +
        C151078 *
            (3 * C151838 + C151078 * (2 * C151078 * C150754 +
                                      C151078 * (C150754 + C150790 * C151085)));
    const double C151034 = be * C151031;
    const double C151567 = C151005 * C151031;
    const double C151674 = 3 * C151031;
    const double C151212 = be * C151209;
    const double C151690 = 2 * C151209;
    const double C151662 = C151019 + C151661;
    const double C151107 = be * C151104;
    const double C151639 = C151078 * C151104;
    const double C151704 = 3 * C151104;
    const double C151033 = ae * C151030;
    const double C151563 = C151005 * C151030;
    const double C151670 = 3 * C151030;
    const double C151050 = C151046 + C151047;
    const double C151211 = ae * C151208;
    const double C151686 = 2 * C151208;
    const double C151659 = C151018 + C151658;
    const double C151106 = ae * C151103;
    const double C151635 = C151078 * C151103;
    const double C151700 = 3 * C151103;
    const double C151123 = C151119 + C151120;
    const double C150878 = C150870 * ae;
    const double C150876 = C150718 * C150870;
    const double C150875 = C150870 * be;
    const double C150929 = 3 * C150870;
    const double C151818 = C150870 * C151012;
    const double C151854 = C151005 * C150870;
    const double C151856 = C150870 * C151085;
    const double C151808 = C150801 + C151806;
    const double C151850 = C150801 + C151848;
    const double C151864 = C151863 * C151085;
    const double C151871 = C151005 * C151870;
    const double C151888 = C151870 * C151085;
    const double C151884 = C151859 + C151883;
    const double C151896 = C151078 * C151895;
    const double C151942 = C151941 * C151935;
    const double C151949 = C151941 / C151948;
    const double C152272 = C151947 * C151941;
    const double C152270 = C151941 / C151930;
    const double C323 = (C151939 * std::pow(C151935, 2)) / C151933 + C151940;
    const double C151951 = C151950 * C151935;
    const double C152276 = C151932 * C151950;
    const double C152274 = 2 * C151950;
    const double C152330 = C151950 / C152278;
    const double C133 = C151950 / C152323;
    const double C3528 = C151950 / C151934;
    const double C152316 = C152271 / C151930;
    const double C324 = (-2 * C151947 * C152271) / C151930;
    const double C152351 = C152314 / C151933;
    const double C1211 = (C151967 * std::pow(C152022, 2)) / C151933 + C152021;
    const double C152024 = C152023 * C152022;
    const double C152029 = C152023 / C151948;
    const double C152284 = C152023 / C151930;
    const double C152281 = C151947 * C152023;
    const double C152031 = C152030 * C152022;
    const double C152290 = C152020 * C152030;
    const double C152289 = 2 * C152030;
    const double C152336 = C152030 / C152278;
    const double C1303 = C152030 / C152323;
    const double C3525 = C152030 / C151934;
    const double C152332 = C152286 / C151930;
    const double C1212 = (-2 * C151947 * C152286) / C151930;
    const double C152356 = C152324 / C151933;
    const double C2161 = (C151985 * std::pow(C152064, 2)) / C151933 + C152063;
    const double C152066 = C152065 * C152064;
    const double C152071 = C152065 / C151948;
    const double C152285 = C152065 / C151930;
    const double C152283 = C151947 * C152065;
    const double C152073 = C152072 * C152064;
    const double C152296 = C152062 * C152072;
    const double C152295 = 2 * C152072;
    const double C152342 = C152072 / C152278;
    const double C2396 = C152072 / C152323;
    const double C4719 = C152072 / C151934;
    const double C152338 = C152292 / C151930;
    const double C2162 = (-2 * C151947 * C152292) / C151930;
    const double C152358 = C152327 / C151933;
    const double C152305 = C152202 / C150622;
    const double C152304 = C152202 * C152201;
    const double C152301 = C152202 / C150613;
    const double C6027 = (2 * C151912 * C152202) / C150613;
    const double C152306 = C152205 * C152201;
    const double C59420 = C152205 / C152267;
    const double C73634 = C152205 / C150618;
    const double C152343 = C152303 / C150613;
    const double C6026 = (C152155 * std::pow(C152200, 2)) / C150617 + C152298;
    const double C152309 = C152228 / C150622;
    const double C152308 = C152228 * C152227;
    const double C152302 = C152228 / C150613;
    const double C14706 = (2 * C151912 * C152228) / C150613;
    const double C152310 = C152231 * C152227;
    const double C117981 = C152231 / C152267;
    const double C134328 = C152231 / C150618;
    const double C152346 = C152307 / C150613;
    const double C14705 = (C152167 * std::pow(C152226, 2)) / C150617 + C152300;
    const double C150632 = C150621 - C150629;
    const double C150631 = C150611 * C150627;
    const double C6031 = (-C150627 / C150613) / C150618 - (0 * be) / C150613;
    const double C59421 = -C150627 / C150613;
    const double C150647 = C150644 / C150613;
    const double C73861 = C152263 * C365;
    const double C82839 = C152263 * C562;
    const double C152311 = C152262 / C150617;
    const double C152313 = C152266 / C150613;
    const double C6024 = -C152312;
    const double C51122 = C50889 * C365;
    const double C101906 = C50889 * C562;
    const double C157 =
        (2 * (C150718 * C150731 + C150721 * ae) +
         C150718 * (C150731 + C150718 * C150750 + C150739 * ae) +
         (C150721 + C150733 * C150722) * ae) /
        C150613;
    const double C341 =
        (C151005 * (C150731 + C150718 * C150750 + C150739 * ae)) / C150613;
    const double C349 =
        (C150718 * C150731 + C150721 * ae + C150750 * C151012) / C150613;
    const double C538 =
        (C151078 * (C150731 + C150718 * C150750 + C150739 * ae)) / C150613;
    const double C546 =
        (C150718 * C150731 + C150721 * ae + C150750 * C151085) / C150613;
    const double C1050 = (C151078 * C151005 * C150750) / C150613;
    const double C156 =
        (2 * (C150718 * C150730 + C150721 * be) +
         C150718 * (C150730 + C150718 * C150749 + C150739 * be) +
         (C150721 + C150733 * C150722) * be) /
        C150613;
    const double C340 =
        (C151005 * (C150730 + C150718 * C150749 + C150739 * be)) / C150613;
    const double C348 =
        (C150718 * C150730 + C150721 * be + C150749 * C151012) / C150613;
    const double C537 =
        (C151078 * (C150730 + C150718 * C150749 + C150739 * be)) / C150613;
    const double C545 =
        (C150718 * C150730 + C150721 * be + C150749 * C151085) / C150613;
    const double C1049 = (C151078 * C151005 * C150749) / C150613;
    const double C169 =
        (2 * (ae * C150730 + be * C150731 + C150718 * C150748) +
         ae * (C150730 + C150718 * C150749 + C150739 * be) +
         be * (C150731 + C150718 * C150750 + C150739 * ae) +
         C150718 * (C150748 + ae * C150749 + be * C150750 +
                    C150718 * (ae * C150743 + be * C150744 +
                               C150718 *
                                   (C150734 * C150735 +
                                    C150722 * bs[5] * std::pow(C150724, 5)) *
                                   C150615))) /
        C150617;
    const double C364 = (ae * C151005 * C150730 + be * C151005 * C150731 +
                         C150718 * C151005 * C150748) /
                        C150617;
    const double C366 = ((C150721 + C150722 * C150723 * C150727) * C150615 +
                         C150748 * std::pow(C151005, 2)) /
                        C150617;
    const double C561 = (ae * C151078 * C150730 + be * C151078 * C150731 +
                         C150718 * C151078 * C150748) /
                        C150617;
    const double C563 = ((C150721 + C150722 * C150723 * C150727) * C150615 +
                         C150748 * std::pow(C151078, 2)) /
                        C150617;
    const double C1059 = (C151078 * C151005 * C150748) / C150617;
    const double C150779 = C150718 * C150776;
    const double C150795 = 2 * C150776;
    const double C150787 = be * C150776;
    const double C151540 = C151005 * C150776;
    const double C1318 =
        (2 * C151005 * C150750 + C151005 * (C150750 + C150776 * C151012)) /
        C150613;
    const double C1500 =
        (C151005 * C150750 + C151005 * C150776 * C151085) / C150613;
    const double C1508 = (C151078 * (C150750 + C150776 * C151012)) / C150613;
    const double C2410 =
        (2 * C151078 * C150750 + C151078 * (C150750 + C150776 * C151085)) /
        C150613;
    const double C7738 =
        (4 * (2 * C151536 + C151005 * C151560) +
         C151005 *
             (3 * C151560 + C151005 * (2 * C151019 + C151005 * C151031))) /
        C150613;
    const double C9390 =
        (2 * C151078 * C151560 + C151078 * (C151560 + C151031 * C151085)) /
        C150613;
    const double C17795 =
        (4 * (2 * C151078 * C150744 + C151078 * C151632) +
         C151078 *
             (3 * C151632 + C151078 * (2 * C151092 + C151078 * C151104))) /
        C150613;
    const double C150778 = C150718 * C150775;
    const double C150793 = 2 * C150775;
    const double C150786 = ae * C150775;
    const double C151538 = C151005 * C150775;
    const double C1317 =
        (2 * C151005 * C150749 + C151005 * (C150749 + C150775 * C151012)) /
        C150613;
    const double C1499 =
        (C151005 * C150749 + C151005 * C150775 * C151085) / C150613;
    const double C1507 = (C151078 * (C150749 + C150775 * C151012)) / C150613;
    const double C2409 =
        (2 * C151078 * C150749 + C151078 * (C150749 + C150775 * C151085)) /
        C150613;
    const double C151024 = C151021 + C151022;
    const double C151097 = C151094 + C151095;
    const double C7737 =
        (4 * (2 * C151534 + C151005 * C151557) +
         C151005 *
             (3 * C151557 + C151005 * (2 * C151018 + C151005 * C151030))) /
        C150613;
    const double C9389 =
        (2 * C151078 * C151557 + C151078 * (C151557 + C151030 * C151085)) /
        C150613;
    const double C17794 =
        (4 * (2 * C151078 * C150743 + C151078 * C151629) +
         C151078 *
             (3 * C151629 + C151078 * (2 * C151091 + C151078 * C151103))) /
        C150613;
    const double C150777 = C150718 * C150774;
    const double C151006 = C151005 * C150774;
    const double C151079 = C151078 * C150774;
    const double C367 = (ae * (C150730 + C150743 * C151012) +
                         be * (C150731 + C150744 * C151012) +
                         C150718 * (C150748 + C150774 * C151012)) /
                        C150617;
    const double C564 = (ae * (C150730 + C150743 * C151085) +
                         be * (C150731 + C150744 * C151085) +
                         C150718 * (C150748 + C150774 * C151085)) /
                        C150617;
    const double C1332 =
        (2 * C151005 * C150748 + C151005 * (C150748 + C150774 * C151012)) /
        C150617;
    const double C1526 = (C151078 * (C150748 + C150774 * C151012)) / C150617;
    const double C2424 =
        (2 * C151078 * C150748 + C151078 * (C150748 + C150774 * C151085)) /
        C150617;
    const double C150824 = C150718 * C150821;
    const double C150854 = 2 * C150821;
    const double C150843 = be * C150821;
    const double C151040 = C151005 * C150821;
    const double C151113 = C151078 * C150821;
    const double C151553 = C150821 * C151012;
    const double C151625 = C150821 * C151085;
    const double C1324 = (3 * (C150750 + C150776 * C151012) +
                          C151005 * (2 * C151005 * C150776 +
                                     C151005 * (C150776 + C150821 * C151012))) /
                         C150613;
    const double C1514 = (C150750 + C150776 * C151012 +
                          (C150776 + C150821 * C151012) * C151085) /
                         C150613;
    const double C2006 = (C151078 * (2 * C151005 * C150776 +
                                     C151005 * (C150776 + C150821 * C151012))) /
                         C150613;
    const double C2416 = (3 * (C150750 + C150776 * C151085) +
                          C151078 * (2 * C151078 * C150776 +
                                     C151078 * (C150776 + C150821 * C151085))) /
                         C150613;
    const double C150817 = C150809 * ae;
    const double C150815 = C150718 * C150809;
    const double C150814 = C150809 * be;
    const double C150852 = 3 * C150809;
    const double C151788 = C151005 * C150809;
    const double C1306 =
        2 * C151005 * C150768 + C151005 * (C150768 + C150809 * C151012);
    const double C1311 = 3 * (C150768 + C150809 * C151012) +
                         C151005 * (2 * C151005 * C150809 +
                                    C151005 * (C150809 + C150870 * C151012));
    const double C1484 = C151005 * C150768 + C151005 * C150809 * C151085;
    const double C1488 = C151078 * (C150768 + C150809 * C151012);
    const double C1493 =
        C150768 + C150809 * C151012 + (C150809 + C150870 * C151012) * C151085;
    const double C2001 = C151078 * (2 * C151005 * C150809 +
                                    C151005 * (C150809 + C150870 * C151012));
    const double C2398 =
        2 * C151078 * C150768 + C151078 * (C150768 + C150809 * C151085);
    const double C2403 = 3 * (C150768 + C150809 * C151085) +
                         C151078 * (2 * C151078 * C150809 +
                                    C151078 * (C150809 + C150870 * C151085));
    const double C151793 = C150761 + C151792;
    const double C151807 = 2 * C151805;
    const double C9384 =
        3 * (C151786 + C151805 * C151085) +
        C151078 * (2 * C151078 * C151805 +
                   C151078 * (C151805 + C151005 * C150861 * C151085));
    const double C151835 = C150761 + C151834;
    const double C151849 = 2 * C151847;
    const double C150823 = C150718 * C150819;
    const double C150850 = 2 * C150819;
    const double C150842 = ae * C150819;
    const double C151039 = C151005 * C150819;
    const double C151112 = C151078 * C150819;
    const double C151550 = C150819 * C151012;
    const double C151622 = C150819 * C151085;
    const double C1323 = (3 * (C150749 + C150775 * C151012) +
                          C151005 * (2 * C151005 * C150775 +
                                     C151005 * (C150775 + C150819 * C151012))) /
                         C150613;
    const double C1513 = (C150749 + C150775 * C151012 +
                          (C150775 + C150819 * C151012) * C151085) /
                         C150613;
    const double C2005 = (C151078 * (2 * C151005 * C150775 +
                                     C151005 * (C150775 + C150819 * C151012))) /
                         C150613;
    const double C2415 = (3 * (C150749 + C150775 * C151085) +
                          C151078 * (2 * C151078 * C150775 +
                                     C151078 * (C150775 + C150819 * C151085))) /
                         C150613;
    const double C150822 = C150718 * C150818;
    const double C151015 = C150818 * C151012;
    const double C151020 = C151005 * C150818;
    const double C151088 = C150818 * C151085;
    const double C151093 = C151078 * C150818;
    const double C368 =
        (C150748 + C150774 * C151012 + ae * (C150749 + C150775 * C151012) +
         be * (C150750 + C150776 * C151012) +
         C150718 * (ae * (C150743 + C150766 * C151012) +
                    be * (C150744 + C150769 * C151012) +
                    C150718 * (C150774 + C150818 * C151012))) /
        C150617;
    const double C565 =
        (C150748 + C150774 * C151085 + ae * (C150749 + C150775 * C151085) +
         be * (C150750 + C150776 * C151085) +
         C150718 * (ae * (C150743 + C150766 * C151085) +
                    be * (C150744 + C150769 * C151085) +
                    C150718 * (C150774 + C150818 * C151085))) /
        C150617;
    const double C151802 = C151005 * C151801;
    const double C151867 = 3 * C151801;
    const double C9382 =
        2 * C151078 * C151796 + C151078 * (C151796 + C151801 * C151085);
    const double C9385 =
        3 * (C151796 + C151801 * C151085) +
        C151078 *
            (2 * C151078 * C151801 +
             C151078 * (C151801 + (C150790 + C150846 * C151012) * C151085));
    const double C151844 = C151078 * C151843;
    const double C151891 = 3 * C151843;
    const double C151861 = C151798 + C151860;
    const double C151882 = 2 * C151880;
    const double C150887 = C150718 * C150882;
    const double C150933 = 2 * C150882;
    const double C150919 = be * C150882;
    const double C151057 = C150882 * C151012;
    const double C151130 = C150882 * C151085;
    const double C151155 = C151005 * C150882;
    const double C151181 = C151078 * C150882;
    const double C151069 = be * C151064;
    const double C151271 = C151005 * C151064;
    const double C151281 = C151078 * C151064;
    const double C151697 = C151064 * C151085;
    const double C9396 = (3 * (C151560 + C151031 * C151085) +
                          C151078 * (2 * C151078 * C151031 +
                                     C151078 * (C151031 + C151064 * C151085))) /
                         C150613;
    const double C151142 = be * C151137;
    const double C151326 = C151078 * C151137;
    const double C151225 = be * C151220;
    const double C151315 = C151042 + C151312;
    const double C150884 = C150718 * C150880;
    const double C150927 = 2 * C150880;
    const double C150918 = ae * C150880;
    const double C151056 = C150880 * C151012;
    const double C151129 = C150880 * C151085;
    const double C151154 = C151005 * C150880;
    const double C151180 = C151078 * C150880;
    const double C151068 = ae * C151063;
    const double C151269 = C151005 * C151063;
    const double C151280 = C151078 * C151063;
    const double C151694 = C151063 * C151085;
    const double C9395 = (3 * (C151557 + C151030 * C151085) +
                          C151078 * (2 * C151078 * C151030 +
                                     C151078 * (C151030 + C151063 * C151085))) /
                         C150613;
    const double C151141 = ae * C151136;
    const double C151324 = C151078 * C151136;
    const double C151168 = C151163 + C151164;
    const double C151224 = ae * C151219;
    const double C151314 = C151041 + C151311;
    const double C151194 = C151189 + C151190;
    const double C150883 = C150718 * C150879;
    const double C151029 = C150879 * C151012;
    const double C151043 = C151005 * C150879;
    const double C151102 = C150879 * C151085;
    const double C151116 = C151078 * C150879;
    const double C150968 = C150718 * C150963;
    const double C150959 = C150951 * ae;
    const double C150957 = C150718 * C150951;
    const double C150956 = C150951 * be;
    const double C150965 = C150718 * C150961;
    const double C150964 = C150718 * C150960;
    const double C151060 = C150960 * C151012;
    const double C151133 = C150960 * C151085;
    const double C151158 = C151005 * C150960;
    const double C151184 = C151078 * C150960;
    const double C151568 = C151566 + C151567;
    const double C151640 = C151638 + C151639;
    const double C151036 = C151033 + C151034;
    const double C151564 = C151562 + C151563;
    const double C151214 = C151211 + C151212;
    const double C151109 = C151106 + C151107;
    const double C151636 = C151634 + C151635;
    const double C150881 = C150851 + C150876;
    const double C151819 = C150809 + C151818;
    const double C151857 = C150809 + C151856;
    const double C151809 = C151005 * C151808;
    const double C151851 = C151078 * C151850;
    const double C151865 = C151805 + C151864;
    const double C151872 = C151868 + C151871;
    const double C151889 = C151801 + C151888;
    const double C151885 = C151078 * C151884;
    const double C151897 = C151894 + C151896;
    const double C151943 = C151942 / C151933;
    const double C152317 = 2 * C152272;
    const double C151952 = C151951 / C151930;
    const double C152321 = C152276 / C151948;
    const double C152352 = C152270 - C152316;
    const double C3181 = -C152316;
    const double C152370 = C152351 + C151940;
    const double C152025 = C152024 / C151933;
    const double C152325 = 2 * C152281;
    const double C152032 = C152031 / C151930;
    const double C152335 = C152290 / C151948;
    const double C152360 = C152284 - C152332;
    const double C3041 = -C152332;
    const double C152373 = C152356 + C152021;
    const double C152067 = C152066 / C151933;
    const double C152328 = 2 * C152283;
    const double C152074 = C152073 / C151930;
    const double C152341 = C152296 / C151948;
    const double C152363 = C152285 - C152338;
    const double C4047 = -C152338;
    const double C152374 = C152358 + C152063;
    const double C152344 = C152304 / C150617;
    const double C152345 = C152306 / C150613;
    const double C50892 = -C152343;
    const double C152347 = C152308 / C150617;
    const double C152348 = C152310 / C150613;
    const double C101464 = -C152346;
    const double C73864 = C150632 * C343;
    const double C73862 = C150632 * C342;
    const double C82842 = C150632 * C540;
    const double C82840 = C150632 * C539;
    const double C140 =
        (C150632 / C150618 - (0 * be) / C150613) / C150618 + (0 * ae) / C150613;
    const double C23132 = C150632 / C150618 - (0 * be) / C150613;
    const double C50898 = C150632 / C150618 + (0 * ae) / C150613;
    const double C150634 = C150631 / C150613;
    const double C6258 = C6031 * C343;
    const double C6256 = C6031 * C342;
    const double C15151 = C6031 * C540;
    const double C15149 = C6031 * C539;
    const double C59588 = C59421 * C343;
    const double C59586 = C59421 * C342;
    const double C59584 = C59421 * C1322;
    const double C59582 = C59421 * C1321;
    const double C59580 = C59421 * C1320;
    const double C59578 = C59421 * C1319;
    const double C59576 = C59421 * C347;
    const double C59574 = C59421 * C346;
    const double C59572 = C59421 * C345;
    const double C59570 = C59421 * C344;
    const double C60300 = C59421 * C1048;
    const double C60298 = C59421 * C1047;
    const double C60296 = C59421 * C1510;
    const double C60294 = C59421 * C1509;
    const double C60292 = C59421 * C2004;
    const double C60290 = C59421 * C2003;
    const double C60766 = C59421 * C1512;
    const double C60764 = C59421 * C1511;
    const double C60762 = C59421 * C1502;
    const double C60760 = C59421 * C1501;
    const double C62152 = C59421 * C2900;
    const double C62150 = C59421 * C2899;
    const double C65734 = C59421 * C540;
    const double C65732 = C59421 * C539;
    const double C65730 = C59421 * C2412;
    const double C65728 = C59421 * C2411;
    const double C65726 = C59421 * C544;
    const double C65724 = C59421 * C543;
    const double C65722 = C59421 * C542;
    const double C65720 = C59421 * C541;
    const double C67083 = C59421 * C9392;
    const double C67081 = C59421 * C9391;
    const double C68360 = C59421 * C2414;
    const double C68358 = C59421 * C2413;
    const double C152349 = C152261 - C152311;
    const double C152350 = C152265 - C152313;
    const double C6255 = C6024 * C365;
    const double C15148 = C6024 * C562;
    const double C6282 = C6031 * C341;
    const double C59604 = C59421 * C341;
    const double C73888 = C150632 * C341;
    const double C6266 = C6031 * C349;
    const double C59592 = C59421 * C349;
    const double C73872 = C150632 * C349;
    const double C15175 = C6031 * C538;
    const double C65750 = C59421 * C538;
    const double C82858 = C150632 * C538;
    const double C15159 = C6031 * C546;
    const double C65738 = C59421 * C546;
    const double C82846 = C150632 * C546;
    const double C7318 = C6031 * C1050;
    const double C60304 = C59421 * C1050;
    const double C74924 = C150632 * C1050;
    const double C6280 = C6031 * C340;
    const double C59602 = C59421 * C340;
    const double C73886 = C150632 * C340;
    const double C6264 = C6031 * C348;
    const double C59590 = C59421 * C348;
    const double C73870 = C150632 * C348;
    const double C15173 = C6031 * C537;
    const double C65748 = C59421 * C537;
    const double C82856 = C150632 * C537;
    const double C15157 = C6031 * C545;
    const double C65736 = C59421 * C545;
    const double C82844 = C150632 * C545;
    const double C7316 = C6031 * C1049;
    const double C60302 = C59421 * C1049;
    const double C74922 = C150632 * C1049;
    const double C6279 = C6024 * C364;
    const double C6259 = C151913 * C364;
    const double C51146 = C50889 * C364;
    const double C51126 = C50890 * C364;
    const double C59589 = C151908 * C364;
    const double C73885 = C152263 * C364;
    const double C73865 = C151913 * C364;
    const double C6263 = C6024 * C366;
    const double C51142 = C50889 * C366;
    const double C59577 = C151908 * C366;
    const double C73869 = C152263 * C366;
    const double C15172 = C6024 * C561;
    const double C15152 = C151913 * C561;
    const double C65735 = C151908 * C561;
    const double C82855 = C152263 * C561;
    const double C82843 = C151913 * C561;
    const double C101930 = C50889 * C561;
    const double C101910 = C50890 * C561;
    const double C15156 = C6024 * C563;
    const double C65727 = C151908 * C563;
    const double C82851 = C152263 * C563;
    const double C101926 = C50889 * C563;
    const double C7323 = C6024 * C1059;
    const double C52173 = C50889 * C1059;
    const double C60301 = C151908 * C1059;
    const double C74929 = C152263 * C1059;
    const double C150782 = C150744 + C150779;
    const double C6270 = C6031 * C1318;
    const double C59596 = C59421 * C1318;
    const double C73876 = C150632 * C1318;
    const double C8029 = C6031 * C1500;
    const double C61864 = C59421 * C1500;
    const double C75595 = C150632 * C1500;
    const double C7310 = C6031 * C1508;
    const double C60308 = C59421 * C1508;
    const double C74916 = C150632 * C1508;
    const double C15163 = C6031 * C2410;
    const double C65742 = C59421 * C2410;
    const double C86268 = C150632 * C2410;
    const double C60596 = C59421 * C7738;
    const double C62148 = C59421 * C9390;
    const double C68368 = C59421 * C17795;
    const double C150781 = C150743 + C150778;
    const double C150796 = C150774 + C150786;
    const double C6268 = C6031 * C1317;
    const double C59594 = C59421 * C1317;
    const double C73874 = C150632 * C1317;
    const double C8027 = C6031 * C1499;
    const double C61862 = C59421 * C1499;
    const double C75593 = C150632 * C1499;
    const double C7308 = C6031 * C1507;
    const double C60306 = C59421 * C1507;
    const double C74914 = C150632 * C1507;
    const double C15161 = C6031 * C2409;
    const double C65740 = C59421 * C2409;
    const double C86266 = C150632 * C2409;
    const double C60594 = C59421 * C7737;
    const double C62146 = C59421 * C9389;
    const double C68366 = C59421 * C17794;
    const double C150780 = C150757 + C150777;
    const double C363 =
        (C151005 * C150748 + ae * C151005 * C150749 + be * C151005 * C150750 +
         C150718 * (ae * C151005 * C150743 + be * C151005 * C150744 +
                    C150718 * C151006)) /
        C150617;
    const double C1060 =
        (ae * C151078 * C151005 * C150743 + be * C151078 * C151005 * C150744 +
         C150718 * C151078 * C151006) /
        C150617;
    const double C1522 = (C151005 * C150748 + C151006 * C151085) / C150617;
    const double C560 =
        (C151078 * C150748 + ae * C151078 * C150749 + be * C151078 * C150750 +
         C150718 * (ae * C151078 * C150743 + be * C151078 * C150744 +
                    C150718 * C151079)) /
        C150617;
    const double C6287 = C6024 * C367;
    const double C6267 = C151913 * C367;
    const double C51158 = C50889 * C367;
    const double C51138 = C50890 * C367;
    const double C59593 = C151908 * C367;
    const double C73893 = C152263 * C367;
    const double C73873 = C151913 * C367;
    const double C15180 = C6024 * C564;
    const double C15160 = C151913 * C564;
    const double C65739 = C151908 * C564;
    const double C82863 = C152263 * C564;
    const double C82847 = C151913 * C564;
    const double C101942 = C50889 * C564;
    const double C101922 = C50890 * C564;
    const double C6275 = C6024 * C1332;
    const double C52568 = C50889 * C1332;
    const double C59581 = C151908 * C1332;
    const double C73881 = C152263 * C1332;
    const double C7315 = C6024 * C1526;
    const double C52840 = C50889 * C1526;
    const double C60297 = C151908 * C1526;
    const double C74921 = C152263 * C1526;
    const double C15168 = C6024 * C2424;
    const double C65731 = C151908 * C2424;
    const double C86265 = C152263 * C2424;
    const double C104525 = C50889 * C2424;
    const double C150827 = C150769 + C150824;
    const double C151045 = be * C151040;
    const double C151574 = 2 * C151040;
    const double C2902 =
        (2 * C151078 * C151540 + C151078 * (C151540 + C151040 * C151085)) /
        C150613;
    const double C151118 = be * C151113;
    const double C151646 = 2 * C151113;
    const double C151554 = C150776 + C151553;
    const double C151626 = C150776 + C151625;
    const double C7755 = C6031 * C1324;
    const double C59600 = C59421 * C1324;
    const double C75345 = C150632 * C1324;
    const double C8037 = C6031 * C1514;
    const double C61860 = C59421 * C1514;
    const double C75603 = C150632 * C1514;
    const double C8045 = C6031 * C2006;
    const double C60312 = C59421 * C2006;
    const double C75611 = C150632 * C2006;
    const double C17812 = C6031 * C2416;
    const double C68875 = C59421 * C2416;
    const double C86280 = C150632 * C2416;
    const double C150820 = C150794 + C150815;
    const double C2897 = 2 * C151078 * C151788 +
                         C151078 * (C151788 + C151005 * C150870 * C151085);
    const double C18124 =
        3 * (C151788 + C151854 * C151085) +
        C151078 * (2 * C151078 * C151854 +
                   C151078 * (C151854 + C151005 * C150951 * C151085));
    const double C7731 =
        4 * (2 * C151786 + C151005 * C151793) +
        C151005 *
            (3 * C151793 + C151005 * (2 * C151005 * C150801 +
                                      C151005 * (C150801 + C150861 * C151012)));
    const double C9381 =
        2 * C151078 * C151793 + C151078 * (C151793 + C151808 * C151085);
    const double C9386 =
        3 * (C151793 + C151808 * C151085) +
        C151078 *
            (2 * C151078 * C151808 +
             C151078 * (C151808 + (C150861 + C150941 * C151012) * C151085));
    const double C17788 =
        4 * (2 * C151078 * C150761 + C151078 * C151835) +
        C151078 *
            (3 * C151835 + C151078 * (2 * C151078 * C150801 +
                                      C151078 * (C150801 + C150861 * C151085)));
    const double C150826 = C150766 + C150823;
    const double C150856 = C150818 + C150842;
    const double C151044 = ae * C151039;
    const double C151570 = 2 * C151039;
    const double C2901 =
        (2 * C151078 * C151538 + C151078 * (C151538 + C151039 * C151085)) /
        C150613;
    const double C151117 = ae * C151112;
    const double C151642 = 2 * C151112;
    const double C151551 = C150775 + C151550;
    const double C151623 = C150775 + C151622;
    const double C7753 = C6031 * C1323;
    const double C59598 = C59421 * C1323;
    const double C75343 = C150632 * C1323;
    const double C8035 = C6031 * C1513;
    const double C61858 = C59421 * C1513;
    const double C75601 = C150632 * C1513;
    const double C8043 = C6031 * C2005;
    const double C60310 = C59421 * C2005;
    const double C75609 = C150632 * C2005;
    const double C17810 = C6031 * C2415;
    const double C68873 = C59421 * C2415;
    const double C86278 = C150632 * C2415;
    const double C150825 = C150797 + C150822;
    const double C151016 = C150774 + C151015;
    const double C151023 = C150718 * C151020;
    const double C151206 = C151078 * C151020;
    const double C151234 = 2 * C151020;
    const double C1061 =
        (C151078 * C151006 + ae * C151078 * C151005 * C150775 +
         be * C151078 * C151005 * C150776 +
         C150718 * (ae * C151078 * C151018 + be * C151078 * C151019 +
                    C150718 * C151078 * C151020)) /
        C150617;
    const double C1521 = (ae * (C151005 * C150743 + C151018 * C151085) +
                          be * (C151005 * C150744 + C151019 * C151085) +
                          C150718 * (C151006 + C151020 * C151085)) /
                         C150617;
    const double C2907 =
        (2 * C151078 * C151006 + C151078 * (C151006 + C151020 * C151085)) /
        C150617;
    const double C151089 = C150774 + C151088;
    const double C151096 = C150718 * C151093;
    const double C151294 = 2 * C151093;
    const double C6311 = C6024 * C368;
    const double C6291 = C151913 * C368;
    const double C23368 = C23125 * C368;
    const double C51190 = C50889 * C368;
    const double C51162 = C50890 * C368;
    const double C51134 = C50891 * C368;
    const double C59609 = C151908 * C368;
    const double C73917 = C152263 * C368;
    const double C73897 = C151913 * C368;
    const double C15204 = C6024 * C565;
    const double C15184 = C151913 * C565;
    const double C32144 = C23125 * C565;
    const double C65755 = C151908 * C565;
    const double C82891 = C152263 * C565;
    const double C82867 = C151913 * C565;
    const double C101974 = C50889 * C565;
    const double C101946 = C50890 * C565;
    const double C101918 = C50891 * C565;
    const double C151803 = C151800 + C151802;
    const double C151845 = C151842 + C151844;
    const double C18550 =
        4 * (2 * C151078 * C151798 + C151078 * C151861) +
        C151078 *
            (3 * C151861 +
             C151078 * (2 * C151078 * C151859 +
                        C151078 * (C151859 + C151005 * C150846 * C151085)));
    const double C150892 = C150810 + C150887;
    const double C151062 = C150821 + C151057;
    const double C151135 = C150821 + C151130;
    const double C151162 = be * C151155;
    const double C151218 = C151078 * C151155;
    const double C151667 = C151155 * C151085;
    const double C9394 = (3 * (C151540 + C151040 * C151085) +
                          C151078 * (2 * C151078 * C151040 +
                                     C151078 * (C151040 + C151155 * C151085))) /
                         C150613;
    const double C151188 = be * C151181;
    const double C151274 = C151270 + C151271;
    const double C151284 = be * C151281;
    const double C151698 = C151031 + C151697;
    const double C67090 = C59421 * C9396;
    const double C151329 = C151325 + C151326;
    const double C151318 = be * C151315;
    const double C151691 = C151078 * C151315;
    const double C18553 =
        (4 * (2 * C151078 * C151019 + C151078 * C151662) +
         C151078 *
             (3 * C151662 + C151078 * (2 * C151209 + C151078 * C151315))) /
        C150613;
    const double C150890 = C150807 + C150884;
    const double C150936 = C150879 + C150918;
    const double C151061 = C150819 + C151056;
    const double C151134 = C150819 + C151129;
    const double C151161 = ae * C151154;
    const double C151217 = C151078 * C151154;
    const double C151664 = C151154 * C151085;
    const double C9393 = (3 * (C151538 + C151039 * C151085) +
                          C151078 * (2 * C151078 * C151039 +
                                     C151078 * (C151039 + C151154 * C151085))) /
                         C150613;
    const double C151187 = ae * C151180;
    const double C151072 = C151068 + C151069;
    const double C151273 = C151268 + C151269;
    const double C151283 = ae * C151280;
    const double C151695 = C151030 + C151694;
    const double C67088 = C59421 * C9395;
    const double C151145 = C151141 + C151142;
    const double C151328 = C151323 + C151324;
    const double C151228 = C151224 + C151225;
    const double C151317 = ae * C151314;
    const double C151687 = C151078 * C151314;
    const double C18552 =
        (4 * (2 * C151078 * C151018 + C151078 * C151659) +
         C151078 *
             (3 * C151659 + C151078 * (2 * C151208 + C151078 * C151314))) /
        C150613;
    const double C150889 = C150857 + C150883;
    const double C151032 = C150818 + C151029;
    const double C151048 = C150718 * C151043;
    const double C151210 = C151078 * C151043;
    const double C151245 = 2 * C151043;
    const double C151251 = C151043 * C151085;
    const double C151105 = C150818 + C151102;
    const double C151121 = C150718 * C151116;
    const double C151305 = 2 * C151116;
    const double C150973 = C150871 + C150968;
    const double C150962 = C150928 + C150957;
    const double C150971 = C150868 + C150965;
    const double C150970 = C150937 + C150964;
    const double C151065 = C150879 + C151060;
    const double C151138 = C150879 + C151133;
    const double C151165 = C150718 * C151158;
    const double C151221 = C151078 * C151158;
    const double C151313 = C151158 * C151085;
    const double C151191 = C150718 * C151184;
    const double C8006 =
        (2 * C151536 + C151005 * C151560 + C151568 * C151085) / C150613;
    const double C8010 =
        (C151078 * (3 * C151560 + C151005 * C151568)) / C150613;
    const double C8005 =
        (2 * C151534 + C151005 * C151557 + C151564 * C151085) / C150613;
    const double C8009 =
        (C151078 * (3 * C151557 + C151005 * C151564)) / C150613;
    const double C150888 = C150881 * ae;
    const double C150886 = C150718 * C150881;
    const double C150885 = C150881 * be;
    const double C150930 = 4 * C150881;
    const double C151790 = C151005 * C150881;
    const double C8275 =
        4 * (2 * C151788 + C151005 * C151819) +
        C151005 *
            (3 * C151819 + C151005 * (2 * C151005 * C150870 +
                                      C151005 * (C150870 + C150951 * C151012)));
    const double C8585 =
        C151078 *
        (3 * C151819 + C151005 * (2 * C151005 * C150870 +
                                  C151005 * (C150870 + C150951 * C151012)));
    const double C9695 =
        2 * C151788 + C151005 * C151819 +
        (2 * C151005 * C150870 + C151005 * (C150870 + C150951 * C151012)) *
            C151085;
    const double C9921 =
        2 * C151078 * C151819 +
        C151078 * (C151819 + (C150870 + C150951 * C151012) * C151085);
    const double C18337 =
        4 * (2 * C151078 * C150809 + C151078 * C151857) +
        C151078 *
            (3 * C151857 + C151078 * (2 * C151078 * C150870 +
                                      C151078 * (C150870 + C150951 * C151085)));
    const double C151810 = C151807 + C151809;
    const double C151852 = C151849 + C151851;
    const double C18551 =
        4 * (2 * C151078 * C151805 + C151078 * C151865) +
        C151078 *
            (3 * C151865 +
             C151078 * (2 * C151078 * C151863 +
                        C151078 * (C151863 + C151005 * C150941 * C151085)));
    const double C151873 = C151005 * C151872;
    const double C69073 =
        4 * (2 * C151078 * C151801 + C151078 * C151889) +
        C151078 *
            (3 * C151889 +
             C151078 * (2 * C151078 * C151870 +
                        C151078 * (C151870 +
                                   (C150846 + C150922 * C151012) * C151085)));
    const double C151886 = C151882 + C151885;
    const double C151898 = C151078 * C151897;
    const double C151944 = C151940 - C151943;
    const double C152353 = C152317 / C151930;
    const double C151953 = C151949 - C151952;
    const double C152371 = C152352 / C151934;
    const double C152026 = C152021 - C152025;
    const double C152357 = C152325 / C151930;
    const double C152033 = C152029 - C152032;
    const double C152375 = C152360 / C151934;
    const double C152068 = C152063 - C152067;
    const double C152359 = C152328 / C151930;
    const double C152075 = C152071 - C152074;
    const double C152377 = C152363 / C151934;
    const double C152366 = C152298 - C152344;
    const double C152367 = C152305 - C152345;
    const double C152368 = C152300 - C152347;
    const double C152369 = C152309 - C152348;
    const double C23363 = C23132 * C341;
    const double C23361 = C23132 * C340;
    const double C32139 = C23132 * C538;
    const double C32137 = C23132 * C537;
    const double C51129 = C50898 * C341;
    const double C51127 = C50898 * C340;
    const double C101913 = C50898 * C538;
    const double C101911 = C50898 * C537;
    const double C150636 = C151908 - C150634;
    const double C23424 = C152349 * C368;
    const double C23392 = C152349 * C367;
    const double C23380 = C152349 * C364;
    const double C23376 = C152349 * C366;
    const double C23356 = C152349 * C365;
    const double C24407 = C152349 * C1059;
    const double C24802 = C152349 * C1332;
    const double C25074 = C152349 * C1526;
    const double C32200 = C152349 * C565;
    const double C32168 = C152349 * C564;
    const double C32156 = C152349 * C561;
    const double C32152 = C152349 * C563;
    const double C32132 = C152349 * C562;
    const double C34751 = C152349 * C2424;
    const double C121 =
        (C152349 * C151903) / C150613 + (C152263 - C152312) / C150618;
    const double C23396 = C152350 * C368;
    const double C23372 = C152350 * C367;
    const double C23360 = C152350 * C364;
    const double C32172 = C152350 * C565;
    const double C32148 = C152350 * C564;
    const double C32136 = C152350 * C561;
    const double C122 =
        (C152350 * C151903) / C150613 + (2 * C151913 + C152349) / C150618;
    const double C123 = (C151903 * C151913) / C150622 + C152350 / C150618;
    const double C150784 = C150782 + C150770;
    const double C150783 = C150781 + C150767;
    const double C150805 = C150796 + C150787;
    const double C6303 = C6024 * C363;
    const double C6283 = C151913 * C363;
    const double C23404 = C152349 * C363;
    const double C23384 = C152350 * C363;
    const double C23364 = C23125 * C363;
    const double C51170 = C50889 * C363;
    const double C51150 = C50890 * C363;
    const double C51130 = C50891 * C363;
    const double C59605 = C151908 * C363;
    const double C73909 = C152263 * C363;
    const double C73889 = C151913 * C363;
    const double C7327 = C6024 * C1060;
    const double C7319 = C151913 * C1060;
    const double C24411 = C152349 * C1060;
    const double C24403 = C152350 * C1060;
    const double C52177 = C50889 * C1060;
    const double C52169 = C50890 * C1060;
    const double C60305 = C151908 * C1060;
    const double C74933 = C152263 * C1060;
    const double C74925 = C151913 * C1060;
    const double C8026 = C6024 * C1522;
    const double C25062 = C152349 * C1522;
    const double C52828 = C50889 * C1522;
    const double C60763 = C151908 * C1522;
    const double C75592 = C152263 * C1522;
    const double C15196 = C6024 * C560;
    const double C15176 = C151913 * C560;
    const double C32180 = C152349 * C560;
    const double C32160 = C152350 * C560;
    const double C32140 = C23125 * C560;
    const double C65751 = C151908 * C560;
    const double C82871 = C152263 * C560;
    const double C82859 = C151913 * C560;
    const double C101954 = C50889 * C560;
    const double C101934 = C50890 * C560;
    const double C101914 = C50891 * C560;
    const double C150830 = C150827 + C150811;
    const double C10138 = C6031 * C2902;
    const double C65746 = C59421 * C2902;
    const double C77648 = C150632 * C2902;
    const double C147 = 4 * (2 * C150739 + C150718 * C150768) +
                        C150718 * (3 * C150768 + C150718 * C150820);
    const double C333 = 2 * C150739 + C150718 * C150768 + C150820 * C151012;
    const double C334 = C151005 * (3 * C150768 + C150718 * C150820);
    const double C530 = 2 * C150739 + C150718 * C150768 + C150820 * C151085;
    const double C531 = C151078 * (3 * C150768 + C150718 * C150820);
    const double C1044 = C151078 * C151005 * C150820;
    const double C1305 =
        2 * C151005 * C150820 + C151005 * (C150820 + C150881 * C151012);
    const double C1483 = C151005 * C150820 + C151005 * C150881 * C151085;
    const double C1487 = C151078 * (C150820 + C150881 * C151012);
    const double C2397 =
        2 * C151078 * C150820 + C151078 * (C150820 + C150881 * C151085);
    const double C150829 = C150826 + C150808;
    const double C150866 = C150856 + C150843;
    const double C151049 = C151020 + C151044;
    const double C10136 = C6031 * C2901;
    const double C65744 = C59421 * C2901;
    const double C77646 = C150632 * C2901;
    const double C151122 = C151093 + C151117;
    const double C150828 = C150718 * C150825;
    const double C150839 = 2 * C150825;
    const double C1331 =
        (ae *
             (2 * C151005 * C150743 + C151005 * (C150743 + C150766 * C151012)) +
         be *
             (2 * C151005 * C150744 + C151005 * (C150744 + C150769 * C151012)) +
         C150718 * (2 * C151006 + C151005 * C151016)) /
        C150617;
    const double C1333 = (3 * (C150748 + C150774 * C151012) +
                          C151005 * (2 * C151006 + C151005 * C151016)) /
                         C150617;
    const double C1525 = (ae * C151078 * (C150743 + C150766 * C151012) +
                          be * C151078 * (C150744 + C150769 * C151012) +
                          C150718 * C151078 * C151016) /
                         C150617;
    const double C1527 =
        (C150748 + C150774 * C151012 + C151016 * C151085) / C150617;
    const double C2011 =
        (C151078 * (2 * C151006 + C151005 * C151016)) / C150617;
    const double C151025 = C151024 + C151023;
    const double C7355 = C6024 * C1061;
    const double C7331 = C151913 * C1061;
    const double C24431 = C152349 * C1061;
    const double C24415 = C152350 * C1061;
    const double C24399 = C23125 * C1061;
    const double C52197 = C50889 * C1061;
    const double C52181 = C50890 * C1061;
    const double C52165 = C50891 * C1061;
    const double C60325 = C151908 * C1061;
    const double C74961 = C152263 * C1061;
    const double C74937 = C151913 * C1061;
    const double C8030 = C151913 * C1521;
    const double C9715 = C6024 * C1521;
    const double C25066 = C152350 * C1521;
    const double C26722 = C152349 * C1521;
    const double C52832 = C50890 * C1521;
    const double C54488 = C50889 * C1521;
    const double C61865 = C151908 * C1521;
    const double C75596 = C151913 * C1521;
    const double C77237 = C152263 * C1521;
    const double C10143 = C6024 * C2907;
    const double C27131 = C152349 * C2907;
    const double C54897 = C50889 * C2907;
    const double C62153 = C151908 * C2907;
    const double C77653 = C152263 * C2907;
    const double C2423 =
        (ae *
             (2 * C151078 * C150743 + C151078 * (C150743 + C150766 * C151085)) +
         be *
             (2 * C151078 * C150744 + C151078 * (C150744 + C150769 * C151085)) +
         C150718 * (2 * C151079 + C151078 * C151089)) /
        C150617;
    const double C2425 = (3 * (C150748 + C150774 * C151085) +
                          C151078 * (2 * C151079 + C151078 * C151089)) /
                         C150617;
    const double C151098 = C151097 + C151096;
    const double C7733 =
        5 * (3 * C151796 + C151005 * C151803) +
        C151005 *
            (4 * C151803 +
             C151005 * (3 * C151801 +
                        C151005 * (2 * C151005 * C150790 +
                                   C151005 * (C150790 + C150846 * C151012))));
    const double C7998 = 2 * C151784 + C151005 * C151796 + C151803 * C151085;
    const double C8000 = C151078 * (3 * C151796 + C151005 * C151803);
    const double C8001 =
        3 * C151796 + C151005 * C151803 +
        (3 * C151801 + C151005 * (2 * C151005 * C150790 +
                                  C151005 * (C150790 + C150846 * C151012))) *
            C151085;
    const double C8799 =
        C151078 *
        (4 * C151803 +
         C151005 * (3 * C151801 +
                    C151005 * (2 * C151005 * C150790 +
                               C151005 * (C150790 + C150846 * C151012))));
    const double C10119 =
        2 * C151078 * C151803 +
        C151078 * (C151803 + (2 * C151005 * C150790 +
                              C151005 * (C150790 + C150846 * C151012)) *
                                 C151085);
    const double C61655 =
        3 * (C151803 + C151872 * C151085) +
        C151078 *
            (2 * C151078 * C151872 +
             C151078 * (C151872 + (2 * C151005 * C150846 +
                                   C151005 * (C150846 + C150922 * C151012)) *
                                      C151085));
    const double C17790 =
        5 * (3 * C151838 + C151078 * C151845) +
        C151078 *
            (4 * C151845 +
             C151078 * (3 * C151843 +
                        C151078 * (2 * C151078 * C150790 +
                                   C151078 * (C150790 + C150846 * C151085))));
    const double C150895 = C150892 + C150872;
    const double C151067 = be * C151062;
    const double C151575 = C151005 * C151062;
    const double C7736 =
        (4 * (2 * C151540 + C151005 * C151554) +
         C151005 *
             (3 * C151554 + C151005 * (2 * C151040 + C151005 * C151062))) /
        C150613;
    const double C9388 =
        (2 * C151078 * C151554 + C151078 * (C151554 + C151062 * C151085)) /
        C150613;
    const double C9398 =
        (3 * (C151554 + C151062 * C151085) +
         C151078 *
             (2 * C151078 * C151062 +
              C151078 * (C151062 + (C150882 + C150963 * C151012) * C151085))) /
        C150613;
    const double C151140 = be * C151135;
    const double C151647 = C151078 * C151135;
    const double C17793 =
        (4 * (2 * C151078 * C150776 + C151078 * C151626) +
         C151078 *
             (3 * C151626 + C151078 * (2 * C151113 + C151078 * C151135))) /
        C150613;
    const double C151223 = be * C151218;
    const double C151668 = C151040 + C151667;
    const double C18562 = C6031 * C9394;
    const double C68671 = C59421 * C9394;
    const double C86272 = C150632 * C9394;
    const double C151276 = be * C151274;
    const double C151675 = C151005 * C151274;
    const double C7740 =
        (5 * (3 * C151560 + C151005 * C151568) +
         C151005 *
             (4 * C151568 + C151005 * (3 * C151031 + C151005 * C151274))) /
        C150613;
    const double C8012 = (3 * C151560 + C151005 * C151568 +
                          (3 * C151031 + C151005 * C151274) * C151085) /
                         C150613;
    const double C8802 =
        (C151078 *
         (4 * C151568 + C151005 * (3 * C151031 + C151005 * C151274))) /
        C150613;
    const double C10122 =
        (2 * C151078 * C151568 + C151078 * (C151568 + C151274 * C151085)) /
        C150613;
    const double C61657 =
        (3 * (C151568 + C151274 * C151085) +
         C151078 *
             (2 * C151078 * C151274 +
              C151078 * (C151274 + (2 * C151157 +
                                    C151005 * (C150871 + C150952 * C151012)) *
                                       C151085))) /
        C150613;
    const double C69075 =
        (4 * (2 * C151078 * C151031 + C151078 * C151698) +
         C151078 *
             (3 * C151698 +
              C151078 * (2 * C151281 +
                         C151078 * (C151064 + (C150871 + C150952 * C151012) *
                                                  C151085)))) /
        C150613;
    const double C151331 = be * C151329;
    const double C151705 = C151078 * C151329;
    const double C17797 =
        (5 * (3 * C151632 + C151078 * C151640) +
         C151078 *
             (4 * C151640 + C151078 * (3 * C151104 + C151078 * C151329))) /
        C150613;
    const double C151692 = C151690 + C151691;
    const double C68364 = C59421 * C18553;
    const double C150894 = C150890 + C150869;
    const double C150947 = C150936 + C150919;
    const double C151066 = ae * C151061;
    const double C151571 = C151005 * C151061;
    const double C7735 =
        (4 * (2 * C151538 + C151005 * C151551) +
         C151005 *
             (3 * C151551 + C151005 * (2 * C151039 + C151005 * C151061))) /
        C150613;
    const double C9387 =
        (2 * C151078 * C151551 + C151078 * (C151551 + C151061 * C151085)) /
        C150613;
    const double C9397 =
        (3 * (C151551 + C151061 * C151085) +
         C151078 *
             (2 * C151078 * C151061 +
              C151078 * (C151061 + (C150880 + C150961 * C151012) * C151085))) /
        C150613;
    const double C151139 = ae * C151134;
    const double C151643 = C151078 * C151134;
    const double C17792 =
        (4 * (2 * C151078 * C150775 + C151078 * C151623) +
         C151078 *
             (3 * C151623 + C151078 * (2 * C151112 + C151078 * C151134))) /
        C150613;
    const double C151167 = C151043 + C151161;
    const double C151222 = ae * C151217;
    const double C151665 = C151039 + C151664;
    const double C18560 = C6031 * C9393;
    const double C68669 = C59421 * C9393;
    const double C86270 = C150632 * C9393;
    const double C151193 = C151116 + C151187;
    const double C151275 = ae * C151273;
    const double C151671 = C151005 * C151273;
    const double C7739 =
        (5 * (3 * C151557 + C151005 * C151564) +
         C151005 *
             (4 * C151564 + C151005 * (3 * C151030 + C151005 * C151273))) /
        C150613;
    const double C8011 = (3 * C151557 + C151005 * C151564 +
                          (3 * C151030 + C151005 * C151273) * C151085) /
                         C150613;
    const double C8801 =
        (C151078 *
         (4 * C151564 + C151005 * (3 * C151030 + C151005 * C151273))) /
        C150613;
    const double C10121 =
        (2 * C151078 * C151564 + C151078 * (C151564 + C151273 * C151085)) /
        C150613;
    const double C61656 =
        (3 * (C151564 + C151273 * C151085) +
         C151078 *
             (2 * C151078 * C151273 +
              C151078 * (C151273 + (2 * C151156 +
                                    C151005 * (C150868 + C150949 * C151012)) *
                                       C151085))) /
        C150613;
    const double C151286 = C151283 + C151284;
    const double C69074 =
        (4 * (2 * C151078 * C151030 + C151078 * C151695) +
         C151078 *
             (3 * C151695 +
              C151078 * (2 * C151280 +
                         C151078 * (C151063 + (C150868 + C150949 * C151012) *
                                                  C151085)))) /
        C150613;
    const double C151330 = ae * C151328;
    const double C151701 = C151078 * C151328;
    const double C17796 =
        (5 * (3 * C151629 + C151078 * C151636) +
         C151078 *
             (4 * C151636 + C151078 * (3 * C151103 + C151078 * C151328))) /
        C150613;
    const double C151320 = C151317 + C151318;
    const double C151688 = C151686 + C151687;
    const double C68362 = C59421 * C18552;
    const double C150893 = C150718 * C150889;
    const double C150915 = 2 * C150889;
    const double C151035 = C150718 * C151032;
    const double C151235 = C151005 * C151032;
    const double C151244 = 3 * C151032;
    const double C151257 = C151078 * C151032;
    const double C1528 =
        (ae * (C150743 + C150766 * C151012 + C151030 * C151085) +
         be * (C150744 + C150769 * C151012 + C151031 * C151085) +
         C150718 * (C151016 + C151032 * C151085)) /
        C150617;
    const double C9400 =
        (2 * C151078 * C151016 + C151078 * (C151016 + C151032 * C151085)) /
        C150617;
    const double C151052 = C151050 + C151048;
    const double C151213 = C150718 * C151210;
    const double C151338 = 2 * C151210;
    const double C151252 = C151020 + C151251;
    const double C151108 = C150718 * C151105;
    const double C151295 = C151078 * C151105;
    const double C151304 = 3 * C151105;
    const double C151125 = C151123 + C151121;
    const double C150978 = C150973 + C150953;
    const double C150969 = C150962 * ae;
    const double C150967 = C150718 * C150962;
    const double C150966 = C150962 * be;
    const double C1312 = 3 * (C150820 + C150881 * C151012) +
                         C151005 * (2 * C151005 * C150881 +
                                    C151005 * (C150881 + C150962 * C151012));
    const double C1494 =
        C150820 + C150881 * C151012 + (C150881 + C150962 * C151012) * C151085;
    const double C2002 = C151078 * (2 * C151005 * C150881 +
                                    C151005 * (C150881 + C150962 * C151012));
    const double C2404 = 3 * (C150820 + C150881 * C151085) +
                         C151078 * (2 * C151078 * C150881 +
                                    C151078 * (C150881 + C150962 * C151085));
    const double C150975 = C150971 + C150950;
    const double C150974 = C150718 * C150970;
    const double C151070 = C150718 * C151065;
    const double C151246 = C151005 * C151065;
    const double C151265 = C151065 * C151085;
    const double C151282 = C151078 * C151065;
    const double C1529 =
        (C151016 + C151032 * C151085 +
         ae * (C150775 + C150819 * C151012 + C151061 * C151085) +
         be * (C150776 + C150821 * C151012 + C151062 * C151085) +
         C150718 * (ae * (C151030 + C151063 * C151085) +
                    be * (C151031 + C151064 * C151085) +
                    C150718 * (C151032 + C151065 * C151085))) /
        C150617;
    const double C151143 = C150718 * C151138;
    const double C151306 = C151078 * C151138;
    const double C151171 = C151168 + C151165;
    const double C151226 = C150718 * C151221;
    const double C151316 = C151043 + C151313;
    const double C151197 = C151194 + C151191;
    const double C60770 = C59421 * C8006;
    const double C60774 = C59421 * C8010;
    const double C60768 = C59421 * C8005;
    const double C60772 = C59421 * C8009;
    const double C150891 = C150852 + C150886;
    const double C2898 = 2 * C151078 * C151790 +
                         C151078 * (C151790 + C151005 * C150962 * C151085);
    const double C7734 =
        5 * (3 * C151793 + C151005 * C151810) +
        C151005 *
            (4 * C151810 +
             C151005 * (3 * C151808 +
                        C151005 * (2 * C151005 * C150861 +
                                   C151005 * (C150861 + C150941 * C151012))));
    const double C7997 = 2 * C151786 + C151005 * C151793 + C151810 * C151085;
    const double C7999 = C151078 * (3 * C151793 + C151005 * C151810);
    const double C8002 =
        3 * C151793 + C151005 * C151810 +
        (3 * C151808 + C151005 * (2 * C151005 * C150861 +
                                  C151005 * (C150861 + C150941 * C151012))) *
            C151085;
    const double C8800 =
        C151078 *
        (4 * C151810 +
         C151005 * (3 * C151808 +
                    C151005 * (2 * C151005 * C150861 +
                               C151005 * (C150861 + C150941 * C151012))));
    const double C10120 =
        2 * C151078 * C151810 +
        C151078 * (C151810 + (2 * C151005 * C150861 +
                              C151005 * (C150861 + C150941 * C151012)) *
                                 C151085);
    const double C17791 =
        5 * (3 * C151835 + C151078 * C151852) +
        C151078 *
            (4 * C151852 +
             C151078 * (3 * C151850 +
                        C151078 * (2 * C151078 * C150861 +
                                   C151078 * (C150861 + C150941 * C151085))));
    const double C151874 = C151867 + C151873;
    const double C68353 =
        5 * (3 * C151861 + C151078 * C151886) +
        C151078 *
            (4 * C151886 +
             C151078 * (3 * C151884 +
                        C151078 * (2 * C151078 * C151881 +
                                   C151078 * (C151881 +
                                              C151005 * C150922 * C151085))));
    const double C151899 = C151891 + C151898;
    const double C152269 = C151944 * C151932;
    const double C152319 = C152274 + C151944;
    const double C152277 = C151953 / C151934;
    const double C152273 = C151953 * C151932;
    const double C703 = C152371 - (C151944 * C151935) / C151930;
    const double C152287 = C152026 * C152020;
    const double C152334 = C152289 + C152026;
    const double C152291 = C152033 / C151934;
    const double C152288 = C152033 * C152020;
    const double C1661 = C152375 - (C152026 * C152022) / C151930;
    const double C152293 = C152068 * C152062;
    const double C152340 = C152295 + C152068;
    const double C152297 = C152075 / C151934;
    const double C152294 = C152075 * C152062;
    const double C2757 = C152377 - (C152068 * C152064) / C151930;
    const double C59417 =
        (C152366 * C152200) / C150613 + (C152301 - C152343) / C150618;
    const double C59418 =
        (C152367 * C152200) / C150613 + (2 * C152205 + C152366) / C150618;
    const double C59419 = (C152200 * C152205) / C150622 + C152367 / C150618;
    const double C117978 =
        (C152368 * C152226) / C150613 + (C152302 - C152346) / C150618;
    const double C117979 =
        (C152369 * C152226) / C150613 + (2 * C152231 + C152368) / C150618;
    const double C117980 = (C152226 * C152231) / C150622 + C152369 / C150618;
    const double C150637 = C150636 * ae;
    const double C150648 = C150636 * C150645;
    const double C6029 =
        (-C150614 / C150613) / C150618 - (C150636 * be) / C150613;
    const double C159 =
        (3 * (C150731 + C150718 * C150750 + C150739 * ae) +
         C150718 * (2 * C150750 + C150718 * C150784 + C150768 * ae) +
         (2 * C150739 + C150718 * C150768) * ae) /
        C150613;
    const double C339 =
        (C151005 * (2 * C150750 + C150718 * C150784 + C150768 * ae)) / C150613;
    const double C351 =
        (C150731 + C150718 * C150750 + C150739 * ae + C150784 * C151012) /
        C150613;
    const double C536 =
        (C151078 * (2 * C150750 + C150718 * C150784 + C150768 * ae)) / C150613;
    const double C548 =
        (C150731 + C150718 * C150750 + C150739 * ae + C150784 * C151085) /
        C150613;
    const double C1052 = (C151078 * C151005 * C150784) / C150613;
    const double C170 =
        (3 * (C150748 + ae * C150749 + be * C150750 + C150718 * C150780) +
         ae * (2 * C150749 + C150718 * C150783 + C150768 * be) +
         be * (2 * C150750 + C150718 * C150784 + C150768 * ae) +
         C150718 * (2 * C150780 + ae * C150783 + be * C150784 +
                    C150718 * (C150774 + ae * C150775 + be * C150776 +
                               C150718 * (ae * C150766 + be * C150769 +
                                          C150718 *
                                              (C150755 * C150756 +
                                               C150722 * bs[6] *
                                                   std::pow(C150716, 6)) *
                                              C150615)))) /
        C150617;
    const double C362 =
        (2 * (ae * C151005 * C150743 + be * C151005 * C150744 +
              C150718 * C151006) +
         ae * C151005 * C150783 + be * C151005 * C150784 +
         C150718 * (C151006 + ae * C151005 * C150775 + be * C151005 * C150776 +
                    C150718 * (ae * C151005 * C150766 + be * C151005 * C150769 +
                               C150718 * C151005 * C150818))) /
        C150617;
    const double C559 =
        (2 * (ae * C151078 * C150743 + be * C151078 * C150744 +
              C150718 * C151079) +
         ae * C151078 * C150783 + be * C151078 * C150784 +
         C150718 * (C151079 + ae * C151078 * C150775 + be * C151078 * C150776 +
                    C150718 * (ae * C151078 * C150766 + be * C151078 * C150769 +
                               C150718 * C151078 * C150818))) /
        C150617;
    const double C158 =
        (3 * (C150730 + C150718 * C150749 + C150739 * be) +
         C150718 * (2 * C150749 + C150718 * C150783 + C150768 * be) +
         (2 * C150739 + C150718 * C150768) * be) /
        C150613;
    const double C338 =
        (C151005 * (2 * C150749 + C150718 * C150783 + C150768 * be)) / C150613;
    const double C350 =
        (C150730 + C150718 * C150749 + C150739 * be + C150783 * C151012) /
        C150613;
    const double C535 =
        (C151078 * (2 * C150749 + C150718 * C150783 + C150768 * be)) / C150613;
    const double C547 =
        (C150730 + C150718 * C150749 + C150739 * be + C150783 * C151085) /
        C150613;
    const double C1051 = (C151078 * C151005 * C150783) / C150613;
    const double C150833 = C150718 * C150830;
    const double C150853 = 3 * C150830;
    const double C150841 = be * C150830;
    const double C151544 = C151005 * C150830;
    const double C1316 =
        (2 * C151005 * C150784 + C151005 * (C150784 + C150830 * C151012)) /
        C150613;
    const double C1498 =
        (C151005 * C150784 + C151005 * C150830 * C151085) / C150613;
    const double C1506 = (C151078 * (C150784 + C150830 * C151012)) / C150613;
    const double C2408 =
        (2 * C151078 * C150784 + C151078 * (C150784 + C150830 * C151085)) /
        C150613;
    const double C150832 = C150718 * C150829;
    const double C150849 = 3 * C150829;
    const double C150840 = ae * C150829;
    const double C369 =
        (2 * (ae * (C150743 + C150766 * C151012) +
              be * (C150744 + C150769 * C151012) + C150718 * C151016) +
         ae * (C150783 + C150829 * C151012) +
         be * (C150784 + C150830 * C151012) +
         C150718 * (C151016 + ae * (C150775 + C150819 * C151012) +
                    be * (C150776 + C150821 * C151012) +
                    C150718 * (ae * (C150766 + C150807 * C151012) +
                               be * (C150769 + C150810 * C151012) +
                               C150718 * (C150818 + C150879 * C151012)))) /
        C150617;
    const double C566 =
        (2 * (ae * (C150743 + C150766 * C151085) +
              be * (C150744 + C150769 * C151085) + C150718 * C151089) +
         ae * (C150783 + C150829 * C151085) +
         be * (C150784 + C150830 * C151085) +
         C150718 * (C151089 + ae * (C150775 + C150819 * C151085) +
                    be * (C150776 + C150821 * C151085) +
                    C150718 * (ae * (C150766 + C150807 * C151085) +
                               be * (C150769 + C150810 * C151085) +
                               C150718 * (C150818 + C150879 * C151085)))) /
        C150617;
    const double C1062 =
        (2 * (ae * C151078 * C151018 + be * C151078 * C151019 +
              C150718 * C151206) +
         ae * C151078 * C151005 * C150829 + be * C151078 * C151005 * C150830 +
         C150718 * (C151206 + ae * C151078 * C151039 + be * C151078 * C151040 +
                    C150718 * (ae * C151078 * C151041 + be * C151078 * C151042 +
                               C150718 * C151078 * C151043))) /
        C150617;
    const double C151542 = C151005 * C150829;
    const double C1315 =
        (2 * C151005 * C150783 + C151005 * (C150783 + C150829 * C151012)) /
        C150613;
    const double C1497 =
        (C151005 * C150783 + C151005 * C150829 * C151085) / C150613;
    const double C1505 = (C151078 * (C150783 + C150829 * C151012)) / C150613;
    const double C2407 =
        (2 * C151078 * C150783 + C151078 * (C150783 + C150829 * C151085)) /
        C150613;
    const double C151051 = C151049 + C151045;
    const double C151124 = C151122 + C151118;
    const double C150831 = C150805 + C150828;
    const double C6295 = C6024 * C1331;
    const double C6271 = C151913 * C1331;
    const double C24806 = C152350 * C1331;
    const double C25327 = C152349 * C1331;
    const double C52572 = C50890 * C1331;
    const double C53093 = C50889 * C1331;
    const double C59597 = C151908 * C1331;
    const double C73901 = C152263 * C1331;
    const double C73877 = C151913 * C1331;
    const double C7752 = C6024 * C1333;
    const double C24822 = C152349 * C1333;
    const double C52588 = C50889 * C1333;
    const double C59585 = C151908 * C1333;
    const double C75342 = C152263 * C1333;
    const double C7335 = C6024 * C1525;
    const double C7311 = C151913 * C1525;
    const double C25078 = C152350 * C1525;
    const double C25638 = C152349 * C1525;
    const double C52844 = C50890 * C1525;
    const double C53404 = C50889 * C1525;
    const double C60309 = C151908 * C1525;
    const double C74941 = C152263 * C1525;
    const double C74917 = C151913 * C1525;
    const double C8034 = C6024 * C1527;
    const double C25094 = C152349 * C1527;
    const double C52860 = C50889 * C1527;
    const double C60767 = C151908 * C1527;
    const double C75600 = C152263 * C1527;
    const double C8042 = C6024 * C2011;
    const double C25853 = C152349 * C2011;
    const double C53619 = C50889 * C2011;
    const double C60293 = C151908 * C2011;
    const double C75608 = C152263 * C2011;
    const double C15188 = C6024 * C2423;
    const double C15164 = C151913 * C2423;
    const double C34755 = C152350 * C2423;
    const double C35285 = C152349 * C2423;
    const double C65743 = C151908 * C2423;
    const double C86269 = C151913 * C2423;
    const double C86971 = C152263 * C2423;
    const double C104529 = C50890 * C2423;
    const double C105059 = C50889 * C2423;
    const double C17809 = C6024 * C2425;
    const double C34771 = C152349 * C2425;
    const double C68361 = C151908 * C2425;
    const double C86285 = C152263 * C2425;
    const double C104545 = C50889 * C2425;
    const double C150898 = C150718 * C150895;
    const double C150932 = 3 * C150895;
    const double C150917 = be * C150895;
    const double C151153 = C151005 * C150895;
    const double C151179 = C151078 * C150895;
    const double C151593 = C150895 * C151012;
    const double C151655 = C150895 * C151085;
    const double C1326 = (3 * (C150784 + C150830 * C151012) +
                          C151005 * (2 * C151005 * C150830 +
                                     C151005 * (C150830 + C150895 * C151012))) /
                         C150613;
    const double C1516 = (C150784 + C150830 * C151012 +
                          (C150830 + C150895 * C151012) * C151085) /
                         C150613;
    const double C2008 = (C151078 * (2 * C151005 * C150830 +
                                     C151005 * (C150830 + C150895 * C151012))) /
                         C150613;
    const double C2418 = (3 * (C150784 + C150830 * C151085) +
                          C151078 * (2 * C151078 * C150830 +
                                     C151078 * (C150830 + C150895 * C151085))) /
                         C150613;
    const double C151576 = C151574 + C151575;
    const double C7759 = C6031 * C7736;
    const double C60932 = C59421 * C7736;
    const double C75349 = C150632 * C7736;
    const double C10130 = C6031 * C9388;
    const double C67591 = C59421 * C9388;
    const double C77640 = C150632 * C9388;
    const double C151648 = C151646 + C151647;
    const double C17816 = C6031 * C17793;
    const double C120282 = C59421 * C17793;
    const double C137273 = C150632 * C17793;
    const double C18555 =
        (4 * (2 * C151078 * C151040 + C151078 * C151668) +
         C151078 *
             (3 * C151668 +
              C151078 * (2 * C151218 +
                         C151078 * (C151155 + C151005 * C150963 * C151085)))) /
        C150613;
    const double C151676 = C151674 + C151675;
    const double C60600 = C59421 * C7740;
    const double C60778 = C59421 * C8012;
    const double C61276 = C59421 * C8802;
    const double C62144 = C59421 * C10122;
    const double C151706 = C151704 + C151705;
    const double C119951 = C59421 * C17797;
    const double C68355 =
        (5 * (3 * C151662 + C151078 * C151692) +
         C151078 *
             (4 * C151692 +
              C151078 * (3 * C151315 +
                         C151078 * (2 * C151220 +
                                    C151078 * (C151157 + C151005 * C150952 *
                                                             C151085))))) /
        C150613;
    const double C150897 = C150718 * C150894;
    const double C150926 = 3 * C150894;
    const double C150916 = ae * C150894;
    const double C151152 = C151005 * C150894;
    const double C151178 = C151078 * C150894;
    const double C151590 = C150894 * C151012;
    const double C151652 = C150894 * C151085;
    const double C1325 = (3 * (C150783 + C150829 * C151012) +
                          C151005 * (2 * C151005 * C150829 +
                                     C151005 * (C150829 + C150894 * C151012))) /
                         C150613;
    const double C1515 = (C150783 + C150829 * C151012 +
                          (C150829 + C150894 * C151012) * C151085) /
                         C150613;
    const double C2007 = (C151078 * (2 * C151005 * C150829 +
                                     C151005 * (C150829 + C150894 * C151012))) /
                         C150613;
    const double C2417 = (3 * (C150783 + C150829 * C151085) +
                          C151078 * (2 * C151078 * C150829 +
                                     C151078 * (C150829 + C150894 * C151085))) /
                         C150613;
    const double C151071 = C151032 + C151066;
    const double C151572 = C151570 + C151571;
    const double C7757 = C6031 * C7735;
    const double C60930 = C59421 * C7735;
    const double C75347 = C150632 * C7735;
    const double C10128 = C6031 * C9387;
    const double C67589 = C59421 * C9387;
    const double C77638 = C150632 * C9387;
    const double C151144 = C151105 + C151139;
    const double C151644 = C151642 + C151643;
    const double C17814 = C6031 * C17792;
    const double C120280 = C59421 * C17792;
    const double C137271 = C150632 * C17792;
    const double C151170 = C151167 + C151162;
    const double C151227 = C151210 + C151222;
    const double C18554 =
        (4 * (2 * C151078 * C151039 + C151078 * C151665) +
         C151078 *
             (3 * C151665 +
              C151078 * (2 * C151217 +
                         C151078 * (C151154 + C151005 * C150961 * C151085)))) /
        C150613;
    const double C151196 = C151193 + C151188;
    const double C151277 = C151275 + C151276;
    const double C151672 = C151670 + C151671;
    const double C60598 = C59421 * C7739;
    const double C60776 = C59421 * C8011;
    const double C61274 = C59421 * C8801;
    const double C62142 = C59421 * C10121;
    const double C151332 = C151330 + C151331;
    const double C151702 = C151700 + C151701;
    const double C119949 = C59421 * C17796;
    const double C68354 =
        (5 * (3 * C151659 + C151078 * C151688) +
         C151078 *
             (4 * C151688 +
              C151078 * (3 * C151314 +
                         C151078 * (2 * C151219 +
                                    C151078 * (C151156 + C151005 * C150949 *
                                                             C151085))))) /
        C150613;
    const double C150896 = C150866 + C150893;
    const double C151037 = C151036 + C151035;
    const double C151236 = C151234 + C151235;
    const double C1523 =
        (2 * (ae * C151078 * C151030 + be * C151078 * C151031 +
              C150718 * C151257) +
         ae * C151078 * (C150829 + C150894 * C151012) +
         be * C151078 * (C150830 + C150895 * C151012) +
         C150718 * (C151257 + ae * C151078 * C151061 + be * C151078 * C151062 +
                    C150718 * (ae * C151078 * C151063 + be * C151078 * C151064 +
                               C150718 * C151078 * C151065))) /
        C150617;
    const double C1524 =
        (C151078 * C151016 + ae * C151078 * (C150775 + C150819 * C151012) +
         be * C151078 * (C150776 + C150821 * C151012) +
         C150718 * (ae * C151078 * C151030 + be * C151078 * C151031 +
                    C150718 * C151257)) /
        C150617;
    const double C8038 = C151913 * C1528;
    const double C9707 = C6024 * C1528;
    const double C25090 = C152350 * C1528;
    const double C52856 = C50890 * C1528;
    const double C61861 = C151908 * C1528;
    const double C75604 = C151913 * C1528;
    const double C77229 = C152263 * C1528;
    const double C10135 = C6024 * C9400;
    const double C62149 = C151908 * C9400;
    const double C77645 = C152263 * C9400;
    const double C151053 = C150718 * C151052;
    const double C151151 = 2 * C151052;
    const double C151215 = C151214 + C151213;
    const double C1520 =
        (C151006 + C151020 * C151085 +
         ae * (C151005 * C150775 + C151039 * C151085) +
         be * (C151005 * C150776 + C151040 * C151085) +
         C150718 * (ae * (C151018 + C151041 * C151085) +
                    be * (C151019 + C151042 * C151085) + C150718 * C151252)) /
        C150617;
    const double C2908 =
        (ae *
             (2 * C151078 * C151018 + C151078 * (C151018 + C151041 * C151085)) +
         be *
             (2 * C151078 * C151019 + C151078 * (C151019 + C151042 * C151085)) +
         C150718 * (2 * C151206 + C151078 * C151252)) /
        C150617;
    const double C9401 = (3 * (C151006 + C151020 * C151085) +
                          C151078 * (2 * C151206 + C151078 * C151252)) /
                         C150617;
    const double C151110 = C151109 + C151108;
    const double C151296 = C151294 + C151295;
    const double C151126 = C150718 * C151125;
    const double C151177 = 2 * C151125;
    const double C150983 = C150718 * C150978;
    const double C150972 = C150929 + C150967;
    const double C150981 = C150718 * C150975;
    const double C150980 = C150947 + C150974;
    const double C151074 = C151072 + C151070;
    const double C151247 = C151245 + C151246;
    const double C151266 = C151032 + C151265;
    const double C151285 = C150718 * C151282;
    const double C9703 = C151913 * C1529;
    const double C25086 = C23125 * C1529;
    const double C52852 = C50891 * C1529;
    const double C65491 = C151908 * C1529;
    const double C77225 = C151913 * C1529;
    const double C151147 = C151145 + C151143;
    const double C151307 = C151305 + C151306;
    const double C151172 = C150718 * C151171;
    const double C151230 = C151228 + C151226;
    const double C151319 = C150718 * C151316;
    const double C151339 = C151078 * C151316;
    const double C2909 =
        (2 * C151206 + C151078 * C151252 +
         ae *
             (2 * C151078 * C151039 + C151078 * (C151039 + C151154 * C151085)) +
         be *
             (2 * C151078 * C151040 + C151078 * (C151040 + C151155 * C151085)) +
         C150718 * (ae * (2 * C151208 + C151078 * C151314) +
                    be * (2 * C151209 + C151078 * C151315) +
                    C150718 * (2 * C151210 + C151078 * C151316))) /
        C150617;
    const double C151198 = C150718 * C151197;
    const double C148 = 5 * (3 * C150768 + C150718 * C150820) +
                        C150718 * (4 * C150820 + C150718 * C150891);
    const double C335 = 3 * C150768 + C150718 * C150820 + C150891 * C151012;
    const double C336 = C151005 * (4 * C150820 + C150718 * C150891);
    const double C532 = 3 * C150768 + C150718 * C150820 + C150891 * C151085;
    const double C533 = C151078 * (4 * C150820 + C150718 * C150891);
    const double C1045 = C151078 * C151005 * C150891;
    const double C60589 =
        6 * (4 * C151803 + C151005 * C151874) +
        C151005 *
            (5 * C151874 +
             C151005 * (4 * C151872 +
                        C151005 * (3 * C151870 +
                                   C151005 * (2 * C151005 * C150846 +
                                              C151005 * (C150846 +
                                                         C150922 * C151012)))));
    const double C60755 =
        4 * C151803 + C151005 * C151874 +
        (4 * C151872 +
         C151005 * (3 * C151870 +
                    C151005 * (2 * C151005 * C150846 +
                               C151005 * (C150846 + C150922 * C151012)))) *
            C151085;
    const double C61269 =
        C151078 *
        (5 * C151874 +
         C151005 *
             (4 * C151872 +
              C151005 * (3 * C151870 +
                         C151005 * (2 * C151005 * C150846 +
                                    C151005 * (C150846 + C150922 * C151012)))));
    const double C62137 =
        2 * C151078 * C151874 +
        C151078 *
            (C151874 + (3 * C151870 +
                        C151005 * (2 * C151005 * C150846 +
                                   C151005 * (C150846 + C150922 * C151012))) *
                           C151085);
    const double C119944 =
        6 * (4 * C151845 + C151078 * C151899) +
        C151078 *
            (5 * C151899 +
             C151078 * (4 * C151897 +
                        C151078 * (3 * C151895 +
                                   C151078 * (2 * C151078 * C150846 +
                                              C151078 * (C150846 +
                                                         C150922 * C151085)))));
    const double C152315 = C152269 / C151930;
    const double C152354 = C152319 / C151934;
    const double C152355 = C152321 + C152277;
    const double C705 = C152277 - C151951 / C151948;
    const double C152318 = C152273 / C151930;
    const double C152331 = C152287 / C151930;
    const double C152361 = C152334 / C151934;
    const double C152362 = C152335 + C152291;
    const double C1663 = C152291 - C152031 / C151948;
    const double C152333 = C152288 / C151930;
    const double C152337 = C152293 / C151930;
    const double C152364 = C152340 / C151934;
    const double C152365 = C152341 + C152297;
    const double C2759 = C152297 - C152073 / C151948;
    const double C152339 = C152294 / C151930;
    const double C150638 = C150637 / C150613;
    const double C150649 = C150611 * C150648;
    const double C141 = (-C150648 / C150613) / (4 * C150642);
    const double C6032 = (-C150648 / C150613) / C150618;
    const double C23133 = (-C150648 / C150613) / (4 * C150617);
    const double C50899 = (-C150648 / C150613) / (4 * C150617);
    const double C59422 = -C150648 / C150613;
    const double C73638 = (-C150648 / C150613) / C150618;
    const double C6302 = C6029 * C341;
    const double C6300 = C6029 * C340;
    const double C6294 = C6029 * C1318;
    const double C6292 = C6029 * C1317;
    const double C6286 = C6029 * C349;
    const double C6284 = C6029 * C348;
    const double C6278 = C6029 * C343;
    const double C6276 = C6029 * C342;
    const double C6274 = C6029 * C1320;
    const double C6272 = C6029 * C1319;
    const double C6262 = C6029 * C347;
    const double C6260 = C6029 * C346;
    const double C6254 = C6029 * C345;
    const double C6252 = C6029 * C344;
    const double C7334 = C6029 * C1508;
    const double C7332 = C6029 * C1507;
    const double C7326 = C6029 * C1050;
    const double C7324 = C6029 * C1049;
    const double C7322 = C6029 * C1048;
    const double C7320 = C6029 * C1047;
    const double C7314 = C6029 * C1510;
    const double C7312 = C6029 * C1509;
    const double C7763 = C6029 * C7738;
    const double C7761 = C6029 * C7737;
    const double C7751 = C6029 * C1322;
    const double C7749 = C6029 * C1321;
    const double C8053 = C6029 * C8006;
    const double C8051 = C6029 * C8005;
    const double C8041 = C6029 * C2004;
    const double C8039 = C6029 * C2003;
    const double C8033 = C6029 * C1512;
    const double C8031 = C6029 * C1511;
    const double C8025 = C6029 * C1502;
    const double C8023 = C6029 * C1501;
    const double C8287 = C6029 * C1324;
    const double C8285 = C6029 * C1323;
    const double C8597 = C6029 * C2006;
    const double C8595 = C6029 * C2005;
    const double C8815 = C6029 * C8010;
    const double C8813 = C6029 * C8009;
    const double C9714 = C6029 * C1500;
    const double C9712 = C6029 * C1499;
    const double C9706 = C6029 * C1514;
    const double C9704 = C6029 * C1513;
    const double C10142 = C6029 * C2900;
    const double C10140 = C6029 * C2899;
    const double C10134 = C6029 * C9390;
    const double C10132 = C6029 * C9389;
    const double C15195 = C6029 * C538;
    const double C15193 = C6029 * C537;
    const double C15187 = C6029 * C2410;
    const double C15185 = C6029 * C2409;
    const double C15179 = C6029 * C546;
    const double C15177 = C6029 * C545;
    const double C15171 = C6029 * C540;
    const double C15169 = C6029 * C539;
    const double C15167 = C6029 * C2412;
    const double C15165 = C6029 * C2411;
    const double C15155 = C6029 * C544;
    const double C15153 = C6029 * C543;
    const double C15147 = C6029 * C542;
    const double C15145 = C6029 * C541;
    const double C17820 = C6029 * C17795;
    const double C17818 = C6029 * C17794;
    const double C17808 = C6029 * C2414;
    const double C17806 = C6029 * C2413;
    const double C18136 = C6029 * C2902;
    const double C18134 = C6029 * C2901;
    const double C18349 = C6029 * C2416;
    const double C18347 = C6029 * C2415;
    const double C18566 = C6029 * C9392;
    const double C18564 = C6029 * C9391;
    const double C6306 = C6031 * C339;
    const double C6798 = C6029 * C339;
    const double C23387 = C23132 * C339;
    const double C51153 = C50898 * C339;
    const double C59944 = C59421 * C339;
    const double C73912 = C150632 * C339;
    const double C6310 = C6029 * C351;
    const double C6290 = C6031 * C351;
    const double C23367 = C23132 * C351;
    const double C51133 = C50898 * C351;
    const double C59608 = C59421 * C351;
    const double C73896 = C150632 * C351;
    const double C15199 = C6031 * C536;
    const double C15664 = C6029 * C536;
    const double C32163 = C23132 * C536;
    const double C66204 = C59421 * C536;
    const double C82874 = C150632 * C536;
    const double C101937 = C50898 * C536;
    const double C15203 = C6029 * C548;
    const double C15183 = C6031 * C548;
    const double C32143 = C23132 * C548;
    const double C65754 = C59421 * C548;
    const double C82866 = C150632 * C548;
    const double C101917 = C50898 * C548;
    const double C7354 = C6029 * C1052;
    const double C7330 = C6031 * C1052;
    const double C24398 = C23132 * C1052;
    const double C52164 = C50898 * C1052;
    const double C60324 = C59421 * C1052;
    const double C74936 = C150632 * C1052;
    const double C6307 = C151913 * C362;
    const double C6799 = C6024 * C362;
    const double C23408 = C152350 * C362;
    const double C23388 = C23125 * C362;
    const double C23894 = C152349 * C362;
    const double C51174 = C50890 * C362;
    const double C51154 = C50891 * C362;
    const double C51660 = C50889 * C362;
    const double C59945 = C151908 * C362;
    const double C73913 = C151913 * C362;
    const double C74405 = C152263 * C362;
    const double C15200 = C151913 * C559;
    const double C15665 = C6024 * C559;
    const double C32184 = C152350 * C559;
    const double C32164 = C23125 * C559;
    const double C32646 = C152349 * C559;
    const double C66205 = C151908 * C559;
    const double C82875 = C151913 * C559;
    const double C83467 = C152263 * C559;
    const double C101958 = C50890 * C559;
    const double C101938 = C50891 * C559;
    const double C102420 = C50889 * C559;
    const double C6304 = C6031 * C338;
    const double C6796 = C6029 * C338;
    const double C23385 = C23132 * C338;
    const double C51151 = C50898 * C338;
    const double C59942 = C59421 * C338;
    const double C73910 = C150632 * C338;
    const double C6308 = C6029 * C350;
    const double C6288 = C6031 * C350;
    const double C23365 = C23132 * C350;
    const double C51131 = C50898 * C350;
    const double C59606 = C59421 * C350;
    const double C73894 = C150632 * C350;
    const double C15197 = C6031 * C535;
    const double C15662 = C6029 * C535;
    const double C32161 = C23132 * C535;
    const double C66202 = C59421 * C535;
    const double C82872 = C150632 * C535;
    const double C101935 = C50898 * C535;
    const double C15201 = C6029 * C547;
    const double C15181 = C6031 * C547;
    const double C32141 = C23132 * C547;
    const double C65752 = C59421 * C547;
    const double C82864 = C150632 * C547;
    const double C101915 = C50898 * C547;
    const double C7352 = C6029 * C1051;
    const double C7328 = C6031 * C1051;
    const double C24396 = C23132 * C1051;
    const double C52162 = C50898 * C1051;
    const double C60322 = C59421 * C1051;
    const double C74934 = C150632 * C1051;
    const double C150835 = C150795 + C150833;
    const double C6322 = C6029 * C1316;
    const double C6298 = C6031 * C1316;
    const double C24809 = C23132 * C1316;
    const double C52575 = C50898 * C1316;
    const double C59612 = C59421 * C1316;
    const double C73904 = C150632 * C1316;
    const double C9710 = C6031 * C1498;
    const double C15982 = C6029 * C1498;
    const double C25069 = C23132 * C1498;
    const double C52835 = C50898 * C1498;
    const double C65486 = C59421 * C1498;
    const double C77232 = C150632 * C1498;
    const double C7346 = C6029 * C1506;
    const double C7338 = C6031 * C1506;
    const double C25081 = C23132 * C1506;
    const double C52847 = C50898 * C1506;
    const double C60320 = C59421 * C1506;
    const double C74944 = C150632 * C1506;
    const double C15215 = C6029 * C2408;
    const double C15191 = C6031 * C2408;
    const double C34758 = C23132 * C2408;
    const double C65762 = C59421 * C2408;
    const double C86966 = C150632 * C2408;
    const double C104532 = C50898 * C2408;
    const double C150834 = C150793 + C150832;
    const double C150855 = C150839 + C150840;
    const double C6315 = C151913 * C369;
    const double C6807 = C6024 * C369;
    const double C23420 = C152350 * C369;
    const double C23400 = C23125 * C369;
    const double C51186 = C50890 * C369;
    const double C51166 = C50891 * C369;
    const double C59949 = C151908 * C369;
    const double C73921 = C151913 * C369;
    const double C74413 = C152263 * C369;
    const double C15208 = C151913 * C566;
    const double C15673 = C6024 * C566;
    const double C32196 = C152350 * C566;
    const double C32176 = C23125 * C566;
    const double C66209 = C151908 * C566;
    const double C82887 = C151913 * C566;
    const double C101970 = C50890 * C566;
    const double C101950 = C50891 * C566;
    const double C135174 = C152263 * C566;
    const double C7351 = C151913 * C1062;
    const double C24427 = C152350 * C1062;
    const double C24419 = C23125 * C1062;
    const double C40920 = C6024 * C1062;
    const double C52193 = C50890 * C1062;
    const double C52185 = C50891 * C1062;
    const double C65995 = C151908 * C1062;
    const double C74957 = C151913 * C1062;
    const double C83195 = C152263 * C1062;
    const double C6320 = C6029 * C1315;
    const double C6296 = C6031 * C1315;
    const double C24807 = C23132 * C1315;
    const double C52573 = C50898 * C1315;
    const double C59610 = C59421 * C1315;
    const double C73902 = C150632 * C1315;
    const double C9708 = C6031 * C1497;
    const double C15980 = C6029 * C1497;
    const double C25067 = C23132 * C1497;
    const double C52833 = C50898 * C1497;
    const double C65484 = C59421 * C1497;
    const double C77230 = C150632 * C1497;
    const double C7344 = C6029 * C1505;
    const double C7336 = C6031 * C1505;
    const double C25079 = C23132 * C1505;
    const double C52845 = C50898 * C1505;
    const double C60318 = C59421 * C1505;
    const double C74942 = C150632 * C1505;
    const double C15213 = C6029 * C2407;
    const double C15189 = C6031 * C2407;
    const double C34756 = C23132 * C2407;
    const double C65760 = C59421 * C2407;
    const double C86964 = C150632 * C2407;
    const double C104530 = C50898 * C2407;
    const double C150901 = C150854 + C150898;
    const double C151160 = be * C151153;
    const double C2904 =
        (2 * C151078 * C151544 + C151078 * (C151544 + C151153 * C151085)) /
        C150613;
    const double C18126 =
        (3 * (C151544 + C151153 * C151085) +
         C151078 * (2 * C151078 * C151153 +
                    C151078 * (C151153 + C151005 * C150978 * C151085))) /
        C150613;
    const double C151186 = be * C151179;
    const double C151594 = C150830 + C151593;
    const double C151656 = C150830 + C151655;
    const double C8283 = C6031 * C1326;
    const double C24813 = C23132 * C1326;
    const double C52579 = C50898 * C1326;
    const double C59616 = C59421 * C1326;
    const double C75845 = C150632 * C1326;
    const double C9702 = C6031 * C1516;
    const double C25085 = C23132 * C1516;
    const double C52851 = C50898 * C1516;
    const double C65490 = C59421 * C1516;
    const double C77224 = C150632 * C1516;
    const double C8593 = C6031 * C2008;
    const double C25844 = C23132 * C2008;
    const double C53610 = C50898 * C2008;
    const double C60316 = C59421 * C2008;
    const double C76151 = C150632 * C2008;
    const double C18345 = C6031 * C2418;
    const double C34762 = C23132 * C2418;
    const double C104536 = C50898 * C2418;
    const double C118277 = C59421 * C2418;
    const double C137772 = C150632 * C2418;
    const double C7742 =
        (5 * (3 * C151554 + C151005 * C151576) +
         C151005 * (4 * C151576 +
                    C151005 * (3 * C151062 +
                               C151005 * (2 * C151155 +
                                          C151005 * (C150882 +
                                                     C150963 * C151012))))) /
        C150613;
    const double C8004 =
        (2 * C151540 + C151005 * C151554 + C151576 * C151085) / C150613;
    const double C8008 =
        (C151078 * (3 * C151554 + C151005 * C151576)) / C150613;
    const double C8014 =
        (3 * C151554 + C151005 * C151576 +
         (3 * C151062 +
          C151005 * (2 * C151155 + C151005 * (C150882 + C150963 * C151012))) *
             C151085) /
        C150613;
    const double C8804 =
        (C151078 *
         (4 * C151576 +
          C151005 * (3 * C151062 +
                     C151005 * (2 * C151155 +
                                C151005 * (C150882 + C150963 * C151012))))) /
        C150613;
    const double C10124 =
        (2 * C151078 * C151576 +
         C151078 * (C151576 +
                    (2 * C151155 + C151005 * (C150882 + C150963 * C151012)) *
                        C151085)) /
        C150613;
    const double C17799 =
        (5 * (3 * C151626 + C151078 * C151648) +
         C151078 * (4 * C151648 +
                    C151078 * (3 * C151135 +
                               C151078 * (2 * C151181 +
                                          C151078 * (C150882 +
                                                     C150963 * C151085))))) /
        C150613;
    const double C60591 =
        (6 * (4 * C151568 + C151005 * C151676) +
         C151005 *
             (5 * C151676 +
              C151005 *
                  (4 * C151274 +
                   C151005 * (3 * C151064 +
                              C151005 * (2 * C151157 +
                                         C151005 * (C150871 +
                                                    C150952 * C151012)))))) /
        C150613;
    const double C60757 =
        (4 * C151568 + C151005 * C151676 +
         (4 * C151274 +
          C151005 * (3 * C151064 +
                     C151005 * (2 * C151157 +
                                C151005 * (C150871 + C150952 * C151012)))) *
             C151085) /
        C150613;
    const double C61271 =
        (C151078 *
         (5 * C151676 +
          C151005 * (4 * C151274 +
                     C151005 * (3 * C151064 +
                                C151005 * (2 * C151157 +
                                           C151005 * (C150871 +
                                                      C150952 * C151012)))))) /
        C150613;
    const double C62139 =
        (2 * C151078 * C151676 +
         C151078 *
             (C151676 + (3 * C151064 +
                         C151005 * (2 * C151157 +
                                    C151005 * (C150871 + C150952 * C151012))) *
                            C151085)) /
        C150613;
    const double C119946 =
        (6 * (4 * C151640 + C151078 * C151706) +
         C151078 *
             (5 * C151706 +
              C151078 *
                  (4 * C151329 +
                   C151078 * (3 * C151137 +
                              C151078 * (2 * C151183 +
                                         C151078 * (C150871 +
                                                    C150952 * C151085)))))) /
        C150613;
    const double C150900 = C150850 + C150897;
    const double C150935 = C150915 + C150916;
    const double C151159 = ae * C151152;
    const double C1519 =
        (2 * (ae * (C151018 + C151041 * C151085) +
              be * (C151019 + C151042 * C151085) + C150718 * C151252) +
         ae * (C151005 * C150829 + C151152 * C151085) +
         be * (C151005 * C150830 + C151153 * C151085) +
         C150718 * (C151252 + ae * (C151039 + C151154 * C151085) +
                    be * (C151040 + C151155 * C151085) +
                    C150718 * (ae * (C151041 + C151156 * C151085) +
                               be * (C151042 + C151157 * C151085) +
                               C150718 * (C151043 + C151158 * C151085)))) /
        C150617;
    const double C2903 =
        (2 * C151078 * C151542 + C151078 * (C151542 + C151152 * C151085)) /
        C150613;
    const double C18125 =
        (3 * (C151542 + C151152 * C151085) +
         C151078 * (2 * C151078 * C151152 +
                    C151078 * (C151152 + C151005 * C150975 * C151085))) /
        C150613;
    const double C151185 = ae * C151178;
    const double C151591 = C150829 + C151590;
    const double C151653 = C150829 + C151652;
    const double C8281 = C6031 * C1325;
    const double C24811 = C23132 * C1325;
    const double C52577 = C50898 * C1325;
    const double C59614 = C59421 * C1325;
    const double C75843 = C150632 * C1325;
    const double C9700 = C6031 * C1515;
    const double C25083 = C23132 * C1515;
    const double C52849 = C50898 * C1515;
    const double C65488 = C59421 * C1515;
    const double C77222 = C150632 * C1515;
    const double C8591 = C6031 * C2007;
    const double C25842 = C23132 * C2007;
    const double C53608 = C50898 * C2007;
    const double C60314 = C59421 * C2007;
    const double C76149 = C150632 * C2007;
    const double C18343 = C6031 * C2417;
    const double C34760 = C23132 * C2417;
    const double C104534 = C50898 * C2417;
    const double C118275 = C59421 * C2417;
    const double C137770 = C150632 * C2417;
    const double C151073 = C151071 + C151067;
    const double C7741 =
        (5 * (3 * C151551 + C151005 * C151572) +
         C151005 * (4 * C151572 +
                    C151005 * (3 * C151061 +
                               C151005 * (2 * C151154 +
                                          C151005 * (C150880 +
                                                     C150961 * C151012))))) /
        C150613;
    const double C8003 =
        (2 * C151538 + C151005 * C151551 + C151572 * C151085) / C150613;
    const double C8007 =
        (C151078 * (3 * C151551 + C151005 * C151572)) / C150613;
    const double C8013 =
        (3 * C151551 + C151005 * C151572 +
         (3 * C151061 +
          C151005 * (2 * C151154 + C151005 * (C150880 + C150961 * C151012))) *
             C151085) /
        C150613;
    const double C8803 =
        (C151078 *
         (4 * C151572 +
          C151005 * (3 * C151061 +
                     C151005 * (2 * C151154 +
                                C151005 * (C150880 + C150961 * C151012))))) /
        C150613;
    const double C10123 =
        (2 * C151078 * C151572 +
         C151078 * (C151572 +
                    (2 * C151154 + C151005 * (C150880 + C150961 * C151012)) *
                        C151085)) /
        C150613;
    const double C151146 = C151144 + C151140;
    const double C17798 =
        (5 * (3 * C151623 + C151078 * C151644) +
         C151078 * (4 * C151644 +
                    C151078 * (3 * C151134 +
                               C151078 * (2 * C151180 +
                                          C151078 * (C150880 +
                                                     C150961 * C151085))))) /
        C150613;
    const double C151229 = C151227 + C151223;
    const double C60590 =
        (6 * (4 * C151564 + C151005 * C151672) +
         C151005 *
             (5 * C151672 +
              C151005 *
                  (4 * C151273 +
                   C151005 * (3 * C151063 +
                              C151005 * (2 * C151156 +
                                         C151005 * (C150868 +
                                                    C150949 * C151012)))))) /
        C150613;
    const double C60756 =
        (4 * C151564 + C151005 * C151672 +
         (4 * C151273 +
          C151005 * (3 * C151063 +
                     C151005 * (2 * C151156 +
                                C151005 * (C150868 + C150949 * C151012)))) *
             C151085) /
        C150613;
    const double C61270 =
        (C151078 *
         (5 * C151672 +
          C151005 * (4 * C151273 +
                     C151005 * (3 * C151063 +
                                C151005 * (2 * C151156 +
                                           C151005 * (C150868 +
                                                      C150949 * C151012)))))) /
        C150613;
    const double C62138 =
        (2 * C151078 * C151672 +
         C151078 *
             (C151672 + (3 * C151063 +
                         C151005 * (2 * C151156 +
                                    C151005 * (C150868 + C150949 * C151012))) *
                            C151085)) /
        C150613;
    const double C119945 =
        (6 * (4 * C151636 + C151078 * C151702) +
         C151078 *
             (5 * C151702 +
              C151078 *
                  (4 * C151328 +
                   C151078 * (3 * C151136 +
                              C151078 * (2 * C151182 +
                                         C151078 * (C150868 +
                                                    C150949 * C151085)))))) /
        C150613;
    const double C150899 = C150718 * C150896;
    const double C150912 = 3 * C150896;
    const double C1329 =
        (2 * (ae * (2 * C151018 + C151005 * C151030) +
              be * (2 * C151019 + C151005 * C151031) + C150718 * C151236) +
         ae *
             (2 * C151005 * C150829 + C151005 * (C150829 + C150894 * C151012)) +
         be *
             (2 * C151005 * C150830 + C151005 * (C150830 + C150895 * C151012)) +
         C150718 * (C151236 + ae * (2 * C151039 + C151005 * C151061) +
                    be * (2 * C151040 + C151005 * C151062) +
                    C150718 * (ae * (2 * C151041 + C151005 * C151063) +
                               be * (2 * C151042 + C151005 * C151064) +
                               C150718 * (2 * C151043 + C151005 * C151065)))) /
        C150617;
    const double C1330 =
        (2 * C151006 + C151005 * C151016 +
         ae *
             (2 * C151005 * C150775 + C151005 * (C150775 + C150819 * C151012)) +
         be *
             (2 * C151005 * C150776 + C151005 * (C150776 + C150821 * C151012)) +
         C150718 *
             (ae * (2 * C151018 + C151005 * C151030) +
              be * (2 * C151019 + C151005 * C151031) + C150718 * C151236)) /
        C150617;
    const double C1334 = (ae * (3 * (C150743 + C150766 * C151012) +
                                C151005 * (2 * C151018 + C151005 * C151030)) +
                          be * (3 * (C150744 + C150769 * C151012) +
                                C151005 * (2 * C151019 + C151005 * C151031)) +
                          C150718 * (3 * C151016 + C151005 * C151236)) /
                         C150617;
    const double C1335 =
        (3 * C151016 + C151005 * C151236 +
         ae * (3 * (C150775 + C150819 * C151012) +
               C151005 * (2 * C151039 + C151005 * C151061)) +
         be * (3 * (C150776 + C150821 * C151012) +
               C151005 * (2 * C151040 + C151005 * C151062)) +
         C150718 *
             (ae * (3 * C151030 + C151005 * (2 * C151041 + C151005 * C151063)) +
              be * (3 * C151031 + C151005 * (2 * C151042 + C151005 * C151064)) +
              C150718 * (3 * C151032 +
                         C151005 * (2 * C151043 + C151005 * C151065)))) /
        C150617;
    const double C2012 = (ae * C151078 * (2 * C151018 + C151005 * C151030) +
                          be * C151078 * (2 * C151019 + C151005 * C151031) +
                          C150718 * C151078 * C151236) /
                         C150617;
    const double C7744 = (4 * (2 * C151006 + C151005 * C151016) +
                          C151005 * (3 * C151016 + C151005 * C151236)) /
                         C150617;
    const double C8016 =
        (2 * C151006 + C151005 * C151016 + C151236 * C151085) / C150617;
    const double C8018 =
        (C151078 * (3 * C151016 + C151005 * C151236)) / C150617;
    const double C7343 = C151913 * C1523;
    const double C25630 = C23125 * C1523;
    const double C53396 = C50891 * C1523;
    const double C74949 = C151913 * C1523;
    const double C93909 = C151908 * C1523;
    const double C7347 = C6024 * C1524;
    const double C7339 = C151913 * C1524;
    const double C25082 = C23125 * C1524;
    const double C25634 = C152350 * C1524;
    const double C52848 = C50891 * C1524;
    const double C53400 = C50890 * C1524;
    const double C60321 = C151908 * C1524;
    const double C74953 = C152263 * C1524;
    const double C74945 = C151913 * C1524;
    const double C151054 = C151051 + C151053;
    const double C9711 = C151913 * C1520;
    const double C15983 = C6024 * C1520;
    const double C25070 = C23125 * C1520;
    const double C26718 = C152350 * C1520;
    const double C52836 = C50891 * C1520;
    const double C54484 = C50890 * C1520;
    const double C65487 = C151908 * C1520;
    const double C77233 = C151913 * C1520;
    const double C82883 = C152263 * C1520;
    const double C10139 = C151913 * C2908;
    const double C18137 = C6024 * C2908;
    const double C27127 = C152350 * C2908;
    const double C54893 = C50890 * C2908;
    const double C65747 = C151908 * C2908;
    const double C77649 = C151913 * C2908;
    const double C86698 = C152263 * C2908;
    const double C18567 = C6024 * C9401;
    const double C67084 = C151908 * C9401;
    const double C86277 = C152263 * C9401;
    const double C2421 =
        (2 * (ae * (2 * C151091 + C151078 * C151103) +
              be * (2 * C151092 + C151078 * C151104) + C150718 * C151296) +
         ae *
             (2 * C151078 * C150829 + C151078 * (C150829 + C150894 * C151085)) +
         be *
             (2 * C151078 * C150830 + C151078 * (C150830 + C150895 * C151085)) +
         C150718 * (C151296 + ae * (2 * C151112 + C151078 * C151134) +
                    be * (2 * C151113 + C151078 * C151135) +
                    C150718 * (ae * (2 * C151114 + C151078 * C151136) +
                               be * (2 * C151115 + C151078 * C151137) +
                               C150718 * (2 * C151116 + C151078 * C151138)))) /
        C150617;
    const double C2422 =
        (2 * C151079 + C151078 * C151089 +
         ae *
             (2 * C151078 * C150775 + C151078 * (C150775 + C150819 * C151085)) +
         be *
             (2 * C151078 * C150776 + C151078 * (C150776 + C150821 * C151085)) +
         C150718 *
             (ae * (2 * C151091 + C151078 * C151103) +
              be * (2 * C151092 + C151078 * C151104) + C150718 * C151296)) /
        C150617;
    const double C2426 = (ae * (3 * (C150743 + C150766 * C151085) +
                                C151078 * (2 * C151091 + C151078 * C151103)) +
                          be * (3 * (C150744 + C150769 * C151085) +
                                C151078 * (2 * C151092 + C151078 * C151104)) +
                          C150718 * (3 * C151089 + C151078 * C151296)) /
                         C150617;
    const double C2427 =
        (3 * C151089 + C151078 * C151296 +
         ae * (3 * (C150775 + C150819 * C151085) +
               C151078 * (2 * C151112 + C151078 * C151134)) +
         be * (3 * (C150776 + C150821 * C151085) +
               C151078 * (2 * C151113 + C151078 * C151135)) +
         C150718 *
             (ae * (3 * C151103 + C151078 * (2 * C151114 + C151078 * C151136)) +
              be * (3 * C151104 + C151078 * (2 * C151115 + C151078 * C151137)) +
              C150718 * (3 * C151105 +
                         C151078 * (2 * C151116 + C151078 * C151138)))) /
        C150617;
    const double C17801 = (4 * (2 * C151079 + C151078 * C151089) +
                           C151078 * (3 * C151089 + C151078 * C151296)) /
                          C150617;
    const double C151127 = C151124 + C151126;
    const double C150986 = C150933 + C150983;
    const double C150979 = C150972 * ae;
    const double C150977 = C150718 * C150972;
    const double C150976 = C150972 * be;
    const double C1667 =
        2 * C151005 * C150891 + C151005 * (C150891 + C150972 * C151012);
    const double C1865 = C151078 * (C150891 + C150972 * C151012);
    const double C2623 = C151005 * C150891 + C151005 * C150972 * C151085;
    const double C2761 =
        2 * C151078 * C150891 + C151078 * (C150891 + C150972 * C151085);
    const double C150985 = C150927 + C150981;
    const double C150984 = C150718 * C150980;
    const double C151075 = C150718 * C151074;
    const double C151248 = C151005 * C151247;
    const double C151272 = C150718 * C151247;
    const double C151292 = C151078 * C151247;
    const double C2013 =
        (C151078 * C151236 + ae * C151078 * (2 * C151039 + C151005 * C151061) +
         be * C151078 * (2 * C151040 + C151005 * C151062) +
         C150718 * (ae * C151078 * C151273 + be * C151078 * C151274 +
                    C150718 * C151078 * C151247)) /
        C150617;
    const double C8015 =
        (ae * (2 * C151018 + C151005 * C151030 + C151273 * C151085) +
         be * (2 * C151019 + C151005 * C151031 + C151274 * C151085) +
         C150718 * (C151236 + C151247 * C151085)) /
        C150617;
    const double C8806 =
        (ae * C151078 *
             (4 * C151273 +
              C151005 * (3 * C151063 +
                         C151005 * (2 * C151156 +
                                    C151005 * (C150868 + C150949 * C151012)))) +
         be * C151078 *
             (4 * C151274 +
              C151005 * (3 * C151064 +
                         C151005 * (2 * C151157 +
                                    C151005 * (C150871 + C150952 * C151012)))) +
         C150718 * C151078 *
             (4 * C151247 +
              C151005 *
                  (3 * C151065 +
                   C151005 * (2 * C151158 +
                              C151005 * (C150960 + (C150923 * C150924 +
                                                    C150722 * bs[9] *
                                                        std::pow(C150724, 9)) *
                                                       C150615 * C151012))))) /
        C150617;
    const double C9698 =
        (C151236 + C151247 * C151085 +
         ae * (2 * C151039 + C151005 * C151061 +
               (2 * C151154 + C151005 * (C150880 + C150961 * C151012)) *
                   C151085) +
         be * (2 * C151040 + C151005 * C151062 +
               (2 * C151155 + C151005 * (C150882 + C150963 * C151012)) *
                   C151085) +
         C150718 *
             (ae * (C151273 +
                    (2 * C151156 + C151005 * (C150868 + C150949 * C151012)) *
                        C151085) +
              be * (C151274 +
                    (2 * C151157 + C151005 * (C150871 + C150952 * C151012)) *
                        C151085) +
              C150718 * (C151247 +
                         (2 * C151158 +
                          C151005 * (C150960 +
                                     (C150923 * C150924 +
                                      C150722 * bs[9] * std::pow(C150724, 9)) *
                                         C150615 * C151012)) *
                             C151085))) /
        C150617;
    const double C10125 =
        (2 * C151078 * C151236 + C151078 * (C151236 + C151247 * C151085)) /
        C150617;
    const double C1530 =
        (2 * (ae * (C151030 + C151063 * C151085) +
              be * (C151031 + C151064 * C151085) + C150718 * C151266) +
         ae * (C150829 + C150894 * C151012 +
               (C150894 + C150975 * C151012) * C151085) +
         be * (C150830 + C150895 * C151012 +
               (C150895 + C150978 * C151012) * C151085) +
         C150718 *
             (C151266 +
              ae * (C151061 + (C150880 + C150961 * C151012) * C151085) +
              be * (C151062 + (C150882 + C150963 * C151012) * C151085) +
              C150718 *
                  (ae * (C151063 + (C150868 + C150949 * C151012) * C151085) +
                   be * (C151064 + (C150871 + C150952 * C151012) * C151085) +
                   C150718 * (C151065 + (C150960 + (C150923 * C150924 +
                                                    C150722 * bs[9] *
                                                        std::pow(C150724, 9)) *
                                                       C150615 * C151012) *
                                            C151085)))) /
        C150617;
    const double C9399 =
        (ae *
             (2 * C151078 * C151030 + C151078 * (C151030 + C151063 * C151085)) +
         be *
             (2 * C151078 * C151031 + C151078 * (C151031 + C151064 * C151085)) +
         C150718 * (2 * C151257 + C151078 * C151266)) /
        C150617;
    const double C9403 = (3 * (C151016 + C151032 * C151085) +
                          C151078 * (2 * C151257 + C151078 * C151266)) /
                         C150617;
    const double C9404 =
        (ae * (3 * (C151030 + C151063 * C151085) +
               C151078 * (2 * C151280 +
                          C151078 * (C151063 + (C150868 + C150949 * C151012) *
                                                   C151085))) +
         be * (3 * (C151031 + C151064 * C151085) +
               C151078 * (2 * C151281 +
                          C151078 * (C151064 + (C150871 + C150952 * C151012) *
                                                   C151085))) +
         C150718 *
             (3 * C151266 +
              C151078 *
                  (2 * C151282 +
                   C151078 * (C151065 + (C150960 + (C150923 * C150924 +
                                                    C150722 * bs[9] *
                                                        std::pow(C150724, 9)) *
                                                       C150615 * C151012) *
                                            C151085)))) /
        C150617;
    const double C9924 =
        (2 * C151257 + C151078 * C151266 +
         ae * (2 * C151078 * C151061 +
               C151078 * (C151061 + (C150880 + C150961 * C151012) * C151085)) +
         be * (2 * C151078 * C151062 +
               C151078 * (C151062 + (C150882 + C150963 * C151012) * C151085)) +
         C150718 *
             (ae * (2 * C151280 +
                    C151078 *
                        (C151063 + (C150868 + C150949 * C151012) * C151085)) +
              be * (2 * C151281 +
                    C151078 *
                        (C151064 + (C150871 + C150952 * C151012) * C151085)) +
              C150718 *
                  (2 * C151282 +
                   C151078 * (C151065 + (C150960 + (C150923 * C150924 +
                                                    C150722 * bs[9] *
                                                        std::pow(C150724, 9)) *
                                                       C150615 * C151012) *
                                            C151085)))) /
        C150617;
    const double C69076 =
        (4 * (2 * C151257 + C151078 * C151266) +
         C151078 *
             (3 * C151266 +
              C151078 *
                  (2 * C151282 +
                   C151078 * (C151065 + (C150960 + (C150923 * C150924 +
                                                    C150722 * bs[9] *
                                                        std::pow(C150724, 9)) *
                                                       C150615 * C151012) *
                                            C151085)))) /
        C150617;
    const double C151287 = C151286 + C151285;
    const double C151148 = C150718 * C151147;
    const double C151308 = C151078 * C151307;
    const double C151327 = C150718 * C151307;
    const double C151173 = C151170 + C151172;
    const double C151231 = C150718 * C151230;
    const double C151321 = C151320 + C151319;
    const double C151340 = C151338 + C151339;
    const double C18133 = C151913 * C2909;
    const double C27123 = C23125 * C2909;
    const double C54889 = C50891 * C2909;
    const double C65759 = C151908 * C2909;
    const double C86694 = C151913 * C2909;
    const double C151199 = C151196 + C151198;
    const double C152379 = C152315 + C152371;
    const double C704 = C152354 - (C151953 * C151935) / C151930;
    const double C132 = C152355 / C151934 - C151951 / C152322;
    const double C152372 = C152318 + C152354;
    const double C152380 = C152331 + C152375;
    const double C1662 = C152361 - (C152033 * C152022) / C151930;
    const double C1302 = C152362 / C151934 - C152031 / C152322;
    const double C152376 = C152333 + C152361;
    const double C152381 = C152337 + C152377;
    const double C2758 = C152364 - (C152075 * C152064) / C151930;
    const double C2395 = C152365 / C151934 - C152073 / C152322;
    const double C152378 = C152339 + C152364;
    const double C150639 = C150638 - C150628;
    const double C150650 = C150649 / C150613;
    const double C6317 = C6032 * C1305;
    const double C6313 = C6032 * C333;
    const double C6305 = C6032 * C326;
    const double C6297 = C6032 * C1306;
    const double C6289 = C6032 * C332;
    const double C6281 = C6032 * C327;
    const double C6269 = C6032 * C1307;
    const double C6265 = C6032 * C331;
    const double C6257 = C6032 * C328;
    const double C6809 = C6032 * C335;
    const double C6801 = C6032 * C334;
    const double C7349 = C6032 * C1044;
    const double C7341 = C6032 * C1487;
    const double C7337 = C6032 * C1488;
    const double C7329 = C6032 * C1043;
    const double C7317 = C6032 * C1042;
    const double C7309 = C6032 * C1489;
    const double C7758 = C6032 * C7731;
    const double C7754 = C6032 * C1310;
    const double C8048 = C6032 * C7997;
    const double C8044 = C6032 * C2000;
    const double C8036 = C6032 * C1492;
    const double C8028 = C6032 * C1485;
    const double C8282 = C6032 * C1311;
    const double C8592 = C6032 * C2001;
    const double C8810 = C6032 * C7999;
    const double C9709 = C6032 * C1484;
    const double C9701 = C6032 * C1493;
    const double C10137 = C6032 * C2896;
    const double C10129 = C6032 * C9381;
    const double C15210 = C6032 * C2397;
    const double C15206 = C6032 * C530;
    const double C15198 = C6032 * C523;
    const double C15190 = C6032 * C2398;
    const double C15182 = C6032 * C529;
    const double C15174 = C6032 * C524;
    const double C15162 = C6032 * C2399;
    const double C15158 = C6032 * C528;
    const double C15150 = C6032 * C525;
    const double C15675 = C6032 * C532;
    const double C15667 = C6032 * C531;
    const double C15985 = C6032 * C1483;
    const double C17815 = C6032 * C17788;
    const double C17811 = C6032 * C2402;
    const double C18131 = C6032 * C2897;
    const double C18344 = C6032 * C2403;
    const double C18561 = C6032 * C9384;
    const double C40922 = C6032 * C1045;
    const double C23414 = C23133 * C335;
    const double C23410 = C23133 * C334;
    const double C23398 = C23133 * C333;
    const double C23386 = C23133 * C326;
    const double C23366 = C23133 * C332;
    const double C23362 = C23133 * C327;
    const double C23900 = C23133 * C336;
    const double C24421 = C23133 * C1045;
    const double C24417 = C23133 * C1044;
    const double C24397 = C23133 * C1043;
    const double C24812 = C23133 * C1311;
    const double C24808 = C23133 * C1306;
    const double C25084 = C23133 * C1493;
    const double C25080 = C23133 * C1488;
    const double C25068 = C23133 * C1484;
    const double C25317 = C23133 * C1305;
    const double C25628 = C23133 * C1487;
    const double C25843 = C23133 * C2001;
    const double C26712 = C23133 * C1483;
    const double C27121 = C23133 * C2897;
    const double C32190 = C23133 * C532;
    const double C32186 = C23133 * C531;
    const double C32174 = C23133 * C530;
    const double C32162 = C23133 * C523;
    const double C32142 = C23133 * C529;
    const double C32138 = C23133 * C524;
    const double C32652 = C23133 * C533;
    const double C34761 = C23133 * C2403;
    const double C34757 = C23133 * C2398;
    const double C35275 = C23133 * C2397;
    const double C51180 = C50899 * C335;
    const double C51176 = C50899 * C334;
    const double C51164 = C50899 * C333;
    const double C51152 = C50899 * C326;
    const double C51132 = C50899 * C332;
    const double C51128 = C50899 * C327;
    const double C51666 = C50899 * C336;
    const double C52187 = C50899 * C1045;
    const double C52183 = C50899 * C1044;
    const double C52163 = C50899 * C1043;
    const double C52578 = C50899 * C1311;
    const double C52574 = C50899 * C1306;
    const double C52850 = C50899 * C1493;
    const double C52846 = C50899 * C1488;
    const double C52834 = C50899 * C1484;
    const double C53083 = C50899 * C1305;
    const double C53394 = C50899 * C1487;
    const double C53609 = C50899 * C2001;
    const double C54478 = C50899 * C1483;
    const double C54887 = C50899 * C2897;
    const double C101964 = C50899 * C532;
    const double C101960 = C50899 * C531;
    const double C101948 = C50899 * C530;
    const double C101936 = C50899 * C523;
    const double C101916 = C50899 * C529;
    const double C101912 = C50899 * C524;
    const double C102426 = C50899 * C533;
    const double C104535 = C50899 * C2403;
    const double C104531 = C50899 * C2398;
    const double C105049 = C50899 * C2397;
    const double C59615 = C59422 * C1311;
    const double C59611 = C59422 * C1306;
    const double C59607 = C59422 * C332;
    const double C59603 = C59422 * C327;
    const double C59599 = C59422 * C1310;
    const double C59595 = C59422 * C1307;
    const double C59591 = C59422 * C331;
    const double C59587 = C59422 * C328;
    const double C59583 = C59422 * C1309;
    const double C59579 = C59422 * C1308;
    const double C59575 = C59422 * C330;
    const double C59571 = C59422 * C329;
    const double C59951 = C59422 * C1305;
    const double C59947 = C59422 * C333;
    const double C59943 = C59422 * C326;
    const double C60323 = C59422 * C1043;
    const double C60319 = C59422 * C1488;
    const double C60315 = C59422 * C2001;
    const double C60311 = C59422 * C2000;
    const double C60307 = C59422 * C1489;
    const double C60303 = C59422 * C1042;
    const double C60299 = C59422 * C1041;
    const double C60295 = C59422 * C1490;
    const double C60291 = C59422 * C1999;
    const double C60599 = C59422 * C7733;
    const double C60595 = C59422 * C7732;
    const double C60777 = C59422 * C8001;
    const double C60773 = C59422 * C8000;
    const double C60769 = C59422 * C7998;
    const double C60765 = C59422 * C1491;
    const double C60761 = C59422 * C1486;
    const double C60931 = C59422 * C7731;
    const double C61133 = C59422 * C7999;
    const double C61275 = C59422 * C8799;
    const double C61863 = C59422 * C1485;
    const double C61859 = C59422 * C1492;
    const double C61855 = C59422 * C7997;
    const double C62151 = C59422 * C2895;
    const double C62147 = C59422 * C9382;
    const double C62143 = C59422 * C10119;
    const double C65489 = C59422 * C1493;
    const double C65485 = C59422 * C1484;
    const double C65761 = C59422 * C2398;
    const double C65757 = C59422 * C2897;
    const double C65753 = C59422 * C529;
    const double C65749 = C59422 * C524;
    const double C65745 = C59422 * C2896;
    const double C65741 = C59422 * C2399;
    const double C65737 = C59422 * C528;
    const double C65733 = C59422 * C525;
    const double C65729 = C59422 * C2400;
    const double C65725 = C59422 * C527;
    const double C65721 = C59422 * C526;
    const double C65997 = C59422 * C1483;
    const double C65993 = C59422 * C1044;
    const double C66207 = C59422 * C530;
    const double C66203 = C59422 * C523;
    const double C67089 = C59422 * C9385;
    const double C67082 = C59422 * C9383;
    const double C67590 = C59422 * C9381;
    const double C68367 = C59422 * C17789;
    const double C68363 = C59422 * C18550;
    const double C68359 = C59422 * C2401;
    const double C68670 = C59422 * C9384;
    const double C68874 = C59422 * C2402;
    const double C93907 = C59422 * C1487;
    const double C118276 = C59422 * C2403;
    const double C118543 = C59422 * C2397;
    const double C119950 = C59422 * C17790;
    const double C120281 = C59422 * C17788;
    const double C73923 = C73638 * C1305;
    const double C73919 = C73638 * C333;
    const double C73911 = C73638 * C326;
    const double C73903 = C73638 * C1306;
    const double C73895 = C73638 * C332;
    const double C73887 = C73638 * C327;
    const double C73875 = C73638 * C1307;
    const double C73871 = C73638 * C331;
    const double C73863 = C73638 * C328;
    const double C74415 = C73638 * C335;
    const double C74407 = C73638 * C334;
    const double C74955 = C73638 * C1044;
    const double C74947 = C73638 * C1487;
    const double C74943 = C73638 * C1488;
    const double C74935 = C73638 * C1043;
    const double C74923 = C73638 * C1042;
    const double C74915 = C73638 * C1489;
    const double C75348 = C73638 * C7731;
    const double C75344 = C73638 * C1310;
    const double C75614 = C73638 * C7997;
    const double C75610 = C73638 * C2000;
    const double C75602 = C73638 * C1492;
    const double C75594 = C73638 * C1485;
    const double C75844 = C73638 * C1311;
    const double C76150 = C73638 * C2001;
    const double C76360 = C73638 * C7999;
    const double C77231 = C73638 * C1484;
    const double C77223 = C73638 * C1493;
    const double C77647 = C73638 * C2896;
    const double C77639 = C73638 * C9381;
    const double C82885 = C73638 * C530;
    const double C82877 = C73638 * C1483;
    const double C82873 = C73638 * C523;
    const double C82865 = C73638 * C529;
    const double C82857 = C73638 * C524;
    const double C82845 = C73638 * C528;
    const double C82841 = C73638 * C525;
    const double C83197 = C73638 * C1045;
    const double C83469 = C73638 * C531;
    const double C86279 = C73638 * C2402;
    const double C86271 = C73638 * C9384;
    const double C86267 = C73638 * C2399;
    const double C86692 = C73638 * C2897;
    const double C86965 = C73638 * C2398;
    const double C134770 = C73638 * C2397;
    const double C135176 = C73638 * C532;
    const double C137272 = C73638 * C17788;
    const double C137771 = C73638 * C2403;
    const double C150837 = C150835 + C150817;
    const double C150836 = C150834 + C150814;
    const double C150865 = C150855 + C150841;
    const double C150904 = C150901 + C150878;
    const double C18132 = C6031 * C2904;
    const double C27122 = C23132 * C2904;
    const double C54888 = C50898 * C2904;
    const double C65758 = C59421 * C2904;
    const double C86693 = C150632 * C2904;
    const double C8277 =
        (4 * (2 * C151544 + C151005 * C151594) +
         C151005 * (3 * C151594 +
                    C151005 * (2 * C151153 +
                               C151005 * (C150895 + C150978 * C151012)))) /
        C150613;
    const double C8587 =
        (C151078 *
         (3 * C151594 +
          C151005 * (2 * C151153 + C151005 * (C150895 + C150978 * C151012)))) /
        C150613;
    const double C9697 =
        (2 * C151544 + C151005 * C151594 +
         (2 * C151153 + C151005 * (C150895 + C150978 * C151012)) * C151085) /
        C150613;
    const double C9923 =
        (2 * C151078 * C151594 +
         C151078 * (C151594 + (C150895 + C150978 * C151012) * C151085)) /
        C150613;
    const double C18339 =
        (4 * (2 * C151078 * C150830 + C151078 * C151656) +
         C151078 * (3 * C151656 +
                    C151078 * (2 * C151179 +
                               C151078 * (C150895 + C150978 * C151085)))) /
        C150613;
    const double C8049 = C6031 * C8004;
    const double C61856 = C59421 * C8004;
    const double C75615 = C150632 * C8004;
    const double C8811 = C6031 * C8008;
    const double C61134 = C59421 * C8008;
    const double C76361 = C150632 * C8008;
    const double C150903 = C150900 + C150875;
    const double C150946 = C150935 + C150917;
    const double C151166 = C151151 + C151159;
    const double C15987 = C151913 * C1519;
    const double C26714 = C23125 * C1519;
    const double C54480 = C50891 * C1519;
    const double C65999 = C151908 * C1519;
    const double C82879 = C151913 * C1519;
    const double C18130 = C6031 * C2903;
    const double C27120 = C23132 * C2903;
    const double C54886 = C50898 * C2903;
    const double C65756 = C59421 * C2903;
    const double C86691 = C150632 * C2903;
    const double C151192 = C151177 + C151185;
    const double C8276 =
        (4 * (2 * C151542 + C151005 * C151591) +
         C151005 * (3 * C151591 +
                    C151005 * (2 * C151152 +
                               C151005 * (C150894 + C150975 * C151012)))) /
        C150613;
    const double C8586 =
        (C151078 *
         (3 * C151591 +
          C151005 * (2 * C151152 + C151005 * (C150894 + C150975 * C151012)))) /
        C150613;
    const double C9696 =
        (2 * C151542 + C151005 * C151591 +
         (2 * C151152 + C151005 * (C150894 + C150975 * C151012)) * C151085) /
        C150613;
    const double C9922 =
        (2 * C151078 * C151591 +
         C151078 * (C151591 + (C150894 + C150975 * C151012) * C151085)) /
        C150613;
    const double C18338 =
        (4 * (2 * C151078 * C150829 + C151078 * C151653) +
         C151078 * (3 * C151653 +
                    C151078 * (2 * C151178 +
                               C151078 * (C150894 + C150975 * C151085)))) /
        C150613;
    const double C8047 = C6031 * C8003;
    const double C61854 = C59421 * C8003;
    const double C75613 = C150632 * C8003;
    const double C8809 = C6031 * C8007;
    const double C61132 = C59421 * C8007;
    const double C76359 = C150632 * C8007;
    const double C6319 = C151913 * C1329;
    const double C25319 = C23125 * C1329;
    const double C53085 = C50891 * C1329;
    const double C59953 = C151908 * C1329;
    const double C73925 = C151913 * C1329;
    const double C6323 = C6024 * C1330;
    const double C6299 = C151913 * C1330;
    const double C24810 = C23125 * C1330;
    const double C25323 = C152350 * C1330;
    const double C52576 = C50891 * C1330;
    const double C53089 = C50890 * C1330;
    const double C59613 = C151908 * C1330;
    const double C73929 = C152263 * C1330;
    const double C73905 = C151913 * C1330;
    const double C7756 = C151913 * C1334;
    const double C8288 = C6024 * C1334;
    const double C24818 = C152350 * C1334;
    const double C52584 = C50890 * C1334;
    const double C59601 = C151908 * C1334;
    const double C75346 = C151913 * C1334;
    const double C75850 = C152263 * C1334;
    const double C8284 = C151913 * C1335;
    const double C24814 = C23125 * C1335;
    const double C52580 = C50891 * C1335;
    const double C59617 = C151908 * C1335;
    const double C75846 = C151913 * C1335;
    const double C8046 = C151913 * C2012;
    const double C8598 = C6024 * C2012;
    const double C25849 = C152350 * C2012;
    const double C53615 = C50890 * C2012;
    const double C60313 = C151908 * C2012;
    const double C75612 = C151913 * C2012;
    const double C76156 = C152263 * C2012;
    const double C7764 = C6024 * C7744;
    const double C60597 = C151908 * C7744;
    const double C75354 = C152263 * C7744;
    const double C8054 = C6024 * C8016;
    const double C60771 = C151908 * C8016;
    const double C75620 = C152263 * C8016;
    const double C8816 = C6024 * C8018;
    const double C60775 = C151908 * C8018;
    const double C76366 = C152263 * C8018;
    const double C15212 = C151913 * C2421;
    const double C35277 = C23125 * C2421;
    const double C105051 = C50891 * C2421;
    const double C118545 = C151908 * C2421;
    const double C134772 = C151913 * C2421;
    const double C15216 = C6024 * C2422;
    const double C15192 = C151913 * C2422;
    const double C34759 = C23125 * C2422;
    const double C35281 = C152350 * C2422;
    const double C65763 = C151908 * C2422;
    const double C86967 = C151913 * C2422;
    const double C104533 = C50891 * C2422;
    const double C105055 = C50890 * C2422;
    const double C134776 = C152263 * C2422;
    const double C17813 = C151913 * C2426;
    const double C18350 = C6024 * C2426;
    const double C34767 = C152350 * C2426;
    const double C68876 = C151908 * C2426;
    const double C86281 = C151913 * C2426;
    const double C104541 = C50890 * C2426;
    const double C137777 = C152263 * C2426;
    const double C18346 = C151913 * C2427;
    const double C34763 = C23125 * C2427;
    const double C104537 = C50891 * C2427;
    const double C118278 = C151908 * C2427;
    const double C137773 = C151913 * C2427;
    const double C17821 = C6024 * C17801;
    const double C68369 = C151908 * C17801;
    const double C137278 = C152263 * C17801;
    const double C150989 = C150986 + C150959;
    const double C150982 = C150930 + C150977;
    const double C150988 = C150985 + C150956;
    const double C151076 = C151073 + C151075;
    const double C151249 = C151244 + C151248;
    const double C151278 = C151277 + C151272;
    const double C2014 =
        (2 * (ae * C151078 * C151273 + be * C151078 * C151274 +
              C150718 * C151292) +
         ae * C151078 *
             (2 * C151152 + C151005 * (C150894 + C150975 * C151012)) +
         be * C151078 *
             (2 * C151153 + C151005 * (C150895 + C150978 * C151012)) +
         C150718 *
             (C151292 +
              ae * C151078 *
                  (2 * C151154 + C151005 * (C150880 + C150961 * C151012)) +
              be * C151078 *
                  (2 * C151155 + C151005 * (C150882 + C150963 * C151012)) +
              C150718 *
                  (ae * C151078 *
                       (2 * C151156 + C151005 * (C150868 + C150949 * C151012)) +
                   be * C151078 *
                       (2 * C151157 + C151005 * (C150871 + C150952 * C151012)) +
                   C150718 * C151078 *
                       (2 * C151158 +
                        C151005 * (C150960 +
                                   (C150923 * C150924 +
                                    C150722 * bs[9] * std::pow(C150724, 9)) *
                                       C150615 * C151012))))) /
        C150617;
    const double C10126 =
        (ae * (2 * C151078 * C151273 +
               C151078 * (C151273 + (2 * C151156 +
                                     C151005 * (C150868 + C150949 * C151012)) *
                                        C151085)) +
         be * (2 * C151078 * C151274 +
               C151078 * (C151274 + (2 * C151157 +
                                     C151005 * (C150871 + C150952 * C151012)) *
                                        C151085)) +
         C150718 *
             (2 * C151292 +
              C151078 * (C151247 +
                         (2 * C151158 +
                          C151005 * (C150960 +
                                     (C150923 * C150924 +
                                      C150722 * bs[9] * std::pow(C150724, 9)) *
                                         C150615 * C151012)) *
                             C151085))) /
        C150617;
    const double C61658 =
        (3 * (C151236 + C151247 * C151085) +
         C151078 *
             (2 * C151292 +
              C151078 * (C151247 +
                         (2 * C151158 +
                          C151005 * (C150960 +
                                     (C150923 * C150924 +
                                      C150722 * bs[9] * std::pow(C150724, 9)) *
                                         C150615 * C151012)) *
                             C151085))) /
        C150617;
    const double C8594 = C151913 * C2013;
    const double C25845 = C23125 * C2013;
    const double C53611 = C50891 * C2013;
    const double C60317 = C151908 * C2013;
    const double C76152 = C151913 * C2013;
    const double C8050 = C151913 * C8015;
    const double C61857 = C151908 * C8015;
    const double C75616 = C151913 * C8015;
    const double C62145 = C151908 * C10125;
    const double C10131 = C151913 * C9399;
    const double C67592 = C151908 * C9399;
    const double C77641 = C151913 * C9399;
    const double C67091 = C151908 * C9403;
    const double C151149 = C151146 + C151148;
    const double C151309 = C151304 + C151308;
    const double C151333 = C151332 + C151327;
    const double C151174 = C150718 * C151173;
    const double C151232 = C151229 + C151231;
    const double C2910 =
        (2 * (ae * (2 * C151208 + C151078 * C151314) +
              be * (2 * C151209 + C151078 * C151315) + C150718 * C151340) +
         ae * (2 * C151078 * C151152 +
               C151078 * (C151152 + C151005 * C150975 * C151085)) +
         be * (2 * C151078 * C151153 +
               C151078 * (C151153 + C151005 * C150978 * C151085)) +
         C150718 *
             (C151340 +
              ae * (2 * C151217 +
                    C151078 * (C151154 + C151005 * C150961 * C151085)) +
              be * (2 * C151218 +
                    C151078 * (C151155 + C151005 * C150963 * C151085)) +
              C150718 *
                  (ae * (2 * C151219 +
                         C151078 * (C151156 + C151005 * C150949 * C151085)) +
                   be * (2 * C151220 +
                         C151078 * (C151157 + C151005 * C150952 * C151085)) +
                   C150718 *
                       (2 * C151221 +
                        C151078 * (C151158 + C151005 *
                                                 (C150923 * C150924 +
                                                  C150722 * bs[9] *
                                                      std::pow(C150724, 9)) *
                                                 C150615 * C151085))))) /
        C150617;
    const double C9402 = (ae * (3 * (C151018 + C151041 * C151085) +
                                C151078 * (2 * C151208 + C151078 * C151314)) +
                          be * (3 * (C151019 + C151042 * C151085) +
                                C151078 * (2 * C151209 + C151078 * C151315)) +
                          C150718 * (3 * C151252 + C151078 * C151340)) /
                         C150617;
    const double C18127 =
        (3 * C151252 + C151078 * C151340 +
         ae * (3 * (C151039 + C151154 * C151085) +
               C151078 * (2 * C151217 +
                          C151078 * (C151154 + C151005 * C150961 * C151085))) +
         be * (3 * (C151040 + C151155 * C151085) +
               C151078 * (2 * C151218 +
                          C151078 * (C151155 + C151005 * C150963 * C151085))) +
         C150718 *
             (ae * (3 * C151314 +
                    C151078 *
                        (2 * C151219 +
                         C151078 * (C151156 + C151005 * C150949 * C151085))) +
              be * (3 * C151315 +
                    C151078 *
                        (2 * C151220 +
                         C151078 * (C151157 + C151005 * C150952 * C151085))) +
              C150718 * (3 * C151316 +
                         C151078 * (2 * C151221 +
                                    C151078 * (C151158 +
                                               C151005 *
                                                   (C150923 * C150924 +
                                                    C150722 * bs[9] *
                                                        std::pow(C150724, 9)) *
                                                   C150615 * C151085))))) /
        C150617;
    const double C18556 = (4 * (2 * C151206 + C151078 * C151252) +
                           C151078 * (3 * C151252 + C151078 * C151340)) /
                          C150617;
    const double C18557 =
        (ae * (4 * (2 * C151208 + C151078 * C151314) +
               C151078 * (3 * C151314 +
                          C151078 * (2 * C151219 +
                                     C151078 * (C151156 + C151005 * C150949 *
                                                              C151085)))) +
         be * (4 * (2 * C151209 + C151078 * C151315) +
               C151078 * (3 * C151315 +
                          C151078 * (2 * C151220 +
                                     C151078 * (C151157 + C151005 * C150952 *
                                                              C151085)))) +
         C150718 *
             (4 * C151340 +
              C151078 * (3 * C151316 +
                         C151078 * (2 * C151221 +
                                    C151078 * (C151158 +
                                               C151005 *
                                                   (C150923 * C150924 +
                                                    C150722 * bs[9] *
                                                        std::pow(C150724, 9)) *
                                                   C150615 * C151085))))) /
        C150617;
    const double C68356 =
        (5 * (3 * C151252 + C151078 * C151340) +
         C151078 *
             (4 * C151340 +
              C151078 * (3 * C151316 +
                         C151078 * (2 * C151221 +
                                    C151078 * (C151158 +
                                               C151005 *
                                                   (C150923 * C150924 +
                                                    C150722 * bs[9] *
                                                        std::pow(C150724, 9)) *
                                                   C150615 * C151085))))) /
        C150617;
    const double C151200 = C150718 * C151199;
    const double C129 =
        (C152370 + 2 * C151944) / C151934 - (C152379 * C151935) / C151930;
    const double C130 = (C152353 + 2 * C151953 + C152379) / C151934 -
                        (C152372 * C151935) / C151930;
    const double C131 = (C152320 + C151950 / C151930 + C152372) / C151934 -
                        (C152355 * C151935) / C151930;
    const double C1299 =
        (C152373 + 2 * C152026) / C151934 - (C152380 * C152022) / C151930;
    const double C1300 = (C152357 + 2 * C152033 + C152380) / C151934 -
                         (C152376 * C152022) / C151930;
    const double C1301 = (C152326 + C152030 / C151930 + C152376) / C151934 -
                         (C152362 * C152022) / C151930;
    const double C2392 =
        (C152374 + 2 * C152068) / C151934 - (C152381 * C152064) / C151930;
    const double C2393 = (C152359 + 2 * C152075 + C152381) / C151934 -
                         (C152378 * C152064) / C151930;
    const double C2394 = (C152329 + C152072 / C151930 + C152378) / C151934 -
                         (C152365 * C152064) / C151930;
    const double C73928 = C150639 * C1316;
    const double C73926 = C150639 * C1315;
    const double C73916 = C150639 * C351;
    const double C73914 = C150639 * C350;
    const double C73908 = C150639 * C341;
    const double C73906 = C150639 * C340;
    const double C73900 = C150639 * C1318;
    const double C73898 = C150639 * C1317;
    const double C73892 = C150639 * C349;
    const double C73890 = C150639 * C348;
    const double C73884 = C150639 * C343;
    const double C73882 = C150639 * C342;
    const double C73880 = C150639 * C1320;
    const double C73878 = C150639 * C1319;
    const double C73868 = C150639 * C347;
    const double C73866 = C150639 * C346;
    const double C73860 = C150639 * C345;
    const double C73858 = C150639 * C344;
    const double C74404 = C150639 * C339;
    const double C74402 = C150639 * C338;
    const double C74960 = C150639 * C1052;
    const double C74958 = C150639 * C1051;
    const double C74952 = C150639 * C1506;
    const double C74950 = C150639 * C1505;
    const double C74940 = C150639 * C1508;
    const double C74938 = C150639 * C1507;
    const double C74932 = C150639 * C1050;
    const double C74930 = C150639 * C1049;
    const double C74928 = C150639 * C1048;
    const double C74926 = C150639 * C1047;
    const double C74920 = C150639 * C1510;
    const double C74918 = C150639 * C1509;
    const double C75353 = C150639 * C7738;
    const double C75351 = C150639 * C7737;
    const double C75341 = C150639 * C1322;
    const double C75339 = C150639 * C1321;
    const double C75619 = C150639 * C8006;
    const double C75617 = C150639 * C8005;
    const double C75607 = C150639 * C2004;
    const double C75605 = C150639 * C2003;
    const double C75599 = C150639 * C1512;
    const double C75597 = C150639 * C1511;
    const double C75591 = C150639 * C1502;
    const double C75589 = C150639 * C1501;
    const double C75849 = C150639 * C1324;
    const double C75847 = C150639 * C1323;
    const double C76155 = C150639 * C2006;
    const double C76153 = C150639 * C2005;
    const double C76365 = C150639 * C8010;
    const double C76363 = C150639 * C8009;
    const double C77236 = C150639 * C1500;
    const double C77234 = C150639 * C1499;
    const double C77228 = C150639 * C1514;
    const double C77226 = C150639 * C1513;
    const double C77652 = C150639 * C2900;
    const double C77650 = C150639 * C2899;
    const double C77644 = C150639 * C9390;
    const double C77642 = C150639 * C9389;
    const double C82890 = C150639 * C548;
    const double C82888 = C150639 * C547;
    const double C82882 = C150639 * C1498;
    const double C82880 = C150639 * C1497;
    const double C82870 = C150639 * C538;
    const double C82868 = C150639 * C537;
    const double C82862 = C150639 * C546;
    const double C82860 = C150639 * C545;
    const double C82854 = C150639 * C540;
    const double C82852 = C150639 * C539;
    const double C82850 = C150639 * C544;
    const double C82848 = C150639 * C543;
    const double C82838 = C150639 * C542;
    const double C82836 = C150639 * C541;
    const double C83466 = C150639 * C536;
    const double C83464 = C150639 * C535;
    const double C86284 = C150639 * C2414;
    const double C86282 = C150639 * C2413;
    const double C86276 = C150639 * C9392;
    const double C86274 = C150639 * C9391;
    const double C86264 = C150639 * C2412;
    const double C86262 = C150639 * C2411;
    const double C86697 = C150639 * C2902;
    const double C86695 = C150639 * C2901;
    const double C86970 = C150639 * C2410;
    const double C86968 = C150639 * C2409;
    const double C134775 = C150639 * C2408;
    const double C134773 = C150639 * C2407;
    const double C137277 = C150639 * C17795;
    const double C137275 = C150639 * C17794;
    const double C137776 = C150639 * C2416;
    const double C137774 = C150639 * C2415;
    const double C134 =
        ((((0 - (C150611 * C150612) / C150613) * ae) / C150613 -
          (0 * be) / C150622 + C150614 / C150613) /
             C150618 -
         ((C150611 * C150635 + 0) * be) / C150613) /
            C150618 +
        ((C150611 * (C150635 / C150618 -
                     ((C150611 * C150639 + C152263) * be) / C150613 + C150632) +
          C152349) *
         ae) /
            C150613 +
        C150639 / C150618 - ((C150611 * C150632 + C151913) * be) / C150613;
    const double C136 =
        (C150635 / C150618 - ((C150611 * C150639 + C152263) * be) / C150613 +
         C150632) /
            C150618 +
        ((C150611 * (C150639 / C150618 -
                     ((C150611 * C150632 + C151913) * be) / C150613) +
          C152350) *
         ae) /
            C150613 +
        2 * (C150632 / C150618 - (0 * be) / C150613);
    const double C138 =
        (C150639 / C150618 - ((C150611 * C150632 + C151913) * be) / C150613) /
            C150618 +
        ((C150611 * (C150632 / C150618 - (0 * be) / C150613) + C23125) * ae) /
            C150613;
    const double C23128 = C150635 / C150618 -
                          ((C150611 * C150639 + C152263) * be) / C150613 +
                          C150632;
    const double C23130 =
        C150639 / C150618 - ((C150611 * C150632 + C151913) * be) / C150613;
    const double C50894 = C150635 / C150618 +
                          ((C150611 * C150639 + C152263) * ae) / C150613 +
                          C150632;
    const double C50896 =
        C150639 / C150618 + ((C150611 * C150632 + C151913) * ae) / C150613;
    const double C150651 = C150647 - C150650;
    const double C6337 = C6304 - C6305;
    const double C6335 = C6296 - C6297;
    const double C6333 = C6288 - C6289;
    const double C6331 = C6280 - C6281;
    const double C6328 = C6268 - C6269;
    const double C6327 = C6264 - C6265;
    const double C6325 = C6256 - C6257;
    const double C7363 = C7336 - C7337;
    const double C7361 = C7328 - C7329;
    const double C7358 = C7316 - C7317;
    const double C7356 = C7308 - C7309;
    const double C7768 = C7757 - C7758;
    const double C7767 = C7753 - C7754;
    const double C8061 = C8043 - C8044;
    const double C8059 = C8035 - C8036;
    const double C8057 = C8027 - C8028;
    const double C8290 = C8281 - C8282;
    const double C8600 = C8591 - C8592;
    const double C9718 = C9708 - C9709;
    const double C9716 = C9700 - C9701;
    const double C10146 = C10136 - C10137;
    const double C10144 = C10128 - C10129;
    const double C15230 = C15197 - C15198;
    const double C15228 = C15189 - C15190;
    const double C15226 = C15181 - C15182;
    const double C15224 = C15173 - C15174;
    const double C15221 = C15161 - C15162;
    const double C15220 = C15157 - C15158;
    const double C15218 = C15149 - C15150;
    const double C17824 = C17814 - C17815;
    const double C17823 = C17810 - C17811;
    const double C18351 = C18343 - C18344;
    const double C18568 = C18560 - C18561;
    const double C23433 = C23385 - C23386;
    const double C23428 = C23365 - C23366;
    const double C23427 = C23361 - C23362;
    const double C24432 = C24396 - C24397;
    const double C24826 = C24811 - C24812;
    const double C24825 = C24807 - C24808;
    const double C25101 = C25083 - C25084;
    const double C25100 = C25079 - C25080;
    const double C25097 = C25067 - C25068;
    const double C25854 = C25842 - C25843;
    const double C32209 = C32161 - C32162;
    const double C32204 = C32141 - C32142;
    const double C32203 = C32137 - C32138;
    const double C34775 = C34760 - C34761;
    const double C34774 = C34756 - C34757;
    const double C51199 = C51151 - C51152;
    const double C51194 = C51131 - C51132;
    const double C51193 = C51127 - C51128;
    const double C52198 = C52162 - C52163;
    const double C52592 = C52577 - C52578;
    const double C52591 = C52573 - C52574;
    const double C52867 = C52849 - C52850;
    const double C52866 = C52845 - C52846;
    const double C52863 = C52833 - C52834;
    const double C53620 = C53608 - C53609;
    const double C101983 = C101935 - C101936;
    const double C101978 = C101915 - C101916;
    const double C101977 = C101911 - C101912;
    const double C104549 = C104534 - C104535;
    const double C104548 = C104530 - C104531;
    const double C59629 = C59614 - C59615;
    const double C59628 = C59610 - C59611;
    const double C59627 = C59606 - C59607;
    const double C59626 = C59602 - C59603;
    const double C59625 = C59598 - C59599;
    const double C59624 = C59594 - C59595;
    const double C59623 = C59590 - C59591;
    const double C59622 = C59586 - C59587;
    const double C59621 = C59582 - C59583;
    const double C59620 = C59578 - C59579;
    const double C59619 = C59574 - C59575;
    const double C59618 = C59570 - C59571;
    const double C59954 = C59942 - C59943;
    const double C60334 = C60322 - C60323;
    const double C60333 = C60318 - C60319;
    const double C60332 = C60314 - C60315;
    const double C60331 = C60310 - C60311;
    const double C60330 = C60306 - C60307;
    const double C60329 = C60302 - C60303;
    const double C60328 = C60298 - C60299;
    const double C60327 = C60294 - C60295;
    const double C60326 = C60290 - C60291;
    const double C60603 = C60598 - C60599;
    const double C60602 = C60594 - C60595;
    const double C60784 = C60776 - C60777;
    const double C60783 = C60772 - C60773;
    const double C60782 = C60768 - C60769;
    const double C60781 = C60764 - C60765;
    const double C60780 = C60760 - C60761;
    const double C60934 = C60930 - C60931;
    const double C61278 = C61274 - C61275;
    const double C61868 = C61862 - C61863;
    const double C61867 = C61858 - C61859;
    const double C62156 = C62150 - C62151;
    const double C62155 = C62146 - C62147;
    const double C62154 = C62142 - C62143;
    const double C65495 = C65488 - C65489;
    const double C65494 = C65484 - C65485;
    const double C65774 = C65760 - C65761;
    const double C65772 = C65752 - C65753;
    const double C65771 = C65748 - C65749;
    const double C65770 = C65744 - C65745;
    const double C65769 = C65740 - C65741;
    const double C65768 = C65736 - C65737;
    const double C65767 = C65732 - C65733;
    const double C65766 = C65728 - C65729;
    const double C65765 = C65724 - C65725;
    const double C65764 = C65720 - C65721;
    const double C66210 = C66202 - C66203;
    const double C67095 = C67088 - C67089;
    const double C67094 = C67081 - C67082;
    const double C67595 = C67589 - C67590;
    const double C68372 = C68366 - C68367;
    const double C68371 = C68362 - C68363;
    const double C68370 = C68358 - C68359;
    const double C68675 = C68669 - C68670;
    const double C68877 = C68873 - C68874;
    const double C118279 = C118275 - C118276;
    const double C119953 = C119949 - C119950;
    const double C120284 = C120280 - C120281;
    const double C73943 = C73910 - C73911;
    const double C73941 = C73902 - C73903;
    const double C73939 = C73894 - C73895;
    const double C73937 = C73886 - C73887;
    const double C73934 = C73874 - C73875;
    const double C73933 = C73870 - C73871;
    const double C73931 = C73862 - C73863;
    const double C74969 = C74942 - C74943;
    const double C74967 = C74934 - C74935;
    const double C74964 = C74922 - C74923;
    const double C74962 = C74914 - C74915;
    const double C75358 = C75347 - C75348;
    const double C75357 = C75343 - C75344;
    const double C75627 = C75609 - C75610;
    const double C75625 = C75601 - C75602;
    const double C75623 = C75593 - C75594;
    const double C75852 = C75843 - C75844;
    const double C76158 = C76149 - C76150;
    const double C77240 = C77230 - C77231;
    const double C77238 = C77222 - C77223;
    const double C77656 = C77646 - C77647;
    const double C77654 = C77638 - C77639;
    const double C82901 = C82872 - C82873;
    const double C82899 = C82864 - C82865;
    const double C82897 = C82856 - C82857;
    const double C82894 = C82844 - C82845;
    const double C82893 = C82840 - C82841;
    const double C86290 = C86278 - C86279;
    const double C86288 = C86270 - C86271;
    const double C86287 = C86266 - C86267;
    const double C86972 = C86964 - C86965;
    const double C137279 = C137271 - C137272;
    const double C137778 = C137770 - C137771;
    const double C161 =
        (4 * (2 * C150750 + C150718 * C150784 + C150768 * ae) +
         C150718 * (3 * C150784 + C150718 * C150837 + C150820 * ae) +
         (3 * C150768 + C150718 * C150820) * ae) /
        C150613;
    const double C353 =
        (2 * C150750 + C150718 * C150784 + C150768 * ae + C150837 * C151012) /
        C150613;
    const double C355 =
        (C151005 * (3 * C150784 + C150718 * C150837 + C150820 * ae)) / C150613;
    const double C550 =
        (2 * C150750 + C150718 * C150784 + C150768 * ae + C150837 * C151085) /
        C150613;
    const double C552 =
        (C151078 * (3 * C150784 + C150718 * C150837 + C150820 * ae)) / C150613;
    const double C1054 = (C151078 * C151005 * C150837) / C150613;
    const double C171 =
        (4 * (2 * C150780 + ae * C150783 + be * C150784 + C150718 * C150831) +
         ae * (3 * C150783 + C150718 * C150836 + C150820 * be) +
         be * (3 * C150784 + C150718 * C150837 + C150820 * ae) +
         C150718 *
             (3 * C150831 + ae * C150836 + be * C150837 +
              C150718 * (2 * C150825 + ae * C150829 + be * C150830 +
                         C150718 * (C150818 + ae * C150819 + be * C150821 +
                                    C150718 * (ae * C150807 + be * C150810 +
                                               C150718 *
                                                   (C150791 * C150792 +
                                                    C150722 * bs[7] *
                                                        std::pow(C150724, 7)) *
                                                   C150615))))) /
        C150617;
    const double C370 =
        (3 * (C151006 + ae * C151005 * C150775 + be * C151005 * C150776 +
              C150718 * C151025) +
         ae * C151005 * C150836 + be * C151005 * C150837 +
         C150718 *
             (2 * C151025 + ae * C151005 * C150829 + be * C151005 * C150830 +
              C150718 *
                  (C151020 + ae * C151005 * C150819 + be * C151005 * C150821 +
                   C150718 * (ae * C151005 * C150807 + be * C151005 * C150810 +
                              C150718 * C151005 * C150879)))) /
        C150617;
    const double C567 =
        (3 * (C151079 + ae * C151078 * C150775 + be * C151078 * C150776 +
              C150718 * C151098) +
         ae * C151078 * C150836 + be * C151078 * C150837 +
         C150718 *
             (2 * C151098 + ae * C151078 * C150829 + be * C151078 * C150830 +
              C150718 *
                  (C151093 + ae * C151078 * C150819 + be * C151078 * C150821 +
                   C150718 * (ae * C151078 * C150807 + be * C151078 * C150810 +
                              C150718 * C151078 * C150879)))) /
        C150617;
    const double C160 =
        (4 * (2 * C150749 + C150718 * C150783 + C150768 * be) +
         C150718 * (3 * C150783 + C150718 * C150836 + C150820 * be) +
         (3 * C150768 + C150718 * C150820) * be) /
        C150613;
    const double C352 =
        (2 * C150749 + C150718 * C150783 + C150768 * be + C150836 * C151012) /
        C150613;
    const double C354 =
        (C151005 * (3 * C150783 + C150718 * C150836 + C150820 * be)) / C150613;
    const double C549 =
        (2 * C150749 + C150718 * C150783 + C150768 * be + C150836 * C151085) /
        C150613;
    const double C551 =
        (C151078 * (3 * C150783 + C150718 * C150836 + C150820 * be)) / C150613;
    const double C1053 = (C151078 * C151005 * C150836) / C150613;
    const double C150902 = C150865 + C150899;
    const double C150906 = C150718 * C150904;
    const double C150931 = 4 * C150904;
    const double C150914 = be * C150904;
    const double C151548 = C151005 * C150904;
    const double C1314 =
        (2 * C151005 * C150837 + C151005 * (C150837 + C150904 * C151012)) /
        C150613;
    const double C1496 =
        (C151005 * C150837 + C151005 * C150904 * C151085) / C150613;
    const double C1504 = (C151078 * (C150837 + C150904 * C151012)) / C150613;
    const double C2406 =
        (2 * C151078 * C150837 + C151078 * (C150837 + C150904 * C151085)) /
        C150613;
    const double C150905 = C150718 * C150903;
    const double C150925 = 4 * C150903;
    const double C150913 = ae * C150903;
    const double C371 =
        (3 * (C151016 + ae * (C150775 + C150819 * C151012) +
              be * (C150776 + C150821 * C151012) + C150718 * C151037) +
         ae * (C150836 + C150903 * C151012) +
         be * (C150837 + C150904 * C151012) +
         C150718 * (2 * C151037 + ae * (C150829 + C150894 * C151012) +
                    be * (C150830 + C150895 * C151012) +
                    C150718 * (C151032 + ae * (C150819 + C150880 * C151012) +
                               be * (C150821 + C150882 * C151012) +
                               C150718 * (ae * (C150807 + C150868 * C151012) +
                                          be * (C150810 + C150871 * C151012) +
                                          C150718 * (C150879 +
                                                     C150960 * C151012))))) /
        C150617;
    const double C568 =
        (3 * (C151089 + ae * (C150775 + C150819 * C151085) +
              be * (C150776 + C150821 * C151085) + C150718 * C151110) +
         ae * (C150836 + C150903 * C151085) +
         be * (C150837 + C150904 * C151085) +
         C150718 * (2 * C151110 + ae * (C150829 + C150894 * C151085) +
                    be * (C150830 + C150895 * C151085) +
                    C150718 * (C151105 + ae * (C150819 + C150880 * C151085) +
                               be * (C150821 + C150882 * C151085) +
                               C150718 * (ae * (C150807 + C150868 * C151085) +
                                          be * (C150810 + C150871 * C151085) +
                                          C150718 * (C150879 +
                                                     C150960 * C151085))))) /
        C150617;
    const double C1063 =
        (3 * (C151206 + ae * C151078 * C151039 + be * C151078 * C151040 +
              C150718 * C151215) +
         ae * C151078 * C151005 * C150903 + be * C151078 * C151005 * C150904 +
         C150718 *
             (2 * C151215 + ae * C151078 * C151152 + be * C151078 * C151153 +
              C150718 *
                  (C151210 + ae * C151078 * C151154 + be * C151078 * C151155 +
                   C150718 * (ae * C151078 * C151156 + be * C151078 * C151157 +
                              C150718 * C151078 * C151158)))) /
        C150617;
    const double C151546 = C151005 * C150903;
    const double C1313 =
        (2 * C151005 * C150836 + C151005 * (C150836 + C150903 * C151012)) /
        C150613;
    const double C1495 =
        (C151005 * C150836 + C151005 * C150903 * C151085) / C150613;
    const double C1503 = (C151078 * (C150836 + C150903 * C151012)) / C150613;
    const double C2405 =
        (2 * C151078 * C150836 + C151078 * (C150836 + C150903 * C151085)) /
        C150613;
    const double C150987 = C150946 + C150984;
    const double C151169 = C151166 + C151160;
    const double C18138 = C18130 - C18131;
    const double C27132 = C27120 - C27121;
    const double C54898 = C54886 - C54887;
    const double C65773 = C65756 - C65757;
    const double C86700 = C86691 - C86692;
    const double C151195 = C151192 + C151186;
    const double C8062 = C8047 - C8048;
    const double C61866 = C61854 - C61855;
    const double C75628 = C75613 - C75614;
    const double C8818 = C8809 - C8810;
    const double C61136 = C61132 - C61133;
    const double C76368 = C76359 - C76360;
    const double C150992 = C150718 * C150989;
    const double C1328 = (3 * (C150837 + C150904 * C151012) +
                          C151005 * (2 * C151005 * C150904 +
                                     C151005 * (C150904 + C150989 * C151012))) /
                         C150613;
    const double C1518 = (C150837 + C150904 * C151012 +
                          (C150904 + C150989 * C151012) * C151085) /
                         C150613;
    const double C2010 = (C151078 * (2 * C151005 * C150904 +
                                     C151005 * (C150904 + C150989 * C151012))) /
                         C150613;
    const double C2420 = (3 * (C150837 + C150904 * C151085) +
                          C151078 * (2 * C151078 * C150904 +
                                     C151078 * (C150904 + C150989 * C151085))) /
                         C150613;
    const double C149 = 6 * (4 * C150820 + C150718 * C150891) +
                        C150718 * (5 * C150891 + C150718 * C150982);
    const double C337 = 4 * C150820 + C150718 * C150891 + C150982 * C151012;
    const double C534 = 4 * C150820 + C150718 * C150891 + C150982 * C151085;
    const double C707 = C151005 * (5 * C150891 + C150718 * C150982);
    const double C843 = C151078 * (5 * C150891 + C150718 * C150982);
    const double C1046 = C151078 * C151005 * C150982;
    const double C150991 = C150718 * C150988;
    const double C1868 =
        (3 * (C151257 + ae * C151078 * C151061 + be * C151078 * C151062 +
              C150718 * C151287) +
         ae * C151078 * (C150903 + C150988 * C151012) +
         be * C151078 * (C150904 + C150989 * C151012) +
         C150718 *
             (2 * C151287 + ae * C151078 * (C150894 + C150975 * C151012) +
              be * C151078 * (C150895 + C150978 * C151012) +
              C150718 *
                  (C151282 + ae * C151078 * (C150880 + C150961 * C151012) +
                   be * C151078 * (C150882 + C150963 * C151012) +
                   C150718 * (ae * C151078 * (C150868 + C150949 * C151012) +
                              be * C151078 * (C150871 + C150952 * C151012) +
                              C150718 * C151078 *
                                  (C150960 +
                                   (C150923 * C150924 +
                                    C150722 * bs[9] * std::pow(C150724, 9)) *
                                       C150615 * C151012))))) /
        C150617;
    const double C2626 =
        (3 * (C151252 + ae * (C151039 + C151154 * C151085) +
              be * (C151040 + C151155 * C151085) + C150718 * C151321) +
         ae * (C151005 * C150903 + C151005 * C150988 * C151085) +
         be * (C151005 * C150904 + C151005 * C150989 * C151085) +
         C150718 *
             (2 * C151321 + ae * (C151152 + C151005 * C150975 * C151085) +
              be * (C151153 + C151005 * C150978 * C151085) +
              C150718 *
                  (C151316 + ae * (C151154 + C151005 * C150961 * C151085) +
                   be * (C151155 + C151005 * C150963 * C151085) +
                   C150718 *
                       (ae * (C151156 + C151005 * C150949 * C151085) +
                        be * (C151157 + C151005 * C150952 * C151085) +
                        C150718 * (C151158 + C151005 *
                                                 (C150923 * C150924 +
                                                  C150722 * bs[9] *
                                                      std::pow(C150724, 9)) *
                                                 C150615 * C151085))))) /
        C150617;
    const double C1327 = (3 * (C150836 + C150903 * C151012) +
                          C151005 * (2 * C151005 * C150903 +
                                     C151005 * (C150903 + C150988 * C151012))) /
                         C150613;
    const double C1517 = (C150836 + C150903 * C151012 +
                          (C150903 + C150988 * C151012) * C151085) /
                         C150613;
    const double C2009 = (C151078 * (2 * C151005 * C150903 +
                                     C151005 * (C150903 + C150988 * C151012))) /
                         C150613;
    const double C2419 = (3 * (C150836 + C150903 * C151085) +
                          C151078 * (2 * C151078 * C150903 +
                                     C151078 * (C150903 + C150988 * C151085))) /
                         C150613;
    const double C1336 =
        (2 * (ae * (3 * C151030 + C151005 * (2 * C151041 + C151005 * C151063)) +
              be * (3 * C151031 + C151005 * (2 * C151042 + C151005 * C151064)) +
              C150718 * C151249) +
         ae * (3 * (C150829 + C150894 * C151012) +
               C151005 *
                   (2 * C151152 + C151005 * (C150894 + C150975 * C151012))) +
         be * (3 * (C150830 + C150895 * C151012) +
               C151005 *
                   (2 * C151153 + C151005 * (C150895 + C150978 * C151012))) +
         C150718 *
             (C151249 +
              ae * (3 * C151061 +
                    C151005 * (2 * C151154 +
                               C151005 * (C150880 + C150961 * C151012))) +
              be * (3 * C151062 +
                    C151005 * (2 * C151155 +
                               C151005 * (C150882 + C150963 * C151012))) +
              C150718 *
                  (ae * (3 * C151063 +
                         C151005 * (2 * C151156 +
                                    C151005 * (C150868 + C150949 * C151012))) +
                   be * (3 * C151064 +
                         C151005 * (2 * C151157 +
                                    C151005 * (C150871 + C150952 * C151012))) +
                   C150718 *
                       (3 * C151065 +
                        C151005 *
                            (2 * C151158 +
                             C151005 * (C150960 + (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                      C150615 * C151012)))))) /
        C150617;
    const double C7743 = (ae * (4 * (2 * C151018 + C151005 * C151030) +
                                C151005 * (3 * C151030 + C151005 * C151273)) +
                          be * (4 * (2 * C151019 + C151005 * C151031) +
                                C151005 * (3 * C151031 + C151005 * C151274)) +
                          C150718 * (4 * C151236 + C151005 * C151249)) /
                         C150617;
    const double C7745 = (5 * (3 * C151016 + C151005 * C151236) +
                          C151005 * (4 * C151236 + C151005 * C151249)) /
                         C150617;
    const double C7746 =
        (ae * (5 * (3 * C151030 + C151005 * C151273) +
               C151005 *
                   (4 * C151273 +
                    C151005 * (3 * C151063 +
                               C151005 * (2 * C151156 +
                                          C151005 * (C150868 +
                                                     C150949 * C151012))))) +
         be * (5 * (3 * C151031 + C151005 * C151274) +
               C151005 *
                   (4 * C151274 +
                    C151005 * (3 * C151064 +
                               C151005 * (2 * C151157 +
                                          C151005 * (C150871 +
                                                     C150952 * C151012))))) +
         C150718 *
             (5 * C151249 +
              C151005 *
                  (4 * C151247 +
                   C151005 *
                       (3 * C151065 +
                        C151005 *
                            (2 * C151158 +
                             C151005 * (C150960 + (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                      C150615 * C151012)))))) /
        C150617;
    const double C8017 = (ae * C151078 * (3 * C151030 + C151005 * C151273) +
                          be * C151078 * (3 * C151031 + C151005 * C151274) +
                          C150718 * C151078 * C151249) /
                         C150617;
    const double C8019 =
        (3 * C151016 + C151005 * C151236 + C151249 * C151085) / C150617;
    const double C8020 =
        (ae * (3 * C151030 + C151005 * C151273 +
               (3 * C151063 +
                C151005 *
                    (2 * C151156 + C151005 * (C150868 + C150949 * C151012))) *
                   C151085) +
         be * (3 * C151031 + C151005 * C151274 +
               (3 * C151064 +
                C151005 *
                    (2 * C151157 + C151005 * (C150871 + C150952 * C151012))) *
                   C151085) +
         C150718 *
             (C151249 +
              (3 * C151065 +
               C151005 * (2 * C151158 +
                          C151005 * (C150960 +
                                     (C150923 * C150924 +
                                      C150722 * bs[9] * std::pow(C150724, 9)) *
                                         C150615 * C151012))) *
                  C151085)) /
        C150617;
    const double C8278 =
        (4 * C151236 + C151005 * C151249 +
         ae *
             (4 * (2 * C151039 + C151005 * C151061) +
              C151005 * (3 * C151061 +
                         C151005 * (2 * C151154 +
                                    C151005 * (C150880 + C150961 * C151012)))) +
         be *
             (4 * (2 * C151040 + C151005 * C151062) +
              C151005 * (3 * C151062 +
                         C151005 * (2 * C151155 +
                                    C151005 * (C150882 + C150963 * C151012)))) +
         C150718 *
             (ae * (4 * C151273 +
                    C151005 *
                        (3 * C151063 +
                         C151005 * (2 * C151156 +
                                    C151005 * (C150868 + C150949 * C151012)))) +
              be * (4 * C151274 +
                    C151005 *
                        (3 * C151064 +
                         C151005 * (2 * C151157 +
                                    C151005 * (C150871 + C150952 * C151012)))) +
              C150718 *
                  (4 * C151247 +
                   C151005 *
                       (3 * C151065 +
                        C151005 *
                            (2 * C151158 +
                             C151005 * (C150960 + (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                      C150615 * C151012)))))) /
        C150617;
    const double C8588 =
        (C151078 * C151249 +
         ae * C151078 *
             (3 * C151061 +
              C151005 *
                  (2 * C151154 + C151005 * (C150880 + C150961 * C151012))) +
         be * C151078 *
             (3 * C151062 +
              C151005 *
                  (2 * C151155 + C151005 * (C150882 + C150963 * C151012))) +
         C150718 *
             (ae * C151078 *
                  (3 * C151063 +
                   C151005 * (2 * C151156 +
                              C151005 * (C150868 + C150949 * C151012))) +
              be * C151078 *
                  (3 * C151064 +
                   C151005 * (2 * C151157 +
                              C151005 * (C150871 + C150952 * C151012))) +
              C150718 * C151078 *
                  (3 * C151065 +
                   C151005 * (2 * C151158 +
                              C151005 * (C150960 + (C150923 * C150924 +
                                                    C150722 * bs[9] *
                                                        std::pow(C150724, 9)) *
                                                       C150615 * C151012))))) /
        C150617;
    const double C8805 =
        (C151078 * (4 * C151236 + C151005 * C151249)) / C150617;
    const double C60592 =
        (6 * (4 * C151236 + C151005 * C151249) +
         C151005 *
             (5 * C151249 +
              C151005 *
                  (4 * C151247 +
                   C151005 *
                       (3 * C151065 +
                        C151005 *
                            (2 * C151158 +
                             C151005 * (C150960 + (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                      C150615 * C151012)))))) /
        C150617;
    const double C60758 =
        (4 * C151236 + C151005 * C151249 +
         (4 * C151247 +
          C151005 *
              (3 * C151065 +
               C151005 * (2 * C151158 +
                          C151005 * (C150960 +
                                     (C150923 * C150924 +
                                      C150722 * bs[9] * std::pow(C150724, 9)) *
                                         C150615 * C151012)))) *
             C151085) /
        C150617;
    const double C61272 =
        (C151078 *
         (5 * C151249 +
          C151005 *
              (4 * C151247 +
               C151005 * (3 * C151065 +
                          C151005 * (2 * C151158 +
                                     C151005 * (C150960 +
                                                (C150923 * C150924 +
                                                 C150722 * bs[9] *
                                                     std::pow(C150724, 9)) *
                                                    C150615 * C151012)))))) /
        C150617;
    const double C62140 =
        (2 * C151078 * C151249 +
         C151078 *
             (C151249 +
              (3 * C151065 +
               C151005 * (2 * C151158 +
                          C151005 * (C150960 +
                                     (C150923 * C150924 +
                                      C150722 * bs[9] * std::pow(C150724, 9)) *
                                         C150615 * C151012))) *
                  C151085)) /
        C150617;
    const double C1670 =
        (3 * (C151236 + ae * (2 * C151039 + C151005 * C151061) +
              be * (2 * C151040 + C151005 * C151062) + C150718 * C151278) +
         ae *
             (2 * C151005 * C150903 + C151005 * (C150903 + C150988 * C151012)) +
         be *
             (2 * C151005 * C150904 + C151005 * (C150904 + C150989 * C151012)) +
         C150718 *
             (2 * C151278 +
              ae * (2 * C151152 + C151005 * (C150894 + C150975 * C151012)) +
              be * (2 * C151153 + C151005 * (C150895 + C150978 * C151012)) +
              C150718 *
                  (C151247 +
                   ae *
                       (2 * C151154 + C151005 * (C150880 + C150961 * C151012)) +
                   be *
                       (2 * C151155 + C151005 * (C150882 + C150963 * C151012)) +
                   C150718 *
                       (ae * (2 * C151156 +
                              C151005 * (C150868 + C150949 * C151012)) +
                        be * (2 * C151157 +
                              C151005 * (C150871 + C150952 * C151012)) +
                        C150718 *
                            (2 * C151158 +
                             C151005 * (C150960 + (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                      C150615 * C151012)))))) /
        C150617;
    const double C2428 =
        (2 * (ae * (3 * C151103 + C151078 * (2 * C151114 + C151078 * C151136)) +
              be * (3 * C151104 + C151078 * (2 * C151115 + C151078 * C151137)) +
              C150718 * C151309) +
         ae * (3 * (C150829 + C150894 * C151085) +
               C151078 *
                   (2 * C151178 + C151078 * (C150894 + C150975 * C151085))) +
         be * (3 * (C150830 + C150895 * C151085) +
               C151078 *
                   (2 * C151179 + C151078 * (C150895 + C150978 * C151085))) +
         C150718 *
             (C151309 +
              ae * (3 * C151134 +
                    C151078 * (2 * C151180 +
                               C151078 * (C150880 + C150961 * C151085))) +
              be * (3 * C151135 +
                    C151078 * (2 * C151181 +
                               C151078 * (C150882 + C150963 * C151085))) +
              C150718 *
                  (ae * (3 * C151136 +
                         C151078 * (2 * C151182 +
                                    C151078 * (C150868 + C150949 * C151085))) +
                   be * (3 * C151137 +
                         C151078 * (2 * C151183 +
                                    C151078 * (C150871 + C150952 * C151085))) +
                   C150718 *
                       (3 * C151138 +
                        C151078 *
                            (2 * C151184 +
                             C151078 * (C150960 + (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                      C150615 * C151085)))))) /
        C150617;
    const double C17800 = (ae * (4 * (2 * C151091 + C151078 * C151103) +
                                 C151078 * (3 * C151103 + C151078 * C151328)) +
                           be * (4 * (2 * C151092 + C151078 * C151104) +
                                 C151078 * (3 * C151104 + C151078 * C151329)) +
                           C150718 * (4 * C151296 + C151078 * C151309)) /
                          C150617;
    const double C17802 = (5 * (3 * C151089 + C151078 * C151296) +
                           C151078 * (4 * C151296 + C151078 * C151309)) /
                          C150617;
    const double C17803 =
        (ae * (5 * (3 * C151103 + C151078 * C151328) +
               C151078 *
                   (4 * C151328 +
                    C151078 * (3 * C151136 +
                               C151078 * (2 * C151182 +
                                          C151078 * (C150868 +
                                                     C150949 * C151085))))) +
         be * (5 * (3 * C151104 + C151078 * C151329) +
               C151078 *
                   (4 * C151329 +
                    C151078 * (3 * C151137 +
                               C151078 * (2 * C151183 +
                                          C151078 * (C150871 +
                                                     C150952 * C151085))))) +
         C150718 *
             (5 * C151309 +
              C151078 *
                  (4 * C151307 +
                   C151078 *
                       (3 * C151138 +
                        C151078 *
                            (2 * C151184 +
                             C151078 * (C150960 + (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                      C150615 * C151085)))))) /
        C150617;
    const double C18340 =
        (4 * C151296 + C151078 * C151309 +
         ae *
             (4 * (2 * C151112 + C151078 * C151134) +
              C151078 * (3 * C151134 +
                         C151078 * (2 * C151180 +
                                    C151078 * (C150880 + C150961 * C151085)))) +
         be *
             (4 * (2 * C151113 + C151078 * C151135) +
              C151078 * (3 * C151135 +
                         C151078 * (2 * C151181 +
                                    C151078 * (C150882 + C150963 * C151085)))) +
         C150718 *
             (ae * (4 * C151328 +
                    C151078 *
                        (3 * C151136 +
                         C151078 * (2 * C151182 +
                                    C151078 * (C150868 + C150949 * C151085)))) +
              be * (4 * C151329 +
                    C151078 *
                        (3 * C151137 +
                         C151078 * (2 * C151183 +
                                    C151078 * (C150871 + C150952 * C151085)))) +
              C150718 *
                  (4 * C151307 +
                   C151078 *
                       (3 * C151138 +
                        C151078 *
                            (2 * C151184 +
                             C151078 * (C150960 + (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                      C150615 * C151085)))))) /
        C150617;
    const double C119947 =
        (6 * (4 * C151296 + C151078 * C151309) +
         C151078 *
             (5 * C151309 +
              C151078 *
                  (4 * C151307 +
                   C151078 *
                       (3 * C151138 +
                        C151078 *
                            (2 * C151184 +
                             C151078 * (C150960 + (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                      C150615 * C151085)))))) /
        C150617;
    const double C2764 =
        (3 * (C151296 + ae * (2 * C151112 + C151078 * C151134) +
              be * (2 * C151113 + C151078 * C151135) + C150718 * C151333) +
         ae *
             (2 * C151078 * C150903 + C151078 * (C150903 + C150988 * C151085)) +
         be *
             (2 * C151078 * C150904 + C151078 * (C150904 + C150989 * C151085)) +
         C150718 *
             (2 * C151333 +
              ae * (2 * C151178 + C151078 * (C150894 + C150975 * C151085)) +
              be * (2 * C151179 + C151078 * (C150895 + C150978 * C151085)) +
              C150718 *
                  (C151307 +
                   ae *
                       (2 * C151180 + C151078 * (C150880 + C150961 * C151085)) +
                   be *
                       (2 * C151181 + C151078 * (C150882 + C150963 * C151085)) +
                   C150718 *
                       (ae * (2 * C151182 +
                              C151078 * (C150868 + C150949 * C151085)) +
                        be * (2 * C151183 +
                              C151078 * (C150871 + C150952 * C151085)) +
                        C150718 *
                            (2 * C151184 +
                             C151078 * (C150960 + (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                      C150615 * C151085)))))) /
        C150617;
    const double C18563 = C151913 * C9402;
    const double C68672 = C151908 * C9402;
    const double C86273 = C151913 * C9402;
    const double C68365 = C151908 * C18556;
    const double C23423 = C23128 * C351;
    const double C23421 = C23128 * C350;
    const double C23403 = C23128 * C341;
    const double C23401 = C23128 * C340;
    const double C23391 = C23128 * C349;
    const double C23389 = C23128 * C348;
    const double C23379 = C23128 * C343;
    const double C23377 = C23128 * C342;
    const double C23375 = C23128 * C347;
    const double C23373 = C23128 * C346;
    const double C23355 = C23128 * C345;
    const double C23353 = C23128 * C344;
    const double C23893 = C23128 * C339;
    const double C23891 = C23128 * C338;
    const double C24430 = C23128 * C1052;
    const double C24428 = C23128 * C1051;
    const double C24410 = C23128 * C1050;
    const double C24408 = C23128 * C1049;
    const double C24406 = C23128 * C1048;
    const double C24404 = C23128 * C1047;
    const double C24821 = C23128 * C1322;
    const double C24819 = C23128 * C1321;
    const double C24801 = C23128 * C1320;
    const double C24799 = C23128 * C1319;
    const double C25093 = C23128 * C1512;
    const double C25091 = C23128 * C1511;
    const double C25073 = C23128 * C1510;
    const double C25071 = C23128 * C1509;
    const double C25061 = C23128 * C1502;
    const double C25059 = C23128 * C1501;
    const double C25326 = C23128 * C1318;
    const double C25324 = C23128 * C1317;
    const double C25637 = C23128 * C1508;
    const double C25635 = C23128 * C1507;
    const double C25852 = C23128 * C2004;
    const double C25850 = C23128 * C2003;
    const double C26721 = C23128 * C1500;
    const double C26719 = C23128 * C1499;
    const double C27130 = C23128 * C2900;
    const double C27128 = C23128 * C2899;
    const double C32199 = C23128 * C548;
    const double C32197 = C23128 * C547;
    const double C32179 = C23128 * C538;
    const double C32177 = C23128 * C537;
    const double C32167 = C23128 * C546;
    const double C32165 = C23128 * C545;
    const double C32155 = C23128 * C540;
    const double C32153 = C23128 * C539;
    const double C32151 = C23128 * C544;
    const double C32149 = C23128 * C543;
    const double C32131 = C23128 * C542;
    const double C32129 = C23128 * C541;
    const double C32645 = C23128 * C536;
    const double C32643 = C23128 * C535;
    const double C34770 = C23128 * C2414;
    const double C34768 = C23128 * C2413;
    const double C34750 = C23128 * C2412;
    const double C34748 = C23128 * C2411;
    const double C35284 = C23128 * C2410;
    const double C35282 = C23128 * C2409;
    const double C23407 = C23130 * C339;
    const double C23405 = C23130 * C338;
    const double C23395 = C23130 * C351;
    const double C23393 = C23130 * C350;
    const double C23383 = C23130 * C341;
    const double C23381 = C23130 * C340;
    const double C23371 = C23130 * C349;
    const double C23369 = C23130 * C348;
    const double C23359 = C23130 * C343;
    const double C23357 = C23130 * C342;
    const double C24414 = C23130 * C1052;
    const double C24412 = C23130 * C1051;
    const double C24402 = C23130 * C1050;
    const double C24400 = C23130 * C1049;
    const double C24817 = C23130 * C1324;
    const double C24815 = C23130 * C1323;
    const double C24805 = C23130 * C1318;
    const double C24803 = C23130 * C1317;
    const double C25089 = C23130 * C1514;
    const double C25087 = C23130 * C1513;
    const double C25077 = C23130 * C1508;
    const double C25075 = C23130 * C1507;
    const double C25065 = C23130 * C1500;
    const double C25063 = C23130 * C1499;
    const double C25322 = C23130 * C1316;
    const double C25320 = C23130 * C1315;
    const double C25633 = C23130 * C1506;
    const double C25631 = C23130 * C1505;
    const double C25848 = C23130 * C2006;
    const double C25846 = C23130 * C2005;
    const double C26717 = C23130 * C1498;
    const double C26715 = C23130 * C1497;
    const double C27126 = C23130 * C2902;
    const double C27124 = C23130 * C2901;
    const double C32183 = C23130 * C536;
    const double C32181 = C23130 * C535;
    const double C32171 = C23130 * C548;
    const double C32169 = C23130 * C547;
    const double C32159 = C23130 * C538;
    const double C32157 = C23130 * C537;
    const double C32147 = C23130 * C546;
    const double C32145 = C23130 * C545;
    const double C32135 = C23130 * C540;
    const double C32133 = C23130 * C539;
    const double C34766 = C23130 * C2416;
    const double C34764 = C23130 * C2415;
    const double C34754 = C23130 * C2410;
    const double C34752 = C23130 * C2409;
    const double C35280 = C23130 * C2408;
    const double C35278 = C23130 * C2407;
    const double C51189 = C50894 * C351;
    const double C51187 = C50894 * C350;
    const double C51169 = C50894 * C341;
    const double C51167 = C50894 * C340;
    const double C51157 = C50894 * C349;
    const double C51155 = C50894 * C348;
    const double C51145 = C50894 * C343;
    const double C51143 = C50894 * C342;
    const double C51141 = C50894 * C347;
    const double C51139 = C50894 * C346;
    const double C51121 = C50894 * C345;
    const double C51119 = C50894 * C344;
    const double C51659 = C50894 * C339;
    const double C51657 = C50894 * C338;
    const double C52196 = C50894 * C1052;
    const double C52194 = C50894 * C1051;
    const double C52176 = C50894 * C1050;
    const double C52174 = C50894 * C1049;
    const double C52172 = C50894 * C1048;
    const double C52170 = C50894 * C1047;
    const double C52587 = C50894 * C1322;
    const double C52585 = C50894 * C1321;
    const double C52567 = C50894 * C1320;
    const double C52565 = C50894 * C1319;
    const double C52859 = C50894 * C1512;
    const double C52857 = C50894 * C1511;
    const double C52839 = C50894 * C1510;
    const double C52837 = C50894 * C1509;
    const double C52827 = C50894 * C1502;
    const double C52825 = C50894 * C1501;
    const double C53092 = C50894 * C1318;
    const double C53090 = C50894 * C1317;
    const double C53403 = C50894 * C1508;
    const double C53401 = C50894 * C1507;
    const double C53618 = C50894 * C2004;
    const double C53616 = C50894 * C2003;
    const double C54487 = C50894 * C1500;
    const double C54485 = C50894 * C1499;
    const double C54896 = C50894 * C2900;
    const double C54894 = C50894 * C2899;
    const double C101973 = C50894 * C548;
    const double C101971 = C50894 * C547;
    const double C101953 = C50894 * C538;
    const double C101951 = C50894 * C537;
    const double C101941 = C50894 * C546;
    const double C101939 = C50894 * C545;
    const double C101929 = C50894 * C540;
    const double C101927 = C50894 * C539;
    const double C101925 = C50894 * C544;
    const double C101923 = C50894 * C543;
    const double C101905 = C50894 * C542;
    const double C101903 = C50894 * C541;
    const double C102419 = C50894 * C536;
    const double C102417 = C50894 * C535;
    const double C104544 = C50894 * C2414;
    const double C104542 = C50894 * C2413;
    const double C104524 = C50894 * C2412;
    const double C104522 = C50894 * C2411;
    const double C105058 = C50894 * C2410;
    const double C105056 = C50894 * C2409;
    const double C51173 = C50896 * C339;
    const double C51171 = C50896 * C338;
    const double C51161 = C50896 * C351;
    const double C51159 = C50896 * C350;
    const double C51149 = C50896 * C341;
    const double C51147 = C50896 * C340;
    const double C51137 = C50896 * C349;
    const double C51135 = C50896 * C348;
    const double C51125 = C50896 * C343;
    const double C51123 = C50896 * C342;
    const double C52180 = C50896 * C1052;
    const double C52178 = C50896 * C1051;
    const double C52168 = C50896 * C1050;
    const double C52166 = C50896 * C1049;
    const double C52583 = C50896 * C1324;
    const double C52581 = C50896 * C1323;
    const double C52571 = C50896 * C1318;
    const double C52569 = C50896 * C1317;
    const double C52855 = C50896 * C1514;
    const double C52853 = C50896 * C1513;
    const double C52843 = C50896 * C1508;
    const double C52841 = C50896 * C1507;
    const double C52831 = C50896 * C1500;
    const double C52829 = C50896 * C1499;
    const double C53088 = C50896 * C1316;
    const double C53086 = C50896 * C1315;
    const double C53399 = C50896 * C1506;
    const double C53397 = C50896 * C1505;
    const double C53614 = C50896 * C2006;
    const double C53612 = C50896 * C2005;
    const double C54483 = C50896 * C1498;
    const double C54481 = C50896 * C1497;
    const double C54892 = C50896 * C2902;
    const double C54890 = C50896 * C2901;
    const double C101957 = C50896 * C536;
    const double C101955 = C50896 * C535;
    const double C101945 = C50896 * C548;
    const double C101943 = C50896 * C547;
    const double C101933 = C50896 * C538;
    const double C101931 = C50896 * C537;
    const double C101921 = C50896 * C546;
    const double C101919 = C50896 * C545;
    const double C101909 = C50896 * C540;
    const double C101907 = C50896 * C539;
    const double C104540 = C50896 * C2416;
    const double C104538 = C50896 * C2415;
    const double C104528 = C50896 * C2410;
    const double C104526 = C50896 * C2409;
    const double C105054 = C50896 * C2408;
    const double C105052 = C50896 * C2407;
    const double C150652 = C150651 * ae;
    const double C6030 = -(C150651 * be) / C150613;
    const double C6355 = C6337 - C6306;
    const double C6353 = C6335 - C6298;
    const double C6351 = C6333 - C6290;
    const double C6349 = C6331 - C6282;
    const double C6346 = C6328 - C6270;
    const double C6345 = C6327 - C6266;
    const double C6343 = C6325 - C6258;
    const double C7375 = C7363 - C7338;
    const double C7373 = C7361 - C7330;
    const double C7370 = C7358 - C7318;
    const double C7368 = C7356 - C7310;
    const double C7772 = C7768 - C7759;
    const double C7771 = C7767 - C7755;
    const double C8069 = C8061 - C8045;
    const double C8067 = C8059 - C8037;
    const double C8065 = C8057 - C8029;
    const double C8292 = C8290 - C8283;
    const double C8602 = C8600 - C8593;
    const double C9722 = C9718 - C9710;
    const double C9720 = C9716 - C9702;
    const double C10150 = C10146 - C10138;
    const double C10148 = C10144 - C10130;
    const double C15248 = C15230 - C15199;
    const double C15246 = C15228 - C15191;
    const double C15244 = C15226 - C15183;
    const double C15242 = C15224 - C15175;
    const double C15239 = C15221 - C15163;
    const double C15238 = C15220 - C15159;
    const double C15236 = C15218 - C15151;
    const double C17828 = C17824 - C17816;
    const double C17827 = C17823 - C17812;
    const double C18353 = C18351 - C18345;
    const double C18570 = C18568 - C18562;
    const double C23451 = C23433 - C23387;
    const double C23446 = C23428 - C23367;
    const double C23445 = C23427 - C23363;
    const double C24441 = C24432 - C24398;
    const double C24832 = C24826 - C24813;
    const double C24831 = C24825 - C24809;
    const double C25110 = C25101 - C25085;
    const double C25109 = C25100 - C25081;
    const double C25106 = C25097 - C25069;
    const double C25857 = C25854 - C25844;
    const double C32227 = C32209 - C32163;
    const double C32222 = C32204 - C32143;
    const double C32221 = C32203 - C32139;
    const double C34781 = C34775 - C34762;
    const double C34780 = C34774 - C34758;
    const double C51217 = C51199 - C51153;
    const double C51212 = C51194 - C51133;
    const double C51211 = C51193 - C51129;
    const double C52207 = C52198 - C52164;
    const double C52598 = C52592 - C52579;
    const double C52597 = C52591 - C52575;
    const double C52876 = C52867 - C52851;
    const double C52875 = C52866 - C52847;
    const double C52872 = C52863 - C52835;
    const double C53623 = C53620 - C53610;
    const double C102001 = C101983 - C101937;
    const double C101996 = C101978 - C101917;
    const double C101995 = C101977 - C101913;
    const double C104555 = C104549 - C104536;
    const double C104554 = C104548 - C104532;
    const double C59641 = C59629 - C59616;
    const double C59640 = C59628 - C59612;
    const double C59639 = C59627 - C59608;
    const double C59638 = C59626 - C59604;
    const double C59637 = C59625 - C59600;
    const double C59636 = C59624 - C59596;
    const double C59635 = C59623 - C59592;
    const double C59634 = C59622 - C59588;
    const double C59633 = C59621 - C59584;
    const double C59632 = C59620 - C59580;
    const double C59631 = C59619 - C59576;
    const double C59630 = C59618 - C59572;
    const double C59957 = C59954 - C59944;
    const double C60343 = C60334 - C60324;
    const double C60342 = C60333 - C60320;
    const double C60341 = C60332 - C60316;
    const double C60340 = C60331 - C60312;
    const double C60339 = C60330 - C60308;
    const double C60338 = C60329 - C60304;
    const double C60337 = C60328 - C60300;
    const double C60336 = C60327 - C60296;
    const double C60335 = C60326 - C60292;
    const double C60605 = C60603 - C60600;
    const double C60604 = C60602 - C60596;
    const double C60789 = C60784 - C60778;
    const double C60788 = C60783 - C60774;
    const double C60787 = C60782 - C60770;
    const double C60786 = C60781 - C60766;
    const double C60785 = C60780 - C60762;
    const double C60935 = C60934 - C60932;
    const double C61279 = C61278 - C61276;
    const double C61871 = C61868 - C61864;
    const double C61870 = C61867 - C61860;
    const double C62159 = C62156 - C62152;
    const double C62158 = C62155 - C62148;
    const double C62157 = C62154 - C62144;
    const double C65497 = C65495 - C65490;
    const double C65496 = C65494 - C65486;
    const double C65785 = C65774 - C65762;
    const double C65783 = C65772 - C65754;
    const double C65782 = C65771 - C65750;
    const double C65781 = C65770 - C65746;
    const double C65780 = C65769 - C65742;
    const double C65779 = C65768 - C65738;
    const double C65778 = C65767 - C65734;
    const double C65777 = C65766 - C65730;
    const double C65776 = C65765 - C65726;
    const double C65775 = C65764 - C65722;
    const double C66212 = C66210 - C66204;
    const double C67097 = C67095 - C67090;
    const double C67096 = C67094 - C67083;
    const double C67596 = C67595 - C67591;
    const double C68375 = C68372 - C68368;
    const double C68374 = C68371 - C68364;
    const double C68373 = C68370 - C68360;
    const double C68676 = C68675 - C68671;
    const double C68878 = C68877 - C68875;
    const double C118280 = C118279 - C118277;
    const double C119954 = C119953 - C119951;
    const double C120285 = C120284 - C120282;
    const double C73961 = C73943 - C73912;
    const double C73959 = C73941 - C73904;
    const double C73957 = C73939 - C73896;
    const double C73955 = C73937 - C73888;
    const double C73952 = C73934 - C73876;
    const double C73951 = C73933 - C73872;
    const double C73949 = C73931 - C73864;
    const double C74981 = C74969 - C74944;
    const double C74979 = C74967 - C74936;
    const double C74976 = C74964 - C74924;
    const double C74974 = C74962 - C74916;
    const double C75362 = C75358 - C75349;
    const double C75361 = C75357 - C75345;
    const double C75635 = C75627 - C75611;
    const double C75633 = C75625 - C75603;
    const double C75631 = C75623 - C75595;
    const double C75854 = C75852 - C75845;
    const double C76160 = C76158 - C76151;
    const double C77244 = C77240 - C77232;
    const double C77242 = C77238 - C77224;
    const double C77660 = C77656 - C77648;
    const double C77658 = C77654 - C77640;
    const double C82915 = C82901 - C82874;
    const double C82913 = C82899 - C82866;
    const double C82911 = C82897 - C82858;
    const double C82908 = C82894 - C82846;
    const double C82907 = C82893 - C82842;
    const double C86296 = C86290 - C86280;
    const double C86294 = C86288 - C86272;
    const double C86293 = C86287 - C86268;
    const double C86974 = C86972 - C86966;
    const double C137281 = C137279 - C137273;
    const double C137780 = C137778 - C137772;
    const double C6314 = C6031 * C353;
    const double C6806 = C6029 * C353;
    const double C23419 = C23130 * C353;
    const double C23399 = C23132 * C353;
    const double C51185 = C50896 * C353;
    const double C51165 = C50898 * C353;
    const double C59948 = C59421 * C353;
    const double C73920 = C150632 * C353;
    const double C74412 = C150639 * C353;
    const double C6802 = C6031 * C355;
    const double C23411 = C23132 * C355;
    const double C23897 = C23130 * C355;
    const double C51177 = C50898 * C355;
    const double C51663 = C50896 * C355;
    const double C74408 = C150632 * C355;
    const double C15207 = C6031 * C550;
    const double C15672 = C6029 * C550;
    const double C32195 = C23130 * C550;
    const double C32175 = C23132 * C550;
    const double C66208 = C59421 * C550;
    const double C82886 = C150632 * C550;
    const double C101969 = C50896 * C550;
    const double C101949 = C50898 * C550;
    const double C135173 = C150639 * C550;
    const double C15668 = C6031 * C552;
    const double C32187 = C23132 * C552;
    const double C32649 = C23130 * C552;
    const double C83470 = C150632 * C552;
    const double C101961 = C50898 * C552;
    const double C102423 = C50896 * C552;
    const double C7350 = C6031 * C1054;
    const double C24426 = C23130 * C1054;
    const double C24418 = C23132 * C1054;
    const double C40919 = C6029 * C1054;
    const double C52192 = C50896 * C1054;
    const double C52184 = C50898 * C1054;
    const double C65994 = C59421 * C1054;
    const double C74956 = C150632 * C1054;
    const double C83194 = C150639 * C1054;
    const double C6803 = C151913 * C370;
    const double C23412 = C23125 * C370;
    const double C23898 = C152350 * C370;
    const double C51178 = C50891 * C370;
    const double C51664 = C50890 * C370;
    const double C74409 = C151913 * C370;
    const double C15669 = C151913 * C567;
    const double C32188 = C23125 * C567;
    const double C32650 = C152350 * C567;
    const double C83471 = C151913 * C567;
    const double C101962 = C50891 * C567;
    const double C102424 = C50890 * C567;
    const double C6312 = C6031 * C352;
    const double C6804 = C6029 * C352;
    const double C23417 = C23130 * C352;
    const double C23397 = C23132 * C352;
    const double C51183 = C50896 * C352;
    const double C51163 = C50898 * C352;
    const double C59946 = C59421 * C352;
    const double C73918 = C150632 * C352;
    const double C74410 = C150639 * C352;
    const double C6800 = C6031 * C354;
    const double C23409 = C23132 * C354;
    const double C23895 = C23130 * C354;
    const double C51175 = C50898 * C354;
    const double C51661 = C50896 * C354;
    const double C74406 = C150632 * C354;
    const double C15205 = C6031 * C549;
    const double C15670 = C6029 * C549;
    const double C32193 = C23130 * C549;
    const double C32173 = C23132 * C549;
    const double C66206 = C59421 * C549;
    const double C82884 = C150632 * C549;
    const double C101967 = C50896 * C549;
    const double C101947 = C50898 * C549;
    const double C135171 = C150639 * C549;
    const double C15666 = C6031 * C551;
    const double C32185 = C23132 * C551;
    const double C32647 = C23130 * C551;
    const double C83468 = C150632 * C551;
    const double C101959 = C50898 * C551;
    const double C102421 = C50896 * C551;
    const double C7348 = C6031 * C1053;
    const double C24424 = C23130 * C1053;
    const double C24416 = C23132 * C1053;
    const double C40917 = C6029 * C1053;
    const double C52190 = C50896 * C1053;
    const double C52182 = C50898 * C1053;
    const double C65992 = C59421 * C1053;
    const double C74954 = C150632 * C1053;
    const double C83192 = C150639 * C1053;
    const double C150908 = C150853 + C150906;
    const double C2906 = (2 * C151078 * C151548 +
                          C151078 * (C151548 + C151005 * C150989 * C151085)) /
                         C150613;
    const double C6318 = C6031 * C1314;
    const double C25318 = C23132 * C1314;
    const double C53084 = C50898 * C1314;
    const double C59952 = C59421 * C1314;
    const double C73924 = C150632 * C1314;
    const double C15986 = C6031 * C1496;
    const double C26713 = C23132 * C1496;
    const double C54479 = C50898 * C1496;
    const double C65998 = C59421 * C1496;
    const double C82878 = C150632 * C1496;
    const double C7342 = C6031 * C1504;
    const double C25629 = C23132 * C1504;
    const double C53395 = C50898 * C1504;
    const double C74948 = C150632 * C1504;
    const double C93908 = C59421 * C1504;
    const double C15211 = C6031 * C2406;
    const double C35276 = C23132 * C2406;
    const double C105050 = C50898 * C2406;
    const double C118544 = C59421 * C2406;
    const double C134771 = C150632 * C2406;
    const double C150907 = C150849 + C150905;
    const double C150934 = C150912 + C150913;
    const double C6811 = C151913 * C371;
    const double C23416 = C23125 * C371;
    const double C51182 = C50891 * C371;
    const double C74417 = C151913 * C371;
    const double C15677 = C151913 * C568;
    const double C32192 = C23125 * C568;
    const double C101966 = C50891 * C568;
    const double C135178 = C151913 * C568;
    const double C24423 = C23125 * C1063;
    const double C40924 = C151913 * C1063;
    const double C52189 = C50891 * C1063;
    const double C83199 = C151913 * C1063;
    const double C2905 = (2 * C151078 * C151546 +
                          C151078 * (C151546 + C151005 * C150988 * C151085)) /
                         C150613;
    const double C6316 = C6031 * C1313;
    const double C25316 = C23132 * C1313;
    const double C53082 = C50898 * C1313;
    const double C59950 = C59421 * C1313;
    const double C73922 = C150632 * C1313;
    const double C15984 = C6031 * C1495;
    const double C26711 = C23132 * C1495;
    const double C54477 = C50898 * C1495;
    const double C65996 = C59421 * C1495;
    const double C82876 = C150632 * C1495;
    const double C7340 = C6031 * C1503;
    const double C25627 = C23132 * C1503;
    const double C53393 = C50898 * C1503;
    const double C74946 = C150632 * C1503;
    const double C93906 = C59421 * C1503;
    const double C15209 = C6031 * C2405;
    const double C35274 = C23132 * C2405;
    const double C105048 = C50898 * C2405;
    const double C118542 = C59421 * C2405;
    const double C134769 = C150632 * C2405;
    const double C150990 = C150718 * C150987;
    const double C151175 = C151169 + C151174;
    const double C18140 = C18138 - C18132;
    const double C27135 = C27132 - C27122;
    const double C54901 = C54898 - C54888;
    const double C65784 = C65773 - C65758;
    const double C86702 = C86700 - C86693;
    const double C151201 = C151195 + C151200;
    const double C8070 = C8062 - C8049;
    const double C61869 = C61866 - C61856;
    const double C75636 = C75628 - C75615;
    const double C8820 = C8818 - C8811;
    const double C61137 = C61136 - C61134;
    const double C76370 = C76368 - C76361;
    const double C150995 = C150932 + C150992;
    const double C150994 = C150926 + C150991;
    const double C7760 = C151913 * C7743;
    const double C60933 = C151908 * C7743;
    const double C75350 = C151913 * C7743;
    const double C60601 = C151908 * C7745;
    const double C8812 = C151913 * C8017;
    const double C61135 = C151908 * C8017;
    const double C76362 = C151913 * C8017;
    const double C60779 = C151908 * C8019;
    const double C61277 = C151908 * C8805;
    const double C17817 = C151913 * C17800;
    const double C120283 = C151908 * C17800;
    const double C137274 = C151913 * C17800;
    const double C119952 = C151908 * C17802;
    const double C135 =
        ((ae * -2 * C150612) / C150642 -
         (((C150611 * C150646) / C150617 + 2 * C150635) * be) / C150613) /
            C150618 +
        ((C150611 *
              (C150646 / C150642 -
               (((C150611 * C150652) / C150613 + 2 * C150639) * be) / C150613 -
               C150648 / C150622) +
          2 * (C150635 / C150618 -
               ((C150611 * C150639 + C152263) * be) / C150613 + C150632)) *
         ae) /
            C150613 +
        C150652 / C150622 - ((2 * C150632 - C150649 / C150622) * be) / C150613;
    const double C137 =
        (C150646 / C150642 -
         (((C150611 * C150652) / C150613 + 2 * C150639) * be) / C150613 -
         C150648 / C150622) /
            C150618 +
        ((C150611 * (C150652 / C150622 -
                     ((2 * C150632 - C150649 / C150622) * be) / C150613) +
          2 * (C150639 / C150618 -
               ((C150611 * C150632 + C151913) * be) / C150613)) *
         ae) /
            C150613 +
        (-2 * C150648) / (C150613 * 4 * C150617);
    const double C139 = (C150652 / C150622 -
                         ((2 * C150632 - C150649 / C150622) * be) / C150613) /
                            C150618 +
                        ((2 * (C150632 / C150618 - (0 * be) / C150613) -
                          C150649 / (C150613 * 4 * C150617)) *
                         ae) /
                            C150613;
    const double C23129 =
        C150646 / C150642 -
        (((C150611 * C150652) / C150613 + 2 * C150639) * be) / C150613 -
        C150648 / C150622;
    const double C23131 =
        C150652 / C150622 - ((2 * C150632 - C150649 / C150622) * be) / C150613;
    const double C50895 =
        C150646 / C150642 +
        (((C150611 * C150652) / C150613 + 2 * C150639) * ae) / C150613 -
        C150648 / C150622;
    const double C50897 =
        C150652 / C150622 + ((2 * C150632 - C150649 / C150622) * ae) / C150613;
    const double C73636 = C150652 / C150613;
    const double C6321 = C6030 * C1306;
    const double C6309 = C6030 * C332;
    const double C6301 = C6030 * C327;
    const double C6293 = C6030 * C1307;
    const double C6285 = C6030 * C331;
    const double C6277 = C6030 * C328;
    const double C6273 = C6030 * C1308;
    const double C6261 = C6030 * C330;
    const double C6253 = C6030 * C329;
    const double C6805 = C6030 * C333;
    const double C6797 = C6030 * C326;
    const double C7353 = C6030 * C1043;
    const double C7345 = C6030 * C1488;
    const double C7333 = C6030 * C1489;
    const double C7325 = C6030 * C1042;
    const double C7321 = C6030 * C1041;
    const double C7313 = C6030 * C1490;
    const double C7762 = C6030 * C7732;
    const double C7750 = C6030 * C1309;
    const double C8052 = C6030 * C7998;
    const double C8040 = C6030 * C1999;
    const double C8032 = C6030 * C1491;
    const double C8024 = C6030 * C1486;
    const double C8286 = C6030 * C1310;
    const double C8596 = C6030 * C2000;
    const double C8814 = C6030 * C8000;
    const double C9713 = C6030 * C1485;
    const double C9705 = C6030 * C1492;
    const double C10141 = C6030 * C2895;
    const double C10133 = C6030 * C9382;
    const double C15214 = C6030 * C2398;
    const double C15202 = C6030 * C529;
    const double C15194 = C6030 * C524;
    const double C15186 = C6030 * C2399;
    const double C15178 = C6030 * C528;
    const double C15170 = C6030 * C525;
    const double C15166 = C6030 * C2400;
    const double C15154 = C6030 * C527;
    const double C15146 = C6030 * C526;
    const double C15671 = C6030 * C530;
    const double C15663 = C6030 * C523;
    const double C15981 = C6030 * C1484;
    const double C17819 = C6030 * C17789;
    const double C17807 = C6030 * C2401;
    const double C18135 = C6030 * C2896;
    const double C18348 = C6030 * C2402;
    const double C18565 = C6030 * C9383;
    const double C40918 = C6030 * C1044;
    const double C6373 = C6355 + C6307;
    const double C6371 = C6353 + C6299;
    const double C6369 = C6351 + C6291;
    const double C6367 = C6349 + C6283;
    const double C6364 = C6346 + C6271;
    const double C6363 = C6345 + C6267;
    const double C6361 = C6343 + C6259;
    const double C7387 = C7375 + C7339;
    const double C7385 = C7373 + C7331;
    const double C7382 = C7370 + C7319;
    const double C7380 = C7368 + C7311;
    const double C7775 = C7771 + C7756;
    const double C8077 = C8069 + C8046;
    const double C8075 = C8067 + C8038;
    const double C8073 = C8065 + C8030;
    const double C8294 = C8292 + C8284;
    const double C8604 = C8602 + C8594;
    const double C9726 = C9722 + C9711;
    const double C9724 = C9720 + C9703;
    const double C10154 = C10150 + C10139;
    const double C10152 = C10148 + C10131;
    const double C15266 = C15248 + C15200;
    const double C15264 = C15246 + C15192;
    const double C15262 = C15244 + C15184;
    const double C15260 = C15242 + C15176;
    const double C15257 = C15239 + C15164;
    const double C15256 = C15238 + C15160;
    const double C15254 = C15236 + C15152;
    const double C17831 = C17827 + C17813;
    const double C18355 = C18353 + C18346;
    const double C18572 = C18570 + C18563;
    const double C23469 = C23451 + C23388;
    const double C23464 = C23446 + C23368;
    const double C23463 = C23445 + C23364;
    const double C24450 = C24441 + C24399;
    const double C24838 = C24832 + C24814;
    const double C24837 = C24831 + C24810;
    const double C25119 = C25110 + C25086;
    const double C25118 = C25109 + C25082;
    const double C25115 = C25106 + C25070;
    const double C25860 = C25857 + C25845;
    const double C32245 = C32227 + C32164;
    const double C32240 = C32222 + C32144;
    const double C32239 = C32221 + C32140;
    const double C34787 = C34781 + C34763;
    const double C34786 = C34780 + C34759;
    const double C51235 = C51217 + C51154;
    const double C51230 = C51212 + C51134;
    const double C51229 = C51211 + C51130;
    const double C52216 = C52207 + C52165;
    const double C52604 = C52598 + C52580;
    const double C52603 = C52597 + C52576;
    const double C52885 = C52876 + C52852;
    const double C52884 = C52875 + C52848;
    const double C52881 = C52872 + C52836;
    const double C53626 = C53623 + C53611;
    const double C102019 = C102001 + C101938;
    const double C102014 = C101996 + C101918;
    const double C102013 = C101995 + C101914;
    const double C104561 = C104555 + C104537;
    const double C104560 = C104554 + C104533;
    const double C59653 = C59641 + C59617;
    const double C59652 = C59640 + C59613;
    const double C59651 = C59639 + C59609;
    const double C59650 = C59638 + C59605;
    const double C59649 = C59637 + C59601;
    const double C59648 = C59636 + C59597;
    const double C59647 = C59635 + C59593;
    const double C59646 = C59634 + C59589;
    const double C59645 = C59633 + C59585;
    const double C59644 = C59632 + C59581;
    const double C59643 = C59631 + C59577;
    const double C59642 = C59630 + C59573;
    const double C59960 = C59957 + C59945;
    const double C60352 = C60343 + C60325;
    const double C60351 = C60342 + C60321;
    const double C60350 = C60341 + C60317;
    const double C60349 = C60340 + C60313;
    const double C60348 = C60339 + C60309;
    const double C60347 = C60338 + C60305;
    const double C60346 = C60337 + C60301;
    const double C60345 = C60336 + C60297;
    const double C60344 = C60335 + C60293;
    const double C60606 = C60604 + C60597;
    const double C60793 = C60788 + C60775;
    const double C60792 = C60787 + C60771;
    const double C60791 = C60786 + C60767;
    const double C60790 = C60785 + C60763;
    const double C61874 = C61871 + C61865;
    const double C61873 = C61870 + C61861;
    const double C62162 = C62159 + C62153;
    const double C62161 = C62158 + C62149;
    const double C62160 = C62157 + C62145;
    const double C65499 = C65497 + C65491;
    const double C65498 = C65496 + C65487;
    const double C65796 = C65785 + C65763;
    const double C65794 = C65783 + C65755;
    const double C65793 = C65782 + C65751;
    const double C65792 = C65781 + C65747;
    const double C65791 = C65780 + C65743;
    const double C65790 = C65779 + C65739;
    const double C65789 = C65778 + C65735;
    const double C65788 = C65777 + C65731;
    const double C65787 = C65776 + C65727;
    const double C65786 = C65775 + C65723;
    const double C66214 = C66212 + C66205;
    const double C67099 = C67097 + C67091;
    const double C67098 = C67096 + C67084;
    const double C67597 = C67596 + C67592;
    const double C68378 = C68375 + C68369;
    const double C68377 = C68374 + C68365;
    const double C68376 = C68373 + C68361;
    const double C68677 = C68676 + C68672;
    const double C68879 = C68878 + C68876;
    const double C118281 = C118280 + C118278;
    const double C73979 = C73961 + C73913;
    const double C73977 = C73959 + C73905;
    const double C73975 = C73957 + C73897;
    const double C73973 = C73955 + C73889;
    const double C73970 = C73952 + C73877;
    const double C73969 = C73951 + C73873;
    const double C73967 = C73949 + C73865;
    const double C74993 = C74981 + C74945;
    const double C74991 = C74979 + C74937;
    const double C74988 = C74976 + C74925;
    const double C74986 = C74974 + C74917;
    const double C75365 = C75361 + C75346;
    const double C75643 = C75635 + C75612;
    const double C75641 = C75633 + C75604;
    const double C75639 = C75631 + C75596;
    const double C75856 = C75854 + C75846;
    const double C76162 = C76160 + C76152;
    const double C77248 = C77244 + C77233;
    const double C77246 = C77242 + C77225;
    const double C77664 = C77660 + C77649;
    const double C77662 = C77658 + C77641;
    const double C82929 = C82915 + C82875;
    const double C82927 = C82913 + C82867;
    const double C82925 = C82911 + C82859;
    const double C82922 = C82908 + C82847;
    const double C82921 = C82907 + C82843;
    const double C86302 = C86296 + C86281;
    const double C86300 = C86294 + C86273;
    const double C86299 = C86293 + C86269;
    const double C86976 = C86974 + C86967;
    const double C137782 = C137780 + C137773;
    const double C6339 = C6312 - C6313;
    const double C23436 = C23397 - C23398;
    const double C51202 = C51163 - C51164;
    const double C59955 = C59946 - C59947;
    const double C73945 = C73918 - C73919;
    const double C6813 = C6800 - C6801;
    const double C23439 = C23409 - C23410;
    const double C51205 = C51175 - C51176;
    const double C74419 = C74406 - C74407;
    const double C15232 = C15205 - C15206;
    const double C32212 = C32173 - C32174;
    const double C66211 = C66206 - C66207;
    const double C82904 = C82884 - C82885;
    const double C101986 = C101947 - C101948;
    const double C15679 = C15666 - C15667;
    const double C32215 = C32185 - C32186;
    const double C83473 = C83468 - C83469;
    const double C101989 = C101959 - C101960;
    const double C7366 = C7348 - C7349;
    const double C24437 = C24416 - C24417;
    const double C52203 = C52182 - C52183;
    const double C66000 = C65992 - C65993;
    const double C74972 = C74954 - C74955;
    const double C150910 = C150908 + C150888;
    const double C150909 = C150907 + C150885;
    const double C150945 = C150934 + C150914;
    const double C6340 = C6316 - C6317;
    const double C25328 = C25316 - C25317;
    const double C53094 = C53082 - C53083;
    const double C59956 = C59950 - C59951;
    const double C73946 = C73922 - C73923;
    const double C15989 = C15984 - C15985;
    const double C26723 = C26711 - C26712;
    const double C54489 = C54477 - C54478;
    const double C66001 = C65996 - C65997;
    const double C82902 = C82876 - C82877;
    const double C7364 = C7340 - C7341;
    const double C25639 = C25627 - C25628;
    const double C53405 = C53393 - C53394;
    const double C74970 = C74946 - C74947;
    const double C93910 = C93906 - C93907;
    const double C15233 = C15209 - C15210;
    const double C35286 = C35274 - C35275;
    const double C105060 = C105048 - C105049;
    const double C118546 = C118542 - C118543;
    const double C134777 = C134769 - C134770;
    const double C18142 = C18140 + C18133;
    const double C27138 = C27135 + C27123;
    const double C54904 = C54901 + C54889;
    const double C65795 = C65784 + C65759;
    const double C86704 = C86702 + C86694;
    const double C8078 = C8070 + C8050;
    const double C61872 = C61869 + C61857;
    const double C75644 = C75636 + C75616;
    const double C150997 = C150995 + C150969;
    const double C150996 = C150994 + C150966;
    const double C7776 = C7772 + C7760;
    const double C60936 = C60935 + C60933;
    const double C75366 = C75362 + C75350;
    const double C60607 = C60605 + C60601;
    const double C8822 = C8820 + C8812;
    const double C61138 = C61137 + C61135;
    const double C76372 = C76370 + C76362;
    const double C60794 = C60789 + C60779;
    const double C61280 = C61279 + C61277;
    const double C17832 = C17828 + C17817;
    const double C120286 = C120285 + C120283;
    const double C137283 = C137281 + C137274;
    const double C119955 = C119954 + C119952;
    const double C23422 = C23129 * C332;
    const double C23402 = C23129 * C327;
    const double C23390 = C23129 * C331;
    const double C23378 = C23129 * C328;
    const double C23374 = C23129 * C330;
    const double C23354 = C23129 * C329;
    const double C23892 = C23129 * C326;
    const double C24429 = C23129 * C1043;
    const double C24409 = C23129 * C1042;
    const double C24405 = C23129 * C1041;
    const double C24820 = C23129 * C1309;
    const double C24800 = C23129 * C1308;
    const double C25092 = C23129 * C1491;
    const double C25072 = C23129 * C1490;
    const double C25060 = C23129 * C1486;
    const double C25325 = C23129 * C1307;
    const double C25636 = C23129 * C1489;
    const double C25851 = C23129 * C1999;
    const double C26720 = C23129 * C1485;
    const double C27129 = C23129 * C2895;
    const double C32198 = C23129 * C529;
    const double C32178 = C23129 * C524;
    const double C32166 = C23129 * C528;
    const double C32154 = C23129 * C525;
    const double C32150 = C23129 * C527;
    const double C32130 = C23129 * C526;
    const double C32644 = C23129 * C523;
    const double C34769 = C23129 * C2401;
    const double C34749 = C23129 * C2400;
    const double C35283 = C23129 * C2399;
    const double C23418 = C23131 * C333;
    const double C23406 = C23131 * C326;
    const double C23394 = C23131 * C332;
    const double C23382 = C23131 * C327;
    const double C23370 = C23131 * C331;
    const double C23358 = C23131 * C328;
    const double C23896 = C23131 * C334;
    const double C24425 = C23131 * C1044;
    const double C24413 = C23131 * C1043;
    const double C24401 = C23131 * C1042;
    const double C24816 = C23131 * C1310;
    const double C24804 = C23131 * C1307;
    const double C25088 = C23131 * C1492;
    const double C25076 = C23131 * C1489;
    const double C25064 = C23131 * C1485;
    const double C25321 = C23131 * C1306;
    const double C25632 = C23131 * C1488;
    const double C25847 = C23131 * C2000;
    const double C26716 = C23131 * C1484;
    const double C27125 = C23131 * C2896;
    const double C32194 = C23131 * C530;
    const double C32182 = C23131 * C523;
    const double C32170 = C23131 * C529;
    const double C32158 = C23131 * C524;
    const double C32146 = C23131 * C528;
    const double C32134 = C23131 * C525;
    const double C32648 = C23131 * C531;
    const double C34765 = C23131 * C2402;
    const double C34753 = C23131 * C2399;
    const double C35279 = C23131 * C2398;
    const double C51188 = C50895 * C332;
    const double C51168 = C50895 * C327;
    const double C51156 = C50895 * C331;
    const double C51144 = C50895 * C328;
    const double C51140 = C50895 * C330;
    const double C51120 = C50895 * C329;
    const double C51658 = C50895 * C326;
    const double C52195 = C50895 * C1043;
    const double C52175 = C50895 * C1042;
    const double C52171 = C50895 * C1041;
    const double C52586 = C50895 * C1309;
    const double C52566 = C50895 * C1308;
    const double C52858 = C50895 * C1491;
    const double C52838 = C50895 * C1490;
    const double C52826 = C50895 * C1486;
    const double C53091 = C50895 * C1307;
    const double C53402 = C50895 * C1489;
    const double C53617 = C50895 * C1999;
    const double C54486 = C50895 * C1485;
    const double C54895 = C50895 * C2895;
    const double C101972 = C50895 * C529;
    const double C101952 = C50895 * C524;
    const double C101940 = C50895 * C528;
    const double C101928 = C50895 * C525;
    const double C101924 = C50895 * C527;
    const double C101904 = C50895 * C526;
    const double C102418 = C50895 * C523;
    const double C104543 = C50895 * C2401;
    const double C104523 = C50895 * C2400;
    const double C105057 = C50895 * C2399;
    const double C51184 = C50897 * C333;
    const double C51172 = C50897 * C326;
    const double C51160 = C50897 * C332;
    const double C51148 = C50897 * C327;
    const double C51136 = C50897 * C331;
    const double C51124 = C50897 * C328;
    const double C51662 = C50897 * C334;
    const double C52191 = C50897 * C1044;
    const double C52179 = C50897 * C1043;
    const double C52167 = C50897 * C1042;
    const double C52582 = C50897 * C1310;
    const double C52570 = C50897 * C1307;
    const double C52854 = C50897 * C1492;
    const double C52842 = C50897 * C1489;
    const double C52830 = C50897 * C1485;
    const double C53087 = C50897 * C1306;
    const double C53398 = C50897 * C1488;
    const double C53613 = C50897 * C2000;
    const double C54482 = C50897 * C1484;
    const double C54891 = C50897 * C2896;
    const double C101968 = C50897 * C530;
    const double C101956 = C50897 * C523;
    const double C101944 = C50897 * C529;
    const double C101932 = C50897 * C524;
    const double C101920 = C50897 * C528;
    const double C101908 = C50897 * C525;
    const double C102422 = C50897 * C531;
    const double C104539 = C50897 * C2402;
    const double C104527 = C50897 * C2399;
    const double C105053 = C50897 * C2398;
    const double C73927 = C73636 * C1306;
    const double C73915 = C73636 * C332;
    const double C73907 = C73636 * C327;
    const double C73899 = C73636 * C1307;
    const double C73891 = C73636 * C331;
    const double C73883 = C73636 * C328;
    const double C73879 = C73636 * C1308;
    const double C73867 = C73636 * C330;
    const double C73859 = C73636 * C329;
    const double C74411 = C73636 * C333;
    const double C74403 = C73636 * C326;
    const double C74959 = C73636 * C1043;
    const double C74951 = C73636 * C1488;
    const double C74939 = C73636 * C1489;
    const double C74931 = C73636 * C1042;
    const double C74927 = C73636 * C1041;
    const double C74919 = C73636 * C1490;
    const double C75352 = C73636 * C7732;
    const double C75340 = C73636 * C1309;
    const double C75618 = C73636 * C7998;
    const double C75606 = C73636 * C1999;
    const double C75598 = C73636 * C1491;
    const double C75590 = C73636 * C1486;
    const double C75848 = C73636 * C1310;
    const double C76154 = C73636 * C2000;
    const double C76364 = C73636 * C8000;
    const double C77235 = C73636 * C1485;
    const double C77227 = C73636 * C1492;
    const double C77651 = C73636 * C2895;
    const double C77643 = C73636 * C9382;
    const double C82889 = C73636 * C529;
    const double C82881 = C73636 * C1484;
    const double C82869 = C73636 * C524;
    const double C82861 = C73636 * C528;
    const double C82853 = C73636 * C525;
    const double C82849 = C73636 * C527;
    const double C82837 = C73636 * C526;
    const double C83193 = C73636 * C1044;
    const double C83465 = C73636 * C523;
    const double C86283 = C73636 * C2401;
    const double C86275 = C73636 * C9383;
    const double C86263 = C73636 * C2400;
    const double C86696 = C73636 * C2896;
    const double C86969 = C73636 * C2399;
    const double C134774 = C73636 * C2398;
    const double C135172 = C73636 * C530;
    const double C137276 = C73636 * C17789;
    const double C137775 = C73636 * C2402;
    const double C6341 = C6320 - C6321;
    const double C6338 = C6308 - C6309;
    const double C6336 = C6300 - C6301;
    const double C6334 = C6292 - C6293;
    const double C6332 = C6284 - C6285;
    const double C6330 = C6276 - C6277;
    const double C6329 = C6272 - C6273;
    const double C6326 = C6260 - C6261;
    const double C6324 = C6252 - C6253;
    const double C6814 = C6804 - C6805;
    const double C6812 = C6796 - C6797;
    const double C7367 = C7352 - C7353;
    const double C7365 = C7344 - C7345;
    const double C7362 = C7332 - C7333;
    const double C7360 = C7324 - C7325;
    const double C7359 = C7320 - C7321;
    const double C7357 = C7312 - C7313;
    const double C7769 = C7761 - C7762;
    const double C7766 = C7749 - C7750;
    const double C8063 = C8051 - C8052;
    const double C8060 = C8039 - C8040;
    const double C8058 = C8031 - C8032;
    const double C8056 = C8023 - C8024;
    const double C8291 = C8285 - C8286;
    const double C8601 = C8595 - C8596;
    const double C8819 = C8813 - C8814;
    const double C9719 = C9712 - C9713;
    const double C9717 = C9704 - C9705;
    const double C10147 = C10140 - C10141;
    const double C10145 = C10132 - C10133;
    const double C15234 = C15213 - C15214;
    const double C15231 = C15201 - C15202;
    const double C15229 = C15193 - C15194;
    const double C15227 = C15185 - C15186;
    const double C15225 = C15177 - C15178;
    const double C15223 = C15169 - C15170;
    const double C15222 = C15165 - C15166;
    const double C15219 = C15153 - C15154;
    const double C15217 = C15145 - C15146;
    const double C15680 = C15670 - C15671;
    const double C15678 = C15662 - C15663;
    const double C15988 = C15980 - C15981;
    const double C17825 = C17818 - C17819;
    const double C17822 = C17806 - C17807;
    const double C18139 = C18134 - C18135;
    const double C18352 = C18347 - C18348;
    const double C18569 = C18564 - C18565;
    const double C40925 = C40917 - C40918;
    const double C59665 = C59653 * C152167;
    const double C59664 = C59652 * C152167;
    const double C93487 = C59652 * C152302;
    const double C110048 = C59652 * C101464;
    const double C59663 = C59651 * C152167;
    const double C65493 = C59651 * C14705;
    const double C93484 = C59651 * C152302;
    const double C110045 = C59651 * C101464;
    const double C142763 = C59651 * C152368;
    const double C59662 = C59650 * C152167;
    const double C65482 = C59650 * C14705;
    const double C93482 = C59650 * C152302;
    const double C110043 = C59650 * C101464;
    const double C142758 = C59650 * C152368;
    const double C59661 = C59649 * C152167;
    const double C95180 = C59649 * C152302;
    const double C111734 = C59649 * C101464;
    const double C59660 = C59648 * C152167;
    const double C67298 = C59648 * C14705;
    const double C93480 = C59648 * C152302;
    const double C110041 = C59648 * C101464;
    const double C144441 = C59648 * C152368;
    const double C59659 = C59647 * C152167;
    const double C65479 = C59647 * C14705;
    const double C93478 = C59647 * C152302;
    const double C110039 = C59647 * C101464;
    const double C142755 = C59647 * C152368;
    const double C59658 = C59646 * C152167;
    const double C65476 = C59646 * C14705;
    const double C93476 = C59646 * C152302;
    const double C110037 = C59646 * C101464;
    const double C142752 = C59646 * C152368;
    const double C59657 = C59645 * C152167;
    const double C66860 = C59645 * C14705;
    const double C94751 = C59645 * C152302;
    const double C111305 = C59645 * C101464;
    const double C144017 = C59645 * C152368;
    const double C59656 = C59644 * C152167;
    const double C66855 = C59644 * C14705;
    const double C93475 = C59644 * C152302;
    const double C110036 = C59644 * C101464;
    const double C144012 = C59644 * C152368;
    const double C59655 = C59643 * C152167;
    const double C65475 = C59643 * C14705;
    const double C93472 = C59643 * C152302;
    const double C110033 = C59643 * C101464;
    const double C142751 = C59643 * C152368;
    const double C59654 = C59642 * C152167;
    const double C65470 = C59642 * C14705;
    const double C93470 = C59642 * C152302;
    const double C110031 = C59642 * C101464;
    const double C142746 = C59642 * C152368;
    const double C59963 = C59960 * C152167;
    const double C65991 = C59960 * C14705;
    const double C93903 = C59960 * C152302;
    const double C110464 = C59960 * C101464;
    const double C143176 = C59960 * C152368;
    const double C60361 = C60352 * C152167;
    const double C65483 = C60352 * C14706;
    const double C66514 = C60352 * C14705;
    const double C93483 = C60352 * C152231;
    const double C94409 = C60352 * C152302;
    const double C110044 = C60352 * C152231;
    const double C110963 = C60352 * C101464;
    const double C142759 = C60352 * C152369;
    const double C143671 = C60352 * C152368;
    const double C60360 = C60351 * C152167;
    const double C65492 = C60351 * C14706;
    const double C93485 = C60351 * C152231;
    const double C94407 = C60351 * C152302;
    const double C110046 = C60351 * C152231;
    const double C110961 = C60351 * C101464;
    const double C142762 = C60351 * C152369;
    const double C60359 = C60350 * C152167;
    const double C93486 = C60350 * C152231;
    const double C110047 = C60350 * C152231;
    const double C60358 = C60349 * C152167;
    const double C67297 = C60349 * C14706;
    const double C93481 = C60349 * C152231;
    const double C95473 = C60349 * C152302;
    const double C110042 = C60349 * C152231;
    const double C112027 = C60349 * C101464;
    const double C144440 = C60349 * C152369;
    const double C60357 = C60348 * C152167;
    const double C65480 = C60348 * C14706;
    const double C67594 = C60348 * C14705;
    const double C93479 = C60348 * C152231;
    const double C94404 = C60348 * C152302;
    const double C110040 = C60348 * C152231;
    const double C110958 = C60348 * C101464;
    const double C142756 = C60348 * C152369;
    const double C144734 = C60348 * C152368;
    const double C60356 = C60347 * C152167;
    const double C65477 = C60347 * C14706;
    const double C66509 = C60347 * C14705;
    const double C93477 = C60347 * C152231;
    const double C94402 = C60347 * C152302;
    const double C110038 = C60347 * C152231;
    const double C110956 = C60347 * C101464;
    const double C142753 = C60347 * C152369;
    const double C143666 = C60347 * C152368;
    const double C60355 = C60346 * C152167;
    const double C65471 = C60346 * C14706;
    const double C66508 = C60346 * C14705;
    const double C93471 = C60346 * C152231;
    const double C94401 = C60346 * C152302;
    const double C110032 = C60346 * C152231;
    const double C110955 = C60346 * C101464;
    const double C142747 = C60346 * C152369;
    const double C143665 = C60346 * C152368;
    const double C60354 = C60345 * C152167;
    const double C65474 = C60345 * C14706;
    const double C67085 = C60345 * C14705;
    const double C93473 = C60345 * C152231;
    const double C94399 = C60345 * C152302;
    const double C110034 = C60345 * C152231;
    const double C110953 = C60345 * C101464;
    const double C142750 = C60345 * C152369;
    const double C144239 = C60345 * C152368;
    const double C60353 = C60344 * C152167;
    const double C66856 = C60344 * C14706;
    const double C67795 = C60344 * C14705;
    const double C93474 = C60344 * C152231;
    const double C94979 = C60344 * C152302;
    const double C110035 = C60344 * C152231;
    const double C111533 = C60344 * C101464;
    const double C144013 = C60344 * C152369;
    const double C144931 = C60344 * C152368;
    const double C60608 = C60606 * C152167;
    const double C94754 = C60606 * C152302;
    const double C111308 = C60606 * C101464;
    const double C60798 = C60793 * C152167;
    const double C66859 = C60793 * C14706;
    const double C94752 = C60793 * C152231;
    const double C95670 = C60793 * C152302;
    const double C111306 = C60793 * C152231;
    const double C112224 = C60793 * C101464;
    const double C144016 = C60793 * C152369;
    const double C60797 = C60792 * C152167;
    const double C66857 = C60792 * C14707;
    const double C67794 = C60792 * C14706;
    const double C94982 = C60792 * C152302;
    const double C94980 = C60792 * C152231;
    const double C111536 = C60792 * C101464;
    const double C111534 = C60792 * C152231;
    const double C144014 = C60792 * C134328;
    const double C144930 = C60792 * C152369;
    const double C60796 = C60791 * C152167;
    const double C65473 = C60791 * C14707;
    const double C67093 = C60791 * C14705;
    const double C67086 = C60791 * C14706;
    const double C94398 = C60791 * C152231;
    const double C94977 = C60791 * C152302;
    const double C110952 = C60791 * C152231;
    const double C111531 = C60791 * C101464;
    const double C142749 = C60791 * C134328;
    const double C144244 = C60791 * C152368;
    const double C144240 = C60791 * C152369;
    const double C60795 = C60790 * C152167;
    const double C65472 = C60790 * C14707;
    const double C66507 = C60790 * C14706;
    const double C67079 = C60790 * C14705;
    const double C94400 = C60790 * C152231;
    const double C94975 = C60790 * C152302;
    const double C110954 = C60790 * C152231;
    const double C111529 = C60790 * C101464;
    const double C142748 = C60790 * C134328;
    const double C143664 = C60790 * C152369;
    const double C144236 = C60790 * C152368;
    const double C61877 = C61874 * C152167;
    const double C65478 = C61874 * C14707;
    const double C66510 = C61874 * C14706;
    const double C68674 = C61874 * C14705;
    const double C94403 = C61874 * C152231;
    const double C96522 = C61874 * C152302;
    const double C110957 = C61874 * C152231;
    const double C113076 = C61874 * C101464;
    const double C142754 = C61874 * C134328;
    const double C143667 = C61874 * C152369;
    const double C145782 = C61874 * C152368;
    const double C61876 = C61873 * C152167;
    const double C65481 = C61873 * C14707;
    const double C67593 = C61873 * C14706;
    const double C94405 = C61873 * C152231;
    const double C96520 = C61873 * C152302;
    const double C110959 = C61873 * C152231;
    const double C113074 = C61873 * C101464;
    const double C142757 = C61873 * C134328;
    const double C144733 = C61873 * C152369;
    const double C62165 = C62162 * C152167;
    const double C66506 = C62162 * C14707;
    const double C67080 = C62162 * C14706;
    const double C69080 = C62162 * C14705;
    const double C94976 = C62162 * C152231;
    const double C96914 = C62162 * C152302;
    const double C111530 = C62162 * C152231;
    const double C113468 = C62162 * C101464;
    const double C143663 = C62162 * C134328;
    const double C144237 = C62162 * C152369;
    const double C146173 = C62162 * C152368;
    const double C62164 = C62161 * C152167;
    const double C67092 = C62161 * C14706;
    const double C67087 = C62161 * C14707;
    const double C94978 = C62161 * C152231;
    const double C96912 = C62161 * C152302;
    const double C111532 = C62161 * C152231;
    const double C113466 = C62161 * C101464;
    const double C144243 = C62161 * C152369;
    const double C144241 = C62161 * C134328;
    const double C62163 = C62160 * C152167;
    const double C67793 = C62160 * C14707;
    const double C94981 = C62160 * C152231;
    const double C111535 = C62160 * C152231;
    const double C144929 = C62160 * C134328;
    const double C65501 = C65499 * C14707;
    const double C94406 = C65499 * C152231;
    const double C110960 = C65499 * C152231;
    const double C142761 = C65499 * C134328;
    const double C65500 = C65498 * C14707;
    const double C66513 = C65498 * C14706;
    const double C94408 = C65498 * C152231;
    const double C110962 = C65498 * C152231;
    const double C142760 = C65498 * C134328;
    const double C143670 = C65498 * C152369;
    const double C66511 = C65792 * C14707;
    const double C68673 = C65792 * C14706;
    const double C96521 = C65792 * C152231;
    const double C113075 = C65792 * C152231;
    const double C143668 = C65792 * C134328;
    const double C145781 = C65792 * C152369;
    const double C67101 = C67099 * C14707;
    const double C96911 = C67099 * C152231;
    const double C113465 = C67099 * C152231;
    const double C144242 = C67099 * C134328;
    const double C67100 = C67098 * C14707;
    const double C69079 = C67098 * C14706;
    const double C96913 = C67098 * C152231;
    const double C113467 = C67098 * C152231;
    const double C144238 = C67098 * C134328;
    const double C146172 = C67098 * C152369;
    const double C67598 = C67597 * C14707;
    const double C96519 = C67597 * C152231;
    const double C113073 = C67597 * C152231;
    const double C144732 = C67597 * C134328;
    const double C69078 = C68377 * C14707;
    const double C146171 = C68377 * C134328;
    const double C68678 = C68677 * C14707;
    const double C145780 = C68677 * C134328;
    const double C6357 = C6339 - C6314;
    const double C23454 = C23436 - C23399;
    const double C51220 = C51202 - C51165;
    const double C59958 = C59955 - C59948;
    const double C73963 = C73945 - C73920;
    const double C6817 = C6813 - C6802;
    const double C23457 = C23439 - C23411;
    const double C51223 = C51205 - C51177;
    const double C74423 = C74419 - C74408;
    const double C15250 = C15232 - C15207;
    const double C32230 = C32212 - C32175;
    const double C66213 = C66211 - C66208;
    const double C82918 = C82904 - C82886;
    const double C102004 = C101986 - C101949;
    const double C15683 = C15679 - C15668;
    const double C32233 = C32215 - C32187;
    const double C83475 = C83473 - C83470;
    const double C102007 = C101989 - C101961;
    const double C7378 = C7366 - C7350;
    const double C24446 = C24437 - C24418;
    const double C52212 = C52203 - C52184;
    const double C66002 = C66000 - C65994;
    const double C74984 = C74972 - C74956;
    const double C163 =
        (5 * (3 * C150784 + C150718 * C150837 + C150820 * ae) +
         C150718 * (4 * C150837 + C150718 * C150910 + C150891 * ae) +
         (4 * C150820 + C150718 * C150891) * ae) /
        C150613;
    const double C357 =
        (3 * C150784 + C150718 * C150837 + C150820 * ae + C150910 * C151012) /
        C150613;
    const double C359 =
        (C151005 * (4 * C150837 + C150718 * C150910 + C150891 * ae)) / C150613;
    const double C554 =
        (3 * C150784 + C150718 * C150837 + C150820 * ae + C150910 * C151085) /
        C150613;
    const double C556 =
        (C151078 * (4 * C150837 + C150718 * C150910 + C150891 * ae)) / C150613;
    const double C1056 = (C151078 * C151005 * C150910) / C150613;
    const double C172 =
        (5 * (3 * C150831 + ae * C150836 + be * C150837 + C150718 * C150902) +
         ae * (4 * C150836 + C150718 * C150909 + C150891 * be) +
         be * (4 * C150837 + C150718 * C150910 + C150891 * ae) +
         C150718 *
             (4 * C150902 + ae * C150909 + be * C150910 +
              C150718 *
                  (3 * C150896 + ae * C150903 + be * C150904 +
                   C150718 *
                       (2 * C150889 + ae * C150894 + be * C150895 +
                        C150718 * (C150879 + ae * C150880 + be * C150882 +
                                   C150718 * (ae * C150868 + be * C150871 +
                                              C150718 *
                                                  (C150847 * C150848 +
                                                   C150722 * bs[8] *
                                                       std::pow(C150716, 8)) *
                                                  C150615)))))) /
        C150617;
    const double C372 =
        (4 * (2 * C151025 + ae * C151005 * C150829 + be * C151005 * C150830 +
              C150718 * C151054) +
         ae * C151005 * C150909 + be * C151005 * C150910 +
         C150718 *
             (3 * C151054 + ae * C151005 * C150903 + be * C151005 * C150904 +
              C150718 *
                  (2 * C151052 + ae * C151005 * C150894 +
                   be * C151005 * C150895 +
                   C150718 * (C151043 + ae * C151005 * C150880 +
                              be * C151005 * C150882 +
                              C150718 * (ae * C151005 * C150868 +
                                         be * C151005 * C150871 +
                                         C150718 * C151005 * C150960))))) /
        C150617;
    const double C569 =
        (4 * (2 * C151098 + ae * C151078 * C150829 + be * C151078 * C150830 +
              C150718 * C151127) +
         ae * C151078 * C150909 + be * C151078 * C150910 +
         C150718 *
             (3 * C151127 + ae * C151078 * C150903 + be * C151078 * C150904 +
              C150718 *
                  (2 * C151125 + ae * C151078 * C150894 +
                   be * C151078 * C150895 +
                   C150718 * (C151116 + ae * C151078 * C150880 +
                              be * C151078 * C150882 +
                              C150718 * (ae * C151078 * C150868 +
                                         be * C151078 * C150871 +
                                         C150718 * C151078 * C150960))))) /
        C150617;
    const double C162 =
        (5 * (3 * C150783 + C150718 * C150836 + C150820 * be) +
         C150718 * (4 * C150836 + C150718 * C150909 + C150891 * be) +
         (4 * C150820 + C150718 * C150891) * be) /
        C150613;
    const double C356 =
        (3 * C150783 + C150718 * C150836 + C150820 * be + C150909 * C151012) /
        C150613;
    const double C358 =
        (C151005 * (4 * C150836 + C150718 * C150909 + C150891 * be)) / C150613;
    const double C553 =
        (3 * C150783 + C150718 * C150836 + C150820 * be + C150909 * C151085) /
        C150613;
    const double C555 =
        (C151078 * (4 * C150836 + C150718 * C150909 + C150891 * be)) / C150613;
    const double C1055 = (C151078 * C151005 * C150909) / C150613;
    const double C150993 = C150945 + C150990;
    const double C6358 = C6340 - C6318;
    const double C25331 = C25328 - C25318;
    const double C53097 = C53094 - C53084;
    const double C59959 = C59956 - C59952;
    const double C73964 = C73946 - C73924;
    const double C15991 = C15989 - C15986;
    const double C26726 = C26723 - C26713;
    const double C54492 = C54489 - C54479;
    const double C66003 = C66001 - C65998;
    const double C82916 = C82902 - C82878;
    const double C7376 = C7364 - C7342;
    const double C25642 = C25639 - C25629;
    const double C53408 = C53405 - C53395;
    const double C74982 = C74970 - C74948;
    const double C93911 = C93910 - C93908;
    const double C15251 = C15233 - C15211;
    const double C35289 = C35286 - C35276;
    const double C105063 = C105060 - C105050;
    const double C118547 = C118546 - C118544;
    const double C134779 = C134777 - C134771;
    const double C66512 = C65795 * C14707;
    const double C143669 = C65795 * C134328;
    const double C61875 = C61872 * C152167;
    const double C67296 = C61872 * C14707;
    const double C95472 = C61872 * C152231;
    const double C112026 = C61872 * C152231;
    const double C144439 = C61872 * C134328;
    const double C150999 = C150718 * C150997;
    const double C1669 =
        (2 * C151005 * C150910 + C151005 * (C150910 + C150997 * C151012)) /
        C150613;
    const double C1867 = (C151078 * (C150910 + C150997 * C151012)) / C150613;
    const double C2625 =
        (C151005 * C150910 + C151005 * C150997 * C151085) / C150613;
    const double C2763 =
        (2 * C151078 * C150910 + C151078 * (C150910 + C150997 * C151085)) /
        C150613;
    const double C150998 = C150718 * C150996;
    const double C373 =
        (4 * (2 * C151037 + ae * (C150829 + C150894 * C151012) +
              be * (C150830 + C150895 * C151012) + C150718 * C151076) +
         ae * (C150909 + C150996 * C151012) +
         be * (C150910 + C150997 * C151012) +
         C150718 *
             (3 * C151076 + ae * (C150903 + C150988 * C151012) +
              be * (C150904 + C150989 * C151012) +
              C150718 *
                  (2 * C151074 + ae * (C150894 + C150975 * C151012) +
                   be * (C150895 + C150978 * C151012) +
                   C150718 *
                       (C151065 + ae * (C150880 + C150961 * C151012) +
                        be * (C150882 + C150963 * C151012) +
                        C150718 *
                            (ae * (C150868 + C150949 * C151012) +
                             be * (C150871 + C150952 * C151012) +
                             C150718 * (C150960 + (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                      C150615 * C151012)))))) /
        C150617;
    const double C570 =
        (4 * (2 * C151110 + ae * (C150829 + C150894 * C151085) +
              be * (C150830 + C150895 * C151085) + C150718 * C151149) +
         ae * (C150909 + C150996 * C151085) +
         be * (C150910 + C150997 * C151085) +
         C150718 *
             (3 * C151149 + ae * (C150903 + C150988 * C151085) +
              be * (C150904 + C150989 * C151085) +
              C150718 *
                  (2 * C151147 + ae * (C150894 + C150975 * C151085) +
                   be * (C150895 + C150978 * C151085) +
                   C150718 *
                       (C151138 + ae * (C150880 + C150961 * C151085) +
                        be * (C150882 + C150963 * C151085) +
                        C150718 *
                            (ae * (C150868 + C150949 * C151085) +
                             be * (C150871 + C150952 * C151085) +
                             C150718 * (C150960 + (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                      C150615 * C151085)))))) /
        C150617;
    const double C1064 =
        (4 * (2 * C151215 + ae * C151078 * C151152 + be * C151078 * C151153 +
              C150718 * C151232) +
         ae * C151078 * C151005 * C150996 + be * C151078 * C151005 * C150997 +
         C150718 *
             (3 * C151232 + ae * C151078 * C151005 * C150988 +
              be * C151078 * C151005 * C150989 +
              C150718 *
                  (2 * C151230 + ae * C151078 * C151005 * C150975 +
                   be * C151078 * C151005 * C150978 +
                   C150718 * (C151221 + ae * C151078 * C151005 * C150961 +
                              be * C151078 * C151005 * C150963 +
                              C150718 * (ae * C151078 * C151005 * C150949 +
                                         be * C151078 * C151005 * C150952 +
                                         C150718 * C151078 * C151005 *
                                             (C150923 * C150924 +
                                              C150722 * bs[9] *
                                                  std::pow(C150724, 9)) *
                                             C150615))))) /
        C150617;
    const double C1668 =
        (2 * C151005 * C150909 + C151005 * (C150909 + C150996 * C151012)) /
        C150613;
    const double C1866 = (C151078 * (C150909 + C150996 * C151012)) / C150613;
    const double C2624 =
        (C151005 * C150909 + C151005 * C150996 * C151085) / C150613;
    const double C2762 =
        (2 * C151078 * C150909 + C151078 * (C150909 + C150996 * C151085)) /
        C150613;
    const double C60937 = C60936 * C152167;
    const double C60609 = C60607 * C152167;
    const double C61139 = C61138 * C152167;
    const double C95179 = C61138 * C152231;
    const double C111733 = C61138 * C152231;
    const double C60799 = C60794 * C152167;
    const double C66858 = C60794 * C14707;
    const double C95669 = C60794 * C152231;
    const double C112223 = C60794 * C152231;
    const double C144015 = C60794 * C134328;
    const double C61281 = C61280 * C152167;
    const double C94753 = C61280 * C152231;
    const double C111307 = C61280 * C152231;
    const double C23442 = C23421 - C23422;
    const double C23437 = C23401 - C23402;
    const double C23434 = C23389 - C23390;
    const double C23431 = C23377 - C23378;
    const double C23430 = C23373 - C23374;
    const double C23425 = C23353 - C23354;
    const double C23903 = C23891 - C23892;
    const double C24440 = C24428 - C24429;
    const double C24435 = C24408 - C24409;
    const double C24434 = C24404 - C24405;
    const double C24828 = C24819 - C24820;
    const double C24823 = C24799 - C24800;
    const double C25103 = C25091 - C25092;
    const double C25098 = C25071 - C25072;
    const double C25095 = C25059 - C25060;
    const double C25330 = C25324 - C25325;
    const double C25641 = C25635 - C25636;
    const double C25856 = C25850 - C25851;
    const double C26725 = C26719 - C26720;
    const double C27134 = C27128 - C27129;
    const double C32218 = C32197 - C32198;
    const double C32213 = C32177 - C32178;
    const double C32210 = C32165 - C32166;
    const double C32207 = C32153 - C32154;
    const double C32206 = C32149 - C32150;
    const double C32201 = C32129 - C32130;
    const double C32655 = C32643 - C32644;
    const double C34777 = C34768 - C34769;
    const double C34772 = C34748 - C34749;
    const double C35288 = C35282 - C35283;
    const double C23441 = C23417 - C23418;
    const double C23438 = C23405 - C23406;
    const double C23435 = C23393 - C23394;
    const double C23432 = C23381 - C23382;
    const double C23429 = C23369 - C23370;
    const double C23426 = C23357 - C23358;
    const double C23904 = C23895 - C23896;
    const double C24439 = C24424 - C24425;
    const double C24436 = C24412 - C24413;
    const double C24433 = C24400 - C24401;
    const double C24827 = C24815 - C24816;
    const double C24824 = C24803 - C24804;
    const double C25102 = C25087 - C25088;
    const double C25099 = C25075 - C25076;
    const double C25096 = C25063 - C25064;
    const double C25329 = C25320 - C25321;
    const double C25640 = C25631 - C25632;
    const double C25855 = C25846 - C25847;
    const double C26724 = C26715 - C26716;
    const double C27133 = C27124 - C27125;
    const double C32217 = C32193 - C32194;
    const double C32214 = C32181 - C32182;
    const double C32211 = C32169 - C32170;
    const double C32208 = C32157 - C32158;
    const double C32205 = C32145 - C32146;
    const double C32202 = C32133 - C32134;
    const double C32656 = C32647 - C32648;
    const double C34776 = C34764 - C34765;
    const double C34773 = C34752 - C34753;
    const double C35287 = C35278 - C35279;
    const double C51208 = C51187 - C51188;
    const double C51203 = C51167 - C51168;
    const double C51200 = C51155 - C51156;
    const double C51197 = C51143 - C51144;
    const double C51196 = C51139 - C51140;
    const double C51191 = C51119 - C51120;
    const double C51669 = C51657 - C51658;
    const double C52206 = C52194 - C52195;
    const double C52201 = C52174 - C52175;
    const double C52200 = C52170 - C52171;
    const double C52594 = C52585 - C52586;
    const double C52589 = C52565 - C52566;
    const double C52869 = C52857 - C52858;
    const double C52864 = C52837 - C52838;
    const double C52861 = C52825 - C52826;
    const double C53096 = C53090 - C53091;
    const double C53407 = C53401 - C53402;
    const double C53622 = C53616 - C53617;
    const double C54491 = C54485 - C54486;
    const double C54900 = C54894 - C54895;
    const double C101992 = C101971 - C101972;
    const double C101987 = C101951 - C101952;
    const double C101984 = C101939 - C101940;
    const double C101981 = C101927 - C101928;
    const double C101980 = C101923 - C101924;
    const double C101975 = C101903 - C101904;
    const double C102429 = C102417 - C102418;
    const double C104551 = C104542 - C104543;
    const double C104546 = C104522 - C104523;
    const double C105062 = C105056 - C105057;
    const double C51207 = C51183 - C51184;
    const double C51204 = C51171 - C51172;
    const double C51201 = C51159 - C51160;
    const double C51198 = C51147 - C51148;
    const double C51195 = C51135 - C51136;
    const double C51192 = C51123 - C51124;
    const double C51670 = C51661 - C51662;
    const double C52205 = C52190 - C52191;
    const double C52202 = C52178 - C52179;
    const double C52199 = C52166 - C52167;
    const double C52593 = C52581 - C52582;
    const double C52590 = C52569 - C52570;
    const double C52868 = C52853 - C52854;
    const double C52865 = C52841 - C52842;
    const double C52862 = C52829 - C52830;
    const double C53095 = C53086 - C53087;
    const double C53406 = C53397 - C53398;
    const double C53621 = C53612 - C53613;
    const double C54490 = C54481 - C54482;
    const double C54899 = C54890 - C54891;
    const double C101991 = C101967 - C101968;
    const double C101988 = C101955 - C101956;
    const double C101985 = C101943 - C101944;
    const double C101982 = C101931 - C101932;
    const double C101979 = C101919 - C101920;
    const double C101976 = C101907 - C101908;
    const double C102430 = C102421 - C102422;
    const double C104550 = C104538 - C104539;
    const double C104547 = C104526 - C104527;
    const double C105061 = C105052 - C105053;
    const double C73947 = C73926 - C73927;
    const double C73944 = C73914 - C73915;
    const double C73942 = C73906 - C73907;
    const double C73940 = C73898 - C73899;
    const double C73938 = C73890 - C73891;
    const double C73936 = C73882 - C73883;
    const double C73935 = C73878 - C73879;
    const double C73932 = C73866 - C73867;
    const double C73930 = C73858 - C73859;
    const double C74420 = C74410 - C74411;
    const double C74418 = C74402 - C74403;
    const double C74973 = C74958 - C74959;
    const double C74971 = C74950 - C74951;
    const double C74968 = C74938 - C74939;
    const double C74966 = C74930 - C74931;
    const double C74965 = C74926 - C74927;
    const double C74963 = C74918 - C74919;
    const double C75359 = C75351 - C75352;
    const double C75356 = C75339 - C75340;
    const double C75629 = C75617 - C75618;
    const double C75626 = C75605 - C75606;
    const double C75624 = C75597 - C75598;
    const double C75622 = C75589 - C75590;
    const double C75853 = C75847 - C75848;
    const double C76159 = C76153 - C76154;
    const double C76369 = C76363 - C76364;
    const double C77241 = C77234 - C77235;
    const double C77239 = C77226 - C77227;
    const double C77657 = C77650 - C77651;
    const double C77655 = C77642 - C77643;
    const double C82905 = C82888 - C82889;
    const double C82903 = C82880 - C82881;
    const double C82900 = C82868 - C82869;
    const double C82898 = C82860 - C82861;
    const double C82896 = C82852 - C82853;
    const double C82895 = C82848 - C82849;
    const double C82892 = C82836 - C82837;
    const double C83200 = C83192 - C83193;
    const double C83472 = C83464 - C83465;
    const double C86291 = C86282 - C86283;
    const double C86289 = C86274 - C86275;
    const double C86286 = C86262 - C86263;
    const double C86701 = C86695 - C86696;
    const double C86973 = C86968 - C86969;
    const double C134778 = C134773 - C134774;
    const double C135179 = C135171 - C135172;
    const double C137280 = C137275 - C137276;
    const double C137779 = C137774 - C137775;
    const double C6359 = C6341 - C6322;
    const double C6356 = C6338 - C6310;
    const double C6354 = C6336 - C6302;
    const double C6352 = C6334 - C6294;
    const double C6350 = C6332 - C6286;
    const double C6348 = C6330 - C6278;
    const double C6347 = C6329 - C6274;
    const double C6344 = C6326 - C6262;
    const double C6342 = C6324 - C6254;
    const double C6818 = C6814 - C6806;
    const double C6816 = C6812 - C6798;
    const double C7379 = C7367 - C7354;
    const double C7377 = C7365 - C7346;
    const double C7374 = C7362 - C7334;
    const double C7372 = C7360 - C7326;
    const double C7371 = C7359 - C7322;
    const double C7369 = C7357 - C7314;
    const double C7773 = C7769 - C7763;
    const double C7770 = C7766 - C7751;
    const double C8071 = C8063 - C8053;
    const double C8068 = C8060 - C8041;
    const double C8066 = C8058 - C8033;
    const double C8064 = C8056 - C8025;
    const double C8293 = C8291 - C8287;
    const double C8603 = C8601 - C8597;
    const double C8821 = C8819 - C8815;
    const double C9723 = C9719 - C9714;
    const double C9721 = C9717 - C9706;
    const double C10151 = C10147 - C10142;
    const double C10149 = C10145 - C10134;
    const double C15252 = C15234 - C15215;
    const double C15249 = C15231 - C15203;
    const double C15247 = C15229 - C15195;
    const double C15245 = C15227 - C15187;
    const double C15243 = C15225 - C15179;
    const double C15241 = C15223 - C15171;
    const double C15240 = C15222 - C15167;
    const double C15237 = C15219 - C15155;
    const double C15235 = C15217 - C15147;
    const double C15684 = C15680 - C15672;
    const double C15682 = C15678 - C15664;
    const double C15990 = C15988 - C15982;
    const double C17829 = C17825 - C17820;
    const double C17826 = C17822 - C17808;
    const double C18141 = C18139 - C18136;
    const double C18354 = C18352 - C18349;
    const double C18571 = C18569 - C18566;
    const double C40927 = C40925 - C40919;
    const double C93490 = C93484 + C93485;
    const double C110051 = C110045 + C110046;
    const double C95178 = C93480 + C93481;
    const double C111732 = C110041 + C110042;
    const double C93489 = C93479 + C93478;
    const double C110050 = C110040 + C110039;
    const double C93488 = C93472 + C93473;
    const double C110049 = C110033 + C110034;
    const double C94750 = C93474 + C93475;
    const double C111304 = C110035 + C110036;
    const double C94755 = C94751 + C94752;
    const double C111309 = C111305 + C111306;
    const double C95668 = C94979 + C94980;
    const double C112222 = C111533 + C111534;
    const double C94974 = C94398 + C94399;
    const double C111528 = C110952 + C110953;
    const double C95471 = C94404 + C94405;
    const double C112025 = C110958 + C110959;
    const double C94983 = C94977 + C94978;
    const double C111537 = C111531 + C111532;
    const double C6375 = C6357 + C6315;
    const double C23472 = C23454 + C23400;
    const double C51238 = C51220 + C51166;
    const double C59961 = C59958 + C59949;
    const double C73981 = C73963 + C73921;
    const double C6821 = C6817 + C6803;
    const double C23475 = C23457 + C23412;
    const double C51241 = C51223 + C51178;
    const double C74427 = C74423 + C74409;
    const double C15268 = C15250 + C15208;
    const double C32248 = C32230 + C32176;
    const double C66215 = C66213 + C66209;
    const double C82932 = C82918 + C82887;
    const double C102022 = C102004 + C101950;
    const double C15687 = C15683 + C15669;
    const double C32251 = C32233 + C32188;
    const double C83477 = C83475 + C83471;
    const double C102025 = C102007 + C101962;
    const double C7390 = C7378 + C7351;
    const double C24455 = C24446 + C24419;
    const double C52221 = C52212 + C52185;
    const double C66004 = C66002 + C65995;
    const double C74996 = C74984 + C74957;
    const double C6810 = C6031 * C357;
    const double C23415 = C23132 * C357;
    const double C51181 = C50898 * C357;
    const double C74416 = C150632 * C357;
    const double C23901 = C23132 * C359;
    const double C51667 = C50898 * C359;
    const double C15676 = C6031 * C554;
    const double C32191 = C23132 * C554;
    const double C101965 = C50898 * C554;
    const double C135177 = C150632 * C554;
    const double C32653 = C23132 * C556;
    const double C102427 = C50898 * C556;
    const double C24422 = C23132 * C1056;
    const double C40923 = C6031 * C1056;
    const double C52188 = C50898 * C1056;
    const double C83198 = C150632 * C1056;
    const double C23902 = C23125 * C372;
    const double C51668 = C50891 * C372;
    const double C32654 = C23125 * C569;
    const double C102428 = C50891 * C569;
    const double C6808 = C6031 * C356;
    const double C23413 = C23132 * C356;
    const double C51179 = C50898 * C356;
    const double C74414 = C150632 * C356;
    const double C23899 = C23132 * C358;
    const double C51665 = C50898 * C358;
    const double C15674 = C6031 * C553;
    const double C32189 = C23132 * C553;
    const double C101963 = C50898 * C553;
    const double C135175 = C150632 * C553;
    const double C32651 = C23132 * C555;
    const double C102425 = C50898 * C555;
    const double C24420 = C23132 * C1055;
    const double C40921 = C6031 * C1055;
    const double C52186 = C50898 * C1055;
    const double C83196 = C150632 * C1055;
    const double C6376 = C6358 + C6319;
    const double C25334 = C25331 + C25319;
    const double C53100 = C53097 + C53085;
    const double C59962 = C59959 + C59953;
    const double C73982 = C73964 + C73925;
    const double C15993 = C15991 + C15987;
    const double C26729 = C26726 + C26714;
    const double C54495 = C54492 + C54480;
    const double C66005 = C66003 + C65999;
    const double C82930 = C82916 + C82879;
    const double C7388 = C7376 + C7343;
    const double C25645 = C25642 + C25630;
    const double C53411 = C53408 + C53396;
    const double C74994 = C74982 + C74949;
    const double C93912 = C93911 + C93909;
    const double C15269 = C15251 + C15212;
    const double C35292 = C35289 + C35277;
    const double C105066 = C105063 + C105051;
    const double C118548 = C118547 + C118545;
    const double C134781 = C134779 + C134772;
    const double C151001 = C150931 + C150999;
    const double C151000 = C150925 + C150998;
    const double C23460 = C23442 - C23423;
    const double C23455 = C23437 - C23403;
    const double C23452 = C23434 - C23391;
    const double C23449 = C23431 - C23379;
    const double C23448 = C23430 - C23375;
    const double C23443 = C23425 - C23355;
    const double C23906 = C23903 - C23893;
    const double C24449 = C24440 - C24430;
    const double C24444 = C24435 - C24410;
    const double C24443 = C24434 - C24406;
    const double C24834 = C24828 - C24821;
    const double C24829 = C24823 - C24801;
    const double C25112 = C25103 - C25093;
    const double C25107 = C25098 - C25073;
    const double C25104 = C25095 - C25061;
    const double C25333 = C25330 - C25326;
    const double C25644 = C25641 - C25637;
    const double C25859 = C25856 - C25852;
    const double C26728 = C26725 - C26721;
    const double C27137 = C27134 - C27130;
    const double C32236 = C32218 - C32199;
    const double C32231 = C32213 - C32179;
    const double C32228 = C32210 - C32167;
    const double C32225 = C32207 - C32155;
    const double C32224 = C32206 - C32151;
    const double C32219 = C32201 - C32131;
    const double C32658 = C32655 - C32645;
    const double C34783 = C34777 - C34770;
    const double C34778 = C34772 - C34750;
    const double C35291 = C35288 - C35284;
    const double C23459 = C23441 - C23419;
    const double C23456 = C23438 - C23407;
    const double C23453 = C23435 - C23395;
    const double C23450 = C23432 - C23383;
    const double C23447 = C23429 - C23371;
    const double C23444 = C23426 - C23359;
    const double C23907 = C23904 - C23897;
    const double C24448 = C24439 - C24426;
    const double C24445 = C24436 - C24414;
    const double C24442 = C24433 - C24402;
    const double C24833 = C24827 - C24817;
    const double C24830 = C24824 - C24805;
    const double C25111 = C25102 - C25089;
    const double C25108 = C25099 - C25077;
    const double C25105 = C25096 - C25065;
    const double C25332 = C25329 - C25322;
    const double C25643 = C25640 - C25633;
    const double C25858 = C25855 - C25848;
    const double C26727 = C26724 - C26717;
    const double C27136 = C27133 - C27126;
    const double C32235 = C32217 - C32195;
    const double C32232 = C32214 - C32183;
    const double C32229 = C32211 - C32171;
    const double C32226 = C32208 - C32159;
    const double C32223 = C32205 - C32147;
    const double C32220 = C32202 - C32135;
    const double C32659 = C32656 - C32649;
    const double C34782 = C34776 - C34766;
    const double C34779 = C34773 - C34754;
    const double C35290 = C35287 - C35280;
    const double C51226 = C51208 - C51189;
    const double C51221 = C51203 - C51169;
    const double C51218 = C51200 - C51157;
    const double C51215 = C51197 - C51145;
    const double C51214 = C51196 - C51141;
    const double C51209 = C51191 - C51121;
    const double C51672 = C51669 - C51659;
    const double C52215 = C52206 - C52196;
    const double C52210 = C52201 - C52176;
    const double C52209 = C52200 - C52172;
    const double C52600 = C52594 - C52587;
    const double C52595 = C52589 - C52567;
    const double C52878 = C52869 - C52859;
    const double C52873 = C52864 - C52839;
    const double C52870 = C52861 - C52827;
    const double C53099 = C53096 - C53092;
    const double C53410 = C53407 - C53403;
    const double C53625 = C53622 - C53618;
    const double C54494 = C54491 - C54487;
    const double C54903 = C54900 - C54896;
    const double C102010 = C101992 - C101973;
    const double C102005 = C101987 - C101953;
    const double C102002 = C101984 - C101941;
    const double C101999 = C101981 - C101929;
    const double C101998 = C101980 - C101925;
    const double C101993 = C101975 - C101905;
    const double C102432 = C102429 - C102419;
    const double C104557 = C104551 - C104544;
    const double C104552 = C104546 - C104524;
    const double C105065 = C105062 - C105058;
    const double C51225 = C51207 - C51185;
    const double C51222 = C51204 - C51173;
    const double C51219 = C51201 - C51161;
    const double C51216 = C51198 - C51149;
    const double C51213 = C51195 - C51137;
    const double C51210 = C51192 - C51125;
    const double C51673 = C51670 - C51663;
    const double C52214 = C52205 - C52192;
    const double C52211 = C52202 - C52180;
    const double C52208 = C52199 - C52168;
    const double C52599 = C52593 - C52583;
    const double C52596 = C52590 - C52571;
    const double C52877 = C52868 - C52855;
    const double C52874 = C52865 - C52843;
    const double C52871 = C52862 - C52831;
    const double C53098 = C53095 - C53088;
    const double C53409 = C53406 - C53399;
    const double C53624 = C53621 - C53614;
    const double C54493 = C54490 - C54483;
    const double C54902 = C54899 - C54892;
    const double C102009 = C101991 - C101969;
    const double C102006 = C101988 - C101957;
    const double C102003 = C101985 - C101945;
    const double C102000 = C101982 - C101933;
    const double C101997 = C101979 - C101921;
    const double C101994 = C101976 - C101909;
    const double C102433 = C102430 - C102423;
    const double C104556 = C104550 - C104540;
    const double C104553 = C104547 - C104528;
    const double C105064 = C105061 - C105054;
    const double C73965 = C73947 - C73928;
    const double C73962 = C73944 - C73916;
    const double C73960 = C73942 - C73908;
    const double C73958 = C73940 - C73900;
    const double C73956 = C73938 - C73892;
    const double C73954 = C73936 - C73884;
    const double C73953 = C73935 - C73880;
    const double C73950 = C73932 - C73868;
    const double C73948 = C73930 - C73860;
    const double C74424 = C74420 - C74412;
    const double C74422 = C74418 - C74404;
    const double C74985 = C74973 - C74960;
    const double C74983 = C74971 - C74952;
    const double C74980 = C74968 - C74940;
    const double C74978 = C74966 - C74932;
    const double C74977 = C74965 - C74928;
    const double C74975 = C74963 - C74920;
    const double C75363 = C75359 - C75353;
    const double C75360 = C75356 - C75341;
    const double C75637 = C75629 - C75619;
    const double C75634 = C75626 - C75607;
    const double C75632 = C75624 - C75599;
    const double C75630 = C75622 - C75591;
    const double C75855 = C75853 - C75849;
    const double C76161 = C76159 - C76155;
    const double C76371 = C76369 - C76365;
    const double C77245 = C77241 - C77236;
    const double C77243 = C77239 - C77228;
    const double C77661 = C77657 - C77652;
    const double C77659 = C77655 - C77644;
    const double C82919 = C82905 - C82890;
    const double C82917 = C82903 - C82882;
    const double C82914 = C82900 - C82870;
    const double C82912 = C82898 - C82862;
    const double C82910 = C82896 - C82854;
    const double C82909 = C82895 - C82850;
    const double C82906 = C82892 - C82838;
    const double C83202 = C83200 - C83194;
    const double C83474 = C83472 - C83466;
    const double C86297 = C86291 - C86284;
    const double C86295 = C86289 - C86276;
    const double C86292 = C86286 - C86264;
    const double C86703 = C86701 - C86697;
    const double C86975 = C86973 - C86970;
    const double C134780 = C134778 - C134775;
    const double C135181 = C135179 - C135173;
    const double C137282 = C137280 - C137277;
    const double C137781 = C137779 - C137776;
    const double C6377 = C6359 + C6323;
    const double C6374 = C6356 + C6311;
    const double C6372 = C6354 + C6303;
    const double C6370 = C6352 + C6295;
    const double C6368 = C6350 + C6287;
    const double C6366 = C6348 + C6279;
    const double C6365 = C6347 + C6275;
    const double C6362 = C6344 + C6263;
    const double C6360 = C6342 + C6255;
    const double C6822 = C6818 + C6807;
    const double C6820 = C6816 + C6799;
    const double C7391 = C7379 + C7355;
    const double C7389 = C7377 + C7347;
    const double C7386 = C7374 + C7335;
    const double C7384 = C7372 + C7327;
    const double C7383 = C7371 + C7323;
    const double C7381 = C7369 + C7315;
    const double C7777 = C7773 + C7764;
    const double C7774 = C7770 + C7752;
    const double C8079 = C8071 + C8054;
    const double C8076 = C8068 + C8042;
    const double C8074 = C8066 + C8034;
    const double C8072 = C8064 + C8026;
    const double C8295 = C8293 + C8288;
    const double C8605 = C8603 + C8598;
    const double C8823 = C8821 + C8816;
    const double C9727 = C9723 + C9715;
    const double C9725 = C9721 + C9707;
    const double C10155 = C10151 + C10143;
    const double C10153 = C10149 + C10135;
    const double C15270 = C15252 + C15216;
    const double C15267 = C15249 + C15204;
    const double C15265 = C15247 + C15196;
    const double C15263 = C15245 + C15188;
    const double C15261 = C15243 + C15180;
    const double C15259 = C15241 + C15172;
    const double C15258 = C15240 + C15168;
    const double C15255 = C15237 + C15156;
    const double C15253 = C15235 + C15148;
    const double C15688 = C15684 + C15673;
    const double C15686 = C15682 + C15665;
    const double C15992 = C15990 + C15983;
    const double C17833 = C17829 + C17821;
    const double C17830 = C17826 + C17809;
    const double C18143 = C18141 + C18137;
    const double C18356 = C18354 + C18350;
    const double C18573 = C18571 + C18567;
    const double C40929 = C40927 + C40920;
    const double C59964 = C59961 * C152167;
    const double C93905 = C59961 * C152302;
    const double C110466 = C59961 * C101464;
    const double C66006 = C66004 * C14706;
    const double C93904 = C66004 * C152231;
    const double C110465 = C66004 * C152231;
    const double C143177 = C66004 * C152369;
    const double C6815 = C6808 - C6809;
    const double C23440 = C23413 - C23414;
    const double C51206 = C51179 - C51180;
    const double C74421 = C74414 - C74415;
    const double C23905 = C23899 - C23900;
    const double C51671 = C51665 - C51666;
    const double C15681 = C15674 - C15675;
    const double C32216 = C32189 - C32190;
    const double C101990 = C101963 - C101964;
    const double C135180 = C135175 - C135176;
    const double C32657 = C32651 - C32652;
    const double C102431 = C102425 - C102426;
    const double C24438 = C24420 - C24421;
    const double C40926 = C40921 - C40922;
    const double C52204 = C52186 - C52187;
    const double C83201 = C83196 - C83197;
    const double C59965 = C59962 * C152167;
    const double C66007 = C66005 * C14707;
    const double C143178 = C66005 * C134328;
    const double C93913 = C93912 * C152231;
    const double C110467 = C93912 * C152231;
    const double C151003 = C151001 + C150979;
    const double C151002 = C151000 + C150976;
    const double C23478 = C23460 + C23424;
    const double C23473 = C23455 + C23404;
    const double C23470 = C23452 + C23392;
    const double C23467 = C23449 + C23380;
    const double C23466 = C23448 + C23376;
    const double C23461 = C23443 + C23356;
    const double C23909 = C23906 + C23894;
    const double C24458 = C24449 + C24431;
    const double C24453 = C24444 + C24411;
    const double C24452 = C24443 + C24407;
    const double C24840 = C24834 + C24822;
    const double C24835 = C24829 + C24802;
    const double C25121 = C25112 + C25094;
    const double C25116 = C25107 + C25074;
    const double C25113 = C25104 + C25062;
    const double C25336 = C25333 + C25327;
    const double C25647 = C25644 + C25638;
    const double C25862 = C25859 + C25853;
    const double C26731 = C26728 + C26722;
    const double C27140 = C27137 + C27131;
    const double C32254 = C32236 + C32200;
    const double C32249 = C32231 + C32180;
    const double C32246 = C32228 + C32168;
    const double C32243 = C32225 + C32156;
    const double C32242 = C32224 + C32152;
    const double C32237 = C32219 + C32132;
    const double C32661 = C32658 + C32646;
    const double C34789 = C34783 + C34771;
    const double C34784 = C34778 + C34751;
    const double C35294 = C35291 + C35285;
    const double C23477 = C23459 + C23420;
    const double C23474 = C23456 + C23408;
    const double C23471 = C23453 + C23396;
    const double C23468 = C23450 + C23384;
    const double C23465 = C23447 + C23372;
    const double C23462 = C23444 + C23360;
    const double C23910 = C23907 + C23898;
    const double C24457 = C24448 + C24427;
    const double C24454 = C24445 + C24415;
    const double C24451 = C24442 + C24403;
    const double C24839 = C24833 + C24818;
    const double C24836 = C24830 + C24806;
    const double C25120 = C25111 + C25090;
    const double C25117 = C25108 + C25078;
    const double C25114 = C25105 + C25066;
    const double C25335 = C25332 + C25323;
    const double C25646 = C25643 + C25634;
    const double C25861 = C25858 + C25849;
    const double C26730 = C26727 + C26718;
    const double C27139 = C27136 + C27127;
    const double C32253 = C32235 + C32196;
    const double C32250 = C32232 + C32184;
    const double C32247 = C32229 + C32172;
    const double C32244 = C32226 + C32160;
    const double C32241 = C32223 + C32148;
    const double C32238 = C32220 + C32136;
    const double C32662 = C32659 + C32650;
    const double C34788 = C34782 + C34767;
    const double C34785 = C34779 + C34755;
    const double C35293 = C35290 + C35281;
    const double C51244 = C51226 + C51190;
    const double C51239 = C51221 + C51170;
    const double C51236 = C51218 + C51158;
    const double C51233 = C51215 + C51146;
    const double C51232 = C51214 + C51142;
    const double C51227 = C51209 + C51122;
    const double C51675 = C51672 + C51660;
    const double C52224 = C52215 + C52197;
    const double C52219 = C52210 + C52177;
    const double C52218 = C52209 + C52173;
    const double C52606 = C52600 + C52588;
    const double C52601 = C52595 + C52568;
    const double C52887 = C52878 + C52860;
    const double C52882 = C52873 + C52840;
    const double C52879 = C52870 + C52828;
    const double C53102 = C53099 + C53093;
    const double C53413 = C53410 + C53404;
    const double C53628 = C53625 + C53619;
    const double C54497 = C54494 + C54488;
    const double C54906 = C54903 + C54897;
    const double C102028 = C102010 + C101974;
    const double C102023 = C102005 + C101954;
    const double C102020 = C102002 + C101942;
    const double C102017 = C101999 + C101930;
    const double C102016 = C101998 + C101926;
    const double C102011 = C101993 + C101906;
    const double C102435 = C102432 + C102420;
    const double C104563 = C104557 + C104545;
    const double C104558 = C104552 + C104525;
    const double C105068 = C105065 + C105059;
    const double C51243 = C51225 + C51186;
    const double C51240 = C51222 + C51174;
    const double C51237 = C51219 + C51162;
    const double C51234 = C51216 + C51150;
    const double C51231 = C51213 + C51138;
    const double C51228 = C51210 + C51126;
    const double C51676 = C51673 + C51664;
    const double C52223 = C52214 + C52193;
    const double C52220 = C52211 + C52181;
    const double C52217 = C52208 + C52169;
    const double C52605 = C52599 + C52584;
    const double C52602 = C52596 + C52572;
    const double C52886 = C52877 + C52856;
    const double C52883 = C52874 + C52844;
    const double C52880 = C52871 + C52832;
    const double C53101 = C53098 + C53089;
    const double C53412 = C53409 + C53400;
    const double C53627 = C53624 + C53615;
    const double C54496 = C54493 + C54484;
    const double C54905 = C54902 + C54893;
    const double C102027 = C102009 + C101970;
    const double C102024 = C102006 + C101958;
    const double C102021 = C102003 + C101946;
    const double C102018 = C102000 + C101934;
    const double C102015 = C101997 + C101922;
    const double C102012 = C101994 + C101910;
    const double C102436 = C102433 + C102424;
    const double C104562 = C104556 + C104541;
    const double C104559 = C104553 + C104529;
    const double C105067 = C105064 + C105055;
    const double C73983 = C73965 + C73929;
    const double C73980 = C73962 + C73917;
    const double C73978 = C73960 + C73909;
    const double C73976 = C73958 + C73901;
    const double C73974 = C73956 + C73893;
    const double C73972 = C73954 + C73885;
    const double C73971 = C73953 + C73881;
    const double C73968 = C73950 + C73869;
    const double C73966 = C73948 + C73861;
    const double C74428 = C74424 + C74413;
    const double C74426 = C74422 + C74405;
    const double C74997 = C74985 + C74961;
    const double C74995 = C74983 + C74953;
    const double C74992 = C74980 + C74941;
    const double C74990 = C74978 + C74933;
    const double C74989 = C74977 + C74929;
    const double C74987 = C74975 + C74921;
    const double C75367 = C75363 + C75354;
    const double C75364 = C75360 + C75342;
    const double C75645 = C75637 + C75620;
    const double C75642 = C75634 + C75608;
    const double C75640 = C75632 + C75600;
    const double C75638 = C75630 + C75592;
    const double C75857 = C75855 + C75850;
    const double C76163 = C76161 + C76156;
    const double C76373 = C76371 + C76366;
    const double C77249 = C77245 + C77237;
    const double C77247 = C77243 + C77229;
    const double C77665 = C77661 + C77653;
    const double C77663 = C77659 + C77645;
    const double C82933 = C82919 + C82891;
    const double C82931 = C82917 + C82883;
    const double C82928 = C82914 + C82871;
    const double C82926 = C82912 + C82863;
    const double C82924 = C82910 + C82855;
    const double C82923 = C82909 + C82851;
    const double C82920 = C82906 + C82839;
    const double C83204 = C83202 + C83195;
    const double C83476 = C83474 + C83467;
    const double C86303 = C86297 + C86285;
    const double C86301 = C86295 + C86277;
    const double C86298 = C86292 + C86265;
    const double C86705 = C86703 + C86698;
    const double C86977 = C86975 + C86971;
    const double C134782 = C134780 + C134776;
    const double C135183 = C135181 + C135174;
    const double C137284 = C137282 + C137278;
    const double C137783 = C137781 + C137777;
    const double C6380 = C6374 + C6375;
    const double C8280 = C6370 + C6371;
    const double C6379 = C6369 + C6368;
    const double C7748 = C6364 + C6365;
    const double C6378 = C6362 + C6363;
    const double C41580 = C7390 + C7391;
    const double C41579 = C7391 + C7390;
    const double C8590 = C7386 + C7387;
    const double C42970 = C7387 + C7386;
    const double C41578 = C7385 + C7384;
    const double C41577 = C7384 + C7385;
    const double C41576 = C7382 + C7383;
    const double C41575 = C7383 + C7382;
    const double C8022 = C7380 + C7381;
    const double C42324 = C7381 + C7380;
    const double C7778 = C7774 + C7775;
    const double C8808 = C8076 + C8077;
    const double C43229 = C8077 + C8076;
    const double C8080 = C8074 + C8075;
    const double C42325 = C8075 + C8074;
    const double C16552 = C8073 + C8072;
    const double C42323 = C8072 + C8073;
    const double C18129 = C9727 + C9726;
    const double C44358 = C9726 + C9727;
    const double C18559 = C10155 + C10154;
    const double C44875 = C10154 + C10155;
    const double C15273 = C15267 + C15268;
    const double C18342 = C15263 + C15264;
    const double C15272 = C15262 + C15261;
    const double C17805 = C15257 + C15258;
    const double C15271 = C15255 + C15256;
    const double C17834 = C17830 + C17831;
    const double C6819 = C6815 - C6810;
    const double C23458 = C23440 - C23415;
    const double C51224 = C51206 - C51181;
    const double C74425 = C74421 - C74416;
    const double C23908 = C23905 - C23901;
    const double C51674 = C51671 - C51667;
    const double C15685 = C15681 - C15676;
    const double C32234 = C32216 - C32191;
    const double C102008 = C101990 - C101965;
    const double C135182 = C135180 - C135177;
    const double C32660 = C32657 - C32653;
    const double C102434 = C102431 - C102427;
    const double C24447 = C24438 - C24422;
    const double C40928 = C40926 - C40923;
    const double C52213 = C52204 - C52188;
    const double C83203 = C83201 - C83198;
    const double C165 =
        (6 * (4 * C150837 + C150718 * C150910 + C150891 * ae) +
         C150718 * (5 * C150910 + C150718 * C151003 + C150982 * ae) +
         (5 * C150891 + C150718 * C150982) * ae) /
        C150613;
    const double C361 =
        (4 * C150837 + C150718 * C150910 + C150891 * ae + C151003 * C151012) /
        C150613;
    const double C558 =
        (4 * C150837 + C150718 * C150910 + C150891 * ae + C151003 * C151085) /
        C150613;
    const double C709 =
        (C151005 * (5 * C150910 + C150718 * C151003 + C150982 * ae)) / C150613;
    const double C845 =
        (C151078 * (5 * C150910 + C150718 * C151003 + C150982 * ae)) / C150613;
    const double C1058 = (C151078 * C151005 * C151003) / C150613;
    const double C173 =
        (6 * (4 * C150902 + ae * C150909 + be * C150910 + C150718 * C150993) +
         ae * (5 * C150909 + C150718 * C151002 + C150982 * be) +
         be * (5 * C150910 + C150718 * C151003 + C150982 * ae) +
         C150718 *
             (5 * C150993 + ae * C151002 + be * C151003 +
              C150718 *
                  (4 * C150987 + ae * C150996 + be * C150997 +
                   C150718 *
                       (3 * C150980 + ae * C150988 + be * C150989 +
                        C150718 *
                            (2 * C150970 + ae * C150975 + be * C150978 +
                             C150718 *
                                 (C150960 + ae * C150961 + be * C150963 +
                                  C150718 * (ae * C150949 + be * C150952 +
                                             C150718 *
                                                 (C150923 * C150924 +
                                                  C150722 * bs[9] *
                                                      std::pow(C150724, 9)) *
                                                 C150615))))))) /
        C150617;
    const double C710 =
        (5 * (3 * C151054 + ae * C151005 * C150903 + be * C151005 * C150904 +
              C150718 * C151175) +
         ae * C151005 * C151002 + be * C151005 * C151003 +
         C150718 *
             (4 * C151175 + ae * C151005 * C150996 + be * C151005 * C150997 +
              C150718 *
                  (3 * C151173 + ae * C151005 * C150988 +
                   be * C151005 * C150989 +
                   C150718 *
                       (2 * C151171 + ae * C151005 * C150975 +
                        be * C151005 * C150978 +
                        C150718 * (C151158 + ae * C151005 * C150961 +
                                   be * C151005 * C150963 +
                                   C150718 * (ae * C151005 * C150949 +
                                              be * C151005 * C150952 +
                                              C150718 * C151005 *
                                                  (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                  C150615)))))) /
        C150617;
    const double C846 =
        (5 * (3 * C151127 + ae * C151078 * C150903 + be * C151078 * C150904 +
              C150718 * C151201) +
         ae * C151078 * C151002 + be * C151078 * C151003 +
         C150718 *
             (4 * C151201 + ae * C151078 * C150996 + be * C151078 * C150997 +
              C150718 *
                  (3 * C151199 + ae * C151078 * C150988 +
                   be * C151078 * C150989 +
                   C150718 *
                       (2 * C151197 + ae * C151078 * C150975 +
                        be * C151078 * C150978 +
                        C150718 * (C151184 + ae * C151078 * C150961 +
                                   be * C151078 * C150963 +
                                   C150718 * (ae * C151078 * C150949 +
                                              be * C151078 * C150952 +
                                              C150718 * C151078 *
                                                  (C150923 * C150924 +
                                                   C150722 * bs[9] *
                                                       std::pow(C150724, 9)) *
                                                  C150615)))))) /
        C150617;
    const double C164 =
        (6 * (4 * C150836 + C150718 * C150909 + C150891 * be) +
         C150718 * (5 * C150909 + C150718 * C151002 + C150982 * be) +
         (5 * C150891 + C150718 * C150982) * be) /
        C150613;
    const double C360 =
        (4 * C150836 + C150718 * C150909 + C150891 * be + C151002 * C151012) /
        C150613;
    const double C557 =
        (4 * C150836 + C150718 * C150909 + C150891 * be + C151002 * C151085) /
        C150613;
    const double C708 =
        (C151005 * (5 * C150909 + C150718 * C151002 + C150982 * be)) / C150613;
    const double C844 =
        (C151078 * (5 * C150909 + C150718 * C151002 + C150982 * be)) / C150613;
    const double C1057 = (C151078 * C151005 * C151002) / C150613;
    const double C73986 = C73980 + C73981;
    const double C75842 = C73976 + C73977;
    const double C73985 = C73975 + C73974;
    const double C75338 = C73970 + C73971;
    const double C73984 = C73968 + C73969;
    const double C83869 = C74996 + C74997;
    const double C83868 = C74997 + C74996;
    const double C76148 = C74992 + C74993;
    const double C85260 = C74993 + C74992;
    const double C83867 = C74991 + C74990;
    const double C83866 = C74990 + C74991;
    const double C83865 = C74988 + C74989;
    const double C83864 = C74989 + C74988;
    const double C75588 = C74986 + C74987;
    const double C84614 = C74987 + C74986;
    const double C75368 = C75364 + C75365;
    const double C76358 = C75642 + C75643;
    const double C85519 = C75643 + C75642;
    const double C75646 = C75640 + C75641;
    const double C84615 = C75641 + C75640;
    const double C84613 = C75638 + C75639;
    const double C84612 = C75639 + C75638;
    const double C86699 = C77248 + C77249;
    const double C86690 = C77249 + C77248;
    const double C87237 = C77664 + C77665;
    const double C87236 = C77665 + C77664;
    const double C134768 = C82933 + C82932;
    const double C134767 = C82927 + C82926;
    const double C134766 = C82923 + C82922;
    const double C137270 = C86303 + C86302;
    const double C137269 = C86299 + C86298;
    const double C137769 = C86977 + C86976;
    const double C6383 = C6380 * C152167;
    const double C8289 = C8280 * C152167;
    const double C6382 = C6379 * C152167;
    const double C7765 = C7748 * C152167;
    const double C6381 = C6378 * C152167;
    const double C8599 = C8590 * C152167;
    const double C8055 = C8022 * C152167;
    const double C7779 = C7778 * C152167;
    const double C8817 = C8808 * C152167;
    const double C8081 = C8080 * C152167;
    const double C6823 = C6819 + C6811;
    const double C23476 = C23458 + C23416;
    const double C51242 = C51224 + C51182;
    const double C74429 = C74425 + C74417;
    const double C23911 = C23908 + C23902;
    const double C51677 = C51674 + C51668;
    const double C15689 = C15685 + C15677;
    const double C32252 = C32234 + C32192;
    const double C102026 = C102008 + C101966;
    const double C135184 = C135182 + C135178;
    const double C32663 = C32660 + C32654;
    const double C102437 = C102434 + C102428;
    const double C24456 = C24447 + C24423;
    const double C40930 = C40928 + C40924;
    const double C52222 = C52213 + C52189;
    const double C83205 = C83203 + C83199;
    const double C73989 = C73986 * C152167;
    const double C75851 = C75842 * C152167;
    const double C73988 = C73985 * C152167;
    const double C75355 = C75338 * C152167;
    const double C73987 = C73984 * C152167;
    const double C76157 = C76148 * C152167;
    const double C75621 = C75588 * C152167;
    const double C75369 = C75368 * C152167;
    const double C76367 = C76358 * C152167;
    const double C75647 = C75646 * C152167;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C152026 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C152033 +
           ((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C151985 * C3525) *
              C151944 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C152033 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C152026 -
           ((C25334 + C25335 + C25336) * C152167 * C152205 +
            (C23472 + C23471 + C23470) * C152167 * C152301) *
               C151985 * C3525) *
              C151953 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C151985 * C152026 -
           ((C23476 + C23477 + C23478) * C152167 * C152205 +
            (C23475 + C23474 + C23473) * C152167 * C152301) *
               C151985 * C152033 +
           ((C23478 + C23477 + C23476) * C152167 * C152301 +
            (C23128 * C1315 - C23129 * C1306 - C23128 * C1316 +
             C152349 * C1330 + C23130 * C1313 - C23131 * C1305 -
             C23130 * C1314 + C152350 * C1329 + C23132 * C1668 -
             C23133 * C1667 - C23132 * C1669 + C23125 * C1670) *
                C152167 * C152205) *
               C151985 * C3525) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C152285 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152072) *
               C152026 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152072 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C152285) *
               C152033 +
           (((C23466 + C23465 + C23464) * C152167 * C152301 +
             (C24835 + C24836 + C24837) * C152167 * C152205) *
                C152285 -
            ((C25860 + C25861 + C25862) * C152167 * C152205 +
             (C25118 + C25117 + C25116) * C152167 * C152301) *
                C152072) *
               C3525) *
              C3181 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152072 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C152285) *
               C152026 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C152285 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152072) *
               C152033 +
           (((C25647 + C25646 + C25645) * C152167 * C152301 +
             (C23128 * C2005 - C23129 * C2000 - C23128 * C2006 +
              C152349 * C2012 + C23130 * C2007 - C23131 * C2001 -
              C23130 * C2008 + C152350 * C2013 + C23132 * C2009 -
              C23133 * C2002 - C23132 * C2010 + C23125 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C25334 + C25335 + C25336) * C152167 * C152205 +
             (C23472 + C23471 + C23470) * C152167 * C152301) *
                C152285) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C152380 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C152376 +
           ((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C151985 * C152362 -
           ((C24838 + C24839 + C24840) * C152167 * C152205 +
            (C24837 + C24836 + C24835) * C152167 * C152301) *
               C151985 * C152336) *
              C3181 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C152376 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C152380 -
           ((C25334 + C25335 + C25336) * C152167 * C152205 +
            (C23472 + C23471 + C23470) * C152167 * C152301) *
               C151985 * C152362 +
           ((C25336 + C25335 + C25334) * C152167 * C152301 +
            (C23128 * C1323 - C23129 * C1310 - C23128 * C1324 +
             C152349 * C1334 + C23130 * C1325 - C23131 * C1311 -
             C23130 * C1326 + C152350 * C1335 + C23132 * C1327 -
             C23133 * C1312 - C23132 * C1328 + C23125 * C1336) *
                C152167 * C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C3041 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C152030) *
              C152379 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C152030 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C3041) *
              C152372 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C151985 * C3041 -
           ((C23476 + C23477 + C23478) * C152167 * C152205 +
            (C23475 + C23474 + C23473) * C152167 * C152301) *
               C151985 * C152030) *
              C152355 +
          (((C23909 + C23910 + C23911) * C152167 * C152301 +
            (C23128 * C352 - C23129 * C333 - C23128 * C353 + C152349 * C369 +
             C23130 * C356 - C23131 * C335 - C23130 * C357 + C152350 * C371 +
             C23132 * C360 - C23133 * C337 - C23132 * C361 + C23125 * C373) *
                C152167 * C152205) *
               C151985 * C152030 -
           ((C23911 + C23910 + C23909) * C152167 * C152205 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152167 * C152301) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C152374 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152359 +
            ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
              C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
              C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                 C152167 * C152301 +
             (C25113 + C25114 + C25115) * C152167 * C152205) *
                C152329) *
               C3041 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152359 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C152374 -
            ((C25119 + C25120 + C25121) * C152167 * C152205 +
             (C25115 + C25114 + C25113) * C152167 * C152301) *
                C152329) *
               C152030) *
              C3181 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152359 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C152374 -
            ((C26729 + C26730 + C26731) * C152167 * C152205 +
             (C23132 * C549 - C23133 * C530 - C23132 * C550 + C23125 * C566 +
              C23130 * C547 - C23131 * C529 - C23130 * C548 + C152350 * C565 +
              C23128 * C545 - C23129 * C528 - C23128 * C546 + C152349 * C564) *
                 C152167 * C152301) *
                C152329) *
               C3041 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C152374 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152359 +
            ((C26731 + C26730 + C26729) * C152167 * C152301 +
             (C23128 * C1513 - C23129 * C1492 - C23128 * C1514 +
              C152349 * C1528 + C23130 * C1515 - C23131 * C1493 -
              C23130 * C1516 + C152350 * C1529 + C23132 * C1517 -
              C23133 * C1494 - C23132 * C1518 + C23125 * C1530) *
                 C152167 * C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C152285 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152072) *
               C3041 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152072 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C152285) *
               C152030) *
              C151944 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152072 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C152285) *
               C3041 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C152285 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152072) *
               C152030) *
              C151953 +
          ((((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
              C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
              C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                 C152167 * C152301 +
             (C23473 + C23474 + C23475) * C152167 * C152205) *
                C152285 -
            ((C24456 + C24457 + C24458) * C152167 * C152205 +
             (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
              C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
              C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                 C152167 * C152301) *
                C152072) *
               C3041 +
           (((C24458 + C24457 + C24456) * C152167 * C152301 +
             (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
              C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
              C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
              C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C23476 + C23477 + C23478) * C152167 * C152205 +
             (C23475 + C23474 + C23473) * C152167 * C152301) *
                C152285) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C3041 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C152030) *
              C152379 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C152030 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C3041) *
              C152372 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C151985 * C3041 -
           ((C23476 + C23477 + C23478) * C152167 * C152205 +
            (C23475 + C23474 + C23473) * C152167 * C152301) *
               C151985 * C152030) *
              C152355 +
          (((C23909 + C23910 + C23911) * C152167 * C152301 +
            (C23128 * C352 - C23129 * C333 - C23128 * C353 + C152349 * C369 +
             C23130 * C356 - C23131 * C335 - C23130 * C357 + C152350 * C371 +
             C23132 * C360 - C23133 * C337 - C23132 * C361 + C23125 * C373) *
                C152167 * C152205) *
               C151985 * C152030 -
           ((C23911 + C23910 + C23909) * C152167 * C152205 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152167 * C152301) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C152380 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C152376 +
           ((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C151985 * C152362 -
           ((C24838 + C24839 + C24840) * C152167 * C152205 +
            (C24837 + C24836 + C24835) * C152167 * C152301) *
               C151985 * C152336) *
              C3181 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C152376 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C152380 -
           ((C25334 + C25335 + C25336) * C152167 * C152205 +
            (C23472 + C23471 + C23470) * C152167 * C152301) *
               C151985 * C152362 +
           ((C25336 + C25335 + C25334) * C152167 * C152301 +
            (C23128 * C1323 - C23129 * C1310 - C23128 * C1324 +
             C152349 * C1334 + C23130 * C1325 - C23131 * C1311 -
             C23130 * C1326 + C152350 * C1335 + C23132 * C1327 -
             C23133 * C1312 - C23132 * C1328 + C23125 * C1336) *
                C152167 * C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C4047 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152072) *
               C152026 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152072 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C4047) *
               C152033 +
           (((C23466 + C23465 + C23464) * C152167 * C152301 +
             (C24835 + C24836 + C24837) * C152167 * C152205) *
                C4047 -
            ((C25860 + C25861 + C25862) * C152167 * C152205 +
             (C25118 + C25117 + C25116) * C152167 * C152301) *
                C152072) *
               C3525) *
              C152270 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152072 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C4047) *
               C152026 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C4047 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152072) *
               C152033 +
           (((C25647 + C25646 + C25645) * C152167 * C152301 +
             (C23128 * C2005 - C23129 * C2000 - C23128 * C2006 +
              C152349 * C2012 + C23130 * C2007 - C23131 * C2001 -
              C23130 * C2008 + C152350 * C2013 + C23132 * C2009 -
              C23133 * C2002 - C23132 * C2010 + C23125 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C25334 + C25335 + C25336) * C152167 * C152205 +
             (C23472 + C23471 + C23470) * C152167 * C152301) *
                C4047) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C152068 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152075 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C25113 + C25114 + C25115) * C152167 * C152205) *
               C4719) *
              C152026 +
          (((C24452 + C24451 + C24450) * C152167 * C152301 +
            (C25116 + C25117 + C25118) * C152167 * C152205) *
               C152075 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C152068 -
           ((C25119 + C25120 + C25121) * C152167 * C152205 +
            (C25115 + C25114 + C25113) * C152167 * C152301) *
               C4719) *
              C152033 +
          (((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C152068 -
           ((C25860 + C25861 + C25862) * C152167 * C152205 +
            (C25118 + C25117 + C25116) * C152167 * C152301) *
               C152075 +
           ((C25121 + C25120 + C25119) * C152167 * C152301 +
            (C23128 * C8005 - C23129 * C7998 - C23128 * C8006 +
             C152349 * C8016 + C23130 * C8003 - C23131 * C7997 -
             C23130 * C8004 + C152350 * C8015 + C23132 * C9696 -
             C23133 * C9695 - C23132 * C9697 + C23125 * C9698) *
                C152167 * C152205) *
               C4719) *
              C3525) *
         C151939) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C4047 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152072) *
              C152380 +
          (((C24452 + C24451 + C24450) * C152167 * C152301 +
            (C25116 + C25117 + C25118) * C152167 * C152205) *
               C152072 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C4047) *
              C152376 +
          (((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C4047 -
           ((C25860 + C25861 + C25862) * C152167 * C152205 +
            (C25118 + C25117 + C25116) * C152167 * C152301) *
               C152072) *
              C152362 +
          (((C25862 + C25861 + C25860) * C152167 * C152301 +
            (C23128 * C8009 - C23129 * C8000 - C23128 * C8010 +
             C152349 * C8018 + C23130 * C8007 - C23131 * C7999 -
             C23130 * C8008 + C152350 * C8017 + C23132 * C8586 -
             C23133 * C8585 - C23132 * C8587 + C23125 * C8588) *
                C152167 * C152205) *
               C152072 -
           ((C24838 + C24839 + C24840) * C152167 * C152205 +
            (C24837 + C24836 + C24835) * C152167 * C152301) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C4047 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152072) *
               C3041 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152072 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C4047) *
               C152030) *
              C152370 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152072 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C4047) *
               C3041 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C4047 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152072) *
               C152030) *
              C152353 +
          ((((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
              C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
              C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                 C152167 * C152301 +
             (C23473 + C23474 + C23475) * C152167 * C152205) *
                C4047 -
            ((C24456 + C24457 + C24458) * C152167 * C152205 +
             (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
              C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
              C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                 C152167 * C152301) *
                C152072) *
               C3041 +
           (((C24458 + C24457 + C24456) * C152167 * C152301 +
             (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
              C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
              C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
              C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C23476 + C23477 + C23478) * C152167 * C152205 +
             (C23475 + C23474 + C23473) * C152167 * C152301) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C152381 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152378 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C25113 + C25114 + C25115) * C152167 * C152205) *
               C152365 -
           ((C27138 + C27139 + C27140) * C152167 * C152205 +
            (C23132 * C2407 - C23133 * C2398 - C23132 * C2408 + C23125 * C2422 +
             C23130 * C2409 - C23131 * C2399 - C23130 * C2410 +
             C152350 * C2423 + C23128 * C2411 - C23129 * C2400 -
             C23128 * C2412 + C152349 * C2424) *
                C152167 * C152301) *
               C152342) *
              C3041 +
          (((C24452 + C24451 + C24450) * C152167 * C152301 +
            (C25116 + C25117 + C25118) * C152167 * C152205) *
               C152378 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C152381 -
           ((C25119 + C25120 + C25121) * C152167 * C152205 +
            (C25115 + C25114 + C25113) * C152167 * C152301) *
               C152365 +
           ((C27140 + C27139 + C27138) * C152167 * C152301 +
            (C23128 * C9389 - C23129 * C9382 - C23128 * C9390 +
             C152349 * C9400 + C23130 * C9387 - C23131 * C9381 -
             C23130 * C9388 + C152350 * C9399 + C23132 * C9922 -
             C23133 * C9921 - C23132 * C9923 + C23125 * C9924) *
                C152167 * C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C152068 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152075 +
            ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
              C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
              C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                 C152167 * C152301 +
             (C25113 + C25114 + C25115) * C152167 * C152205) *
                C4719) *
               C3041 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152075 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C152068 -
            ((C25119 + C25120 + C25121) * C152167 * C152205 +
             (C25115 + C25114 + C25113) * C152167 * C152301) *
                C4719) *
               C152030) *
              C152270 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152075 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C152068 -
            ((C26729 + C26730 + C26731) * C152167 * C152205 +
             (C23132 * C549 - C23133 * C530 - C23132 * C550 + C23125 * C566 +
              C23130 * C547 - C23131 * C529 - C23130 * C548 + C152350 * C565 +
              C23128 * C545 - C23129 * C528 - C23128 * C546 + C152349 * C564) *
                 C152167 * C152301) *
                C4719) *
               C3041 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C152068 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152075 +
            ((C26731 + C26730 + C26729) * C152167 * C152301 +
             (C23128 * C1513 - C23129 * C1492 - C23128 * C1514 +
              C152349 * C1528 + C23130 * C1515 - C23131 * C1493 -
              C23130 * C1516 + C152350 * C1529 + C23132 * C1517 -
              C23133 * C1494 - C23132 * C1518 + C23125 * C1530) *
                 C152167 * C152205) *
                C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C4047 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152072) *
               C3041 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152072 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C4047) *
               C152030) *
              C152370 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152072 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C4047) *
               C3041 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C4047 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152072) *
               C152030) *
              C152353 +
          ((((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
              C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
              C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                 C152167 * C152301 +
             (C23473 + C23474 + C23475) * C152167 * C152205) *
                C4047 -
            ((C24456 + C24457 + C24458) * C152167 * C152205 +
             (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
              C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
              C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                 C152167 * C152301) *
                C152072) *
               C3041 +
           (((C24458 + C24457 + C24456) * C152167 * C152301 +
             (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
              C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
              C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
              C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C23476 + C23477 + C23478) * C152167 * C152205 +
             (C23475 + C23474 + C23473) * C152167 * C152301) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C4047 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152072) *
              C152380 +
          (((C24452 + C24451 + C24450) * C152167 * C152301 +
            (C25116 + C25117 + C25118) * C152167 * C152205) *
               C152072 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C4047) *
              C152376 +
          (((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C4047 -
           ((C25860 + C25861 + C25862) * C152167 * C152205 +
            (C25118 + C25117 + C25116) * C152167 * C152301) *
               C152072) *
              C152362 +
          (((C25862 + C25861 + C25860) * C152167 * C152301 +
            (C23128 * C8009 - C23129 * C8000 - C23128 * C8010 +
             C152349 * C8018 + C23130 * C8007 - C23131 * C7999 -
             C23130 * C8008 + C152350 * C8017 + C23132 * C8586 -
             C23133 * C8585 - C23132 * C8587 + C23125 * C8588) *
                C152167 * C152205) *
               C152072 -
           ((C24838 + C24839 + C24840) * C152167 * C152205 +
            (C24837 + C24836 + C24835) * C152167 * C152301) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C1661 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C1662 +
           ((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C151985 * C1663 -
           ((C24838 + C24839 + C24840) * C152167 * C152205 +
            (C24837 + C24836 + C24835) * C152167 * C152301) *
               C151985 * C152336) *
              C152270 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C1662 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C1661 -
           ((C25334 + C25335 + C25336) * C152167 * C152205 +
            (C23472 + C23471 + C23470) * C152167 * C152301) *
               C151985 * C1663 +
           ((C25336 + C25335 + C25334) * C152167 * C152301 +
            (C23128 * C1323 - C23129 * C1310 - C23128 * C1324 +
             C152349 * C1334 + C23130 * C1325 - C23131 * C1311 -
             C23130 * C1326 + C152350 * C1335 + C23132 * C1327 -
             C23133 * C1312 - C23132 * C1328 + C23125 * C1336) *
                C152167 * C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C152284 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C152030) *
              C703 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C152030 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C152284) *
              C704 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C151985 * C152284 -
           ((C23476 + C23477 + C23478) * C152167 * C152205 +
            (C23475 + C23474 + C23473) * C152167 * C152301) *
               C151985 * C152030) *
              C705 +
          (((C23909 + C23910 + C23911) * C152167 * C152301 +
            (C23128 * C352 - C23129 * C333 - C23128 * C353 + C152349 * C369 +
             C23130 * C356 - C23131 * C335 - C23130 * C357 + C152350 * C371 +
             C23132 * C360 - C23133 * C337 - C23132 * C361 + C23125 * C373) *
                C152167 * C152205) *
               C151985 * C152030 -
           ((C23911 + C23910 + C23909) * C152167 * C152205 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152167 * C152301) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C2161 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C2162 +
            ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
              C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
              C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                 C152167 * C152301 +
             (C25113 + C25114 + C25115) * C152167 * C152205) *
                C152329) *
               C152284 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C2162 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C2161 -
            ((C25119 + C25120 + C25121) * C152167 * C152205 +
             (C25115 + C25114 + C25113) * C152167 * C152301) *
                C152329) *
               C152030) *
              C152270 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C2162 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C2161 -
            ((C26729 + C26730 + C26731) * C152167 * C152205 +
             (C23132 * C549 - C23133 * C530 - C23132 * C550 + C23125 * C566 +
              C23130 * C547 - C23131 * C529 - C23130 * C548 + C152350 * C565 +
              C23128 * C545 - C23129 * C528 - C23128 * C546 + C152349 * C564) *
                 C152167 * C152301) *
                C152329) *
               C152284 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C2161 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C2162 +
            ((C26731 + C26730 + C26729) * C152167 * C152301 +
             (C23128 * C1513 - C23129 * C1492 - C23128 * C1514 +
              C152349 * C1528 + C23130 * C1515 - C23131 * C1493 -
              C23130 * C1516 + C152350 * C1529 + C23132 * C1517 -
              C23133 * C1494 - C23132 * C1518 + C23125 * C1530) *
                 C152167 * C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C152285 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152072) *
              C1661 +
          (((C24452 + C24451 + C24450) * C152167 * C152301 +
            (C25116 + C25117 + C25118) * C152167 * C152205) *
               C152072 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C152285) *
              C1662 +
          (((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C152285 -
           ((C25860 + C25861 + C25862) * C152167 * C152205 +
            (C25118 + C25117 + C25116) * C152167 * C152301) *
               C152072) *
              C1663 +
          (((C25862 + C25861 + C25860) * C152167 * C152301 +
            (C23128 * C8009 - C23129 * C8000 - C23128 * C8010 +
             C152349 * C8018 + C23130 * C8007 - C23131 * C7999 -
             C23130 * C8008 + C152350 * C8017 + C23132 * C8586 -
             C23133 * C8585 - C23132 * C8587 + C23125 * C8588) *
                C152167 * C152205) *
               C152072 -
           ((C24838 + C24839 + C24840) * C152167 * C152205 +
            (C24837 + C24836 + C24835) * C152167 * C152301) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C152285 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152072) *
               C152284 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C23128 * C1509 - C23129 * C1490 - C23128 * C1510 +
              C152349 * C1526 + C23130 * C1507 - C23131 * C1489 -
              C23130 * C1508 + C152350 * C1525 + C23132 * C1505 -
              C23133 * C1488 - C23132 * C1506 + C23125 * C1524) *
                 C152167 * C152205) *
                C152072 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C152285) *
               C152030) *
              C323 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152072 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C152285) *
               C152284 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C152285 -
            ((C23132 * C1503 - C23133 * C1487 - C23132 * C1504 +
              C23125 * C1523 + C23130 * C1505 - C23131 * C1488 -
              C23130 * C1506 + C152350 * C1524 + C23128 * C1507 -
              C23129 * C1489 - C23128 * C1508 + C152349 * C1525) *
                 C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152072) *
               C152030) *
              C324 +
          ((((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
              C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
              C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                 C152167 * C152301 +
             (C23473 + C23474 + C23475) * C152167 * C152205) *
                C152285 -
            ((C24456 + C24457 + C24458) * C152167 * C152205 +
             (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
              C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
              C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                 C152167 * C152301) *
                C152072) *
               C152284 +
           (((C24458 + C24457 + C24456) * C152167 * C152301 +
             (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
              C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
              C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
              C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C23476 + C23477 + C23478) * C152167 * C152205 +
             (C23475 + C23474 + C23473) * C152167 * C152301) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C2757 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C2758 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C25113 + C25114 + C25115) * C152167 * C152205) *
               C2759 -
           ((C27138 + C27139 + C27140) * C152167 * C152205 +
            (C23132 * C2407 - C23133 * C2398 - C23132 * C2408 + C23125 * C2422 +
             C23130 * C2409 - C23131 * C2399 - C23130 * C2410 +
             C152350 * C2423 + C23128 * C2411 - C23129 * C2400 -
             C23128 * C2412 + C152349 * C2424) *
                C152167 * C152301) *
               C152342) *
              C152284 +
          (((C24452 + C24451 + C24450) * C152167 * C152301 +
            (C25116 + C25117 + C25118) * C152167 * C152205) *
               C2758 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C2757 -
           ((C25119 + C25120 + C25121) * C152167 * C152205 +
            (C25115 + C25114 + C25113) * C152167 * C152301) *
               C2759 +
           ((C27140 + C27139 + C27138) * C152167 * C152301 +
            (C23128 * C9389 - C23129 * C9382 - C23128 * C9390 +
             C152349 * C9400 + C23130 * C9387 - C23131 * C9381 -
             C23130 * C9388 + C152350 * C9399 + C23132 * C9922 -
             C23133 * C9921 - C23132 * C9923 + C23125 * C9924) *
                C152167 * C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
                C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
                C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                   C152167 * C152301 +
               (C23128 * C344 - C23129 * C329 - C23128 * C345 + C152349 * C365 +
                C23130 * C342 - C23131 * C328 - C23130 * C343 + C152350 * C364 +
                C23132 * C340 - C23133 * C327 - C23132 * C341 + C23125 * C363) *
                   C152167 * C152205) *
                  C151985 * C151967 * C129 -
              ((C23132 * C338 - C23133 * C326 - C23132 * C339 + C23125 * C362 +
                C23130 * C340 - C23131 * C327 - C23130 * C341 + C152350 * C363 +
                C23128 * C342 - C23129 * C328 - C23128 * C343 +
                C152349 * C364) *
                   C152167 * C152205 +
               (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
                C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
                C23128 * C152 - C23129 * C143 - C23128 * C153 +
                C152349 * C167) *
                   C152167 * C152301) *
                  C151985 * C151967 * C130 +
              ((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
                C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
                C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                   C152167 * C152301 +
               (C23128 * C340 - C23129 * C327 - C23128 * C341 + C152349 * C363 +
                C23130 * C338 - C23131 * C326 - C23130 * C339 + C152350 * C362 +
                C23132 * C354 - C23133 * C334 - C23132 * C355 + C23125 * C370) *
                   C152167 * C152205) *
                  C151985 * C151967 * C131 -
              ((C23132 * C358 - C23133 * C336 - C23132 * C359 + C23125 * C372 +
                C23130 * C354 - C23131 * C334 - C23130 * C355 + C152350 * C370 +
                C23128 * C338 - C23129 * C326 - C23128 * C339 +
                C152349 * C362) *
                   C152167 * C152205 +
               (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
                C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
                C23128 * C156 - C23129 * C145 - C23128 * C157 +
                C152349 * C169) *
                   C152167 * C152301) *
                  C151985 * C151967 * C132 +
              ((C23128 * C158 - C23129 * C146 - C23128 * C159 + C152349 * C170 +
                C23130 * C160 - C23131 * C147 - C23130 * C161 + C152350 * C171 +
                C23132 * C162 - C23133 * C148 - C23132 * C163 + C23125 * C172) *
                   C152167 * C152301 +
               (C23128 * C354 - C23129 * C334 - C23128 * C355 + C152349 * C370 +
                C23130 * C358 - C23131 * C336 - C23130 * C359 + C152350 * C372 +
                C23132 * C708 - C23133 * C707 - C23132 * C709 + C23125 * C710) *
                   C152167 * C152205) *
                  C151985 * C151967 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23128 * C150 - C23129 * C142 - C23128 * C151 +
                 C152349 * C166 + C23130 * C152 - C23131 * C143 -
                 C23130 * C153 + C152350 * C167 + C23132 * C154 -
                 C23133 * C144 - C23132 * C155 + C23125 * C168) *
                    C152167 * C152301 +
                (C23461 + C23462 + C23463) * C152167 * C152205) *
                   C151985 * C152373 -
               ((C23464 + C23465 + C23466) * C152167 * C152205 +
                (C23463 + C23462 + C23461) * C152167 * C152301) *
                   C151985 * C152357 +
               ((C23466 + C23465 + C23464) * C152167 * C152301 +
                (C23128 * C1319 - C23129 * C1308 - C23128 * C1320 +
                 C152349 * C1332 + C23130 * C1317 - C23131 * C1307 -
                 C23130 * C1318 + C152350 * C1331 + C23132 * C1315 -
                 C23133 * C1306 - C23132 * C1316 + C23125 * C1330) *
                    C152167 * C152205) *
                   C151985 * C152326) *
                  C323 +
              (((C23467 + C23468 + C23469) * C152167 * C152301 +
                (C23470 + C23471 + C23472) * C152167 * C152205) *
                   C151985 * C152357 -
               ((C23469 + C23468 + C23467) * C152167 * C152205 +
                (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
                 C23130 * C154 - C23131 * C144 - C23130 * C155 +
                 C152350 * C168 + C23128 * C152 - C23129 * C143 -
                 C23128 * C153 + C152349 * C167) *
                    C152167 * C152301) *
                   C151985 * C152373 -
               ((C23132 * C1313 - C23133 * C1305 - C23132 * C1314 +
                 C23125 * C1329 + C23130 * C1315 - C23131 * C1306 -
                 C23130 * C1316 + C152350 * C1330 + C23128 * C1317 -
                 C23129 * C1307 - C23128 * C1318 + C152349 * C1331) *
                    C152167 * C152205 +
                (C23472 + C23471 + C23470) * C152167 * C152301) *
                   C151985 * C152326) *
                  C324 +
              (((C23128 * C154 - C23129 * C144 - C23128 * C155 +
                 C152349 * C168 + C23130 * C156 - C23131 * C145 -
                 C23130 * C157 + C152350 * C169 + C23132 * C158 -
                 C23133 * C146 - C23132 * C159 + C23125 * C170) *
                    C152167 * C152301 +
                (C23473 + C23474 + C23475) * C152167 * C152205) *
                   C151985 * C152373 -
               ((C23476 + C23477 + C23478) * C152167 * C152205 +
                (C23475 + C23474 + C23473) * C152167 * C152301) *
                   C151985 * C152357 +
               ((C23478 + C23477 + C23476) * C152167 * C152301 +
                (C23128 * C1315 - C23129 * C1306 - C23128 * C1316 +
                 C152349 * C1330 + C23130 * C1313 - C23131 * C1305 -
                 C23130 * C1314 + C152350 * C1329 + C23132 * C1668 -
                 C23133 * C1667 - C23132 * C1669 + C23125 * C1670) *
                    C152167 * C152205) *
                   C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C152374 -
           ((C23132 * C1051 - C23133 * C1043 - C23132 * C1052 + C23125 * C1061 +
             C23130 * C1049 - C23131 * C1042 - C23130 * C1050 +
             C152350 * C1060 + C23128 * C1047 - C23129 * C1041 -
             C23128 * C1048 + C152349 * C1059) *
                C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152359 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C23128 * C1501 - C23129 * C1486 - C23128 * C1502 +
             C152349 * C1522 + C23130 * C1499 - C23131 * C1485 -
             C23130 * C1500 + C152350 * C1521 + C23132 * C1497 -
             C23133 * C1484 - C23132 * C1498 + C23125 * C1520) *
                C152167 * C152205) *
               C152329) *
              C151967 * C323 +
          (((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                C152167 * C152301 +
            (C23128 * C1049 - C23129 * C1042 - C23128 * C1050 +
             C152349 * C1060 + C23130 * C1051 - C23131 * C1043 -
             C23130 * C1052 + C152350 * C1061 + C23132 * C1053 -
             C23133 * C1044 - C23132 * C1054 + C23125 * C1062) *
                C152167 * C152205) *
               C152359 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C152374 -
           ((C23132 * C1495 - C23133 * C1483 - C23132 * C1496 + C23125 * C1519 +
             C23130 * C1497 - C23131 * C1484 - C23130 * C1498 +
             C152350 * C1520 + C23128 * C1499 - C23129 * C1485 -
             C23128 * C1500 + C152349 * C1521) *
                C152167 * C152205 +
            (C23132 * C549 - C23133 * C530 - C23132 * C550 + C23125 * C566 +
             C23130 * C547 - C23131 * C529 - C23130 * C548 + C152350 * C565 +
             C23128 * C545 - C23129 * C528 - C23128 * C546 + C152349 * C564) *
                C152167 * C152301) *
               C152329) *
              C151967 * C324 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C152374 -
           ((C23132 * C1055 - C23133 * C1045 - C23132 * C1056 + C23125 * C1063 +
             C23130 * C1053 - C23131 * C1044 - C23130 * C1054 +
             C152350 * C1062 + C23128 * C1051 - C23129 * C1043 -
             C23128 * C1052 + C152349 * C1061) *
                C152167 * C152205 +
            (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
             C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
             C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                C152167 * C152301) *
               C152359 +
           ((C23128 * C547 - C23129 * C529 - C23128 * C548 + C152349 * C565 +
             C23130 * C549 - C23131 * C530 - C23130 * C550 + C152350 * C566 +
             C23132 * C553 - C23133 * C532 - C23132 * C554 + C23125 * C568) *
                C152167 * C152301 +
            (C23128 * C1497 - C23129 * C1484 - C23128 * C1498 +
             C152349 * C1520 + C23130 * C1495 - C23131 * C1483 -
             C23130 * C1496 + C152350 * C1519 + C23132 * C2624 -
             C23133 * C2623 - C23132 * C2625 + C23125 * C2626) *
                C152167 * C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C1211 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C1212 +
           ((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C23128 * C1319 - C23129 * C1308 - C23128 * C1320 +
             C152349 * C1332 + C23130 * C1317 - C23131 * C1307 -
             C23130 * C1318 + C152350 * C1331 + C23132 * C1315 -
             C23133 * C1306 - C23132 * C1316 + C23125 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C1212 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C1211 -
           ((C23132 * C1313 - C23133 * C1305 - C23132 * C1314 + C23125 * C1329 +
             C23130 * C1315 - C23131 * C1306 - C23130 * C1316 +
             C152350 * C1330 + C23128 * C1317 - C23129 * C1307 -
             C23128 * C1318 + C152349 * C1331) *
                C152167 * C152205 +
            (C23472 + C23471 + C23470) * C152167 * C152301) *
               C151985 * C152326) *
              C152353 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C151985 * C1211 -
           ((C23476 + C23477 + C23478) * C152167 * C152205 +
            (C23475 + C23474 + C23473) * C152167 * C152301) *
               C151985 * C1212 +
           ((C23478 + C23477 + C23476) * C152167 * C152301 +
            (C23128 * C1315 - C23129 * C1306 - C23128 * C1316 +
             C152349 * C1330 + C23130 * C1313 - C23131 * C1305 -
             C23130 * C1314 + C152350 * C1329 + C23132 * C1668 -
             C23133 * C1667 - C23132 * C1669 + C23125 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152167 * C152301 +
           (C23461 + C23462 + C23463) * C152167 * C152205) *
              C151985 * C1299 -
          ((C23464 + C23465 + C23466) * C152167 * C152205 +
           (C23463 + C23462 + C23461) * C152167 * C152301) *
              C151985 * C1300 +
          ((C23466 + C23465 + C23464) * C152167 * C152301 +
           (C24835 + C24836 + C24837) * C152167 * C152205) *
              C151985 * C1301 -
          ((C24838 + C24839 + C24840) * C152167 * C152205 +
           (C24837 + C24836 + C24835) * C152167 * C152301) *
              C151985 * C1302 +
          ((C24840 + C24839 + C24838) * C152167 * C152301 +
           (C23128 * C7737 - C23129 * C7732 - C23128 * C7738 + C152349 * C7744 +
            C23130 * C7735 - C23131 * C7731 - C23130 * C7736 + C152350 * C7743 +
            C23132 * C8276 - C23133 * C8275 - C23132 * C8277 + C23125 * C8278) *
               C152167 * C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C152374 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152359 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C25113 + C25114 + C25115) * C152167 * C152205) *
               C152329) *
              C1211 +
          (((C24452 + C24451 + C24450) * C152167 * C152301 +
            (C25116 + C25117 + C25118) * C152167 * C152205) *
               C152359 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C152374 -
           ((C25119 + C25120 + C25121) * C152167 * C152205 +
            (C25115 + C25114 + C25113) * C152167 * C152301) *
               C152329) *
              C1212 +
          (((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C152374 -
           ((C23132 * C2007 - C23133 * C2001 - C23132 * C2008 + C23125 * C2013 +
             C23130 * C2005 - C23131 * C2000 - C23130 * C2006 +
             C152350 * C2012 + C23128 * C2003 - C23129 * C1999 -
             C23128 * C2004 + C152349 * C2011) *
                C152167 * C152205 +
            (C25118 + C25117 + C25116) * C152167 * C152301) *
               C152359 +
           ((C25121 + C25120 + C25119) * C152167 * C152301 +
            (C23128 * C8005 - C23129 * C7998 - C23128 * C8006 +
             C152349 * C8016 + C23130 * C8003 - C23131 * C7997 -
             C23130 * C8004 + C152350 * C8015 + C23132 * C9696 -
             C23133 * C9695 - C23132 * C9697 + C23125 * C9698) *
                C152167 * C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C2161 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C2162 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C25113 + C25114 + C25115) * C152167 * C152205) *
               C152329) *
              C151967 * C152370 +
          (((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                C152167 * C152301 +
            (C24453 + C24454 + C24455) * C152167 * C152205) *
               C2162 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C2161 -
           ((C23132 * C1495 - C23133 * C1483 - C23132 * C1496 + C23125 * C1519 +
             C23130 * C1497 - C23131 * C1484 - C23130 * C1498 +
             C152350 * C1520 + C23128 * C1499 - C23129 * C1485 -
             C23128 * C1500 + C152349 * C1521) *
                C152167 * C152205 +
            (C23132 * C549 - C23133 * C530 - C23132 * C550 + C23125 * C566 +
             C23130 * C547 - C23131 * C529 - C23130 * C548 + C152350 * C565 +
             C23128 * C545 - C23129 * C528 - C23128 * C546 + C152349 * C564) *
                C152167 * C152301) *
               C152329) *
              C151967 * C152353 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C2161 -
           ((C24456 + C24457 + C24458) * C152167 * C152205 +
            (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
             C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
             C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                C152167 * C152301) *
               C2162 +
           ((C23128 * C547 - C23129 * C529 - C23128 * C548 + C152349 * C565 +
             C23130 * C549 - C23131 * C530 - C23130 * C550 + C152350 * C566 +
             C23132 * C553 - C23133 * C532 - C23132 * C554 + C23125 * C568) *
                C152167 * C152301 +
            (C23128 * C1497 - C23129 * C1484 - C23128 * C1498 +
             C152349 * C1520 + C23130 * C1495 - C23131 * C1483 -
             C23130 * C1496 + C152350 * C1519 + C23132 * C2624 -
             C23133 * C2623 - C23132 * C2625 + C23125 * C2626) *
                C152167 * C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C2161 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C2162 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C25113 + C25114 + C25115) * C152167 * C152205) *
               C152329) *
              C152373 +
          (((C24452 + C24451 + C24450) * C152167 * C152301 +
            (C25116 + C25117 + C25118) * C152167 * C152205) *
               C2162 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C2161 -
           ((C25119 + C25120 + C25121) * C152167 * C152205 +
            (C25115 + C25114 + C25113) * C152167 * C152301) *
               C152329) *
              C152357 +
          (((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C2161 -
           ((C25860 + C25861 + C25862) * C152167 * C152205 +
            (C25118 + C25117 + C25116) * C152167 * C152301) *
               C2162 +
           ((C25121 + C25120 + C25119) * C152167 * C152301 +
            (C23128 * C8005 - C23129 * C7998 - C23128 * C8006 +
             C152349 * C8016 + C23130 * C8003 - C23131 * C7997 -
             C23130 * C8004 + C152350 * C8015 + C23132 * C9696 -
             C23133 * C9695 - C23132 * C9697 + C23125 * C9698) *
                C152167 * C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152167 * C152301 +
           (C23461 + C23462 + C23463) * C152167 * C152205) *
              C2392 -
          ((C24450 + C24451 + C24452) * C152167 * C152205 +
           (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
            C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
            C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
               C152167 * C152301) *
              C2393 +
          ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
            C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
            C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
               C152167 * C152301 +
           (C25113 + C25114 + C25115) * C152167 * C152205) *
              C2394 -
          ((C23132 * C2903 - C23133 * C2897 - C23132 * C2904 + C23125 * C2909 +
            C23130 * C2901 - C23131 * C2896 - C23130 * C2902 + C152350 * C2908 +
            C23128 * C2899 - C23129 * C2895 - C23128 * C2900 +
            C152349 * C2907) *
               C152167 * C152205 +
           (C23132 * C2407 - C23133 * C2398 - C23132 * C2408 + C23125 * C2422 +
            C23130 * C2409 - C23131 * C2399 - C23130 * C2410 + C152350 * C2423 +
            C23128 * C2411 - C23129 * C2400 - C23128 * C2412 +
            C152349 * C2424) *
               C152167 * C152301) *
              C2395 +
          ((C23128 * C2413 - C23129 * C2401 - C23128 * C2414 + C152349 * C2425 +
            C23130 * C2415 - C23131 * C2402 - C23130 * C2416 + C152350 * C2426 +
            C23132 * C2417 - C23133 * C2403 - C23132 * C2418 + C23125 * C2427) *
               C152167 * C152301 +
           (C23128 * C9391 - C23129 * C9383 - C23128 * C9392 + C152349 * C9401 +
            C23130 * C9393 - C23131 * C9384 - C23130 * C9394 + C152350 * C9402 +
            C23132 * C18125 - C23133 * C18124 - C23132 * C18126 +
            C23125 * C18127) *
               C152167 * C152205) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C152285 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152072) *
               C1211 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152072 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C152285) *
               C1212 +
           (((C23466 + C23465 + C23464) * C152167 * C152301 +
             (C24835 + C24836 + C24837) * C152167 * C152205) *
                C152285 -
            ((C23132 * C2007 - C23133 * C2001 - C23132 * C2008 +
              C23125 * C2013 + C23130 * C2005 - C23131 * C2000 -
              C23130 * C2006 + C152350 * C2012 + C23128 * C2003 -
              C23129 * C1999 - C23128 * C2004 + C152349 * C2011) *
                 C152167 * C152205 +
             (C25118 + C25117 + C25116) * C152167 * C152301) *
                C152072) *
               C152326) *
              C152270 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152072 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C152285) *
               C1211 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C152285 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152072) *
               C1212 +
           (((C25647 + C25646 + C25645) * C152167 * C152301 +
             (C23128 * C2005 - C23129 * C2000 - C23128 * C2006 +
              C152349 * C2012 + C23130 * C2007 - C23131 * C2001 -
              C23130 * C2008 + C152350 * C2013 + C23132 * C2009 -
              C23133 * C2002 - C23132 * C2010 + C23125 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C25334 + C25335 + C25336) * C152167 * C152205 +
             (C23472 + C23471 + C23470) * C152167 * C152301) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C152285 -
           ((C23132 * C1051 - C23133 * C1043 - C23132 * C1052 + C23125 * C1061 +
             C23130 * C1049 - C23131 * C1042 - C23130 * C1050 +
             C152350 * C1060 + C23128 * C1047 - C23129 * C1041 -
             C23128 * C1048 + C152349 * C1059) *
                C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152072) *
              C151967 * C703 +
          (((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                C152167 * C152301 +
            (C23128 * C1049 - C23129 * C1042 - C23128 * C1050 +
             C152349 * C1060 + C23130 * C1051 - C23131 * C1043 -
             C23130 * C1052 + C152350 * C1061 + C23132 * C1053 -
             C23133 * C1044 - C23132 * C1054 + C23125 * C1062) *
                C152167 * C152205) *
               C152072 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C152285) *
              C151967 * C704 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C152285 -
           ((C23132 * C1055 - C23133 * C1045 - C23132 * C1056 + C23125 * C1063 +
             C23130 * C1053 - C23131 * C1044 - C23130 * C1054 +
             C152350 * C1062 + C23128 * C1051 - C23129 * C1043 -
             C23128 * C1052 + C152349 * C1061) *
                C152167 * C152205 +
            (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
             C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
             C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                C152167 * C152301) *
               C152072) *
              C151967 * C705 +
          (((C23128 * C535 - C23129 * C523 - C23128 * C536 + C152349 * C559 +
             C23130 * C551 - C23131 * C531 - C23130 * C552 + C152350 * C567 +
             C23132 * C555 - C23133 * C533 - C23132 * C556 + C23125 * C569) *
                C152167 * C152301 +
            (C23128 * C1053 - C23129 * C1044 - C23128 * C1054 +
             C152349 * C1062 + C23130 * C1055 - C23131 * C1045 -
             C23130 * C1056 + C152350 * C1063 + C23132 * C1057 -
             C23133 * C1046 - C23132 * C1058 + C23125 * C1064) *
                C152167 * C152205) *
               C152072 -
           ((C23911 + C23910 + C23909) * C152167 * C152205 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152167 * C152301) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C2757 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C2758 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C25113 + C25114 + C25115) * C152167 * C152205) *
               C2759 -
           ((C23132 * C2903 - C23133 * C2897 - C23132 * C2904 + C23125 * C2909 +
             C23130 * C2901 - C23131 * C2896 - C23130 * C2902 +
             C152350 * C2908 + C23128 * C2899 - C23129 * C2895 -
             C23128 * C2900 + C152349 * C2907) *
                C152167 * C152205 +
            (C23132 * C2407 - C23133 * C2398 - C23132 * C2408 + C23125 * C2422 +
             C23130 * C2409 - C23131 * C2399 - C23130 * C2410 +
             C152350 * C2423 + C23128 * C2411 - C23129 * C2400 -
             C23128 * C2412 + C152349 * C2424) *
                C152167 * C152301) *
               C152342) *
              C151967 * C152270 +
          (((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                C152167 * C152301 +
            (C24453 + C24454 + C24455) * C152167 * C152205) *
               C2758 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C2757 -
           ((C26729 + C26730 + C26731) * C152167 * C152205 +
            (C23132 * C549 - C23133 * C530 - C23132 * C550 + C23125 * C566 +
             C23130 * C547 - C23131 * C529 - C23130 * C548 + C152350 * C565 +
             C23128 * C545 - C23129 * C528 - C23128 * C546 + C152349 * C564) *
                C152167 * C152301) *
               C2759 +
           ((C23128 * C2409 - C23129 * C2399 - C23128 * C2410 +
             C152349 * C2423 + C23130 * C2407 - C23131 * C2398 -
             C23130 * C2408 + C152350 * C2422 + C23132 * C2405 -
             C23133 * C2397 - C23132 * C2406 + C23125 * C2421) *
                C152167 * C152301 +
            (C23128 * C2901 - C23129 * C2896 - C23128 * C2902 +
             C152349 * C2908 + C23130 * C2903 - C23131 * C2897 -
             C23130 * C2904 + C152350 * C2909 + C23132 * C2905 -
             C23133 * C2898 - C23132 * C2906 + C23125 * C2910) *
                C152167 * C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C152373 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C152357 +
           ((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C23128 * C1319 - C23129 * C1308 - C23128 * C1320 +
             C152349 * C1332 + C23130 * C1317 - C23131 * C1307 -
             C23130 * C1318 + C152350 * C1331 + C23132 * C1315 -
             C23133 * C1306 - C23132 * C1316 + C23125 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C323 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C152357 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C152373 -
           ((C23132 * C1313 - C23133 * C1305 - C23132 * C1314 + C23125 * C1329 +
             C23130 * C1315 - C23131 * C1306 - C23130 * C1316 +
             C152350 * C1330 + C23128 * C1317 - C23129 * C1307 -
             C23128 * C1318 + C152349 * C1331) *
                C152167 * C152205 +
            (C23472 + C23471 + C23470) * C152167 * C152301) *
               C151985 * C152326) *
              C324 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C151985 * C152373 -
           ((C23476 + C23477 + C23478) * C152167 * C152205 +
            (C23475 + C23474 + C23473) * C152167 * C152301) *
               C151985 * C152357 +
           ((C23478 + C23477 + C23476) * C152167 * C152301 +
            (C23128 * C1315 - C23129 * C1306 - C23128 * C1316 +
             C152349 * C1330 + C23130 * C1313 - C23131 * C1305 -
             C23130 * C1314 + C152350 * C1329 + C23132 * C1668 -
             C23133 * C1667 - C23132 * C1669 + C23125 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152167 * C152301 +
           (C23128 * C344 - C23129 * C329 - C23128 * C345 + C152349 * C365 +
            C23130 * C342 - C23131 * C328 - C23130 * C343 + C152350 * C364 +
            C23132 * C340 - C23133 * C327 - C23132 * C341 + C23125 * C363) *
               C152167 * C152205) *
              C151985 * C151967 * C129 -
          ((C23132 * C338 - C23133 * C326 - C23132 * C339 + C23125 * C362 +
            C23130 * C340 - C23131 * C327 - C23130 * C341 + C152350 * C363 +
            C23128 * C342 - C23129 * C328 - C23128 * C343 + C152349 * C364) *
               C152167 * C152205 +
           (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
            C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
            C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
               C152167 * C152301) *
              C151985 * C151967 * C130 +
          ((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
            C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
            C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
               C152167 * C152301 +
           (C23128 * C340 - C23129 * C327 - C23128 * C341 + C152349 * C363 +
            C23130 * C338 - C23131 * C326 - C23130 * C339 + C152350 * C362 +
            C23132 * C354 - C23133 * C334 - C23132 * C355 + C23125 * C370) *
               C152167 * C152205) *
              C151985 * C151967 * C131 -
          ((C23132 * C358 - C23133 * C336 - C23132 * C359 + C23125 * C372 +
            C23130 * C354 - C23131 * C334 - C23130 * C355 + C152350 * C370 +
            C23128 * C338 - C23129 * C326 - C23128 * C339 + C152349 * C362) *
               C152167 * C152205 +
           (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
            C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
            C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
               C152167 * C152301) *
              C151985 * C151967 * C132 +
          ((C23128 * C158 - C23129 * C146 - C23128 * C159 + C152349 * C170 +
            C23130 * C160 - C23131 * C147 - C23130 * C161 + C152350 * C171 +
            C23132 * C162 - C23133 * C148 - C23132 * C163 + C23125 * C172) *
               C152167 * C152301 +
           (C23128 * C354 - C23129 * C334 - C23128 * C355 + C152349 * C370 +
            C23130 * C358 - C23131 * C336 - C23130 * C359 + C152350 * C372 +
            C23132 * C708 - C23133 * C707 - C23132 * C709 + C23125 * C710) *
               C152167 * C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C1211 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C1212 +
           ((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C23128 * C1319 - C23129 * C1308 - C23128 * C1320 +
             C152349 * C1332 + C23130 * C1317 - C23131 * C1307 -
             C23130 * C1318 + C152350 * C1331 + C23132 * C1315 -
             C23133 * C1306 - C23132 * C1316 + C23125 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C1212 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C1211 -
           ((C23132 * C1313 - C23133 * C1305 - C23132 * C1314 + C23125 * C1329 +
             C23130 * C1315 - C23131 * C1306 - C23130 * C1316 +
             C152350 * C1330 + C23128 * C1317 - C23129 * C1307 -
             C23128 * C1318 + C152349 * C1331) *
                C152167 * C152205 +
            (C23472 + C23471 + C23470) * C152167 * C152301) *
               C151985 * C152326) *
              C152353 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C151985 * C1211 -
           ((C23476 + C23477 + C23478) * C152167 * C152205 +
            (C23475 + C23474 + C23473) * C152167 * C152301) *
               C151985 * C1212 +
           ((C23478 + C23477 + C23476) * C152167 * C152301 +
            (C23128 * C1315 - C23129 * C1306 - C23128 * C1316 +
             C152349 * C1330 + C23130 * C1313 - C23131 * C1305 -
             C23130 * C1314 + C152350 * C1329 + C23132 * C1668 -
             C23133 * C1667 - C23132 * C1669 + C23125 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152167 * C152301 +
           (C23461 + C23462 + C23463) * C152167 * C152205) *
              C151985 * C1299 -
          ((C23464 + C23465 + C23466) * C152167 * C152205 +
           (C23463 + C23462 + C23461) * C152167 * C152301) *
              C151985 * C1300 +
          ((C23466 + C23465 + C23464) * C152167 * C152301 +
           (C24835 + C24836 + C24837) * C152167 * C152205) *
              C151985 * C1301 -
          ((C24838 + C24839 + C24840) * C152167 * C152205 +
           (C24837 + C24836 + C24835) * C152167 * C152301) *
              C151985 * C1302 +
          ((C24840 + C24839 + C24838) * C152167 * C152301 +
           (C23128 * C7737 - C23129 * C7732 - C23128 * C7738 + C152349 * C7744 +
            C23130 * C7735 - C23131 * C7731 - C23130 * C7736 + C152350 * C7743 +
            C23132 * C8276 - C23133 * C8275 - C23132 * C8277 + C23125 * C8278) *
               C152167 * C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C2161 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C2162 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C25113 + C25114 + C25115) * C152167 * C152205) *
               C152329) *
              C151967 * C152370 +
          (((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                C152167 * C152301 +
            (C24453 + C24454 + C24455) * C152167 * C152205) *
               C2162 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C2161 -
           ((C23132 * C1495 - C23133 * C1483 - C23132 * C1496 + C23125 * C1519 +
             C23130 * C1497 - C23131 * C1484 - C23130 * C1498 +
             C152350 * C1520 + C23128 * C1499 - C23129 * C1485 -
             C23128 * C1500 + C152349 * C1521) *
                C152167 * C152205 +
            (C23132 * C549 - C23133 * C530 - C23132 * C550 + C23125 * C566 +
             C23130 * C547 - C23131 * C529 - C23130 * C548 + C152350 * C565 +
             C23128 * C545 - C23129 * C528 - C23128 * C546 + C152349 * C564) *
                C152167 * C152301) *
               C152329) *
              C151967 * C152353 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C2161 -
           ((C24456 + C24457 + C24458) * C152167 * C152205 +
            (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
             C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
             C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                C152167 * C152301) *
               C2162 +
           ((C23128 * C547 - C23129 * C529 - C23128 * C548 + C152349 * C565 +
             C23130 * C549 - C23131 * C530 - C23130 * C550 + C152350 * C566 +
             C23132 * C553 - C23133 * C532 - C23132 * C554 + C23125 * C568) *
                C152167 * C152301 +
            (C23128 * C1497 - C23129 * C1484 - C23128 * C1498 +
             C152349 * C1520 + C23130 * C1495 - C23131 * C1483 -
             C23130 * C1496 + C152350 * C1519 + C23132 * C2624 -
             C23133 * C2623 - C23132 * C2625 + C23125 * C2626) *
                C152167 * C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C2161 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C2162 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C25113 + C25114 + C25115) * C152167 * C152205) *
               C152329) *
              C152373 +
          (((C24452 + C24451 + C24450) * C152167 * C152301 +
            (C25116 + C25117 + C25118) * C152167 * C152205) *
               C2162 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C2161 -
           ((C25119 + C25120 + C25121) * C152167 * C152205 +
            (C25115 + C25114 + C25113) * C152167 * C152301) *
               C152329) *
              C152357 +
          (((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C2161 -
           ((C25860 + C25861 + C25862) * C152167 * C152205 +
            (C25118 + C25117 + C25116) * C152167 * C152301) *
               C2162 +
           ((C25121 + C25120 + C25119) * C152167 * C152301 +
            (C23128 * C8005 - C23129 * C7998 - C23128 * C8006 +
             C152349 * C8016 + C23130 * C8003 - C23131 * C7997 -
             C23130 * C8004 + C152350 * C8015 + C23132 * C9696 -
             C23133 * C9695 - C23132 * C9697 + C23125 * C9698) *
                C152167 * C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C4047 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152072) *
               C152284 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152072 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C4047) *
               C152030) *
              C151944 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152072 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C4047) *
               C152284 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C4047 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152072) *
               C152030) *
              C151953 +
          ((((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
              C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
              C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                 C152167 * C152301 +
             (C23473 + C23474 + C23475) * C152167 * C152205) *
                C4047 -
            ((C24456 + C24457 + C24458) * C152167 * C152205 +
             (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
              C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
              C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                 C152167 * C152301) *
                C152072) *
               C152284 +
           (((C24458 + C24457 + C24456) * C152167 * C152301 +
             (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
              C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
              C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
              C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C23476 + C23477 + C23478) * C152167 * C152205 +
             (C23475 + C23474 + C23473) * C152167 * C152301) *
                C4047) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C152068 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152075 +
            ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
              C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
              C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                 C152167 * C152301 +
             (C25113 + C25114 + C25115) * C152167 * C152205) *
                C4719) *
               C152284 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152075 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C152068 -
            ((C25119 + C25120 + C25121) * C152167 * C152205 +
             (C25115 + C25114 + C25113) * C152167 * C152301) *
                C4719) *
               C152030) *
              C3181 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152075 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C152068 -
            ((C26729 + C26730 + C26731) * C152167 * C152205 +
             (C23132 * C549 - C23133 * C530 - C23132 * C550 + C23125 * C566 +
              C23130 * C547 - C23131 * C529 - C23130 * C548 + C152350 * C565 +
              C23128 * C545 - C23129 * C528 - C23128 * C546 + C152349 * C564) *
                 C152167 * C152301) *
                C4719) *
               C152284 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C152068 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152075 +
            ((C26731 + C26730 + C26729) * C152167 * C152301 +
             (C23128 * C1513 - C23129 * C1492 - C23128 * C1514 +
              C152349 * C1528 + C23130 * C1515 - C23131 * C1493 -
              C23130 * C1516 + C152350 * C1529 + C23132 * C1517 -
              C23133 * C1494 - C23132 * C1518 + C23125 * C1530) *
                 C152167 * C152205) *
                C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C4047 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152072) *
               C152373 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152072 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C4047) *
               C152357 +
           (((C23466 + C23465 + C23464) * C152167 * C152301 +
             (C24835 + C24836 + C24837) * C152167 * C152205) *
                C4047 -
            ((C25860 + C25861 + C25862) * C152167 * C152205 +
             (C25118 + C25117 + C25116) * C152167 * C152301) *
                C152072) *
               C152326) *
              C3181 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152072 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C4047) *
               C152373 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C4047 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152072) *
               C152357 +
           (((C25647 + C25646 + C25645) * C152167 * C152301 +
             (C23128 * C2005 - C23129 * C2000 - C23128 * C2006 +
              C152349 * C2012 + C23130 * C2007 - C23131 * C2001 -
              C23130 * C2008 + C152350 * C2013 + C23132 * C2009 -
              C23133 * C2002 - C23132 * C2010 + C23125 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C25334 + C25335 + C25336) * C152167 * C152205 +
             (C23472 + C23471 + C23470) * C152167 * C152301) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C4047 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152072) *
              C151967 * C152379 +
          (((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                C152167 * C152301 +
            (C24453 + C24454 + C24455) * C152167 * C152205) *
               C152072 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C4047) *
              C151967 * C152372 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C4047 -
           ((C24456 + C24457 + C24458) * C152167 * C152205 +
            (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
             C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
             C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                C152167 * C152301) *
               C152072) *
              C151967 * C152355 +
          (((C23128 * C535 - C23129 * C523 - C23128 * C536 + C152349 * C559 +
             C23130 * C551 - C23131 * C531 - C23130 * C552 + C152350 * C567 +
             C23132 * C555 - C23133 * C533 - C23132 * C556 + C23125 * C569) *
                C152167 * C152301 +
            (C23128 * C1053 - C23129 * C1044 - C23128 * C1054 +
             C152349 * C1062 + C23130 * C1055 - C23131 * C1045 -
             C23130 * C1056 + C152350 * C1063 + C23132 * C1057 -
             C23133 * C1046 - C23132 * C1058 + C23125 * C1064) *
                C152167 * C152205) *
               C152072 -
           ((C23911 + C23910 + C23909) * C152167 * C152205 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152167 * C152301) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C152381 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152378 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C25113 + C25114 + C25115) * C152167 * C152205) *
               C152365 -
           ((C27138 + C27139 + C27140) * C152167 * C152205 +
            (C23132 * C2407 - C23133 * C2398 - C23132 * C2408 + C23125 * C2422 +
             C23130 * C2409 - C23131 * C2399 - C23130 * C2410 +
             C152350 * C2423 + C23128 * C2411 - C23129 * C2400 -
             C23128 * C2412 + C152349 * C2424) *
                C152167 * C152301) *
               C152342) *
              C151967 * C3181 +
          (((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                C152167 * C152301 +
            (C24453 + C24454 + C24455) * C152167 * C152205) *
               C152378 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C152381 -
           ((C26729 + C26730 + C26731) * C152167 * C152205 +
            (C23132 * C549 - C23133 * C530 - C23132 * C550 + C23125 * C566 +
             C23130 * C547 - C23131 * C529 - C23130 * C548 + C152350 * C565 +
             C23128 * C545 - C23129 * C528 - C23128 * C546 + C152349 * C564) *
                C152167 * C152301) *
               C152365 +
           ((C23128 * C2409 - C23129 * C2399 - C23128 * C2410 +
             C152349 * C2423 + C23130 * C2407 - C23131 * C2398 -
             C23130 * C2408 + C152350 * C2422 + C23132 * C2405 -
             C23133 * C2397 - C23132 * C2406 + C23125 * C2421) *
                C152167 * C152301 +
            (C23128 * C2901 - C23129 * C2896 - C23128 * C2902 +
             C152349 * C2908 + C23130 * C2903 - C23131 * C2897 -
             C23130 * C2904 + C152350 * C2909 + C23132 * C2905 -
             C23133 * C2898 - C23132 * C2906 + C23125 * C2910) *
                C152167 * C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C152068 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152075 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C25113 + C25114 + C25115) * C152167 * C152205) *
               C4719) *
              C151967 * C151944 +
          (((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                C152167 * C152301 +
            (C24453 + C24454 + C24455) * C152167 * C152205) *
               C152075 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C152068 -
           ((C26729 + C26730 + C26731) * C152167 * C152205 +
            (C23132 * C549 - C23133 * C530 - C23132 * C550 + C23125 * C566 +
             C23130 * C547 - C23131 * C529 - C23130 * C548 + C152350 * C565 +
             C23128 * C545 - C23129 * C528 - C23128 * C546 + C152349 * C564) *
                C152167 * C152301) *
               C4719) *
              C151967 * C151953 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C152068 -
           ((C24456 + C24457 + C24458) * C152167 * C152205 +
            (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
             C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
             C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                C152167 * C152301) *
               C152075 +
           ((C23128 * C547 - C23129 * C529 - C23128 * C548 + C152349 * C565 +
             C23130 * C549 - C23131 * C530 - C23130 * C550 + C152350 * C566 +
             C23132 * C553 - C23133 * C532 - C23132 * C554 + C23125 * C568) *
                C152167 * C152301 +
            (C23128 * C1497 - C23129 * C1484 - C23128 * C1498 +
             C152349 * C1520 + C23130 * C1495 - C23131 * C1483 -
             C23130 * C1496 + C152350 * C1519 + C23132 * C2624 -
             C23133 * C2623 - C23132 * C2625 + C23125 * C2626) *
                C152167 * C152205) *
               C4719) *
              C151967 * C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C4047 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152072) *
              C151967 * C152379 +
          (((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                C152167 * C152301 +
            (C24453 + C24454 + C24455) * C152167 * C152205) *
               C152072 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C4047) *
              C151967 * C152372 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C4047 -
           ((C24456 + C24457 + C24458) * C152167 * C152205 +
            (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
             C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
             C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                C152167 * C152301) *
               C152072) *
              C151967 * C152355 +
          (((C23128 * C535 - C23129 * C523 - C23128 * C536 + C152349 * C559 +
             C23130 * C551 - C23131 * C531 - C23130 * C552 + C152350 * C567 +
             C23132 * C555 - C23133 * C533 - C23132 * C556 + C23125 * C569) *
                C152167 * C152301 +
            (C23128 * C1053 - C23129 * C1044 - C23128 * C1054 +
             C152349 * C1062 + C23130 * C1055 - C23131 * C1045 -
             C23130 * C1056 + C152350 * C1063 + C23132 * C1057 -
             C23133 * C1046 - C23132 * C1058 + C23125 * C1064) *
                C152167 * C152205) *
               C152072 -
           ((C23911 + C23910 + C23909) * C152167 * C152205 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152167 * C152301) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C4047 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152072) *
               C152373 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152072 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C4047) *
               C152357 +
           (((C23466 + C23465 + C23464) * C152167 * C152301 +
             (C24835 + C24836 + C24837) * C152167 * C152205) *
                C4047 -
            ((C25860 + C25861 + C25862) * C152167 * C152205 +
             (C25118 + C25117 + C25116) * C152167 * C152301) *
                C152072) *
               C152326) *
              C3181 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152072 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C4047) *
               C152373 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C4047 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152072) *
               C152357 +
           (((C25647 + C25646 + C25645) * C152167 * C152301 +
             (C23128 * C2005 - C23129 * C2000 - C23128 * C2006 +
              C152349 * C2012 + C23130 * C2007 - C23131 * C2001 -
              C23130 * C2008 + C152350 * C2013 + C23132 * C2009 -
              C23133 * C2002 - C23132 * C2010 + C23125 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C25334 + C25335 + C25336) * C152167 * C152205 +
             (C23472 + C23471 + C23470) * C152167 * C152301) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C152284 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C152030) *
              C703 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C152030 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C152284) *
              C704 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C151985 * C152284 -
           ((C23476 + C23477 + C23478) * C152167 * C152205 +
            (C23475 + C23474 + C23473) * C152167 * C152301) *
               C151985 * C152030) *
              C705 +
          (((C23909 + C23910 + C23911) * C152167 * C152301 +
            (C23128 * C352 - C23129 * C333 - C23128 * C353 + C152349 * C369 +
             C23130 * C356 - C23131 * C335 - C23130 * C357 + C152350 * C371 +
             C23132 * C360 - C23133 * C337 - C23132 * C361 + C23125 * C373) *
                C152167 * C152205) *
               C151985 * C152030 -
           ((C23911 + C23910 + C23909) * C152167 * C152205 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152167 * C152301) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C1661 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C1662 +
           ((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C151985 * C1663 -
           ((C24838 + C24839 + C24840) * C152167 * C152205 +
            (C24837 + C24836 + C24835) * C152167 * C152301) *
               C151985 * C152336) *
              C152270 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C1662 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C1661 -
           ((C25334 + C25335 + C25336) * C152167 * C152205 +
            (C23472 + C23471 + C23470) * C152167 * C152301) *
               C151985 * C1663 +
           ((C25336 + C25335 + C25334) * C152167 * C152301 +
            (C23128 * C1323 - C23129 * C1310 - C23128 * C1324 +
             C152349 * C1334 + C23130 * C1325 - C23131 * C1311 -
             C23130 * C1326 + C152350 * C1335 + C23132 * C1327 -
             C23133 * C1312 - C23132 * C1328 + C23125 * C1336) *
                C152167 * C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C152285 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152072) *
               C152284 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C23128 * C1509 - C23129 * C1490 - C23128 * C1510 +
              C152349 * C1526 + C23130 * C1507 - C23131 * C1489 -
              C23130 * C1508 + C152350 * C1525 + C23132 * C1505 -
              C23133 * C1488 - C23132 * C1506 + C23125 * C1524) *
                 C152167 * C152205) *
                C152072 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C152285) *
               C152030) *
              C323 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152072 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C152285) *
               C152284 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C152285 -
            ((C23132 * C1503 - C23133 * C1487 - C23132 * C1504 +
              C23125 * C1523 + C23130 * C1505 - C23131 * C1488 -
              C23130 * C1506 + C152350 * C1524 + C23128 * C1507 -
              C23129 * C1489 - C23128 * C1508 + C152349 * C1525) *
                 C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152072) *
               C152030) *
              C324 +
          ((((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
              C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
              C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                 C152167 * C152301 +
             (C23473 + C23474 + C23475) * C152167 * C152205) *
                C152285 -
            ((C24456 + C24457 + C24458) * C152167 * C152205 +
             (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
              C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
              C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                 C152167 * C152301) *
                C152072) *
               C152284 +
           (((C24458 + C24457 + C24456) * C152167 * C152301 +
             (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
              C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
              C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
              C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C23476 + C23477 + C23478) * C152167 * C152205 +
             (C23475 + C23474 + C23473) * C152167 * C152301) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C152285 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152072) *
              C1661 +
          (((C24452 + C24451 + C24450) * C152167 * C152301 +
            (C25116 + C25117 + C25118) * C152167 * C152205) *
               C152072 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C152285) *
              C1662 +
          (((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C152285 -
           ((C25860 + C25861 + C25862) * C152167 * C152205 +
            (C25118 + C25117 + C25116) * C152167 * C152301) *
               C152072) *
              C1663 +
          (((C25862 + C25861 + C25860) * C152167 * C152301 +
            (C23128 * C8009 - C23129 * C8000 - C23128 * C8010 +
             C152349 * C8018 + C23130 * C8007 - C23131 * C7999 -
             C23130 * C8008 + C152350 * C8017 + C23132 * C8586 -
             C23133 * C8585 - C23132 * C8587 + C23125 * C8588) *
                C152167 * C152205) *
               C152072 -
           ((C24838 + C24839 + C24840) * C152167 * C152205 +
            (C24837 + C24836 + C24835) * C152167 * C152301) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C152373 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C152357 +
           ((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C23128 * C1319 - C23129 * C1308 - C23128 * C1320 +
             C152349 * C1332 + C23130 * C1317 - C23131 * C1307 -
             C23130 * C1318 + C152350 * C1331 + C23132 * C1315 -
             C23133 * C1306 - C23132 * C1316 + C23125 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C323 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C152357 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C152373 -
           ((C23132 * C1313 - C23133 * C1305 - C23132 * C1314 + C23125 * C1329 +
             C23130 * C1315 - C23131 * C1306 - C23130 * C1316 +
             C152350 * C1330 + C23128 * C1317 - C23129 * C1307 -
             C23128 * C1318 + C152349 * C1331) *
                C152167 * C152205 +
            (C23472 + C23471 + C23470) * C152167 * C152301) *
               C151985 * C152326) *
              C324 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C151985 * C152373 -
           ((C23476 + C23477 + C23478) * C152167 * C152205 +
            (C23475 + C23474 + C23473) * C152167 * C152301) *
               C151985 * C152357 +
           ((C23478 + C23477 + C23476) * C152167 * C152301 +
            (C23128 * C1315 - C23129 * C1306 - C23128 * C1316 +
             C152349 * C1330 + C23130 * C1313 - C23131 * C1305 -
             C23130 * C1314 + C152350 * C1329 + C23132 * C1668 -
             C23133 * C1667 - C23132 * C1669 + C23125 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152167 * C152301 +
           (C23128 * C344 - C23129 * C329 - C23128 * C345 + C152349 * C365 +
            C23130 * C342 - C23131 * C328 - C23130 * C343 + C152350 * C364 +
            C23132 * C340 - C23133 * C327 - C23132 * C341 + C23125 * C363) *
               C152167 * C152205) *
              C151985 * C151967 * C129 -
          ((C23132 * C338 - C23133 * C326 - C23132 * C339 + C23125 * C362 +
            C23130 * C340 - C23131 * C327 - C23130 * C341 + C152350 * C363 +
            C23128 * C342 - C23129 * C328 - C23128 * C343 + C152349 * C364) *
               C152167 * C152205 +
           (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
            C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
            C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
               C152167 * C152301) *
              C151985 * C151967 * C130 +
          ((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
            C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
            C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
               C152167 * C152301 +
           (C23128 * C340 - C23129 * C327 - C23128 * C341 + C152349 * C363 +
            C23130 * C338 - C23131 * C326 - C23130 * C339 + C152350 * C362 +
            C23132 * C354 - C23133 * C334 - C23132 * C355 + C23125 * C370) *
               C152167 * C152205) *
              C151985 * C151967 * C131 -
          ((C23132 * C358 - C23133 * C336 - C23132 * C359 + C23125 * C372 +
            C23130 * C354 - C23131 * C334 - C23130 * C355 + C152350 * C370 +
            C23128 * C338 - C23129 * C326 - C23128 * C339 + C152349 * C362) *
               C152167 * C152205 +
           (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
            C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
            C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
               C152167 * C152301) *
              C151985 * C151967 * C132 +
          ((C23128 * C158 - C23129 * C146 - C23128 * C159 + C152349 * C170 +
            C23130 * C160 - C23131 * C147 - C23130 * C161 + C152350 * C171 +
            C23132 * C162 - C23133 * C148 - C23132 * C163 + C23125 * C172) *
               C152167 * C152301 +
           (C23128 * C354 - C23129 * C334 - C23128 * C355 + C152349 * C370 +
            C23130 * C358 - C23131 * C336 - C23130 * C359 + C152350 * C372 +
            C23132 * C708 - C23133 * C707 - C23132 * C709 + C23125 * C710) *
               C152167 * C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C152374 -
           ((C23132 * C1051 - C23133 * C1043 - C23132 * C1052 + C23125 * C1061 +
             C23130 * C1049 - C23131 * C1042 - C23130 * C1050 +
             C152350 * C1060 + C23128 * C1047 - C23129 * C1041 -
             C23128 * C1048 + C152349 * C1059) *
                C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152359 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C23128 * C1501 - C23129 * C1486 - C23128 * C1502 +
             C152349 * C1522 + C23130 * C1499 - C23131 * C1485 -
             C23130 * C1500 + C152350 * C1521 + C23132 * C1497 -
             C23133 * C1484 - C23132 * C1498 + C23125 * C1520) *
                C152167 * C152205) *
               C152329) *
              C151967 * C323 +
          (((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                C152167 * C152301 +
            (C23128 * C1049 - C23129 * C1042 - C23128 * C1050 +
             C152349 * C1060 + C23130 * C1051 - C23131 * C1043 -
             C23130 * C1052 + C152350 * C1061 + C23132 * C1053 -
             C23133 * C1044 - C23132 * C1054 + C23125 * C1062) *
                C152167 * C152205) *
               C152359 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C152374 -
           ((C23132 * C1495 - C23133 * C1483 - C23132 * C1496 + C23125 * C1519 +
             C23130 * C1497 - C23131 * C1484 - C23130 * C1498 +
             C152350 * C1520 + C23128 * C1499 - C23129 * C1485 -
             C23128 * C1500 + C152349 * C1521) *
                C152167 * C152205 +
            (C23132 * C549 - C23133 * C530 - C23132 * C550 + C23125 * C566 +
             C23130 * C547 - C23131 * C529 - C23130 * C548 + C152350 * C565 +
             C23128 * C545 - C23129 * C528 - C23128 * C546 + C152349 * C564) *
                C152167 * C152301) *
               C152329) *
              C151967 * C324 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C152374 -
           ((C23132 * C1055 - C23133 * C1045 - C23132 * C1056 + C23125 * C1063 +
             C23130 * C1053 - C23131 * C1044 - C23130 * C1054 +
             C152350 * C1062 + C23128 * C1051 - C23129 * C1043 -
             C23128 * C1052 + C152349 * C1061) *
                C152167 * C152205 +
            (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
             C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
             C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                C152167 * C152301) *
               C152359 +
           ((C23128 * C547 - C23129 * C529 - C23128 * C548 + C152349 * C565 +
             C23130 * C549 - C23131 * C530 - C23130 * C550 + C152350 * C566 +
             C23132 * C553 - C23133 * C532 - C23132 * C554 + C23125 * C568) *
                C152167 * C152301 +
            (C23128 * C1497 - C23129 * C1484 - C23128 * C1498 +
             C152349 * C1520 + C23130 * C1495 - C23131 * C1483 -
             C23130 * C1496 + C152350 * C1519 + C23132 * C2624 -
             C23133 * C2623 - C23132 * C2625 + C23125 * C2626) *
                C152167 * C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C1211 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C1212 +
           ((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C23128 * C1319 - C23129 * C1308 - C23128 * C1320 +
             C152349 * C1332 + C23130 * C1317 - C23131 * C1307 -
             C23130 * C1318 + C152350 * C1331 + C23132 * C1315 -
             C23133 * C1306 - C23132 * C1316 + C23125 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C1212 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C1211 -
           ((C23132 * C1313 - C23133 * C1305 - C23132 * C1314 + C23125 * C1329 +
             C23130 * C1315 - C23131 * C1306 - C23130 * C1316 +
             C152350 * C1330 + C23128 * C1317 - C23129 * C1307 -
             C23128 * C1318 + C152349 * C1331) *
                C152167 * C152205 +
            (C23472 + C23471 + C23470) * C152167 * C152301) *
               C151985 * C152326) *
              C152353 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C151985 * C1211 -
           ((C23476 + C23477 + C23478) * C152167 * C152205 +
            (C23475 + C23474 + C23473) * C152167 * C152301) *
               C151985 * C1212 +
           ((C23478 + C23477 + C23476) * C152167 * C152301 +
            (C23128 * C1315 - C23129 * C1306 - C23128 * C1316 +
             C152349 * C1330 + C23130 * C1313 - C23131 * C1305 -
             C23130 * C1314 + C152350 * C1329 + C23132 * C1668 -
             C23133 * C1667 - C23132 * C1669 + C23125 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152167 * C152301 +
           (C23461 + C23462 + C23463) * C152167 * C152205) *
              C151985 * C1299 -
          ((C23464 + C23465 + C23466) * C152167 * C152205 +
           (C23463 + C23462 + C23461) * C152167 * C152301) *
              C151985 * C1300 +
          ((C23466 + C23465 + C23464) * C152167 * C152301 +
           (C24835 + C24836 + C24837) * C152167 * C152205) *
              C151985 * C1301 -
          ((C24838 + C24839 + C24840) * C152167 * C152205 +
           (C24837 + C24836 + C24835) * C152167 * C152301) *
              C151985 * C1302 +
          ((C24840 + C24839 + C24838) * C152167 * C152301 +
           (C23128 * C7737 - C23129 * C7732 - C23128 * C7738 + C152349 * C7744 +
            C23130 * C7735 - C23131 * C7731 - C23130 * C7736 + C152350 * C7743 +
            C23132 * C8276 - C23133 * C8275 - C23132 * C8277 + C23125 * C8278) *
               C152167 * C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C152374 -
           ((C24450 + C24451 + C24452) * C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152359 +
           ((C23128 * C543 - C23129 * C527 - C23128 * C544 + C152349 * C563 +
             C23130 * C545 - C23131 * C528 - C23130 * C546 + C152350 * C564 +
             C23132 * C547 - C23133 * C529 - C23132 * C548 + C23125 * C565) *
                C152167 * C152301 +
            (C25113 + C25114 + C25115) * C152167 * C152205) *
               C152329) *
              C1211 +
          (((C24452 + C24451 + C24450) * C152167 * C152301 +
            (C25116 + C25117 + C25118) * C152167 * C152205) *
               C152359 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C152374 -
           ((C25119 + C25120 + C25121) * C152167 * C152205 +
            (C25115 + C25114 + C25113) * C152167 * C152301) *
               C152329) *
              C1212 +
          (((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C24835 + C24836 + C24837) * C152167 * C152205) *
               C152374 -
           ((C23132 * C2007 - C23133 * C2001 - C23132 * C2008 + C23125 * C2013 +
             C23130 * C2005 - C23131 * C2000 - C23130 * C2006 +
             C152350 * C2012 + C23128 * C2003 - C23129 * C1999 -
             C23128 * C2004 + C152349 * C2011) *
                C152167 * C152205 +
            (C25118 + C25117 + C25116) * C152167 * C152301) *
               C152359 +
           ((C25121 + C25120 + C25119) * C152167 * C152301 +
            (C23128 * C8005 - C23129 * C7998 - C23128 * C8006 +
             C152349 * C8016 + C23130 * C8003 - C23131 * C7997 -
             C23130 * C8004 + C152350 * C8015 + C23132 * C9696 -
             C23133 * C9695 - C23132 * C9697 + C23125 * C9698) *
                C152167 * C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C152285 -
           ((C23132 * C1051 - C23133 * C1043 - C23132 * C1052 + C23125 * C1061 +
             C23130 * C1049 - C23131 * C1042 - C23130 * C1050 +
             C152350 * C1060 + C23128 * C1047 - C23129 * C1041 -
             C23128 * C1048 + C152349 * C1059) *
                C152167 * C152205 +
            (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                C152167 * C152301) *
               C152072) *
              C151967 * C703 +
          (((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                C152167 * C152301 +
            (C23128 * C1049 - C23129 * C1042 - C23128 * C1050 +
             C152349 * C1060 + C23130 * C1051 - C23131 * C1043 -
             C23130 * C1052 + C152350 * C1061 + C23132 * C1053 -
             C23133 * C1044 - C23132 * C1054 + C23125 * C1062) *
                C152167 * C152205) *
               C152072 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C152285) *
              C151967 * C704 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C152285 -
           ((C23132 * C1055 - C23133 * C1045 - C23132 * C1056 + C23125 * C1063 +
             C23130 * C1053 - C23131 * C1044 - C23130 * C1054 +
             C152350 * C1062 + C23128 * C1051 - C23129 * C1043 -
             C23128 * C1052 + C152349 * C1061) *
                C152167 * C152205 +
            (C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567 +
             C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
             C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560) *
                C152167 * C152301) *
               C152072) *
              C151967 * C705 +
          (((C23128 * C535 - C23129 * C523 - C23128 * C536 + C152349 * C559 +
             C23130 * C551 - C23131 * C531 - C23130 * C552 + C152350 * C567 +
             C23132 * C555 - C23133 * C533 - C23132 * C556 + C23125 * C569) *
                C152167 * C152301 +
            (C23128 * C1053 - C23129 * C1044 - C23128 * C1054 +
             C152349 * C1062 + C23130 * C1055 - C23131 * C1045 -
             C23130 * C1056 + C152350 * C1063 + C23132 * C1057 -
             C23133 * C1046 - C23132 * C1058 + C23125 * C1064) *
                C152167 * C152205) *
               C152072 -
           ((C23911 + C23910 + C23909) * C152167 * C152205 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152167 * C152301) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152167 * C152301 +
             (C23461 + C23462 + C23463) * C152167 * C152205) *
                C152285 -
            ((C24450 + C24451 + C24452) * C152167 * C152205 +
             (C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560 +
              C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
              C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562) *
                 C152167 * C152301) *
                C152072) *
               C1211 +
           (((C24452 + C24451 + C24450) * C152167 * C152301 +
             (C25116 + C25117 + C25118) * C152167 * C152205) *
                C152072 -
            ((C23464 + C23465 + C23466) * C152167 * C152205 +
             (C23463 + C23462 + C23461) * C152167 * C152301) *
                C152285) *
               C1212 +
           (((C23466 + C23465 + C23464) * C152167 * C152301 +
             (C24835 + C24836 + C24837) * C152167 * C152205) *
                C152285 -
            ((C23132 * C2007 - C23133 * C2001 - C23132 * C2008 +
              C23125 * C2013 + C23130 * C2005 - C23131 * C2000 -
              C23130 * C2006 + C152350 * C2012 + C23128 * C2003 -
              C23129 * C1999 - C23128 * C2004 + C152349 * C2011) *
                 C152167 * C152205 +
             (C25118 + C25117 + C25116) * C152167 * C152301) *
                C152072) *
               C152326) *
              C152270 +
          ((((C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561 +
              C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
              C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559) *
                 C152167 * C152301 +
             (C24453 + C24454 + C24455) * C152167 * C152205) *
                C152072 -
            ((C23469 + C23468 + C23467) * C152167 * C152205 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152167 * C152301) *
                C152285) *
               C1211 +
           (((C23467 + C23468 + C23469) * C152167 * C152301 +
             (C23470 + C23471 + C23472) * C152167 * C152205) *
                C152285 -
            ((C25645 + C25646 + C25647) * C152167 * C152205 +
             (C24455 + C24454 + C24453) * C152167 * C152301) *
                C152072) *
               C1212 +
           (((C25647 + C25646 + C25645) * C152167 * C152301 +
             (C23128 * C2005 - C23129 * C2000 - C23128 * C2006 +
              C152349 * C2012 + C23130 * C2007 - C23131 * C2001 -
              C23130 * C2008 + C152350 * C2013 + C23132 * C2009 -
              C23133 * C2002 - C23132 * C2010 + C23125 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C25334 + C25335 + C25336) * C152167 * C152205 +
             (C23472 + C23471 + C23470) * C152167 * C152301) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152167 * C152301 +
           (C23128 * C344 - C23129 * C329 - C23128 * C345 + C152349 * C365 +
            C23130 * C342 - C23131 * C328 - C23130 * C343 + C152350 * C364 +
            C23132 * C340 - C23133 * C327 - C23132 * C341 + C23125 * C363) *
               C152167 * C152205) *
              C151985 * C151967 * C129 -
          ((C23132 * C338 - C23133 * C326 - C23132 * C339 + C23125 * C362 +
            C23130 * C340 - C23131 * C327 - C23130 * C341 + C152350 * C363 +
            C23128 * C342 - C23129 * C328 - C23128 * C343 + C152349 * C364) *
               C152167 * C152205 +
           (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
            C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
            C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
               C152167 * C152301) *
              C151985 * C151967 * C130 +
          ((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
            C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
            C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
               C152167 * C152301 +
           (C23128 * C340 - C23129 * C327 - C23128 * C341 + C152349 * C363 +
            C23130 * C338 - C23131 * C326 - C23130 * C339 + C152350 * C362 +
            C23132 * C354 - C23133 * C334 - C23132 * C355 + C23125 * C370) *
               C152167 * C152205) *
              C151985 * C151967 * C131 -
          ((C23132 * C358 - C23133 * C336 - C23132 * C359 + C23125 * C372 +
            C23130 * C354 - C23131 * C334 - C23130 * C355 + C152350 * C370 +
            C23128 * C338 - C23129 * C326 - C23128 * C339 + C152349 * C362) *
               C152167 * C152205 +
           (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
            C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
            C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
               C152167 * C152301) *
              C151985 * C151967 * C132 +
          ((C23128 * C158 - C23129 * C146 - C23128 * C159 + C152349 * C170 +
            C23130 * C160 - C23131 * C147 - C23130 * C161 + C152350 * C171 +
            C23132 * C162 - C23133 * C148 - C23132 * C163 + C23125 * C172) *
               C152167 * C152301 +
           (C23128 * C354 - C23129 * C334 - C23128 * C355 + C152349 * C370 +
            C23130 * C358 - C23131 * C336 - C23130 * C359 + C152350 * C372 +
            C23132 * C708 - C23133 * C707 - C23132 * C709 + C23125 * C710) *
               C152167 * C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C152373 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C152357 +
           ((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C23128 * C1319 - C23129 * C1308 - C23128 * C1320 +
             C152349 * C1332 + C23130 * C1317 - C23131 * C1307 -
             C23130 * C1318 + C152350 * C1331 + C23132 * C1315 -
             C23133 * C1306 - C23132 * C1316 + C23125 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C323 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C152357 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C152373 -
           ((C23132 * C1313 - C23133 * C1305 - C23132 * C1314 + C23125 * C1329 +
             C23130 * C1315 - C23131 * C1306 - C23130 * C1316 +
             C152350 * C1330 + C23128 * C1317 - C23129 * C1307 -
             C23128 * C1318 + C152349 * C1331) *
                C152167 * C152205 +
            (C23472 + C23471 + C23470) * C152167 * C152301) *
               C151985 * C152326) *
              C324 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C151985 * C152373 -
           ((C23476 + C23477 + C23478) * C152167 * C152205 +
            (C23475 + C23474 + C23473) * C152167 * C152301) *
               C151985 * C152357 +
           ((C23478 + C23477 + C23476) * C152167 * C152301 +
            (C23128 * C1315 - C23129 * C1306 - C23128 * C1316 +
             C152349 * C1330 + C23130 * C1313 - C23131 * C1305 -
             C23130 * C1314 + C152350 * C1329 + C23132 * C1668 -
             C23133 * C1667 - C23132 * C1669 + C23125 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152167 * C152301 +
            (C23461 + C23462 + C23463) * C152167 * C152205) *
               C151985 * C1211 -
           ((C23464 + C23465 + C23466) * C152167 * C152205 +
            (C23463 + C23462 + C23461) * C152167 * C152301) *
               C151985 * C1212 +
           ((C23466 + C23465 + C23464) * C152167 * C152301 +
            (C23128 * C1319 - C23129 * C1308 - C23128 * C1320 +
             C152349 * C1332 + C23130 * C1317 - C23131 * C1307 -
             C23130 * C1318 + C152350 * C1331 + C23132 * C1315 -
             C23133 * C1306 - C23132 * C1316 + C23125 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C23467 + C23468 + C23469) * C152167 * C152301 +
            (C23470 + C23471 + C23472) * C152167 * C152205) *
               C151985 * C1212 -
           ((C23469 + C23468 + C23467) * C152167 * C152205 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152167 * C152301) *
               C151985 * C1211 -
           ((C23132 * C1313 - C23133 * C1305 - C23132 * C1314 + C23125 * C1329 +
             C23130 * C1315 - C23131 * C1306 - C23130 * C1316 +
             C152350 * C1330 + C23128 * C1317 - C23129 * C1307 -
             C23128 * C1318 + C152349 * C1331) *
                C152167 * C152205 +
            (C23472 + C23471 + C23470) * C152167 * C152301) *
               C151985 * C152326) *
              C152353 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152167 * C152301 +
            (C23473 + C23474 + C23475) * C152167 * C152205) *
               C151985 * C1211 -
           ((C23476 + C23477 + C23478) * C152167 * C152205 +
            (C23475 + C23474 + C23473) * C152167 * C152301) *
               C151985 * C1212 +
           ((C23478 + C23477 + C23476) * C152167 * C152301 +
            (C23128 * C1315 - C23129 * C1306 - C23128 * C1316 +
             C152349 * C1330 + C23130 * C1313 - C23131 * C1305 -
             C23130 * C1314 + C152350 * C1329 + C23132 * C1668 -
             C23133 * C1667 - C23132 * C1669 + C23125 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152167 * C152301 +
           (C23461 + C23462 + C23463) * C152167 * C152205) *
              C151985 * C1299 -
          ((C23464 + C23465 + C23466) * C152167 * C152205 +
           (C23463 + C23462 + C23461) * C152167 * C152301) *
              C151985 * C1300 +
          ((C23466 + C23465 + C23464) * C152167 * C152301 +
           (C24835 + C24836 + C24837) * C152167 * C152205) *
              C151985 * C1301 -
          ((C24838 + C24839 + C24840) * C152167 * C152205 +
           (C24837 + C24836 + C24835) * C152167 * C152301) *
              C151985 * C1302 +
          ((C24840 + C24839 + C24838) * C152167 * C152301 +
           (C23128 * C7737 - C23129 * C7732 - C23128 * C7738 + C152349 * C7744 +
            C23130 * C7735 - C23131 * C7731 - C23130 * C7736 + C152350 * C7743 +
            C23132 * C8276 - C23133 * C8275 - C23132 * C8277 + C23125 * C8278) *
               C152167 * C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C151985 * C152026 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C152033 +
           ((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C151985 * C3525) *
              C151944 +
          ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C152033 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C152026 -
           (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
            (C42970 * C152231 + C6379 * C152302) * C152301) *
               C151985 * C3525) *
              C151953 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
               C151985 * C152026 -
           (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
            (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
               C151985 * C152033 +
           ((C6380 * C152302 + (C7389 + C7388) * C152231) * C152301 +
            ((C6377 + C6376) * C152302 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C3525) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C152285 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152072) *
               C152026 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152072 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C152285) *
               C152033 +
           (((C6378 * C152302 + C42324 * C152231) * C152301 +
             ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
                C152285 -
            (((C8078 + C8079) * C152231 + C43229 * C152302) * C152205 +
             (C42325 * C152231 + C8022 * C152302) * C152301) *
                C152072) *
               C3525) *
              C3181 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152072 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C152285) *
               C152026 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C152285 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             (C44358 * C152231 + C41578 * C152302) * C152301) *
                C152072) *
               C152033 +
           (((C8590 * C152302 + (C9725 + C9724) * C152231) * C152301 +
             ((C8605 + C8604) * C152302 +
              (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
               C6031 * C9696 - C6032 * C9695 - C6031 * C9697 +
               C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
             (C42970 * C152231 + C6379 * C152302) * C152301) *
                C152285) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C151985 * C152380 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C152376 +
           ((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C151985 * C152362 -
           (((C8822 + C8823) * C152231 + (C7775 + C7774) * C152302) * C152205 +
            (C43229 * C152231 + C7748 * C152302) * C152301) *
               C151985 * C152336) *
              C3181 +
          ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C152376 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C152380 -
           (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
            (C42970 * C152231 + C6379 * C152302) * C152301) *
               C151985 * C152362 +
           ((C8280 * C152302 + (C8605 + C8604) * C152231) * C152301 +
            ((C8295 + C8294) * C152302 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152231) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C151985 * C3041 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C152030) *
              C152379 +
          ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C152030 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C3041) *
              C152372 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
               C151985 * C3041 -
           (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
            (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
               C151985 * C152030) *
              C152355 +
          ((((C6820 + C6821) * C152302 + (C40929 + C40930) * C152231) *
                C152301 +
            ((C6822 + C6823) * C152302 +
             (C6029 * C1503 - C6030 * C1487 - C6029 * C1504 + C6024 * C1523 +
              C6031 * C1866 - C6032 * C1865 - C6031 * C1867 + C151913 * C1868) *
                 C152231) *
                C152205) *
               C151985 * C152030 -
           (((C40930 + C40929) * C152231 + (C6821 + C6820) * C152302) *
                C152205 +
            ((C15687 + C15686) * C152231 +
             (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
              C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                 C152302) *
                C152301) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C152374 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152359 +
            ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
             (C42323 * C152302 + C18559 * C152231) * C152205) *
                C152329) *
               C3041 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152359 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C152374 -
            (((C10152 + C10153) * C152231 + C42325 * C152302) * C152205 +
             (C44875 * C152231 + C16552 * C152302) * C152301) *
                C152329) *
               C152030) *
              C3181 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152359 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C152374 -
            (((C18142 + C18143) * C152231 + C44358 * C152302) * C152205 +
             ((C15264 + C15263) * C152231 + C15272 * C152302) * C152301) *
                C152329) *
               C3041 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C152374 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             (C44358 * C152231 + C41578 * C152302) * C152301) *
                C152359 +
            ((C18129 * C152302 + (C18143 + C18142) * C152231) * C152301 +
             ((C9725 + C9724) * C152302 +
              (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
               C6031 * C9922 - C6032 * C9921 - C6031 * C9923 +
               C151913 * C9924) *
                  C152231) *
                 C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C152285 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152072) *
               C3041 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152072 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C152285) *
               C152030) *
              C151944 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152072 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C152285) *
               C3041 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C152285 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             (C44358 * C152231 + C41578 * C152302) * C152301) *
                C152072) *
               C152030) *
              C151953 +
          (((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
               C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                  C152302 +
              (C15265 + C15266) * C152231) *
                 C152301 +
             ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
                C152285 -
            (((C15993 + C15992) * C152231 + C41580 * C152302) * C152205 +
             ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                 C152301) *
                C152072) *
               C3041 +
           (((C41579 * C152302 + (C15992 + C15993) * C152231) * C152301 +
             ((C7389 + C7388) * C152302 +
              (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
               C6031 * C1517 - C6032 * C1494 - C6031 * C1518 +
               C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
             (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
                C152285) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C151985 * C3041 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C152030) *
              C152379 +
          ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C152030 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C3041) *
              C152372 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
               C151985 * C3041 -
           (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
            (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
               C151985 * C152030) *
              C152355 +
          ((((C6820 + C6821) * C152302 + (C40929 + C40930) * C152231) *
                C152301 +
            ((C6822 + C6823) * C152302 +
             (C6029 * C1503 - C6030 * C1487 - C6029 * C1504 + C6024 * C1523 +
              C6031 * C1866 - C6032 * C1865 - C6031 * C1867 + C151913 * C1868) *
                 C152231) *
                C152205) *
               C151985 * C152030 -
           (((C40930 + C40929) * C152231 + (C6821 + C6820) * C152302) *
                C152205 +
            ((C15687 + C15686) * C152231 +
             (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
              C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                 C152302) *
                C152301) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C151985 * C152380 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C152376 +
           ((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C151985 * C152362 -
           (((C8822 + C8823) * C152231 + (C7775 + C7774) * C152302) * C152205 +
            (C43229 * C152231 + C7748 * C152302) * C152301) *
               C151985 * C152336) *
              C3181 +
          ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C152376 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C152380 -
           (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
            (C42970 * C152231 + C6379 * C152302) * C152301) *
               C151985 * C152362 +
           ((C8280 * C152302 + (C8605 + C8604) * C152231) * C152301 +
            ((C8295 + C8294) * C152302 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152231) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C4047 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152072) *
               C152026 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152072 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C4047) *
               C152033 +
           (((C6378 * C152302 + C42324 * C152231) * C152301 +
             ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
                C4047 -
            (((C8078 + C8079) * C152231 + C43229 * C152302) * C152205 +
             (C42325 * C152231 + C8022 * C152302) * C152301) *
                C152072) *
               C3525) *
              C152270 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152072 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C4047) *
               C152026 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C4047 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             (C44358 * C152231 + C41578 * C152302) * C152301) *
                C152072) *
               C152033 +
           (((C8590 * C152302 + (C9725 + C9724) * C152231) * C152301 +
             ((C8605 + C8604) * C152302 +
              (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
               C6031 * C9696 - C6032 * C9695 - C6031 * C9697 +
               C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
             (C42970 * C152231 + C6379 * C152302) * C152301) *
                C4047) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C152068 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152075 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            (C42323 * C152302 + C18559 * C152231) * C152205) *
               C4719) *
              C152026 +
          (((C41575 * C152302 + C42323 * C152231) * C152301 +
            (C42324 * C152302 + C8080 * C152231) * C152205) *
               C152075 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C152068 -
           (((C10152 + C10153) * C152231 + C42325 * C152302) * C152205 +
            (C44875 * C152231 + C16552 * C152302) * C152301) *
               C4719) *
              C152033 +
          (((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C152068 -
           (((C8078 + C8079) * C152231 + C43229 * C152302) * C152205 +
            (C42325 * C152231 + C8022 * C152302) * C152301) *
               C152075 +
           ((C8080 * C152302 + (C10153 + C10152) * C152231) * C152301 +
            ((C8079 + C8078) * C152302 +
             (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 +
              C6024 * C10125 + C6031 * C10123 - C6032 * C10120 -
              C6031 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C4719) *
              C3525) *
         C151939) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C4047 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152072) *
              C152380 +
          (((C41575 * C152302 + C42323 * C152231) * C152301 +
            (C42324 * C152302 + C8080 * C152231) * C152205) *
               C152072 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C4047) *
              C152376 +
          (((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C4047 -
           (((C8078 + C8079) * C152231 + C43229 * C152302) * C152205 +
            (C42325 * C152231 + C8022 * C152302) * C152301) *
               C152072) *
              C152362 +
          (((C8808 * C152302 + (C8079 + C8078) * C152231) * C152301 +
            ((C8823 + C8822) * C152302 +
             (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
              C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                 C152231) *
                C152205) *
               C152072 -
           (((C8822 + C8823) * C152231 + (C7775 + C7774) * C152302) * C152205 +
            (C43229 * C152231 + C7748 * C152302) * C152301) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C4047 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152072) *
               C3041 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152072 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C4047) *
               C152030) *
              C152370 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152072 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C4047) *
               C3041 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C4047 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             (C44358 * C152231 + C41578 * C152302) * C152301) *
                C152072) *
               C152030) *
              C152353 +
          (((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
               C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                  C152302 +
              (C15265 + C15266) * C152231) *
                 C152301 +
             ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
                C4047 -
            (((C15993 + C15992) * C152231 + C41580 * C152302) * C152205 +
             ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                 C152301) *
                C152072) *
               C3041 +
           (((C41579 * C152302 + (C15992 + C15993) * C152231) * C152301 +
             ((C7389 + C7388) * C152302 +
              (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
               C6031 * C1517 - C6032 * C1494 - C6031 * C1518 +
               C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
             (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C152381 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152378 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            (C42323 * C152302 + C18559 * C152231) * C152205) *
               C152365 -
           (((C18572 + C18573) * C152231 + C44875 * C152302) * C152205 +
            ((C17831 + C17830) * C152231 + C17805 * C152302) * C152301) *
               C152342) *
              C3041 +
          (((C41575 * C152302 + C42323 * C152231) * C152301 +
            (C42324 * C152302 + C8080 * C152231) * C152205) *
               C152378 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C152381 -
           (((C10152 + C10153) * C152231 + C42325 * C152302) * C152205 +
            (C44875 * C152231 + C16552 * C152302) * C152301) *
               C152365 +
           ((C18559 * C152302 + (C18573 + C18572) * C152231) * C152301 +
            ((C10153 + C10152) * C152302 +
             (C6029 * C9395 - C6030 * C9385 - C6029 * C9396 + C6024 * C9403 +
              C6031 * C9397 - C6032 * C9386 - C6031 * C9398 + C151913 * C9404) *
                 C152231) *
                C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C152068 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152075 +
            ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
             (C42323 * C152302 + C18559 * C152231) * C152205) *
                C4719) *
               C3041 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152075 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C152068 -
            (((C10152 + C10153) * C152231 + C42325 * C152302) * C152205 +
             (C44875 * C152231 + C16552 * C152302) * C152301) *
                C4719) *
               C152030) *
              C152270 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152075 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C152068 -
            (((C18142 + C18143) * C152231 + C44358 * C152302) * C152205 +
             ((C15264 + C15263) * C152231 + C15272 * C152302) * C152301) *
                C4719) *
               C3041 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C152068 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             (C44358 * C152231 + C41578 * C152302) * C152301) *
                C152075 +
            ((C18129 * C152302 + (C18143 + C18142) * C152231) * C152301 +
             ((C9725 + C9724) * C152302 +
              (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
               C6031 * C9922 - C6032 * C9921 - C6031 * C9923 +
               C151913 * C9924) *
                  C152231) *
                 C152205) *
                C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C4047 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152072) *
               C3041 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152072 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C4047) *
               C152030) *
              C152370 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152072 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C4047) *
               C3041 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C4047 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             (C44358 * C152231 + C41578 * C152302) * C152301) *
                C152072) *
               C152030) *
              C152353 +
          (((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
               C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                  C152302 +
              (C15265 + C15266) * C152231) *
                 C152301 +
             ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
                C4047 -
            (((C15993 + C15992) * C152231 + C41580 * C152302) * C152205 +
             ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                 C152301) *
                C152072) *
               C3041 +
           (((C41579 * C152302 + (C15992 + C15993) * C152231) * C152301 +
             ((C7389 + C7388) * C152302 +
              (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
               C6031 * C1517 - C6032 * C1494 - C6031 * C1518 +
               C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
             (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C4047 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152072) *
              C152380 +
          (((C41575 * C152302 + C42323 * C152231) * C152301 +
            (C42324 * C152302 + C8080 * C152231) * C152205) *
               C152072 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C4047) *
              C152376 +
          (((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C4047 -
           (((C8078 + C8079) * C152231 + C43229 * C152302) * C152205 +
            (C42325 * C152231 + C8022 * C152302) * C152301) *
               C152072) *
              C152362 +
          (((C8808 * C152302 + (C8079 + C8078) * C152231) * C152301 +
            ((C8823 + C8822) * C152302 +
             (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
              C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                 C152231) *
                C152205) *
               C152072 -
           (((C8822 + C8823) * C152231 + (C7775 + C7774) * C152302) * C152205 +
            (C43229 * C152231 + C7748 * C152302) * C152301) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C151985 * C1661 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C1662 +
           ((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C151985 * C1663 -
           (((C8822 + C8823) * C152231 + (C7775 + C7774) * C152302) * C152205 +
            ((C8077 + C8076) * C152231 + C7748 * C152302) * C152301) *
               C151985 * C152336) *
              C152270 +
          ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C1662 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C1661 -
           (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
            ((C7387 + C7386) * C152231 + C6379 * C152302) * C152301) *
               C151985 * C1663 +
           ((C8280 * C152302 + (C8605 + C8604) * C152231) * C152301 +
            ((C8295 + C8294) * C152302 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152231) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) * C152205) *
               C151985 * C152284 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            ((C7382 + C7383) * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C152030) *
              C703 +
          ((((C6366 + C6367) * C152302 + (C7384 + C7385) * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C152030 -
           (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C152284) *
              C704 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) * C152205) *
               C151985 * C152284 -
           (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
            ((C7390 + C7391) * C152231 + (C6373 + C6372) * C152302) * C152301) *
               C151985 * C152030) *
              C705 +
          ((((C6820 + C6821) * C152302 + (C40929 + C40930) * C152231) *
                C152301 +
            ((C6822 + C6823) * C152302 +
             (C6029 * C1503 - C6030 * C1487 - C6029 * C1504 + C6024 * C1523 +
              C6031 * C1866 - C6032 * C1865 - C6031 * C1867 + C151913 * C1868) *
                 C152231) *
                C152205) *
               C151985 * C152030 -
           (((C40930 + C40929) * C152231 + (C6821 + C6820) * C152302) *
                C152205 +
            ((C15687 + C15686) * C152231 +
             (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
              C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                 C152302) *
                C152301) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C2161 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C2162 +
            ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
             (C42323 * C152302 + C18559 * C152231) * C152205) *
                C152329) *
               C152284 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C2162 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C2161 -
            (((C10152 + C10153) * C152231 + C42325 * C152302) * C152205 +
             ((C10154 + C10155) * C152231 + C16552 * C152302) * C152301) *
                C152329) *
               C152030) *
              C152270 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C2162 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C2161 -
            (((C18142 + C18143) * C152231 + C44358 * C152302) * C152205 +
             ((C15264 + C15263) * C152231 + C15272 * C152302) * C152301) *
                C152329) *
               C152284 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C2161 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             (C44358 * C152231 + C41578 * C152302) * C152301) *
                C2162 +
            ((C18129 * C152302 + (C18143 + C18142) * C152231) * C152301 +
             ((C9725 + C9724) * C152302 +
              (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
               C6031 * C9922 - C6032 * C9921 - C6031 * C9923 +
               C151913 * C9924) *
                  C152231) *
                 C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C152285 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152072) *
              C1661 +
          (((C41575 * C152302 + C42323 * C152231) * C152301 +
            (C42324 * C152302 + C8080 * C152231) * C152205) *
               C152072 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C152285) *
              C1662 +
          (((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C152285 -
           (((C8078 + C8079) * C152231 + C43229 * C152302) * C152205 +
            (C42325 * C152231 + C8022 * C152302) * C152301) *
               C152072) *
              C1663 +
          (((C8808 * C152302 + (C8079 + C8078) * C152231) * C152301 +
            ((C8823 + C8822) * C152302 +
             (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
              C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                 C152231) *
                C152205) *
               C152072 -
           (((C8822 + C8823) * C152231 + (C7775 + C7774) * C152302) * C152205 +
            (C43229 * C152231 + C7748 * C152302) * C152301) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C152285 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152072) *
               C152284 +
           (((C41575 * C152302 + (C8072 + C8073) * C152231) * C152301 +
             ((C7381 + C7380) * C152302 + C8080 * C152231) * C152205) *
                C152072 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C152285) *
               C152030) *
              C323 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152072 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C152285) *
               C152284 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C152285 -
            (((C9724 + C9725) * C152231 + (C7387 + C7386) * C152302) * C152205 +
             ((C9726 + C9727) * C152231 + C41578 * C152302) * C152301) *
                C152072) *
               C152030) *
              C324 +
          (((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
               C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                  C152302 +
              (C15265 + C15266) * C152231) *
                 C152301 +
             ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
                C152285 -
            (((C15993 + C15992) * C152231 + C41580 * C152302) * C152205 +
             ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                 C152301) *
                C152072) *
               C152284 +
           (((C41579 * C152302 + (C15992 + C15993) * C152231) * C152301 +
             ((C7389 + C7388) * C152302 +
              (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
               C6031 * C1517 - C6032 * C1494 - C6031 * C1518 +
               C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
             (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C2757 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C2758 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            (C42323 * C152302 + C18559 * C152231) * C152205) *
               C2759 -
           (((C18572 + C18573) * C152231 + C44875 * C152302) * C152205 +
            ((C17831 + C17830) * C152231 + C17805 * C152302) * C152301) *
               C152342) *
              C152284 +
          (((C41575 * C152302 + C42323 * C152231) * C152301 +
            (C42324 * C152302 + C8080 * C152231) * C152205) *
               C2758 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C2757 -
           (((C10152 + C10153) * C152231 + C42325 * C152302) * C152205 +
            (C44875 * C152231 + C16552 * C152302) * C152301) *
               C2759 +
           ((C18559 * C152302 + (C18573 + C18572) * C152231) * C152301 +
            ((C10153 + C10152) * C152302 +
             (C6029 * C9395 - C6030 * C9385 - C6029 * C9396 + C6024 * C9403 +
              C6031 * C9397 - C6032 * C9386 - C6031 * C9398 + C151913 * C9404) *
                 C152231) *
                C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
                 C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                    C152302 +
                (C15253 + C15254) * C152231) *
                   C152301 +
               ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) *
                   C152205) *
                  C151985 * C151967 * C129 -
              (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) *
                   C152205 +
               ((C15260 + C15259) * C152231 +
                (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
                 C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                    C152302) *
                   C152301) *
                  C151985 * C151967 * C130 +
              (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
                 C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                    C152302 +
                (C15265 + C15266) * C152231) *
                   C152301 +
               ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) *
                   C152205) *
                  C151985 * C151967 * C131 -
              (((C6031 * C1055 - C6032 * C1045 - C6031 * C1056 +
                 C151913 * C1063 + C6029 * C1053 - C6030 * C1044 -
                 C6029 * C1054 + C6024 * C1062) *
                    C152231 +
                (C6821 + C6820) * C152302) *
                   C152205 +
               ((C15687 + C15686) * C152231 +
                (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
                 C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                    C152302) *
                   C152301) *
                  C151985 * C151967 * C132 +
              (((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
                 C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
                    C152302 +
                (C6029 * C551 - C6030 * C531 - C6029 * C552 + C6024 * C567 +
                 C6031 * C555 - C6032 * C533 - C6031 * C556 + C151913 * C569) *
                    C152231) *
                   C152301 +
               ((C6029 * C354 - C6030 * C334 - C6029 * C355 + C6024 * C370 +
                 C6031 * C358 - C6032 * C336 - C6031 * C359 + C151913 * C372) *
                    C152302 +
                (C6029 * C1055 - C6030 * C1045 - C6029 * C1056 + C6024 * C1063 +
                 C6031 * C1057 - C6032 * C1046 - C6031 * C1058 +
                 C151913 * C1064) *
                    C152231) *
                   C152205) *
                  C151985 * C151967 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
                  C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                     C152302 +
                 (C15253 + C15254) * C152231) *
                    C152301 +
                ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) *
                    C152205) *
                   C151985 * C152373 -
               ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
                ((C7382 + C7383) * C152231 + (C6361 + C6360) * C152302) *
                    C152301) *
                   C151985 * C152357 +
               ((C6378 * C152302 + (C7381 + C7380) * C152231) * C152301 +
                ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
                   C151985 * C152326) *
                  C323 +
              ((((C6366 + C6367) * C152302 + (C7384 + C7385) * C152231) *
                    C152301 +
                ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                   C151985 * C152357 -
               (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) *
                    C152205 +
                ((C15260 + C15259) * C152231 +
                 (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
                  C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                     C152302) *
                    C152301) *
                   C151985 * C152373 -
               (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) *
                    C152205 +
                ((C7387 + C7386) * C152231 + C6379 * C152302) * C152301) *
                   C151985 * C152326) *
                  C324 +
              ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
                  C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                     C152302 +
                 (C15265 + C15266) * C152231) *
                    C152301 +
                ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) *
                    C152205) *
                   C151985 * C152373 -
               (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) *
                    C152205 +
                ((C7390 + C7391) * C152231 + (C6373 + C6372) * C152302) *
                    C152301) *
                   C151985 * C152357 +
               ((C6380 * C152302 + (C7389 + C7388) * C152231) * C152301 +
                ((C6377 + C6376) * C152302 +
                 (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 +
                  C6024 * C2013 + C6031 * C2009 - C6032 * C2002 -
                  C6031 * C2010 + C151913 * C2014) *
                     C152231) *
                    C152205) *
                   C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) * C152205) *
               C152374 -
           ((C16552 * C152231 + (C7382 + C7383) * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152359 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            ((C8072 + C8073) * C152302 + C18559 * C152231) * C152205) *
               C152329) *
              C151967 * C323 +
          ((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                C152301 +
            ((C7384 + C7385) * C152302 + C18129 * C152231) * C152205) *
               C152359 -
           (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C152374 -
           (((C18142 + C18143) * C152231 + (C9726 + C9727) * C152302) *
                C152205 +
            ((C15264 + C15263) * C152231 + C15272 * C152302) * C152301) *
               C152329) *
              C151967 * C324 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) * C152205) *
               C152374 -
           (((C15993 + C15992) * C152231 + (C7390 + C7391) * C152302) *
                C152205 +
            ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                C152301) *
               C152359 +
           ((C15273 * C152302 + (C15270 + C15269) * C152231) * C152301 +
            ((C15992 + C15993) * C152302 +
             (C6029 * C2903 - C6030 * C2897 - C6029 * C2904 + C6024 * C2909 +
              C6031 * C2905 - C6032 * C2898 - C6031 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C151985 * C1211 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C1212 +
           ((C6378 * C152302 + (C7381 + C7380) * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C151985 * C152326) *
              C152370 +
          ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C1212 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C1211 -
           (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
            ((C7387 + C7386) * C152231 + C6379 * C152302) * C152301) *
               C151985 * C152326) *
              C152353 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
               C151985 * C1211 -
           (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
            (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
               C151985 * C1212 +
           ((C6380 * C152302 + (C7389 + C7388) * C152231) * C152301 +
            ((C6377 + C6376) * C152302 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152302 +
            (C15253 + C15254) * C152231) *
               C152301 +
           ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
              C151985 * C1299 -
          ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
           (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
              C151985 * C1300 +
          ((C6378 * C152302 + (C7381 + C7380) * C152231) * C152301 +
           ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
              C151985 * C1301 -
          (((C8822 + C8823) * C152231 + (C7775 + C7774) * C152302) * C152205 +
           ((C8077 + C8076) * C152231 + C7748 * C152302) * C152301) *
              C151985 * C1302 +
          ((C7778 * C152302 + (C8823 + C8822) * C152231) * C152301 +
           ((C7777 + C7776) * C152302 +
            (C6029 * C8801 - C6030 * C8799 - C6029 * C8802 + C6024 * C8805 +
             C6031 * C8803 - C6032 * C8800 - C6031 * C8804 + C151913 * C8806) *
                C152231) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C152374 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152359 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            (C42323 * C152302 + C18559 * C152231) * C152205) *
               C152329) *
              C1211 +
          (((C41575 * C152302 + C42323 * C152231) * C152301 +
            (C42324 * C152302 + C8080 * C152231) * C152205) *
               C152359 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C152374 -
           (((C10152 + C10153) * C152231 + C42325 * C152302) * C152205 +
            ((C10154 + C10155) * C152231 + C16552 * C152302) * C152301) *
               C152329) *
              C1212 +
          (((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C152374 -
           (((C8078 + C8079) * C152231 + (C8077 + C8076) * C152302) * C152205 +
            (C42325 * C152231 + C8022 * C152302) * C152301) *
               C152359 +
           ((C8080 * C152302 + (C10153 + C10152) * C152231) * C152301 +
            ((C8079 + C8078) * C152302 +
             (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 +
              C6024 * C10125 + C6031 * C10123 - C6032 * C10120 -
              C6031 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C2161 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C2162 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            (C42323 * C152302 + C18559 * C152231) * C152205) *
               C152329) *
              C151967 * C152370 +
          ((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                C152301 +
            (C41577 * C152302 + C18129 * C152231) * C152205) *
               C2162 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C2161 -
           (((C18142 + C18143) * C152231 + (C9726 + C9727) * C152302) *
                C152205 +
            ((C15264 + C15263) * C152231 + C15272 * C152302) * C152301) *
               C152329) *
              C151967 * C152353 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
               C2161 -
           (((C15993 + C15992) * C152231 + C41580 * C152302) * C152205 +
            ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                C152301) *
               C2162 +
           ((C15273 * C152302 + (C15270 + C15269) * C152231) * C152301 +
            ((C15992 + C15993) * C152302 +
             (C6029 * C2903 - C6030 * C2897 - C6029 * C2904 + C6024 * C2909 +
              C6031 * C2905 - C6032 * C2898 - C6031 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C2161 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C2162 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            (C42323 * C152302 + C18559 * C152231) * C152205) *
               C152329) *
              C152373 +
          (((C41575 * C152302 + C42323 * C152231) * C152301 +
            (C42324 * C152302 + C8080 * C152231) * C152205) *
               C2162 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C2161 -
           (((C10152 + C10153) * C152231 + C42325 * C152302) * C152205 +
            ((C10154 + C10155) * C152231 + C16552 * C152302) * C152301) *
               C152329) *
              C152357 +
          (((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C2161 -
           (((C8078 + C8079) * C152231 + C43229 * C152302) * C152205 +
            (C42325 * C152231 + C8022 * C152302) * C152301) *
               C2162 +
           ((C8080 * C152302 + (C10153 + C10152) * C152231) * C152301 +
            ((C8079 + C8078) * C152302 +
             (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 +
              C6024 * C10125 + C6031 * C10123 - C6032 * C10120 -
              C6031 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152302 +
            (C15253 + C15254) * C152231) *
               C152301 +
           ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
              C2392 -
          ((C16552 * C152231 + C41576 * C152302) * C152205 +
           ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
               C152301) *
              C2393 +
          ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
           (C42323 * C152302 + C18559 * C152231) * C152205) *
              C2394 -
          (((C18572 + C18573) * C152231 + (C10154 + C10155) * C152302) *
               C152205 +
           ((C17831 + C17830) * C152231 + C17805 * C152302) * C152301) *
              C2395 +
          ((C17834 * C152302 + (C17833 + C17832) * C152231) * C152301 +
           ((C18573 + C18572) * C152302 +
            (C6029 * C18552 - C6030 * C18550 - C6029 * C18553 + C6024 * C18556 +
             C6031 * C18554 - C6032 * C18551 - C6031 * C18555 +
             C151913 * C18557) *
                C152231) *
               C152205) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C152285 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152072) *
               C1211 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152072 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C152285) *
               C1212 +
           (((C6378 * C152302 + C42324 * C152231) * C152301 +
             ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
                C152285 -
            (((C8078 + C8079) * C152231 + (C8077 + C8076) * C152302) * C152205 +
             (C42325 * C152231 + C8022 * C152302) * C152301) *
                C152072) *
               C152326) *
              C152270 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152072 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C152285) *
               C1211 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C152285 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             ((C9726 + C9727) * C152231 + C41578 * C152302) * C152301) *
                C152072) *
               C1212 +
           (((C8590 * C152302 + (C9725 + C9724) * C152231) * C152301 +
             ((C8605 + C8604) * C152302 +
              (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
               C6031 * C9696 - C6032 * C9695 - C6031 * C9697 +
               C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
             (C42970 * C152231 + C6379 * C152302) * C152301) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) * C152205) *
               C152285 -
           ((C16552 * C152231 + (C7382 + C7383) * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152072) *
              C151967 * C703 +
          ((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                C152301 +
            ((C7384 + C7385) * C152302 + C18129 * C152231) * C152205) *
               C152072 -
           (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C152285) *
              C151967 * C704 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) * C152205) *
               C152285 -
           (((C15993 + C15992) * C152231 + (C7390 + C7391) * C152302) *
                C152205 +
            ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                C152301) *
               C152072) *
              C151967 * C705 +
          ((((C15686 + C15687) * C152302 + (C15688 + C15689) * C152231) *
                C152301 +
            ((C40929 + C40930) * C152302 +
             (C6029 * C1495 - C6030 * C1483 - C6029 * C1496 + C6024 * C1519 +
              C6031 * C2624 - C6032 * C2623 - C6031 * C2625 + C151913 * C2626) *
                 C152231) *
                C152205) *
               C152072 -
           (((C40930 + C40929) * C152231 + (C6821 + C6820) * C152302) *
                C152205 +
            ((C15687 + C15686) * C152231 +
             (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
              C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                 C152302) *
                C152301) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C2757 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C2758 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            (C42323 * C152302 + C18559 * C152231) * C152205) *
               C2759 -
           (((C18572 + C18573) * C152231 + (C10154 + C10155) * C152302) *
                C152205 +
            ((C17831 + C17830) * C152231 + C17805 * C152302) * C152301) *
               C152342) *
              C151967 * C152270 +
          ((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                C152301 +
            (C41577 * C152302 + C18129 * C152231) * C152205) *
               C2758 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C2757 -
           (((C18142 + C18143) * C152231 + C44358 * C152302) * C152205 +
            ((C15264 + C15263) * C152231 + C15272 * C152302) * C152301) *
               C2759 +
           ((C18342 * C152302 + (C18356 + C18355) * C152231) * C152301 +
            ((C18143 + C18142) * C152302 +
             (C6029 * C9393 - C6030 * C9384 - C6029 * C9394 + C6024 * C9402 +
              C6031 * C18125 - C6032 * C18124 - C6031 * C18126 +
              C151913 * C18127) *
                 C152231) *
                C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) * C152205) *
               C151985 * C152373 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            ((C7382 + C7383) * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C152357 +
           ((C6378 * C152302 + (C7381 + C7380) * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C151985 * C152326) *
              C323 +
          ((((C6366 + C6367) * C152302 + (C7384 + C7385) * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C152357 -
           (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C152373 -
           (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
            ((C7387 + C7386) * C152231 + C6379 * C152302) * C152301) *
               C151985 * C152326) *
              C324 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) * C152205) *
               C151985 * C152373 -
           (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
            ((C7390 + C7391) * C152231 + (C6373 + C6372) * C152302) * C152301) *
               C151985 * C152357 +
           ((C6380 * C152302 + (C7389 + C7388) * C152231) * C152301 +
            ((C6377 + C6376) * C152302 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152302 +
            (C15253 + C15254) * C152231) *
               C152301 +
           ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) * C152205) *
              C151985 * C151967 * C129 -
          (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) * C152205 +
           ((C15260 + C15259) * C152231 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152302) *
               C152301) *
              C151985 * C151967 * C130 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152302 +
            (C15265 + C15266) * C152231) *
               C152301 +
           ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) * C152205) *
              C151985 * C151967 * C131 -
          (((C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063 +
             C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062) *
                C152231 +
            (C6821 + C6820) * C152302) *
               C152205 +
           ((C15687 + C15686) * C152231 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152302) *
               C152301) *
              C151985 * C151967 * C132 +
          (((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
             C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
                C152302 +
            (C6029 * C551 - C6030 * C531 - C6029 * C552 + C6024 * C567 +
             C6031 * C555 - C6032 * C533 - C6031 * C556 + C151913 * C569) *
                C152231) *
               C152301 +
           ((C6029 * C354 - C6030 * C334 - C6029 * C355 + C6024 * C370 +
             C6031 * C358 - C6032 * C336 - C6031 * C359 + C151913 * C372) *
                C152302 +
            (C6029 * C1055 - C6030 * C1045 - C6029 * C1056 + C6024 * C1063 +
             C6031 * C1057 - C6032 * C1046 - C6031 * C1058 + C151913 * C1064) *
                C152231) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C151985 * C1211 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C1212 +
           ((C6378 * C152302 + (C7381 + C7380) * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C151985 * C152326) *
              C152370 +
          ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C1212 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C1211 -
           (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
            ((C7387 + C7386) * C152231 + C6379 * C152302) * C152301) *
               C151985 * C152326) *
              C152353 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
               C151985 * C1211 -
           (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
            (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
               C151985 * C1212 +
           ((C6380 * C152302 + (C7389 + C7388) * C152231) * C152301 +
            ((C6377 + C6376) * C152302 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152302 +
            (C15253 + C15254) * C152231) *
               C152301 +
           ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
              C151985 * C1299 -
          ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
           (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
              C151985 * C1300 +
          ((C6378 * C152302 + (C7381 + C7380) * C152231) * C152301 +
           ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
              C151985 * C1301 -
          (((C8822 + C8823) * C152231 + (C7775 + C7774) * C152302) * C152205 +
           ((C8077 + C8076) * C152231 + C7748 * C152302) * C152301) *
              C151985 * C1302 +
          ((C7778 * C152302 + (C8823 + C8822) * C152231) * C152301 +
           ((C7777 + C7776) * C152302 +
            (C6029 * C8801 - C6030 * C8799 - C6029 * C8802 + C6024 * C8805 +
             C6031 * C8803 - C6032 * C8800 - C6031 * C8804 + C151913 * C8806) *
                C152231) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C2161 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C2162 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            (C42323 * C152302 + C18559 * C152231) * C152205) *
               C152329) *
              C151967 * C152370 +
          ((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                C152301 +
            (C41577 * C152302 + C18129 * C152231) * C152205) *
               C2162 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C2161 -
           (((C18142 + C18143) * C152231 + (C9726 + C9727) * C152302) *
                C152205 +
            ((C15264 + C15263) * C152231 + C15272 * C152302) * C152301) *
               C152329) *
              C151967 * C152353 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
               C2161 -
           (((C15993 + C15992) * C152231 + C41580 * C152302) * C152205 +
            ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                C152301) *
               C2162 +
           ((C15273 * C152302 + (C15270 + C15269) * C152231) * C152301 +
            ((C15992 + C15993) * C152302 +
             (C6029 * C2903 - C6030 * C2897 - C6029 * C2904 + C6024 * C2909 +
              C6031 * C2905 - C6032 * C2898 - C6031 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C2161 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C2162 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            (C42323 * C152302 + C18559 * C152231) * C152205) *
               C152329) *
              C152373 +
          (((C41575 * C152302 + C42323 * C152231) * C152301 +
            (C42324 * C152302 + C8080 * C152231) * C152205) *
               C2162 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C2161 -
           (((C10152 + C10153) * C152231 + C42325 * C152302) * C152205 +
            ((C10154 + C10155) * C152231 + C16552 * C152302) * C152301) *
               C152329) *
              C152357 +
          (((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C2161 -
           (((C8078 + C8079) * C152231 + C43229 * C152302) * C152205 +
            (C42325 * C152231 + C8022 * C152302) * C152301) *
               C2162 +
           ((C8080 * C152302 + (C10153 + C10152) * C152231) * C152301 +
            ((C8079 + C8078) * C152302 +
             (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 +
              C6024 * C10125 + C6031 * C10123 - C6032 * C10120 -
              C6031 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C4047 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152072) *
               C152284 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152072 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C4047) *
               C152030) *
              C151944 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152072 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C4047) *
               C152284 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C4047 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             (C44358 * C152231 + C41578 * C152302) * C152301) *
                C152072) *
               C152030) *
              C151953 +
          (((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
               C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                  C152302 +
              (C15265 + C15266) * C152231) *
                 C152301 +
             ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
                C4047 -
            (((C15993 + C15992) * C152231 + C41580 * C152302) * C152205 +
             ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                 C152301) *
                C152072) *
               C152284 +
           (((C41579 * C152302 + (C15992 + C15993) * C152231) * C152301 +
             ((C7389 + C7388) * C152302 +
              (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
               C6031 * C1517 - C6032 * C1494 - C6031 * C1518 +
               C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
             (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
                C4047) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C152068 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152075 +
            ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
             (C42323 * C152302 + C18559 * C152231) * C152205) *
                C4719) *
               C152284 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152075 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C152068 -
            (((C10152 + C10153) * C152231 + C42325 * C152302) * C152205 +
             (C44875 * C152231 + C16552 * C152302) * C152301) *
                C4719) *
               C152030) *
              C3181 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152075 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C152068 -
            (((C18142 + C18143) * C152231 + C44358 * C152302) * C152205 +
             ((C15264 + C15263) * C152231 + C15272 * C152302) * C152301) *
                C4719) *
               C152284 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C152068 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             (C44358 * C152231 + C41578 * C152302) * C152301) *
                C152075 +
            ((C18129 * C152302 + (C18143 + C18142) * C152231) * C152301 +
             ((C9725 + C9724) * C152302 +
              (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
               C6031 * C9922 - C6032 * C9921 - C6031 * C9923 +
               C151913 * C9924) *
                  C152231) *
                 C152205) *
                C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C4047 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152072) *
               C152373 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152072 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C4047) *
               C152357 +
           (((C6378 * C152302 + C42324 * C152231) * C152301 +
             ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
                C4047 -
            (((C8078 + C8079) * C152231 + C43229 * C152302) * C152205 +
             (C42325 * C152231 + C8022 * C152302) * C152301) *
                C152072) *
               C152326) *
              C3181 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152072 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C4047) *
               C152373 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C4047 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             (C44358 * C152231 + C41578 * C152302) * C152301) *
                C152072) *
               C152357 +
           (((C8590 * C152302 + (C9725 + C9724) * C152231) * C152301 +
             ((C8605 + C8604) * C152302 +
              (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
               C6031 * C9696 - C6032 * C9695 - C6031 * C9697 +
               C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
             (C42970 * C152231 + C6379 * C152302) * C152301) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C4047 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152072) *
              C151967 * C152379 +
          ((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                C152301 +
            (C41577 * C152302 + C18129 * C152231) * C152205) *
               C152072 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C4047) *
              C151967 * C152372 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
               C4047 -
           (((C15993 + C15992) * C152231 + C41580 * C152302) * C152205 +
            ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                C152301) *
               C152072) *
              C151967 * C152355 +
          ((((C15686 + C15687) * C152302 + (C15688 + C15689) * C152231) *
                C152301 +
            ((C40929 + C40930) * C152302 +
             (C6029 * C1495 - C6030 * C1483 - C6029 * C1496 + C6024 * C1519 +
              C6031 * C2624 - C6032 * C2623 - C6031 * C2625 + C151913 * C2626) *
                 C152231) *
                C152205) *
               C152072 -
           (((C40930 + C40929) * C152231 + (C6821 + C6820) * C152302) *
                C152205 +
            ((C15687 + C15686) * C152231 +
             (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
              C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                 C152302) *
                C152301) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C152381 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152378 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            (C42323 * C152302 + C18559 * C152231) * C152205) *
               C152365 -
           (((C18572 + C18573) * C152231 + C44875 * C152302) * C152205 +
            ((C17831 + C17830) * C152231 + C17805 * C152302) * C152301) *
               C152342) *
              C151967 * C3181 +
          ((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                C152301 +
            (C41577 * C152302 + C18129 * C152231) * C152205) *
               C152378 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C152381 -
           (((C18142 + C18143) * C152231 + C44358 * C152302) * C152205 +
            ((C15264 + C15263) * C152231 + C15272 * C152302) * C152301) *
               C152365 +
           ((C18342 * C152302 + (C18356 + C18355) * C152231) * C152301 +
            ((C18143 + C18142) * C152302 +
             (C6029 * C9393 - C6030 * C9384 - C6029 * C9394 + C6024 * C9402 +
              C6031 * C18125 - C6032 * C18124 - C6031 * C18126 +
              C151913 * C18127) *
                 C152231) *
                C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C152068 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152075 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            (C42323 * C152302 + C18559 * C152231) * C152205) *
               C4719) *
              C151967 * C151944 +
          ((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                C152301 +
            (C41577 * C152302 + C18129 * C152231) * C152205) *
               C152075 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C152068 -
           (((C18142 + C18143) * C152231 + C44358 * C152302) * C152205 +
            ((C15264 + C15263) * C152231 + C15272 * C152302) * C152301) *
               C4719) *
              C151967 * C151953 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
               C152068 -
           (((C15993 + C15992) * C152231 + C41580 * C152302) * C152205 +
            ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                C152301) *
               C152075 +
           ((C15273 * C152302 + (C15270 + C15269) * C152231) * C152301 +
            ((C15992 + C15993) * C152302 +
             (C6029 * C2903 - C6030 * C2897 - C6029 * C2904 + C6024 * C2909 +
              C6031 * C2905 - C6032 * C2898 - C6031 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C4719) *
              C151967 * C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C4047 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152072) *
              C151967 * C152379 +
          ((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                C152301 +
            (C41577 * C152302 + C18129 * C152231) * C152205) *
               C152072 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C4047) *
              C151967 * C152372 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
               C4047 -
           (((C15993 + C15992) * C152231 + C41580 * C152302) * C152205 +
            ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                C152301) *
               C152072) *
              C151967 * C152355 +
          ((((C15686 + C15687) * C152302 + (C15688 + C15689) * C152231) *
                C152301 +
            ((C40929 + C40930) * C152302 +
             (C6029 * C1495 - C6030 * C1483 - C6029 * C1496 + C6024 * C1519 +
              C6031 * C2624 - C6032 * C2623 - C6031 * C2625 + C151913 * C2626) *
                 C152231) *
                C152205) *
               C152072 -
           (((C40930 + C40929) * C152231 + (C6821 + C6820) * C152302) *
                C152205 +
            ((C15687 + C15686) * C152231 +
             (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
              C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                 C152302) *
                C152301) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C4047 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152072) *
               C152373 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152072 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C4047) *
               C152357 +
           (((C6378 * C152302 + C42324 * C152231) * C152301 +
             ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
                C4047 -
            (((C8078 + C8079) * C152231 + C43229 * C152302) * C152205 +
             (C42325 * C152231 + C8022 * C152302) * C152301) *
                C152072) *
               C152326) *
              C3181 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152072 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C4047) *
               C152373 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C4047 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             (C44358 * C152231 + C41578 * C152302) * C152301) *
                C152072) *
               C152357 +
           (((C8590 * C152302 + (C9725 + C9724) * C152231) * C152301 +
             ((C8605 + C8604) * C152302 +
              (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
               C6031 * C9696 - C6032 * C9695 - C6031 * C9697 +
               C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
             (C42970 * C152231 + C6379 * C152302) * C152301) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) * C152205) *
               C151985 * C152284 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            ((C7382 + C7383) * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C152030) *
              C703 +
          ((((C6366 + C6367) * C152302 + (C7384 + C7385) * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C152030 -
           (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C152284) *
              C704 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) * C152205) *
               C151985 * C152284 -
           (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
            ((C7390 + C7391) * C152231 + (C6373 + C6372) * C152302) * C152301) *
               C151985 * C152030) *
              C705 +
          ((((C6820 + C6821) * C152302 + (C40929 + C40930) * C152231) *
                C152301 +
            ((C6822 + C6823) * C152302 +
             (C6029 * C1503 - C6030 * C1487 - C6029 * C1504 + C6024 * C1523 +
              C6031 * C1866 - C6032 * C1865 - C6031 * C1867 + C151913 * C1868) *
                 C152231) *
                C152205) *
               C151985 * C152030 -
           (((C40930 + C40929) * C152231 + (C6821 + C6820) * C152302) *
                C152205 +
            ((C15687 + C15686) * C152231 +
             (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
              C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                 C152302) *
                C152301) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C151985 * C1661 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C1662 +
           ((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C151985 * C1663 -
           (((C8822 + C8823) * C152231 + (C7775 + C7774) * C152302) * C152205 +
            ((C8077 + C8076) * C152231 + C7748 * C152302) * C152301) *
               C151985 * C152336) *
              C152270 +
          ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C1662 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C1661 -
           (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
            ((C7387 + C7386) * C152231 + C6379 * C152302) * C152301) *
               C151985 * C1663 +
           ((C8280 * C152302 + (C8605 + C8604) * C152231) * C152301 +
            ((C8295 + C8294) * C152302 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152231) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C152285 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152072) *
               C152284 +
           (((C41575 * C152302 + (C8072 + C8073) * C152231) * C152301 +
             ((C7381 + C7380) * C152302 + C8080 * C152231) * C152205) *
                C152072 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C152285) *
               C152030) *
              C323 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152072 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C152285) *
               C152284 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C152285 -
            (((C9724 + C9725) * C152231 + (C7387 + C7386) * C152302) * C152205 +
             ((C9726 + C9727) * C152231 + C41578 * C152302) * C152301) *
                C152072) *
               C152030) *
              C324 +
          (((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
               C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                  C152302 +
              (C15265 + C15266) * C152231) *
                 C152301 +
             ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
                C152285 -
            (((C15993 + C15992) * C152231 + C41580 * C152302) * C152205 +
             ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                 C152301) *
                C152072) *
               C152284 +
           (((C41579 * C152302 + (C15992 + C15993) * C152231) * C152301 +
             ((C7389 + C7388) * C152302 +
              (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
               C6031 * C1517 - C6032 * C1494 - C6031 * C1518 +
               C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
             (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C152285 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152072) *
              C1661 +
          (((C41575 * C152302 + C42323 * C152231) * C152301 +
            (C42324 * C152302 + C8080 * C152231) * C152205) *
               C152072 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C152285) *
              C1662 +
          (((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C152285 -
           (((C8078 + C8079) * C152231 + C43229 * C152302) * C152205 +
            (C42325 * C152231 + C8022 * C152302) * C152301) *
               C152072) *
              C1663 +
          (((C8808 * C152302 + (C8079 + C8078) * C152231) * C152301 +
            ((C8823 + C8822) * C152302 +
             (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
              C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                 C152231) *
                C152205) *
               C152072 -
           (((C8822 + C8823) * C152231 + (C7775 + C7774) * C152302) * C152205 +
            (C43229 * C152231 + C7748 * C152302) * C152301) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) * C152205) *
               C151985 * C152373 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            ((C7382 + C7383) * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C152357 +
           ((C6378 * C152302 + (C7381 + C7380) * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C151985 * C152326) *
              C323 +
          ((((C6366 + C6367) * C152302 + (C7384 + C7385) * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C152357 -
           (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C152373 -
           (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
            ((C7387 + C7386) * C152231 + C6379 * C152302) * C152301) *
               C151985 * C152326) *
              C324 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) * C152205) *
               C151985 * C152373 -
           (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
            ((C7390 + C7391) * C152231 + (C6373 + C6372) * C152302) * C152301) *
               C151985 * C152357 +
           ((C6380 * C152302 + (C7389 + C7388) * C152231) * C152301 +
            ((C6377 + C6376) * C152302 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152302 +
            (C15253 + C15254) * C152231) *
               C152301 +
           ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) * C152205) *
              C151985 * C151967 * C129 -
          (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) * C152205 +
           ((C15260 + C15259) * C152231 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152302) *
               C152301) *
              C151985 * C151967 * C130 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152302 +
            (C15265 + C15266) * C152231) *
               C152301 +
           ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) * C152205) *
              C151985 * C151967 * C131 -
          (((C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063 +
             C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062) *
                C152231 +
            (C6821 + C6820) * C152302) *
               C152205 +
           ((C15687 + C15686) * C152231 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152302) *
               C152301) *
              C151985 * C151967 * C132 +
          (((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
             C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
                C152302 +
            (C6029 * C551 - C6030 * C531 - C6029 * C552 + C6024 * C567 +
             C6031 * C555 - C6032 * C533 - C6031 * C556 + C151913 * C569) *
                C152231) *
               C152301 +
           ((C6029 * C354 - C6030 * C334 - C6029 * C355 + C6024 * C370 +
             C6031 * C358 - C6032 * C336 - C6031 * C359 + C151913 * C372) *
                C152302 +
            (C6029 * C1055 - C6030 * C1045 - C6029 * C1056 + C6024 * C1063 +
             C6031 * C1057 - C6032 * C1046 - C6031 * C1058 + C151913 * C1064) *
                C152231) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) * C152205) *
               C152374 -
           ((C16552 * C152231 + (C7382 + C7383) * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152359 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            ((C8072 + C8073) * C152302 + C18559 * C152231) * C152205) *
               C152329) *
              C151967 * C323 +
          ((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                C152301 +
            ((C7384 + C7385) * C152302 + C18129 * C152231) * C152205) *
               C152359 -
           (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C152374 -
           (((C18142 + C18143) * C152231 + (C9726 + C9727) * C152302) *
                C152205 +
            ((C15264 + C15263) * C152231 + C15272 * C152302) * C152301) *
               C152329) *
              C151967 * C324 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) * C152205) *
               C152374 -
           (((C15993 + C15992) * C152231 + (C7390 + C7391) * C152302) *
                C152205 +
            ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                C152301) *
               C152359 +
           ((C15273 * C152302 + (C15270 + C15269) * C152231) * C152301 +
            ((C15992 + C15993) * C152302 +
             (C6029 * C2903 - C6030 * C2897 - C6029 * C2904 + C6024 * C2909 +
              C6031 * C2905 - C6032 * C2898 - C6031 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C151985 * C1211 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C1212 +
           ((C6378 * C152302 + (C7381 + C7380) * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C151985 * C152326) *
              C152370 +
          ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C1212 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C1211 -
           (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
            ((C7387 + C7386) * C152231 + C6379 * C152302) * C152301) *
               C151985 * C152326) *
              C152353 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
               C151985 * C1211 -
           (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
            (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
               C151985 * C1212 +
           ((C6380 * C152302 + (C7389 + C7388) * C152231) * C152301 +
            ((C6377 + C6376) * C152302 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152302 +
            (C15253 + C15254) * C152231) *
               C152301 +
           ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
              C151985 * C1299 -
          ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
           (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
              C151985 * C1300 +
          ((C6378 * C152302 + (C7381 + C7380) * C152231) * C152301 +
           ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
              C151985 * C1301 -
          (((C8822 + C8823) * C152231 + (C7775 + C7774) * C152302) * C152205 +
           ((C8077 + C8076) * C152231 + C7748 * C152302) * C152301) *
              C151985 * C1302 +
          ((C7778 * C152302 + (C8823 + C8822) * C152231) * C152301 +
           ((C7777 + C7776) * C152302 +
            (C6029 * C8801 - C6030 * C8799 - C6029 * C8802 + C6024 * C8805 +
             C6031 * C8803 - C6032 * C8800 - C6031 * C8804 + C151913 * C8806) *
                C152231) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C152374 -
           ((C16552 * C152231 + C41576 * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152359 +
           ((C15271 * C152302 + (C15258 + C15257) * C152231) * C152301 +
            (C42323 * C152302 + C18559 * C152231) * C152205) *
               C152329) *
              C1211 +
          (((C41575 * C152302 + C42323 * C152231) * C152301 +
            (C42324 * C152302 + C8080 * C152231) * C152205) *
               C152359 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C152374 -
           (((C10152 + C10153) * C152231 + C42325 * C152302) * C152205 +
            ((C10154 + C10155) * C152231 + C16552 * C152302) * C152301) *
               C152329) *
              C1212 +
          (((C6378 * C152302 + C42324 * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C152374 -
           (((C8078 + C8079) * C152231 + (C8077 + C8076) * C152302) * C152205 +
            (C42325 * C152231 + C8022 * C152302) * C152301) *
               C152359 +
           ((C8080 * C152302 + (C10153 + C10152) * C152231) * C152301 +
            ((C8079 + C8078) * C152302 +
             (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 +
              C6024 * C10125 + C6031 * C10123 - C6032 * C10120 -
              C6031 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) * C152205) *
               C152285 -
           ((C16552 * C152231 + (C7382 + C7383) * C152302) * C152205 +
            ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                C152301) *
               C152072) *
              C151967 * C703 +
          ((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                C152301 +
            ((C7384 + C7385) * C152302 + C18129 * C152231) * C152205) *
               C152072 -
           (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C152285) *
              C151967 * C704 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) * C152205) *
               C152285 -
           (((C15993 + C15992) * C152231 + (C7390 + C7391) * C152302) *
                C152205 +
            ((C15268 + C15267) * C152231 + (C15266 + C15265) * C152302) *
                C152301) *
               C152072) *
              C151967 * C705 +
          ((((C15686 + C15687) * C152302 + (C15688 + C15689) * C152231) *
                C152301 +
            ((C40929 + C40930) * C152302 +
             (C6029 * C1495 - C6030 * C1483 - C6029 * C1496 + C6024 * C1519 +
              C6031 * C2624 - C6032 * C2623 - C6031 * C2625 + C151913 * C2626) *
                 C152231) *
                C152205) *
               C152072 -
           (((C40930 + C40929) * C152231 + (C6821 + C6820) * C152302) *
                C152205 +
            ((C15687 + C15686) * C152231 +
             (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
              C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                 C152302) *
                C152301) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
               C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                  C152302 +
              (C15253 + C15254) * C152231) *
                 C152301 +
             ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
                C152285 -
            ((C16552 * C152231 + C41576 * C152302) * C152205 +
             ((C15256 + C15255) * C152231 + (C15254 + C15253) * C152302) *
                 C152301) *
                C152072) *
               C1211 +
           (((C41575 * C152302 + C42323 * C152231) * C152301 +
             (C42324 * C152302 + C8080 * C152231) * C152205) *
                C152072 -
            ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
             (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
                C152285) *
               C1212 +
           (((C6378 * C152302 + C42324 * C152231) * C152301 +
             ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
                C152285 -
            (((C8078 + C8079) * C152231 + (C8077 + C8076) * C152302) * C152205 +
             (C42325 * C152231 + C8022 * C152302) * C152301) *
                C152072) *
               C152326) *
              C152270 +
          (((((C15259 + C15260) * C152302 + (C15261 + C15262) * C152231) *
                 C152301 +
             (C41577 * C152302 + C18129 * C152231) * C152205) *
                C152072 -
            ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
             ((C15260 + C15259) * C152231 +
              (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
               C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                  C152302) *
                 C152301) *
                C152285) *
               C1211 +
           ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
             ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
                C152285 -
            (((C9724 + C9725) * C152231 + C42970 * C152302) * C152205 +
             ((C9726 + C9727) * C152231 + C41578 * C152302) * C152301) *
                C152072) *
               C1212 +
           (((C8590 * C152302 + (C9725 + C9724) * C152231) * C152301 +
             ((C8605 + C8604) * C152302 +
              (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
               C6031 * C9696 - C6032 * C9695 - C6031 * C9697 +
               C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
             (C42970 * C152231 + C6379 * C152302) * C152301) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152302 +
            (C15253 + C15254) * C152231) *
               C152301 +
           ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) * C152205) *
              C151985 * C151967 * C129 -
          (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) * C152205 +
           ((C15260 + C15259) * C152231 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152302) *
               C152301) *
              C151985 * C151967 * C130 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152302 +
            (C15265 + C15266) * C152231) *
               C152301 +
           ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) * C152205) *
              C151985 * C151967 * C131 -
          (((C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063 +
             C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062) *
                C152231 +
            (C6821 + C6820) * C152302) *
               C152205 +
           ((C15687 + C15686) * C152231 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152302) *
               C152301) *
              C151985 * C151967 * C132 +
          (((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
             C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
                C152302 +
            (C6029 * C551 - C6030 * C531 - C6029 * C552 + C6024 * C567 +
             C6031 * C555 - C6032 * C533 - C6031 * C556 + C151913 * C569) *
                C152231) *
               C152301 +
           ((C6029 * C354 - C6030 * C334 - C6029 * C355 + C6024 * C370 +
             C6031 * C358 - C6032 * C336 - C6031 * C359 + C151913 * C372) *
                C152302 +
            (C6029 * C1055 - C6030 * C1045 - C6029 * C1056 + C6024 * C1063 +
             C6031 * C1057 - C6032 * C1046 - C6031 * C1058 + C151913 * C1064) *
                C152231) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + (C7383 + C7382) * C152231) * C152205) *
               C151985 * C152373 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            ((C7382 + C7383) * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C152357 +
           ((C6378 * C152302 + (C7381 + C7380) * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C151985 * C152326) *
              C323 +
          ((((C6366 + C6367) * C152302 + (C7384 + C7385) * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C152357 -
           (((C7385 + C7384) * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C152373 -
           (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
            ((C7387 + C7386) * C152231 + C6379 * C152302) * C152301) *
               C151985 * C152326) *
              C324 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + (C7391 + C7390) * C152231) * C152205) *
               C151985 * C152373 -
           (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
            ((C7390 + C7391) * C152231 + (C6373 + C6372) * C152302) * C152301) *
               C151985 * C152357 +
           ((C6380 * C152302 + (C7389 + C7388) * C152231) * C152301 +
            ((C6377 + C6376) * C152302 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152302 +
             (C15253 + C15254) * C152231) *
                C152301 +
            ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
               C151985 * C1211 -
           ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
            (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
               C151985 * C1212 +
           ((C6378 * C152302 + (C7381 + C7380) * C152231) * C152301 +
            ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
               C151985 * C152326) *
              C152370 +
          ((((C6366 + C6367) * C152302 + C41577 * C152231) * C152301 +
            ((C6368 + C6369) * C152302 + C8590 * C152231) * C152205) *
               C151985 * C1212 -
           ((C41578 * C152231 + (C6367 + C6366) * C152302) * C152205 +
            ((C15260 + C15259) * C152231 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152302) *
                C152301) *
               C151985 * C1211 -
           (((C8604 + C8605) * C152231 + (C6371 + C6370) * C152302) * C152205 +
            ((C7387 + C7386) * C152231 + C6379 * C152302) * C152301) *
               C151985 * C152326) *
              C152353 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152302 +
             (C15265 + C15266) * C152231) *
                C152301 +
            ((C6372 + C6373) * C152302 + C41579 * C152231) * C152205) *
               C151985 * C1211 -
           (((C7388 + C7389) * C152231 + (C6375 + C6374) * C152302) * C152205 +
            (C41580 * C152231 + (C6373 + C6372) * C152302) * C152301) *
               C151985 * C1212 +
           ((C6380 * C152302 + (C7389 + C7388) * C152231) * C152301 +
            ((C6377 + C6376) * C152302 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152302 +
            (C15253 + C15254) * C152231) *
               C152301 +
           ((C6360 + C6361) * C152302 + C41575 * C152231) * C152205) *
              C151985 * C1299 -
          ((C8022 * C152231 + (C6363 + C6362) * C152302) * C152205 +
           (C41576 * C152231 + (C6361 + C6360) * C152302) * C152301) *
              C151985 * C1300 +
          ((C6378 * C152302 + (C7381 + C7380) * C152231) * C152301 +
           ((C6365 + C6364) * C152302 + C8808 * C152231) * C152205) *
              C151985 * C1301 -
          (((C8822 + C8823) * C152231 + (C7775 + C7774) * C152302) * C152205 +
           ((C8077 + C8076) * C152231 + C7748 * C152302) * C152301) *
              C151985 * C1302 +
          ((C7778 * C152302 + (C8823 + C8822) * C152231) * C152301 +
           ((C7777 + C7776) * C152302 +
            (C6029 * C8801 - C6030 * C8799 - C6029 * C8802 + C6024 * C8805 +
             C6031 * C8803 - C6032 * C8800 - C6031 * C8804 + C151913 * C8806) *
                C152231) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152026 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152033 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C151985 * C3525) *
              C151944 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C152033 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152026 -
           ((C8294 + C8295) * C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C3525) *
              C151953 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152026 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152033 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152026 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152033 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C3525) *
              C151944 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152033 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152026 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C3525) *
              C151953 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C152026 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152033 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C152026 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C152033 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C3525) *
              C151944 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            C18129 * C14707) *
               C152155 * C151985 * C152033 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C152026 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C3525) *
              C151953 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C151985 * C152026 -
           ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
            (C6373 + C6372) * C14705) *
               C152155 * C151985 * C152033 +
           (C6380 * C14705 + (C7389 + C7388) * C14706 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C14707) *
               C152155 * C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152285 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152026 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152285) *
               C152033 +
           ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
             C7779 * C6028) *
                C152285 -
            ((C8822 + C8823) * C152167 * C6028 +
             (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
                C152072) *
               C3525) *
              C3181 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152285) *
               C152026 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152285 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152033 +
           ((C8599 * C6026 + (C8605 + C8604) * C152167 * C6027 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152167 * C6028) *
                C152072 -
            ((C8294 + C8295) * C152167 * C6028 +
             (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
                C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152285 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C152026 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152285) *
               C152033 +
           ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
             C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
             C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
             C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                C152167 * C152155 * C152285 -
            (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
             C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
             C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
             C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                C152167 * C152155 * C152072) *
               C3525) *
              C3181 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152285) *
               C152026 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152285 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152033 +
           ((C134 * C1507 - C135 * C1489 - C134 * C1508 + C121 * C1525 +
             C136 * C1505 - C137 * C1488 - C136 * C1506 + C122 * C1524 +
             C138 * C1503 - C139 * C1487 - C138 * C1504 + C123 * C1523 +
             C140 * C1866 - C141 * C1865 - C140 * C1867 + C124 * C1868) *
                C152167 * C152155 * C152072 -
            (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
             C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
             C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
             C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                C152167 * C152155 * C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C152285 -
            (C17805 * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152072) *
               C152026 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             C18559 * C14707) *
                C152155 * C152072 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C152285) *
               C152033 +
           ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
                C152155 * C152285 -
            ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
             C8022 * C14705) *
                C152155 * C152072) *
               C3525) *
              C3181 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             C18342 * C14707) *
                C152155 * C152072 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C152285) *
               C152026 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             C18129 * C14707) *
                C152155 * C152285 -
            ((C18142 + C18143) * C14707 + (C9726 + C9727) * C14706 +
             (C7385 + C7384) * C14705) *
                C152155 * C152072) *
               C152033 +
           ((C8590 * C14705 + (C9725 + C9724) * C14706 +
             (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
              C6031 * C9922 - C6032 * C9921 - C6031 * C9923 + C151913 * C9924) *
                 C14707) *
                C152155 * C152072 -
            ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
             C6379 * C14705) *
                C152155 * C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C151985 * C3041 -
               (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                   C152167 * C152155 * C151985 * C152030) *
                  C152379 +
              ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
                C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
                C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
                C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                   C152167 * C152155 * C151985 * C152030 -
               (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                   C152167 * C152155 * C151985 * C3041) *
                  C152372 +
              ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
                C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
                C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
                C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                   C152167 * C152155 * C151985 * C3041 -
               (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
                C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
                C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
                C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                   C152167 * C152155 * C151985 * C152030) *
                  C152355 +
              ((C134 * C338 - C135 * C326 - C134 * C339 + C121 * C362 +
                C136 * C354 - C137 * C334 - C136 * C355 + C122 * C370 +
                C138 * C358 - C139 * C336 - C138 * C359 + C123 * C372 +
                C140 * C708 - C141 * C707 - C140 * C709 + C124 * C710) *
                   C152167 * C152155 * C151985 * C152030 -
               (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
                C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
                C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
                C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
                   C152167 * C152155 * C151985 * C3041) *
                  C152330) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C151985 * C152380 -
               (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                   C152167 * C152155 * C151985 * C152376 +
               (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
                C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
                C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
                C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                   C152167 * C152155 * C151985 * C152362 -
               (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
                C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
                C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
                C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
                   C152167 * C152155 * C151985 * C152336) *
                  C3181 +
              ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
                C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
                C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
                C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                   C152167 * C152155 * C151985 * C152376 -
               (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                   C152167 * C152155 * C151985 * C152380 -
               (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
                C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
                C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
                C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                   C152167 * C152155 * C151985 * C152362 +
               (C134 * C1317 - C135 * C1307 - C134 * C1318 + C121 * C1331 +
                C136 * C1315 - C137 * C1306 - C136 * C1316 + C122 * C1330 +
                C138 * C1313 - C139 * C1305 - C138 * C1314 + C123 * C1329 +
                C140 * C1668 - C141 * C1667 - C140 * C1669 + C124 * C1670) *
                   C152167 * C152155 * C151985 * C152336) *
                  C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152374 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152359 +
            (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
             C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
             C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
             C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
                C152167 * C152155 * C152329) *
               C3041 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152359 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152374 -
            (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
             C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
             C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
             C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
                C152167 * C152155 * C152329) *
               C152030) *
              C3181 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152359 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152374 -
            (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
             C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
             C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
             C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
                C152167 * C152155 * C152329) *
               C3041 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152374 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152359 +
            (C134 * C1499 - C135 * C1485 - C134 * C1500 + C121 * C1521 +
             C136 * C1497 - C137 * C1484 - C136 * C1498 + C122 * C1520 +
             C138 * C1495 - C139 * C1483 - C138 * C1496 + C123 * C1519 +
             C140 * C2624 - C141 * C2623 - C140 * C2625 + C124 * C2626) *
                C152167 * C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C3041 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152030) *
              C152379 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C152030 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C3041) *
              C152372 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C3041 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152030) *
              C152355 +
          (((C6820 + C6821) * C152167 * C6026 +
            (C6822 + C6823) * C152167 * C6027 +
            (C6029 * C1313 - C6030 * C1305 - C6029 * C1314 + C6024 * C1329 +
             C6031 * C1668 - C6032 * C1667 - C6031 * C1669 + C151913 * C1670) *
                C152167 * C6028) *
               C151985 * C152030 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152380 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152376 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C151985 * C152362 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C151985 * C152336) *
              C3181 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C152376 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152380 -
           ((C8294 + C8295) * C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152362 +
           (C8289 * C6026 + (C8295 + C8294) * C152167 * C6027 +
            (C6029 * C7735 - C6030 * C7731 - C6029 * C7736 + C6024 * C7743 +
             C6031 * C8276 - C6032 * C8275 - C6031 * C8277 + C151913 * C8278) *
                C152167 * C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152374 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152359 +
            ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
              C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                 C152167 * C6026 +
             (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
                C152329) *
               C3041 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152359 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152374 -
            ((C8078 + C8079) * C152167 * C6028 +
             (C8075 + C8074) * C152167 * C6027 +
             (C8073 + C8072) * C152167 * C6026) *
                C152329) *
               C152030) *
              C3181 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152359 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152374 -
            ((C9724 + C9725) * C152167 * C6028 +
             (C9726 + C9727) * C152167 * C6027 +
             (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
              C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                 C152167 * C6026) *
                C152329) *
               C3041 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152374 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152359 +
            ((C9727 + C9726) * C152167 * C6026 +
             (C9725 + C9724) * C152167 * C6027 +
             (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
              C6031 * C9696 - C6032 * C9695 - C6031 * C9697 + C151913 * C9698) *
                 C152167 * C6028) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C3041 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C152030) *
              C152379 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            C18129 * C14707) *
               C152155 * C151985 * C152030 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C3041) *
              C152372 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C151985 * C3041 -
           ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
            (C6373 + C6372) * C14705) *
               C152155 * C151985 * C152030) *
              C152355 +
          (((C6820 + C6821) * C14705 +
            (C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062 +
             C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063) *
                C14706 +
            (C6029 * C1495 - C6030 * C1483 - C6029 * C1496 + C6024 * C1519 +
             C6031 * C2624 - C6032 * C2623 - C6031 * C2625 + C151913 * C2626) *
                C14707) *
               C152155 * C151985 * C152030 -
           ((C15689 + C15688) * C14707 + (C15687 + C15686) * C14706 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C14705) *
               C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C152380 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C152376 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C152362 -
           ((C8078 + C8079) * C14707 + (C8077 + C8076) * C14706 +
            C7748 * C14705) *
               C152155 * C151985 * C152336) *
              C3181 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            C18129 * C14707) *
               C152155 * C151985 * C152376 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C152380 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C152362 +
           (C8280 * C14705 + (C8605 + C8604) * C14706 +
            (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
             C6031 * C9696 - C6032 * C9695 - C6031 * C9697 + C151913 * C9698) *
                C14707) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C152374 -
            (C17805 * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152359 +
            (C15271 * C14705 + (C15258 + C15257) * C14706 + C17834 * C14707) *
                C152155 * C152329) *
               C3041 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             C18559 * C14707) *
                C152155 * C152359 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C152374 -
            ((C18572 + C18573) * C14707 + (C10154 + C10155) * C14706 +
             C16552 * C14705) *
                C152155 * C152329) *
               C152030) *
              C3181 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             C18342 * C14707) *
                C152155 * C152359 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C152374 -
            ((C18355 + C18356) * C14707 + (C15264 + C15263) * C14706 +
             C15272 * C14705) *
                C152155 * C152329) *
               C3041 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             C18129 * C14707) *
                C152155 * C152374 -
            ((C18142 + C18143) * C14707 + (C9726 + C9727) * C14706 +
             (C7385 + C7384) * C14705) *
                C152155 * C152359 +
            (C18129 * C14705 + (C18143 + C18142) * C14706 +
             (C6029 * C9393 - C6030 * C9384 - C6029 * C9394 + C6024 * C9402 +
              C6031 * C18125 - C6032 * C18124 - C6031 * C18126 +
              C151913 * C18127) *
                 C14707) *
                C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152285 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C3041 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152285) *
               C152030) *
              C151944 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152285) *
               C3041 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152285 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152030) *
              C151953 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152167 * C6026 +
             (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
                C152285 -
            ((C7388 + C7389) * C152167 * C6028 +
             (C7390 + C7391) * C152167 * C6027 +
             (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
              C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                 C152167 * C6026) *
                C152072) *
               C3041 +
           (((C7391 + C7390) * C152167 * C6026 +
             (C7389 + C7388) * C152167 * C6027 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152167 * C6028) *
                C152072 -
            ((C6376 + C6377) * C152167 * C6028 +
             (C6375 + C6374) * C152167 * C6027 +
             (C6373 + C6372) * C152167 * C6026) *
                C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152285 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C3041 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152285) *
               C152030) *
              C151944 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152285) *
               C3041 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152285 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152030) *
              C151953 +
          (((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
             C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
             C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
             C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                C152167 * C152155 * C152285 -
            (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
             C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
             C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
             C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                C152167 * C152155 * C152072) *
               C3041 +
           ((C134 * C1051 - C135 * C1043 - C134 * C1052 + C121 * C1061 +
             C136 * C1053 - C137 * C1044 - C136 * C1054 + C122 * C1062 +
             C138 * C1055 - C139 * C1045 - C138 * C1056 + C123 * C1063 +
             C140 * C1057 - C141 * C1046 - C140 * C1058 + C124 * C1064) *
                C152167 * C152155 * C152072 -
            (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
             C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
             C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
             C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                C152167 * C152155 * C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C152285 -
            (C17805 * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152072) *
               C3041 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             C18559 * C14707) *
                C152155 * C152072 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C152285) *
               C152030) *
              C151944 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             C18342 * C14707) *
                C152155 * C152072 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C152285) *
               C3041 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             C18129 * C14707) *
                C152155 * C152285 -
            ((C18142 + C18143) * C14707 + (C9726 + C9727) * C14706 +
             (C7385 + C7384) * C14705) *
                C152155 * C152072) *
               C152030) *
              C151953 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C14705 +
             (C15265 + C15266) * C14706 + C15273 * C14707) *
                C152155 * C152285 -
            ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
             (C15266 + C15265) * C14705) *
                C152155 * C152072) *
               C3041 +
           (((C7391 + C7390) * C14705 + (C15992 + C15993) * C14706 +
             (C6029 * C2903 - C6030 * C2897 - C6029 * C2904 + C6024 * C2909 +
              C6031 * C2905 - C6032 * C2898 - C6031 * C2906 + C151913 * C2910) *
                 C14707) *
                C152155 * C152072 -
            ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
             (C6373 + C6372) * C14705) *
                C152155 * C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152380 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152376 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152362 -
           (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
            C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
            C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
            C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
               C152167 * C152155 * C151985 * C152336) *
              C3181 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152376 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152380 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152362 +
           (C134 * C1317 - C135 * C1307 - C134 * C1318 + C121 * C1331 +
            C136 * C1315 - C137 * C1306 - C136 * C1316 + C122 * C1330 +
            C138 * C1313 - C139 * C1305 - C138 * C1314 + C123 * C1329 +
            C140 * C1668 - C141 * C1667 - C140 * C1669 + C124 * C1670) *
               C152167 * C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C3041 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152030) *
              C152379 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152030 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C3041) *
              C152372 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C3041 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152030) *
              C152355 +
          ((C134 * C338 - C135 * C326 - C134 * C339 + C121 * C362 +
            C136 * C354 - C137 * C334 - C136 * C355 + C122 * C370 +
            C138 * C358 - C139 * C336 - C138 * C359 + C123 * C372 +
            C140 * C708 - C141 * C707 - C140 * C709 + C124 * C710) *
               C152167 * C152155 * C151985 * C152030 -
           (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
            C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
            C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
            C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
               C152167 * C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C3041 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152030) *
              C152379 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C152030 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C3041) *
              C152372 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C3041 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152030) *
              C152355 +
          (((C6820 + C6821) * C152167 * C6026 +
            (C6822 + C6823) * C152167 * C6027 +
            (C6029 * C1313 - C6030 * C1305 - C6029 * C1314 + C6024 * C1329 +
             C6031 * C1668 - C6032 * C1667 - C6031 * C1669 + C151913 * C1670) *
                C152167 * C6028) *
               C151985 * C152030 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152380 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152376 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C151985 * C152362 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C151985 * C152336) *
              C3181 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C152376 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152380 -
           ((C8294 + C8295) * C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152362 +
           (C8289 * C6026 + (C8295 + C8294) * C152167 * C6027 +
            (C6029 * C7735 - C6030 * C7731 - C6029 * C7736 + C6024 * C7743 +
             C6031 * C8276 - C6032 * C8275 - C6031 * C8277 + C151913 * C8278) *
                C152167 * C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C3041 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C152030) *
              C152379 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            C18129 * C14707) *
               C152155 * C151985 * C152030 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C3041) *
              C152372 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C151985 * C3041 -
           ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
            (C6373 + C6372) * C14705) *
               C152155 * C151985 * C152030) *
              C152355 +
          (((C6820 + C6821) * C14705 +
            (C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062 +
             C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063) *
                C14706 +
            (C6029 * C1495 - C6030 * C1483 - C6029 * C1496 + C6024 * C1519 +
             C6031 * C2624 - C6032 * C2623 - C6031 * C2625 + C151913 * C2626) *
                C14707) *
               C152155 * C151985 * C152030 -
           ((C15689 + C15688) * C14707 + (C15687 + C15686) * C14706 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C14705) *
               C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C152380 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C152376 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C152362 -
           ((C8078 + C8079) * C14707 + (C8077 + C8076) * C14706 +
            C7748 * C14705) *
               C152155 * C151985 * C152336) *
              C3181 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            C18129 * C14707) *
               C152155 * C151985 * C152376 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C152380 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C152362 +
           (C8280 * C14705 + (C8605 + C8604) * C14706 +
            (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
             C6031 * C9696 - C6032 * C9695 - C6031 * C9697 + C151913 * C9698) *
                C14707) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C4047 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152026 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C4047) *
               C152033 +
           ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
             C7779 * C6028) *
                C4047 -
            ((C8822 + C8823) * C152167 * C6028 +
             (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
                C152072) *
               C3525) *
              C152270 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C4047) *
               C152026 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C4047 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152033 +
           ((C8599 * C6026 + (C8605 + C8604) * C152167 * C6027 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152167 * C6028) *
                C152072 -
            ((C8294 + C8295) * C152167 * C6028 +
             (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
                C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C4047 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C152026 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C4047) *
               C152033 +
           ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
             C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
             C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
             C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                C152167 * C152155 * C4047 -
            (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
             C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
             C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
             C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                C152167 * C152155 * C152072) *
               C3525) *
              C152270 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C4047) *
               C152026 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C4047 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152033 +
           ((C134 * C1507 - C135 * C1489 - C134 * C1508 + C121 * C1525 +
             C136 * C1505 - C137 * C1488 - C136 * C1506 + C122 * C1524 +
             C138 * C1503 - C139 * C1487 - C138 * C1504 + C123 * C1523 +
             C140 * C1866 - C141 * C1865 - C140 * C1867 + C124 * C1868) *
                C152167 * C152155 * C152072 -
            (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
             C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
             C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
             C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                C152167 * C152155 * C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C4047 -
            (C17805 * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152072) *
               C152026 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             C18559 * C14707) *
                C152155 * C152072 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C4047) *
               C152033 +
           ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
                C152155 * C4047 -
            ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
             C8022 * C14705) *
                C152155 * C152072) *
               C3525) *
              C152270 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             C18342 * C14707) *
                C152155 * C152072 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C4047) *
               C152026 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             C18129 * C14707) *
                C152155 * C4047 -
            ((C18142 + C18143) * C14707 + (C9726 + C9727) * C14706 +
             (C7385 + C7384) * C14705) *
                C152155 * C152072) *
               C152033 +
           ((C8590 * C14705 + (C9725 + C9724) * C14706 +
             (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
              C6031 * C9922 - C6032 * C9921 - C6031 * C9923 + C151913 * C9924) *
                 C14707) *
                C152155 * C152072 -
            ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
             C6379 * C14705) *
                C152155 * C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152068 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152075 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C4719) *
              C152026 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C152075 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C152068 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C4719) *
              C152033 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C152068 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152075 +
           (C8081 * C6026 + (C8079 + C8078) * C152167 * C6027 +
            (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
             C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                C152167 * C6028) *
               C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152068 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152075 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C4719) *
              C152026 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152075 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C152068 -
           (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
            C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
            C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
            C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
               C152167 * C152155 * C4719) *
              C152033 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C152068 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C152075 +
           (C134 * C1511 - C135 * C1491 - C134 * C1512 + C121 * C1527 +
            C136 * C1513 - C137 * C1492 - C136 * C1514 + C122 * C1528 +
            C138 * C1515 - C139 * C1493 - C138 * C1516 + C123 * C1529 +
            C140 * C1517 - C141 * C1494 - C140 * C1518 + C124 * C1530) *
               C152167 * C152155 * C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C152068 -
           (C17805 * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152075 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 + C17834 * C14707) *
               C152155 * C4719) *
              C152026 +
          (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
            C18559 * C14707) *
               C152155 * C152075 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C152068 -
           ((C18572 + C18573) * C14707 + (C10154 + C10155) * C14706 +
            C16552 * C14705) *
               C152155 * C4719) *
              C152033 +
          ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C152068 -
           ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
            C8022 * C14705) *
               C152155 * C152075 +
           (C8080 * C14705 + (C10153 + C10152) * C14706 +
            (C6029 * C9395 - C6030 * C9385 - C6029 * C9396 + C6024 * C9403 +
             C6031 * C9397 - C6032 * C9386 - C6031 * C9398 + C151913 * C9404) *
                C14707) *
               C152155 * C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                 C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                 C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                 C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                    C152167 * C152155 * C4047 -
                (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
                 C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
                 C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
                 C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                    C152167 * C152155 * C152072) *
                   C3041 +
               ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
                 C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
                 C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
                 C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                    C152167 * C152155 * C152072 -
                (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                 C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                 C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                 C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                    C152167 * C152155 * C4047) *
                   C152030) *
                  C152370 +
              (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
                 C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
                 C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
                 C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                    C152167 * C152155 * C152072 -
                (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                 C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                 C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                 C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                    C152167 * C152155 * C4047) *
                   C3041 +
               ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
                 C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
                 C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
                 C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                    C152167 * C152155 * C4047 -
                (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
                 C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
                 C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
                 C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                    C152167 * C152155 * C152072) *
                   C152030) *
                  C152353 +
              (((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
                 C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
                 C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
                 C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                    C152167 * C152155 * C4047 -
                (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
                 C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
                 C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
                 C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                    C152167 * C152155 * C152072) *
                   C3041 +
               ((C134 * C1051 - C135 * C1043 - C134 * C1052 + C121 * C1061 +
                 C136 * C1053 - C137 * C1044 - C136 * C1054 + C122 * C1062 +
                 C138 * C1055 - C139 * C1045 - C138 * C1056 + C123 * C1063 +
                 C140 * C1057 - C141 * C1046 - C140 * C1058 + C124 * C1064) *
                    C152167 * C152155 * C152072 -
                (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
                 C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
                 C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
                 C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                    C152167 * C152155 * C4047) *
                   C152030) *
                  C152320) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C4047 -
               (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
                C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
                C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
                C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                   C152167 * C152155 * C152072) *
                  C152380 +
              ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
                C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
                C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
                C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                   C152167 * C152155 * C152072 -
               (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                   C152167 * C152155 * C4047) *
                  C152376 +
              ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
                C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
                C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
                C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                   C152167 * C152155 * C4047 -
               (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
                C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
                C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
                C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                   C152167 * C152155 * C152072) *
                  C152362 +
              ((C134 * C2003 - C135 * C1999 - C134 * C2004 + C121 * C2011 +
                C136 * C2005 - C137 * C2000 - C136 * C2006 + C122 * C2012 +
                C138 * C2007 - C139 * C2001 - C138 * C2008 + C123 * C2013 +
                C140 * C2009 - C141 * C2002 - C140 * C2010 + C124 * C2014) *
                   C152167 * C152155 * C152072 -
               (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
                C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
                C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
                C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
                   C152167 * C152155 * C4047) *
                  C152336) *
             C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152381 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152378 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152365 -
           (C140 * C2405 - C141 * C2397 - C140 * C2406 + C124 * C2421 +
            C138 * C2407 - C139 * C2398 - C138 * C2408 + C123 * C2422 +
            C136 * C2409 - C137 * C2399 - C136 * C2410 + C122 * C2423 +
            C134 * C2411 - C135 * C2400 - C134 * C2412 + C121 * C2424) *
               C152167 * C152155 * C152342) *
              C3041 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152378 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C152381 -
           (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
            C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
            C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
            C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
               C152167 * C152155 * C152365 +
           (C134 * C2899 - C135 * C2895 - C134 * C2900 + C121 * C2907 +
            C136 * C2901 - C137 * C2896 - C136 * C2902 + C122 * C2908 +
            C138 * C2903 - C139 * C2897 - C138 * C2904 + C123 * C2909 +
            C140 * C2905 - C141 * C2898 - C140 * C2906 + C124 * C2910) *
               C152167 * C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C4047 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C3041 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C4047) *
               C152030) *
              C152370 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C4047) *
               C3041 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C4047 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152030) *
              C152353 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152167 * C6026 +
             (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
                C4047 -
            ((C7388 + C7389) * C152167 * C6028 +
             (C7390 + C7391) * C152167 * C6027 +
             (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
              C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                 C152167 * C6026) *
                C152072) *
               C3041 +
           (((C7391 + C7390) * C152167 * C6026 +
             (C7389 + C7388) * C152167 * C6027 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152167 * C6028) *
                C152072 -
            ((C6376 + C6377) * C152167 * C6028 +
             (C6375 + C6374) * C152167 * C6027 +
             (C6373 + C6372) * C152167 * C6026) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C4047 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C152380 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C152072 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C4047) *
              C152376 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C4047 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152072) *
              C152362 +
          ((C8817 * C6026 + (C8823 + C8822) * C152167 * C6027 +
            (C6029 * C8801 - C6030 * C8799 - C6029 * C8802 + C6024 * C8805 +
             C6031 * C8803 - C6032 * C8800 - C6031 * C8804 + C151913 * C8806) *
                C152167 * C6028) *
               C152072 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152381 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152378 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152365 -
           ((C10152 + C10153) * C152167 * C6028 +
            (C10154 + C10155) * C152167 * C6027 +
            (C6031 * C2409 - C6032 * C2399 - C6031 * C2410 + C151913 * C2423 +
             C6029 * C2411 - C6030 * C2400 - C6029 * C2412 + C6024 * C2424) *
                C152167 * C6026) *
               C152342) *
              C3041 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C152378 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C152381 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C152365 +
           ((C10155 + C10154) * C152167 * C6026 +
            (C10153 + C10152) * C152167 * C6027 +
            (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 + C6024 * C10125 +
             C6031 * C10123 - C6032 * C10120 - C6031 * C10124 +
             C151913 * C10126) *
                C152167 * C6028) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C4047 -
            (C17805 * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152072) *
               C3041 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             C18559 * C14707) *
                C152155 * C152072 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C4047) *
               C152030) *
              C152370 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             C18342 * C14707) *
                C152155 * C152072 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C4047) *
               C3041 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             C18129 * C14707) *
                C152155 * C4047 -
            ((C18142 + C18143) * C14707 + (C9726 + C9727) * C14706 +
             (C7385 + C7384) * C14705) *
                C152155 * C152072) *
               C152030) *
              C152353 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C14705 +
             (C15265 + C15266) * C14706 + C15273 * C14707) *
                C152155 * C4047 -
            ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
             (C15266 + C15265) * C14705) *
                C152155 * C152072) *
               C3041 +
           (((C7391 + C7390) * C14705 + (C15992 + C15993) * C14706 +
             (C6029 * C2903 - C6030 * C2897 - C6029 * C2904 + C6024 * C2909 +
              C6031 * C2905 - C6032 * C2898 - C6031 * C2906 + C151913 * C2910) *
                 C14707) *
                C152155 * C152072 -
            ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
             (C6373 + C6372) * C14705) *
                C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C4047 -
           (C17805 * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152072) *
              C152380 +
          (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
            C18559 * C14707) *
               C152155 * C152072 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C4047) *
              C152376 +
          ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C4047 -
           ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
            C8022 * C14705) *
               C152155 * C152072) *
              C152362 +
          ((C8808 * C14705 + (C8079 + C8078) * C14706 +
            (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 + C6024 * C10125 +
             C6031 * C10123 - C6032 * C10120 - C6031 * C10124 +
             C151913 * C10126) *
                C14707) *
               C152155 * C152072 -
           ((C8078 + C8079) * C14707 + (C8077 + C8076) * C14706 +
            C7748 * C14705) *
               C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C152381 -
           (C17805 * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152378 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 + C17834 * C14707) *
               C152155 * C152365 -
           ((C17832 + C17833) * C14707 + (C17831 + C17830) * C14706 +
            C17805 * C14705) *
               C152155 * C152342) *
              C3041 +
          (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
            C18559 * C14707) *
               C152155 * C152378 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C152381 -
           ((C18572 + C18573) * C14707 + (C10154 + C10155) * C14706 +
            C16552 * C14705) *
               C152155 * C152365 +
           (C18559 * C14705 + (C18573 + C18572) * C14706 +
            (C6029 * C18552 - C6030 * C18550 - C6029 * C18553 + C6024 * C18556 +
             C6031 * C18554 - C6032 * C18551 - C6031 * C18555 +
             C151913 * C18557) *
                C14707) *
               C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152068 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152075 +
            ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
              C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                 C152167 * C6026 +
             (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
                C4719) *
               C3041 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152075 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152068 -
            ((C8078 + C8079) * C152167 * C6028 +
             (C8075 + C8074) * C152167 * C6027 +
             (C8073 + C8072) * C152167 * C6026) *
                C4719) *
               C152030) *
              C152270 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152075 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152068 -
            ((C9724 + C9725) * C152167 * C6028 +
             (C9726 + C9727) * C152167 * C6027 +
             (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
              C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                 C152167 * C6026) *
                C4719) *
               C3041 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152068 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152075 +
            ((C9727 + C9726) * C152167 * C6026 +
             (C9725 + C9724) * C152167 * C6027 +
             (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
              C6031 * C9696 - C6032 * C9695 - C6031 * C9697 + C151913 * C9698) *
                 C152167 * C6028) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152068 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152075 +
            (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
             C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
             C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
             C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
                C152167 * C152155 * C4719) *
               C3041 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152075 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152068 -
            (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
             C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
             C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
             C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
                C152167 * C152155 * C4719) *
               C152030) *
              C152270 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152075 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152068 -
            (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
             C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
             C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
             C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
                C152167 * C152155 * C4719) *
               C3041 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152068 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152075 +
            (C134 * C1499 - C135 * C1485 - C134 * C1500 + C121 * C1521 +
             C136 * C1497 - C137 * C1484 - C136 * C1498 + C122 * C1520 +
             C138 * C1495 - C139 * C1483 - C138 * C1496 + C123 * C1519 +
             C140 * C2624 - C141 * C2623 - C140 * C2625 + C124 * C2626) *
                C152167 * C152155 * C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C152068 -
            (C17805 * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152075 +
            (C15271 * C14705 + (C15258 + C15257) * C14706 + C17834 * C14707) *
                C152155 * C4719) *
               C3041 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             C18559 * C14707) *
                C152155 * C152075 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C152068 -
            ((C18572 + C18573) * C14707 + (C10154 + C10155) * C14706 +
             C16552 * C14705) *
                C152155 * C4719) *
               C152030) *
              C152270 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             C18342 * C14707) *
                C152155 * C152075 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C152068 -
            ((C18355 + C18356) * C14707 + (C15264 + C15263) * C14706 +
             C15272 * C14705) *
                C152155 * C4719) *
               C3041 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             C18129 * C14707) *
                C152155 * C152068 -
            ((C18142 + C18143) * C14707 + (C9726 + C9727) * C14706 +
             (C7385 + C7384) * C14705) *
                C152155 * C152075 +
            (C18129 * C14705 + (C18143 + C18142) * C14706 +
             (C6029 * C9393 - C6030 * C9384 - C6029 * C9394 + C6024 * C9402 +
              C6031 * C18125 - C6032 * C18124 - C6031 * C18126 +
              C151913 * C18127) *
                 C14707) *
                C152155 * C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C4047 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152072) *
              C152380 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152072 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C4047) *
              C152376 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C4047 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C152072) *
              C152362 +
          ((C134 * C2003 - C135 * C1999 - C134 * C2004 + C121 * C2011 +
            C136 * C2005 - C137 * C2000 - C136 * C2006 + C122 * C2012 +
            C138 * C2007 - C139 * C2001 - C138 * C2008 + C123 * C2013 +
            C140 * C2009 - C141 * C2002 - C140 * C2010 + C124 * C2014) *
               C152167 * C152155 * C152072 -
           (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
            C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
            C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
            C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
               C152167 * C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C4047 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C3041 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C4047) *
               C152030) *
              C152370 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C4047) *
               C3041 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C4047 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152030) *
              C152353 +
          (((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
             C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
             C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
             C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                C152167 * C152155 * C4047 -
            (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
             C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
             C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
             C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                C152167 * C152155 * C152072) *
               C3041 +
           ((C134 * C1051 - C135 * C1043 - C134 * C1052 + C121 * C1061 +
             C136 * C1053 - C137 * C1044 - C136 * C1054 + C122 * C1062 +
             C138 * C1055 - C139 * C1045 - C138 * C1056 + C123 * C1063 +
             C140 * C1057 - C141 * C1046 - C140 * C1058 + C124 * C1064) *
                C152167 * C152155 * C152072 -
            (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
             C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
             C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
             C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                C152167 * C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C4047 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C3041 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C4047) *
               C152030) *
              C152370 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C4047) *
               C3041 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C4047 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152030) *
              C152353 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152167 * C6026 +
             (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
                C4047 -
            ((C7388 + C7389) * C152167 * C6028 +
             (C7390 + C7391) * C152167 * C6027 +
             (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
              C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                 C152167 * C6026) *
                C152072) *
               C3041 +
           (((C7391 + C7390) * C152167 * C6026 +
             (C7389 + C7388) * C152167 * C6027 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152167 * C6028) *
                C152072 -
            ((C6376 + C6377) * C152167 * C6028 +
             (C6375 + C6374) * C152167 * C6027 +
             (C6373 + C6372) * C152167 * C6026) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C4047 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C152380 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C152072 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C4047) *
              C152376 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C4047 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152072) *
              C152362 +
          ((C8817 * C6026 + (C8823 + C8822) * C152167 * C6027 +
            (C6029 * C8801 - C6030 * C8799 - C6029 * C8802 + C6024 * C8805 +
             C6031 * C8803 - C6032 * C8800 - C6031 * C8804 + C151913 * C8806) *
                C152167 * C6028) *
               C152072 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C4047 -
            (C17805 * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152072) *
               C3041 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             C18559 * C14707) *
                C152155 * C152072 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C4047) *
               C152030) *
              C152370 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             C18342 * C14707) *
                C152155 * C152072 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C4047) *
               C3041 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             C18129 * C14707) *
                C152155 * C4047 -
            ((C18142 + C18143) * C14707 + (C9726 + C9727) * C14706 +
             (C7385 + C7384) * C14705) *
                C152155 * C152072) *
               C152030) *
              C152353 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C14705 +
             (C15265 + C15266) * C14706 + C15273 * C14707) *
                C152155 * C4047 -
            ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
             (C15266 + C15265) * C14705) *
                C152155 * C152072) *
               C3041 +
           (((C7391 + C7390) * C14705 + (C15992 + C15993) * C14706 +
             (C6029 * C2903 - C6030 * C2897 - C6029 * C2904 + C6024 * C2909 +
              C6031 * C2905 - C6032 * C2898 - C6031 * C2906 + C151913 * C2910) *
                 C14707) *
                C152155 * C152072 -
            ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
             (C6373 + C6372) * C14705) *
                C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C4047 -
           (C17805 * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152072) *
              C152380 +
          (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
            C18559 * C14707) *
               C152155 * C152072 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C4047) *
              C152376 +
          ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C4047 -
           ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
            C8022 * C14705) *
               C152155 * C152072) *
              C152362 +
          ((C8808 * C14705 + (C8079 + C8078) * C14706 +
            (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 + C6024 * C10125 +
             C6031 * C10123 - C6032 * C10120 - C6031 * C10124 +
             C151913 * C10126) *
                C14707) *
               C152155 * C152072 -
           ((C8078 + C8079) * C14707 + (C8077 + C8076) * C14706 +
            C7748 * C14705) *
               C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C151985 * C152284 -
               (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                   C152167 * C152155 * C151985 * C152030) *
                  C703 +
              ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
                C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
                C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
                C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                   C152167 * C152155 * C151985 * C152030 -
               (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                   C152167 * C152155 * C151985 * C152284) *
                  C704 +
              ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
                C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
                C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
                C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                   C152167 * C152155 * C151985 * C152284 -
               (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
                C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
                C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
                C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                   C152167 * C152155 * C151985 * C152030) *
                  C705 +
              ((C134 * C338 - C135 * C326 - C134 * C339 + C121 * C362 +
                C136 * C354 - C137 * C334 - C136 * C355 + C122 * C370 +
                C138 * C358 - C139 * C336 - C138 * C359 + C123 * C372 +
                C140 * C708 - C141 * C707 - C140 * C709 + C124 * C710) *
                   C152167 * C152155 * C151985 * C152030 -
               (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
                C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
                C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
                C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
                   C152167 * C152155 * C151985 * C152284) *
                  C152330) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C151985 * C1661 -
               (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                   C152167 * C152155 * C151985 * C1662 +
               (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
                C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
                C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
                C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                   C152167 * C152155 * C151985 * C1663 -
               (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
                C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
                C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
                C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
                   C152167 * C152155 * C151985 * C152336) *
                  C152270 +
              ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
                C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
                C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
                C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                   C152167 * C152155 * C151985 * C1662 -
               (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                   C152167 * C152155 * C151985 * C1661 -
               (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
                C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
                C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
                C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                   C152167 * C152155 * C151985 * C1663 +
               (C134 * C1317 - C135 * C1307 - C134 * C1318 + C121 * C1331 +
                C136 * C1315 - C137 * C1306 - C136 * C1316 + C122 * C1330 +
                C138 * C1313 - C139 * C1305 - C138 * C1314 + C123 * C1329 +
                C140 * C1668 - C141 * C1667 - C140 * C1669 + C124 * C1670) *
                   C152167 * C152155 * C151985 * C152336) *
                  C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C2161 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C2162 +
            (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
             C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
             C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
             C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
                C152167 * C152155 * C152329) *
               C152284 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C2162 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C2161 -
            (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
             C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
             C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
             C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
                C152167 * C152155 * C152329) *
               C152030) *
              C152270 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C2162 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C2161 -
            (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
             C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
             C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
             C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
                C152167 * C152155 * C152329) *
               C152284 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C2161 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C2162 +
            (C134 * C1499 - C135 * C1485 - C134 * C1500 + C121 * C1521 +
             C136 * C1497 - C137 * C1484 - C136 * C1498 + C122 * C1520 +
             C138 * C1495 - C139 * C1483 - C138 * C1496 + C123 * C1519 +
             C140 * C2624 - C141 * C2623 - C140 * C2625 + C124 * C2626) *
                C152167 * C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152284 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152030) *
              C703 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C152030 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152284) *
              C704 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152284 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152030) *
              C705 +
          (((C6820 + C6821) * C152167 * C6026 +
            (C6822 + C6823) * C152167 * C6027 +
            (C6029 * C1313 - C6030 * C1305 - C6029 * C1314 + C6024 * C1329 +
             C6031 * C1668 - C6032 * C1667 - C6031 * C1669 + C151913 * C1670) *
                C152167 * C6028) *
               C151985 * C152030 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C1661 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C1662 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C151985 * C1663 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C151985 * C152336) *
              C152270 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C1662 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C1661 -
           ((C8294 + C8295) * C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C1663 +
           (C8289 * C6026 + (C8295 + C8294) * C152167 * C6027 +
            (C6029 * C7735 - C6030 * C7731 - C6029 * C7736 + C6024 * C7743 +
             C6031 * C8276 - C6032 * C8275 - C6031 * C8277 + C151913 * C8278) *
                C152167 * C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C2161 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C2162 +
            ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
              C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                 C152167 * C6026 +
             (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
                C152329) *
               C152284 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C2162 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C2161 -
            ((C8078 + C8079) * C152167 * C6028 +
             (C8075 + C8074) * C152167 * C6027 +
             (C8073 + C8072) * C152167 * C6026) *
                C152329) *
               C152030) *
              C152270 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C2162 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C2161 -
            ((C9724 + C9725) * C152167 * C6028 +
             (C9726 + C9727) * C152167 * C6027 +
             (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
              C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                 C152167 * C6026) *
                C152329) *
               C152284 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C2161 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C2162 +
            ((C9727 + C9726) * C152167 * C6026 +
             (C9725 + C9724) * C152167 * C6027 +
             (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
              C6031 * C9696 - C6032 * C9695 - C6031 * C9697 + C151913 * C9698) *
                 C152167 * C6028) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C152284 -
           ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C152030) *
              C703 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            (C9727 + C9726) * C14707) *
               C152155 * C151985 * C152030 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C152284) *
              C704 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C151985 * C152284 -
           ((C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519 +
             C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520) *
                C14707 +
            (C7390 + C7391) * C14706 + (C6373 + C6372) * C14705) *
               C152155 * C151985 * C152030) *
              C705 +
          (((C6820 + C6821) * C14705 +
            (C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062 +
             C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063) *
                C14706 +
            (C6029 * C1495 - C6030 * C1483 - C6029 * C1496 + C6024 * C1519 +
             C6031 * C2624 - C6032 * C2623 - C6031 * C2625 + C151913 * C2626) *
                C14707) *
               C152155 * C151985 * C152030 -
           ((C6031 * C553 - C6032 * C532 - C6031 * C554 + C151913 * C568 +
             C6029 * C549 - C6030 * C530 - C6029 * C550 + C6024 * C566) *
                C14707 +
            (C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567 +
             C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559) *
                C14706 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C14705) *
               C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C1661 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C1662 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C1663 -
           ((C8078 + C8079) * C14707 + (C8077 + C8076) * C14706 +
            C7748 * C14705) *
               C152155 * C151985 * C152336) *
              C152270 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            (C9727 + C9726) * C14707) *
               C152155 * C151985 * C1662 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C1661 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C1663 +
           (C8280 * C14705 + (C8605 + C8604) * C14706 +
            (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
             C6031 * C9696 - C6032 * C9695 - C6031 * C9697 + C151913 * C9698) *
                C14707) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C2161 -
            (C17805 * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C2162 +
            (C15271 * C14705 + (C15258 + C15257) * C14706 + C17834 * C14707) *
                C152155 * C152329) *
               C152284 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             (C10155 + C10154) * C14707) *
                C152155 * C2162 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C2161 -
            ((C6031 * C9393 - C6032 * C9384 - C6031 * C9394 + C151913 * C9402 +
              C6029 * C9391 - C6030 * C9383 - C6029 * C9392 + C6024 * C9401) *
                 C14707 +
             (C10154 + C10155) * C14706 + C16552 * C14705) *
                C152155 * C152329) *
               C152030) *
              C152270 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             (C15263 + C15264) * C14707) *
                C152155 * C2162 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C2161 -
            ((C6031 * C2417 - C6032 * C2403 - C6031 * C2418 + C151913 * C2427 +
              C6029 * C2415 - C6030 * C2402 - C6029 * C2416 + C6024 * C2426) *
                 C14707 +
             (C15264 + C15263) * C14706 + C15272 * C14705) *
                C152155 * C152329) *
               C152284 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             C18129 * C14707) *
                C152155 * C2161 -
            ((C18142 + C18143) * C14707 + (C9726 + C9727) * C14706 +
             (C7385 + C7384) * C14705) *
                C152155 * C2162 +
            (C18129 * C14705 + (C18143 + C18142) * C14706 +
             (C6029 * C9393 - C6030 * C9384 - C6029 * C9394 + C6024 * C9402 +
              C6031 * C18125 - C6032 * C18124 - C6031 * C18126 +
              C151913 * C18127) *
                 C14707) *
                C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                 C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                 C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                 C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                    C152167 * C152155 * C152285 -
                (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
                 C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
                 C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
                 C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                    C152167 * C152155 * C152072) *
                   C152284 +
               ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
                 C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
                 C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
                 C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                    C152167 * C152155 * C152072 -
                (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                 C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                 C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                 C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                    C152167 * C152155 * C152285) *
                   C152030) *
                  C323 +
              (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
                 C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
                 C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
                 C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                    C152167 * C152155 * C152072 -
                (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                 C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                 C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                 C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                    C152167 * C152155 * C152285) *
                   C152284 +
               ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
                 C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
                 C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
                 C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                    C152167 * C152155 * C152285 -
                (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
                 C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
                 C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
                 C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                    C152167 * C152155 * C152072) *
                   C152030) *
                  C324 +
              (((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
                 C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
                 C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
                 C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                    C152167 * C152155 * C152285 -
                (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
                 C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
                 C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
                 C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                    C152167 * C152155 * C152072) *
                   C152284 +
               ((C134 * C1051 - C135 * C1043 - C134 * C1052 + C121 * C1061 +
                 C136 * C1053 - C137 * C1044 - C136 * C1054 + C122 * C1062 +
                 C138 * C1055 - C139 * C1045 - C138 * C1056 + C123 * C1063 +
                 C140 * C1057 - C141 * C1046 - C140 * C1058 + C124 * C1064) *
                    C152167 * C152155 * C152072 -
                (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
                 C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
                 C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
                 C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                    C152167 * C152155 * C152285) *
                   C152030) *
                  C152320) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C152285 -
               (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
                C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
                C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
                C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                   C152167 * C152155 * C152072) *
                  C1661 +
              ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
                C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
                C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
                C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                   C152167 * C152155 * C152072 -
               (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                   C152167 * C152155 * C152285) *
                  C1662 +
              ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
                C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
                C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
                C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                   C152167 * C152155 * C152285 -
               (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
                C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
                C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
                C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                   C152167 * C152155 * C152072) *
                  C1663 +
              ((C134 * C2003 - C135 * C1999 - C134 * C2004 + C121 * C2011 +
                C136 * C2005 - C137 * C2000 - C136 * C2006 + C122 * C2012 +
                C138 * C2007 - C139 * C2001 - C138 * C2008 + C123 * C2013 +
                C140 * C2009 - C141 * C2002 - C140 * C2010 + C124 * C2014) *
                   C152167 * C152155 * C152072 -
               (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
                C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
                C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
                C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
                   C152167 * C152155 * C152285) *
                  C152336) *
             C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C2757 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C2758 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C2759 -
           (C140 * C2405 - C141 * C2397 - C140 * C2406 + C124 * C2421 +
            C138 * C2407 - C139 * C2398 - C138 * C2408 + C123 * C2422 +
            C136 * C2409 - C137 * C2399 - C136 * C2410 + C122 * C2423 +
            C134 * C2411 - C135 * C2400 - C134 * C2412 + C121 * C2424) *
               C152167 * C152155 * C152342) *
              C152284 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C2758 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C2757 -
           (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
            C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
            C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
            C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
               C152167 * C152155 * C2759 +
           (C134 * C2899 - C135 * C2895 - C134 * C2900 + C121 * C2907 +
            C136 * C2901 - C137 * C2896 - C136 * C2902 + C122 * C2908 +
            C138 * C2903 - C139 * C2897 - C138 * C2904 + C123 * C2909 +
            C140 * C2905 - C141 * C2898 - C140 * C2906 + C124 * C2910) *
               C152167 * C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152285 -
            ((C7380 + C7381) * C152167 * C6028 +
             (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152284 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 +
             (C6029 * C2003 - C6030 * C1999 - C6029 * C2004 + C6024 * C2011 +
              C6031 * C2005 - C6032 * C2000 - C6031 * C2006 + C151913 * C2012) *
                 C152167 * C6028) *
                C152072 -
            ((C6364 + C6365) * C152167 * C6028 +
             (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152285) *
               C152030) *
              C323 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 +
             (C7386 + C7387) * C152167 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152285) *
               C152284 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 +
             (C6370 + C6371) * C152167 * C6028) *
                C152285 -
            ((C6031 * C2007 - C6032 * C2001 - C6031 * C2008 + C151913 * C2013 +
              C6029 * C2005 - C6030 * C2000 - C6029 * C2006 + C6024 * C2012) *
                 C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152030) *
              C324 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152167 * C6026 +
             (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
                C152285 -
            ((C7388 + C7389) * C152167 * C6028 +
             (C7390 + C7391) * C152167 * C6027 +
             (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
              C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                 C152167 * C6026) *
                C152072) *
               C152284 +
           (((C7391 + C7390) * C152167 * C6026 +
             (C7389 + C7388) * C152167 * C6027 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152167 * C6028) *
                C152072 -
            ((C6376 + C6377) * C152167 * C6028 +
             (C6375 + C6374) * C152167 * C6027 +
             (C6373 + C6372) * C152167 * C6026) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152285 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C1661 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C152072 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C152285) *
              C1662 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C152285 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152072) *
              C1663 +
          ((C8817 * C6026 + (C8823 + C8822) * C152167 * C6027 +
            (C6029 * C8801 - C6030 * C8799 - C6029 * C8802 + C6024 * C8805 +
             C6031 * C8803 - C6032 * C8800 - C6031 * C8804 + C151913 * C8806) *
                C152167 * C6028) *
               C152072 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C2757 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C2758 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C2759 -
           ((C10152 + C10153) * C152167 * C6028 +
            (C10154 + C10155) * C152167 * C6027 +
            (C6031 * C2409 - C6032 * C2399 - C6031 * C2410 + C151913 * C2423 +
             C6029 * C2411 - C6030 * C2400 - C6029 * C2412 + C6024 * C2424) *
                C152167 * C6026) *
               C152342) *
              C152284 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C2758 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C2757 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C2759 +
           ((C10155 + C10154) * C152167 * C6026 +
            (C10153 + C10152) * C152167 * C6027 +
            (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 + C6024 * C10125 +
             C6031 * C10123 - C6032 * C10120 - C6031 * C10124 +
             C151913 * C10126) *
                C152167 * C6028) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C152285 -
            ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152072) *
               C152284 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             (C10155 + C10154) * C14707) *
                C152155 * C152072 -
            ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C152285) *
               C152030) *
              C323 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             (C15263 + C15264) * C14707) *
                C152155 * C152072 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C152285) *
               C152284 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             (C9727 + C9726) * C14707) *
                C152155 * C152285 -
            ((C6031 * C2903 - C6032 * C2897 - C6031 * C2904 + C151913 * C2909 +
              C6029 * C2901 - C6030 * C2896 - C6029 * C2902 + C6024 * C2908) *
                 C14707 +
             (C9726 + C9727) * C14706 + (C7385 + C7384) * C14705) *
                C152155 * C152072) *
               C152030) *
              C324 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C14705 +
             (C15265 + C15266) * C14706 + C15273 * C14707) *
                C152155 * C152285 -
            ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
             (C15266 + C15265) * C14705) *
                C152155 * C152072) *
               C152284 +
           (((C7391 + C7390) * C14705 + (C15992 + C15993) * C14706 +
             (C6029 * C2903 - C6030 * C2897 - C6029 * C2904 + C6024 * C2909 +
              C6031 * C2905 - C6032 * C2898 - C6031 * C2906 + C151913 * C2910) *
                 C14707) *
                C152155 * C152072 -
            ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
             (C6373 + C6372) * C14705) *
                C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C152285 -
           ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152072) *
              C1661 +
          (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
            (C10155 + C10154) * C14707) *
               C152155 * C152072 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C152285) *
              C1662 +
          ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C152285 -
           ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
            C8022 * C14705) *
               C152155 * C152072) *
              C1663 +
          ((C8808 * C14705 + (C8079 + C8078) * C14706 +
            (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 + C6024 * C10125 +
             C6031 * C10123 - C6032 * C10120 - C6031 * C10124 +
             C151913 * C10126) *
                C14707) *
               C152155 * C152072 -
           ((C8078 + C8079) * C14707 + (C8077 + C8076) * C14706 +
            C7748 * C14705) *
               C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C2757 -
           (C17805 * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C2758 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 + C17834 * C14707) *
               C152155 * C2759 -
           ((C17832 + C17833) * C14707 + (C17831 + C17830) * C14706 +
            C17805 * C14705) *
               C152155 * C152342) *
              C152284 +
          (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
            C18559 * C14707) *
               C152155 * C2758 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C2757 -
           ((C18572 + C18573) * C14707 + (C10154 + C10155) * C14706 +
            C16552 * C14705) *
               C152155 * C2759 +
           (C18559 * C14705 + (C18573 + C18572) * C14706 +
            (C6029 * C18552 - C6030 * C18550 - C6029 * C18553 + C6024 * C18556 +
             C6031 * C18554 - C6032 * C18551 - C6031 * C18555 +
             C151913 * C18557) *
                C14707) *
               C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
               C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
               C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
               C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                  C152167 * C152155 * C151985 * C151967 * C129 -
              (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
               C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
               C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
               C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                  C152167 * C152155 * C151985 * C151967 * C130 +
              (C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
               C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
               C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
               C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                  C152167 * C152155 * C151985 * C151967 * C131 -
              (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
               C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
               C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
               C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
                  C152167 * C152155 * C151985 * C151967 * C132 +
              (C134 * C158 - C135 * C146 - C134 * C159 + C121 * C170 +
               C136 * C160 - C137 * C147 - C136 * C161 + C122 * C171 +
               C138 * C162 - C139 * C148 - C138 * C163 + C123 * C172 +
               C140 * C164 - C141 * C149 - C140 * C165 + C124 * C173) *
                  C152167 * C152155 * C151985 * C151967 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C151985 * C152373 -
               (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                   C152167 * C152155 * C151985 * C152357 +
               (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
                C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
                C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
                C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                   C152167 * C152155 * C151985 * C152326) *
                  C323 +
              ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
                C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
                C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
                C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                   C152167 * C152155 * C151985 * C152357 -
               (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                   C152167 * C152155 * C151985 * C152373 -
               (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
                C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
                C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
                C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                   C152167 * C152155 * C151985 * C152326) *
                  C324 +
              ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
                C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
                C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
                C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                   C152167 * C152155 * C151985 * C152373 -
               (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
                C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
                C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
                C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                   C152167 * C152155 * C151985 * C152357 +
               (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
                C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
                C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
                C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
                   C152167 * C152155 * C151985 * C152326) *
                  C152320) +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C152374 -
               (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
                C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
                C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
                C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                   C152167 * C152155 * C152359 +
               (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
                C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
                C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
                C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
                   C152167 * C152155 * C152329) *
                  C151967 * C323 +
              ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
                C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
                C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
                C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                   C152167 * C152155 * C152359 -
               (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                   C152167 * C152155 * C152374 -
               (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
                C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
                C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
                C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
                   C152167 * C152155 * C152329) *
                  C151967 * C324 +
              ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
                C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
                C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
                C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                   C152167 * C152155 * C152374 -
               (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
                C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
                C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
                C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                   C152167 * C152155 * C152359 +
               (C134 * C547 - C135 * C529 - C134 * C548 + C121 * C565 +
                C136 * C549 - C137 * C530 - C136 * C550 + C122 * C566 +
                C138 * C553 - C139 * C532 - C138 * C554 + C123 * C568 +
                C140 * C557 - C141 * C534 - C140 * C558 + C124 * C570) *
                   C152167 * C152155 * C152329) *
                  C151967 * C152320) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C151985 * C1211 -
               (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                   C152167 * C152155 * C151985 * C1212 +
               (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
                C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
                C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
                C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                   C152167 * C152155 * C151985 * C152326) *
                  C152370 +
              ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
                C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
                C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
                C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                   C152167 * C152155 * C151985 * C1212 -
               (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                   C152167 * C152155 * C151985 * C1211 -
               (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
                C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
                C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
                C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                   C152167 * C152155 * C151985 * C152326) *
                  C152353 +
              ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
                C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
                C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
                C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                   C152167 * C152155 * C151985 * C1211 -
               (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
                C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
                C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
                C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                   C152167 * C152155 * C151985 * C1212 +
               (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
                C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
                C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
                C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
                   C152167 * C152155 * C151985 * C152326) *
                  C152320) -
         0.25 * std::pow(Pi, 2.5) *
             ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
               C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
               C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
               C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                  C152167 * C152155 * C151985 * C1299 -
              (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
               C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
               C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
               C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                  C152167 * C152155 * C151985 * C1300 +
              (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
               C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
               C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
               C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                  C152167 * C152155 * C151985 * C1301 -
              (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
               C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
               C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
               C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
                  C152167 * C152155 * C151985 * C1302 +
              (C134 * C1321 - C135 * C1309 - C134 * C1322 + C121 * C1333 +
               C136 * C1323 - C137 * C1310 - C136 * C1324 + C122 * C1334 +
               C138 * C1325 - C139 * C1311 - C138 * C1326 + C123 * C1335 +
               C140 * C1327 - C141 * C1312 - C140 * C1328 + C124 * C1336) *
                  C152167 * C152155 * C151985 * C1303) *
             C151939 +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C152374 -
               (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
                C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
                C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
                C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                   C152167 * C152155 * C152359 +
               (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
                C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
                C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
                C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
                   C152167 * C152155 * C152329) *
                  C1211 +
              ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
                C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
                C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
                C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                   C152167 * C152155 * C152359 -
               (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                   C152167 * C152155 * C152374 -
               (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
                C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
                C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
                C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
                   C152167 * C152155 * C152329) *
                  C1212 +
              ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
                C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
                C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
                C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                   C152167 * C152155 * C152374 -
               (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
                C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
                C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
                C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                   C152167 * C152155 * C152359 +
               (C134 * C1511 - C135 * C1491 - C134 * C1512 + C121 * C1527 +
                C136 * C1513 - C137 * C1492 - C136 * C1514 + C122 * C1528 +
                C138 * C1515 - C139 * C1493 - C138 * C1516 + C123 * C1529 +
                C140 * C1517 - C141 * C1494 - C140 * C1518 + C124 * C1530) *
                   C152167 * C152155 * C152329) *
                  C152326) *
             C151939 +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C2161 -
               (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
                C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
                C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
                C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                   C152167 * C152155 * C2162 +
               (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
                C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
                C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
                C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
                   C152167 * C152155 * C152329) *
                  C151967 * C152370 +
              ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
                C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
                C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
                C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                   C152167 * C152155 * C2162 -
               (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                   C152167 * C152155 * C2161 -
               (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
                C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
                C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
                C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
                   C152167 * C152155 * C152329) *
                  C151967 * C152353 +
              ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
                C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
                C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
                C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                   C152167 * C152155 * C2161 -
               (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
                C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
                C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
                C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                   C152167 * C152155 * C2162 +
               (C134 * C547 - C135 * C529 - C134 * C548 + C121 * C565 +
                C136 * C549 - C137 * C530 - C136 * C550 + C122 * C566 +
                C138 * C553 - C139 * C532 - C138 * C554 + C123 * C568 +
                C140 * C557 - C141 * C534 - C140 * C558 + C124 * C570) *
                   C152167 * C152155 * C152329) *
                  C151967 * C152320) +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C2161 -
               (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
                C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
                C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
                C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                   C152167 * C152155 * C2162 +
               (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
                C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
                C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
                C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
                   C152167 * C152155 * C152329) *
                  C152373 +
              ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
                C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
                C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
                C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                   C152167 * C152155 * C2162 -
               (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                   C152167 * C152155 * C2161 -
               (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
                C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
                C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
                C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
                   C152167 * C152155 * C152329) *
                  C152357 +
              ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
                C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
                C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
                C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                   C152167 * C152155 * C2161 -
               (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
                C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
                C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
                C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                   C152167 * C152155 * C2162 +
               (C134 * C1511 - C135 * C1491 - C134 * C1512 + C121 * C1527 +
                C136 * C1513 - C137 * C1492 - C136 * C1514 + C122 * C1528 +
                C138 * C1515 - C139 * C1493 - C138 * C1516 + C123 * C1529 +
                C140 * C1517 - C141 * C1494 - C140 * C1518 + C124 * C1530) *
                   C152167 * C152155 * C152329) *
                  C152326) *
             C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C2392 -
          (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 + C138 * C537 -
           C139 * C524 - C138 * C538 + C123 * C560 + C136 * C539 - C137 * C525 -
           C136 * C540 + C122 * C561 + C134 * C541 - C135 * C526 - C134 * C542 +
           C121 * C562) *
              C152167 * C152155 * C2393 +
          (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 + C136 * C545 -
           C137 * C528 - C136 * C546 + C122 * C564 + C138 * C547 - C139 * C529 -
           C138 * C548 + C123 * C565 + C140 * C549 - C141 * C530 - C140 * C550 +
           C124 * C566) *
              C152167 * C152155 * C2394 -
          (C140 * C2405 - C141 * C2397 - C140 * C2406 + C124 * C2421 +
           C138 * C2407 - C139 * C2398 - C138 * C2408 + C123 * C2422 +
           C136 * C2409 - C137 * C2399 - C136 * C2410 + C122 * C2423 +
           C134 * C2411 - C135 * C2400 - C134 * C2412 + C121 * C2424) *
              C152167 * C152155 * C2395 +
          (C134 * C2413 - C135 * C2401 - C134 * C2414 + C121 * C2425 +
           C136 * C2415 - C137 * C2402 - C136 * C2416 + C122 * C2426 +
           C138 * C2417 - C139 * C2403 - C138 * C2418 + C123 * C2427 +
           C140 * C2419 - C141 * C2404 - C140 * C2420 + C124 * C2428) *
              C152167 * C152155 * C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6029 * C344 - C6030 * C329 - C6029 * C345 + C6024 * C365 +
            C6031 * C342 - C6032 * C328 - C6031 * C343 + C151913 * C364) *
               C152167 * C6027 +
           (C6029 * C346 - C6030 * C330 - C6029 * C347 + C6024 * C366 +
            C6031 * C348 - C6032 * C331 - C6031 * C349 + C151913 * C367) *
               C152167 * C6028) *
              C151985 * C151967 * C129 -
          ((C6031 * C350 - C6032 * C332 - C6031 * C351 + C151913 * C368 +
            C6029 * C348 - C6030 * C331 - C6029 * C349 + C6024 * C367) *
               C152167 * C6028 +
           (C6031 * C340 - C6032 * C327 - C6031 * C341 + C151913 * C363 +
            C6029 * C342 - C6030 * C328 - C6029 * C343 + C6024 * C364) *
               C152167 * C6027 +
           (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
            C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
               C152167 * C6026) *
              C151985 * C151967 * C130 +
          ((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
            C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
               C152167 * C6026 +
           (C6029 * C340 - C6030 * C327 - C6029 * C341 + C6024 * C363 +
            C6031 * C338 - C6032 * C326 - C6031 * C339 + C151913 * C362) *
               C152167 * C6027 +
           (C6029 * C350 - C6030 * C332 - C6029 * C351 + C6024 * C368 +
            C6031 * C352 - C6032 * C333 - C6031 * C353 + C151913 * C369) *
               C152167 * C6028) *
              C151985 * C151967 * C131 -
          ((C6031 * C356 - C6032 * C335 - C6031 * C357 + C151913 * C371 +
            C6029 * C352 - C6030 * C333 - C6029 * C353 + C6024 * C369) *
               C152167 * C6028 +
           (C6031 * C354 - C6032 * C334 - C6031 * C355 + C151913 * C370 +
            C6029 * C338 - C6030 * C326 - C6029 * C339 + C6024 * C362) *
               C152167 * C6027 +
           (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
            C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
               C152167 * C6026) *
              C151985 * C151967 * C132 +
          ((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
            C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
               C152167 * C6026 +
           (C6029 * C354 - C6030 * C334 - C6029 * C355 + C6024 * C370 +
            C6031 * C358 - C6032 * C336 - C6031 * C359 + C151913 * C372) *
               C152167 * C6027 +
           (C6029 * C356 - C6030 * C335 - C6029 * C357 + C6024 * C371 +
            C6031 * C360 - C6032 * C337 - C6031 * C361 + C151913 * C373) *
               C152167 * C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152373 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152357 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C323 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C152357 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152373 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152373 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152357 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152374 -
           ((C6031 * C1507 - C6032 * C1489 - C6031 * C1508 + C151913 * C1525 +
             C6029 * C1509 - C6030 * C1490 - C6029 * C1510 + C6024 * C1526) *
                C152167 * C6028 +
            (C6031 * C1049 - C6032 * C1042 - C6031 * C1050 + C151913 * C1060 +
             C6029 * C1047 - C6030 * C1041 - C6029 * C1048 + C6024 * C1059) *
                C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152359 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C6029 * C1501 - C6030 * C1486 - C6029 * C1502 + C6024 * C1522 +
             C6031 * C1499 - C6032 * C1485 - C6031 * C1500 + C151913 * C1521) *
                C152167 * C6027 +
            (C6029 * C1511 - C6030 * C1491 - C6029 * C1512 + C6024 * C1527 +
             C6031 * C1513 - C6032 * C1492 - C6031 * C1514 + C151913 * C1528) *
                C152167 * C6028) *
               C152329) *
              C151967 * C323 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C6029 * C1049 - C6030 * C1042 - C6029 * C1050 + C6024 * C1060 +
             C6031 * C1051 - C6032 * C1043 - C6031 * C1052 + C151913 * C1061) *
                C152167 * C6027 +
            (C6029 * C1507 - C6030 * C1489 - C6029 * C1508 + C6024 * C1525 +
             C6031 * C1505 - C6032 * C1488 - C6031 * C1506 + C151913 * C1524) *
                C152167 * C6028) *
               C152359 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C152374 -
           ((C6031 * C1515 - C6032 * C1493 - C6031 * C1516 + C151913 * C1529 +
             C6029 * C1513 - C6030 * C1492 - C6029 * C1514 + C6024 * C1528) *
                C152167 * C6028 +
            (C6031 * C1497 - C6032 * C1484 - C6031 * C1498 + C151913 * C1520 +
             C6029 * C1499 - C6030 * C1485 - C6029 * C1500 + C6024 * C1521) *
                C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C152329) *
              C151967 * C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C152374 -
           ((C6031 * C1503 - C6032 * C1487 - C6031 * C1504 + C151913 * C1523 +
             C6029 * C1505 - C6030 * C1488 - C6029 * C1506 + C6024 * C1524) *
                C152167 * C6028 +
            (C6031 * C1053 - C6032 * C1044 - C6031 * C1054 + C151913 * C1062 +
             C6029 * C1051 - C6030 * C1043 - C6029 * C1052 + C6024 * C1061) *
                C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152359 +
           ((C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C152167 * C6026 +
            (C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520 +
             C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519) *
                C152167 * C6027 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C152167 * C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C1211 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C1212 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C1212 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C1211 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C1211 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C1212 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
              C151985 * C1299 -
          (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
           (C6361 + C6360) * C152167 * C6026) *
              C151985 * C1300 +
          (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
              C151985 * C1301 -
          ((C7776 + C7777) * C152167 * C6028 +
           (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
              C151985 * C1302 +
          (C7779 * C6026 + (C7777 + C7776) * C152167 * C6027 +
           (C6029 * C7739 - C6030 * C7733 - C6029 * C7740 + C6024 * C7745 +
            C6031 * C7741 - C6032 * C7734 - C6031 * C7742 + C151913 * C7746) *
               C152167 * C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152374 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152359 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152329) *
              C1211 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 +
            (C8076 + C8077) * C152167 * C6028) *
               C152359 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C152374 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C152329) *
              C1212 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C152374 -
           ((C6031 * C8007 - C6032 * C7999 - C6031 * C8008 + C151913 * C8017 +
             C6029 * C8009 - C6030 * C8000 - C6029 * C8010 + C6024 * C8018) *
                C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152359 +
           (C8081 * C6026 + (C8079 + C8078) * C152167 * C6027 +
            (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
             C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                C152167 * C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C2161 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C2162 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152329) *
              C151967 * C152370 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C2162 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C2161 -
           ((C6031 * C1515 - C6032 * C1493 - C6031 * C1516 + C151913 * C1529 +
             C6029 * C1513 - C6030 * C1492 - C6029 * C1514 + C6024 * C1528) *
                C152167 * C6028 +
            (C6031 * C1497 - C6032 * C1484 - C6031 * C1498 + C151913 * C1520 +
             C6029 * C1499 - C6030 * C1485 - C6029 * C1500 + C6024 * C1521) *
                C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C152329) *
              C151967 * C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C2161 -
           ((C7388 + C7389) * C152167 * C6028 +
            (C7390 + C7391) * C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C2162 +
           ((C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C152167 * C6026 +
            (C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520 +
             C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519) *
                C152167 * C6027 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C152167 * C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C2161 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C2162 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152329) *
              C152373 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C2162 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C2161 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C152329) *
              C152357 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C2161 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C2162 +
           (C8081 * C6026 + (C8079 + C8078) * C152167 * C6027 +
            (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
             C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                C152167 * C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
              C2392 -
          (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
           (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
            C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
               C152167 * C6026) *
              C2393 +
          ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
            C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
               C152167 * C6026 +
           (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
              C2394 -
          ((C6031 * C9387 - C6032 * C9381 - C6031 * C9388 + C151913 * C9399 +
            C6029 * C9389 - C6030 * C9382 - C6029 * C9390 + C6024 * C9400) *
               C152167 * C6028 +
           (C6031 * C2901 - C6032 * C2896 - C6031 * C2902 + C151913 * C2908 +
            C6029 * C2899 - C6030 * C2895 - C6029 * C2900 + C6024 * C2907) *
               C152167 * C6027 +
           (C6031 * C2409 - C6032 * C2399 - C6031 * C2410 + C151913 * C2423 +
            C6029 * C2411 - C6030 * C2400 - C6029 * C2412 + C6024 * C2424) *
               C152167 * C6026) *
              C2395 +
          ((C6029 * C2413 - C6030 * C2401 - C6029 * C2414 + C6024 * C2425 +
            C6031 * C2415 - C6032 * C2402 - C6031 * C2416 + C151913 * C2426) *
               C152167 * C6026 +
           (C6029 * C9391 - C6030 * C9383 - C6029 * C9392 + C6024 * C9401 +
            C6031 * C9393 - C6032 * C9384 - C6031 * C9394 + C151913 * C9402) *
               C152167 * C6027 +
           (C6029 * C9395 - C6030 * C9385 - C6029 * C9396 + C6024 * C9403 +
            C6031 * C9397 - C6032 * C9386 - C6031 * C9398 + C151913 * C9404) *
               C152167 * C6028) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C14705 +
           (C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562 +
            C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561) *
               C14706 +
           (C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
            C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
               C14707) *
              C152155 * C151985 * C151967 * C129 -
          ((C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
            C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
               C14707 +
           (C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560 +
            C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561) *
               C14706 +
           (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
            C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
               C14705) *
              C152155 * C151985 * C151967 * C130 +
          ((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
            C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
               C14705 +
           (C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560 +
            C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559) *
               C14706 +
           (C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
            C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
               C14707) *
              C152155 * C151985 * C151967 * C131 -
          ((C6031 * C553 - C6032 * C532 - C6031 * C554 + C151913 * C568 +
            C6029 * C549 - C6030 * C530 - C6029 * C550 + C6024 * C566) *
               C14707 +
           (C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567 +
            C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559) *
               C14706 +
           (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
            C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
               C14705) *
              C152155 * C151985 * C151967 * C132 +
          ((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
            C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
               C14705 +
           (C6029 * C551 - C6030 * C531 - C6029 * C552 + C6024 * C567 +
            C6031 * C555 - C6032 * C533 - C6031 * C556 + C151913 * C569) *
               C14706 +
           (C6029 * C553 - C6030 * C532 - C6029 * C554 + C6024 * C568 +
            C6031 * C557 - C6032 * C534 - C6031 * C558 + C151913 * C570) *
               C14707) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562 +
             C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561) *
                C14706 +
            (C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C14707) *
               C152155 * C151985 * C152373 -
           ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C152357 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C152326) *
              C323 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            (C9727 + C9726) * C14707) *
               C152155 * C151985 * C152357 -
           ((C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C14707 +
            (C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560 +
             C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561) *
                C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C152373 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560 +
             C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559) *
                C14706 +
            (C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C14707) *
               C152155 * C151985 * C152373 -
           ((C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519 +
             C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520) *
                C14707 +
            (C7390 + C7391) * C14706 + (C6373 + C6372) * C14705) *
               C152155 * C151985 * C152357 +
           (C6380 * C14705 + (C7389 + C7388) * C14706 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C14707) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C152374 -
           ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152359 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 +
            (C6029 * C2413 - C6030 * C2401 - C6029 * C2414 + C6024 * C2425 +
             C6031 * C2415 - C6032 * C2402 - C6031 * C2416 + C151913 * C2426) *
                C14707) *
               C152155 * C152329) *
              C151967 * C323 +
          (((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
            (C15263 + C15264) * C14707) *
               C152155 * C152359 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C152374 -
           ((C6031 * C2417 - C6032 * C2403 - C6031 * C2418 + C151913 * C2427 +
             C6029 * C2415 - C6030 * C2402 - C6029 * C2416 + C6024 * C2426) *
                C14707 +
            (C15264 + C15263) * C14706 + C15272 * C14705) *
               C152155 * C152329) *
              C151967 * C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C152374 -
           ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
            (C15266 + C15265) * C14705) *
               C152155 * C152359 +
           (C15273 * C14705 + (C15270 + C15269) * C14706 +
            (C6029 * C2417 - C6030 * C2403 - C6029 * C2418 + C6024 * C2427 +
             C6031 * C2419 - C6032 * C2404 - C6031 * C2420 + C151913 * C2428) *
                C14707) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C1211 -
           ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C1212 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            (C9727 + C9726) * C14707) *
               C152155 * C151985 * C1212 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C1211 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C151985 * C1211 -
           ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
            (C6373 + C6372) * C14705) *
               C152155 * C151985 * C1212 +
           (C6380 * C14705 + (C7389 + C7388) * C14706 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C14707) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C14705 +
           (C15253 + C15254) * C14706 + C15271 * C14707) *
              C152155 * C151985 * C1299 -
          ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
           (C6361 + C6360) * C14705) *
              C152155 * C151985 * C1300 +
          (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
              C152155 * C151985 * C1301 -
          ((C8078 + C8079) * C14707 + (C8077 + C8076) * C14706 +
           C7748 * C14705) *
              C152155 * C151985 * C1302 +
          (C7778 * C14705 + (C8823 + C8822) * C14706 +
           (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
            C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
               C14707) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C152374 -
           ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152359 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 +
            (C6029 * C2413 - C6030 * C2401 - C6029 * C2414 + C6024 * C2425 +
             C6031 * C2415 - C6032 * C2402 - C6031 * C2416 + C151913 * C2426) *
                C14707) *
               C152155 * C152329) *
              C1211 +
          (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
            (C10155 + C10154) * C14707) *
               C152155 * C152359 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C152374 -
           ((C6031 * C9393 - C6032 * C9384 - C6031 * C9394 + C151913 * C9402 +
             C6029 * C9391 - C6030 * C9383 - C6029 * C9392 + C6024 * C9401) *
                C14707 +
            (C10154 + C10155) * C14706 + C16552 * C14705) *
               C152155 * C152329) *
              C1212 +
          ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C152374 -
           ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
            C8022 * C14705) *
               C152155 * C152359 +
           (C8080 * C14705 + (C10153 + C10152) * C14706 +
            (C6029 * C9395 - C6030 * C9385 - C6029 * C9396 + C6024 * C9403 +
             C6031 * C9397 - C6032 * C9386 - C6031 * C9398 + C151913 * C9404) *
                C14707) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C2161 -
           ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C2162 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 +
            (C6029 * C2413 - C6030 * C2401 - C6029 * C2414 + C6024 * C2425 +
             C6031 * C2415 - C6032 * C2402 - C6031 * C2416 + C151913 * C2426) *
                C14707) *
               C152155 * C152329) *
              C151967 * C152370 +
          (((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
            (C15263 + C15264) * C14707) *
               C152155 * C2162 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C2161 -
           ((C6031 * C2417 - C6032 * C2403 - C6031 * C2418 + C151913 * C2427 +
             C6029 * C2415 - C6030 * C2402 - C6029 * C2416 + C6024 * C2426) *
                C14707 +
            (C15264 + C15263) * C14706 + C15272 * C14705) *
               C152155 * C152329) *
              C151967 * C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C2161 -
           ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
            (C15266 + C15265) * C14705) *
               C152155 * C2162 +
           (C15273 * C14705 + (C15270 + C15269) * C14706 +
            (C6029 * C2417 - C6030 * C2403 - C6029 * C2418 + C6024 * C2427 +
             C6031 * C2419 - C6032 * C2404 - C6031 * C2420 + C151913 * C2428) *
                C14707) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C2161 -
           ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C2162 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 +
            (C6029 * C2413 - C6030 * C2401 - C6029 * C2414 + C6024 * C2425 +
             C6031 * C2415 - C6032 * C2402 - C6031 * C2416 + C151913 * C2426) *
                C14707) *
               C152155 * C152329) *
              C152373 +
          (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
            (C10155 + C10154) * C14707) *
               C152155 * C2162 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C2161 -
           ((C6031 * C9393 - C6032 * C9384 - C6031 * C9394 + C151913 * C9402 +
             C6029 * C9391 - C6030 * C9383 - C6029 * C9392 + C6024 * C9401) *
                C14707 +
            (C10154 + C10155) * C14706 + C16552 * C14705) *
               C152155 * C152329) *
              C152357 +
          ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C2161 -
           ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
            C8022 * C14705) *
               C152155 * C2162 +
           (C8080 * C14705 + (C10153 + C10152) * C14706 +
            (C6029 * C9395 - C6030 * C9385 - C6029 * C9396 + C6024 * C9403 +
             C6031 * C9397 - C6032 * C9386 - C6031 * C9398 + C151913 * C9404) *
                C14707) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C14705 +
           (C15253 + C15254) * C14706 + C15271 * C14707) *
              C152155 * C2392 -
          (C17805 * C14707 + (C15256 + C15255) * C14706 +
           (C15254 + C15253) * C14705) *
              C152155 * C2393 +
          (C15271 * C14705 + (C15258 + C15257) * C14706 + C17834 * C14707) *
              C152155 * C2394 -
          ((C17832 + C17833) * C14707 + (C17831 + C17830) * C14706 +
           C17805 * C14705) *
              C152155 * C2395 +
          (C17834 * C14705 + (C17833 + C17832) * C14706 +
           (C6029 * C17796 - C6030 * C17790 - C6029 * C17797 + C6024 * C17802 +
            C6031 * C17798 - C6032 * C17791 - C6031 * C17799 +
            C151913 * C17803) *
               C14707) *
              C152155 * C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C152285 -
               (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
                C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
                C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
                C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                   C152167 * C152155 * C152072) *
                  C151967 * C703 +
              ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
                C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
                C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
                C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                   C152167 * C152155 * C152072 -
               (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                   C152167 * C152155 * C152285) *
                  C151967 * C704 +
              ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
                C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
                C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
                C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                   C152167 * C152155 * C152285 -
               (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
                C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
                C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
                C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                   C152167 * C152155 * C152072) *
                  C151967 * C705 +
              ((C134 * C535 - C135 * C523 - C134 * C536 + C121 * C559 +
                C136 * C551 - C137 * C531 - C136 * C552 + C122 * C567 +
                C138 * C555 - C139 * C533 - C138 * C556 + C123 * C569 +
                C140 * C844 - C141 * C843 - C140 * C845 + C124 * C846) *
                   C152167 * C152155 * C152072 -
               (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
                C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
                C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
                C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
                   C152167 * C152155 * C152285) *
                  C151967 * C152330) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                 C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                 C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                 C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                    C152167 * C152155 * C152285 -
                (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
                 C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
                 C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
                 C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                    C152167 * C152155 * C152072) *
                   C1211 +
               ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
                 C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
                 C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
                 C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                    C152167 * C152155 * C152072 -
                (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                 C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                 C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                 C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                    C152167 * C152155 * C152285) *
                   C1212 +
               ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
                 C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
                 C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
                 C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                    C152167 * C152155 * C152285 -
                (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
                 C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
                 C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
                 C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                    C152167 * C152155 * C152072) *
                   C152326) *
                  C152270 +
              (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
                 C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
                 C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
                 C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                    C152167 * C152155 * C152072 -
                (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                 C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                 C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                 C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                    C152167 * C152155 * C152285) *
                   C1211 +
               ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
                 C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
                 C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
                 C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                    C152167 * C152155 * C152285 -
                (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
                 C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
                 C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
                 C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                    C152167 * C152155 * C152072) *
                   C1212 +
               ((C134 * C1507 - C135 * C1489 - C134 * C1508 + C121 * C1525 +
                 C136 * C1505 - C137 * C1488 - C136 * C1506 + C122 * C1524 +
                 C138 * C1503 - C139 * C1487 - C138 * C1504 + C123 * C1523 +
                 C140 * C1866 - C141 * C1865 - C140 * C1867 + C124 * C1868) *
                    C152167 * C152155 * C152072 -
                (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
                 C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
                 C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
                 C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                    C152167 * C152155 * C152285) *
                   C152326) *
                  C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C2757 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C2758 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C2759 -
           (C140 * C2405 - C141 * C2397 - C140 * C2406 + C124 * C2421 +
            C138 * C2407 - C139 * C2398 - C138 * C2408 + C123 * C2422 +
            C136 * C2409 - C137 * C2399 - C136 * C2410 + C122 * C2423 +
            C134 * C2411 - C135 * C2400 - C134 * C2412 + C121 * C2424) *
               C152167 * C152155 * C152342) *
              C151967 * C152270 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C2758 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C2757 -
           (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
            C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
            C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
            C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
               C152167 * C152155 * C2759 +
           (C134 * C2409 - C135 * C2399 - C134 * C2410 + C121 * C2423 +
            C136 * C2407 - C137 * C2398 - C136 * C2408 + C122 * C2422 +
            C138 * C2405 - C139 * C2397 - C138 * C2406 + C123 * C2421 +
            C140 * C2762 - C141 * C2761 - C140 * C2763 + C124 * C2764) *
               C152167 * C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152285 -
           ((C6031 * C1507 - C6032 * C1489 - C6031 * C1508 + C151913 * C1525 +
             C6029 * C1509 - C6030 * C1490 - C6029 * C1510 + C6024 * C1526) *
                C152167 * C6028 +
            (C6031 * C1049 - C6032 * C1042 - C6031 * C1050 + C151913 * C1060 +
             C6029 * C1047 - C6030 * C1041 - C6029 * C1048 + C6024 * C1059) *
                C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C151967 * C703 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C6029 * C1049 - C6030 * C1042 - C6029 * C1050 + C6024 * C1060 +
             C6031 * C1051 - C6032 * C1043 - C6031 * C1052 + C151913 * C1061) *
                C152167 * C6027 +
            (C6029 * C1507 - C6030 * C1489 - C6029 * C1508 + C6024 * C1525 +
             C6031 * C1505 - C6032 * C1488 - C6031 * C1506 + C151913 * C1524) *
                C152167 * C6028) *
               C152072 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C152285) *
              C151967 * C704 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C152285 -
           ((C6031 * C1503 - C6032 * C1487 - C6031 * C1504 + C151913 * C1523 +
             C6029 * C1505 - C6030 * C1488 - C6029 * C1506 + C6024 * C1524) *
                C152167 * C6028 +
            (C6031 * C1053 - C6032 * C1044 - C6031 * C1054 + C151913 * C1062 +
             C6029 * C1051 - C6030 * C1043 - C6029 * C1052 + C6024 * C1061) *
                C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152072) *
              C151967 * C705 +
          (((C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559 +
             C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567) *
                C152167 * C6026 +
            (C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062 +
             C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063) *
                C152167 * C6027 +
            (C6029 * C1503 - C6030 * C1487 - C6029 * C1504 + C6024 * C1523 +
             C6031 * C1866 - C6032 * C1865 - C6031 * C1867 + C151913 * C1868) *
                C152167 * C6028) *
               C152072 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152285 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C1211 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 +
             (C8076 + C8077) * C152167 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152285) *
               C1212 +
           ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
             C7779 * C6028) *
                C152285 -
            ((C6031 * C8007 - C6032 * C7999 - C6031 * C8008 + C151913 * C8017 +
              C6029 * C8009 - C6030 * C8000 - C6029 * C8010 + C6024 * C8018) *
                 C152167 * C6028 +
             (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
                C152072) *
               C152326) *
              C152270 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152285) *
               C1211 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152285 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C1212 +
           ((C8599 * C6026 + (C8605 + C8604) * C152167 * C6027 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152167 * C6028) *
                C152072 -
            ((C8294 + C8295) * C152167 * C6028 +
             (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C2757 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C2758 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C2759 -
           ((C6031 * C9387 - C6032 * C9381 - C6031 * C9388 + C151913 * C9399 +
             C6029 * C9389 - C6030 * C9382 - C6029 * C9390 + C6024 * C9400) *
                C152167 * C6028 +
            (C6031 * C2901 - C6032 * C2896 - C6031 * C2902 + C151913 * C2908 +
             C6029 * C2899 - C6030 * C2895 - C6029 * C2900 + C6024 * C2907) *
                C152167 * C6027 +
            (C6031 * C2409 - C6032 * C2399 - C6031 * C2410 + C151913 * C2423 +
             C6029 * C2411 - C6030 * C2400 - C6029 * C2412 + C6024 * C2424) *
                C152167 * C6026) *
               C152342) *
              C151967 * C152270 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C2758 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C2757 -
           ((C9724 + C9725) * C152167 * C6028 +
            (C9726 + C9727) * C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C2759 +
           ((C6029 * C2409 - C6030 * C2399 - C6029 * C2410 + C6024 * C2423 +
             C6031 * C2407 - C6032 * C2398 - C6031 * C2408 + C151913 * C2422) *
                C152167 * C6026 +
            (C6029 * C2901 - C6030 * C2896 - C6029 * C2902 + C6024 * C2908 +
             C6031 * C2903 - C6032 * C2897 - C6031 * C2904 + C151913 * C2909) *
                C152167 * C6027 +
            (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
             C6031 * C9922 - C6032 * C9921 - C6031 * C9923 + C151913 * C9924) *
                C152167 * C6028) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C152285 -
           ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152072) *
              C151967 * C703 +
          (((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
            (C15263 + C15264) * C14707) *
               C152155 * C152072 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C152285) *
              C151967 * C704 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C152285 -
           ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
            (C15266 + C15265) * C14705) *
               C152155 * C152072) *
              C151967 * C705 +
          (((C15686 + C15687) * C14705 + (C15688 + C15689) * C14706 +
            (C6029 * C2405 - C6030 * C2397 - C6029 * C2406 + C6024 * C2421 +
             C6031 * C2762 - C6032 * C2761 - C6031 * C2763 + C151913 * C2764) *
                C14707) *
               C152155 * C152072 -
           ((C15689 + C15688) * C14707 + (C15687 + C15686) * C14706 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C14705) *
               C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C152285 -
            ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152072) *
               C1211 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             (C10155 + C10154) * C14707) *
                C152155 * C152072 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C152285) *
               C1212 +
           ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
                C152155 * C152285 -
            ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
             C8022 * C14705) *
                C152155 * C152072) *
               C152326) *
              C152270 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             (C15263 + C15264) * C14707) *
                C152155 * C152072 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C152285) *
               C1211 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             (C9727 + C9726) * C14707) *
                C152155 * C152285 -
            ((C6031 * C2903 - C6032 * C2897 - C6031 * C2904 + C151913 * C2909 +
              C6029 * C2901 - C6030 * C2896 - C6029 * C2902 + C6024 * C2908) *
                 C14707 +
             (C9726 + C9727) * C14706 + (C7385 + C7384) * C14705) *
                C152155 * C152072) *
               C1212 +
           ((C8590 * C14705 + (C9725 + C9724) * C14706 +
             (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
              C6031 * C9922 - C6032 * C9921 - C6031 * C9923 + C151913 * C9924) *
                 C14707) *
                C152155 * C152072 -
            ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
             C6379 * C14705) *
                C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C2757 -
           (C17805 * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C2758 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 + C17834 * C14707) *
               C152155 * C2759 -
           ((C17832 + C17833) * C14707 + (C17831 + C17830) * C14706 +
            C17805 * C14705) *
               C152155 * C152342) *
              C151967 * C152270 +
          (((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
            C18342 * C14707) *
               C152155 * C2758 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C2757 -
           ((C18355 + C18356) * C14707 + (C15264 + C15263) * C14706 +
            C15272 * C14705) *
               C152155 * C2759 +
           (C18342 * C14705 + (C18356 + C18355) * C14706 +
            (C6029 * C17792 - C6030 * C17788 - C6029 * C17793 + C6024 * C17800 +
             C6031 * C18338 - C6032 * C18337 - C6031 * C18339 +
             C151913 * C18340) *
                C14707) *
               C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C151985 * C151967 * C129 -
          (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 + C138 * C156 -
           C139 * C145 - C138 * C157 + C123 * C169 + C136 * C154 - C137 * C144 -
           C136 * C155 + C122 * C168 + C134 * C152 - C135 * C143 - C134 * C153 +
           C121 * C167) *
              C152167 * C152155 * C151985 * C151967 * C130 +
          (C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 + C136 * C156 -
           C137 * C145 - C136 * C157 + C122 * C169 + C138 * C158 - C139 * C146 -
           C138 * C159 + C123 * C170 + C140 * C160 - C141 * C147 - C140 * C161 +
           C124 * C171) *
              C152167 * C152155 * C151985 * C151967 * C131 -
          (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 + C138 * C160 -
           C139 * C147 - C138 * C161 + C123 * C171 + C136 * C158 - C137 * C146 -
           C136 * C159 + C122 * C170 + C134 * C156 - C135 * C145 - C134 * C157 +
           C121 * C169) *
              C152167 * C152155 * C151985 * C151967 * C132 +
          (C134 * C158 - C135 * C146 - C134 * C159 + C121 * C170 + C136 * C160 -
           C137 * C147 - C136 * C161 + C122 * C171 + C138 * C162 - C139 * C148 -
           C138 * C163 + C123 * C172 + C140 * C164 - C141 * C149 - C140 * C165 +
           C124 * C173) *
              C152167 * C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152357 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152326) *
              C323 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152357 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152326) *
              C324 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152357 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152326) *
              C152370 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C1212 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152326) *
              C152353 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C151985 * C1299 -
          (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 + C138 * C340 -
           C139 * C327 - C138 * C341 + C123 * C363 + C136 * C342 - C137 * C328 -
           C136 * C343 + C122 * C364 + C134 * C344 - C135 * C329 - C134 * C345 +
           C121 * C365) *
              C152167 * C152155 * C151985 * C1300 +
          (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 + C136 * C348 -
           C137 * C331 - C136 * C349 + C122 * C367 + C138 * C350 - C139 * C332 -
           C138 * C351 + C123 * C368 + C140 * C352 - C141 * C333 - C140 * C353 +
           C124 * C369) *
              C152167 * C152155 * C151985 * C1301 -
          (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
           C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
           C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
           C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
              C152167 * C152155 * C151985 * C1302 +
          (C134 * C1321 - C135 * C1309 - C134 * C1322 + C121 * C1333 +
           C136 * C1323 - C137 * C1310 - C136 * C1324 + C122 * C1334 +
           C138 * C1325 - C139 * C1311 - C138 * C1326 + C123 * C1335 +
           C140 * C1327 - C141 * C1312 - C140 * C1328 + C124 * C1336) *
              C152167 * C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C2161 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C2162 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152329) *
              C151967 * C152370 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C2162 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C2161 -
           (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
            C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
            C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
            C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
               C152167 * C152155 * C152329) *
              C151967 * C152353 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C2161 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C2162 +
           (C134 * C547 - C135 * C529 - C134 * C548 + C121 * C565 +
            C136 * C549 - C137 * C530 - C136 * C550 + C122 * C566 +
            C138 * C553 - C139 * C532 - C138 * C554 + C123 * C568 +
            C140 * C557 - C141 * C534 - C140 * C558 + C124 * C570) *
               C152167 * C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C2161 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C2162 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152329) *
              C152373 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C2162 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C2161 -
           (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
            C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
            C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
            C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
               C152167 * C152155 * C152329) *
              C152357 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C2161 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C2162 +
           (C134 * C1511 - C135 * C1491 - C134 * C1512 + C121 * C1527 +
            C136 * C1513 - C137 * C1492 - C136 * C1514 + C122 * C1528 +
            C138 * C1515 - C139 * C1493 - C138 * C1516 + C123 * C1529 +
            C140 * C1517 - C141 * C1494 - C140 * C1518 + C124 * C1530) *
               C152167 * C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6029 * C344 - C6030 * C329 - C6029 * C345 + C6024 * C365 +
            C6031 * C342 - C6032 * C328 - C6031 * C343 + C151913 * C364) *
               C152167 * C6027 +
           (C6029 * C346 - C6030 * C330 - C6029 * C347 + C6024 * C366 +
            C6031 * C348 - C6032 * C331 - C6031 * C349 + C151913 * C367) *
               C152167 * C6028) *
              C151985 * C151967 * C129 -
          ((C6031 * C350 - C6032 * C332 - C6031 * C351 + C151913 * C368 +
            C6029 * C348 - C6030 * C331 - C6029 * C349 + C6024 * C367) *
               C152167 * C6028 +
           (C6031 * C340 - C6032 * C327 - C6031 * C341 + C151913 * C363 +
            C6029 * C342 - C6030 * C328 - C6029 * C343 + C6024 * C364) *
               C152167 * C6027 +
           (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
            C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
               C152167 * C6026) *
              C151985 * C151967 * C130 +
          ((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
            C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
               C152167 * C6026 +
           (C6029 * C340 - C6030 * C327 - C6029 * C341 + C6024 * C363 +
            C6031 * C338 - C6032 * C326 - C6031 * C339 + C151913 * C362) *
               C152167 * C6027 +
           (C6029 * C350 - C6030 * C332 - C6029 * C351 + C6024 * C368 +
            C6031 * C352 - C6032 * C333 - C6031 * C353 + C151913 * C369) *
               C152167 * C6028) *
              C151985 * C151967 * C131 -
          ((C6031 * C356 - C6032 * C335 - C6031 * C357 + C151913 * C371 +
            C6029 * C352 - C6030 * C333 - C6029 * C353 + C6024 * C369) *
               C152167 * C6028 +
           (C6031 * C354 - C6032 * C334 - C6031 * C355 + C151913 * C370 +
            C6029 * C338 - C6030 * C326 - C6029 * C339 + C6024 * C362) *
               C152167 * C6027 +
           (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
            C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
               C152167 * C6026) *
              C151985 * C151967 * C132 +
          ((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
            C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
               C152167 * C6026 +
           (C6029 * C354 - C6030 * C334 - C6029 * C355 + C6024 * C370 +
            C6031 * C358 - C6032 * C336 - C6031 * C359 + C151913 * C372) *
               C152167 * C6027 +
           (C6029 * C356 - C6030 * C335 - C6029 * C357 + C6024 * C371 +
            C6031 * C360 - C6032 * C337 - C6031 * C361 + C151913 * C373) *
               C152167 * C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152373 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152357 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C323 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C152357 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152373 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152373 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152357 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C1211 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C1212 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C1212 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C1211 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C1211 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C1212 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
              C151985 * C1299 -
          (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
           (C6361 + C6360) * C152167 * C6026) *
              C151985 * C1300 +
          (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
              C151985 * C1301 -
          ((C7776 + C7777) * C152167 * C6028 +
           (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
              C151985 * C1302 +
          (C7779 * C6026 + (C7777 + C7776) * C152167 * C6027 +
           (C6029 * C7739 - C6030 * C7733 - C6029 * C7740 + C6024 * C7745 +
            C6031 * C7741 - C6032 * C7734 - C6031 * C7742 + C151913 * C7746) *
               C152167 * C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C2161 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C2162 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152329) *
              C151967 * C152370 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C2162 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C2161 -
           ((C6031 * C1515 - C6032 * C1493 - C6031 * C1516 + C151913 * C1529 +
             C6029 * C1513 - C6030 * C1492 - C6029 * C1514 + C6024 * C1528) *
                C152167 * C6028 +
            (C6031 * C1497 - C6032 * C1484 - C6031 * C1498 + C151913 * C1520 +
             C6029 * C1499 - C6030 * C1485 - C6029 * C1500 + C6024 * C1521) *
                C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C152329) *
              C151967 * C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C2161 -
           ((C7388 + C7389) * C152167 * C6028 +
            (C7390 + C7391) * C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C2162 +
           ((C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C152167 * C6026 +
            (C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520 +
             C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519) *
                C152167 * C6027 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C152167 * C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C2161 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C2162 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152329) *
              C152373 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C2162 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C2161 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C152329) *
              C152357 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C2161 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C2162 +
           (C8081 * C6026 + (C8079 + C8078) * C152167 * C6027 +
            (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
             C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                C152167 * C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C14705 +
           (C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562 +
            C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561) *
               C14706 +
           (C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
            C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
               C14707) *
              C152155 * C151985 * C151967 * C129 -
          ((C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
            C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
               C14707 +
           (C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560 +
            C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561) *
               C14706 +
           (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
            C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
               C14705) *
              C152155 * C151985 * C151967 * C130 +
          ((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
            C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
               C14705 +
           (C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560 +
            C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559) *
               C14706 +
           (C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
            C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
               C14707) *
              C152155 * C151985 * C151967 * C131 -
          ((C6031 * C553 - C6032 * C532 - C6031 * C554 + C151913 * C568 +
            C6029 * C549 - C6030 * C530 - C6029 * C550 + C6024 * C566) *
               C14707 +
           (C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567 +
            C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559) *
               C14706 +
           (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
            C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
               C14705) *
              C152155 * C151985 * C151967 * C132 +
          ((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
            C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
               C14705 +
           (C6029 * C551 - C6030 * C531 - C6029 * C552 + C6024 * C567 +
            C6031 * C555 - C6032 * C533 - C6031 * C556 + C151913 * C569) *
               C14706 +
           (C6029 * C553 - C6030 * C532 - C6029 * C554 + C6024 * C568 +
            C6031 * C557 - C6032 * C534 - C6031 * C558 + C151913 * C570) *
               C14707) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562 +
             C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561) *
                C14706 +
            (C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C14707) *
               C152155 * C151985 * C152373 -
           ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C152357 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C152326) *
              C323 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            (C9727 + C9726) * C14707) *
               C152155 * C151985 * C152357 -
           ((C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C14707 +
            (C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560 +
             C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561) *
                C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C152373 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560 +
             C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559) *
                C14706 +
            (C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C14707) *
               C152155 * C151985 * C152373 -
           ((C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519 +
             C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520) *
                C14707 +
            (C7390 + C7391) * C14706 + (C6373 + C6372) * C14705) *
               C152155 * C151985 * C152357 +
           (C6380 * C14705 + (C7389 + C7388) * C14706 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C14707) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C1211 -
           ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C1212 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            (C9727 + C9726) * C14707) *
               C152155 * C151985 * C1212 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C1211 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C151985 * C1211 -
           ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
            (C6373 + C6372) * C14705) *
               C152155 * C151985 * C1212 +
           (C6380 * C14705 + (C7389 + C7388) * C14706 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C14707) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C14705 +
           (C15253 + C15254) * C14706 + C15271 * C14707) *
              C152155 * C151985 * C1299 -
          ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
           (C6361 + C6360) * C14705) *
              C152155 * C151985 * C1300 +
          (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
              C152155 * C151985 * C1301 -
          ((C8078 + C8079) * C14707 + (C8077 + C8076) * C14706 +
           C7748 * C14705) *
              C152155 * C151985 * C1302 +
          (C7778 * C14705 + (C8823 + C8822) * C14706 +
           (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
            C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
               C14707) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C2161 -
           ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C2162 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 +
            (C6029 * C2413 - C6030 * C2401 - C6029 * C2414 + C6024 * C2425 +
             C6031 * C2415 - C6032 * C2402 - C6031 * C2416 + C151913 * C2426) *
                C14707) *
               C152155 * C152329) *
              C151967 * C152370 +
          (((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
            (C15263 + C15264) * C14707) *
               C152155 * C2162 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C2161 -
           ((C6031 * C2417 - C6032 * C2403 - C6031 * C2418 + C151913 * C2427 +
             C6029 * C2415 - C6030 * C2402 - C6029 * C2416 + C6024 * C2426) *
                C14707 +
            (C15264 + C15263) * C14706 + C15272 * C14705) *
               C152155 * C152329) *
              C151967 * C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C2161 -
           ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
            (C15266 + C15265) * C14705) *
               C152155 * C2162 +
           (C15273 * C14705 + (C15270 + C15269) * C14706 +
            (C6029 * C2417 - C6030 * C2403 - C6029 * C2418 + C6024 * C2427 +
             C6031 * C2419 - C6032 * C2404 - C6031 * C2420 + C151913 * C2428) *
                C14707) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C2161 -
           ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C2162 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 +
            (C6029 * C2413 - C6030 * C2401 - C6029 * C2414 + C6024 * C2425 +
             C6031 * C2415 - C6032 * C2402 - C6031 * C2416 + C151913 * C2426) *
                C14707) *
               C152155 * C152329) *
              C152373 +
          (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
            (C10155 + C10154) * C14707) *
               C152155 * C2162 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C2161 -
           ((C6031 * C9393 - C6032 * C9384 - C6031 * C9394 + C151913 * C9402 +
             C6029 * C9391 - C6030 * C9383 - C6029 * C9392 + C6024 * C9401) *
                C14707 +
            (C10154 + C10155) * C14706 + C16552 * C14705) *
               C152155 * C152329) *
              C152357 +
          ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C2161 -
           ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
            C8022 * C14705) *
               C152155 * C2162 +
           (C8080 * C14705 + (C10153 + C10152) * C14706 +
            (C6029 * C9395 - C6030 * C9385 - C6029 * C9396 + C6024 * C9403 +
             C6031 * C9397 - C6032 * C9386 - C6031 * C9398 + C151913 * C9404) *
                C14707) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C4047 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152284 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C4047) *
               C152030) *
              C151944 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C4047) *
               C152284 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C4047 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152030) *
              C151953 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152167 * C6026 +
             (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
                C4047 -
            ((C7388 + C7389) * C152167 * C6028 +
             (C7390 + C7391) * C152167 * C6027 +
             (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
              C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                 C152167 * C6026) *
                C152072) *
               C152284 +
           (((C7391 + C7390) * C152167 * C6026 +
             (C7389 + C7388) * C152167 * C6027 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152167 * C6028) *
                C152072 -
            ((C6376 + C6377) * C152167 * C6028 +
             (C6375 + C6374) * C152167 * C6027 +
             (C6373 + C6372) * C152167 * C6026) *
                C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C4047 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C152284 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C4047) *
               C152030) *
              C151944 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C4047) *
               C152284 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C4047 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152030) *
              C151953 +
          (((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
             C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
             C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
             C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                C152167 * C152155 * C4047 -
            (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
             C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
             C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
             C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                C152167 * C152155 * C152072) *
               C152284 +
           ((C134 * C1051 - C135 * C1043 - C134 * C1052 + C121 * C1061 +
             C136 * C1053 - C137 * C1044 - C136 * C1054 + C122 * C1062 +
             C138 * C1055 - C139 * C1045 - C138 * C1056 + C123 * C1063 +
             C140 * C1057 - C141 * C1046 - C140 * C1058 + C124 * C1064) *
                C152167 * C152155 * C152072 -
            (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
             C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
             C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
             C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                C152167 * C152155 * C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C4047 -
            (C17805 * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152072) *
               C152284 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             C18559 * C14707) *
                C152155 * C152072 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C4047) *
               C152030) *
              C151944 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             C18342 * C14707) *
                C152155 * C152072 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C4047) *
               C152284 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             C18129 * C14707) *
                C152155 * C4047 -
            ((C18142 + C18143) * C14707 + (C9726 + C9727) * C14706 +
             (C7385 + C7384) * C14705) *
                C152155 * C152072) *
               C152030) *
              C151953 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C14705 +
             (C15265 + C15266) * C14706 + C15273 * C14707) *
                C152155 * C4047 -
            ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
             (C15266 + C15265) * C14705) *
                C152155 * C152072) *
               C152284 +
           (((C7391 + C7390) * C14705 + (C15992 + C15993) * C14706 +
             (C6029 * C2903 - C6030 * C2897 - C6029 * C2904 + C6024 * C2909 +
              C6031 * C2905 - C6032 * C2898 - C6031 * C2906 + C151913 * C2910) *
                 C14707) *
                C152155 * C152072 -
            ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
             (C6373 + C6372) * C14705) *
                C152155 * C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152068 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152075 +
            ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
              C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                 C152167 * C6026 +
             (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
                C4719) *
               C152284 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152075 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152068 -
            ((C8078 + C8079) * C152167 * C6028 +
             (C8075 + C8074) * C152167 * C6027 +
             (C8073 + C8072) * C152167 * C6026) *
                C4719) *
               C152030) *
              C3181 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152075 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152068 -
            ((C9724 + C9725) * C152167 * C6028 +
             (C9726 + C9727) * C152167 * C6027 +
             (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
              C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                 C152167 * C6026) *
                C4719) *
               C152284 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152068 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152075 +
            ((C9727 + C9726) * C152167 * C6026 +
             (C9725 + C9724) * C152167 * C6027 +
             (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
              C6031 * C9696 - C6032 * C9695 - C6031 * C9697 + C151913 * C9698) *
                 C152167 * C6028) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152068 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152075 +
            (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
             C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
             C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
             C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
                C152167 * C152155 * C4719) *
               C152284 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152075 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152068 -
            (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
             C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
             C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
             C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
                C152167 * C152155 * C4719) *
               C152030) *
              C3181 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152075 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152068 -
            (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
             C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
             C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
             C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
                C152167 * C152155 * C4719) *
               C152284 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152068 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152075 +
            (C134 * C1499 - C135 * C1485 - C134 * C1500 + C121 * C1521 +
             C136 * C1497 - C137 * C1484 - C136 * C1498 + C122 * C1520 +
             C138 * C1495 - C139 * C1483 - C138 * C1496 + C123 * C1519 +
             C140 * C2624 - C141 * C2623 - C140 * C2625 + C124 * C2626) *
                C152167 * C152155 * C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C152068 -
            (C17805 * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152075 +
            (C15271 * C14705 + (C15258 + C15257) * C14706 + C17834 * C14707) *
                C152155 * C4719) *
               C152284 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             C18559 * C14707) *
                C152155 * C152075 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C152068 -
            ((C18572 + C18573) * C14707 + (C10154 + C10155) * C14706 +
             C16552 * C14705) *
                C152155 * C4719) *
               C152030) *
              C3181 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             C18342 * C14707) *
                C152155 * C152075 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C152068 -
            ((C18355 + C18356) * C14707 + (C15264 + C15263) * C14706 +
             C15272 * C14705) *
                C152155 * C4719) *
               C152284 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             C18129 * C14707) *
                C152155 * C152068 -
            ((C18142 + C18143) * C14707 + (C9726 + C9727) * C14706 +
             (C7385 + C7384) * C14705) *
                C152155 * C152075 +
            (C18129 * C14705 + (C18143 + C18142) * C14706 +
             (C6029 * C9393 - C6030 * C9384 - C6029 * C9394 + C6024 * C9402 +
              C6031 * C18125 - C6032 * C18124 - C6031 * C18126 +
              C151913 * C18127) *
                 C14707) *
                C152155 * C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C4047 -
               (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
                C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
                C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
                C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                   C152167 * C152155 * C152072) *
                  C151967 * C152379 +
              ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
                C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
                C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
                C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                   C152167 * C152155 * C152072 -
               (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                   C152167 * C152155 * C4047) *
                  C151967 * C152372 +
              ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
                C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
                C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
                C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                   C152167 * C152155 * C4047 -
               (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
                C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
                C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
                C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                   C152167 * C152155 * C152072) *
                  C151967 * C152355 +
              ((C134 * C535 - C135 * C523 - C134 * C536 + C121 * C559 +
                C136 * C551 - C137 * C531 - C136 * C552 + C122 * C567 +
                C138 * C555 - C139 * C533 - C138 * C556 + C123 * C569 +
                C140 * C844 - C141 * C843 - C140 * C845 + C124 * C846) *
                   C152167 * C152155 * C152072 -
               (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
                C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
                C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
                C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
                   C152167 * C152155 * C4047) *
                  C151967 * C152330) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                 C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                 C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                 C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                    C152167 * C152155 * C4047 -
                (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
                 C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
                 C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
                 C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                    C152167 * C152155 * C152072) *
                   C152373 +
               ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
                 C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
                 C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
                 C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                    C152167 * C152155 * C152072 -
                (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                 C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                 C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                 C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                    C152167 * C152155 * C4047) *
                   C152357 +
               ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
                 C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
                 C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
                 C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                    C152167 * C152155 * C4047 -
                (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
                 C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
                 C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
                 C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                    C152167 * C152155 * C152072) *
                   C152326) *
                  C3181 +
              (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
                 C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
                 C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
                 C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                    C152167 * C152155 * C152072 -
                (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                 C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                 C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                 C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                    C152167 * C152155 * C4047) *
                   C152373 +
               ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
                 C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
                 C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
                 C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                    C152167 * C152155 * C4047 -
                (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
                 C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
                 C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
                 C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                    C152167 * C152155 * C152072) *
                   C152357 +
               ((C134 * C1507 - C135 * C1489 - C134 * C1508 + C121 * C1525 +
                 C136 * C1505 - C137 * C1488 - C136 * C1506 + C122 * C1524 +
                 C138 * C1503 - C139 * C1487 - C138 * C1504 + C123 * C1523 +
                 C140 * C1866 - C141 * C1865 - C140 * C1867 + C124 * C1868) *
                    C152167 * C152155 * C152072 -
                (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
                 C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
                 C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
                 C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                    C152167 * C152155 * C4047) *
                   C152326) *
                  C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152381 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152378 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152365 -
           (C140 * C2405 - C141 * C2397 - C140 * C2406 + C124 * C2421 +
            C138 * C2407 - C139 * C2398 - C138 * C2408 + C123 * C2422 +
            C136 * C2409 - C137 * C2399 - C136 * C2410 + C122 * C2423 +
            C134 * C2411 - C135 * C2400 - C134 * C2412 + C121 * C2424) *
               C152167 * C152155 * C152342) *
              C151967 * C3181 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152378 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C152381 -
           (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
            C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
            C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
            C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
               C152167 * C152155 * C152365 +
           (C134 * C2409 - C135 * C2399 - C134 * C2410 + C121 * C2423 +
            C136 * C2407 - C137 * C2398 - C136 * C2408 + C122 * C2422 +
            C138 * C2405 - C139 * C2397 - C138 * C2406 + C123 * C2421 +
            C140 * C2762 - C141 * C2761 - C140 * C2763 + C124 * C2764) *
               C152167 * C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C4047 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C151967 * C152379 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C152072 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C4047) *
              C151967 * C152372 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C4047 -
           ((C7388 + C7389) * C152167 * C6028 +
            (C7390 + C7391) * C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152072) *
              C151967 * C152355 +
          (((C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559 +
             C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567) *
                C152167 * C6026 +
            (C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062 +
             C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063) *
                C152167 * C6027 +
            (C6029 * C1503 - C6030 * C1487 - C6029 * C1504 + C6024 * C1523 +
             C6031 * C1866 - C6032 * C1865 - C6031 * C1867 + C151913 * C1868) *
                C152167 * C6028) *
               C152072 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C4047 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152373 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C4047) *
               C152357 +
           ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
             C7779 * C6028) *
                C4047 -
            ((C8822 + C8823) * C152167 * C6028 +
             (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
                C152072) *
               C152326) *
              C3181 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C4047) *
               C152373 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C4047 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152357 +
           ((C8599 * C6026 + (C8605 + C8604) * C152167 * C6027 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152167 * C6028) *
                C152072 -
            ((C8294 + C8295) * C152167 * C6028 +
             (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152381 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152378 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152365 -
           ((C10152 + C10153) * C152167 * C6028 +
            (C10154 + C10155) * C152167 * C6027 +
            (C6031 * C2409 - C6032 * C2399 - C6031 * C2410 + C151913 * C2423 +
             C6029 * C2411 - C6030 * C2400 - C6029 * C2412 + C6024 * C2424) *
                C152167 * C6026) *
               C152342) *
              C151967 * C3181 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C152378 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C152381 -
           ((C9724 + C9725) * C152167 * C6028 +
            (C9726 + C9727) * C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C152365 +
           ((C6029 * C2409 - C6030 * C2399 - C6029 * C2410 + C6024 * C2423 +
             C6031 * C2407 - C6032 * C2398 - C6031 * C2408 + C151913 * C2422) *
                C152167 * C6026 +
            (C6029 * C2901 - C6030 * C2896 - C6029 * C2902 + C6024 * C2908 +
             C6031 * C2903 - C6032 * C2897 - C6031 * C2904 + C151913 * C2909) *
                C152167 * C6027 +
            (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
             C6031 * C9922 - C6032 * C9921 - C6031 * C9923 + C151913 * C9924) *
                C152167 * C6028) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C4047 -
           (C17805 * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152072) *
              C151967 * C152379 +
          (((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
            C18342 * C14707) *
               C152155 * C152072 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C4047) *
              C151967 * C152372 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C4047 -
           ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
            (C15266 + C15265) * C14705) *
               C152155 * C152072) *
              C151967 * C152355 +
          (((C15686 + C15687) * C14705 + (C15688 + C15689) * C14706 +
            (C6029 * C2405 - C6030 * C2397 - C6029 * C2406 + C6024 * C2421 +
             C6031 * C2762 - C6032 * C2761 - C6031 * C2763 + C151913 * C2764) *
                C14707) *
               C152155 * C152072 -
           ((C15689 + C15688) * C14707 + (C15687 + C15686) * C14706 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C14705) *
               C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C4047 -
            (C17805 * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152072) *
               C152373 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             C18559 * C14707) *
                C152155 * C152072 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C4047) *
               C152357 +
           ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
                C152155 * C4047 -
            ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
             C8022 * C14705) *
                C152155 * C152072) *
               C152326) *
              C3181 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             C18342 * C14707) *
                C152155 * C152072 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C4047) *
               C152373 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             C18129 * C14707) *
                C152155 * C4047 -
            ((C18142 + C18143) * C14707 + (C9726 + C9727) * C14706 +
             (C7385 + C7384) * C14705) *
                C152155 * C152072) *
               C152357 +
           ((C8590 * C14705 + (C9725 + C9724) * C14706 +
             (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
              C6031 * C9922 - C6032 * C9921 - C6031 * C9923 + C151913 * C9924) *
                 C14707) *
                C152155 * C152072 -
            ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
             C6379 * C14705) *
                C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C152381 -
           (C17805 * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152378 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 + C17834 * C14707) *
               C152155 * C152365 -
           ((C17832 + C17833) * C14707 + (C17831 + C17830) * C14706 +
            C17805 * C14705) *
               C152155 * C152342) *
              C151967 * C3181 +
          (((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
            C18342 * C14707) *
               C152155 * C152378 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C152381 -
           ((C18355 + C18356) * C14707 + (C15264 + C15263) * C14706 +
            C15272 * C14705) *
               C152155 * C152365 +
           (C18342 * C14705 + (C18356 + C18355) * C14706 +
            (C6029 * C17792 - C6030 * C17788 - C6029 * C17793 + C6024 * C17800 +
             C6031 * C18338 - C6032 * C18337 - C6031 * C18339 +
             C151913 * C18340) *
                C14707) *
               C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152068 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152075 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C4719) *
              C151967 * C151944 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C152075 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C152068 -
           ((C9724 + C9725) * C152167 * C6028 +
            (C9726 + C9727) * C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C4719) *
              C151967 * C151953 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C152068 -
           ((C7388 + C7389) * C152167 * C6028 +
            (C7390 + C7391) * C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152075 +
           ((C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C152167 * C6026 +
            (C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520 +
             C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519) *
                C152167 * C6027 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C152167 * C6028) *
               C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152068 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152075 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C4719) *
              C151967 * C151944 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152075 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C152068 -
           (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
            C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
            C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
            C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
               C152167 * C152155 * C4719) *
              C151967 * C151953 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C152068 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C152075 +
           (C134 * C547 - C135 * C529 - C134 * C548 + C121 * C565 +
            C136 * C549 - C137 * C530 - C136 * C550 + C122 * C566 +
            C138 * C553 - C139 * C532 - C138 * C554 + C123 * C568 +
            C140 * C557 - C141 * C534 - C140 * C558 + C124 * C570) *
               C152167 * C152155 * C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C152068 -
           (C17805 * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152075 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 + C17834 * C14707) *
               C152155 * C4719) *
              C151967 * C151944 +
          (((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
            C18342 * C14707) *
               C152155 * C152075 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C152068 -
           ((C18355 + C18356) * C14707 + (C15264 + C15263) * C14706 +
            C15272 * C14705) *
               C152155 * C4719) *
              C151967 * C151953 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C152068 -
           ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
            (C15266 + C15265) * C14705) *
               C152155 * C152075 +
           (C15273 * C14705 + (C15270 + C15269) * C14706 +
            (C6029 * C2417 - C6030 * C2403 - C6029 * C2418 + C6024 * C2427 +
             C6031 * C2419 - C6032 * C2404 - C6031 * C2420 + C151913 * C2428) *
                C14707) *
               C152155 * C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C4047 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C152373 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C4047) *
               C152357 +
           ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
             C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
             C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
             C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                C152167 * C152155 * C4047 -
            (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
             C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
             C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
             C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                C152167 * C152155 * C152072) *
               C152326) *
              C3181 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C4047) *
               C152373 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C4047 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152357 +
           ((C134 * C1507 - C135 * C1489 - C134 * C1508 + C121 * C1525 +
             C136 * C1505 - C137 * C1488 - C136 * C1506 + C122 * C1524 +
             C138 * C1503 - C139 * C1487 - C138 * C1504 + C123 * C1523 +
             C140 * C1866 - C141 * C1865 - C140 * C1867 + C124 * C1868) *
                C152167 * C152155 * C152072 -
            (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
             C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
             C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
             C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                C152167 * C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C4047 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152072) *
              C151967 * C152379 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152072 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C4047) *
              C151967 * C152372 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C4047 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C152072) *
              C151967 * C152355 +
          ((C134 * C535 - C135 * C523 - C134 * C536 + C121 * C559 +
            C136 * C551 - C137 * C531 - C136 * C552 + C122 * C567 +
            C138 * C555 - C139 * C533 - C138 * C556 + C123 * C569 +
            C140 * C844 - C141 * C843 - C140 * C845 + C124 * C846) *
               C152167 * C152155 * C152072 -
           (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
            C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
            C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
            C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
               C152167 * C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C4047 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C151967 * C152379 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C152072 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C4047) *
              C151967 * C152372 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C4047 -
           ((C7388 + C7389) * C152167 * C6028 +
            (C7390 + C7391) * C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152072) *
              C151967 * C152355 +
          (((C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559 +
             C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567) *
                C152167 * C6026 +
            (C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062 +
             C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063) *
                C152167 * C6027 +
            (C6029 * C1503 - C6030 * C1487 - C6029 * C1504 + C6024 * C1523 +
             C6031 * C1866 - C6032 * C1865 - C6031 * C1867 + C151913 * C1868) *
                C152167 * C6028) *
               C152072 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C4047 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152373 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C4047) *
               C152357 +
           ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
             C7779 * C6028) *
                C4047 -
            ((C8822 + C8823) * C152167 * C6028 +
             (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
                C152072) *
               C152326) *
              C3181 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C4047) *
               C152373 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C4047 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152357 +
           ((C8599 * C6026 + (C8605 + C8604) * C152167 * C6027 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152167 * C6028) *
                C152072 -
            ((C8294 + C8295) * C152167 * C6028 +
             (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C4047 -
           (C17805 * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152072) *
              C151967 * C152379 +
          (((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
            C18342 * C14707) *
               C152155 * C152072 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C4047) *
              C151967 * C152372 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C4047 -
           ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
            (C15266 + C15265) * C14705) *
               C152155 * C152072) *
              C151967 * C152355 +
          (((C15686 + C15687) * C14705 + (C15688 + C15689) * C14706 +
            (C6029 * C2405 - C6030 * C2397 - C6029 * C2406 + C6024 * C2421 +
             C6031 * C2762 - C6032 * C2761 - C6031 * C2763 + C151913 * C2764) *
                C14707) *
               C152155 * C152072 -
           ((C15689 + C15688) * C14707 + (C15687 + C15686) * C14706 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C14705) *
               C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C4047 -
            (C17805 * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152072) *
               C152373 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             C18559 * C14707) *
                C152155 * C152072 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C4047) *
               C152357 +
           ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
                C152155 * C4047 -
            ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
             C8022 * C14705) *
                C152155 * C152072) *
               C152326) *
              C3181 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             C18342 * C14707) *
                C152155 * C152072 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C4047) *
               C152373 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             C18129 * C14707) *
                C152155 * C4047 -
            ((C18142 + C18143) * C14707 + (C9726 + C9727) * C14706 +
             (C7385 + C7384) * C14705) *
                C152155 * C152072) *
               C152357 +
           ((C8590 * C14705 + (C9725 + C9724) * C14706 +
             (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
              C6031 * C9922 - C6032 * C9921 - C6031 * C9923 + C151913 * C9924) *
                 C14707) *
                C152155 * C152072 -
            ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
             C6379 * C14705) *
                C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C1661 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C1662 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C1663 -
           (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
            C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
            C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
            C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
               C152167 * C152155 * C151985 * C152336) *
              C152270 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C1662 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C1661 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C1663 +
           (C134 * C1317 - C135 * C1307 - C134 * C1318 + C121 * C1331 +
            C136 * C1315 - C137 * C1306 - C136 * C1316 + C122 * C1330 +
            C138 * C1313 - C139 * C1305 - C138 * C1314 + C123 * C1329 +
            C140 * C1668 - C141 * C1667 - C140 * C1669 + C124 * C1670) *
               C152167 * C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152284 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152030) *
              C703 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152030 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152284) *
              C704 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C152284 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152030) *
              C705 +
          ((C134 * C338 - C135 * C326 - C134 * C339 + C121 * C362 +
            C136 * C354 - C137 * C334 - C136 * C355 + C122 * C370 +
            C138 * C358 - C139 * C336 - C138 * C359 + C123 * C372 +
            C140 * C708 - C141 * C707 - C140 * C709 + C124 * C710) *
               C152167 * C152155 * C151985 * C152030 -
           (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
            C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
            C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
            C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
               C152167 * C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152284 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152030) *
              C703 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C152030 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152284) *
              C704 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152284 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152030) *
              C705 +
          (((C6820 + C6821) * C152167 * C6026 +
            (C6822 + C6823) * C152167 * C6027 +
            (C6029 * C1313 - C6030 * C1305 - C6029 * C1314 + C6024 * C1329 +
             C6031 * C1668 - C6032 * C1667 - C6031 * C1669 + C151913 * C1670) *
                C152167 * C6028) *
               C151985 * C152030 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C1661 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C1662 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C151985 * C1663 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C151985 * C152336) *
              C152270 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C1662 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C1661 -
           ((C8294 + C8295) * C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C1663 +
           (C8289 * C6026 + (C8295 + C8294) * C152167 * C6027 +
            (C6029 * C7735 - C6030 * C7731 - C6029 * C7736 + C6024 * C7743 +
             C6031 * C8276 - C6032 * C8275 - C6031 * C8277 + C151913 * C8278) *
                C152167 * C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C152284 -
           ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C152030) *
              C703 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            (C9727 + C9726) * C14707) *
               C152155 * C151985 * C152030 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C152284) *
              C704 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C151985 * C152284 -
           ((C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519 +
             C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520) *
                C14707 +
            (C7390 + C7391) * C14706 + (C6373 + C6372) * C14705) *
               C152155 * C151985 * C152030) *
              C705 +
          (((C6820 + C6821) * C14705 +
            (C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062 +
             C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063) *
                C14706 +
            (C6029 * C1495 - C6030 * C1483 - C6029 * C1496 + C6024 * C1519 +
             C6031 * C2624 - C6032 * C2623 - C6031 * C2625 + C151913 * C2626) *
                C14707) *
               C152155 * C151985 * C152030 -
           ((C6031 * C553 - C6032 * C532 - C6031 * C554 + C151913 * C568 +
             C6029 * C549 - C6030 * C530 - C6029 * C550 + C6024 * C566) *
                C14707 +
            (C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567 +
             C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559) *
                C14706 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C14705) *
               C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C1661 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C1662 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C1663 -
           ((C8078 + C8079) * C14707 + (C8077 + C8076) * C14706 +
            C7748 * C14705) *
               C152155 * C151985 * C152336) *
              C152270 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            (C9727 + C9726) * C14707) *
               C152155 * C151985 * C1662 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C1661 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C1663 +
           (C8280 * C14705 + (C8605 + C8604) * C14706 +
            (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
             C6031 * C9696 - C6032 * C9695 - C6031 * C9697 + C151913 * C9698) *
                C14707) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152285 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152072) *
              C1661 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152072 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C152285) *
              C1662 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C152285 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C152072) *
              C1663 +
          ((C134 * C2003 - C135 * C1999 - C134 * C2004 + C121 * C2011 +
            C136 * C2005 - C137 * C2000 - C136 * C2006 + C122 * C2012 +
            C138 * C2007 - C139 * C2001 - C138 * C2008 + C123 * C2013 +
            C140 * C2009 - C141 * C2002 - C140 * C2010 + C124 * C2014) *
               C152167 * C152155 * C152072 -
           (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
            C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
            C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
            C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
               C152167 * C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152285 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C152284 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152285) *
               C152030) *
              C323 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152285) *
               C152284 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152285 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152030) *
              C324 +
          (((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
             C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
             C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
             C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                C152167 * C152155 * C152285 -
            (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
             C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
             C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
             C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                C152167 * C152155 * C152072) *
               C152284 +
           ((C134 * C1051 - C135 * C1043 - C134 * C1052 + C121 * C1061 +
             C136 * C1053 - C137 * C1044 - C136 * C1054 + C122 * C1062 +
             C138 * C1055 - C139 * C1045 - C138 * C1056 + C123 * C1063 +
             C140 * C1057 - C141 * C1046 - C140 * C1058 + C124 * C1064) *
                C152167 * C152155 * C152072 -
            (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
             C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
             C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
             C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                C152167 * C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152285 -
            ((C7380 + C7381) * C152167 * C6028 +
             (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152284 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 +
             (C6029 * C2003 - C6030 * C1999 - C6029 * C2004 + C6024 * C2011 +
              C6031 * C2005 - C6032 * C2000 - C6031 * C2006 + C151913 * C2012) *
                 C152167 * C6028) *
                C152072 -
            ((C6364 + C6365) * C152167 * C6028 +
             (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152285) *
               C152030) *
              C323 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 +
             (C7386 + C7387) * C152167 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152285) *
               C152284 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 +
             (C6370 + C6371) * C152167 * C6028) *
                C152285 -
            ((C6031 * C2007 - C6032 * C2001 - C6031 * C2008 + C151913 * C2013 +
              C6029 * C2005 - C6030 * C2000 - C6029 * C2006 + C6024 * C2012) *
                 C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152030) *
              C324 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152167 * C6026 +
             (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
                C152285 -
            ((C7388 + C7389) * C152167 * C6028 +
             (C7390 + C7391) * C152167 * C6027 +
             (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
              C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                 C152167 * C6026) *
                C152072) *
               C152284 +
           (((C7391 + C7390) * C152167 * C6026 +
             (C7389 + C7388) * C152167 * C6027 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152167 * C6028) *
                C152072 -
            ((C6376 + C6377) * C152167 * C6028 +
             (C6375 + C6374) * C152167 * C6027 +
             (C6373 + C6372) * C152167 * C6026) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152285 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C1661 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C152072 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C152285) *
              C1662 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C152285 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152072) *
              C1663 +
          ((C8817 * C6026 + (C8823 + C8822) * C152167 * C6027 +
            (C6029 * C8801 - C6030 * C8799 - C6029 * C8802 + C6024 * C8805 +
             C6031 * C8803 - C6032 * C8800 - C6031 * C8804 + C151913 * C8806) *
                C152167 * C6028) *
               C152072 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C152285 -
            ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152072) *
               C152284 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             (C10155 + C10154) * C14707) *
                C152155 * C152072 -
            ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C152285) *
               C152030) *
              C323 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             (C15263 + C15264) * C14707) *
                C152155 * C152072 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C152285) *
               C152284 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             (C9727 + C9726) * C14707) *
                C152155 * C152285 -
            ((C6031 * C2903 - C6032 * C2897 - C6031 * C2904 + C151913 * C2909 +
              C6029 * C2901 - C6030 * C2896 - C6029 * C2902 + C6024 * C2908) *
                 C14707 +
             (C9726 + C9727) * C14706 + (C7385 + C7384) * C14705) *
                C152155 * C152072) *
               C152030) *
              C324 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C14705 +
             (C15265 + C15266) * C14706 + C15273 * C14707) *
                C152155 * C152285 -
            ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
             (C15266 + C15265) * C14705) *
                C152155 * C152072) *
               C152284 +
           (((C7391 + C7390) * C14705 + (C15992 + C15993) * C14706 +
             (C6029 * C2903 - C6030 * C2897 - C6029 * C2904 + C6024 * C2909 +
              C6031 * C2905 - C6032 * C2898 - C6031 * C2906 + C151913 * C2910) *
                 C14707) *
                C152155 * C152072 -
            ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
             (C6373 + C6372) * C14705) *
                C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C152285 -
           ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152072) *
              C1661 +
          (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
            (C10155 + C10154) * C14707) *
               C152155 * C152072 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C152285) *
              C1662 +
          ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C152285 -
           ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
            C8022 * C14705) *
               C152155 * C152072) *
              C1663 +
          ((C8808 * C14705 + (C8079 + C8078) * C14706 +
            (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 + C6024 * C10125 +
             C6031 * C10123 - C6032 * C10120 - C6031 * C10124 +
             C151913 * C10126) *
                C14707) *
               C152155 * C152072 -
           ((C8078 + C8079) * C14707 + (C8077 + C8076) * C14706 +
            C7748 * C14705) *
               C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
               C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
               C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
               C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                  C152167 * C152155 * C151985 * C151967 * C129 -
              (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
               C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
               C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
               C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                  C152167 * C152155 * C151985 * C151967 * C130 +
              (C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
               C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
               C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
               C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                  C152167 * C152155 * C151985 * C151967 * C131 -
              (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
               C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
               C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
               C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
                  C152167 * C152155 * C151985 * C151967 * C132 +
              (C134 * C158 - C135 * C146 - C134 * C159 + C121 * C170 +
               C136 * C160 - C137 * C147 - C136 * C161 + C122 * C171 +
               C138 * C162 - C139 * C148 - C138 * C163 + C123 * C172 +
               C140 * C164 - C141 * C149 - C140 * C165 + C124 * C173) *
                  C152167 * C152155 * C151985 * C151967 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C151985 * C152373 -
               (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                   C152167 * C152155 * C151985 * C152357 +
               (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
                C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
                C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
                C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                   C152167 * C152155 * C151985 * C152326) *
                  C323 +
              ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
                C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
                C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
                C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                   C152167 * C152155 * C151985 * C152357 -
               (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                   C152167 * C152155 * C151985 * C152373 -
               (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
                C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
                C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
                C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                   C152167 * C152155 * C151985 * C152326) *
                  C324 +
              ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
                C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
                C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
                C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                   C152167 * C152155 * C151985 * C152373 -
               (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
                C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
                C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
                C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                   C152167 * C152155 * C151985 * C152357 +
               (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
                C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
                C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
                C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
                   C152167 * C152155 * C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152374 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152359 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152329) *
              C151967 * C323 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152359 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C152374 -
           (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
            C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
            C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
            C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
               C152167 * C152155 * C152329) *
              C151967 * C324 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C152374 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C152359 +
           (C134 * C547 - C135 * C529 - C134 * C548 + C121 * C565 +
            C136 * C549 - C137 * C530 - C136 * C550 + C122 * C566 +
            C138 * C553 - C139 * C532 - C138 * C554 + C123 * C568 +
            C140 * C557 - C141 * C534 - C140 * C558 + C124 * C570) *
               C152167 * C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152326) *
              C152370 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C1212 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152326) *
              C152353 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C151985 * C1299 -
          (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 + C138 * C340 -
           C139 * C327 - C138 * C341 + C123 * C363 + C136 * C342 - C137 * C328 -
           C136 * C343 + C122 * C364 + C134 * C344 - C135 * C329 - C134 * C345 +
           C121 * C365) *
              C152167 * C152155 * C151985 * C1300 +
          (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 + C136 * C348 -
           C137 * C331 - C136 * C349 + C122 * C367 + C138 * C350 - C139 * C332 -
           C138 * C351 + C123 * C368 + C140 * C352 - C141 * C333 - C140 * C353 +
           C124 * C369) *
              C152167 * C152155 * C151985 * C1301 -
          (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
           C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
           C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
           C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
              C152167 * C152155 * C151985 * C1302 +
          (C134 * C1321 - C135 * C1309 - C134 * C1322 + C121 * C1333 +
           C136 * C1323 - C137 * C1310 - C136 * C1324 + C122 * C1334 +
           C138 * C1325 - C139 * C1311 - C138 * C1326 + C123 * C1335 +
           C140 * C1327 - C141 * C1312 - C140 * C1328 + C124 * C1336) *
              C152167 * C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152374 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152359 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152329) *
              C1211 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152359 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C152374 -
           (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
            C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
            C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
            C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
               C152167 * C152155 * C152329) *
              C1212 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C152374 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C152359 +
           (C134 * C1511 - C135 * C1491 - C134 * C1512 + C121 * C1527 +
            C136 * C1513 - C137 * C1492 - C136 * C1514 + C122 * C1528 +
            C138 * C1515 - C139 * C1493 - C138 * C1516 + C123 * C1529 +
            C140 * C1517 - C141 * C1494 - C140 * C1518 + C124 * C1530) *
               C152167 * C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6029 * C344 - C6030 * C329 - C6029 * C345 + C6024 * C365 +
            C6031 * C342 - C6032 * C328 - C6031 * C343 + C151913 * C364) *
               C152167 * C6027 +
           (C6029 * C346 - C6030 * C330 - C6029 * C347 + C6024 * C366 +
            C6031 * C348 - C6032 * C331 - C6031 * C349 + C151913 * C367) *
               C152167 * C6028) *
              C151985 * C151967 * C129 -
          ((C6031 * C350 - C6032 * C332 - C6031 * C351 + C151913 * C368 +
            C6029 * C348 - C6030 * C331 - C6029 * C349 + C6024 * C367) *
               C152167 * C6028 +
           (C6031 * C340 - C6032 * C327 - C6031 * C341 + C151913 * C363 +
            C6029 * C342 - C6030 * C328 - C6029 * C343 + C6024 * C364) *
               C152167 * C6027 +
           (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
            C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
               C152167 * C6026) *
              C151985 * C151967 * C130 +
          ((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
            C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
               C152167 * C6026 +
           (C6029 * C340 - C6030 * C327 - C6029 * C341 + C6024 * C363 +
            C6031 * C338 - C6032 * C326 - C6031 * C339 + C151913 * C362) *
               C152167 * C6027 +
           (C6029 * C350 - C6030 * C332 - C6029 * C351 + C6024 * C368 +
            C6031 * C352 - C6032 * C333 - C6031 * C353 + C151913 * C369) *
               C152167 * C6028) *
              C151985 * C151967 * C131 -
          ((C6031 * C356 - C6032 * C335 - C6031 * C357 + C151913 * C371 +
            C6029 * C352 - C6030 * C333 - C6029 * C353 + C6024 * C369) *
               C152167 * C6028 +
           (C6031 * C354 - C6032 * C334 - C6031 * C355 + C151913 * C370 +
            C6029 * C338 - C6030 * C326 - C6029 * C339 + C6024 * C362) *
               C152167 * C6027 +
           (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
            C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
               C152167 * C6026) *
              C151985 * C151967 * C132 +
          ((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
            C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
               C152167 * C6026 +
           (C6029 * C354 - C6030 * C334 - C6029 * C355 + C6024 * C370 +
            C6031 * C358 - C6032 * C336 - C6031 * C359 + C151913 * C372) *
               C152167 * C6027 +
           (C6029 * C356 - C6030 * C335 - C6029 * C357 + C6024 * C371 +
            C6031 * C360 - C6032 * C337 - C6031 * C361 + C151913 * C373) *
               C152167 * C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152373 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152357 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C323 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C152357 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152373 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152373 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152357 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152374 -
           ((C6031 * C1507 - C6032 * C1489 - C6031 * C1508 + C151913 * C1525 +
             C6029 * C1509 - C6030 * C1490 - C6029 * C1510 + C6024 * C1526) *
                C152167 * C6028 +
            (C6031 * C1049 - C6032 * C1042 - C6031 * C1050 + C151913 * C1060 +
             C6029 * C1047 - C6030 * C1041 - C6029 * C1048 + C6024 * C1059) *
                C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152359 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C6029 * C1501 - C6030 * C1486 - C6029 * C1502 + C6024 * C1522 +
             C6031 * C1499 - C6032 * C1485 - C6031 * C1500 + C151913 * C1521) *
                C152167 * C6027 +
            (C6029 * C1511 - C6030 * C1491 - C6029 * C1512 + C6024 * C1527 +
             C6031 * C1513 - C6032 * C1492 - C6031 * C1514 + C151913 * C1528) *
                C152167 * C6028) *
               C152329) *
              C151967 * C323 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C6029 * C1049 - C6030 * C1042 - C6029 * C1050 + C6024 * C1060 +
             C6031 * C1051 - C6032 * C1043 - C6031 * C1052 + C151913 * C1061) *
                C152167 * C6027 +
            (C6029 * C1507 - C6030 * C1489 - C6029 * C1508 + C6024 * C1525 +
             C6031 * C1505 - C6032 * C1488 - C6031 * C1506 + C151913 * C1524) *
                C152167 * C6028) *
               C152359 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C152374 -
           ((C6031 * C1515 - C6032 * C1493 - C6031 * C1516 + C151913 * C1529 +
             C6029 * C1513 - C6030 * C1492 - C6029 * C1514 + C6024 * C1528) *
                C152167 * C6028 +
            (C6031 * C1497 - C6032 * C1484 - C6031 * C1498 + C151913 * C1520 +
             C6029 * C1499 - C6030 * C1485 - C6029 * C1500 + C6024 * C1521) *
                C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C152329) *
              C151967 * C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C152374 -
           ((C6031 * C1503 - C6032 * C1487 - C6031 * C1504 + C151913 * C1523 +
             C6029 * C1505 - C6030 * C1488 - C6029 * C1506 + C6024 * C1524) *
                C152167 * C6028 +
            (C6031 * C1053 - C6032 * C1044 - C6031 * C1054 + C151913 * C1062 +
             C6029 * C1051 - C6030 * C1043 - C6029 * C1052 + C6024 * C1061) *
                C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152359 +
           ((C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C152167 * C6026 +
            (C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520 +
             C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519) *
                C152167 * C6027 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C152167 * C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C1211 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C1212 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C1212 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C1211 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C1211 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C1212 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
              C151985 * C1299 -
          (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
           (C6361 + C6360) * C152167 * C6026) *
              C151985 * C1300 +
          (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
              C151985 * C1301 -
          ((C7776 + C7777) * C152167 * C6028 +
           (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
              C151985 * C1302 +
          (C7779 * C6026 + (C7777 + C7776) * C152167 * C6027 +
           (C6029 * C7739 - C6030 * C7733 - C6029 * C7740 + C6024 * C7745 +
            C6031 * C7741 - C6032 * C7734 - C6031 * C7742 + C151913 * C7746) *
               C152167 * C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152374 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152359 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152329) *
              C1211 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 +
            (C8076 + C8077) * C152167 * C6028) *
               C152359 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C152374 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C152329) *
              C1212 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C152374 -
           ((C6031 * C8007 - C6032 * C7999 - C6031 * C8008 + C151913 * C8017 +
             C6029 * C8009 - C6030 * C8000 - C6029 * C8010 + C6024 * C8018) *
                C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152359 +
           (C8081 * C6026 + (C8079 + C8078) * C152167 * C6027 +
            (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
             C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                C152167 * C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C14705 +
           (C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562 +
            C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561) *
               C14706 +
           (C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
            C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
               C14707) *
              C152155 * C151985 * C151967 * C129 -
          ((C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
            C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
               C14707 +
           (C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560 +
            C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561) *
               C14706 +
           (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
            C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
               C14705) *
              C152155 * C151985 * C151967 * C130 +
          ((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
            C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
               C14705 +
           (C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560 +
            C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559) *
               C14706 +
           (C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
            C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
               C14707) *
              C152155 * C151985 * C151967 * C131 -
          ((C6031 * C553 - C6032 * C532 - C6031 * C554 + C151913 * C568 +
            C6029 * C549 - C6030 * C530 - C6029 * C550 + C6024 * C566) *
               C14707 +
           (C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567 +
            C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559) *
               C14706 +
           (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
            C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
               C14705) *
              C152155 * C151985 * C151967 * C132 +
          ((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
            C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
               C14705 +
           (C6029 * C551 - C6030 * C531 - C6029 * C552 + C6024 * C567 +
            C6031 * C555 - C6032 * C533 - C6031 * C556 + C151913 * C569) *
               C14706 +
           (C6029 * C553 - C6030 * C532 - C6029 * C554 + C6024 * C568 +
            C6031 * C557 - C6032 * C534 - C6031 * C558 + C151913 * C570) *
               C14707) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562 +
             C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561) *
                C14706 +
            (C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C14707) *
               C152155 * C151985 * C152373 -
           ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C152357 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C152326) *
              C323 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            (C9727 + C9726) * C14707) *
               C152155 * C151985 * C152357 -
           ((C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C14707 +
            (C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560 +
             C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561) *
                C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C152373 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560 +
             C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559) *
                C14706 +
            (C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C14707) *
               C152155 * C151985 * C152373 -
           ((C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519 +
             C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520) *
                C14707 +
            (C7390 + C7391) * C14706 + (C6373 + C6372) * C14705) *
               C152155 * C151985 * C152357 +
           (C6380 * C14705 + (C7389 + C7388) * C14706 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C14707) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C152374 -
           ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152359 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 +
            (C6029 * C2413 - C6030 * C2401 - C6029 * C2414 + C6024 * C2425 +
             C6031 * C2415 - C6032 * C2402 - C6031 * C2416 + C151913 * C2426) *
                C14707) *
               C152155 * C152329) *
              C151967 * C323 +
          (((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
            (C15263 + C15264) * C14707) *
               C152155 * C152359 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C152374 -
           ((C6031 * C2417 - C6032 * C2403 - C6031 * C2418 + C151913 * C2427 +
             C6029 * C2415 - C6030 * C2402 - C6029 * C2416 + C6024 * C2426) *
                C14707 +
            (C15264 + C15263) * C14706 + C15272 * C14705) *
               C152155 * C152329) *
              C151967 * C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C152374 -
           ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
            (C15266 + C15265) * C14705) *
               C152155 * C152359 +
           (C15273 * C14705 + (C15270 + C15269) * C14706 +
            (C6029 * C2417 - C6030 * C2403 - C6029 * C2418 + C6024 * C2427 +
             C6031 * C2419 - C6032 * C2404 - C6031 * C2420 + C151913 * C2428) *
                C14707) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C1211 -
           ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C1212 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            (C9727 + C9726) * C14707) *
               C152155 * C151985 * C1212 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C1211 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C151985 * C1211 -
           ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
            (C6373 + C6372) * C14705) *
               C152155 * C151985 * C1212 +
           (C6380 * C14705 + (C7389 + C7388) * C14706 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C14707) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C14705 +
           (C15253 + C15254) * C14706 + C15271 * C14707) *
              C152155 * C151985 * C1299 -
          ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
           (C6361 + C6360) * C14705) *
              C152155 * C151985 * C1300 +
          (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
              C152155 * C151985 * C1301 -
          ((C8078 + C8079) * C14707 + (C8077 + C8076) * C14706 +
           C7748 * C14705) *
              C152155 * C151985 * C1302 +
          (C7778 * C14705 + (C8823 + C8822) * C14706 +
           (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
            C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
               C14707) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C152374 -
           ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152359 +
           (C15271 * C14705 + (C15258 + C15257) * C14706 +
            (C6029 * C2413 - C6030 * C2401 - C6029 * C2414 + C6024 * C2425 +
             C6031 * C2415 - C6032 * C2402 - C6031 * C2416 + C151913 * C2426) *
                C14707) *
               C152155 * C152329) *
              C1211 +
          (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
            (C10155 + C10154) * C14707) *
               C152155 * C152359 -
           (C16552 * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C152374 -
           ((C6031 * C9393 - C6032 * C9384 - C6031 * C9394 + C151913 * C9402 +
             C6029 * C9391 - C6030 * C9383 - C6029 * C9392 + C6024 * C9401) *
                C14707 +
            (C10154 + C10155) * C14706 + C16552 * C14705) *
               C152155 * C152329) *
              C1212 +
          ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C152374 -
           ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
            C8022 * C14705) *
               C152155 * C152359 +
           (C8080 * C14705 + (C10153 + C10152) * C14706 +
            (C6029 * C9395 - C6030 * C9385 - C6029 * C9396 + C6024 * C9403 +
             C6031 * C9397 - C6032 * C9386 - C6031 * C9398 + C151913 * C9404) *
                C14707) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152285 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C1211 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152285) *
               C1212 +
           ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
             C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
             C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
             C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                C152167 * C152155 * C152285 -
            (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
             C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
             C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
             C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                C152167 * C152155 * C152072) *
               C152326) *
              C152270 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152285) *
               C1211 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152285 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C1212 +
           ((C134 * C1507 - C135 * C1489 - C134 * C1508 + C121 * C1525 +
             C136 * C1505 - C137 * C1488 - C136 * C1506 + C122 * C1524 +
             C138 * C1503 - C139 * C1487 - C138 * C1504 + C123 * C1523 +
             C140 * C1866 - C141 * C1865 - C140 * C1867 + C124 * C1868) *
                C152167 * C152155 * C152072 -
            (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
             C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
             C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
             C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                C152167 * C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152285 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152072) *
              C151967 * C703 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152072 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C152285) *
              C151967 * C704 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C152285 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C152072) *
              C151967 * C705 +
          ((C134 * C535 - C135 * C523 - C134 * C536 + C121 * C559 +
            C136 * C551 - C137 * C531 - C136 * C552 + C122 * C567 +
            C138 * C555 - C139 * C533 - C138 * C556 + C123 * C569 +
            C140 * C844 - C141 * C843 - C140 * C845 + C124 * C846) *
               C152167 * C152155 * C152072 -
           (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
            C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
            C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
            C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
               C152167 * C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152285 -
           ((C6031 * C1507 - C6032 * C1489 - C6031 * C1508 + C151913 * C1525 +
             C6029 * C1509 - C6030 * C1490 - C6029 * C1510 + C6024 * C1526) *
                C152167 * C6028 +
            (C6031 * C1049 - C6032 * C1042 - C6031 * C1050 + C151913 * C1060 +
             C6029 * C1047 - C6030 * C1041 - C6029 * C1048 + C6024 * C1059) *
                C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C151967 * C703 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C6029 * C1049 - C6030 * C1042 - C6029 * C1050 + C6024 * C1060 +
             C6031 * C1051 - C6032 * C1043 - C6031 * C1052 + C151913 * C1061) *
                C152167 * C6027 +
            (C6029 * C1507 - C6030 * C1489 - C6029 * C1508 + C6024 * C1525 +
             C6031 * C1505 - C6032 * C1488 - C6031 * C1506 + C151913 * C1524) *
                C152167 * C6028) *
               C152072 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C152285) *
              C151967 * C704 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C152285 -
           ((C6031 * C1503 - C6032 * C1487 - C6031 * C1504 + C151913 * C1523 +
             C6029 * C1505 - C6030 * C1488 - C6029 * C1506 + C6024 * C1524) *
                C152167 * C6028 +
            (C6031 * C1053 - C6032 * C1044 - C6031 * C1054 + C151913 * C1062 +
             C6029 * C1051 - C6030 * C1043 - C6029 * C1052 + C6024 * C1061) *
                C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152072) *
              C151967 * C705 +
          (((C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559 +
             C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567) *
                C152167 * C6026 +
            (C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062 +
             C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063) *
                C152167 * C6027 +
            (C6029 * C1503 - C6030 * C1487 - C6029 * C1504 + C6024 * C1523 +
             C6031 * C1866 - C6032 * C1865 - C6031 * C1867 + C151913 * C1868) *
                C152167 * C6028) *
               C152072 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152285 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C1211 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 +
             (C8076 + C8077) * C152167 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152285) *
               C1212 +
           ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
             C7779 * C6028) *
                C152285 -
            ((C6031 * C8007 - C6032 * C7999 - C6031 * C8008 + C151913 * C8017 +
              C6029 * C8009 - C6030 * C8000 - C6029 * C8010 + C6024 * C8018) *
                 C152167 * C6028 +
             (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
                C152072) *
               C152326) *
              C152270 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152285) *
               C1211 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152285 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C1212 +
           ((C8599 * C6026 + (C8605 + C8604) * C152167 * C6027 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152167 * C6028) *
                C152072 -
            ((C8294 + C8295) * C152167 * C6028 +
             (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C152285 -
           ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
            (C15254 + C15253) * C14705) *
               C152155 * C152072) *
              C151967 * C703 +
          (((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
            (C15263 + C15264) * C14707) *
               C152155 * C152072 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C152285) *
              C151967 * C704 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C152285 -
           ((C15269 + C15270) * C14707 + (C15268 + C15267) * C14706 +
            (C15266 + C15265) * C14705) *
               C152155 * C152072) *
              C151967 * C705 +
          (((C15686 + C15687) * C14705 + (C15688 + C15689) * C14706 +
            (C6029 * C2405 - C6030 * C2397 - C6029 * C2406 + C6024 * C2421 +
             C6031 * C2762 - C6032 * C2761 - C6031 * C2763 + C151913 * C2764) *
                C14707) *
               C152155 * C152072 -
           ((C15689 + C15688) * C14707 + (C15687 + C15686) * C14706 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C14705) *
               C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C14705 +
             (C15253 + C15254) * C14706 + C15271 * C14707) *
                C152155 * C152285 -
            ((C15257 + C15258) * C14707 + (C15256 + C15255) * C14706 +
             (C15254 + C15253) * C14705) *
                C152155 * C152072) *
               C1211 +
           (((C7383 + C7382) * C14705 + (C8072 + C8073) * C14706 +
             (C10155 + C10154) * C14707) *
                C152155 * C152072 -
            (C16552 * C14707 + (C7382 + C7383) * C14706 +
             (C6361 + C6360) * C14705) *
                C152155 * C152285) *
               C1212 +
           ((C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
                C152155 * C152285 -
            ((C10152 + C10153) * C14707 + (C8075 + C8074) * C14706 +
             C8022 * C14705) *
                C152155 * C152072) *
               C152326) *
              C152270 +
          ((((C15259 + C15260) * C14705 + (C15261 + C15262) * C14706 +
             (C15263 + C15264) * C14707) *
                C152155 * C152072 -
            (C15272 * C14707 + (C15260 + C15259) * C14706 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C14705) *
                C152155 * C152285) *
               C1211 +
           (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
             (C9727 + C9726) * C14707) *
                C152155 * C152285 -
            ((C6031 * C2903 - C6032 * C2897 - C6031 * C2904 + C151913 * C2909 +
              C6029 * C2901 - C6030 * C2896 - C6029 * C2902 + C6024 * C2908) *
                 C14707 +
             (C9726 + C9727) * C14706 + (C7385 + C7384) * C14705) *
                C152155 * C152072) *
               C1212 +
           ((C8590 * C14705 + (C9725 + C9724) * C14706 +
             (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
              C6031 * C9922 - C6032 * C9921 - C6031 * C9923 + C151913 * C9924) *
                 C14707) *
                C152155 * C152072 -
            ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
             C6379 * C14705) *
                C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152357 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152326) *
              C323 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152357 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152326) *
              C324 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152357 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C151985 * C151967 * C129 -
          (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 + C138 * C156 -
           C139 * C145 - C138 * C157 + C123 * C169 + C136 * C154 - C137 * C144 -
           C136 * C155 + C122 * C168 + C134 * C152 - C135 * C143 - C134 * C153 +
           C121 * C167) *
              C152167 * C152155 * C151985 * C151967 * C130 +
          (C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 + C136 * C156 -
           C137 * C145 - C136 * C157 + C122 * C169 + C138 * C158 - C139 * C146 -
           C138 * C159 + C123 * C170 + C140 * C160 - C141 * C147 - C140 * C161 +
           C124 * C171) *
              C152167 * C152155 * C151985 * C151967 * C131 -
          (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 + C138 * C160 -
           C139 * C147 - C138 * C161 + C123 * C171 + C136 * C158 - C137 * C146 -
           C136 * C159 + C122 * C170 + C134 * C156 - C135 * C145 - C134 * C157 +
           C121 * C169) *
              C152167 * C152155 * C151985 * C151967 * C132 +
          (C134 * C158 - C135 * C146 - C134 * C159 + C121 * C170 + C136 * C160 -
           C137 * C147 - C136 * C161 + C122 * C171 + C138 * C162 - C139 * C148 -
           C138 * C163 + C123 * C172 + C140 * C164 - C141 * C149 - C140 * C165 +
           C124 * C173) *
              C152167 * C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152326) *
              C152370 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C1212 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152326) *
              C152353 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C151985 * C1299 -
          (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 + C138 * C340 -
           C139 * C327 - C138 * C341 + C123 * C363 + C136 * C342 - C137 * C328 -
           C136 * C343 + C122 * C364 + C134 * C344 - C135 * C329 - C134 * C345 +
           C121 * C365) *
              C152167 * C152155 * C151985 * C1300 +
          (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 + C136 * C348 -
           C137 * C331 - C136 * C349 + C122 * C367 + C138 * C350 - C139 * C332 -
           C138 * C351 + C123 * C368 + C140 * C352 - C141 * C333 - C140 * C353 +
           C124 * C369) *
              C152167 * C152155 * C151985 * C1301 -
          (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
           C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
           C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
           C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
              C152167 * C152155 * C151985 * C1302 +
          (C134 * C1321 - C135 * C1309 - C134 * C1322 + C121 * C1333 +
           C136 * C1323 - C137 * C1310 - C136 * C1324 + C122 * C1334 +
           C138 * C1325 - C139 * C1311 - C138 * C1326 + C123 * C1335 +
           C140 * C1327 - C141 * C1312 - C140 * C1328 + C124 * C1336) *
              C152167 * C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6029 * C344 - C6030 * C329 - C6029 * C345 + C6024 * C365 +
            C6031 * C342 - C6032 * C328 - C6031 * C343 + C151913 * C364) *
               C152167 * C6027 +
           (C6029 * C346 - C6030 * C330 - C6029 * C347 + C6024 * C366 +
            C6031 * C348 - C6032 * C331 - C6031 * C349 + C151913 * C367) *
               C152167 * C6028) *
              C151985 * C151967 * C129 -
          ((C6031 * C350 - C6032 * C332 - C6031 * C351 + C151913 * C368 +
            C6029 * C348 - C6030 * C331 - C6029 * C349 + C6024 * C367) *
               C152167 * C6028 +
           (C6031 * C340 - C6032 * C327 - C6031 * C341 + C151913 * C363 +
            C6029 * C342 - C6030 * C328 - C6029 * C343 + C6024 * C364) *
               C152167 * C6027 +
           (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
            C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
               C152167 * C6026) *
              C151985 * C151967 * C130 +
          ((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
            C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
               C152167 * C6026 +
           (C6029 * C340 - C6030 * C327 - C6029 * C341 + C6024 * C363 +
            C6031 * C338 - C6032 * C326 - C6031 * C339 + C151913 * C362) *
               C152167 * C6027 +
           (C6029 * C350 - C6030 * C332 - C6029 * C351 + C6024 * C368 +
            C6031 * C352 - C6032 * C333 - C6031 * C353 + C151913 * C369) *
               C152167 * C6028) *
              C151985 * C151967 * C131 -
          ((C6031 * C356 - C6032 * C335 - C6031 * C357 + C151913 * C371 +
            C6029 * C352 - C6030 * C333 - C6029 * C353 + C6024 * C369) *
               C152167 * C6028 +
           (C6031 * C354 - C6032 * C334 - C6031 * C355 + C151913 * C370 +
            C6029 * C338 - C6030 * C326 - C6029 * C339 + C6024 * C362) *
               C152167 * C6027 +
           (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
            C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
               C152167 * C6026) *
              C151985 * C151967 * C132 +
          ((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
            C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
               C152167 * C6026 +
           (C6029 * C354 - C6030 * C334 - C6029 * C355 + C6024 * C370 +
            C6031 * C358 - C6032 * C336 - C6031 * C359 + C151913 * C372) *
               C152167 * C6027 +
           (C6029 * C356 - C6030 * C335 - C6029 * C357 + C6024 * C371 +
            C6031 * C360 - C6032 * C337 - C6031 * C361 + C151913 * C373) *
               C152167 * C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152373 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152357 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C323 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C152357 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152373 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152373 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152357 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C1211 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C1212 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C1212 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C1211 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C1211 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C1212 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
              C151985 * C1299 -
          (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
           (C6361 + C6360) * C152167 * C6026) *
              C151985 * C1300 +
          (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
              C151985 * C1301 -
          ((C7776 + C7777) * C152167 * C6028 +
           (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
              C151985 * C1302 +
          (C7779 * C6026 + (C7777 + C7776) * C152167 * C6027 +
           (C6029 * C7739 - C6030 * C7733 - C6029 * C7740 + C6024 * C7745 +
            C6031 * C7741 - C6032 * C7734 - C6031 * C7742 + C151913 * C7746) *
               C152167 * C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C14705 +
           (C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562 +
            C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561) *
               C14706 +
           (C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
            C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
               C14707) *
              C152155 * C151985 * C151967 * C129 -
          ((C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
            C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
               C14707 +
           (C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560 +
            C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561) *
               C14706 +
           (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
            C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
               C14705) *
              C152155 * C151985 * C151967 * C130 +
          ((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
            C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
               C14705 +
           (C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560 +
            C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559) *
               C14706 +
           (C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
            C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
               C14707) *
              C152155 * C151985 * C151967 * C131 -
          ((C6031 * C553 - C6032 * C532 - C6031 * C554 + C151913 * C568 +
            C6029 * C549 - C6030 * C530 - C6029 * C550 + C6024 * C566) *
               C14707 +
           (C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567 +
            C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559) *
               C14706 +
           (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
            C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
               C14705) *
              C152155 * C151985 * C151967 * C132 +
          ((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
            C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
               C14705 +
           (C6029 * C551 - C6030 * C531 - C6029 * C552 + C6024 * C567 +
            C6031 * C555 - C6032 * C533 - C6031 * C556 + C151913 * C569) *
               C14706 +
           (C6029 * C553 - C6030 * C532 - C6029 * C554 + C6024 * C568 +
            C6031 * C557 - C6032 * C534 - C6031 * C558 + C151913 * C570) *
               C14707) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562 +
             C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561) *
                C14706 +
            (C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C14707) *
               C152155 * C151985 * C152373 -
           ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C152357 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C152326) *
              C323 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            (C9727 + C9726) * C14707) *
               C152155 * C151985 * C152357 -
           ((C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C14707 +
            (C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560 +
             C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561) *
                C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C152373 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560 +
             C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559) *
                C14706 +
            (C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C14707) *
               C152155 * C151985 * C152373 -
           ((C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519 +
             C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520) *
                C14707 +
            (C7390 + C7391) * C14706 + (C6373 + C6372) * C14705) *
               C152155 * C151985 * C152357 +
           (C6380 * C14705 + (C7389 + C7388) * C14706 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C14707) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C14705 +
            (C15253 + C15254) * C14706 + C15271 * C14707) *
               C152155 * C151985 * C1211 -
           ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
            (C6361 + C6360) * C14705) *
               C152155 * C151985 * C1212 +
           (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C6366 + C6367) * C14705 + (C7384 + C7385) * C14706 +
            (C9727 + C9726) * C14707) *
               C152155 * C151985 * C1212 -
           (C15272 * C14707 + (C15260 + C15259) * C14706 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C14705) *
               C152155 * C151985 * C1211 -
           ((C9724 + C9725) * C14707 + (C7387 + C7386) * C14706 +
            C6379 * C14705) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C14705 +
            (C15265 + C15266) * C14706 + C15273 * C14707) *
               C152155 * C151985 * C1211 -
           ((C15993 + C15992) * C14707 + (C7390 + C7391) * C14706 +
            (C6373 + C6372) * C14705) *
               C152155 * C151985 * C1212 +
           (C6380 * C14705 + (C7389 + C7388) * C14706 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C14707) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C14705 +
           (C15253 + C15254) * C14706 + C15271 * C14707) *
              C152155 * C151985 * C1299 -
          ((C8073 + C8072) * C14707 + (C7382 + C7383) * C14706 +
           (C6361 + C6360) * C14705) *
              C152155 * C151985 * C1300 +
          (C6378 * C14705 + (C7381 + C7380) * C14706 + C8080 * C14707) *
              C152155 * C151985 * C1301 -
          ((C8078 + C8079) * C14707 + (C8077 + C8076) * C14706 +
           C7748 * C14705) *
              C152155 * C151985 * C1302 +
          (C7778 * C14705 + (C8823 + C8822) * C14706 +
           (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
            C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
               C14707) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C152026 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C152033 +
           ((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C151985 * C3525) *
              C151944 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C152033 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C152026 -
           ((C25645 + C25646 + C25647) * C152231 +
            (C23472 + C23471 + C23470) * C152302) *
               C152155 * C151985 * C3525) *
              C151953 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C151985 * C152026 -
           ((C24456 + C24457 + C24458) * C152231 +
            (C23475 + C23474 + C23473) * C152302) *
               C152155 * C151985 * C152033 +
           ((C23478 + C23477 + C23476) * C152302 +
            (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
             C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
             C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
             C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                C152231) *
               C152155 * C151985 * C3525) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C152285 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152072) *
               C152026 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152072 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C152285) *
               C152033 +
           (((C23466 + C23465 + C23464) * C152302 +
             (C25116 + C25117 + C25118) * C152231) *
                C152155 * C152285 -
            ((C25119 + C25120 + C25121) * C152231 +
             (C25118 + C25117 + C25116) * C152302) *
                C152155 * C152072) *
               C3525) *
              C3181 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152072 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C152285) *
               C152026 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C152285 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152072) *
               C152033 +
           (((C25647 + C25646 + C25645) * C152302 +
             (C23128 * C1513 - C23129 * C1492 - C23128 * C1514 +
              C152349 * C1528 + C23130 * C1515 - C23131 * C1493 -
              C23130 * C1516 + C152350 * C1529 + C23132 * C1517 -
              C23133 * C1494 - C23132 * C1518 + C23125 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C25645 + C25646 + C25647) * C152231 +
             (C23472 + C23471 + C23470) * C152302) *
                C152155 * C152285) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C152380 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C152376 +
           ((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C151985 * C152362 -
           ((C25860 + C25861 + C25862) * C152231 +
            (C24837 + C24836 + C24835) * C152302) *
               C152155 * C151985 * C152336) *
              C3181 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C152376 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C152380 -
           ((C25645 + C25646 + C25647) * C152231 +
            (C23472 + C23471 + C23470) * C152302) *
               C152155 * C151985 * C152362 +
           ((C25336 + C25335 + C25334) * C152302 +
            (C23128 * C2005 - C23129 * C2000 - C23128 * C2006 +
             C152349 * C2012 + C23130 * C2007 - C23131 * C2001 -
             C23130 * C2008 + C152350 * C2013 + C23132 * C2009 -
             C23133 * C2002 - C23132 * C2010 + C23125 * C2014) *
                C152231) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C3041 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C152030) *
              C152379 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C152030 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C3041) *
              C152372 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C151985 * C3041 -
           ((C24456 + C24457 + C24458) * C152231 +
            (C23475 + C23474 + C23473) * C152302) *
               C152155 * C151985 * C152030) *
              C152355 +
          (((C23909 + C23910 + C23911) * C152302 +
            (C23128 * C1053 - C23129 * C1044 - C23128 * C1054 +
             C152349 * C1062 + C23130 * C1055 - C23131 * C1045 -
             C23130 * C1056 + C152350 * C1063 + C23132 * C1057 -
             C23133 * C1046 - C23132 * C1058 + C23125 * C1064) *
                C152231) *
               C152155 * C151985 * C152030 -
           ((C32663 + C32662 + C32661) * C152231 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152302) *
               C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C152374 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152359 +
            ((C32242 + C32241 + C32240) * C152302 +
             (C34784 + C34785 + C34786) * C152231) *
                C152155 * C152329) *
               C3041 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152359 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C152374 -
            ((C27138 + C27139 + C27140) * C152231 +
             (C25115 + C25114 + C25113) * C152302) *
                C152155 * C152329) *
               C152030) *
              C3181 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152359 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C152374 -
            ((C35292 + C35293 + C35294) * C152231 +
             (C32248 + C32247 + C32246) * C152302) *
                C152155 * C152329) *
               C3041 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C152374 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152359 +
            ((C26731 + C26730 + C26729) * C152302 +
             (C23128 * C2901 - C23129 * C2896 - C23128 * C2902 +
              C152349 * C2908 + C23130 * C2903 - C23131 * C2897 -
              C23130 * C2904 + C152350 * C2909 + C23132 * C2905 -
              C23133 * C2898 - C23132 * C2906 + C23125 * C2910) *
                 C152231) *
                C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C152285 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152072) *
               C3041 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152072 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C152285) *
               C152030) *
              C151944 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152072 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C152285) *
               C3041 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C152285 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152072) *
               C152030) *
              C151953 +
          ((((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
              C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
              C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                 C152302 +
             (C32249 + C32250 + C32251) * C152231) *
                C152155 * C152285 -
            ((C32252 + C32253 + C32254) * C152231 +
             (C32251 + C32250 + C32249) * C152302) *
                C152155 * C152072) *
               C3041 +
           (((C24458 + C24457 + C24456) * C152302 +
             (C23128 * C1497 - C23129 * C1484 - C23128 * C1498 +
              C152349 * C1520 + C23130 * C1495 - C23131 * C1483 -
              C23130 * C1496 + C152350 * C1519 + C23132 * C2624 -
              C23133 * C2623 - C23132 * C2625 + C23125 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C24456 + C24457 + C24458) * C152231 +
             (C23475 + C23474 + C23473) * C152302) *
                C152155 * C152285) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C3041 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C152030) *
              C152379 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C152030 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C3041) *
              C152372 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C151985 * C3041 -
           ((C24456 + C24457 + C24458) * C152231 +
            (C23475 + C23474 + C23473) * C152302) *
               C152155 * C151985 * C152030) *
              C152355 +
          (((C23909 + C23910 + C23911) * C152302 +
            (C23128 * C1053 - C23129 * C1044 - C23128 * C1054 +
             C152349 * C1062 + C23130 * C1055 - C23131 * C1045 -
             C23130 * C1056 + C152350 * C1063 + C23132 * C1057 -
             C23133 * C1046 - C23132 * C1058 + C23125 * C1064) *
                C152231) *
               C152155 * C151985 * C152030 -
           ((C32663 + C32662 + C32661) * C152231 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152302) *
               C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C152380 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C152376 +
           ((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C151985 * C152362 -
           ((C25860 + C25861 + C25862) * C152231 +
            (C24837 + C24836 + C24835) * C152302) *
               C152155 * C151985 * C152336) *
              C3181 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C152376 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C152380 -
           ((C25645 + C25646 + C25647) * C152231 +
            (C23472 + C23471 + C23470) * C152302) *
               C152155 * C151985 * C152362 +
           ((C25336 + C25335 + C25334) * C152302 +
            (C23128 * C2005 - C23129 * C2000 - C23128 * C2006 +
             C152349 * C2012 + C23130 * C2007 - C23131 * C2001 -
             C23130 * C2008 + C152350 * C2013 + C23132 * C2009 -
             C23133 * C2002 - C23132 * C2010 + C23125 * C2014) *
                C152231) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C4047 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152072) *
               C152026 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152072 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C4047) *
               C152033 +
           (((C23466 + C23465 + C23464) * C152302 +
             (C25116 + C25117 + C25118) * C152231) *
                C152155 * C4047 -
            ((C25119 + C25120 + C25121) * C152231 +
             (C25118 + C25117 + C25116) * C152302) *
                C152155 * C152072) *
               C3525) *
              C152270 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152072 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C4047) *
               C152026 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C4047 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152072) *
               C152033 +
           (((C25647 + C25646 + C25645) * C152302 +
             (C23128 * C1513 - C23129 * C1492 - C23128 * C1514 +
              C152349 * C1528 + C23130 * C1515 - C23131 * C1493 -
              C23130 * C1516 + C152350 * C1529 + C23132 * C1517 -
              C23133 * C1494 - C23132 * C1518 + C23125 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C25645 + C25646 + C25647) * C152231 +
             (C23472 + C23471 + C23470) * C152302) *
                C152155 * C4047) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C152068 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152075 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C34784 + C34785 + C34786) * C152231) *
               C152155 * C4719) *
              C152026 +
          (((C24452 + C24451 + C24450) * C152302 +
            (C25113 + C25114 + C25115) * C152231) *
               C152155 * C152075 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C152068 -
           ((C27138 + C27139 + C27140) * C152231 +
            (C25115 + C25114 + C25113) * C152302) *
               C152155 * C4719) *
              C152033 +
          (((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C152068 -
           ((C25119 + C25120 + C25121) * C152231 +
            (C25118 + C25117 + C25116) * C152302) *
               C152155 * C152075 +
           ((C25121 + C25120 + C25119) * C152302 +
            (C23128 * C9389 - C23129 * C9382 - C23128 * C9390 +
             C152349 * C9400 + C23130 * C9387 - C23131 * C9381 -
             C23130 * C9388 + C152350 * C9399 + C23132 * C9922 -
             C23133 * C9921 - C23132 * C9923 + C23125 * C9924) *
                C152231) *
               C152155 * C4719) *
              C3525) *
         C151939) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C4047 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152072) *
              C152380 +
          (((C24452 + C24451 + C24450) * C152302 +
            (C25113 + C25114 + C25115) * C152231) *
               C152155 * C152072 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C4047) *
              C152376 +
          (((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C4047 -
           ((C25119 + C25120 + C25121) * C152231 +
            (C25118 + C25117 + C25116) * C152302) *
               C152155 * C152072) *
              C152362 +
          (((C25862 + C25861 + C25860) * C152302 +
            (C23128 * C8005 - C23129 * C7998 - C23128 * C8006 +
             C152349 * C8016 + C23130 * C8003 - C23131 * C7997 -
             C23130 * C8004 + C152350 * C8015 + C23132 * C9696 -
             C23133 * C9695 - C23132 * C9697 + C23125 * C9698) *
                C152231) *
               C152155 * C152072 -
           ((C25860 + C25861 + C25862) * C152231 +
            (C24837 + C24836 + C24835) * C152302) *
               C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C4047 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152072) *
               C3041 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152072 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C4047) *
               C152030) *
              C152370 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152072 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C4047) *
               C3041 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C4047 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152072) *
               C152030) *
              C152353 +
          ((((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
              C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
              C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                 C152302 +
             (C32249 + C32250 + C32251) * C152231) *
                C152155 * C4047 -
            ((C32252 + C32253 + C32254) * C152231 +
             (C32251 + C32250 + C32249) * C152302) *
                C152155 * C152072) *
               C3041 +
           (((C24458 + C24457 + C24456) * C152302 +
             (C23128 * C1497 - C23129 * C1484 - C23128 * C1498 +
              C152349 * C1520 + C23130 * C1495 - C23131 * C1483 -
              C23130 * C1496 + C152350 * C1519 + C23132 * C2624 -
              C23133 * C2623 - C23132 * C2625 + C23125 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C24456 + C24457 + C24458) * C152231 +
             (C23475 + C23474 + C23473) * C152302) *
                C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C152381 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152378 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C34784 + C34785 + C34786) * C152231) *
               C152155 * C152365 -
           ((C34787 + C34788 + C34789) * C152231 +
            (C34786 + C34785 + C34784) * C152302) *
               C152155 * C152342) *
              C3041 +
          (((C24452 + C24451 + C24450) * C152302 +
            (C25113 + C25114 + C25115) * C152231) *
               C152155 * C152378 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C152381 -
           ((C27138 + C27139 + C27140) * C152231 +
            (C25115 + C25114 + C25113) * C152302) *
               C152155 * C152365 +
           ((C27140 + C27139 + C27138) * C152302 +
            (C23128 * C9391 - C23129 * C9383 - C23128 * C9392 +
             C152349 * C9401 + C23130 * C9393 - C23131 * C9384 -
             C23130 * C9394 + C152350 * C9402 + C23132 * C18125 -
             C23133 * C18124 - C23132 * C18126 + C23125 * C18127) *
                C152231) *
               C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C152068 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152075 +
            ((C32242 + C32241 + C32240) * C152302 +
             (C34784 + C34785 + C34786) * C152231) *
                C152155 * C4719) *
               C3041 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152075 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C152068 -
            ((C27138 + C27139 + C27140) * C152231 +
             (C25115 + C25114 + C25113) * C152302) *
                C152155 * C4719) *
               C152030) *
              C152270 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152075 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C152068 -
            ((C35292 + C35293 + C35294) * C152231 +
             (C32248 + C32247 + C32246) * C152302) *
                C152155 * C4719) *
               C3041 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C152068 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152075 +
            ((C26731 + C26730 + C26729) * C152302 +
             (C23128 * C2901 - C23129 * C2896 - C23128 * C2902 +
              C152349 * C2908 + C23130 * C2903 - C23131 * C2897 -
              C23130 * C2904 + C152350 * C2909 + C23132 * C2905 -
              C23133 * C2898 - C23132 * C2906 + C23125 * C2910) *
                 C152231) *
                C152155 * C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C4047 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152072) *
               C3041 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152072 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C4047) *
               C152030) *
              C152370 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152072 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C4047) *
               C3041 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C4047 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152072) *
               C152030) *
              C152353 +
          ((((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
              C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
              C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                 C152302 +
             (C32249 + C32250 + C32251) * C152231) *
                C152155 * C4047 -
            ((C32252 + C32253 + C32254) * C152231 +
             (C32251 + C32250 + C32249) * C152302) *
                C152155 * C152072) *
               C3041 +
           (((C24458 + C24457 + C24456) * C152302 +
             (C23128 * C1497 - C23129 * C1484 - C23128 * C1498 +
              C152349 * C1520 + C23130 * C1495 - C23131 * C1483 -
              C23130 * C1496 + C152350 * C1519 + C23132 * C2624 -
              C23133 * C2623 - C23132 * C2625 + C23125 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C24456 + C24457 + C24458) * C152231 +
             (C23475 + C23474 + C23473) * C152302) *
                C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C4047 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152072) *
              C152380 +
          (((C24452 + C24451 + C24450) * C152302 +
            (C25113 + C25114 + C25115) * C152231) *
               C152155 * C152072 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C4047) *
              C152376 +
          (((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C4047 -
           ((C25119 + C25120 + C25121) * C152231 +
            (C25118 + C25117 + C25116) * C152302) *
               C152155 * C152072) *
              C152362 +
          (((C25862 + C25861 + C25860) * C152302 +
            (C23128 * C8005 - C23129 * C7998 - C23128 * C8006 +
             C152349 * C8016 + C23130 * C8003 - C23131 * C7997 -
             C23130 * C8004 + C152350 * C8015 + C23132 * C9696 -
             C23133 * C9695 - C23132 * C9697 + C23125 * C9698) *
                C152231) *
               C152155 * C152072 -
           ((C25860 + C25861 + C25862) * C152231 +
            (C24837 + C24836 + C24835) * C152302) *
               C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C1661 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C1662 +
           ((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C151985 * C1663 -
           ((C25860 + C25861 + C25862) * C152231 +
            (C24837 + C24836 + C24835) * C152302) *
               C152155 * C151985 * C152336) *
              C152270 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C1662 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C1661 -
           ((C25645 + C25646 + C25647) * C152231 +
            (C23472 + C23471 + C23470) * C152302) *
               C152155 * C151985 * C1663 +
           ((C25336 + C25335 + C25334) * C152302 +
            (C23128 * C2005 - C23129 * C2000 - C23128 * C2006 +
             C152349 * C2012 + C23130 * C2007 - C23131 * C2001 -
             C23130 * C2008 + C152350 * C2013 + C23132 * C2009 -
             C23133 * C2002 - C23132 * C2010 + C23125 * C2014) *
                C152231) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C152284 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C152030) *
              C703 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C152030 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C152284) *
              C704 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C151985 * C152284 -
           ((C24456 + C24457 + C24458) * C152231 +
            (C23475 + C23474 + C23473) * C152302) *
               C152155 * C151985 * C152030) *
              C705 +
          (((C23909 + C23910 + C23911) * C152302 +
            (C23128 * C1053 - C23129 * C1044 - C23128 * C1054 +
             C152349 * C1062 + C23130 * C1055 - C23131 * C1045 -
             C23130 * C1056 + C152350 * C1063 + C23132 * C1057 -
             C23133 * C1046 - C23132 * C1058 + C23125 * C1064) *
                C152231) *
               C152155 * C151985 * C152030 -
           ((C23132 * C555 - C23133 * C533 - C23132 * C556 + C23125 * C569 +
             C23130 * C551 - C23131 * C531 - C23130 * C552 + C152350 * C567 +
             C23128 * C535 - C23129 * C523 - C23128 * C536 + C152349 * C559) *
                C152231 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152302) *
               C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C2161 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C2162 +
            ((C32242 + C32241 + C32240) * C152302 +
             (C34784 + C34785 + C34786) * C152231) *
                C152155 * C152329) *
               C152284 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C2162 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C2161 -
            ((C27138 + C27139 + C27140) * C152231 +
             (C25115 + C25114 + C25113) * C152302) *
                C152155 * C152329) *
               C152030) *
              C152270 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C2162 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C2161 -
            ((C23132 * C2405 - C23133 * C2397 - C23132 * C2406 +
              C23125 * C2421 + C23130 * C2407 - C23131 * C2398 -
              C23130 * C2408 + C152350 * C2422 + C23128 * C2409 -
              C23129 * C2399 - C23128 * C2410 + C152349 * C2423) *
                 C152231 +
             (C32248 + C32247 + C32246) * C152302) *
                C152155 * C152329) *
               C152284 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C2161 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C2162 +
            ((C26731 + C26730 + C26729) * C152302 +
             (C23128 * C2901 - C23129 * C2896 - C23128 * C2902 +
              C152349 * C2908 + C23130 * C2903 - C23131 * C2897 -
              C23130 * C2904 + C152350 * C2909 + C23132 * C2905 -
              C23133 * C2898 - C23132 * C2906 + C23125 * C2910) *
                 C152231) *
                C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C152285 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152072) *
              C1661 +
          (((C24452 + C24451 + C24450) * C152302 +
            (C25113 + C25114 + C25115) * C152231) *
               C152155 * C152072 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C152285) *
              C1662 +
          (((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C152285 -
           ((C25119 + C25120 + C25121) * C152231 +
            (C25118 + C25117 + C25116) * C152302) *
               C152155 * C152072) *
              C1663 +
          (((C25862 + C25861 + C25860) * C152302 +
            (C23128 * C8005 - C23129 * C7998 - C23128 * C8006 +
             C152349 * C8016 + C23130 * C8003 - C23131 * C7997 -
             C23130 * C8004 + C152350 * C8015 + C23132 * C9696 -
             C23133 * C9695 - C23132 * C9697 + C23125 * C9698) *
                C152231) *
               C152155 * C152072 -
           ((C25860 + C25861 + C25862) * C152231 +
            (C24837 + C24836 + C24835) * C152302) *
               C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C152285 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152072) *
               C152284 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152072 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C152285) *
               C152030) *
              C323 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152072 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C152285) *
               C152284 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C152285 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152072) *
               C152030) *
              C324 +
          ((((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
              C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
              C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                 C152302 +
             (C32249 + C32250 + C32251) * C152231) *
                C152155 * C152285 -
            ((C32252 + C32253 + C32254) * C152231 +
             (C32251 + C32250 + C32249) * C152302) *
                C152155 * C152072) *
               C152284 +
           (((C24458 + C24457 + C24456) * C152302 +
             (C23128 * C1497 - C23129 * C1484 - C23128 * C1498 +
              C152349 * C1520 + C23130 * C1495 - C23131 * C1483 -
              C23130 * C1496 + C152350 * C1519 + C23132 * C2624 -
              C23133 * C2623 - C23132 * C2625 + C23125 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C24456 + C24457 + C24458) * C152231 +
             (C23475 + C23474 + C23473) * C152302) *
                C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C2757 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C2758 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C34784 + C34785 + C34786) * C152231) *
               C152155 * C2759 -
           ((C34787 + C34788 + C34789) * C152231 +
            (C34786 + C34785 + C34784) * C152302) *
               C152155 * C152342) *
              C152284 +
          (((C24452 + C24451 + C24450) * C152302 +
            (C25113 + C25114 + C25115) * C152231) *
               C152155 * C2758 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C2757 -
           ((C27138 + C27139 + C27140) * C152231 +
            (C25115 + C25114 + C25113) * C152302) *
               C152155 * C2759 +
           ((C27140 + C27139 + C27138) * C152302 +
            (C23128 * C9391 - C23129 * C9383 - C23128 * C9392 +
             C152349 * C9401 + C23130 * C9393 - C23131 * C9384 -
             C23130 * C9394 + C152350 * C9402 + C23132 * C18125 -
             C23133 * C18124 - C23132 * C18126 + C23125 * C18127) *
                C152231) *
               C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
                C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
                C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                   C152302 +
               (C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562 +
                C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
                C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560) *
                   C152231) *
                  C152155 * C151985 * C151967 * C129 -
              ((C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559 +
                C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
                C23128 * C539 - C23129 * C525 - C23128 * C540 +
                C152349 * C561) *
                   C152231 +
               (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
                C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
                C23128 * C152 - C23129 * C143 - C23128 * C153 +
                C152349 * C167) *
                   C152302) *
                  C152155 * C151985 * C151967 * C130 +
              ((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
                C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
                C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                   C152302 +
               (C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560 +
                C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
                C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567) *
                   C152231) *
                  C152155 * C151985 * C151967 * C131 -
              ((C23132 * C555 - C23133 * C533 - C23132 * C556 + C23125 * C569 +
                C23130 * C551 - C23131 * C531 - C23130 * C552 + C152350 * C567 +
                C23128 * C535 - C23129 * C523 - C23128 * C536 +
                C152349 * C559) *
                   C152231 +
               (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
                C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
                C23128 * C156 - C23129 * C145 - C23128 * C157 +
                C152349 * C169) *
                   C152302) *
                  C152155 * C151985 * C151967 * C132 +
              ((C23128 * C158 - C23129 * C146 - C23128 * C159 + C152349 * C170 +
                C23130 * C160 - C23131 * C147 - C23130 * C161 + C152350 * C171 +
                C23132 * C162 - C23133 * C148 - C23132 * C163 + C23125 * C172) *
                   C152302 +
               (C23128 * C551 - C23129 * C531 - C23128 * C552 + C152349 * C567 +
                C23130 * C555 - C23131 * C533 - C23130 * C556 + C152350 * C569 +
                C23132 * C844 - C23133 * C843 - C23132 * C845 + C23125 * C846) *
                   C152231) *
                  C152155 * C151985 * C151967 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23128 * C150 - C23129 * C142 - C23128 * C151 +
                 C152349 * C166 + C23130 * C152 - C23131 * C143 -
                 C23130 * C153 + C152350 * C167 + C23132 * C154 -
                 C23133 * C144 - C23132 * C155 + C23125 * C168) *
                    C152302 +
                (C23128 * C541 - C23129 * C526 - C23128 * C542 +
                 C152349 * C562 + C23130 * C539 - C23131 * C525 -
                 C23130 * C540 + C152350 * C561 + C23132 * C537 -
                 C23133 * C524 - C23132 * C538 + C23125 * C560) *
                    C152231) *
                   C152155 * C151985 * C152373 -
               ((C24450 + C24451 + C24452) * C152231 +
                (C23463 + C23462 + C23461) * C152302) *
                   C152155 * C151985 * C152357 +
               ((C23466 + C23465 + C23464) * C152302 +
                (C25116 + C25117 + C25118) * C152231) *
                   C152155 * C151985 * C152326) *
                  C323 +
              (((C23467 + C23468 + C23469) * C152302 +
                (C24453 + C24454 + C24455) * C152231) *
                   C152155 * C151985 * C152357 -
               ((C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559 +
                 C23130 * C537 - C23131 * C524 - C23130 * C538 +
                 C152350 * C560 + C23128 * C539 - C23129 * C525 -
                 C23128 * C540 + C152349 * C561) *
                    C152231 +
                (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
                 C23130 * C154 - C23131 * C144 - C23130 * C155 +
                 C152350 * C168 + C23128 * C152 - C23129 * C143 -
                 C23128 * C153 + C152349 * C167) *
                    C152302) *
                   C152155 * C151985 * C152373 -
               ((C25645 + C25646 + C25647) * C152231 +
                (C23472 + C23471 + C23470) * C152302) *
                   C152155 * C151985 * C152326) *
                  C324 +
              (((C23128 * C154 - C23129 * C144 - C23128 * C155 +
                 C152349 * C168 + C23130 * C156 - C23131 * C145 -
                 C23130 * C157 + C152350 * C169 + C23132 * C158 -
                 C23133 * C146 - C23132 * C159 + C23125 * C170) *
                    C152302 +
                (C23128 * C537 - C23129 * C524 - C23128 * C538 +
                 C152349 * C560 + C23130 * C535 - C23131 * C523 -
                 C23130 * C536 + C152350 * C559 + C23132 * C551 -
                 C23133 * C531 - C23132 * C552 + C23125 * C567) *
                    C152231) *
                   C152155 * C151985 * C152373 -
               ((C24456 + C24457 + C24458) * C152231 +
                (C23475 + C23474 + C23473) * C152302) *
                   C152155 * C151985 * C152357 +
               ((C23478 + C23477 + C23476) * C152302 +
                (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
                 C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
                 C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
                 C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                    C152231) *
                   C152155 * C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C152374 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152359 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C23128 * C2411 - C23129 * C2400 - C23128 * C2412 +
             C152349 * C2424 + C23130 * C2409 - C23131 * C2399 -
             C23130 * C2410 + C152350 * C2423 + C23132 * C2407 -
             C23133 * C2398 - C23132 * C2408 + C23125 * C2422) *
                C152231) *
               C152155 * C152329) *
              C151967 * C323 +
          (((C32243 + C32244 + C32245) * C152302 +
            (C32246 + C32247 + C32248) * C152231) *
               C152155 * C152359 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C152374 -
           ((C23132 * C2405 - C23133 * C2397 - C23132 * C2406 + C23125 * C2421 +
             C23130 * C2407 - C23131 * C2398 - C23130 * C2408 +
             C152350 * C2422 + C23128 * C2409 - C23129 * C2399 -
             C23128 * C2410 + C152349 * C2423) *
                C152231 +
            (C32248 + C32247 + C32246) * C152302) *
               C152155 * C152329) *
              C151967 * C324 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C152374 -
           ((C32252 + C32253 + C32254) * C152231 +
            (C32251 + C32250 + C32249) * C152302) *
               C152155 * C152359 +
           ((C32254 + C32253 + C32252) * C152302 +
            (C23128 * C2407 - C23129 * C2398 - C23128 * C2408 +
             C152349 * C2422 + C23130 * C2405 - C23131 * C2397 -
             C23130 * C2406 + C152350 * C2421 + C23132 * C2762 -
             C23133 * C2761 - C23132 * C2763 + C23125 * C2764) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C1211 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C1212 +
           ((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C1212 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C1211 -
           ((C25645 + C25646 + C25647) * C152231 +
            (C23472 + C23471 + C23470) * C152302) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C151985 * C1211 -
           ((C24456 + C24457 + C24458) * C152231 +
            (C23475 + C23474 + C23473) * C152302) *
               C152155 * C151985 * C1212 +
           ((C23478 + C23477 + C23476) * C152302 +
            (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
             C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
             C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
             C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152302 +
           (C32237 + C32238 + C32239) * C152231) *
              C152155 * C151985 * C1299 -
          ((C24450 + C24451 + C24452) * C152231 +
           (C23463 + C23462 + C23461) * C152302) *
              C152155 * C151985 * C1300 +
          ((C23466 + C23465 + C23464) * C152302 +
           (C25116 + C25117 + C25118) * C152231) *
              C152155 * C151985 * C1301 -
          ((C25860 + C25861 + C25862) * C152231 +
           (C24837 + C24836 + C24835) * C152302) *
              C152155 * C151985 * C1302 +
          ((C24840 + C24839 + C24838) * C152302 +
           (C23128 * C8009 - C23129 * C8000 - C23128 * C8010 + C152349 * C8018 +
            C23130 * C8007 - C23131 * C7999 - C23130 * C8008 + C152350 * C8017 +
            C23132 * C8586 - C23133 * C8585 - C23132 * C8587 + C23125 * C8588) *
               C152231) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C152374 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152359 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C23128 * C2411 - C23129 * C2400 - C23128 * C2412 +
             C152349 * C2424 + C23130 * C2409 - C23131 * C2399 -
             C23130 * C2410 + C152350 * C2423 + C23132 * C2407 -
             C23133 * C2398 - C23132 * C2408 + C23125 * C2422) *
                C152231) *
               C152155 * C152329) *
              C1211 +
          (((C24452 + C24451 + C24450) * C152302 +
            (C25113 + C25114 + C25115) * C152231) *
               C152155 * C152359 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C152374 -
           ((C27138 + C27139 + C27140) * C152231 +
            (C25115 + C25114 + C25113) * C152302) *
               C152155 * C152329) *
              C1212 +
          (((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C152374 -
           ((C25119 + C25120 + C25121) * C152231 +
            (C25118 + C25117 + C25116) * C152302) *
               C152155 * C152359 +
           ((C25121 + C25120 + C25119) * C152302 +
            (C23128 * C9389 - C23129 * C9382 - C23128 * C9390 +
             C152349 * C9400 + C23130 * C9387 - C23131 * C9381 -
             C23130 * C9388 + C152350 * C9399 + C23132 * C9922 -
             C23133 * C9921 - C23132 * C9923 + C23125 * C9924) *
                C152231) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C2161 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C2162 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C23128 * C2411 - C23129 * C2400 - C23128 * C2412 +
             C152349 * C2424 + C23130 * C2409 - C23131 * C2399 -
             C23130 * C2410 + C152350 * C2423 + C23132 * C2407 -
             C23133 * C2398 - C23132 * C2408 + C23125 * C2422) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152370 +
          (((C32243 + C32244 + C32245) * C152302 +
            (C32246 + C32247 + C32248) * C152231) *
               C152155 * C2162 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C2161 -
           ((C23132 * C2405 - C23133 * C2397 - C23132 * C2406 + C23125 * C2421 +
             C23130 * C2407 - C23131 * C2398 - C23130 * C2408 +
             C152350 * C2422 + C23128 * C2409 - C23129 * C2399 -
             C23128 * C2410 + C152349 * C2423) *
                C152231 +
            (C32248 + C32247 + C32246) * C152302) *
               C152155 * C152329) *
              C151967 * C152353 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C2161 -
           ((C32252 + C32253 + C32254) * C152231 +
            (C32251 + C32250 + C32249) * C152302) *
               C152155 * C2162 +
           ((C32254 + C32253 + C32252) * C152302 +
            (C23128 * C2407 - C23129 * C2398 - C23128 * C2408 +
             C152349 * C2422 + C23130 * C2405 - C23131 * C2397 -
             C23130 * C2406 + C152350 * C2421 + C23132 * C2762 -
             C23133 * C2761 - C23132 * C2763 + C23125 * C2764) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C2161 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C2162 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C23128 * C2411 - C23129 * C2400 - C23128 * C2412 +
             C152349 * C2424 + C23130 * C2409 - C23131 * C2399 -
             C23130 * C2410 + C152350 * C2423 + C23132 * C2407 -
             C23133 * C2398 - C23132 * C2408 + C23125 * C2422) *
                C152231) *
               C152155 * C152329) *
              C152373 +
          (((C24452 + C24451 + C24450) * C152302 +
            (C25113 + C25114 + C25115) * C152231) *
               C152155 * C2162 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C2161 -
           ((C27138 + C27139 + C27140) * C152231 +
            (C25115 + C25114 + C25113) * C152302) *
               C152155 * C152329) *
              C152357 +
          (((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C2161 -
           ((C25119 + C25120 + C25121) * C152231 +
            (C25118 + C25117 + C25116) * C152302) *
               C152155 * C2162 +
           ((C25121 + C25120 + C25119) * C152302 +
            (C23128 * C9389 - C23129 * C9382 - C23128 * C9390 +
             C152349 * C9400 + C23130 * C9387 - C23131 * C9381 -
             C23130 * C9388 + C152350 * C9399 + C23132 * C9922 -
             C23133 * C9921 - C23132 * C9923 + C23125 * C9924) *
                C152231) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152302 +
           (C32237 + C32238 + C32239) * C152231) *
              C152155 * C2392 -
          ((C32240 + C32241 + C32242) * C152231 +
           (C32239 + C32238 + C32237) * C152302) *
              C152155 * C2393 +
          ((C32242 + C32241 + C32240) * C152302 +
           (C34784 + C34785 + C34786) * C152231) *
              C152155 * C2394 -
          ((C34787 + C34788 + C34789) * C152231 +
           (C34786 + C34785 + C34784) * C152302) *
              C152155 * C2395 +
          ((C34789 + C34788 + C34787) * C152302 +
           (C23128 * C17794 - C23129 * C17789 - C23128 * C17795 +
            C152349 * C17801 + C23130 * C17792 - C23131 * C17788 -
            C23130 * C17793 + C152350 * C17800 + C23132 * C18338 -
            C23133 * C18337 - C23132 * C18339 + C23125 * C18340) *
               C152231) *
              C152155 * C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C152285 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152072) *
               C1211 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152072 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C152285) *
               C1212 +
           (((C23466 + C23465 + C23464) * C152302 +
             (C25116 + C25117 + C25118) * C152231) *
                C152155 * C152285 -
            ((C25119 + C25120 + C25121) * C152231 +
             (C25118 + C25117 + C25116) * C152302) *
                C152155 * C152072) *
               C152326) *
              C152270 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152072 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C152285) *
               C1211 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C152285 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152072) *
               C1212 +
           (((C25647 + C25646 + C25645) * C152302 +
             (C23128 * C1513 - C23129 * C1492 - C23128 * C1514 +
              C152349 * C1528 + C23130 * C1515 - C23131 * C1493 -
              C23130 * C1516 + C152350 * C1529 + C23132 * C1517 -
              C23133 * C1494 - C23132 * C1518 + C23125 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C25645 + C25646 + C25647) * C152231 +
             (C23472 + C23471 + C23470) * C152302) *
                C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C152285 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152072) *
              C151967 * C703 +
          (((C32243 + C32244 + C32245) * C152302 +
            (C32246 + C32247 + C32248) * C152231) *
               C152155 * C152072 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C152285) *
              C151967 * C704 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C152285 -
           ((C32252 + C32253 + C32254) * C152231 +
            (C32251 + C32250 + C32249) * C152302) *
               C152155 * C152072) *
              C151967 * C705 +
          (((C32661 + C32662 + C32663) * C152302 +
            (C23128 * C549 - C23129 * C530 - C23128 * C550 + C152349 * C566 +
             C23130 * C553 - C23131 * C532 - C23130 * C554 + C152350 * C568 +
             C23132 * C557 - C23133 * C534 - C23132 * C558 + C23125 * C570) *
                C152231) *
               C152155 * C152072 -
           ((C32663 + C32662 + C32661) * C152231 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152302) *
               C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C2757 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C2758 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C34784 + C34785 + C34786) * C152231) *
               C152155 * C2759 -
           ((C34787 + C34788 + C34789) * C152231 +
            (C34786 + C34785 + C34784) * C152302) *
               C152155 * C152342) *
              C151967 * C152270 +
          (((C32243 + C32244 + C32245) * C152302 +
            (C32246 + C32247 + C32248) * C152231) *
               C152155 * C2758 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C2757 -
           ((C35292 + C35293 + C35294) * C152231 +
            (C32248 + C32247 + C32246) * C152302) *
               C152155 * C2759 +
           ((C35294 + C35293 + C35292) * C152302 +
            (C23128 * C2415 - C23129 * C2402 - C23128 * C2416 +
             C152349 * C2426 + C23130 * C2417 - C23131 * C2403 -
             C23130 * C2418 + C152350 * C2427 + C23132 * C2419 -
             C23133 * C2404 - C23132 * C2420 + C23125 * C2428) *
                C152231) *
               C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C152357 +
           ((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C151985 * C152326) *
              C323 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C152357 -
           ((C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561) *
                C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C152373 -
           ((C25645 + C25646 + C25647) * C152231 +
            (C23472 + C23471 + C23470) * C152302) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560 +
             C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
             C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C24456 + C24457 + C24458) * C152231 +
            (C23475 + C23474 + C23473) * C152302) *
               C152155 * C151985 * C152357 +
           ((C23478 + C23477 + C23476) * C152302 +
            (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
             C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
             C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
             C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152302 +
           (C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562 +
            C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
            C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560) *
               C152231) *
              C152155 * C151985 * C151967 * C129 -
          ((C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559 +
            C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
            C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561) *
               C152231 +
           (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
            C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
            C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
               C152302) *
              C152155 * C151985 * C151967 * C130 +
          ((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
            C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
            C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
               C152302 +
           (C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560 +
            C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
            C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567) *
               C152231) *
              C152155 * C151985 * C151967 * C131 -
          ((C23132 * C555 - C23133 * C533 - C23132 * C556 + C23125 * C569 +
            C23130 * C551 - C23131 * C531 - C23130 * C552 + C152350 * C567 +
            C23128 * C535 - C23129 * C523 - C23128 * C536 + C152349 * C559) *
               C152231 +
           (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
            C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
            C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
               C152302) *
              C152155 * C151985 * C151967 * C132 +
          ((C23128 * C158 - C23129 * C146 - C23128 * C159 + C152349 * C170 +
            C23130 * C160 - C23131 * C147 - C23130 * C161 + C152350 * C171 +
            C23132 * C162 - C23133 * C148 - C23132 * C163 + C23125 * C172) *
               C152302 +
           (C23128 * C551 - C23129 * C531 - C23128 * C552 + C152349 * C567 +
            C23130 * C555 - C23131 * C533 - C23130 * C556 + C152350 * C569 +
            C23132 * C844 - C23133 * C843 - C23132 * C845 + C23125 * C846) *
               C152231) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C1211 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C1212 +
           ((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C1212 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C1211 -
           ((C25645 + C25646 + C25647) * C152231 +
            (C23472 + C23471 + C23470) * C152302) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C151985 * C1211 -
           ((C24456 + C24457 + C24458) * C152231 +
            (C23475 + C23474 + C23473) * C152302) *
               C152155 * C151985 * C1212 +
           ((C23478 + C23477 + C23476) * C152302 +
            (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
             C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
             C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
             C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152302 +
           (C32237 + C32238 + C32239) * C152231) *
              C152155 * C151985 * C1299 -
          ((C24450 + C24451 + C24452) * C152231 +
           (C23463 + C23462 + C23461) * C152302) *
              C152155 * C151985 * C1300 +
          ((C23466 + C23465 + C23464) * C152302 +
           (C25116 + C25117 + C25118) * C152231) *
              C152155 * C151985 * C1301 -
          ((C25860 + C25861 + C25862) * C152231 +
           (C24837 + C24836 + C24835) * C152302) *
              C152155 * C151985 * C1302 +
          ((C24840 + C24839 + C24838) * C152302 +
           (C23128 * C8009 - C23129 * C8000 - C23128 * C8010 + C152349 * C8018 +
            C23130 * C8007 - C23131 * C7999 - C23130 * C8008 + C152350 * C8017 +
            C23132 * C8586 - C23133 * C8585 - C23132 * C8587 + C23125 * C8588) *
               C152231) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C2161 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C2162 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C23128 * C2411 - C23129 * C2400 - C23128 * C2412 +
             C152349 * C2424 + C23130 * C2409 - C23131 * C2399 -
             C23130 * C2410 + C152350 * C2423 + C23132 * C2407 -
             C23133 * C2398 - C23132 * C2408 + C23125 * C2422) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152370 +
          (((C32243 + C32244 + C32245) * C152302 +
            (C32246 + C32247 + C32248) * C152231) *
               C152155 * C2162 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C2161 -
           ((C23132 * C2405 - C23133 * C2397 - C23132 * C2406 + C23125 * C2421 +
             C23130 * C2407 - C23131 * C2398 - C23130 * C2408 +
             C152350 * C2422 + C23128 * C2409 - C23129 * C2399 -
             C23128 * C2410 + C152349 * C2423) *
                C152231 +
            (C32248 + C32247 + C32246) * C152302) *
               C152155 * C152329) *
              C151967 * C152353 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C2161 -
           ((C32252 + C32253 + C32254) * C152231 +
            (C32251 + C32250 + C32249) * C152302) *
               C152155 * C2162 +
           ((C32254 + C32253 + C32252) * C152302 +
            (C23128 * C2407 - C23129 * C2398 - C23128 * C2408 +
             C152349 * C2422 + C23130 * C2405 - C23131 * C2397 -
             C23130 * C2406 + C152350 * C2421 + C23132 * C2762 -
             C23133 * C2761 - C23132 * C2763 + C23125 * C2764) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C2161 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C2162 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C23128 * C2411 - C23129 * C2400 - C23128 * C2412 +
             C152349 * C2424 + C23130 * C2409 - C23131 * C2399 -
             C23130 * C2410 + C152350 * C2423 + C23132 * C2407 -
             C23133 * C2398 - C23132 * C2408 + C23125 * C2422) *
                C152231) *
               C152155 * C152329) *
              C152373 +
          (((C24452 + C24451 + C24450) * C152302 +
            (C25113 + C25114 + C25115) * C152231) *
               C152155 * C2162 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C2161 -
           ((C27138 + C27139 + C27140) * C152231 +
            (C25115 + C25114 + C25113) * C152302) *
               C152155 * C152329) *
              C152357 +
          (((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C2161 -
           ((C25119 + C25120 + C25121) * C152231 +
            (C25118 + C25117 + C25116) * C152302) *
               C152155 * C2162 +
           ((C25121 + C25120 + C25119) * C152302 +
            (C23128 * C9389 - C23129 * C9382 - C23128 * C9390 +
             C152349 * C9400 + C23130 * C9387 - C23131 * C9381 -
             C23130 * C9388 + C152350 * C9399 + C23132 * C9922 -
             C23133 * C9921 - C23132 * C9923 + C23125 * C9924) *
                C152231) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C4047 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152072) *
               C152284 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152072 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C4047) *
               C152030) *
              C151944 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152072 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C4047) *
               C152284 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C4047 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152072) *
               C152030) *
              C151953 +
          ((((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
              C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
              C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                 C152302 +
             (C32249 + C32250 + C32251) * C152231) *
                C152155 * C4047 -
            ((C32252 + C32253 + C32254) * C152231 +
             (C32251 + C32250 + C32249) * C152302) *
                C152155 * C152072) *
               C152284 +
           (((C24458 + C24457 + C24456) * C152302 +
             (C23128 * C1497 - C23129 * C1484 - C23128 * C1498 +
              C152349 * C1520 + C23130 * C1495 - C23131 * C1483 -
              C23130 * C1496 + C152350 * C1519 + C23132 * C2624 -
              C23133 * C2623 - C23132 * C2625 + C23125 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C24456 + C24457 + C24458) * C152231 +
             (C23475 + C23474 + C23473) * C152302) *
                C152155 * C4047) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C152068 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152075 +
            ((C32242 + C32241 + C32240) * C152302 +
             (C34784 + C34785 + C34786) * C152231) *
                C152155 * C4719) *
               C152284 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152075 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C152068 -
            ((C27138 + C27139 + C27140) * C152231 +
             (C25115 + C25114 + C25113) * C152302) *
                C152155 * C4719) *
               C152030) *
              C3181 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152075 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C152068 -
            ((C35292 + C35293 + C35294) * C152231 +
             (C32248 + C32247 + C32246) * C152302) *
                C152155 * C4719) *
               C152284 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C152068 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152075 +
            ((C26731 + C26730 + C26729) * C152302 +
             (C23128 * C2901 - C23129 * C2896 - C23128 * C2902 +
              C152349 * C2908 + C23130 * C2903 - C23131 * C2897 -
              C23130 * C2904 + C152350 * C2909 + C23132 * C2905 -
              C23133 * C2898 - C23132 * C2906 + C23125 * C2910) *
                 C152231) *
                C152155 * C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C4047 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152072) *
               C152373 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152072 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C4047) *
               C152357 +
           (((C23466 + C23465 + C23464) * C152302 +
             (C25116 + C25117 + C25118) * C152231) *
                C152155 * C4047 -
            ((C25119 + C25120 + C25121) * C152231 +
             (C25118 + C25117 + C25116) * C152302) *
                C152155 * C152072) *
               C152326) *
              C3181 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152072 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C4047) *
               C152373 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C4047 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152072) *
               C152357 +
           (((C25647 + C25646 + C25645) * C152302 +
             (C23128 * C1513 - C23129 * C1492 - C23128 * C1514 +
              C152349 * C1528 + C23130 * C1515 - C23131 * C1493 -
              C23130 * C1516 + C152350 * C1529 + C23132 * C1517 -
              C23133 * C1494 - C23132 * C1518 + C23125 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C25645 + C25646 + C25647) * C152231 +
             (C23472 + C23471 + C23470) * C152302) *
                C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C4047 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152072) *
              C151967 * C152379 +
          (((C32243 + C32244 + C32245) * C152302 +
            (C32246 + C32247 + C32248) * C152231) *
               C152155 * C152072 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C4047) *
              C151967 * C152372 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C4047 -
           ((C32252 + C32253 + C32254) * C152231 +
            (C32251 + C32250 + C32249) * C152302) *
               C152155 * C152072) *
              C151967 * C152355 +
          (((C32661 + C32662 + C32663) * C152302 +
            (C23128 * C549 - C23129 * C530 - C23128 * C550 + C152349 * C566 +
             C23130 * C553 - C23131 * C532 - C23130 * C554 + C152350 * C568 +
             C23132 * C557 - C23133 * C534 - C23132 * C558 + C23125 * C570) *
                C152231) *
               C152155 * C152072 -
           ((C32663 + C32662 + C32661) * C152231 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152302) *
               C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C152381 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152378 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C34784 + C34785 + C34786) * C152231) *
               C152155 * C152365 -
           ((C34787 + C34788 + C34789) * C152231 +
            (C34786 + C34785 + C34784) * C152302) *
               C152155 * C152342) *
              C151967 * C3181 +
          (((C32243 + C32244 + C32245) * C152302 +
            (C32246 + C32247 + C32248) * C152231) *
               C152155 * C152378 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C152381 -
           ((C35292 + C35293 + C35294) * C152231 +
            (C32248 + C32247 + C32246) * C152302) *
               C152155 * C152365 +
           ((C35294 + C35293 + C35292) * C152302 +
            (C23128 * C2415 - C23129 * C2402 - C23128 * C2416 +
             C152349 * C2426 + C23130 * C2417 - C23131 * C2403 -
             C23130 * C2418 + C152350 * C2427 + C23132 * C2419 -
             C23133 * C2404 - C23132 * C2420 + C23125 * C2428) *
                C152231) *
               C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C152068 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152075 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C34784 + C34785 + C34786) * C152231) *
               C152155 * C4719) *
              C151967 * C151944 +
          (((C32243 + C32244 + C32245) * C152302 +
            (C32246 + C32247 + C32248) * C152231) *
               C152155 * C152075 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C152068 -
           ((C35292 + C35293 + C35294) * C152231 +
            (C32248 + C32247 + C32246) * C152302) *
               C152155 * C4719) *
              C151967 * C151953 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C152068 -
           ((C32252 + C32253 + C32254) * C152231 +
            (C32251 + C32250 + C32249) * C152302) *
               C152155 * C152075 +
           ((C32254 + C32253 + C32252) * C152302 +
            (C23128 * C2407 - C23129 * C2398 - C23128 * C2408 +
             C152349 * C2422 + C23130 * C2405 - C23131 * C2397 -
             C23130 * C2406 + C152350 * C2421 + C23132 * C2762 -
             C23133 * C2761 - C23132 * C2763 + C23125 * C2764) *
                C152231) *
               C152155 * C4719) *
              C151967 * C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C4047 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152072) *
              C151967 * C152379 +
          (((C32243 + C32244 + C32245) * C152302 +
            (C32246 + C32247 + C32248) * C152231) *
               C152155 * C152072 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C4047) *
              C151967 * C152372 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C4047 -
           ((C32252 + C32253 + C32254) * C152231 +
            (C32251 + C32250 + C32249) * C152302) *
               C152155 * C152072) *
              C151967 * C152355 +
          (((C32661 + C32662 + C32663) * C152302 +
            (C23128 * C549 - C23129 * C530 - C23128 * C550 + C152349 * C566 +
             C23130 * C553 - C23131 * C532 - C23130 * C554 + C152350 * C568 +
             C23132 * C557 - C23133 * C534 - C23132 * C558 + C23125 * C570) *
                C152231) *
               C152155 * C152072 -
           ((C32663 + C32662 + C32661) * C152231 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152302) *
               C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C4047 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152072) *
               C152373 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152072 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C4047) *
               C152357 +
           (((C23466 + C23465 + C23464) * C152302 +
             (C25116 + C25117 + C25118) * C152231) *
                C152155 * C4047 -
            ((C25119 + C25120 + C25121) * C152231 +
             (C25118 + C25117 + C25116) * C152302) *
                C152155 * C152072) *
               C152326) *
              C3181 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152072 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C4047) *
               C152373 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C4047 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152072) *
               C152357 +
           (((C25647 + C25646 + C25645) * C152302 +
             (C23128 * C1513 - C23129 * C1492 - C23128 * C1514 +
              C152349 * C1528 + C23130 * C1515 - C23131 * C1493 -
              C23130 * C1516 + C152350 * C1529 + C23132 * C1517 -
              C23133 * C1494 - C23132 * C1518 + C23125 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C25645 + C25646 + C25647) * C152231 +
             (C23472 + C23471 + C23470) * C152302) *
                C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C152284 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C152030) *
              C703 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C152030 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C152284) *
              C704 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C151985 * C152284 -
           ((C24456 + C24457 + C24458) * C152231 +
            (C23475 + C23474 + C23473) * C152302) *
               C152155 * C151985 * C152030) *
              C705 +
          (((C23909 + C23910 + C23911) * C152302 +
            (C23128 * C1053 - C23129 * C1044 - C23128 * C1054 +
             C152349 * C1062 + C23130 * C1055 - C23131 * C1045 -
             C23130 * C1056 + C152350 * C1063 + C23132 * C1057 -
             C23133 * C1046 - C23132 * C1058 + C23125 * C1064) *
                C152231) *
               C152155 * C151985 * C152030 -
           ((C23132 * C555 - C23133 * C533 - C23132 * C556 + C23125 * C569 +
             C23130 * C551 - C23131 * C531 - C23130 * C552 + C152350 * C567 +
             C23128 * C535 - C23129 * C523 - C23128 * C536 + C152349 * C559) *
                C152231 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152302) *
               C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C1661 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C1662 +
           ((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C151985 * C1663 -
           ((C25860 + C25861 + C25862) * C152231 +
            (C24837 + C24836 + C24835) * C152302) *
               C152155 * C151985 * C152336) *
              C152270 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C1662 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C1661 -
           ((C25645 + C25646 + C25647) * C152231 +
            (C23472 + C23471 + C23470) * C152302) *
               C152155 * C151985 * C1663 +
           ((C25336 + C25335 + C25334) * C152302 +
            (C23128 * C2005 - C23129 * C2000 - C23128 * C2006 +
             C152349 * C2012 + C23130 * C2007 - C23131 * C2001 -
             C23130 * C2008 + C152350 * C2013 + C23132 * C2009 -
             C23133 * C2002 - C23132 * C2010 + C23125 * C2014) *
                C152231) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C152285 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152072) *
               C152284 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152072 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C152285) *
               C152030) *
              C323 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152072 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C152285) *
               C152284 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C152285 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152072) *
               C152030) *
              C324 +
          ((((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
              C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
              C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                 C152302 +
             (C32249 + C32250 + C32251) * C152231) *
                C152155 * C152285 -
            ((C32252 + C32253 + C32254) * C152231 +
             (C32251 + C32250 + C32249) * C152302) *
                C152155 * C152072) *
               C152284 +
           (((C24458 + C24457 + C24456) * C152302 +
             (C23128 * C1497 - C23129 * C1484 - C23128 * C1498 +
              C152349 * C1520 + C23130 * C1495 - C23131 * C1483 -
              C23130 * C1496 + C152350 * C1519 + C23132 * C2624 -
              C23133 * C2623 - C23132 * C2625 + C23125 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C24456 + C24457 + C24458) * C152231 +
             (C23475 + C23474 + C23473) * C152302) *
                C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C152285 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152072) *
              C1661 +
          (((C24452 + C24451 + C24450) * C152302 +
            (C25113 + C25114 + C25115) * C152231) *
               C152155 * C152072 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C152285) *
              C1662 +
          (((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C152285 -
           ((C25119 + C25120 + C25121) * C152231 +
            (C25118 + C25117 + C25116) * C152302) *
               C152155 * C152072) *
              C1663 +
          (((C25862 + C25861 + C25860) * C152302 +
            (C23128 * C8005 - C23129 * C7998 - C23128 * C8006 +
             C152349 * C8016 + C23130 * C8003 - C23131 * C7997 -
             C23130 * C8004 + C152350 * C8015 + C23132 * C9696 -
             C23133 * C9695 - C23132 * C9697 + C23125 * C9698) *
                C152231) *
               C152155 * C152072 -
           ((C25860 + C25861 + C25862) * C152231 +
            (C24837 + C24836 + C24835) * C152302) *
               C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C152357 +
           ((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C151985 * C152326) *
              C323 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C152357 -
           ((C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561) *
                C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C152373 -
           ((C25645 + C25646 + C25647) * C152231 +
            (C23472 + C23471 + C23470) * C152302) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560 +
             C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
             C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C24456 + C24457 + C24458) * C152231 +
            (C23475 + C23474 + C23473) * C152302) *
               C152155 * C151985 * C152357 +
           ((C23478 + C23477 + C23476) * C152302 +
            (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
             C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
             C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
             C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152302 +
           (C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562 +
            C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
            C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560) *
               C152231) *
              C152155 * C151985 * C151967 * C129 -
          ((C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559 +
            C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
            C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561) *
               C152231 +
           (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
            C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
            C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
               C152302) *
              C152155 * C151985 * C151967 * C130 +
          ((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
            C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
            C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
               C152302 +
           (C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560 +
            C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
            C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567) *
               C152231) *
              C152155 * C151985 * C151967 * C131 -
          ((C23132 * C555 - C23133 * C533 - C23132 * C556 + C23125 * C569 +
            C23130 * C551 - C23131 * C531 - C23130 * C552 + C152350 * C567 +
            C23128 * C535 - C23129 * C523 - C23128 * C536 + C152349 * C559) *
               C152231 +
           (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
            C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
            C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
               C152302) *
              C152155 * C151985 * C151967 * C132 +
          ((C23128 * C158 - C23129 * C146 - C23128 * C159 + C152349 * C170 +
            C23130 * C160 - C23131 * C147 - C23130 * C161 + C152350 * C171 +
            C23132 * C162 - C23133 * C148 - C23132 * C163 + C23125 * C172) *
               C152302 +
           (C23128 * C551 - C23129 * C531 - C23128 * C552 + C152349 * C567 +
            C23130 * C555 - C23131 * C533 - C23130 * C556 + C152350 * C569 +
            C23132 * C844 - C23133 * C843 - C23132 * C845 + C23125 * C846) *
               C152231) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C152374 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152359 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C23128 * C2411 - C23129 * C2400 - C23128 * C2412 +
             C152349 * C2424 + C23130 * C2409 - C23131 * C2399 -
             C23130 * C2410 + C152350 * C2423 + C23132 * C2407 -
             C23133 * C2398 - C23132 * C2408 + C23125 * C2422) *
                C152231) *
               C152155 * C152329) *
              C151967 * C323 +
          (((C32243 + C32244 + C32245) * C152302 +
            (C32246 + C32247 + C32248) * C152231) *
               C152155 * C152359 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C152374 -
           ((C23132 * C2405 - C23133 * C2397 - C23132 * C2406 + C23125 * C2421 +
             C23130 * C2407 - C23131 * C2398 - C23130 * C2408 +
             C152350 * C2422 + C23128 * C2409 - C23129 * C2399 -
             C23128 * C2410 + C152349 * C2423) *
                C152231 +
            (C32248 + C32247 + C32246) * C152302) *
               C152155 * C152329) *
              C151967 * C324 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C152374 -
           ((C32252 + C32253 + C32254) * C152231 +
            (C32251 + C32250 + C32249) * C152302) *
               C152155 * C152359 +
           ((C32254 + C32253 + C32252) * C152302 +
            (C23128 * C2407 - C23129 * C2398 - C23128 * C2408 +
             C152349 * C2422 + C23130 * C2405 - C23131 * C2397 -
             C23130 * C2406 + C152350 * C2421 + C23132 * C2762 -
             C23133 * C2761 - C23132 * C2763 + C23125 * C2764) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C1211 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C1212 +
           ((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C1212 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C1211 -
           ((C25645 + C25646 + C25647) * C152231 +
            (C23472 + C23471 + C23470) * C152302) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C151985 * C1211 -
           ((C24456 + C24457 + C24458) * C152231 +
            (C23475 + C23474 + C23473) * C152302) *
               C152155 * C151985 * C1212 +
           ((C23478 + C23477 + C23476) * C152302 +
            (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
             C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
             C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
             C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152302 +
           (C32237 + C32238 + C32239) * C152231) *
              C152155 * C151985 * C1299 -
          ((C24450 + C24451 + C24452) * C152231 +
           (C23463 + C23462 + C23461) * C152302) *
              C152155 * C151985 * C1300 +
          ((C23466 + C23465 + C23464) * C152302 +
           (C25116 + C25117 + C25118) * C152231) *
              C152155 * C151985 * C1301 -
          ((C25860 + C25861 + C25862) * C152231 +
           (C24837 + C24836 + C24835) * C152302) *
              C152155 * C151985 * C1302 +
          ((C24840 + C24839 + C24838) * C152302 +
           (C23128 * C8009 - C23129 * C8000 - C23128 * C8010 + C152349 * C8018 +
            C23130 * C8007 - C23131 * C7999 - C23130 * C8008 + C152350 * C8017 +
            C23132 * C8586 - C23133 * C8585 - C23132 * C8587 + C23125 * C8588) *
               C152231) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C152374 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152359 +
           ((C32242 + C32241 + C32240) * C152302 +
            (C23128 * C2411 - C23129 * C2400 - C23128 * C2412 +
             C152349 * C2424 + C23130 * C2409 - C23131 * C2399 -
             C23130 * C2410 + C152350 * C2423 + C23132 * C2407 -
             C23133 * C2398 - C23132 * C2408 + C23125 * C2422) *
                C152231) *
               C152155 * C152329) *
              C1211 +
          (((C24452 + C24451 + C24450) * C152302 +
            (C25113 + C25114 + C25115) * C152231) *
               C152155 * C152359 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C152374 -
           ((C27138 + C27139 + C27140) * C152231 +
            (C25115 + C25114 + C25113) * C152302) *
               C152155 * C152329) *
              C1212 +
          (((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C152374 -
           ((C25119 + C25120 + C25121) * C152231 +
            (C25118 + C25117 + C25116) * C152302) *
               C152155 * C152359 +
           ((C25121 + C25120 + C25119) * C152302 +
            (C23128 * C9389 - C23129 * C9382 - C23128 * C9390 +
             C152349 * C9400 + C23130 * C9387 - C23131 * C9381 -
             C23130 * C9388 + C152350 * C9399 + C23132 * C9922 -
             C23133 * C9921 - C23132 * C9923 + C23125 * C9924) *
                C152231) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C152285 -
           ((C32240 + C32241 + C32242) * C152231 +
            (C32239 + C32238 + C32237) * C152302) *
               C152155 * C152072) *
              C151967 * C703 +
          (((C32243 + C32244 + C32245) * C152302 +
            (C32246 + C32247 + C32248) * C152231) *
               C152155 * C152072 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C152285) *
              C151967 * C704 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C152285 -
           ((C32252 + C32253 + C32254) * C152231 +
            (C32251 + C32250 + C32249) * C152302) *
               C152155 * C152072) *
              C151967 * C705 +
          (((C32661 + C32662 + C32663) * C152302 +
            (C23128 * C549 - C23129 * C530 - C23128 * C550 + C152349 * C566 +
             C23130 * C553 - C23131 * C532 - C23130 * C554 + C152350 * C568 +
             C23132 * C557 - C23133 * C534 - C23132 * C558 + C23125 * C570) *
                C152231) *
               C152155 * C152072 -
           ((C32663 + C32662 + C32661) * C152231 +
            (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
             C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
             C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
                C152302) *
               C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
              C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
              C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                 C152302 +
             (C32237 + C32238 + C32239) * C152231) *
                C152155 * C152285 -
            ((C32240 + C32241 + C32242) * C152231 +
             (C32239 + C32238 + C32237) * C152302) *
                C152155 * C152072) *
               C1211 +
           (((C24452 + C24451 + C24450) * C152302 +
             (C25113 + C25114 + C25115) * C152231) *
                C152155 * C152072 -
            ((C24450 + C24451 + C24452) * C152231 +
             (C23463 + C23462 + C23461) * C152302) *
                C152155 * C152285) *
               C1212 +
           (((C23466 + C23465 + C23464) * C152302 +
             (C25116 + C25117 + C25118) * C152231) *
                C152155 * C152285 -
            ((C25119 + C25120 + C25121) * C152231 +
             (C25118 + C25117 + C25116) * C152302) *
                C152155 * C152072) *
               C152326) *
              C152270 +
          ((((C32243 + C32244 + C32245) * C152302 +
             (C32246 + C32247 + C32248) * C152231) *
                C152155 * C152072 -
            ((C32245 + C32244 + C32243) * C152231 +
             (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
              C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
              C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                 C152302) *
                C152155 * C152285) *
               C1211 +
           (((C23467 + C23468 + C23469) * C152302 +
             (C24453 + C24454 + C24455) * C152231) *
                C152155 * C152285 -
            ((C26729 + C26730 + C26731) * C152231 +
             (C24455 + C24454 + C24453) * C152302) *
                C152155 * C152072) *
               C1212 +
           (((C25647 + C25646 + C25645) * C152302 +
             (C23128 * C1513 - C23129 * C1492 - C23128 * C1514 +
              C152349 * C1528 + C23130 * C1515 - C23131 * C1493 -
              C23130 * C1516 + C152350 * C1529 + C23132 * C1517 -
              C23133 * C1494 - C23132 * C1518 + C23125 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C25645 + C25646 + C25647) * C152231 +
             (C23472 + C23471 + C23470) * C152302) *
                C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152302 +
           (C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562 +
            C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
            C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560) *
               C152231) *
              C152155 * C151985 * C151967 * C129 -
          ((C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559 +
            C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
            C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561) *
               C152231 +
           (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
            C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
            C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
               C152302) *
              C152155 * C151985 * C151967 * C130 +
          ((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
            C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
            C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
               C152302 +
           (C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560 +
            C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
            C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567) *
               C152231) *
              C152155 * C151985 * C151967 * C131 -
          ((C23132 * C555 - C23133 * C533 - C23132 * C556 + C23125 * C569 +
            C23130 * C551 - C23131 * C531 - C23130 * C552 + C152350 * C567 +
            C23128 * C535 - C23129 * C523 - C23128 * C536 + C152349 * C559) *
               C152231 +
           (C23132 * C160 - C23133 * C147 - C23132 * C161 + C23125 * C171 +
            C23130 * C158 - C23131 * C146 - C23130 * C159 + C152350 * C170 +
            C23128 * C156 - C23129 * C145 - C23128 * C157 + C152349 * C169) *
               C152302) *
              C152155 * C151985 * C151967 * C132 +
          ((C23128 * C158 - C23129 * C146 - C23128 * C159 + C152349 * C170 +
            C23130 * C160 - C23131 * C147 - C23130 * C161 + C152350 * C171 +
            C23132 * C162 - C23133 * C148 - C23132 * C163 + C23125 * C172) *
               C152302 +
           (C23128 * C551 - C23129 * C531 - C23128 * C552 + C152349 * C567 +
            C23130 * C555 - C23131 * C533 - C23130 * C556 + C152350 * C569 +
            C23132 * C844 - C23133 * C843 - C23132 * C845 + C23125 * C846) *
               C152231) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C23128 * C541 - C23129 * C526 - C23128 * C542 + C152349 * C562 +
             C23130 * C539 - C23131 * C525 - C23130 * C540 + C152350 * C561 +
             C23132 * C537 - C23133 * C524 - C23132 * C538 + C23125 * C560) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C152357 +
           ((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C151985 * C152326) *
              C323 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C152357 -
           ((C23132 * C535 - C23133 * C523 - C23132 * C536 + C23125 * C559 +
             C23130 * C537 - C23131 * C524 - C23130 * C538 + C152350 * C560 +
             C23128 * C539 - C23129 * C525 - C23128 * C540 + C152349 * C561) *
                C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C152373 -
           ((C25645 + C25646 + C25647) * C152231 +
            (C23472 + C23471 + C23470) * C152302) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C23128 * C537 - C23129 * C524 - C23128 * C538 + C152349 * C560 +
             C23130 * C535 - C23131 * C523 - C23130 * C536 + C152350 * C559 +
             C23132 * C551 - C23133 * C531 - C23132 * C552 + C23125 * C567) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C24456 + C24457 + C24458) * C152231 +
            (C23475 + C23474 + C23473) * C152302) *
               C152155 * C151985 * C152357 +
           ((C23478 + C23477 + C23476) * C152302 +
            (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
             C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
             C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
             C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
             C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
             C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
                C152302 +
            (C32237 + C32238 + C32239) * C152231) *
               C152155 * C151985 * C1211 -
           ((C24450 + C24451 + C24452) * C152231 +
            (C23463 + C23462 + C23461) * C152302) *
               C152155 * C151985 * C1212 +
           ((C23466 + C23465 + C23464) * C152302 +
            (C25116 + C25117 + C25118) * C152231) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C23467 + C23468 + C23469) * C152302 +
            (C24453 + C24454 + C24455) * C152231) *
               C152155 * C151985 * C1212 -
           ((C32245 + C32244 + C32243) * C152231 +
            (C23132 * C156 - C23133 * C145 - C23132 * C157 + C23125 * C169 +
             C23130 * C154 - C23131 * C144 - C23130 * C155 + C152350 * C168 +
             C23128 * C152 - C23129 * C143 - C23128 * C153 + C152349 * C167) *
                C152302) *
               C152155 * C151985 * C1211 -
           ((C25645 + C25646 + C25647) * C152231 +
            (C23472 + C23471 + C23470) * C152302) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C23128 * C154 - C23129 * C144 - C23128 * C155 + C152349 * C168 +
             C23130 * C156 - C23131 * C145 - C23130 * C157 + C152350 * C169 +
             C23132 * C158 - C23133 * C146 - C23132 * C159 + C23125 * C170) *
                C152302 +
            (C32249 + C32250 + C32251) * C152231) *
               C152155 * C151985 * C1211 -
           ((C24456 + C24457 + C24458) * C152231 +
            (C23475 + C23474 + C23473) * C152302) *
               C152155 * C151985 * C1212 +
           ((C23478 + C23477 + C23476) * C152302 +
            (C23128 * C1505 - C23129 * C1488 - C23128 * C1506 +
             C152349 * C1524 + C23130 * C1503 - C23131 * C1487 -
             C23130 * C1504 + C152350 * C1523 + C23132 * C1866 -
             C23133 * C1865 - C23132 * C1867 + C23125 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C23128 * C150 - C23129 * C142 - C23128 * C151 + C152349 * C166 +
            C23130 * C152 - C23131 * C143 - C23130 * C153 + C152350 * C167 +
            C23132 * C154 - C23133 * C144 - C23132 * C155 + C23125 * C168) *
               C152302 +
           (C32237 + C32238 + C32239) * C152231) *
              C152155 * C151985 * C1299 -
          ((C24450 + C24451 + C24452) * C152231 +
           (C23463 + C23462 + C23461) * C152302) *
              C152155 * C151985 * C1300 +
          ((C23466 + C23465 + C23464) * C152302 +
           (C25116 + C25117 + C25118) * C152231) *
              C152155 * C151985 * C1301 -
          ((C25860 + C25861 + C25862) * C152231 +
           (C24837 + C24836 + C24835) * C152302) *
              C152155 * C151985 * C1302 +
          ((C24840 + C24839 + C24838) * C152302 +
           (C23128 * C8009 - C23129 * C8000 - C23128 * C8010 + C152349 * C8018 +
            C23130 * C8007 - C23131 * C7999 - C23130 * C8008 + C152350 * C8017 +
            C23132 * C8586 - C23133 * C8585 - C23132 * C8587 + C23125 * C8588) *
               C152231) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152026 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152033 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C3525) *
              C151944 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152033 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152026 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C3525) *
              C151953 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C152026 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152033 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152026 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152033 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C151985 * C3525) *
              C151944 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C152033 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152026 -
           ((C8294 + C8295) * C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C3525) *
              C151953 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152026 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152033 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152285 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C152026 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152285) *
               C152033 +
           ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
             C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
             C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
             C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                C152167 * C152155 * C152285 -
            (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
             C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
             C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
             C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                C152167 * C152155 * C152072) *
               C3525) *
              C3181 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152285) *
               C152026 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152285 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152033 +
           ((C134 * C1507 - C135 * C1489 - C134 * C1508 + C121 * C1525 +
             C136 * C1505 - C137 * C1488 - C136 * C1506 + C122 * C1524 +
             C138 * C1503 - C139 * C1487 - C138 * C1504 + C123 * C1523 +
             C140 * C1866 - C141 * C1865 - C140 * C1867 + C124 * C1868) *
                C152167 * C152155 * C152072 -
            (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
             C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
             C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
             C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                C152167 * C152155 * C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152285 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152026 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152285) *
               C152033 +
           ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
             C7779 * C6028) *
                C152285 -
            ((C8822 + C8823) * C152167 * C6028 +
             (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
                C152072) *
               C3525) *
              C3181 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152285) *
               C152026 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152285 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152033 +
           ((C8599 * C6026 + (C8605 + C8604) * C152167 * C6027 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152167 * C6028) *
                C152072 -
            ((C8294 + C8295) * C152167 * C6028 +
             (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
                C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152380 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152376 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152362 -
           (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
            C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
            C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
            C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
               C152167 * C152155 * C151985 * C152336) *
              C3181 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152376 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152380 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152362 +
           (C134 * C1317 - C135 * C1307 - C134 * C1318 + C121 * C1331 +
            C136 * C1315 - C137 * C1306 - C136 * C1316 + C122 * C1330 +
            C138 * C1313 - C139 * C1305 - C138 * C1314 + C123 * C1329 +
            C140 * C1668 - C141 * C1667 - C140 * C1669 + C124 * C1670) *
               C152167 * C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C3041 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152030) *
              C152379 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152030 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C3041) *
              C152372 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C3041 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152030) *
              C152355 +
          ((C134 * C338 - C135 * C326 - C134 * C339 + C121 * C362 +
            C136 * C354 - C137 * C334 - C136 * C355 + C122 * C370 +
            C138 * C358 - C139 * C336 - C138 * C359 + C123 * C372 +
            C140 * C708 - C141 * C707 - C140 * C709 + C124 * C710) *
               C152167 * C152155 * C151985 * C152030 -
           (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
            C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
            C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
            C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
               C152167 * C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152374 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152359 +
            (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
             C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
             C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
             C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
                C152167 * C152155 * C152329) *
               C3041 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152359 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152374 -
            (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
             C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
             C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
             C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
                C152167 * C152155 * C152329) *
               C152030) *
              C3181 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152359 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152374 -
            (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
             C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
             C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
             C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
                C152167 * C152155 * C152329) *
               C3041 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152374 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152359 +
            (C134 * C1499 - C135 * C1485 - C134 * C1500 + C121 * C1521 +
             C136 * C1497 - C137 * C1484 - C136 * C1498 + C122 * C1520 +
             C138 * C1495 - C139 * C1483 - C138 * C1496 + C123 * C1519 +
             C140 * C2624 - C141 * C2623 - C140 * C2625 + C124 * C2626) *
                C152167 * C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C3041 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152030) *
              C152379 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C152030 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C3041) *
              C152372 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C3041 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152030) *
              C152355 +
          (((C6820 + C6821) * C152167 * C6026 +
            (C6822 + C6823) * C152167 * C6027 +
            (C6029 * C1313 - C6030 * C1305 - C6029 * C1314 + C6024 * C1329 +
             C6031 * C1668 - C6032 * C1667 - C6031 * C1669 + C151913 * C1670) *
                C152167 * C6028) *
               C151985 * C152030 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152380 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152376 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C151985 * C152362 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C151985 * C152336) *
              C3181 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C152376 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152380 -
           ((C8294 + C8295) * C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152362 +
           (C8289 * C6026 + (C8295 + C8294) * C152167 * C6027 +
            (C6029 * C7735 - C6030 * C7731 - C6029 * C7736 + C6024 * C7743 +
             C6031 * C8276 - C6032 * C8275 - C6031 * C8277 + C151913 * C8278) *
                C152167 * C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152374 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152359 +
            ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
              C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                 C152167 * C6026 +
             (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
                C152329) *
               C3041 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152359 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152374 -
            ((C8078 + C8079) * C152167 * C6028 +
             (C8075 + C8074) * C152167 * C6027 +
             (C8073 + C8072) * C152167 * C6026) *
                C152329) *
               C152030) *
              C3181 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152359 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152374 -
            ((C9724 + C9725) * C152167 * C6028 +
             (C9726 + C9727) * C152167 * C6027 +
             (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
              C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                 C152167 * C6026) *
                C152329) *
               C3041 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152374 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152359 +
            ((C9727 + C9726) * C152167 * C6026 +
             (C9725 + C9724) * C152167 * C6027 +
             (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
              C6031 * C9696 - C6032 * C9695 - C6031 * C9697 + C151913 * C9698) *
                 C152167 * C6028) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152285 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C3041 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152285) *
               C152030) *
              C151944 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152285) *
               C3041 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152285 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152030) *
              C151953 +
          (((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
             C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
             C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
             C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                C152167 * C152155 * C152285 -
            (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
             C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
             C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
             C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                C152167 * C152155 * C152072) *
               C3041 +
           ((C134 * C1051 - C135 * C1043 - C134 * C1052 + C121 * C1061 +
             C136 * C1053 - C137 * C1044 - C136 * C1054 + C122 * C1062 +
             C138 * C1055 - C139 * C1045 - C138 * C1056 + C123 * C1063 +
             C140 * C1057 - C141 * C1046 - C140 * C1058 + C124 * C1064) *
                C152167 * C152155 * C152072 -
            (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
             C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
             C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
             C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                C152167 * C152155 * C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152285 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C3041 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152285) *
               C152030) *
              C151944 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152285) *
               C3041 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152285 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152030) *
              C151953 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152167 * C6026 +
             (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
                C152285 -
            ((C7388 + C7389) * C152167 * C6028 +
             (C7390 + C7391) * C152167 * C6027 +
             (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
              C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                 C152167 * C6026) *
                C152072) *
               C3041 +
           (((C7391 + C7390) * C152167 * C6026 +
             (C7389 + C7388) * C152167 * C6027 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152167 * C6028) *
                C152072 -
            ((C6376 + C6377) * C152167 * C6028 +
             (C6375 + C6374) * C152167 * C6027 +
             (C6373 + C6372) * C152167 * C6026) *
                C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C3041 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152030) *
              C152379 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152030 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C3041) *
              C152372 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C3041 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152030) *
              C152355 +
          ((C134 * C338 - C135 * C326 - C134 * C339 + C121 * C362 +
            C136 * C354 - C137 * C334 - C136 * C355 + C122 * C370 +
            C138 * C358 - C139 * C336 - C138 * C359 + C123 * C372 +
            C140 * C708 - C141 * C707 - C140 * C709 + C124 * C710) *
               C152167 * C152155 * C151985 * C152030 -
           (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
            C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
            C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
            C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
               C152167 * C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152380 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152376 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152362 -
           (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
            C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
            C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
            C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
               C152167 * C152155 * C151985 * C152336) *
              C3181 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152376 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152380 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152362 +
           (C134 * C1317 - C135 * C1307 - C134 * C1318 + C121 * C1331 +
            C136 * C1315 - C137 * C1306 - C136 * C1316 + C122 * C1330 +
            C138 * C1313 - C139 * C1305 - C138 * C1314 + C123 * C1329 +
            C140 * C1668 - C141 * C1667 - C140 * C1669 + C124 * C1670) *
               C152167 * C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C3041 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152030) *
              C152379 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C152030 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C3041) *
              C152372 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C3041 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152030) *
              C152355 +
          (((C6820 + C6821) * C152167 * C6026 +
            (C6822 + C6823) * C152167 * C6027 +
            (C6029 * C1313 - C6030 * C1305 - C6029 * C1314 + C6024 * C1329 +
             C6031 * C1668 - C6032 * C1667 - C6031 * C1669 + C151913 * C1670) *
                C152167 * C6028) *
               C151985 * C152030 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152380 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152376 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C151985 * C152362 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C151985 * C152336) *
              C3181 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C152376 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152380 -
           ((C8294 + C8295) * C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152362 +
           (C8289 * C6026 + (C8295 + C8294) * C152167 * C6027 +
            (C6029 * C7735 - C6030 * C7731 - C6029 * C7736 + C6024 * C7743 +
             C6031 * C8276 - C6032 * C8275 - C6031 * C8277 + C151913 * C8278) *
                C152167 * C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C4047 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C152026 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C4047) *
               C152033 +
           ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
             C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
             C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
             C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                C152167 * C152155 * C4047 -
            (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
             C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
             C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
             C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                C152167 * C152155 * C152072) *
               C3525) *
              C152270 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C4047) *
               C152026 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C4047 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152033 +
           ((C134 * C1507 - C135 * C1489 - C134 * C1508 + C121 * C1525 +
             C136 * C1505 - C137 * C1488 - C136 * C1506 + C122 * C1524 +
             C138 * C1503 - C139 * C1487 - C138 * C1504 + C123 * C1523 +
             C140 * C1866 - C141 * C1865 - C140 * C1867 + C124 * C1868) *
                C152167 * C152155 * C152072 -
            (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
             C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
             C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
             C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                C152167 * C152155 * C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C4047 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152026 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C4047) *
               C152033 +
           ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
             C7779 * C6028) *
                C4047 -
            ((C8822 + C8823) * C152167 * C6028 +
             (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
                C152072) *
               C3525) *
              C152270 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C4047) *
               C152026 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C4047 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152033 +
           ((C8599 * C6026 + (C8605 + C8604) * C152167 * C6027 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152167 * C6028) *
                C152072 -
            ((C8294 + C8295) * C152167 * C6028 +
             (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
                C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152068 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152075 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C4719) *
              C152026 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152075 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C152068 -
           (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
            C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
            C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
            C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
               C152167 * C152155 * C4719) *
              C152033 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C152068 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C152075 +
           (C134 * C1511 - C135 * C1491 - C134 * C1512 + C121 * C1527 +
            C136 * C1513 - C137 * C1492 - C136 * C1514 + C122 * C1528 +
            C138 * C1515 - C139 * C1493 - C138 * C1516 + C123 * C1529 +
            C140 * C1517 - C141 * C1494 - C140 * C1518 + C124 * C1530) *
               C152167 * C152155 * C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152068 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152075 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C4719) *
              C152026 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C152075 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C152068 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C4719) *
              C152033 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C152068 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152075 +
           (C8081 * C6026 + (C8079 + C8078) * C152167 * C6027 +
            (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
             C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                C152167 * C6028) *
               C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C4047 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152072) *
              C152380 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152072 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C4047) *
              C152376 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C4047 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C152072) *
              C152362 +
          ((C134 * C2003 - C135 * C1999 - C134 * C2004 + C121 * C2011 +
            C136 * C2005 - C137 * C2000 - C136 * C2006 + C122 * C2012 +
            C138 * C2007 - C139 * C2001 - C138 * C2008 + C123 * C2013 +
            C140 * C2009 - C141 * C2002 - C140 * C2010 + C124 * C2014) *
               C152167 * C152155 * C152072 -
           (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
            C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
            C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
            C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
               C152167 * C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C4047 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C3041 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C4047) *
               C152030) *
              C152370 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C4047) *
               C3041 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C4047 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152030) *
              C152353 +
          (((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
             C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
             C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
             C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                C152167 * C152155 * C4047 -
            (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
             C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
             C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
             C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                C152167 * C152155 * C152072) *
               C3041 +
           ((C134 * C1051 - C135 * C1043 - C134 * C1052 + C121 * C1061 +
             C136 * C1053 - C137 * C1044 - C136 * C1054 + C122 * C1062 +
             C138 * C1055 - C139 * C1045 - C138 * C1056 + C123 * C1063 +
             C140 * C1057 - C141 * C1046 - C140 * C1058 + C124 * C1064) *
                C152167 * C152155 * C152072 -
            (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
             C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
             C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
             C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                C152167 * C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152381 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152378 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152365 -
           (C140 * C2405 - C141 * C2397 - C140 * C2406 + C124 * C2421 +
            C138 * C2407 - C139 * C2398 - C138 * C2408 + C123 * C2422 +
            C136 * C2409 - C137 * C2399 - C136 * C2410 + C122 * C2423 +
            C134 * C2411 - C135 * C2400 - C134 * C2412 + C121 * C2424) *
               C152167 * C152155 * C152342) *
              C3041 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152378 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C152381 -
           (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
            C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
            C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
            C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
               C152167 * C152155 * C152365 +
           (C134 * C2899 - C135 * C2895 - C134 * C2900 + C121 * C2907 +
            C136 * C2901 - C137 * C2896 - C136 * C2902 + C122 * C2908 +
            C138 * C2903 - C139 * C2897 - C138 * C2904 + C123 * C2909 +
            C140 * C2905 - C141 * C2898 - C140 * C2906 + C124 * C2910) *
               C152167 * C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C4047 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C3041 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C4047) *
               C152030) *
              C152370 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C4047) *
               C3041 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C4047 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152030) *
              C152353 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152167 * C6026 +
             (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
                C4047 -
            ((C7388 + C7389) * C152167 * C6028 +
             (C7390 + C7391) * C152167 * C6027 +
             (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
              C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                 C152167 * C6026) *
                C152072) *
               C3041 +
           (((C7391 + C7390) * C152167 * C6026 +
             (C7389 + C7388) * C152167 * C6027 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152167 * C6028) *
                C152072 -
            ((C6376 + C6377) * C152167 * C6028 +
             (C6375 + C6374) * C152167 * C6027 +
             (C6373 + C6372) * C152167 * C6026) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C4047 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C152380 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C152072 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C4047) *
              C152376 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C4047 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152072) *
              C152362 +
          ((C8817 * C6026 + (C8823 + C8822) * C152167 * C6027 +
            (C6029 * C8801 - C6030 * C8799 - C6029 * C8802 + C6024 * C8805 +
             C6031 * C8803 - C6032 * C8800 - C6031 * C8804 + C151913 * C8806) *
                C152167 * C6028) *
               C152072 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152381 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152378 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152365 -
           ((C10152 + C10153) * C152167 * C6028 +
            (C10154 + C10155) * C152167 * C6027 +
            (C6031 * C2409 - C6032 * C2399 - C6031 * C2410 + C151913 * C2423 +
             C6029 * C2411 - C6030 * C2400 - C6029 * C2412 + C6024 * C2424) *
                C152167 * C6026) *
               C152342) *
              C3041 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C152378 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C152381 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C152365 +
           ((C10155 + C10154) * C152167 * C6026 +
            (C10153 + C10152) * C152167 * C6027 +
            (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 + C6024 * C10125 +
             C6031 * C10123 - C6032 * C10120 - C6031 * C10124 +
             C151913 * C10126) *
                C152167 * C6028) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152068 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152075 +
            (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
             C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
             C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
             C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
                C152167 * C152155 * C4719) *
               C3041 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152075 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152068 -
            (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
             C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
             C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
             C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
                C152167 * C152155 * C4719) *
               C152030) *
              C152270 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152075 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152068 -
            (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
             C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
             C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
             C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
                C152167 * C152155 * C4719) *
               C3041 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152068 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152075 +
            (C134 * C1499 - C135 * C1485 - C134 * C1500 + C121 * C1521 +
             C136 * C1497 - C137 * C1484 - C136 * C1498 + C122 * C1520 +
             C138 * C1495 - C139 * C1483 - C138 * C1496 + C123 * C1519 +
             C140 * C2624 - C141 * C2623 - C140 * C2625 + C124 * C2626) *
                C152167 * C152155 * C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152068 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152075 +
            ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
              C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                 C152167 * C6026 +
             (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
                C4719) *
               C3041 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152075 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152068 -
            ((C8078 + C8079) * C152167 * C6028 +
             (C8075 + C8074) * C152167 * C6027 +
             (C8073 + C8072) * C152167 * C6026) *
                C4719) *
               C152030) *
              C152270 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152075 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152068 -
            ((C9724 + C9725) * C152167 * C6028 +
             (C9726 + C9727) * C152167 * C6027 +
             (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
              C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                 C152167 * C6026) *
                C4719) *
               C3041 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152068 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152075 +
            ((C9727 + C9726) * C152167 * C6026 +
             (C9725 + C9724) * C152167 * C6027 +
             (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
              C6031 * C9696 - C6032 * C9695 - C6031 * C9697 + C151913 * C9698) *
                 C152167 * C6028) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C4047 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C3041 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C4047) *
               C152030) *
              C152370 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C4047) *
               C3041 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C4047 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152030) *
              C152353 +
          (((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
             C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
             C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
             C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                C152167 * C152155 * C4047 -
            (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
             C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
             C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
             C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                C152167 * C152155 * C152072) *
               C3041 +
           ((C134 * C1051 - C135 * C1043 - C134 * C1052 + C121 * C1061 +
             C136 * C1053 - C137 * C1044 - C136 * C1054 + C122 * C1062 +
             C138 * C1055 - C139 * C1045 - C138 * C1056 + C123 * C1063 +
             C140 * C1057 - C141 * C1046 - C140 * C1058 + C124 * C1064) *
                C152167 * C152155 * C152072 -
            (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
             C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
             C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
             C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                C152167 * C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C4047 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152072) *
              C152380 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152072 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C4047) *
              C152376 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C4047 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C152072) *
              C152362 +
          ((C134 * C2003 - C135 * C1999 - C134 * C2004 + C121 * C2011 +
            C136 * C2005 - C137 * C2000 - C136 * C2006 + C122 * C2012 +
            C138 * C2007 - C139 * C2001 - C138 * C2008 + C123 * C2013 +
            C140 * C2009 - C141 * C2002 - C140 * C2010 + C124 * C2014) *
               C152167 * C152155 * C152072 -
           (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
            C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
            C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
            C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
               C152167 * C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C4047 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C3041 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C4047) *
               C152030) *
              C152370 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C4047) *
               C3041 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C4047 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152030) *
              C152353 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152167 * C6026 +
             (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
                C4047 -
            ((C7388 + C7389) * C152167 * C6028 +
             (C7390 + C7391) * C152167 * C6027 +
             (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
              C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                 C152167 * C6026) *
                C152072) *
               C3041 +
           (((C7391 + C7390) * C152167 * C6026 +
             (C7389 + C7388) * C152167 * C6027 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152167 * C6028) *
                C152072 -
            ((C6376 + C6377) * C152167 * C6028 +
             (C6375 + C6374) * C152167 * C6027 +
             (C6373 + C6372) * C152167 * C6026) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C4047 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C152380 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C152072 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C4047) *
              C152376 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C4047 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152072) *
              C152362 +
          ((C8817 * C6026 + (C8823 + C8822) * C152167 * C6027 +
            (C6029 * C8801 - C6030 * C8799 - C6029 * C8802 + C6024 * C8805 +
             C6031 * C8803 - C6032 * C8800 - C6031 * C8804 + C151913 * C8806) *
                C152167 * C6028) *
               C152072 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C1661 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C1662 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C1663 -
           (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
            C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
            C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
            C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
               C152167 * C152155 * C151985 * C152336) *
              C152270 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C1662 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C1661 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C1663 +
           (C134 * C1317 - C135 * C1307 - C134 * C1318 + C121 * C1331 +
            C136 * C1315 - C137 * C1306 - C136 * C1316 + C122 * C1330 +
            C138 * C1313 - C139 * C1305 - C138 * C1314 + C123 * C1329 +
            C140 * C1668 - C141 * C1667 - C140 * C1669 + C124 * C1670) *
               C152167 * C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152284 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152030) *
              C703 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152030 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152284) *
              C704 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C152284 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152030) *
              C705 +
          ((C134 * C338 - C135 * C326 - C134 * C339 + C121 * C362 +
            C136 * C354 - C137 * C334 - C136 * C355 + C122 * C370 +
            C138 * C358 - C139 * C336 - C138 * C359 + C123 * C372 +
            C140 * C708 - C141 * C707 - C140 * C709 + C124 * C710) *
               C152167 * C152155 * C151985 * C152030 -
           (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
            C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
            C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
            C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
               C152167 * C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C2161 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C2162 +
            (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
             C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
             C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
             C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
                C152167 * C152155 * C152329) *
               C152284 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C2162 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C2161 -
            (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
             C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
             C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
             C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
                C152167 * C152155 * C152329) *
               C152030) *
              C152270 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C2162 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C2161 -
            (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
             C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
             C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
             C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
                C152167 * C152155 * C152329) *
               C152284 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C2161 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C2162 +
            (C134 * C1499 - C135 * C1485 - C134 * C1500 + C121 * C1521 +
             C136 * C1497 - C137 * C1484 - C136 * C1498 + C122 * C1520 +
             C138 * C1495 - C139 * C1483 - C138 * C1496 + C123 * C1519 +
             C140 * C2624 - C141 * C2623 - C140 * C2625 + C124 * C2626) *
                C152167 * C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152284 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152030) *
              C703 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C152030 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152284) *
              C704 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152284 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152030) *
              C705 +
          (((C6820 + C6821) * C152167 * C6026 +
            (C6822 + C6823) * C152167 * C6027 +
            (C6029 * C1313 - C6030 * C1305 - C6029 * C1314 + C6024 * C1329 +
             C6031 * C1668 - C6032 * C1667 - C6031 * C1669 + C151913 * C1670) *
                C152167 * C6028) *
               C151985 * C152030 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C1661 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C1662 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C151985 * C1663 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C151985 * C152336) *
              C152270 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C1662 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C1661 -
           ((C8294 + C8295) * C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C1663 +
           (C8289 * C6026 + (C8295 + C8294) * C152167 * C6027 +
            (C6029 * C7735 - C6030 * C7731 - C6029 * C7736 + C6024 * C7743 +
             C6031 * C8276 - C6032 * C8275 - C6031 * C8277 + C151913 * C8278) *
                C152167 * C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C2161 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C2162 +
            ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
              C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                 C152167 * C6026 +
             (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
                C152329) *
               C152284 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C2162 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C2161 -
            ((C8078 + C8079) * C152167 * C6028 +
             (C8075 + C8074) * C152167 * C6027 +
             (C8073 + C8072) * C152167 * C6026) *
                C152329) *
               C152030) *
              C152270 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C2162 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C2161 -
            ((C9724 + C9725) * C152167 * C6028 +
             (C9726 + C9727) * C152167 * C6027 +
             (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
              C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                 C152167 * C6026) *
                C152329) *
               C152284 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C2161 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C2162 +
            ((C9727 + C9726) * C152167 * C6026 +
             (C9725 + C9724) * C152167 * C6027 +
             (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
              C6031 * C9696 - C6032 * C9695 - C6031 * C9697 + C151913 * C9698) *
                 C152167 * C6028) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152285 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152072) *
              C1661 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152072 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C152285) *
              C1662 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C152285 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C152072) *
              C1663 +
          ((C134 * C2003 - C135 * C1999 - C134 * C2004 + C121 * C2011 +
            C136 * C2005 - C137 * C2000 - C136 * C2006 + C122 * C2012 +
            C138 * C2007 - C139 * C2001 - C138 * C2008 + C123 * C2013 +
            C140 * C2009 - C141 * C2002 - C140 * C2010 + C124 * C2014) *
               C152167 * C152155 * C152072 -
           (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
            C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
            C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
            C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
               C152167 * C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152285 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C152284 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152285) *
               C152030) *
              C323 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152285) *
               C152284 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152285 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152030) *
              C324 +
          (((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
             C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
             C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
             C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                C152167 * C152155 * C152285 -
            (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
             C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
             C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
             C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                C152167 * C152155 * C152072) *
               C152284 +
           ((C134 * C1051 - C135 * C1043 - C134 * C1052 + C121 * C1061 +
             C136 * C1053 - C137 * C1044 - C136 * C1054 + C122 * C1062 +
             C138 * C1055 - C139 * C1045 - C138 * C1056 + C123 * C1063 +
             C140 * C1057 - C141 * C1046 - C140 * C1058 + C124 * C1064) *
                C152167 * C152155 * C152072 -
            (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
             C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
             C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
             C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                C152167 * C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C2757 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C2758 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C2759 -
           (C140 * C2405 - C141 * C2397 - C140 * C2406 + C124 * C2421 +
            C138 * C2407 - C139 * C2398 - C138 * C2408 + C123 * C2422 +
            C136 * C2409 - C137 * C2399 - C136 * C2410 + C122 * C2423 +
            C134 * C2411 - C135 * C2400 - C134 * C2412 + C121 * C2424) *
               C152167 * C152155 * C152342) *
              C152284 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C2758 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C2757 -
           (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
            C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
            C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
            C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
               C152167 * C152155 * C2759 +
           (C134 * C2899 - C135 * C2895 - C134 * C2900 + C121 * C2907 +
            C136 * C2901 - C137 * C2896 - C136 * C2902 + C122 * C2908 +
            C138 * C2903 - C139 * C2897 - C138 * C2904 + C123 * C2909 +
            C140 * C2905 - C141 * C2898 - C140 * C2906 + C124 * C2910) *
               C152167 * C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152285 -
            ((C7380 + C7381) * C152167 * C6028 +
             (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152284 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 +
             (C6029 * C2003 - C6030 * C1999 - C6029 * C2004 + C6024 * C2011 +
              C6031 * C2005 - C6032 * C2000 - C6031 * C2006 + C151913 * C2012) *
                 C152167 * C6028) *
                C152072 -
            ((C6364 + C6365) * C152167 * C6028 +
             (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152285) *
               C152030) *
              C323 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 +
             (C7386 + C7387) * C152167 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152285) *
               C152284 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 +
             (C6370 + C6371) * C152167 * C6028) *
                C152285 -
            ((C6031 * C2007 - C6032 * C2001 - C6031 * C2008 + C151913 * C2013 +
              C6029 * C2005 - C6030 * C2000 - C6029 * C2006 + C6024 * C2012) *
                 C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152030) *
              C324 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152167 * C6026 +
             (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
                C152285 -
            ((C7388 + C7389) * C152167 * C6028 +
             (C7390 + C7391) * C152167 * C6027 +
             (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
              C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                 C152167 * C6026) *
                C152072) *
               C152284 +
           (((C7391 + C7390) * C152167 * C6026 +
             (C7389 + C7388) * C152167 * C6027 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152167 * C6028) *
                C152072 -
            ((C6376 + C6377) * C152167 * C6028 +
             (C6375 + C6374) * C152167 * C6027 +
             (C6373 + C6372) * C152167 * C6026) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152285 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C1661 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C152072 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C152285) *
              C1662 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C152285 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152072) *
              C1663 +
          ((C8817 * C6026 + (C8823 + C8822) * C152167 * C6027 +
            (C6029 * C8801 - C6030 * C8799 - C6029 * C8802 + C6024 * C8805 +
             C6031 * C8803 - C6032 * C8800 - C6031 * C8804 + C151913 * C8806) *
                C152167 * C6028) *
               C152072 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C2757 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C2758 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C2759 -
           ((C10152 + C10153) * C152167 * C6028 +
            (C10154 + C10155) * C152167 * C6027 +
            (C6031 * C2409 - C6032 * C2399 - C6031 * C2410 + C151913 * C2423 +
             C6029 * C2411 - C6030 * C2400 - C6029 * C2412 + C6024 * C2424) *
                C152167 * C6026) *
               C152342) *
              C152284 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C2758 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C2757 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C2759 +
           ((C10155 + C10154) * C152167 * C6026 +
            (C10153 + C10152) * C152167 * C6027 +
            (C6029 * C10121 - C6030 * C10119 - C6029 * C10122 + C6024 * C10125 +
             C6031 * C10123 - C6032 * C10120 - C6031 * C10124 +
             C151913 * C10126) *
                C152167 * C6028) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
               C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
               C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
               C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                  C152167 * C152155 * C151985 * C151967 * C129 -
              (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
               C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
               C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
               C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                  C152167 * C152155 * C151985 * C151967 * C130 +
              (C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
               C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
               C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
               C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                  C152167 * C152155 * C151985 * C151967 * C131 -
              (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
               C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
               C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
               C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
                  C152167 * C152155 * C151985 * C151967 * C132 +
              (C134 * C158 - C135 * C146 - C134 * C159 + C121 * C170 +
               C136 * C160 - C137 * C147 - C136 * C161 + C122 * C171 +
               C138 * C162 - C139 * C148 - C138 * C163 + C123 * C172 +
               C140 * C164 - C141 * C149 - C140 * C165 + C124 * C173) *
                  C152167 * C152155 * C151985 * C151967 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
                C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
                C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
                C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                   C152167 * C152155 * C151985 * C152373 -
               (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
                C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
                C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
                C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                   C152167 * C152155 * C151985 * C152357 +
               (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
                C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
                C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
                C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                   C152167 * C152155 * C151985 * C152326) *
                  C323 +
              ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
                C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
                C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
                C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                   C152167 * C152155 * C151985 * C152357 -
               (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
                C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
                C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
                C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                   C152167 * C152155 * C151985 * C152373 -
               (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
                C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
                C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
                C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                   C152167 * C152155 * C151985 * C152326) *
                  C324 +
              ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
                C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
                C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
                C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                   C152167 * C152155 * C151985 * C152373 -
               (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
                C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
                C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
                C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                   C152167 * C152155 * C151985 * C152357 +
               (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
                C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
                C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
                C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
                   C152167 * C152155 * C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152374 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152359 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152329) *
              C151967 * C323 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152359 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C152374 -
           (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
            C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
            C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
            C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
               C152167 * C152155 * C152329) *
              C151967 * C324 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C152374 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C152359 +
           (C134 * C547 - C135 * C529 - C134 * C548 + C121 * C565 +
            C136 * C549 - C137 * C530 - C136 * C550 + C122 * C566 +
            C138 * C553 - C139 * C532 - C138 * C554 + C123 * C568 +
            C140 * C557 - C141 * C534 - C140 * C558 + C124 * C570) *
               C152167 * C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152326) *
              C152370 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C1212 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152326) *
              C152353 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C151985 * C1299 -
          (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 + C138 * C340 -
           C139 * C327 - C138 * C341 + C123 * C363 + C136 * C342 - C137 * C328 -
           C136 * C343 + C122 * C364 + C134 * C344 - C135 * C329 - C134 * C345 +
           C121 * C365) *
              C152167 * C152155 * C151985 * C1300 +
          (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 + C136 * C348 -
           C137 * C331 - C136 * C349 + C122 * C367 + C138 * C350 - C139 * C332 -
           C138 * C351 + C123 * C368 + C140 * C352 - C141 * C333 - C140 * C353 +
           C124 * C369) *
              C152167 * C152155 * C151985 * C1301 -
          (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
           C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
           C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
           C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
              C152167 * C152155 * C151985 * C1302 +
          (C134 * C1321 - C135 * C1309 - C134 * C1322 + C121 * C1333 +
           C136 * C1323 - C137 * C1310 - C136 * C1324 + C122 * C1334 +
           C138 * C1325 - C139 * C1311 - C138 * C1326 + C123 * C1335 +
           C140 * C1327 - C141 * C1312 - C140 * C1328 + C124 * C1336) *
              C152167 * C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152374 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152359 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152329) *
              C1211 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152359 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C152374 -
           (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
            C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
            C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
            C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
               C152167 * C152155 * C152329) *
              C1212 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C152374 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C152359 +
           (C134 * C1511 - C135 * C1491 - C134 * C1512 + C121 * C1527 +
            C136 * C1513 - C137 * C1492 - C136 * C1514 + C122 * C1528 +
            C138 * C1515 - C139 * C1493 - C138 * C1516 + C123 * C1529 +
            C140 * C1517 - C141 * C1494 - C140 * C1518 + C124 * C1530) *
               C152167 * C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C2161 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C2162 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152329) *
              C151967 * C152370 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C2162 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C2161 -
           (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
            C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
            C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
            C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
               C152167 * C152155 * C152329) *
              C151967 * C152353 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C2161 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C2162 +
           (C134 * C547 - C135 * C529 - C134 * C548 + C121 * C565 +
            C136 * C549 - C137 * C530 - C136 * C550 + C122 * C566 +
            C138 * C553 - C139 * C532 - C138 * C554 + C123 * C568 +
            C140 * C557 - C141 * C534 - C140 * C558 + C124 * C570) *
               C152167 * C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C2161 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C2162 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152329) *
              C152373 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C2162 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C2161 -
           (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
            C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
            C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
            C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
               C152167 * C152155 * C152329) *
              C152357 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C2161 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C2162 +
           (C134 * C1511 - C135 * C1491 - C134 * C1512 + C121 * C1527 +
            C136 * C1513 - C137 * C1492 - C136 * C1514 + C122 * C1528 +
            C138 * C1515 - C139 * C1493 - C138 * C1516 + C123 * C1529 +
            C140 * C1517 - C141 * C1494 - C140 * C1518 + C124 * C1530) *
               C152167 * C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C2392 -
          (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 + C138 * C537 -
           C139 * C524 - C138 * C538 + C123 * C560 + C136 * C539 - C137 * C525 -
           C136 * C540 + C122 * C561 + C134 * C541 - C135 * C526 - C134 * C542 +
           C121 * C562) *
              C152167 * C152155 * C2393 +
          (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 + C136 * C545 -
           C137 * C528 - C136 * C546 + C122 * C564 + C138 * C547 - C139 * C529 -
           C138 * C548 + C123 * C565 + C140 * C549 - C141 * C530 - C140 * C550 +
           C124 * C566) *
              C152167 * C152155 * C2394 -
          (C140 * C2405 - C141 * C2397 - C140 * C2406 + C124 * C2421 +
           C138 * C2407 - C139 * C2398 - C138 * C2408 + C123 * C2422 +
           C136 * C2409 - C137 * C2399 - C136 * C2410 + C122 * C2423 +
           C134 * C2411 - C135 * C2400 - C134 * C2412 + C121 * C2424) *
              C152167 * C152155 * C2395 +
          (C134 * C2413 - C135 * C2401 - C134 * C2414 + C121 * C2425 +
           C136 * C2415 - C137 * C2402 - C136 * C2416 + C122 * C2426 +
           C138 * C2417 - C139 * C2403 - C138 * C2418 + C123 * C2427 +
           C140 * C2419 - C141 * C2404 - C140 * C2420 + C124 * C2428) *
              C152167 * C152155 * C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6029 * C344 - C6030 * C329 - C6029 * C345 + C6024 * C365 +
            C6031 * C342 - C6032 * C328 - C6031 * C343 + C151913 * C364) *
               C152167 * C6027 +
           (C6029 * C346 - C6030 * C330 - C6029 * C347 + C6024 * C366 +
            C6031 * C348 - C6032 * C331 - C6031 * C349 + C151913 * C367) *
               C152167 * C6028) *
              C151985 * C151967 * C129 -
          ((C6031 * C350 - C6032 * C332 - C6031 * C351 + C151913 * C368 +
            C6029 * C348 - C6030 * C331 - C6029 * C349 + C6024 * C367) *
               C152167 * C6028 +
           (C6031 * C340 - C6032 * C327 - C6031 * C341 + C151913 * C363 +
            C6029 * C342 - C6030 * C328 - C6029 * C343 + C6024 * C364) *
               C152167 * C6027 +
           (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
            C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
               C152167 * C6026) *
              C151985 * C151967 * C130 +
          ((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
            C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
               C152167 * C6026 +
           (C6029 * C340 - C6030 * C327 - C6029 * C341 + C6024 * C363 +
            C6031 * C338 - C6032 * C326 - C6031 * C339 + C151913 * C362) *
               C152167 * C6027 +
           (C6029 * C350 - C6030 * C332 - C6029 * C351 + C6024 * C368 +
            C6031 * C352 - C6032 * C333 - C6031 * C353 + C151913 * C369) *
               C152167 * C6028) *
              C151985 * C151967 * C131 -
          ((C6031 * C356 - C6032 * C335 - C6031 * C357 + C151913 * C371 +
            C6029 * C352 - C6030 * C333 - C6029 * C353 + C6024 * C369) *
               C152167 * C6028 +
           (C6031 * C354 - C6032 * C334 - C6031 * C355 + C151913 * C370 +
            C6029 * C338 - C6030 * C326 - C6029 * C339 + C6024 * C362) *
               C152167 * C6027 +
           (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
            C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
               C152167 * C6026) *
              C151985 * C151967 * C132 +
          ((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
            C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
               C152167 * C6026 +
           (C6029 * C354 - C6030 * C334 - C6029 * C355 + C6024 * C370 +
            C6031 * C358 - C6032 * C336 - C6031 * C359 + C151913 * C372) *
               C152167 * C6027 +
           (C6029 * C356 - C6030 * C335 - C6029 * C357 + C6024 * C371 +
            C6031 * C360 - C6032 * C337 - C6031 * C361 + C151913 * C373) *
               C152167 * C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152373 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152357 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C323 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C152357 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152373 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152373 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152357 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152374 -
           ((C6031 * C1507 - C6032 * C1489 - C6031 * C1508 + C151913 * C1525 +
             C6029 * C1509 - C6030 * C1490 - C6029 * C1510 + C6024 * C1526) *
                C152167 * C6028 +
            (C6031 * C1049 - C6032 * C1042 - C6031 * C1050 + C151913 * C1060 +
             C6029 * C1047 - C6030 * C1041 - C6029 * C1048 + C6024 * C1059) *
                C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152359 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C6029 * C1501 - C6030 * C1486 - C6029 * C1502 + C6024 * C1522 +
             C6031 * C1499 - C6032 * C1485 - C6031 * C1500 + C151913 * C1521) *
                C152167 * C6027 +
            (C6029 * C1511 - C6030 * C1491 - C6029 * C1512 + C6024 * C1527 +
             C6031 * C1513 - C6032 * C1492 - C6031 * C1514 + C151913 * C1528) *
                C152167 * C6028) *
               C152329) *
              C151967 * C323 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C6029 * C1049 - C6030 * C1042 - C6029 * C1050 + C6024 * C1060 +
             C6031 * C1051 - C6032 * C1043 - C6031 * C1052 + C151913 * C1061) *
                C152167 * C6027 +
            (C6029 * C1507 - C6030 * C1489 - C6029 * C1508 + C6024 * C1525 +
             C6031 * C1505 - C6032 * C1488 - C6031 * C1506 + C151913 * C1524) *
                C152167 * C6028) *
               C152359 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C152374 -
           ((C6031 * C1515 - C6032 * C1493 - C6031 * C1516 + C151913 * C1529 +
             C6029 * C1513 - C6030 * C1492 - C6029 * C1514 + C6024 * C1528) *
                C152167 * C6028 +
            (C6031 * C1497 - C6032 * C1484 - C6031 * C1498 + C151913 * C1520 +
             C6029 * C1499 - C6030 * C1485 - C6029 * C1500 + C6024 * C1521) *
                C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C152329) *
              C151967 * C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C152374 -
           ((C6031 * C1503 - C6032 * C1487 - C6031 * C1504 + C151913 * C1523 +
             C6029 * C1505 - C6030 * C1488 - C6029 * C1506 + C6024 * C1524) *
                C152167 * C6028 +
            (C6031 * C1053 - C6032 * C1044 - C6031 * C1054 + C151913 * C1062 +
             C6029 * C1051 - C6030 * C1043 - C6029 * C1052 + C6024 * C1061) *
                C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152359 +
           ((C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C152167 * C6026 +
            (C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520 +
             C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519) *
                C152167 * C6027 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C152167 * C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C1211 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C1212 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C1212 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C1211 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C1211 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C1212 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
              C151985 * C1299 -
          (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
           (C6361 + C6360) * C152167 * C6026) *
              C151985 * C1300 +
          (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
              C151985 * C1301 -
          ((C7776 + C7777) * C152167 * C6028 +
           (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
              C151985 * C1302 +
          (C7779 * C6026 + (C7777 + C7776) * C152167 * C6027 +
           (C6029 * C7739 - C6030 * C7733 - C6029 * C7740 + C6024 * C7745 +
            C6031 * C7741 - C6032 * C7734 - C6031 * C7742 + C151913 * C7746) *
               C152167 * C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152374 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152359 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152329) *
              C1211 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 +
            (C8076 + C8077) * C152167 * C6028) *
               C152359 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C152374 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C152329) *
              C1212 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C152374 -
           ((C6031 * C8007 - C6032 * C7999 - C6031 * C8008 + C151913 * C8017 +
             C6029 * C8009 - C6030 * C8000 - C6029 * C8010 + C6024 * C8018) *
                C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152359 +
           (C8081 * C6026 + (C8079 + C8078) * C152167 * C6027 +
            (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
             C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                C152167 * C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C2161 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C2162 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152329) *
              C151967 * C152370 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C2162 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C2161 -
           ((C6031 * C1515 - C6032 * C1493 - C6031 * C1516 + C151913 * C1529 +
             C6029 * C1513 - C6030 * C1492 - C6029 * C1514 + C6024 * C1528) *
                C152167 * C6028 +
            (C6031 * C1497 - C6032 * C1484 - C6031 * C1498 + C151913 * C1520 +
             C6029 * C1499 - C6030 * C1485 - C6029 * C1500 + C6024 * C1521) *
                C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C152329) *
              C151967 * C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C2161 -
           ((C7388 + C7389) * C152167 * C6028 +
            (C7390 + C7391) * C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C2162 +
           ((C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C152167 * C6026 +
            (C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520 +
             C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519) *
                C152167 * C6027 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C152167 * C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C2161 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C2162 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152329) *
              C152373 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C2162 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C2161 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C152329) *
              C152357 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C2161 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C2162 +
           (C8081 * C6026 + (C8079 + C8078) * C152167 * C6027 +
            (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
             C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                C152167 * C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
              C2392 -
          (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
           (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
            C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
               C152167 * C6026) *
              C2393 +
          ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
            C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
               C152167 * C6026 +
           (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
              C2394 -
          ((C6031 * C9387 - C6032 * C9381 - C6031 * C9388 + C151913 * C9399 +
            C6029 * C9389 - C6030 * C9382 - C6029 * C9390 + C6024 * C9400) *
               C152167 * C6028 +
           (C6031 * C2901 - C6032 * C2896 - C6031 * C2902 + C151913 * C2908 +
            C6029 * C2899 - C6030 * C2895 - C6029 * C2900 + C6024 * C2907) *
               C152167 * C6027 +
           (C6031 * C2409 - C6032 * C2399 - C6031 * C2410 + C151913 * C2423 +
            C6029 * C2411 - C6030 * C2400 - C6029 * C2412 + C6024 * C2424) *
               C152167 * C6026) *
              C2395 +
          ((C6029 * C2413 - C6030 * C2401 - C6029 * C2414 + C6024 * C2425 +
            C6031 * C2415 - C6032 * C2402 - C6031 * C2416 + C151913 * C2426) *
               C152167 * C6026 +
           (C6029 * C9391 - C6030 * C9383 - C6029 * C9392 + C6024 * C9401 +
            C6031 * C9393 - C6032 * C9384 - C6031 * C9394 + C151913 * C9402) *
               C152167 * C6027 +
           (C6029 * C9395 - C6030 * C9385 - C6029 * C9396 + C6024 * C9403 +
            C6031 * C9397 - C6032 * C9386 - C6031 * C9398 + C151913 * C9404) *
               C152167 * C6028) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152285 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C1211 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152285) *
               C1212 +
           ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
             C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
             C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
             C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                C152167 * C152155 * C152285 -
            (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
             C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
             C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
             C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                C152167 * C152155 * C152072) *
               C152326) *
              C152270 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152285) *
               C1211 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152285 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C1212 +
           ((C134 * C1507 - C135 * C1489 - C134 * C1508 + C121 * C1525 +
             C136 * C1505 - C137 * C1488 - C136 * C1506 + C122 * C1524 +
             C138 * C1503 - C139 * C1487 - C138 * C1504 + C123 * C1523 +
             C140 * C1866 - C141 * C1865 - C140 * C1867 + C124 * C1868) *
                C152167 * C152155 * C152072 -
            (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
             C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
             C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
             C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                C152167 * C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152285 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152072) *
              C151967 * C703 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152072 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C152285) *
              C151967 * C704 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C152285 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C152072) *
              C151967 * C705 +
          ((C134 * C535 - C135 * C523 - C134 * C536 + C121 * C559 +
            C136 * C551 - C137 * C531 - C136 * C552 + C122 * C567 +
            C138 * C555 - C139 * C533 - C138 * C556 + C123 * C569 +
            C140 * C844 - C141 * C843 - C140 * C845 + C124 * C846) *
               C152167 * C152155 * C152072 -
           (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
            C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
            C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
            C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
               C152167 * C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C2757 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C2758 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C2759 -
           (C140 * C2405 - C141 * C2397 - C140 * C2406 + C124 * C2421 +
            C138 * C2407 - C139 * C2398 - C138 * C2408 + C123 * C2422 +
            C136 * C2409 - C137 * C2399 - C136 * C2410 + C122 * C2423 +
            C134 * C2411 - C135 * C2400 - C134 * C2412 + C121 * C2424) *
               C152167 * C152155 * C152342) *
              C151967 * C152270 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C2758 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C2757 -
           (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
            C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
            C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
            C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
               C152167 * C152155 * C2759 +
           (C134 * C2409 - C135 * C2399 - C134 * C2410 + C121 * C2423 +
            C136 * C2407 - C137 * C2398 - C136 * C2408 + C122 * C2422 +
            C138 * C2405 - C139 * C2397 - C138 * C2406 + C123 * C2421 +
            C140 * C2762 - C141 * C2761 - C140 * C2763 + C124 * C2764) *
               C152167 * C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152285 -
           ((C6031 * C1507 - C6032 * C1489 - C6031 * C1508 + C151913 * C1525 +
             C6029 * C1509 - C6030 * C1490 - C6029 * C1510 + C6024 * C1526) *
                C152167 * C6028 +
            (C6031 * C1049 - C6032 * C1042 - C6031 * C1050 + C151913 * C1060 +
             C6029 * C1047 - C6030 * C1041 - C6029 * C1048 + C6024 * C1059) *
                C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C151967 * C703 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C6029 * C1049 - C6030 * C1042 - C6029 * C1050 + C6024 * C1060 +
             C6031 * C1051 - C6032 * C1043 - C6031 * C1052 + C151913 * C1061) *
                C152167 * C6027 +
            (C6029 * C1507 - C6030 * C1489 - C6029 * C1508 + C6024 * C1525 +
             C6031 * C1505 - C6032 * C1488 - C6031 * C1506 + C151913 * C1524) *
                C152167 * C6028) *
               C152072 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C152285) *
              C151967 * C704 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C152285 -
           ((C6031 * C1503 - C6032 * C1487 - C6031 * C1504 + C151913 * C1523 +
             C6029 * C1505 - C6030 * C1488 - C6029 * C1506 + C6024 * C1524) *
                C152167 * C6028 +
            (C6031 * C1053 - C6032 * C1044 - C6031 * C1054 + C151913 * C1062 +
             C6029 * C1051 - C6030 * C1043 - C6029 * C1052 + C6024 * C1061) *
                C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152072) *
              C151967 * C705 +
          (((C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559 +
             C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567) *
                C152167 * C6026 +
            (C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062 +
             C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063) *
                C152167 * C6027 +
            (C6029 * C1503 - C6030 * C1487 - C6029 * C1504 + C6024 * C1523 +
             C6031 * C1866 - C6032 * C1865 - C6031 * C1867 + C151913 * C1868) *
                C152167 * C6028) *
               C152072 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152285 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C1211 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 +
             (C8076 + C8077) * C152167 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152285) *
               C1212 +
           ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
             C7779 * C6028) *
                C152285 -
            ((C6031 * C8007 - C6032 * C7999 - C6031 * C8008 + C151913 * C8017 +
              C6029 * C8009 - C6030 * C8000 - C6029 * C8010 + C6024 * C8018) *
                 C152167 * C6028 +
             (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
                C152072) *
               C152326) *
              C152270 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152285) *
               C1211 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152285 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C1212 +
           ((C8599 * C6026 + (C8605 + C8604) * C152167 * C6027 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152167 * C6028) *
                C152072 -
            ((C8294 + C8295) * C152167 * C6028 +
             (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C2757 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C2758 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C2759 -
           ((C6031 * C9387 - C6032 * C9381 - C6031 * C9388 + C151913 * C9399 +
             C6029 * C9389 - C6030 * C9382 - C6029 * C9390 + C6024 * C9400) *
                C152167 * C6028 +
            (C6031 * C2901 - C6032 * C2896 - C6031 * C2902 + C151913 * C2908 +
             C6029 * C2899 - C6030 * C2895 - C6029 * C2900 + C6024 * C2907) *
                C152167 * C6027 +
            (C6031 * C2409 - C6032 * C2399 - C6031 * C2410 + C151913 * C2423 +
             C6029 * C2411 - C6030 * C2400 - C6029 * C2412 + C6024 * C2424) *
                C152167 * C6026) *
               C152342) *
              C151967 * C152270 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C2758 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C2757 -
           ((C9724 + C9725) * C152167 * C6028 +
            (C9726 + C9727) * C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C2759 +
           ((C6029 * C2409 - C6030 * C2399 - C6029 * C2410 + C6024 * C2423 +
             C6031 * C2407 - C6032 * C2398 - C6031 * C2408 + C151913 * C2422) *
                C152167 * C6026 +
            (C6029 * C2901 - C6030 * C2896 - C6029 * C2902 + C6024 * C2908 +
             C6031 * C2903 - C6032 * C2897 - C6031 * C2904 + C151913 * C2909) *
                C152167 * C6027 +
            (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
             C6031 * C9922 - C6032 * C9921 - C6031 * C9923 + C151913 * C9924) *
                C152167 * C6028) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152357 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152326) *
              C323 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152357 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152326) *
              C324 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152357 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C151985 * C151967 * C129 -
          (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 + C138 * C156 -
           C139 * C145 - C138 * C157 + C123 * C169 + C136 * C154 - C137 * C144 -
           C136 * C155 + C122 * C168 + C134 * C152 - C135 * C143 - C134 * C153 +
           C121 * C167) *
              C152167 * C152155 * C151985 * C151967 * C130 +
          (C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 + C136 * C156 -
           C137 * C145 - C136 * C157 + C122 * C169 + C138 * C158 - C139 * C146 -
           C138 * C159 + C123 * C170 + C140 * C160 - C141 * C147 - C140 * C161 +
           C124 * C171) *
              C152167 * C152155 * C151985 * C151967 * C131 -
          (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 + C138 * C160 -
           C139 * C147 - C138 * C161 + C123 * C171 + C136 * C158 - C137 * C146 -
           C136 * C159 + C122 * C170 + C134 * C156 - C135 * C145 - C134 * C157 +
           C121 * C169) *
              C152167 * C152155 * C151985 * C151967 * C132 +
          (C134 * C158 - C135 * C146 - C134 * C159 + C121 * C170 + C136 * C160 -
           C137 * C147 - C136 * C161 + C122 * C171 + C138 * C162 - C139 * C148 -
           C138 * C163 + C123 * C172 + C140 * C164 - C141 * C149 - C140 * C165 +
           C124 * C173) *
              C152167 * C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152326) *
              C152370 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C1212 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152326) *
              C152353 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C151985 * C1299 -
          (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 + C138 * C340 -
           C139 * C327 - C138 * C341 + C123 * C363 + C136 * C342 - C137 * C328 -
           C136 * C343 + C122 * C364 + C134 * C344 - C135 * C329 - C134 * C345 +
           C121 * C365) *
              C152167 * C152155 * C151985 * C1300 +
          (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 + C136 * C348 -
           C137 * C331 - C136 * C349 + C122 * C367 + C138 * C350 - C139 * C332 -
           C138 * C351 + C123 * C368 + C140 * C352 - C141 * C333 - C140 * C353 +
           C124 * C369) *
              C152167 * C152155 * C151985 * C1301 -
          (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
           C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
           C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
           C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
              C152167 * C152155 * C151985 * C1302 +
          (C134 * C1321 - C135 * C1309 - C134 * C1322 + C121 * C1333 +
           C136 * C1323 - C137 * C1310 - C136 * C1324 + C122 * C1334 +
           C138 * C1325 - C139 * C1311 - C138 * C1326 + C123 * C1335 +
           C140 * C1327 - C141 * C1312 - C140 * C1328 + C124 * C1336) *
              C152167 * C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C2161 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C2162 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152329) *
              C151967 * C152370 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C2162 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C2161 -
           (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
            C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
            C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
            C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
               C152167 * C152155 * C152329) *
              C151967 * C152353 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C2161 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C2162 +
           (C134 * C547 - C135 * C529 - C134 * C548 + C121 * C565 +
            C136 * C549 - C137 * C530 - C136 * C550 + C122 * C566 +
            C138 * C553 - C139 * C532 - C138 * C554 + C123 * C568 +
            C140 * C557 - C141 * C534 - C140 * C558 + C124 * C570) *
               C152167 * C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C2161 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C2162 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152329) *
              C152373 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C2162 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C2161 -
           (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
            C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
            C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
            C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
               C152167 * C152155 * C152329) *
              C152357 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C2161 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C2162 +
           (C134 * C1511 - C135 * C1491 - C134 * C1512 + C121 * C1527 +
            C136 * C1513 - C137 * C1492 - C136 * C1514 + C122 * C1528 +
            C138 * C1515 - C139 * C1493 - C138 * C1516 + C123 * C1529 +
            C140 * C1517 - C141 * C1494 - C140 * C1518 + C124 * C1530) *
               C152167 * C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6029 * C344 - C6030 * C329 - C6029 * C345 + C6024 * C365 +
            C6031 * C342 - C6032 * C328 - C6031 * C343 + C151913 * C364) *
               C152167 * C6027 +
           (C6029 * C346 - C6030 * C330 - C6029 * C347 + C6024 * C366 +
            C6031 * C348 - C6032 * C331 - C6031 * C349 + C151913 * C367) *
               C152167 * C6028) *
              C151985 * C151967 * C129 -
          ((C6031 * C350 - C6032 * C332 - C6031 * C351 + C151913 * C368 +
            C6029 * C348 - C6030 * C331 - C6029 * C349 + C6024 * C367) *
               C152167 * C6028 +
           (C6031 * C340 - C6032 * C327 - C6031 * C341 + C151913 * C363 +
            C6029 * C342 - C6030 * C328 - C6029 * C343 + C6024 * C364) *
               C152167 * C6027 +
           (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
            C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
               C152167 * C6026) *
              C151985 * C151967 * C130 +
          ((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
            C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
               C152167 * C6026 +
           (C6029 * C340 - C6030 * C327 - C6029 * C341 + C6024 * C363 +
            C6031 * C338 - C6032 * C326 - C6031 * C339 + C151913 * C362) *
               C152167 * C6027 +
           (C6029 * C350 - C6030 * C332 - C6029 * C351 + C6024 * C368 +
            C6031 * C352 - C6032 * C333 - C6031 * C353 + C151913 * C369) *
               C152167 * C6028) *
              C151985 * C151967 * C131 -
          ((C6031 * C356 - C6032 * C335 - C6031 * C357 + C151913 * C371 +
            C6029 * C352 - C6030 * C333 - C6029 * C353 + C6024 * C369) *
               C152167 * C6028 +
           (C6031 * C354 - C6032 * C334 - C6031 * C355 + C151913 * C370 +
            C6029 * C338 - C6030 * C326 - C6029 * C339 + C6024 * C362) *
               C152167 * C6027 +
           (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
            C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
               C152167 * C6026) *
              C151985 * C151967 * C132 +
          ((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
            C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
               C152167 * C6026 +
           (C6029 * C354 - C6030 * C334 - C6029 * C355 + C6024 * C370 +
            C6031 * C358 - C6032 * C336 - C6031 * C359 + C151913 * C372) *
               C152167 * C6027 +
           (C6029 * C356 - C6030 * C335 - C6029 * C357 + C6024 * C371 +
            C6031 * C360 - C6032 * C337 - C6031 * C361 + C151913 * C373) *
               C152167 * C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152373 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152357 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C323 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C152357 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152373 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152373 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152357 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C1211 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C1212 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C1212 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C1211 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C1211 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C1212 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
              C151985 * C1299 -
          (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
           (C6361 + C6360) * C152167 * C6026) *
              C151985 * C1300 +
          (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
              C151985 * C1301 -
          ((C7776 + C7777) * C152167 * C6028 +
           (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
              C151985 * C1302 +
          (C7779 * C6026 + (C7777 + C7776) * C152167 * C6027 +
           (C6029 * C7739 - C6030 * C7733 - C6029 * C7740 + C6024 * C7745 +
            C6031 * C7741 - C6032 * C7734 - C6031 * C7742 + C151913 * C7746) *
               C152167 * C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C2161 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C2162 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152329) *
              C151967 * C152370 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C2162 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C2161 -
           ((C6031 * C1515 - C6032 * C1493 - C6031 * C1516 + C151913 * C1529 +
             C6029 * C1513 - C6030 * C1492 - C6029 * C1514 + C6024 * C1528) *
                C152167 * C6028 +
            (C6031 * C1497 - C6032 * C1484 - C6031 * C1498 + C151913 * C1520 +
             C6029 * C1499 - C6030 * C1485 - C6029 * C1500 + C6024 * C1521) *
                C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C152329) *
              C151967 * C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C2161 -
           ((C7388 + C7389) * C152167 * C6028 +
            (C7390 + C7391) * C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C2162 +
           ((C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C152167 * C6026 +
            (C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520 +
             C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519) *
                C152167 * C6027 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C152167 * C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C2161 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C2162 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152329) *
              C152373 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C2162 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C2161 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C152329) *
              C152357 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C2161 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C2162 +
           (C8081 * C6026 + (C8079 + C8078) * C152167 * C6027 +
            (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
             C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                C152167 * C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C4047 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C152284 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C4047) *
               C152030) *
              C151944 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C4047) *
               C152284 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C4047 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152030) *
              C151953 +
          (((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
             C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
             C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
             C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                C152167 * C152155 * C4047 -
            (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
             C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
             C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
             C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                C152167 * C152155 * C152072) *
               C152284 +
           ((C134 * C1051 - C135 * C1043 - C134 * C1052 + C121 * C1061 +
             C136 * C1053 - C137 * C1044 - C136 * C1054 + C122 * C1062 +
             C138 * C1055 - C139 * C1045 - C138 * C1056 + C123 * C1063 +
             C140 * C1057 - C141 * C1046 - C140 * C1058 + C124 * C1064) *
                C152167 * C152155 * C152072 -
            (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
             C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
             C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
             C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                C152167 * C152155 * C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C4047 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152284 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C4047) *
               C152030) *
              C151944 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C4047) *
               C152284 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C4047 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152030) *
              C151953 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152167 * C6026 +
             (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
                C4047 -
            ((C7388 + C7389) * C152167 * C6028 +
             (C7390 + C7391) * C152167 * C6027 +
             (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
              C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                 C152167 * C6026) *
                C152072) *
               C152284 +
           (((C7391 + C7390) * C152167 * C6026 +
             (C7389 + C7388) * C152167 * C6027 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152167 * C6028) *
                C152072 -
            ((C6376 + C6377) * C152167 * C6028 +
             (C6375 + C6374) * C152167 * C6027 +
             (C6373 + C6372) * C152167 * C6026) *
                C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152068 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152075 +
            (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
             C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
             C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
             C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
                C152167 * C152155 * C4719) *
               C152284 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152075 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152068 -
            (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
             C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
             C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
             C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
                C152167 * C152155 * C4719) *
               C152030) *
              C3181 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152075 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152068 -
            (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
             C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
             C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
             C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
                C152167 * C152155 * C4719) *
               C152284 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152068 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152075 +
            (C134 * C1499 - C135 * C1485 - C134 * C1500 + C121 * C1521 +
             C136 * C1497 - C137 * C1484 - C136 * C1498 + C122 * C1520 +
             C138 * C1495 - C139 * C1483 - C138 * C1496 + C123 * C1519 +
             C140 * C2624 - C141 * C2623 - C140 * C2625 + C124 * C2626) *
                C152167 * C152155 * C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152068 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152075 +
            ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
              C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                 C152167 * C6026 +
             (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
                C4719) *
               C152284 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152075 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152068 -
            ((C8078 + C8079) * C152167 * C6028 +
             (C8075 + C8074) * C152167 * C6027 +
             (C8073 + C8072) * C152167 * C6026) *
                C4719) *
               C152030) *
              C3181 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152075 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152068 -
            ((C9724 + C9725) * C152167 * C6028 +
             (C9726 + C9727) * C152167 * C6027 +
             (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
              C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                 C152167 * C6026) *
                C4719) *
               C152284 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152068 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152075 +
            ((C9727 + C9726) * C152167 * C6026 +
             (C9725 + C9724) * C152167 * C6027 +
             (C6029 * C8003 - C6030 * C7997 - C6029 * C8004 + C6024 * C8015 +
              C6031 * C9696 - C6032 * C9695 - C6031 * C9697 + C151913 * C9698) *
                 C152167 * C6028) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C4047 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C152373 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C4047) *
               C152357 +
           ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
             C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
             C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
             C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                C152167 * C152155 * C4047 -
            (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
             C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
             C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
             C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                C152167 * C152155 * C152072) *
               C152326) *
              C3181 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C4047) *
               C152373 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C4047 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152357 +
           ((C134 * C1507 - C135 * C1489 - C134 * C1508 + C121 * C1525 +
             C136 * C1505 - C137 * C1488 - C136 * C1506 + C122 * C1524 +
             C138 * C1503 - C139 * C1487 - C138 * C1504 + C123 * C1523 +
             C140 * C1866 - C141 * C1865 - C140 * C1867 + C124 * C1868) *
                C152167 * C152155 * C152072 -
            (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
             C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
             C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
             C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                C152167 * C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C4047 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152072) *
              C151967 * C152379 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152072 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C4047) *
              C151967 * C152372 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C4047 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C152072) *
              C151967 * C152355 +
          ((C134 * C535 - C135 * C523 - C134 * C536 + C121 * C559 +
            C136 * C551 - C137 * C531 - C136 * C552 + C122 * C567 +
            C138 * C555 - C139 * C533 - C138 * C556 + C123 * C569 +
            C140 * C844 - C141 * C843 - C140 * C845 + C124 * C846) *
               C152167 * C152155 * C152072 -
           (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
            C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
            C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
            C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
               C152167 * C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152381 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152378 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152365 -
           (C140 * C2405 - C141 * C2397 - C140 * C2406 + C124 * C2421 +
            C138 * C2407 - C139 * C2398 - C138 * C2408 + C123 * C2422 +
            C136 * C2409 - C137 * C2399 - C136 * C2410 + C122 * C2423 +
            C134 * C2411 - C135 * C2400 - C134 * C2412 + C121 * C2424) *
               C152167 * C152155 * C152342) *
              C151967 * C3181 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152378 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C152381 -
           (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
            C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
            C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
            C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
               C152167 * C152155 * C152365 +
           (C134 * C2409 - C135 * C2399 - C134 * C2410 + C121 * C2423 +
            C136 * C2407 - C137 * C2398 - C136 * C2408 + C122 * C2422 +
            C138 * C2405 - C139 * C2397 - C138 * C2406 + C123 * C2421 +
            C140 * C2762 - C141 * C2761 - C140 * C2763 + C124 * C2764) *
               C152167 * C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C4047 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C151967 * C152379 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C152072 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C4047) *
              C151967 * C152372 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C4047 -
           ((C7388 + C7389) * C152167 * C6028 +
            (C7390 + C7391) * C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152072) *
              C151967 * C152355 +
          (((C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559 +
             C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567) *
                C152167 * C6026 +
            (C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062 +
             C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063) *
                C152167 * C6027 +
            (C6029 * C1503 - C6030 * C1487 - C6029 * C1504 + C6024 * C1523 +
             C6031 * C1866 - C6032 * C1865 - C6031 * C1867 + C151913 * C1868) *
                C152167 * C6028) *
               C152072 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C4047 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152373 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C4047) *
               C152357 +
           ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
             C7779 * C6028) *
                C4047 -
            ((C8822 + C8823) * C152167 * C6028 +
             (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
                C152072) *
               C152326) *
              C3181 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C4047) *
               C152373 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C4047 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152357 +
           ((C8599 * C6026 + (C8605 + C8604) * C152167 * C6027 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152167 * C6028) *
                C152072 -
            ((C8294 + C8295) * C152167 * C6028 +
             (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152381 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152378 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152365 -
           ((C10152 + C10153) * C152167 * C6028 +
            (C10154 + C10155) * C152167 * C6027 +
            (C6031 * C2409 - C6032 * C2399 - C6031 * C2410 + C151913 * C2423 +
             C6029 * C2411 - C6030 * C2400 - C6029 * C2412 + C6024 * C2424) *
                C152167 * C6026) *
               C152342) *
              C151967 * C3181 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C152378 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C152381 -
           ((C9724 + C9725) * C152167 * C6028 +
            (C9726 + C9727) * C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C152365 +
           ((C6029 * C2409 - C6030 * C2399 - C6029 * C2410 + C6024 * C2423 +
             C6031 * C2407 - C6032 * C2398 - C6031 * C2408 + C151913 * C2422) *
                C152167 * C6026 +
            (C6029 * C2901 - C6030 * C2896 - C6029 * C2902 + C6024 * C2908 +
             C6031 * C2903 - C6032 * C2897 - C6031 * C2904 + C151913 * C2909) *
                C152167 * C6027 +
            (C6029 * C9387 - C6030 * C9381 - C6029 * C9388 + C6024 * C9399 +
             C6031 * C9922 - C6032 * C9921 - C6031 * C9923 + C151913 * C9924) *
                C152167 * C6028) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152068 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152075 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C4719) *
              C151967 * C151944 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152075 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C152068 -
           (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
            C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
            C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
            C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
               C152167 * C152155 * C4719) *
              C151967 * C151953 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C152068 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C152075 +
           (C134 * C547 - C135 * C529 - C134 * C548 + C121 * C565 +
            C136 * C549 - C137 * C530 - C136 * C550 + C122 * C566 +
            C138 * C553 - C139 * C532 - C138 * C554 + C123 * C568 +
            C140 * C557 - C141 * C534 - C140 * C558 + C124 * C570) *
               C152167 * C152155 * C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152068 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152075 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C4719) *
              C151967 * C151944 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C152075 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C152068 -
           ((C9724 + C9725) * C152167 * C6028 +
            (C9726 + C9727) * C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C4719) *
              C151967 * C151953 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C152068 -
           ((C7388 + C7389) * C152167 * C6028 +
            (C7390 + C7391) * C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152075 +
           ((C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C152167 * C6026 +
            (C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520 +
             C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519) *
                C152167 * C6027 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C152167 * C6028) *
               C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C4047 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152072) *
              C151967 * C152379 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152072 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C4047) *
              C151967 * C152372 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C4047 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C152072) *
              C151967 * C152355 +
          ((C134 * C535 - C135 * C523 - C134 * C536 + C121 * C559 +
            C136 * C551 - C137 * C531 - C136 * C552 + C122 * C567 +
            C138 * C555 - C139 * C533 - C138 * C556 + C123 * C569 +
            C140 * C844 - C141 * C843 - C140 * C845 + C124 * C846) *
               C152167 * C152155 * C152072 -
           (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
            C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
            C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
            C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
               C152167 * C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C4047 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C152373 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C4047) *
               C152357 +
           ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
             C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
             C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
             C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                C152167 * C152155 * C4047 -
            (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
             C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
             C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
             C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                C152167 * C152155 * C152072) *
               C152326) *
              C3181 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C4047) *
               C152373 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C4047 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152357 +
           ((C134 * C1507 - C135 * C1489 - C134 * C1508 + C121 * C1525 +
             C136 * C1505 - C137 * C1488 - C136 * C1506 + C122 * C1524 +
             C138 * C1503 - C139 * C1487 - C138 * C1504 + C123 * C1523 +
             C140 * C1866 - C141 * C1865 - C140 * C1867 + C124 * C1868) *
                C152167 * C152155 * C152072 -
            (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
             C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
             C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
             C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                C152167 * C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C4047 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C151967 * C152379 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
               C152072 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C4047) *
              C151967 * C152372 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C4047 -
           ((C7388 + C7389) * C152167 * C6028 +
            (C7390 + C7391) * C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152072) *
              C151967 * C152355 +
          (((C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559 +
             C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567) *
                C152167 * C6026 +
            (C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062 +
             C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063) *
                C152167 * C6027 +
            (C6029 * C1503 - C6030 * C1487 - C6029 * C1504 + C6024 * C1523 +
             C6031 * C1866 - C6032 * C1865 - C6031 * C1867 + C151913 * C1868) *
                C152167 * C6028) *
               C152072 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C4047 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152373 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C4047) *
               C152357 +
           ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
             C7779 * C6028) *
                C4047 -
            ((C8822 + C8823) * C152167 * C6028 +
             (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
                C152072) *
               C152326) *
              C3181 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C4047) *
               C152373 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C4047 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152357 +
           ((C8599 * C6026 + (C8605 + C8604) * C152167 * C6027 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152167 * C6028) *
                C152072 -
            ((C8294 + C8295) * C152167 * C6028 +
             (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152284 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152030) *
              C703 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152030 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152284) *
              C704 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C152284 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152030) *
              C705 +
          ((C134 * C338 - C135 * C326 - C134 * C339 + C121 * C362 +
            C136 * C354 - C137 * C334 - C136 * C355 + C122 * C370 +
            C138 * C358 - C139 * C336 - C138 * C359 + C123 * C372 +
            C140 * C708 - C141 * C707 - C140 * C709 + C124 * C710) *
               C152167 * C152155 * C151985 * C152030 -
           (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
            C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
            C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
            C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
               C152167 * C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C1661 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C1662 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C1663 -
           (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
            C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
            C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
            C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
               C152167 * C152155 * C151985 * C152336) *
              C152270 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C1662 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C1661 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C1663 +
           (C134 * C1317 - C135 * C1307 - C134 * C1318 + C121 * C1331 +
            C136 * C1315 - C137 * C1306 - C136 * C1316 + C122 * C1330 +
            C138 * C1313 - C139 * C1305 - C138 * C1314 + C123 * C1329 +
            C140 * C1668 - C141 * C1667 - C140 * C1669 + C124 * C1670) *
               C152167 * C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152284 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152030) *
              C703 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C152030 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152284) *
              C704 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152284 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152030) *
              C705 +
          (((C6820 + C6821) * C152167 * C6026 +
            (C6822 + C6823) * C152167 * C6027 +
            (C6029 * C1313 - C6030 * C1305 - C6029 * C1314 + C6024 * C1329 +
             C6031 * C1668 - C6032 * C1667 - C6031 * C1669 + C151913 * C1670) *
                C152167 * C6028) *
               C151985 * C152030 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C1661 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C1662 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C151985 * C1663 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C151985 * C152336) *
              C152270 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
               C151985 * C1662 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C1661 -
           ((C8294 + C8295) * C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C1663 +
           (C8289 * C6026 + (C8295 + C8294) * C152167 * C6027 +
            (C6029 * C7735 - C6030 * C7731 - C6029 * C7736 + C6024 * C7743 +
             C6031 * C8276 - C6032 * C8275 - C6031 * C8277 + C151913 * C8278) *
                C152167 * C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152285 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C152284 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152285) *
               C152030) *
              C323 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152285) *
               C152284 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152285 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C152030) *
              C324 +
          (((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
             C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
             C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
             C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
                C152167 * C152155 * C152285 -
            (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
             C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
             C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
             C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
                C152167 * C152155 * C152072) *
               C152284 +
           ((C134 * C1051 - C135 * C1043 - C134 * C1052 + C121 * C1061 +
             C136 * C1053 - C137 * C1044 - C136 * C1054 + C122 * C1062 +
             C138 * C1055 - C139 * C1045 - C138 * C1056 + C123 * C1063 +
             C140 * C1057 - C141 * C1046 - C140 * C1058 + C124 * C1064) *
                C152167 * C152155 * C152072 -
            (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
             C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
             C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
             C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
                C152167 * C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152285 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152072) *
              C1661 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152072 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C152285) *
              C1662 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C152285 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C152072) *
              C1663 +
          ((C134 * C2003 - C135 * C1999 - C134 * C2004 + C121 * C2011 +
            C136 * C2005 - C137 * C2000 - C136 * C2006 + C122 * C2012 +
            C138 * C2007 - C139 * C2001 - C138 * C2008 + C123 * C2013 +
            C140 * C2009 - C141 * C2002 - C140 * C2010 + C124 * C2014) *
               C152167 * C152155 * C152072 -
           (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
            C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
            C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
            C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
               C152167 * C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152285 -
            ((C7380 + C7381) * C152167 * C6028 +
             (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C152284 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 +
             (C6029 * C2003 - C6030 * C1999 - C6029 * C2004 + C6024 * C2011 +
              C6031 * C2005 - C6032 * C2000 - C6031 * C2006 + C151913 * C2012) *
                 C152167 * C6028) *
                C152072 -
            ((C6364 + C6365) * C152167 * C6028 +
             (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152285) *
               C152030) *
              C323 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 +
             (C7386 + C7387) * C152167 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152285) *
               C152284 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 +
             (C6370 + C6371) * C152167 * C6028) *
                C152285 -
            ((C6031 * C2007 - C6032 * C2001 - C6031 * C2008 + C151913 * C2013 +
              C6029 * C2005 - C6030 * C2000 - C6029 * C2006 + C6024 * C2012) *
                 C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C152030) *
              C324 +
          ((((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
              C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                 C152167 * C6026 +
             (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
                C152285 -
            ((C7388 + C7389) * C152167 * C6028 +
             (C7390 + C7391) * C152167 * C6027 +
             (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
              C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                 C152167 * C6026) *
                C152072) *
               C152284 +
           (((C7391 + C7390) * C152167 * C6026 +
             (C7389 + C7388) * C152167 * C6027 +
             (C6029 * C2007 - C6030 * C2001 - C6029 * C2008 + C6024 * C2013 +
              C6031 * C2009 - C6032 * C2002 - C6031 * C2010 + C151913 * C2014) *
                 C152167 * C6028) *
                C152072 -
            ((C6376 + C6377) * C152167 * C6028 +
             (C6375 + C6374) * C152167 * C6027 +
             (C6373 + C6372) * C152167 * C6026) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152285 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C1661 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 + C8817 * C6028) *
               C152072 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C152285) *
              C1662 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C152285 -
           ((C8822 + C8823) * C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152072) *
              C1663 +
          ((C8817 * C6026 + (C8823 + C8822) * C152167 * C6027 +
            (C6029 * C8801 - C6030 * C8799 - C6029 * C8802 + C6024 * C8805 +
             C6031 * C8803 - C6032 * C8800 - C6031 * C8804 + C151913 * C8806) *
                C152167 * C6028) *
               C152072 -
           ((C7776 + C7777) * C152167 * C6028 +
            (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152357 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152326) *
              C323 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152357 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152326) *
              C324 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152357 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C151985 * C151967 * C129 -
          (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 + C138 * C156 -
           C139 * C145 - C138 * C157 + C123 * C169 + C136 * C154 - C137 * C144 -
           C136 * C155 + C122 * C168 + C134 * C152 - C135 * C143 - C134 * C153 +
           C121 * C167) *
              C152167 * C152155 * C151985 * C151967 * C130 +
          (C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 + C136 * C156 -
           C137 * C145 - C136 * C157 + C122 * C169 + C138 * C158 - C139 * C146 -
           C138 * C159 + C123 * C170 + C140 * C160 - C141 * C147 - C140 * C161 +
           C124 * C171) *
              C152167 * C152155 * C151985 * C151967 * C131 -
          (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 + C138 * C160 -
           C139 * C147 - C138 * C161 + C123 * C171 + C136 * C158 - C137 * C146 -
           C136 * C159 + C122 * C170 + C134 * C156 - C135 * C145 - C134 * C157 +
           C121 * C169) *
              C152167 * C152155 * C151985 * C151967 * C132 +
          (C134 * C158 - C135 * C146 - C134 * C159 + C121 * C170 + C136 * C160 -
           C137 * C147 - C136 * C161 + C122 * C171 + C138 * C162 - C139 * C148 -
           C138 * C163 + C123 * C172 + C140 * C164 - C141 * C149 - C140 * C165 +
           C124 * C173) *
              C152167 * C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152374 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152359 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152329) *
              C151967 * C323 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152359 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C152374 -
           (C140 * C553 - C141 * C532 - C140 * C554 + C124 * C568 +
            C138 * C549 - C139 * C530 - C138 * C550 + C123 * C566 +
            C136 * C547 - C137 * C529 - C136 * C548 + C122 * C565 +
            C134 * C545 - C135 * C528 - C134 * C546 + C121 * C564) *
               C152167 * C152155 * C152329) *
              C151967 * C324 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C152374 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C152359 +
           (C134 * C547 - C135 * C529 - C134 * C548 + C121 * C565 +
            C136 * C549 - C137 * C530 - C136 * C550 + C122 * C566 +
            C138 * C553 - C139 * C532 - C138 * C554 + C123 * C568 +
            C140 * C557 - C141 * C534 - C140 * C558 + C124 * C570) *
               C152167 * C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152326) *
              C152370 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C1212 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152326) *
              C152353 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C151985 * C1299 -
          (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 + C138 * C340 -
           C139 * C327 - C138 * C341 + C123 * C363 + C136 * C342 - C137 * C328 -
           C136 * C343 + C122 * C364 + C134 * C344 - C135 * C329 - C134 * C345 +
           C121 * C365) *
              C152167 * C152155 * C151985 * C1300 +
          (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 + C136 * C348 -
           C137 * C331 - C136 * C349 + C122 * C367 + C138 * C350 - C139 * C332 -
           C138 * C351 + C123 * C368 + C140 * C352 - C141 * C333 - C140 * C353 +
           C124 * C369) *
              C152167 * C152155 * C151985 * C1301 -
          (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
           C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
           C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
           C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
              C152167 * C152155 * C151985 * C1302 +
          (C134 * C1321 - C135 * C1309 - C134 * C1322 + C121 * C1333 +
           C136 * C1323 - C137 * C1310 - C136 * C1324 + C122 * C1334 +
           C138 * C1325 - C139 * C1311 - C138 * C1326 + C123 * C1335 +
           C140 * C1327 - C141 * C1312 - C140 * C1328 + C124 * C1336) *
              C152167 * C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152374 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152359 +
           (C134 * C543 - C135 * C527 - C134 * C544 + C121 * C563 +
            C136 * C545 - C137 * C528 - C136 * C546 + C122 * C564 +
            C138 * C547 - C139 * C529 - C138 * C548 + C123 * C565 +
            C140 * C549 - C141 * C530 - C140 * C550 + C124 * C566) *
               C152167 * C152155 * C152329) *
              C1211 +
          ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
            C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
            C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
            C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
               C152167 * C152155 * C152359 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C152374 -
           (C140 * C1495 - C141 * C1483 - C140 * C1496 + C124 * C1519 +
            C138 * C1497 - C139 * C1484 - C138 * C1498 + C123 * C1520 +
            C136 * C1499 - C137 * C1485 - C136 * C1500 + C122 * C1521 +
            C134 * C1501 - C135 * C1486 - C134 * C1502 + C121 * C1522) *
               C152167 * C152155 * C152329) *
              C1212 +
          ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C152374 -
           (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
            C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
            C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
            C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
               C152167 * C152155 * C152359 +
           (C134 * C1511 - C135 * C1491 - C134 * C1512 + C121 * C1527 +
            C136 * C1513 - C137 * C1492 - C136 * C1514 + C122 * C1528 +
            C138 * C1515 - C139 * C1493 - C138 * C1516 + C123 * C1529 +
            C140 * C1517 - C141 * C1494 - C140 * C1518 + C124 * C1530) *
               C152167 * C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6029 * C344 - C6030 * C329 - C6029 * C345 + C6024 * C365 +
            C6031 * C342 - C6032 * C328 - C6031 * C343 + C151913 * C364) *
               C152167 * C6027 +
           (C6029 * C346 - C6030 * C330 - C6029 * C347 + C6024 * C366 +
            C6031 * C348 - C6032 * C331 - C6031 * C349 + C151913 * C367) *
               C152167 * C6028) *
              C151985 * C151967 * C129 -
          ((C6031 * C350 - C6032 * C332 - C6031 * C351 + C151913 * C368 +
            C6029 * C348 - C6030 * C331 - C6029 * C349 + C6024 * C367) *
               C152167 * C6028 +
           (C6031 * C340 - C6032 * C327 - C6031 * C341 + C151913 * C363 +
            C6029 * C342 - C6030 * C328 - C6029 * C343 + C6024 * C364) *
               C152167 * C6027 +
           (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
            C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
               C152167 * C6026) *
              C151985 * C151967 * C130 +
          ((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
            C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
               C152167 * C6026 +
           (C6029 * C340 - C6030 * C327 - C6029 * C341 + C6024 * C363 +
            C6031 * C338 - C6032 * C326 - C6031 * C339 + C151913 * C362) *
               C152167 * C6027 +
           (C6029 * C350 - C6030 * C332 - C6029 * C351 + C6024 * C368 +
            C6031 * C352 - C6032 * C333 - C6031 * C353 + C151913 * C369) *
               C152167 * C6028) *
              C151985 * C151967 * C131 -
          ((C6031 * C356 - C6032 * C335 - C6031 * C357 + C151913 * C371 +
            C6029 * C352 - C6030 * C333 - C6029 * C353 + C6024 * C369) *
               C152167 * C6028 +
           (C6031 * C354 - C6032 * C334 - C6031 * C355 + C151913 * C370 +
            C6029 * C338 - C6030 * C326 - C6029 * C339 + C6024 * C362) *
               C152167 * C6027 +
           (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
            C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
               C152167 * C6026) *
              C151985 * C151967 * C132 +
          ((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
            C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
               C152167 * C6026 +
           (C6029 * C354 - C6030 * C334 - C6029 * C355 + C6024 * C370 +
            C6031 * C358 - C6032 * C336 - C6031 * C359 + C151913 * C372) *
               C152167 * C6027 +
           (C6029 * C356 - C6030 * C335 - C6029 * C357 + C6024 * C371 +
            C6031 * C360 - C6032 * C337 - C6031 * C361 + C151913 * C373) *
               C152167 * C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152373 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152357 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C323 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C152357 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152373 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152373 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152357 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152374 -
           ((C6031 * C1507 - C6032 * C1489 - C6031 * C1508 + C151913 * C1525 +
             C6029 * C1509 - C6030 * C1490 - C6029 * C1510 + C6024 * C1526) *
                C152167 * C6028 +
            (C6031 * C1049 - C6032 * C1042 - C6031 * C1050 + C151913 * C1060 +
             C6029 * C1047 - C6030 * C1041 - C6029 * C1048 + C6024 * C1059) *
                C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152359 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C6029 * C1501 - C6030 * C1486 - C6029 * C1502 + C6024 * C1522 +
             C6031 * C1499 - C6032 * C1485 - C6031 * C1500 + C151913 * C1521) *
                C152167 * C6027 +
            (C6029 * C1511 - C6030 * C1491 - C6029 * C1512 + C6024 * C1527 +
             C6031 * C1513 - C6032 * C1492 - C6031 * C1514 + C151913 * C1528) *
                C152167 * C6028) *
               C152329) *
              C151967 * C323 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C6029 * C1049 - C6030 * C1042 - C6029 * C1050 + C6024 * C1060 +
             C6031 * C1051 - C6032 * C1043 - C6031 * C1052 + C151913 * C1061) *
                C152167 * C6027 +
            (C6029 * C1507 - C6030 * C1489 - C6029 * C1508 + C6024 * C1525 +
             C6031 * C1505 - C6032 * C1488 - C6031 * C1506 + C151913 * C1524) *
                C152167 * C6028) *
               C152359 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C152374 -
           ((C6031 * C1515 - C6032 * C1493 - C6031 * C1516 + C151913 * C1529 +
             C6029 * C1513 - C6030 * C1492 - C6029 * C1514 + C6024 * C1528) *
                C152167 * C6028 +
            (C6031 * C1497 - C6032 * C1484 - C6031 * C1498 + C151913 * C1520 +
             C6029 * C1499 - C6030 * C1485 - C6029 * C1500 + C6024 * C1521) *
                C152167 * C6027 +
            (C6031 * C547 - C6032 * C529 - C6031 * C548 + C151913 * C565 +
             C6029 * C545 - C6030 * C528 - C6029 * C546 + C6024 * C564) *
                C152167 * C6026) *
               C152329) *
              C151967 * C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C152374 -
           ((C6031 * C1503 - C6032 * C1487 - C6031 * C1504 + C151913 * C1523 +
             C6029 * C1505 - C6030 * C1488 - C6029 * C1506 + C6024 * C1524) *
                C152167 * C6028 +
            (C6031 * C1053 - C6032 * C1044 - C6031 * C1054 + C151913 * C1062 +
             C6029 * C1051 - C6030 * C1043 - C6029 * C1052 + C6024 * C1061) *
                C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152359 +
           ((C6029 * C547 - C6030 * C529 - C6029 * C548 + C6024 * C565 +
             C6031 * C549 - C6032 * C530 - C6031 * C550 + C151913 * C566) *
                C152167 * C6026 +
            (C6029 * C1497 - C6030 * C1484 - C6029 * C1498 + C6024 * C1520 +
             C6031 * C1495 - C6032 * C1483 - C6031 * C1496 + C151913 * C1519) *
                C152167 * C6027 +
            (C6029 * C1515 - C6030 * C1493 - C6029 * C1516 + C6024 * C1529 +
             C6031 * C1517 - C6032 * C1494 - C6031 * C1518 + C151913 * C1530) *
                C152167 * C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C1211 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C1212 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C1212 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C1211 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C1211 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C1212 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
              C151985 * C1299 -
          (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
           (C6361 + C6360) * C152167 * C6026) *
              C151985 * C1300 +
          (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
              C151985 * C1301 -
          ((C7776 + C7777) * C152167 * C6028 +
           (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
              C151985 * C1302 +
          (C7779 * C6026 + (C7777 + C7776) * C152167 * C6027 +
           (C6029 * C7739 - C6030 * C7733 - C6029 * C7740 + C6024 * C7745 +
            C6031 * C7741 - C6032 * C7734 - C6031 * C7742 + C151913 * C7746) *
               C152167 * C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152374 -
           (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152359 +
           ((C6029 * C543 - C6030 * C527 - C6029 * C544 + C6024 * C563 +
             C6031 * C545 - C6032 * C528 - C6031 * C546 + C151913 * C564) *
                C152167 * C6026 +
            (C8072 + C8073) * C152167 * C6027 + C8081 * C6028) *
               C152329) *
              C1211 +
          (((C7383 + C7382) * C152167 * C6026 +
            (C7381 + C7380) * C152167 * C6027 +
            (C8076 + C8077) * C152167 * C6028) *
               C152359 -
           (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C152374 -
           ((C8078 + C8079) * C152167 * C6028 +
            (C8075 + C8074) * C152167 * C6027 +
            (C8073 + C8072) * C152167 * C6026) *
               C152329) *
              C1212 +
          ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
               C152374 -
           ((C6031 * C8007 - C6032 * C7999 - C6031 * C8008 + C151913 * C8017 +
             C6029 * C8009 - C6030 * C8000 - C6029 * C8010 + C6024 * C8018) *
                C152167 * C6028 +
            (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
               C152359 +
           (C8081 * C6026 + (C8079 + C8078) * C152167 * C6027 +
            (C6029 * C8011 - C6030 * C8001 - C6029 * C8012 + C6024 * C8019 +
             C6031 * C8013 - C6032 * C8002 - C6031 * C8014 + C151913 * C8020) *
                C152167 * C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C152285 -
           (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
            C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
            C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
            C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
               C152167 * C152155 * C152072) *
              C151967 * C703 +
          ((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
            C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
            C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
            C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
               C152167 * C152155 * C152072 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C152285) *
              C151967 * C704 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C152285 -
           (C140 * C555 - C141 * C533 - C140 * C556 + C124 * C569 +
            C138 * C551 - C139 * C531 - C138 * C552 + C123 * C567 +
            C136 * C535 - C137 * C523 - C136 * C536 + C122 * C559 +
            C134 * C537 - C135 * C524 - C134 * C538 + C121 * C560) *
               C152167 * C152155 * C152072) *
              C151967 * C705 +
          ((C134 * C535 - C135 * C523 - C134 * C536 + C121 * C559 +
            C136 * C551 - C137 * C531 - C136 * C552 + C122 * C567 +
            C138 * C555 - C139 * C533 - C138 * C556 + C123 * C569 +
            C140 * C844 - C141 * C843 - C140 * C845 + C124 * C846) *
               C152167 * C152155 * C152072 -
           (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 +
            C138 * C160 - C139 * C147 - C138 * C161 + C123 * C171 +
            C136 * C158 - C137 * C146 - C136 * C159 + C122 * C170 +
            C134 * C156 - C135 * C145 - C134 * C157 + C121 * C169) *
               C152167 * C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
             C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
             C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
             C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
                C152167 * C152155 * C152285 -
            (C140 * C535 - C141 * C523 - C140 * C536 + C124 * C559 +
             C138 * C537 - C139 * C524 - C138 * C538 + C123 * C560 +
             C136 * C539 - C137 * C525 - C136 * C540 + C122 * C561 +
             C134 * C541 - C135 * C526 - C134 * C542 + C121 * C562) *
                C152167 * C152155 * C152072) *
               C1211 +
           ((C134 * C1047 - C135 * C1041 - C134 * C1048 + C121 * C1059 +
             C136 * C1049 - C137 * C1042 - C136 * C1050 + C122 * C1060 +
             C138 * C1051 - C139 * C1043 - C138 * C1052 + C123 * C1061 +
             C140 * C1053 - C141 * C1044 - C140 * C1054 + C124 * C1062) *
                C152167 * C152155 * C152072 -
            (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
             C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
             C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
             C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
                C152167 * C152155 * C152285) *
               C1212 +
           ((C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
             C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
             C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
             C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
                C152167 * C152155 * C152285 -
            (C140 * C1503 - C141 * C1487 - C140 * C1504 + C124 * C1523 +
             C138 * C1505 - C139 * C1488 - C138 * C1506 + C123 * C1524 +
             C136 * C1507 - C137 * C1489 - C136 * C1508 + C122 * C1525 +
             C134 * C1509 - C135 * C1490 - C134 * C1510 + C121 * C1526) *
                C152167 * C152155 * C152072) *
               C152326) *
              C152270 +
          (((C134 * C539 - C135 * C525 - C134 * C540 + C121 * C561 +
             C136 * C537 - C137 * C524 - C136 * C538 + C122 * C560 +
             C138 * C535 - C139 * C523 - C138 * C536 + C123 * C559 +
             C140 * C551 - C141 * C531 - C140 * C552 + C124 * C567) *
                C152167 * C152155 * C152072 -
            (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
             C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
             C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
             C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
                C152167 * C152155 * C152285) *
               C1211 +
           ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
             C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
             C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
             C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
                C152167 * C152155 * C152285 -
            (C140 * C1055 - C141 * C1045 - C140 * C1056 + C124 * C1063 +
             C138 * C1053 - C139 * C1044 - C138 * C1054 + C123 * C1062 +
             C136 * C1051 - C137 * C1043 - C136 * C1052 + C122 * C1061 +
             C134 * C1049 - C135 * C1042 - C134 * C1050 + C121 * C1060) *
                C152167 * C152155 * C152072) *
               C1212 +
           ((C134 * C1507 - C135 * C1489 - C134 * C1508 + C121 * C1525 +
             C136 * C1505 - C137 * C1488 - C136 * C1506 + C122 * C1524 +
             C138 * C1503 - C139 * C1487 - C138 * C1504 + C123 * C1523 +
             C140 * C1866 - C141 * C1865 - C140 * C1867 + C124 * C1868) *
                C152167 * C152155 * C152072 -
            (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
             C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
             C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
             C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
                C152167 * C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C152285 -
           ((C6031 * C1507 - C6032 * C1489 - C6031 * C1508 + C151913 * C1525 +
             C6029 * C1509 - C6030 * C1490 - C6029 * C1510 + C6024 * C1526) *
                C152167 * C6028 +
            (C6031 * C1049 - C6032 * C1042 - C6031 * C1050 + C151913 * C1060 +
             C6029 * C1047 - C6030 * C1041 - C6029 * C1048 + C6024 * C1059) *
                C152167 * C6027 +
            (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
             C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                C152167 * C6026) *
               C152072) *
              C151967 * C703 +
          (((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
             C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                C152167 * C6026 +
            (C6029 * C1049 - C6030 * C1042 - C6029 * C1050 + C6024 * C1060 +
             C6031 * C1051 - C6032 * C1043 - C6031 * C1052 + C151913 * C1061) *
                C152167 * C6027 +
            (C6029 * C1507 - C6030 * C1489 - C6029 * C1508 + C6024 * C1525 +
             C6031 * C1505 - C6032 * C1488 - C6031 * C1506 + C151913 * C1524) *
                C152167 * C6028) *
               C152072 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C152285) *
              C151967 * C704 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C152285 -
           ((C6031 * C1503 - C6032 * C1487 - C6031 * C1504 + C151913 * C1523 +
             C6029 * C1505 - C6030 * C1488 - C6029 * C1506 + C6024 * C1524) *
                C152167 * C6028 +
            (C6031 * C1053 - C6032 * C1044 - C6031 * C1054 + C151913 * C1062 +
             C6029 * C1051 - C6030 * C1043 - C6029 * C1052 + C6024 * C1061) *
                C152167 * C6027 +
            (C6031 * C535 - C6032 * C523 - C6031 * C536 + C151913 * C559 +
             C6029 * C537 - C6030 * C524 - C6029 * C538 + C6024 * C560) *
                C152167 * C6026) *
               C152072) *
              C151967 * C705 +
          (((C6029 * C535 - C6030 * C523 - C6029 * C536 + C6024 * C559 +
             C6031 * C551 - C6032 * C531 - C6031 * C552 + C151913 * C567) *
                C152167 * C6026 +
            (C6029 * C1053 - C6030 * C1044 - C6029 * C1054 + C6024 * C1062 +
             C6031 * C1055 - C6032 * C1045 - C6031 * C1056 + C151913 * C1063) *
                C152167 * C6027 +
            (C6029 * C1503 - C6030 * C1487 - C6029 * C1504 + C6024 * C1523 +
             C6031 * C1866 - C6032 * C1865 - C6031 * C1867 + C151913 * C1868) *
                C152167 * C6028) *
               C152072 -
           ((C6823 + C6822) * C152167 * C6028 +
            (C6821 + C6820) * C152167 * C6027 +
            (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
             C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
                C152167 * C6026) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
              C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                 C152167 * C6026 +
             (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
                C152285 -
            (C8055 * C6028 + (C7382 + C7383) * C152167 * C6027 +
             (C6031 * C539 - C6032 * C525 - C6031 * C540 + C151913 * C561 +
              C6029 * C541 - C6030 * C526 - C6029 * C542 + C6024 * C562) *
                 C152167 * C6026) *
                C152072) *
               C1211 +
           (((C7383 + C7382) * C152167 * C6026 +
             (C7381 + C7380) * C152167 * C6027 +
             (C8076 + C8077) * C152167 * C6028) *
                C152072 -
            (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
             (C6361 + C6360) * C152167 * C6026) *
                C152285) *
               C1212 +
           ((C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
             C7779 * C6028) *
                C152285 -
            ((C6031 * C8007 - C6032 * C7999 - C6031 * C8008 + C151913 * C8017 +
              C6029 * C8009 - C6030 * C8000 - C6029 * C8010 + C6024 * C8018) *
                 C152167 * C6028 +
             (C8077 + C8076) * C152167 * C6027 + C8055 * C6026) *
                C152072) *
               C152326) *
              C152270 +
          ((((C6029 * C539 - C6030 * C525 - C6029 * C540 + C6024 * C561 +
              C6031 * C537 - C6032 * C524 - C6031 * C538 + C151913 * C560) *
                 C152167 * C6026 +
             (C7384 + C7385) * C152167 * C6027 + C8599 * C6028) *
                C152072 -
            (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
             (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
              C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                 C152167 * C6026) *
                C152285) *
               C1211 +
           (((C6366 + C6367) * C152167 * C6026 +
             (C6368 + C6369) * C152167 * C6027 + C8289 * C6028) *
                C152285 -
            ((C8604 + C8605) * C152167 * C6028 +
             (C7387 + C7386) * C152167 * C6027 +
             (C7385 + C7384) * C152167 * C6026) *
                C152072) *
               C1212 +
           ((C8599 * C6026 + (C8605 + C8604) * C152167 * C6027 +
             (C6029 * C8007 - C6030 * C7999 - C6029 * C8008 + C6024 * C8017 +
              C6031 * C8586 - C6032 * C8585 - C6031 * C8587 + C151913 * C8588) *
                 C152167 * C6028) *
                C152072 -
            ((C8294 + C8295) * C152167 * C6028 +
             (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C151985 * C151967 * C129 -
          (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 + C138 * C156 -
           C139 * C145 - C138 * C157 + C123 * C169 + C136 * C154 - C137 * C144 -
           C136 * C155 + C122 * C168 + C134 * C152 - C135 * C143 - C134 * C153 +
           C121 * C167) *
              C152167 * C152155 * C151985 * C151967 * C130 +
          (C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 + C136 * C156 -
           C137 * C145 - C136 * C157 + C122 * C169 + C138 * C158 - C139 * C146 -
           C138 * C159 + C123 * C170 + C140 * C160 - C141 * C147 - C140 * C161 +
           C124 * C171) *
              C152167 * C152155 * C151985 * C151967 * C131 -
          (C140 * C162 - C141 * C148 - C140 * C163 + C124 * C172 + C138 * C160 -
           C139 * C147 - C138 * C161 + C123 * C171 + C136 * C158 - C137 * C146 -
           C136 * C159 + C122 * C170 + C134 * C156 - C135 * C145 - C134 * C157 +
           C121 * C169) *
              C152167 * C152155 * C151985 * C151967 * C132 +
          (C134 * C158 - C135 * C146 - C134 * C159 + C121 * C170 + C136 * C160 -
           C137 * C147 - C136 * C161 + C122 * C171 + C138 * C162 - C139 * C148 -
           C138 * C163 + C123 * C172 + C140 * C164 - C141 * C149 - C140 * C165 +
           C124 * C173) *
              C152167 * C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C152357 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152326) *
              C323 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C152357 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152326) *
              C324 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C152373 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C152357 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 +
            C136 * C152 - C137 * C143 - C136 * C153 + C122 * C167 +
            C138 * C154 - C139 * C144 - C138 * C155 + C123 * C168 +
            C140 * C156 - C141 * C145 - C140 * C157 + C124 * C169) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 +
            C138 * C340 - C139 * C327 - C138 * C341 + C123 * C363 +
            C136 * C342 - C137 * C328 - C136 * C343 + C122 * C364 +
            C134 * C344 - C135 * C329 - C134 * C345 + C121 * C365) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 +
            C136 * C348 - C137 * C331 - C136 * C349 + C122 * C367 +
            C138 * C350 - C139 * C332 - C138 * C351 + C123 * C368 +
            C140 * C352 - C141 * C333 - C140 * C353 + C124 * C369) *
               C152167 * C152155 * C151985 * C152326) *
              C152370 +
          ((C134 * C342 - C135 * C328 - C134 * C343 + C121 * C364 +
            C136 * C340 - C137 * C327 - C136 * C341 + C122 * C363 +
            C138 * C338 - C139 * C326 - C138 * C339 + C123 * C362 +
            C140 * C354 - C141 * C334 - C140 * C355 + C124 * C370) *
               C152167 * C152155 * C151985 * C1212 -
           (C140 * C158 - C141 * C146 - C140 * C159 + C124 * C170 +
            C138 * C156 - C139 * C145 - C138 * C157 + C123 * C169 +
            C136 * C154 - C137 * C144 - C136 * C155 + C122 * C168 +
            C134 * C152 - C135 * C143 - C134 * C153 + C121 * C167) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C356 - C141 * C335 - C140 * C357 + C124 * C371 +
            C138 * C352 - C139 * C333 - C138 * C353 + C123 * C369 +
            C136 * C350 - C137 * C332 - C136 * C351 + C122 * C368 +
            C134 * C348 - C135 * C331 - C134 * C349 + C121 * C367) *
               C152167 * C152155 * C151985 * C152326) *
              C152353 +
          ((C134 * C154 - C135 * C144 - C134 * C155 + C121 * C168 +
            C136 * C156 - C137 * C145 - C136 * C157 + C122 * C169 +
            C138 * C158 - C139 * C146 - C138 * C159 + C123 * C170 +
            C140 * C160 - C141 * C147 - C140 * C161 + C124 * C171) *
               C152167 * C152155 * C151985 * C1211 -
           (C140 * C358 - C141 * C336 - C140 * C359 + C124 * C372 +
            C138 * C354 - C139 * C334 - C138 * C355 + C123 * C370 +
            C136 * C338 - C137 * C326 - C136 * C339 + C122 * C362 +
            C134 * C340 - C135 * C327 - C134 * C341 + C121 * C363) *
               C152167 * C152155 * C151985 * C1212 +
           (C134 * C350 - C135 * C332 - C134 * C351 + C121 * C368 +
            C136 * C352 - C137 * C333 - C136 * C353 + C122 * C369 +
            C138 * C356 - C139 * C335 - C138 * C357 + C123 * C371 +
            C140 * C360 - C141 * C337 - C140 * C361 + C124 * C373) *
               C152167 * C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C150 - C135 * C142 - C134 * C151 + C121 * C166 + C136 * C152 -
           C137 * C143 - C136 * C153 + C122 * C167 + C138 * C154 - C139 * C144 -
           C138 * C155 + C123 * C168 + C140 * C156 - C141 * C145 - C140 * C157 +
           C124 * C169) *
              C152167 * C152155 * C151985 * C1299 -
          (C140 * C338 - C141 * C326 - C140 * C339 + C124 * C362 + C138 * C340 -
           C139 * C327 - C138 * C341 + C123 * C363 + C136 * C342 - C137 * C328 -
           C136 * C343 + C122 * C364 + C134 * C344 - C135 * C329 - C134 * C345 +
           C121 * C365) *
              C152167 * C152155 * C151985 * C1300 +
          (C134 * C346 - C135 * C330 - C134 * C347 + C121 * C366 + C136 * C348 -
           C137 * C331 - C136 * C349 + C122 * C367 + C138 * C350 - C139 * C332 -
           C138 * C351 + C123 * C368 + C140 * C352 - C141 * C333 - C140 * C353 +
           C124 * C369) *
              C152167 * C152155 * C151985 * C1301 -
          (C140 * C1313 - C141 * C1305 - C140 * C1314 + C124 * C1329 +
           C138 * C1315 - C139 * C1306 - C138 * C1316 + C123 * C1330 +
           C136 * C1317 - C137 * C1307 - C136 * C1318 + C122 * C1331 +
           C134 * C1319 - C135 * C1308 - C134 * C1320 + C121 * C1332) *
              C152167 * C152155 * C151985 * C1302 +
          (C134 * C1321 - C135 * C1309 - C134 * C1322 + C121 * C1333 +
           C136 * C1323 - C137 * C1310 - C136 * C1324 + C122 * C1334 +
           C138 * C1325 - C139 * C1311 - C138 * C1326 + C123 * C1335 +
           C140 * C1327 - C141 * C1312 - C140 * C1328 + C124 * C1336) *
              C152167 * C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6029 * C344 - C6030 * C329 - C6029 * C345 + C6024 * C365 +
            C6031 * C342 - C6032 * C328 - C6031 * C343 + C151913 * C364) *
               C152167 * C6027 +
           (C6029 * C346 - C6030 * C330 - C6029 * C347 + C6024 * C366 +
            C6031 * C348 - C6032 * C331 - C6031 * C349 + C151913 * C367) *
               C152167 * C6028) *
              C151985 * C151967 * C129 -
          ((C6031 * C350 - C6032 * C332 - C6031 * C351 + C151913 * C368 +
            C6029 * C348 - C6030 * C331 - C6029 * C349 + C6024 * C367) *
               C152167 * C6028 +
           (C6031 * C340 - C6032 * C327 - C6031 * C341 + C151913 * C363 +
            C6029 * C342 - C6030 * C328 - C6029 * C343 + C6024 * C364) *
               C152167 * C6027 +
           (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
            C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
               C152167 * C6026) *
              C151985 * C151967 * C130 +
          ((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
            C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
               C152167 * C6026 +
           (C6029 * C340 - C6030 * C327 - C6029 * C341 + C6024 * C363 +
            C6031 * C338 - C6032 * C326 - C6031 * C339 + C151913 * C362) *
               C152167 * C6027 +
           (C6029 * C350 - C6030 * C332 - C6029 * C351 + C6024 * C368 +
            C6031 * C352 - C6032 * C333 - C6031 * C353 + C151913 * C369) *
               C152167 * C6028) *
              C151985 * C151967 * C131 -
          ((C6031 * C356 - C6032 * C335 - C6031 * C357 + C151913 * C371 +
            C6029 * C352 - C6030 * C333 - C6029 * C353 + C6024 * C369) *
               C152167 * C6028 +
           (C6031 * C354 - C6032 * C334 - C6031 * C355 + C151913 * C370 +
            C6029 * C338 - C6030 * C326 - C6029 * C339 + C6024 * C362) *
               C152167 * C6027 +
           (C6031 * C158 - C6032 * C146 - C6031 * C159 + C151913 * C170 +
            C6029 * C156 - C6030 * C145 - C6029 * C157 + C6024 * C169) *
               C152167 * C6026) *
              C151985 * C151967 * C132 +
          ((C6029 * C158 - C6030 * C146 - C6029 * C159 + C6024 * C170 +
            C6031 * C160 - C6032 * C147 - C6031 * C161 + C151913 * C171) *
               C152167 * C6026 +
           (C6029 * C354 - C6030 * C334 - C6029 * C355 + C6024 * C370 +
            C6031 * C358 - C6032 * C336 - C6031 * C359 + C151913 * C372) *
               C152167 * C6027 +
           (C6029 * C356 - C6030 * C335 - C6029 * C357 + C6024 * C371 +
            C6031 * C360 - C6032 * C337 - C6031 * C361 + C151913 * C373) *
               C152167 * C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C152373 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C152357 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C323 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C152357 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C152373 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C324 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C152373 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C152357 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
             C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
                C152167 * C6026 +
            (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
               C151985 * C1211 -
           ((C6364 + C6365) * C152167 * C6028 +
            (C6363 + C6362) * C152167 * C6027 +
            (C6361 + C6360) * C152167 * C6026) *
               C151985 * C1212 +
           (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 +
            (C6029 * C1321 - C6030 * C1309 - C6029 * C1322 + C6024 * C1333 +
             C6031 * C1323 - C6032 * C1310 - C6031 * C1324 + C151913 * C1334) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C6366 + C6367) * C152167 * C6026 +
            (C6368 + C6369) * C152167 * C6027 +
            (C6370 + C6371) * C152167 * C6028) *
               C151985 * C1212 -
           (C6382 * C6028 + (C6367 + C6366) * C152167 * C6027 +
            (C6031 * C154 - C6032 * C144 - C6031 * C155 + C151913 * C168 +
             C6029 * C152 - C6030 * C143 - C6029 * C153 + C6024 * C167) *
                C152167 * C6026) *
               C151985 * C1211 -
           ((C6031 * C1325 - C6032 * C1311 - C6031 * C1326 + C151913 * C1335 +
             C6029 * C1323 - C6030 * C1310 - C6029 * C1324 + C6024 * C1334) *
                C152167 * C6028 +
            (C6371 + C6370) * C152167 * C6027 + C6382 * C6026) *
               C151985 * C152326) *
              C152353 +
          (((C6029 * C154 - C6030 * C144 - C6029 * C155 + C6024 * C168 +
             C6031 * C156 - C6032 * C145 - C6031 * C157 + C151913 * C169) *
                C152167 * C6026 +
            (C6372 + C6373) * C152167 * C6027 + C6383 * C6028) *
               C151985 * C1211 -
           ((C6376 + C6377) * C152167 * C6028 +
            (C6375 + C6374) * C152167 * C6027 +
            (C6373 + C6372) * C152167 * C6026) *
               C151985 * C1212 +
           (C6383 * C6026 + (C6377 + C6376) * C152167 * C6027 +
            (C6029 * C1325 - C6030 * C1311 - C6029 * C1326 + C6024 * C1335 +
             C6031 * C1327 - C6032 * C1312 - C6031 * C1328 + C151913 * C1336) *
                C152167 * C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6029 * C150 - C6030 * C142 - C6029 * C151 + C6024 * C166 +
            C6031 * C152 - C6032 * C143 - C6031 * C153 + C151913 * C167) *
               C152167 * C6026 +
           (C6360 + C6361) * C152167 * C6027 + C6381 * C6028) *
              C151985 * C1299 -
          (C7765 * C6028 + (C6363 + C6362) * C152167 * C6027 +
           (C6361 + C6360) * C152167 * C6026) *
              C151985 * C1300 +
          (C6381 * C6026 + (C6365 + C6364) * C152167 * C6027 + C7779 * C6028) *
              C151985 * C1301 -
          ((C7776 + C7777) * C152167 * C6028 +
           (C7775 + C7774) * C152167 * C6027 + C7765 * C6026) *
              C151985 * C1302 +
          (C7779 * C6026 + (C7777 + C7776) * C152167 * C6027 +
           (C6029 * C7739 - C6030 * C7733 - C6029 * C7740 + C6024 * C7745 +
            C6031 * C7741 - C6032 * C7734 - C6031 * C7742 + C151913 * C7746) *
               C152167 * C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C152026 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C152033 +
           (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C151985 * C3525) *
              C151944 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
               C151985 * C152033 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C152026 -
           ((C75856 + C75857) * C152167 * C73634 +
            (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
               C151985 * C3525) *
              C151953 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C151985 * C152026 -
           ((C73982 + C73983) * C152167 * C73634 +
            (C73981 + C73980) * C152167 * C152367 +
            (C73979 + C73978) * C152167 * C152366) *
               C151985 * C152033 +
           (C73989 * C152366 + (C73983 + C73982) * C152167 * C152367 +
            (C150639 * C1325 - C73636 * C1311 - C150639 * C1326 +
             C152263 * C1335 + C150632 * C1327 - C73638 * C1312 -
             C150632 * C1328 + C151913 * C1336) *
                C152167 * C73634) *
               C151985 * C3525) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152167 * C152366 +
             (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                C152285 -
            (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
             (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
              C150639 * C541 - C73636 * C526 - C150639 * C542 +
              C152263 * C562) *
                 C152167 * C152366) *
                C152072) *
               C152026 +
           (((C74989 + C74988) * C152167 * C152366 +
             (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
                C152072 -
            (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
             (C73967 + C73966) * C152167 * C152366) *
                C152285) *
               C152033 +
           ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
             C75369 * C73634) *
                C152285 -
            ((C76372 + C76373) * C152167 * C73634 +
             (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
                C152072) *
               C3525) *
              C3181 +
          ((((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
              C150632 * C537 - C73638 * C524 - C150632 * C538 +
              C151913 * C560) *
                 C152167 * C152366 +
             (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                C152072 -
            (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152167 * C152366) *
                C152285) *
               C152026 +
           (((C73972 + C73973) * C152167 * C152366 +
             (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                C152285 -
            ((C76162 + C76163) * C152167 * C73634 +
             (C74993 + C74992) * C152167 * C152367 +
             (C74991 + C74990) * C152167 * C152366) *
                C152072) *
               C152033 +
           ((C76157 * C152366 + (C76163 + C76162) * C152167 * C152367 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152167 * C73634) *
                C152072 -
            ((C75856 + C75857) * C152167 * C73634 +
             (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
                C152285) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C152380 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C152376 +
           (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C151985 * C152362 -
           ((C75366 + C75367) * C152167 * C73634 +
            (C75365 + C75364) * C152167 * C152367 + C75355 * C152366) *
               C151985 * C152336) *
              C3181 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
               C151985 * C152376 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C152380 -
           ((C75856 + C75857) * C152167 * C73634 +
            (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
               C151985 * C152362 +
           (C75851 * C152366 + (C75857 + C75856) * C152167 * C152367 +
            (C150639 * C7735 - C73636 * C7731 - C150639 * C7736 +
             C152263 * C7743 + C150632 * C8276 - C73638 * C8275 -
             C150632 * C8277 + C151913 * C8278) *
                C152167 * C73634) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C3041 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C152030) *
              C152379 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
               C151985 * C152030 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C3041) *
              C152372 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C151985 * C3041 -
           ((C73982 + C73983) * C152167 * C73634 +
            (C73981 + C73980) * C152167 * C152367 +
            (C73979 + C73978) * C152167 * C152366) *
               C151985 * C152030) *
              C152355 +
          (((C74426 + C74427) * C152167 * C152366 +
            (C74428 + C74429) * C152167 * C152367 +
            (C150639 * C1313 - C73636 * C1305 - C150639 * C1314 +
             C152263 * C1329 + C150632 * C1668 - C73638 * C1667 -
             C150632 * C1669 + C151913 * C1670) *
                C152167 * C73634) *
               C151985 * C152030 -
           ((C74429 + C74428) * C152167 * C73634 +
            (C74427 + C74426) * C152167 * C152367 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152167 * C152366) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152167 * C152366 +
             (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                C152374 -
            (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
             (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
              C150639 * C541 - C73636 * C526 - C150639 * C542 +
              C152263 * C562) *
                 C152167 * C152366) *
                C152359 +
            ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
              C150632 * C545 - C73638 * C528 - C150632 * C546 +
              C151913 * C564) *
                 C152167 * C152366 +
             (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
                C152329) *
               C3041 +
           (((C74989 + C74988) * C152167 * C152366 +
             (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
                C152359 -
            (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
             (C73967 + C73966) * C152167 * C152366) *
                C152374 -
            ((C75644 + C75645) * C152167 * C73634 +
             (C75641 + C75640) * C152167 * C152367 +
             (C75639 + C75638) * C152167 * C152366) *
                C152329) *
               C152030) *
              C3181 +
          ((((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
              C150632 * C537 - C73638 * C524 - C150632 * C538 +
              C151913 * C560) *
                 C152167 * C152366 +
             (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                C152359 -
            (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152167 * C152366) *
                C152374 -
            ((C77246 + C77247) * C152167 * C73634 +
             (C77248 + C77249) * C152167 * C152367 +
             (C150632 * C547 - C73638 * C529 - C150632 * C548 + C151913 * C565 +
              C150639 * C545 - C73636 * C528 - C150639 * C546 +
              C152263 * C564) *
                 C152167 * C152366) *
                C152329) *
               C3041 +
           (((C73972 + C73973) * C152167 * C152366 +
             (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                C152374 -
            ((C76162 + C76163) * C152167 * C73634 +
             (C74993 + C74992) * C152167 * C152367 +
             (C74991 + C74990) * C152167 * C152366) *
                C152359 +
            ((C77249 + C77248) * C152167 * C152366 +
             (C77247 + C77246) * C152167 * C152367 +
             (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
              C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
              C150632 * C9697 + C151913 * C9698) *
                 C152167 * C73634) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                       C152263 * C166 + C150632 * C152 - C73638 * C143 -
                       C150632 * C153 + C151913 * C167) *
                          C152167 * C152366 +
                      (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                         C152285 -
                     (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
                      (C150632 * C539 - C73638 * C525 - C150632 * C540 +
                       C151913 * C561 + C150639 * C541 - C73636 * C526 -
                       C150639 * C542 + C152263 * C562) *
                          C152167 * C152366) *
                         C152072) *
                        C3041 +
                    (((C74989 + C74988) * C152167 * C152366 +
                      (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
                         C152072 -
                     (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
                      (C73967 + C73966) * C152167 * C152366) *
                         C152285) *
                        C152030) *
                       C151944 +
                   ((((C150639 * C539 - C73636 * C525 - C150639 * C540 +
                       C152263 * C561 + C150632 * C537 - C73638 * C524 -
                       C150632 * C538 + C151913 * C560) *
                          C152167 * C152366 +
                      (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                         C152072 -
                     (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
                      (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                       C151913 * C168 + C150639 * C152 - C73636 * C143 -
                       C150639 * C153 + C152263 * C167) *
                          C152167 * C152366) *
                         C152285) *
                        C3041 +
                    (((C73972 + C73973) * C152167 * C152366 +
                      (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                         C152285 -
                     ((C76162 + C76163) * C152167 * C73634 +
                      (C74993 + C74992) * C152167 * C152367 +
                      (C74991 + C74990) * C152167 * C152366) *
                         C152072) *
                        C152030) *
                       C151953 +
                   ((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
                       C152263 * C168 + C150632 * C156 - C73638 * C145 -
                       C150632 * C157 + C151913 * C169) *
                          C152167 * C152366 +
                      (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
                         C152285 -
                     ((C74994 + C74995) * C152167 * C73634 +
                      (C74996 + C74997) * C152167 * C152367 +
                      (C150632 * C535 - C73638 * C523 - C150632 * C536 +
                       C151913 * C559 + C150639 * C537 - C73636 * C524 -
                       C150639 * C538 + C152263 * C560) *
                          C152167 * C152366) *
                         C152072) *
                        C3041 +
                    (((C74997 + C74996) * C152167 * C152366 +
                      (C74995 + C74994) * C152167 * C152367 +
                      (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
                       C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
                       C150632 * C2010 + C151913 * C2014) *
                          C152167 * C73634) *
                         C152072 -
                     ((C73982 + C73983) * C152167 * C73634 +
                      (C73981 + C73980) * C152167 * C152367 +
                      (C73979 + C73978) * C152167 * C152366) *
                         C152285) *
                        C152030) *
                       C3528)) /
                 (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C3041 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C152030) *
              C152379 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
               C151985 * C152030 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C3041) *
              C152372 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C151985 * C3041 -
           ((C73982 + C73983) * C152167 * C73634 +
            (C73981 + C73980) * C152167 * C152367 +
            (C73979 + C73978) * C152167 * C152366) *
               C151985 * C152030) *
              C152355 +
          (((C74426 + C74427) * C152167 * C152366 +
            (C74428 + C74429) * C152167 * C152367 +
            (C150639 * C1313 - C73636 * C1305 - C150639 * C1314 +
             C152263 * C1329 + C150632 * C1668 - C73638 * C1667 -
             C150632 * C1669 + C151913 * C1670) *
                C152167 * C73634) *
               C151985 * C152030 -
           ((C74429 + C74428) * C152167 * C73634 +
            (C74427 + C74426) * C152167 * C152367 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152167 * C152366) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C152380 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C152376 +
           (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C151985 * C152362 -
           ((C75366 + C75367) * C152167 * C73634 +
            (C75365 + C75364) * C152167 * C152367 + C75355 * C152366) *
               C151985 * C152336) *
              C3181 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
               C151985 * C152376 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C152380 -
           ((C75856 + C75857) * C152167 * C73634 +
            (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
               C151985 * C152362 +
           (C75851 * C152366 + (C75857 + C75856) * C152167 * C152367 +
            (C150639 * C7735 - C73636 * C7731 - C150639 * C7736 +
             C152263 * C7743 + C150632 * C8276 - C73638 * C8275 -
             C150632 * C8277 + C151913 * C8278) *
                C152167 * C73634) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152167 * C152366 +
             (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                C4047 -
            (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
             (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
              C150639 * C541 - C73636 * C526 - C150639 * C542 +
              C152263 * C562) *
                 C152167 * C152366) *
                C152072) *
               C152026 +
           (((C74989 + C74988) * C152167 * C152366 +
             (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
                C152072 -
            (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
             (C73967 + C73966) * C152167 * C152366) *
                C4047) *
               C152033 +
           ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
             C75369 * C73634) *
                C4047 -
            ((C76372 + C76373) * C152167 * C73634 +
             (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
                C152072) *
               C3525) *
              C152270 +
          ((((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
              C150632 * C537 - C73638 * C524 - C150632 * C538 +
              C151913 * C560) *
                 C152167 * C152366 +
             (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                C152072 -
            (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152167 * C152366) *
                C4047) *
               C152026 +
           (((C73972 + C73973) * C152167 * C152366 +
             (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                C4047 -
            ((C76162 + C76163) * C152167 * C73634 +
             (C74993 + C74992) * C152167 * C152367 +
             (C74991 + C74990) * C152167 * C152366) *
                C152072) *
               C152033 +
           ((C76157 * C152366 + (C76163 + C76162) * C152167 * C152367 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152167 * C73634) *
                C152072 -
            ((C75856 + C75857) * C152167 * C73634 +
             (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
                C4047) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C152068 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152075 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
               C4719) *
              C152026 +
          (((C74989 + C74988) * C152167 * C152366 +
            (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
               C152075 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C152068 -
           ((C75644 + C75645) * C152167 * C73634 +
            (C75641 + C75640) * C152167 * C152367 +
            (C75639 + C75638) * C152167 * C152366) *
               C4719) *
              C152033 +
          ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C152068 -
           ((C76372 + C76373) * C152167 * C73634 +
            (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
               C152075 +
           (C75647 * C152366 + (C75645 + C75644) * C152167 * C152367 +
            (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
             C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
             C150632 * C8014 + C151913 * C8020) *
                C152167 * C73634) *
               C4719) *
              C3525) *
         C151939) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C4047 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152072) *
              C152380 +
          (((C74989 + C74988) * C152167 * C152366 +
            (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
               C152072 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C4047) *
              C152376 +
          ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C4047 -
           ((C76372 + C76373) * C152167 * C73634 +
            (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
               C152072) *
              C152362 +
          ((C76367 * C152366 + (C76373 + C76372) * C152167 * C152367 +
            (C150639 * C8801 - C73636 * C8799 - C150639 * C8802 +
             C152263 * C8805 + C150632 * C8803 - C73638 * C8800 -
             C150632 * C8804 + C151913 * C8806) *
                C152167 * C73634) *
               C152072 -
           ((C75366 + C75367) * C152167 * C73634 +
            (C75365 + C75364) * C152167 * C152367 + C75355 * C152366) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152167 * C152366 +
             (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                C4047 -
            (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
             (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
              C150639 * C541 - C73636 * C526 - C150639 * C542 +
              C152263 * C562) *
                 C152167 * C152366) *
                C152072) *
               C3041 +
           (((C74989 + C74988) * C152167 * C152366 +
             (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
                C152072 -
            (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
             (C73967 + C73966) * C152167 * C152366) *
                C4047) *
               C152030) *
              C152370 +
          ((((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
              C150632 * C537 - C73638 * C524 - C150632 * C538 +
              C151913 * C560) *
                 C152167 * C152366 +
             (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                C152072 -
            (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152167 * C152366) *
                C4047) *
               C3041 +
           (((C73972 + C73973) * C152167 * C152366 +
             (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                C4047 -
            ((C76162 + C76163) * C152167 * C73634 +
             (C74993 + C74992) * C152167 * C152367 +
             (C74991 + C74990) * C152167 * C152366) *
                C152072) *
               C152030) *
              C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152167 * C152366 +
             (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
                C4047 -
            ((C74994 + C74995) * C152167 * C73634 +
             (C74996 + C74997) * C152167 * C152367 +
             (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
              C150639 * C537 - C73636 * C524 - C150639 * C538 +
              C152263 * C560) *
                 C152167 * C152366) *
                C152072) *
               C3041 +
           (((C74997 + C74996) * C152167 * C152366 +
             (C74995 + C74994) * C152167 * C152367 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152167 * C73634) *
                C152072 -
            ((C73982 + C73983) * C152167 * C73634 +
             (C73981 + C73980) * C152167 * C152367 +
             (C73979 + C73978) * C152167 * C152366) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C152381 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152378 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
               C152365 -
           ((C77662 + C77663) * C152167 * C73634 +
            (C77664 + C77665) * C152167 * C152367 +
            (C150632 * C2409 - C73638 * C2399 - C150632 * C2410 +
             C151913 * C2423 + C150639 * C2411 - C73636 * C2400 -
             C150639 * C2412 + C152263 * C2424) *
                C152167 * C152366) *
               C152342) *
              C3041 +
          (((C74989 + C74988) * C152167 * C152366 +
            (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
               C152378 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C152381 -
           ((C75644 + C75645) * C152167 * C73634 +
            (C75641 + C75640) * C152167 * C152367 +
            (C75639 + C75638) * C152167 * C152366) *
               C152365 +
           ((C77665 + C77664) * C152167 * C152366 +
            (C77663 + C77662) * C152167 * C152367 +
            (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
             C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
             C150632 * C10124 + C151913 * C10126) *
                C152167 * C73634) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[133] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                       C152263 * C166 + C150632 * C152 - C73638 * C143 -
                       C150632 * C153 + C151913 * C167) *
                          C152167 * C152366 +
                      (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                         C152068 -
                     (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
                      (C150632 * C539 - C73638 * C525 - C150632 * C540 +
                       C151913 * C561 + C150639 * C541 - C73636 * C526 -
                       C150639 * C542 + C152263 * C562) *
                          C152167 * C152366) *
                         C152075 +
                     ((C150639 * C543 - C73636 * C527 - C150639 * C544 +
                       C152263 * C563 + C150632 * C545 - C73638 * C528 -
                       C150632 * C546 + C151913 * C564) *
                          C152167 * C152366 +
                      (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
                         C4719) *
                        C3041 +
                    (((C74989 + C74988) * C152167 * C152366 +
                      (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
                         C152075 -
                     (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
                      (C73967 + C73966) * C152167 * C152366) *
                         C152068 -
                     ((C75644 + C75645) * C152167 * C73634 +
                      (C75641 + C75640) * C152167 * C152367 +
                      (C75639 + C75638) * C152167 * C152366) *
                         C4719) *
                        C152030) *
                       C152270 +
                   ((((C150639 * C539 - C73636 * C525 - C150639 * C540 +
                       C152263 * C561 + C150632 * C537 - C73638 * C524 -
                       C150632 * C538 + C151913 * C560) *
                          C152167 * C152366 +
                      (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                         C152075 -
                     (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
                      (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                       C151913 * C168 + C150639 * C152 - C73636 * C143 -
                       C150639 * C153 + C152263 * C167) *
                          C152167 * C152366) *
                         C152068 -
                     ((C77246 + C77247) * C152167 * C73634 +
                      (C77248 + C77249) * C152167 * C152367 +
                      (C150632 * C547 - C73638 * C529 - C150632 * C548 +
                       C151913 * C565 + C150639 * C545 - C73636 * C528 -
                       C150639 * C546 + C152263 * C564) *
                          C152167 * C152366) *
                         C4719) *
                        C3041 +
                    (((C73972 + C73973) * C152167 * C152366 +
                      (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                         C152068 -
                     ((C76162 + C76163) * C152167 * C73634 +
                      (C74993 + C74992) * C152167 * C152367 +
                      (C74991 + C74990) * C152167 * C152366) *
                         C152075 +
                     ((C77249 + C77248) * C152167 * C152366 +
                      (C77247 + C77246) * C152167 * C152367 +
                      (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
                       C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
                       C150632 * C9697 + C151913 * C9698) *
                          C152167 * C73634) *
                         C4719) *
                        C152030) *
                       C151950)) /
                 (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152167 * C152366 +
             (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                C4047 -
            (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
             (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
              C150639 * C541 - C73636 * C526 - C150639 * C542 +
              C152263 * C562) *
                 C152167 * C152366) *
                C152072) *
               C3041 +
           (((C74989 + C74988) * C152167 * C152366 +
             (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
                C152072 -
            (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
             (C73967 + C73966) * C152167 * C152366) *
                C4047) *
               C152030) *
              C152370 +
          ((((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
              C150632 * C537 - C73638 * C524 - C150632 * C538 +
              C151913 * C560) *
                 C152167 * C152366 +
             (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                C152072 -
            (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152167 * C152366) *
                C4047) *
               C3041 +
           (((C73972 + C73973) * C152167 * C152366 +
             (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                C4047 -
            ((C76162 + C76163) * C152167 * C73634 +
             (C74993 + C74992) * C152167 * C152367 +
             (C74991 + C74990) * C152167 * C152366) *
                C152072) *
               C152030) *
              C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152167 * C152366 +
             (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
                C4047 -
            ((C74994 + C74995) * C152167 * C73634 +
             (C74996 + C74997) * C152167 * C152367 +
             (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
              C150639 * C537 - C73636 * C524 - C150639 * C538 +
              C152263 * C560) *
                 C152167 * C152366) *
                C152072) *
               C3041 +
           (((C74997 + C74996) * C152167 * C152366 +
             (C74995 + C74994) * C152167 * C152367 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152167 * C73634) *
                C152072 -
            ((C73982 + C73983) * C152167 * C73634 +
             (C73981 + C73980) * C152167 * C152367 +
             (C73979 + C73978) * C152167 * C152366) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C4047 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152072) *
              C152380 +
          (((C74989 + C74988) * C152167 * C152366 +
            (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
               C152072 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C4047) *
              C152376 +
          ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C4047 -
           ((C76372 + C76373) * C152167 * C73634 +
            (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
               C152072) *
              C152362 +
          ((C76367 * C152366 + (C76373 + C76372) * C152167 * C152367 +
            (C150639 * C8801 - C73636 * C8799 - C150639 * C8802 +
             C152263 * C8805 + C150632 * C8803 - C73638 * C8800 -
             C150632 * C8804 + C151913 * C8806) *
                C152167 * C73634) *
               C152072 -
           ((C75366 + C75367) * C152167 * C73634 +
            (C75365 + C75364) * C152167 * C152367 + C75355 * C152366) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C1661 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C1662 +
           (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C151985 * C1663 -
           ((C75366 + C75367) * C152167 * C73634 +
            (C75365 + C75364) * C152167 * C152367 + C75355 * C152366) *
               C151985 * C152336) *
              C152270 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
               C151985 * C1662 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C1661 -
           ((C75856 + C75857) * C152167 * C73634 +
            (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
               C151985 * C1663 +
           (C75851 * C152366 + (C75857 + C75856) * C152167 * C152367 +
            (C150639 * C7735 - C73636 * C7731 - C150639 * C7736 +
             C152263 * C7743 + C150632 * C8276 - C73638 * C8275 -
             C150632 * C8277 + C151913 * C8278) *
                C152167 * C73634) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C152284 -
           ((C73970 + C73971) * C152167 * C73634 +
            (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C152030) *
              C703 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 +
            (C73976 + C73977) * C152167 * C73634) *
               C151985 * C152030 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C152284) *
              C704 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C151985 * C152284 -
           ((C73982 + C73983) * C152167 * C73634 +
            (C73981 + C73980) * C152167 * C152367 +
            (C73979 + C73978) * C152167 * C152366) *
               C151985 * C152030) *
              C705 +
          (((C74426 + C74427) * C152167 * C152366 +
            (C74428 + C74429) * C152167 * C152367 +
            (C150639 * C1313 - C73636 * C1305 - C150639 * C1314 +
             C152263 * C1329 + C150632 * C1668 - C73638 * C1667 -
             C150632 * C1669 + C151913 * C1670) *
                C152167 * C73634) *
               C151985 * C152030 -
           ((C74429 + C74428) * C152167 * C73634 +
            (C74427 + C74426) * C152167 * C152367 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152167 * C152366) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152167 * C152366 +
             (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                C2161 -
            (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
             (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
              C150639 * C541 - C73636 * C526 - C150639 * C542 +
              C152263 * C562) *
                 C152167 * C152366) *
                C2162 +
            ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
              C150632 * C545 - C73638 * C528 - C150632 * C546 +
              C151913 * C564) *
                 C152167 * C152366 +
             (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
                C152329) *
               C152284 +
           (((C74989 + C74988) * C152167 * C152366 +
             (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
                C2162 -
            (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
             (C73967 + C73966) * C152167 * C152366) *
                C2161 -
            ((C75644 + C75645) * C152167 * C73634 +
             (C75641 + C75640) * C152167 * C152367 +
             (C75639 + C75638) * C152167 * C152366) *
                C152329) *
               C152030) *
              C152270 +
          ((((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
              C150632 * C537 - C73638 * C524 - C150632 * C538 +
              C151913 * C560) *
                 C152167 * C152366 +
             (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                C2162 -
            (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152167 * C152366) *
                C2161 -
            ((C77246 + C77247) * C152167 * C73634 +
             (C77248 + C77249) * C152167 * C152367 +
             (C150632 * C547 - C73638 * C529 - C150632 * C548 + C151913 * C565 +
              C150639 * C545 - C73636 * C528 - C150639 * C546 +
              C152263 * C564) *
                 C152167 * C152366) *
                C152329) *
               C152284 +
           (((C73972 + C73973) * C152167 * C152366 +
             (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                C2161 -
            ((C76162 + C76163) * C152167 * C73634 +
             (C74993 + C74992) * C152167 * C152367 +
             (C74991 + C74990) * C152167 * C152366) *
                C2162 +
            ((C77249 + C77248) * C152167 * C152366 +
             (C77247 + C77246) * C152167 * C152367 +
             (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
              C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
              C150632 * C9697 + C151913 * C9698) *
                 C152167 * C73634) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C152285 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152072) *
              C1661 +
          (((C74989 + C74988) * C152167 * C152366 +
            (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
               C152072 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C152285) *
              C1662 +
          ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C152285 -
           ((C76372 + C76373) * C152167 * C73634 +
            (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
               C152072) *
              C1663 +
          ((C76367 * C152366 + (C76373 + C76372) * C152167 * C152367 +
            (C150639 * C8801 - C73636 * C8799 - C150639 * C8802 +
             C152263 * C8805 + C150632 * C8803 - C73638 * C8800 -
             C150632 * C8804 + C151913 * C8806) *
                C152167 * C73634) *
               C152072 -
           ((C75366 + C75367) * C152167 * C73634 +
            (C75365 + C75364) * C152167 * C152367 + C75355 * C152366) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152167 * C152366 +
             (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                C152285 -
            ((C74986 + C74987) * C152167 * C73634 +
             (C74988 + C74989) * C152167 * C152367 +
             (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
              C150639 * C541 - C73636 * C526 - C150639 * C542 +
              C152263 * C562) *
                 C152167 * C152366) *
                C152072) *
               C152284 +
           (((C74989 + C74988) * C152167 * C152366 +
             (C74987 + C74986) * C152167 * C152367 +
             (C150639 * C2003 - C73636 * C1999 - C150639 * C2004 +
              C152263 * C2011 + C150632 * C2005 - C73638 * C2000 -
              C150632 * C2006 + C151913 * C2012) *
                 C152167 * C73634) *
                C152072 -
            ((C73970 + C73971) * C152167 * C73634 +
             (C73969 + C73968) * C152167 * C152367 +
             (C73967 + C73966) * C152167 * C152366) *
                C152285) *
               C152030) *
              C323 +
          ((((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
              C150632 * C537 - C73638 * C524 - C150632 * C538 +
              C151913 * C560) *
                 C152167 * C152366 +
             (C74990 + C74991) * C152167 * C152367 +
             (C74992 + C74993) * C152167 * C73634) *
                C152072 -
            (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152167 * C152366) *
                C152285) *
               C152284 +
           (((C73972 + C73973) * C152167 * C152366 +
             (C73974 + C73975) * C152167 * C152367 +
             (C73976 + C73977) * C152167 * C73634) *
                C152285 -
            ((C150632 * C2007 - C73638 * C2001 - C150632 * C2008 +
              C151913 * C2013 + C150639 * C2005 - C73636 * C2000 -
              C150639 * C2006 + C152263 * C2012) *
                 C152167 * C73634 +
             (C74993 + C74992) * C152167 * C152367 +
             (C74991 + C74990) * C152167 * C152366) *
                C152072) *
               C152030) *
              C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152167 * C152366 +
             (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
                C152285 -
            ((C74994 + C74995) * C152167 * C73634 +
             (C74996 + C74997) * C152167 * C152367 +
             (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
              C150639 * C537 - C73636 * C524 - C150639 * C538 +
              C152263 * C560) *
                 C152167 * C152366) *
                C152072) *
               C152284 +
           (((C74997 + C74996) * C152167 * C152366 +
             (C74995 + C74994) * C152167 * C152367 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152167 * C73634) *
                C152072 -
            ((C73982 + C73983) * C152167 * C73634 +
             (C73981 + C73980) * C152167 * C152367 +
             (C73979 + C73978) * C152167 * C152366) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C2757 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C2758 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
               C2759 -
           ((C77662 + C77663) * C152167 * C73634 +
            (C77664 + C77665) * C152167 * C152367 +
            (C150632 * C2409 - C73638 * C2399 - C150632 * C2410 +
             C151913 * C2423 + C150639 * C2411 - C73636 * C2400 -
             C150639 * C2412 + C152263 * C2424) *
                C152167 * C152366) *
               C152342) *
              C152284 +
          (((C74989 + C74988) * C152167 * C152366 +
            (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
               C2758 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C2757 -
           ((C75644 + C75645) * C152167 * C73634 +
            (C75641 + C75640) * C152167 * C152367 +
            (C75639 + C75638) * C152167 * C152366) *
               C2759 +
           ((C77665 + C77664) * C152167 * C152366 +
            (C77663 + C77662) * C152167 * C152367 +
            (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
             C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
             C150632 * C10124 + C151913 * C10126) *
                C152167 * C73634) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                C152263 * C166 + C150632 * C152 - C73638 * C143 -
                C150632 * C153 + C151913 * C167) *
                   C152167 * C152366 +
               (C150639 * C344 - C73636 * C329 - C150639 * C345 +
                C152263 * C365 + C150632 * C342 - C73638 * C328 -
                C150632 * C343 + C151913 * C364) *
                   C152167 * C152367 +
               (C150639 * C346 - C73636 * C330 - C150639 * C347 +
                C152263 * C366 + C150632 * C348 - C73638 * C331 -
                C150632 * C349 + C151913 * C367) *
                   C152167 * C73634) *
                  C151985 * C151967 * C129 -
              ((C150632 * C350 - C73638 * C332 - C150632 * C351 +
                C151913 * C368 + C150639 * C348 - C73636 * C331 -
                C150639 * C349 + C152263 * C367) *
                   C152167 * C73634 +
               (C150632 * C340 - C73638 * C327 - C150632 * C341 +
                C151913 * C363 + C150639 * C342 - C73636 * C328 -
                C150639 * C343 + C152263 * C364) *
                   C152167 * C152367 +
               (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                C151913 * C168 + C150639 * C152 - C73636 * C143 -
                C150639 * C153 + C152263 * C167) *
                   C152167 * C152366) *
                  C151985 * C151967 * C130 +
              ((C150639 * C154 - C73636 * C144 - C150639 * C155 +
                C152263 * C168 + C150632 * C156 - C73638 * C145 -
                C150632 * C157 + C151913 * C169) *
                   C152167 * C152366 +
               (C150639 * C340 - C73636 * C327 - C150639 * C341 +
                C152263 * C363 + C150632 * C338 - C73638 * C326 -
                C150632 * C339 + C151913 * C362) *
                   C152167 * C152367 +
               (C150639 * C350 - C73636 * C332 - C150639 * C351 +
                C152263 * C368 + C150632 * C352 - C73638 * C333 -
                C150632 * C353 + C151913 * C369) *
                   C152167 * C73634) *
                  C151985 * C151967 * C131 -
              ((C150632 * C356 - C73638 * C335 - C150632 * C357 +
                C151913 * C371 + C150639 * C352 - C73636 * C333 -
                C150639 * C353 + C152263 * C369) *
                   C152167 * C73634 +
               (C150632 * C354 - C73638 * C334 - C150632 * C355 +
                C151913 * C370 + C150639 * C338 - C73636 * C326 -
                C150639 * C339 + C152263 * C362) *
                   C152167 * C152367 +
               (C150632 * C158 - C73638 * C146 - C150632 * C159 +
                C151913 * C170 + C150639 * C156 - C73636 * C145 -
                C150639 * C157 + C152263 * C169) *
                   C152167 * C152366) *
                  C151985 * C151967 * C132 +
              ((C150639 * C158 - C73636 * C146 - C150639 * C159 +
                C152263 * C170 + C150632 * C160 - C73638 * C147 -
                C150632 * C161 + C151913 * C171) *
                   C152167 * C152366 +
               (C150639 * C354 - C73636 * C334 - C150639 * C355 +
                C152263 * C370 + C150632 * C358 - C73638 * C336 -
                C150632 * C359 + C151913 * C372) *
                   C152167 * C152367 +
               (C150639 * C356 - C73636 * C335 - C150639 * C357 +
                C152263 * C371 + C150632 * C360 - C73638 * C337 -
                C150632 * C361 + C151913 * C373) *
                   C152167 * C73634) *
                  C151985 * C151967 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                 C152263 * C166 + C150632 * C152 - C73638 * C143 -
                 C150632 * C153 + C151913 * C167) *
                    C152167 * C152366 +
                (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                   C151985 * C152373 -
               ((C73970 + C73971) * C152167 * C73634 +
                (C73969 + C73968) * C152167 * C152367 +
                (C73967 + C73966) * C152167 * C152366) *
                   C151985 * C152357 +
               (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
                (C150639 * C1321 - C73636 * C1309 - C150639 * C1322 +
                 C152263 * C1333 + C150632 * C1323 - C73638 * C1310 -
                 C150632 * C1324 + C151913 * C1334) *
                    C152167 * C73634) *
                   C151985 * C152326) *
                  C323 +
              (((C73972 + C73973) * C152167 * C152366 +
                (C73974 + C73975) * C152167 * C152367 +
                (C73976 + C73977) * C152167 * C73634) *
                   C151985 * C152357 -
               (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
                (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                 C151913 * C168 + C150639 * C152 - C73636 * C143 -
                 C150639 * C153 + C152263 * C167) *
                    C152167 * C152366) *
                   C151985 * C152373 -
               ((C150632 * C1325 - C73638 * C1311 - C150632 * C1326 +
                 C151913 * C1335 + C150639 * C1323 - C73636 * C1310 -
                 C150639 * C1324 + C152263 * C1334) *
                    C152167 * C73634 +
                (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
                   C151985 * C152326) *
                  C324 +
              (((C150639 * C154 - C73636 * C144 - C150639 * C155 +
                 C152263 * C168 + C150632 * C156 - C73638 * C145 -
                 C150632 * C157 + C151913 * C169) *
                    C152167 * C152366 +
                (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
                   C151985 * C152373 -
               ((C73982 + C73983) * C152167 * C73634 +
                (C73981 + C73980) * C152167 * C152367 +
                (C73979 + C73978) * C152167 * C152366) *
                   C151985 * C152357 +
               (C73989 * C152366 + (C73983 + C73982) * C152167 * C152367 +
                (C150639 * C1325 - C73636 * C1311 - C150639 * C1326 +
                 C152263 * C1335 + C150632 * C1327 - C73638 * C1312 -
                 C150632 * C1328 + C151913 * C1336) *
                    C152167 * C73634) *
                   C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C152374 -
           ((C150632 * C1507 - C73638 * C1489 - C150632 * C1508 +
             C151913 * C1525 + C150639 * C1509 - C73636 * C1490 -
             C150639 * C1510 + C152263 * C1526) *
                C152167 * C73634 +
            (C150632 * C1049 - C73638 * C1042 - C150632 * C1050 +
             C151913 * C1060 + C150639 * C1047 - C73636 * C1041 -
             C150639 * C1048 + C152263 * C1059) *
                C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152359 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C150639 * C1501 - C73636 * C1486 - C150639 * C1502 +
             C152263 * C1522 + C150632 * C1499 - C73638 * C1485 -
             C150632 * C1500 + C151913 * C1521) *
                C152167 * C152367 +
            (C150639 * C1511 - C73636 * C1491 - C150639 * C1512 +
             C152263 * C1527 + C150632 * C1513 - C73638 * C1492 -
             C150632 * C1514 + C151913 * C1528) *
                C152167 * C73634) *
               C152329) *
              C151967 * C323 +
          (((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
             C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560) *
                C152167 * C152366 +
            (C150639 * C1049 - C73636 * C1042 - C150639 * C1050 +
             C152263 * C1060 + C150632 * C1051 - C73638 * C1043 -
             C150632 * C1052 + C151913 * C1061) *
                C152167 * C152367 +
            (C150639 * C1507 - C73636 * C1489 - C150639 * C1508 +
             C152263 * C1525 + C150632 * C1505 - C73638 * C1488 -
             C150632 * C1506 + C151913 * C1524) *
                C152167 * C73634) *
               C152359 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C152374 -
           ((C150632 * C1515 - C73638 * C1493 - C150632 * C1516 +
             C151913 * C1529 + C150639 * C1513 - C73636 * C1492 -
             C150639 * C1514 + C152263 * C1528) *
                C152167 * C73634 +
            (C150632 * C1497 - C73638 * C1484 - C150632 * C1498 +
             C151913 * C1520 + C150639 * C1499 - C73636 * C1485 -
             C150639 * C1500 + C152263 * C1521) *
                C152167 * C152367 +
            (C150632 * C547 - C73638 * C529 - C150632 * C548 + C151913 * C565 +
             C150639 * C545 - C73636 * C528 - C150639 * C546 + C152263 * C564) *
                C152167 * C152366) *
               C152329) *
              C151967 * C324 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C152374 -
           ((C150632 * C1503 - C73638 * C1487 - C150632 * C1504 +
             C151913 * C1523 + C150639 * C1505 - C73636 * C1488 -
             C150639 * C1506 + C152263 * C1524) *
                C152167 * C73634 +
            (C150632 * C1053 - C73638 * C1044 - C150632 * C1054 +
             C151913 * C1062 + C150639 * C1051 - C73636 * C1043 -
             C150639 * C1052 + C152263 * C1061) *
                C152167 * C152367 +
            (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
             C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560) *
                C152167 * C152366) *
               C152359 +
           ((C150639 * C547 - C73636 * C529 - C150639 * C548 + C152263 * C565 +
             C150632 * C549 - C73638 * C530 - C150632 * C550 + C151913 * C566) *
                C152167 * C152366 +
            (C150639 * C1497 - C73636 * C1484 - C150639 * C1498 +
             C152263 * C1520 + C150632 * C1495 - C73638 * C1483 -
             C150632 * C1496 + C151913 * C1519) *
                C152167 * C152367 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C152167 * C73634) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C1211 -
           ((C73970 + C73971) * C152167 * C73634 +
            (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C1212 +
           (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            (C150639 * C1321 - C73636 * C1309 - C150639 * C1322 +
             C152263 * C1333 + C150632 * C1323 - C73638 * C1310 -
             C150632 * C1324 + C151913 * C1334) *
                C152167 * C73634) *
               C151985 * C152326) *
              C152370 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 +
            (C73976 + C73977) * C152167 * C73634) *
               C151985 * C1212 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C1211 -
           ((C150632 * C1325 - C73638 * C1311 - C150632 * C1326 +
             C151913 * C1335 + C150639 * C1323 - C73636 * C1310 -
             C150639 * C1324 + C152263 * C1334) *
                C152167 * C73634 +
            (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
               C151985 * C152326) *
              C152353 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C151985 * C1211 -
           ((C73982 + C73983) * C152167 * C73634 +
            (C73981 + C73980) * C152167 * C152367 +
            (C73979 + C73978) * C152167 * C152366) *
               C151985 * C1212 +
           (C73989 * C152366 + (C73983 + C73982) * C152167 * C152367 +
            (C150639 * C1325 - C73636 * C1311 - C150639 * C1326 +
             C152263 * C1335 + C150632 * C1327 - C73638 * C1312 -
             C150632 * C1328 + C151913 * C1336) *
                C152167 * C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152167 * C152366 +
           (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
              C151985 * C1299 -
          (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
           (C73967 + C73966) * C152167 * C152366) *
              C151985 * C1300 +
          (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
           C75369 * C73634) *
              C151985 * C1301 -
          ((C75366 + C75367) * C152167 * C73634 +
           (C75365 + C75364) * C152167 * C152367 + C75355 * C152366) *
              C151985 * C1302 +
          (C75369 * C152366 + (C75367 + C75366) * C152167 * C152367 +
           (C150639 * C7739 - C73636 * C7733 - C150639 * C7740 +
            C152263 * C7745 + C150632 * C7741 - C73638 * C7734 -
            C150632 * C7742 + C151913 * C7746) *
               C152167 * C73634) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C152374 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152359 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
               C152329) *
              C1211 +
          (((C74989 + C74988) * C152167 * C152366 +
            (C74987 + C74986) * C152167 * C152367 +
            (C75642 + C75643) * C152167 * C73634) *
               C152359 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C152374 -
           ((C75644 + C75645) * C152167 * C73634 +
            (C75641 + C75640) * C152167 * C152367 +
            (C75639 + C75638) * C152167 * C152366) *
               C152329) *
              C1212 +
          ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C152374 -
           ((C150632 * C8007 - C73638 * C7999 - C150632 * C8008 +
             C151913 * C8017 + C150639 * C8009 - C73636 * C8000 -
             C150639 * C8010 + C152263 * C8018) *
                C152167 * C73634 +
            (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
               C152359 +
           (C75647 * C152366 + (C75645 + C75644) * C152167 * C152367 +
            (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
             C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
             C150632 * C8014 + C151913 * C8020) *
                C152167 * C73634) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C2161 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C2162 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
               C152329) *
              C151967 * C152370 +
          (((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
             C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560) *
                C152167 * C152366 +
            (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
               C2162 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C2161 -
           ((C150632 * C1515 - C73638 * C1493 - C150632 * C1516 +
             C151913 * C1529 + C150639 * C1513 - C73636 * C1492 -
             C150639 * C1514 + C152263 * C1528) *
                C152167 * C73634 +
            (C150632 * C1497 - C73638 * C1484 - C150632 * C1498 +
             C151913 * C1520 + C150639 * C1499 - C73636 * C1485 -
             C150639 * C1500 + C152263 * C1521) *
                C152167 * C152367 +
            (C150632 * C547 - C73638 * C529 - C150632 * C548 + C151913 * C565 +
             C150639 * C545 - C73636 * C528 - C150639 * C546 + C152263 * C564) *
                C152167 * C152366) *
               C152329) *
              C151967 * C152353 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C2161 -
           ((C74994 + C74995) * C152167 * C73634 +
            (C74996 + C74997) * C152167 * C152367 +
            (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
             C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560) *
                C152167 * C152366) *
               C2162 +
           ((C150639 * C547 - C73636 * C529 - C150639 * C548 + C152263 * C565 +
             C150632 * C549 - C73638 * C530 - C150632 * C550 + C151913 * C566) *
                C152167 * C152366 +
            (C150639 * C1497 - C73636 * C1484 - C150639 * C1498 +
             C152263 * C1520 + C150632 * C1495 - C73638 * C1483 -
             C150632 * C1496 + C151913 * C1519) *
                C152167 * C152367 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C152167 * C73634) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C2161 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C2162 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
               C152329) *
              C152373 +
          (((C74989 + C74988) * C152167 * C152366 +
            (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
               C2162 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C2161 -
           ((C75644 + C75645) * C152167 * C73634 +
            (C75641 + C75640) * C152167 * C152367 +
            (C75639 + C75638) * C152167 * C152366) *
               C152329) *
              C152357 +
          ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C2161 -
           ((C76372 + C76373) * C152167 * C73634 +
            (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
               C2162 +
           (C75647 * C152366 + (C75645 + C75644) * C152167 * C152367 +
            (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
             C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
             C150632 * C8014 + C151913 * C8020) *
                C152167 * C73634) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152167 * C152366 +
           (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
              C2392 -
          (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
           (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
            C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
               C152167 * C152366) *
              C2393 +
          ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
            C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
               C152167 * C152366 +
           (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
              C2394 -
          ((C150632 * C9387 - C73638 * C9381 - C150632 * C9388 +
            C151913 * C9399 + C150639 * C9389 - C73636 * C9382 -
            C150639 * C9390 + C152263 * C9400) *
               C152167 * C73634 +
           (C150632 * C2901 - C73638 * C2896 - C150632 * C2902 +
            C151913 * C2908 + C150639 * C2899 - C73636 * C2895 -
            C150639 * C2900 + C152263 * C2907) *
               C152167 * C152367 +
           (C150632 * C2409 - C73638 * C2399 - C150632 * C2410 +
            C151913 * C2423 + C150639 * C2411 - C73636 * C2400 -
            C150639 * C2412 + C152263 * C2424) *
               C152167 * C152366) *
              C2395 +
          ((C150639 * C2413 - C73636 * C2401 - C150639 * C2414 +
            C152263 * C2425 + C150632 * C2415 - C73638 * C2402 -
            C150632 * C2416 + C151913 * C2426) *
               C152167 * C152366 +
           (C150639 * C9391 - C73636 * C9383 - C150639 * C9392 +
            C152263 * C9401 + C150632 * C9393 - C73638 * C9384 -
            C150632 * C9394 + C151913 * C9402) *
               C152167 * C152367 +
           (C150639 * C9395 - C73636 * C9385 - C150639 * C9396 +
            C152263 * C9403 + C150632 * C9397 - C73638 * C9386 -
            C150632 * C9398 + C151913 * C9404) *
               C152167 * C73634) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152167 * C152366 +
             (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                C152285 -
            (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
             (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
              C150639 * C541 - C73636 * C526 - C150639 * C542 +
              C152263 * C562) *
                 C152167 * C152366) *
                C152072) *
               C1211 +
           (((C74989 + C74988) * C152167 * C152366 +
             (C74987 + C74986) * C152167 * C152367 +
             (C75642 + C75643) * C152167 * C73634) *
                C152072 -
            (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
             (C73967 + C73966) * C152167 * C152366) *
                C152285) *
               C1212 +
           ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
             C75369 * C73634) *
                C152285 -
            ((C150632 * C8007 - C73638 * C7999 - C150632 * C8008 +
              C151913 * C8017 + C150639 * C8009 - C73636 * C8000 -
              C150639 * C8010 + C152263 * C8018) *
                 C152167 * C73634 +
             (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
                C152072) *
               C152326) *
              C152270 +
          ((((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
              C150632 * C537 - C73638 * C524 - C150632 * C538 +
              C151913 * C560) *
                 C152167 * C152366 +
             (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                C152072 -
            (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152167 * C152366) *
                C152285) *
               C1211 +
           (((C73972 + C73973) * C152167 * C152366 +
             (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                C152285 -
            ((C76162 + C76163) * C152167 * C73634 +
             (C74993 + C74992) * C152167 * C152367 +
             (C74991 + C74990) * C152167 * C152366) *
                C152072) *
               C1212 +
           ((C76157 * C152366 + (C76163 + C76162) * C152167 * C152367 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152167 * C73634) *
                C152072 -
            ((C75856 + C75857) * C152167 * C73634 +
             (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C152285 -
           ((C150632 * C1507 - C73638 * C1489 - C150632 * C1508 +
             C151913 * C1525 + C150639 * C1509 - C73636 * C1490 -
             C150639 * C1510 + C152263 * C1526) *
                C152167 * C73634 +
            (C150632 * C1049 - C73638 * C1042 - C150632 * C1050 +
             C151913 * C1060 + C150639 * C1047 - C73636 * C1041 -
             C150639 * C1048 + C152263 * C1059) *
                C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152072) *
              C151967 * C703 +
          (((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
             C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560) *
                C152167 * C152366 +
            (C150639 * C1049 - C73636 * C1042 - C150639 * C1050 +
             C152263 * C1060 + C150632 * C1051 - C73638 * C1043 -
             C150632 * C1052 + C151913 * C1061) *
                C152167 * C152367 +
            (C150639 * C1507 - C73636 * C1489 - C150639 * C1508 +
             C152263 * C1525 + C150632 * C1505 - C73638 * C1488 -
             C150632 * C1506 + C151913 * C1524) *
                C152167 * C73634) *
               C152072 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C152285) *
              C151967 * C704 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C152285 -
           ((C150632 * C1503 - C73638 * C1487 - C150632 * C1504 +
             C151913 * C1523 + C150639 * C1505 - C73636 * C1488 -
             C150639 * C1506 + C152263 * C1524) *
                C152167 * C73634 +
            (C150632 * C1053 - C73638 * C1044 - C150632 * C1054 +
             C151913 * C1062 + C150639 * C1051 - C73636 * C1043 -
             C150639 * C1052 + C152263 * C1061) *
                C152167 * C152367 +
            (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
             C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560) *
                C152167 * C152366) *
               C152072) *
              C151967 * C705 +
          (((C150639 * C535 - C73636 * C523 - C150639 * C536 + C152263 * C559 +
             C150632 * C551 - C73638 * C531 - C150632 * C552 + C151913 * C567) *
                C152167 * C152366 +
            (C150639 * C1053 - C73636 * C1044 - C150639 * C1054 +
             C152263 * C1062 + C150632 * C1055 - C73638 * C1045 -
             C150632 * C1056 + C151913 * C1063) *
                C152167 * C152367 +
            (C150639 * C1503 - C73636 * C1487 - C150639 * C1504 +
             C152263 * C1523 + C150632 * C1866 - C73638 * C1865 -
             C150632 * C1867 + C151913 * C1868) *
                C152167 * C73634) *
               C152072 -
           ((C74429 + C74428) * C152167 * C73634 +
            (C74427 + C74426) * C152167 * C152367 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152167 * C152366) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C2757 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C2758 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
               C2759 -
           ((C150632 * C9387 - C73638 * C9381 - C150632 * C9388 +
             C151913 * C9399 + C150639 * C9389 - C73636 * C9382 -
             C150639 * C9390 + C152263 * C9400) *
                C152167 * C73634 +
            (C150632 * C2901 - C73638 * C2896 - C150632 * C2902 +
             C151913 * C2908 + C150639 * C2899 - C73636 * C2895 -
             C150639 * C2900 + C152263 * C2907) *
                C152167 * C152367 +
            (C150632 * C2409 - C73638 * C2399 - C150632 * C2410 +
             C151913 * C2423 + C150639 * C2411 - C73636 * C2400 -
             C150639 * C2412 + C152263 * C2424) *
                C152167 * C152366) *
               C152342) *
              C151967 * C152270 +
          (((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
             C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560) *
                C152167 * C152366 +
            (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
               C2758 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C2757 -
           ((C77246 + C77247) * C152167 * C73634 +
            (C77248 + C77249) * C152167 * C152367 +
            (C150632 * C547 - C73638 * C529 - C150632 * C548 + C151913 * C565 +
             C150639 * C545 - C73636 * C528 - C150639 * C546 + C152263 * C564) *
                C152167 * C152366) *
               C2759 +
           ((C150639 * C2409 - C73636 * C2399 - C150639 * C2410 +
             C152263 * C2423 + C150632 * C2407 - C73638 * C2398 -
             C150632 * C2408 + C151913 * C2422) *
                C152167 * C152366 +
            (C150639 * C2901 - C73636 * C2896 - C150639 * C2902 +
             C152263 * C2908 + C150632 * C2903 - C73638 * C2897 -
             C150632 * C2904 + C151913 * C2909) *
                C152167 * C152367 +
            (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
             C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
             C150632 * C9923 + C151913 * C9924) *
                C152167 * C73634) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C152373 -
           ((C73970 + C73971) * C152167 * C73634 +
            (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C152357 +
           (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            (C150639 * C1321 - C73636 * C1309 - C150639 * C1322 +
             C152263 * C1333 + C150632 * C1323 - C73638 * C1310 -
             C150632 * C1324 + C151913 * C1334) *
                C152167 * C73634) *
               C151985 * C152326) *
              C323 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 +
            (C73976 + C73977) * C152167 * C73634) *
               C151985 * C152357 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C152373 -
           ((C150632 * C1325 - C73638 * C1311 - C150632 * C1326 +
             C151913 * C1335 + C150639 * C1323 - C73636 * C1310 -
             C150639 * C1324 + C152263 * C1334) *
                C152167 * C73634 +
            (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
               C151985 * C152326) *
              C324 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C151985 * C152373 -
           ((C73982 + C73983) * C152167 * C73634 +
            (C73981 + C73980) * C152167 * C152367 +
            (C73979 + C73978) * C152167 * C152366) *
               C151985 * C152357 +
           (C73989 * C152366 + (C73983 + C73982) * C152167 * C152367 +
            (C150639 * C1325 - C73636 * C1311 - C150639 * C1326 +
             C152263 * C1335 + C150632 * C1327 - C73638 * C1312 -
             C150632 * C1328 + C151913 * C1336) *
                C152167 * C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152167 * C152366 +
           (C150639 * C344 - C73636 * C329 - C150639 * C345 + C152263 * C365 +
            C150632 * C342 - C73638 * C328 - C150632 * C343 + C151913 * C364) *
               C152167 * C152367 +
           (C150639 * C346 - C73636 * C330 - C150639 * C347 + C152263 * C366 +
            C150632 * C348 - C73638 * C331 - C150632 * C349 + C151913 * C367) *
               C152167 * C73634) *
              C151985 * C151967 * C129 -
          ((C150632 * C350 - C73638 * C332 - C150632 * C351 + C151913 * C368 +
            C150639 * C348 - C73636 * C331 - C150639 * C349 + C152263 * C367) *
               C152167 * C73634 +
           (C150632 * C340 - C73638 * C327 - C150632 * C341 + C151913 * C363 +
            C150639 * C342 - C73636 * C328 - C150639 * C343 + C152263 * C364) *
               C152167 * C152367 +
           (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
            C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
               C152167 * C152366) *
              C151985 * C151967 * C130 +
          ((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
            C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
               C152167 * C152366 +
           (C150639 * C340 - C73636 * C327 - C150639 * C341 + C152263 * C363 +
            C150632 * C338 - C73638 * C326 - C150632 * C339 + C151913 * C362) *
               C152167 * C152367 +
           (C150639 * C350 - C73636 * C332 - C150639 * C351 + C152263 * C368 +
            C150632 * C352 - C73638 * C333 - C150632 * C353 + C151913 * C369) *
               C152167 * C73634) *
              C151985 * C151967 * C131 -
          ((C150632 * C356 - C73638 * C335 - C150632 * C357 + C151913 * C371 +
            C150639 * C352 - C73636 * C333 - C150639 * C353 + C152263 * C369) *
               C152167 * C73634 +
           (C150632 * C354 - C73638 * C334 - C150632 * C355 + C151913 * C370 +
            C150639 * C338 - C73636 * C326 - C150639 * C339 + C152263 * C362) *
               C152167 * C152367 +
           (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
            C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
               C152167 * C152366) *
              C151985 * C151967 * C132 +
          ((C150639 * C158 - C73636 * C146 - C150639 * C159 + C152263 * C170 +
            C150632 * C160 - C73638 * C147 - C150632 * C161 + C151913 * C171) *
               C152167 * C152366 +
           (C150639 * C354 - C73636 * C334 - C150639 * C355 + C152263 * C370 +
            C150632 * C358 - C73638 * C336 - C150632 * C359 + C151913 * C372) *
               C152167 * C152367 +
           (C150639 * C356 - C73636 * C335 - C150639 * C357 + C152263 * C371 +
            C150632 * C360 - C73638 * C337 - C150632 * C361 + C151913 * C373) *
               C152167 * C73634) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C1211 -
           ((C73970 + C73971) * C152167 * C73634 +
            (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C1212 +
           (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            (C150639 * C1321 - C73636 * C1309 - C150639 * C1322 +
             C152263 * C1333 + C150632 * C1323 - C73638 * C1310 -
             C150632 * C1324 + C151913 * C1334) *
                C152167 * C73634) *
               C151985 * C152326) *
              C152370 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 +
            (C73976 + C73977) * C152167 * C73634) *
               C151985 * C1212 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C1211 -
           ((C150632 * C1325 - C73638 * C1311 - C150632 * C1326 +
             C151913 * C1335 + C150639 * C1323 - C73636 * C1310 -
             C150639 * C1324 + C152263 * C1334) *
                C152167 * C73634 +
            (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
               C151985 * C152326) *
              C152353 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C151985 * C1211 -
           ((C73982 + C73983) * C152167 * C73634 +
            (C73981 + C73980) * C152167 * C152367 +
            (C73979 + C73978) * C152167 * C152366) *
               C151985 * C1212 +
           (C73989 * C152366 + (C73983 + C73982) * C152167 * C152367 +
            (C150639 * C1325 - C73636 * C1311 - C150639 * C1326 +
             C152263 * C1335 + C150632 * C1327 - C73638 * C1312 -
             C150632 * C1328 + C151913 * C1336) *
                C152167 * C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152167 * C152366 +
           (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
              C151985 * C1299 -
          (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
           (C73967 + C73966) * C152167 * C152366) *
              C151985 * C1300 +
          (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
           C75369 * C73634) *
              C151985 * C1301 -
          ((C75366 + C75367) * C152167 * C73634 +
           (C75365 + C75364) * C152167 * C152367 + C75355 * C152366) *
              C151985 * C1302 +
          (C75369 * C152366 + (C75367 + C75366) * C152167 * C152367 +
           (C150639 * C7739 - C73636 * C7733 - C150639 * C7740 +
            C152263 * C7745 + C150632 * C7741 - C73638 * C7734 -
            C150632 * C7742 + C151913 * C7746) *
               C152167 * C73634) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C2161 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C2162 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
               C152329) *
              C151967 * C152370 +
          (((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
             C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560) *
                C152167 * C152366 +
            (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
               C2162 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C2161 -
           ((C150632 * C1515 - C73638 * C1493 - C150632 * C1516 +
             C151913 * C1529 + C150639 * C1513 - C73636 * C1492 -
             C150639 * C1514 + C152263 * C1528) *
                C152167 * C73634 +
            (C150632 * C1497 - C73638 * C1484 - C150632 * C1498 +
             C151913 * C1520 + C150639 * C1499 - C73636 * C1485 -
             C150639 * C1500 + C152263 * C1521) *
                C152167 * C152367 +
            (C150632 * C547 - C73638 * C529 - C150632 * C548 + C151913 * C565 +
             C150639 * C545 - C73636 * C528 - C150639 * C546 + C152263 * C564) *
                C152167 * C152366) *
               C152329) *
              C151967 * C152353 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C2161 -
           ((C74994 + C74995) * C152167 * C73634 +
            (C74996 + C74997) * C152167 * C152367 +
            (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
             C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560) *
                C152167 * C152366) *
               C2162 +
           ((C150639 * C547 - C73636 * C529 - C150639 * C548 + C152263 * C565 +
             C150632 * C549 - C73638 * C530 - C150632 * C550 + C151913 * C566) *
                C152167 * C152366 +
            (C150639 * C1497 - C73636 * C1484 - C150639 * C1498 +
             C152263 * C1520 + C150632 * C1495 - C73638 * C1483 -
             C150632 * C1496 + C151913 * C1519) *
                C152167 * C152367 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C152167 * C73634) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C2161 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C2162 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
               C152329) *
              C152373 +
          (((C74989 + C74988) * C152167 * C152366 +
            (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
               C2162 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C2161 -
           ((C75644 + C75645) * C152167 * C73634 +
            (C75641 + C75640) * C152167 * C152367 +
            (C75639 + C75638) * C152167 * C152366) *
               C152329) *
              C152357 +
          ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C2161 -
           ((C76372 + C76373) * C152167 * C73634 +
            (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
               C2162 +
           (C75647 * C152366 + (C75645 + C75644) * C152167 * C152367 +
            (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
             C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
             C150632 * C8014 + C151913 * C8020) *
                C152167 * C73634) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                       C152263 * C166 + C150632 * C152 - C73638 * C143 -
                       C150632 * C153 + C151913 * C167) *
                          C152167 * C152366 +
                      (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                         C4047 -
                     (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
                      (C150632 * C539 - C73638 * C525 - C150632 * C540 +
                       C151913 * C561 + C150639 * C541 - C73636 * C526 -
                       C150639 * C542 + C152263 * C562) *
                          C152167 * C152366) *
                         C152072) *
                        C152284 +
                    (((C74989 + C74988) * C152167 * C152366 +
                      (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
                         C152072 -
                     (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
                      (C73967 + C73966) * C152167 * C152366) *
                         C4047) *
                        C152030) *
                       C151944 +
                   ((((C150639 * C539 - C73636 * C525 - C150639 * C540 +
                       C152263 * C561 + C150632 * C537 - C73638 * C524 -
                       C150632 * C538 + C151913 * C560) *
                          C152167 * C152366 +
                      (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                         C152072 -
                     (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
                      (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                       C151913 * C168 + C150639 * C152 - C73636 * C143 -
                       C150639 * C153 + C152263 * C167) *
                          C152167 * C152366) *
                         C4047) *
                        C152284 +
                    (((C73972 + C73973) * C152167 * C152366 +
                      (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                         C4047 -
                     ((C76162 + C76163) * C152167 * C73634 +
                      (C74993 + C74992) * C152167 * C152367 +
                      (C74991 + C74990) * C152167 * C152366) *
                         C152072) *
                        C152030) *
                       C151953 +
                   ((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
                       C152263 * C168 + C150632 * C156 - C73638 * C145 -
                       C150632 * C157 + C151913 * C169) *
                          C152167 * C152366 +
                      (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
                         C4047 -
                     ((C74994 + C74995) * C152167 * C73634 +
                      (C74996 + C74997) * C152167 * C152367 +
                      (C150632 * C535 - C73638 * C523 - C150632 * C536 +
                       C151913 * C559 + C150639 * C537 - C73636 * C524 -
                       C150639 * C538 + C152263 * C560) *
                          C152167 * C152366) *
                         C152072) *
                        C152284 +
                    (((C74997 + C74996) * C152167 * C152366 +
                      (C74995 + C74994) * C152167 * C152367 +
                      (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
                       C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
                       C150632 * C2010 + C151913 * C2014) *
                          C152167 * C73634) *
                         C152072 -
                     ((C73982 + C73983) * C152167 * C73634 +
                      (C73981 + C73980) * C152167 * C152367 +
                      (C73979 + C73978) * C152167 * C152366) *
                         C4047) *
                        C152030) *
                       C3528)) /
                 (p * q * std::sqrt(p + q));
    d2ee[141] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                       C152263 * C166 + C150632 * C152 - C73638 * C143 -
                       C150632 * C153 + C151913 * C167) *
                          C152167 * C152366 +
                      (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                         C152068 -
                     (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
                      (C150632 * C539 - C73638 * C525 - C150632 * C540 +
                       C151913 * C561 + C150639 * C541 - C73636 * C526 -
                       C150639 * C542 + C152263 * C562) *
                          C152167 * C152366) *
                         C152075 +
                     ((C150639 * C543 - C73636 * C527 - C150639 * C544 +
                       C152263 * C563 + C150632 * C545 - C73638 * C528 -
                       C150632 * C546 + C151913 * C564) *
                          C152167 * C152366 +
                      (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
                         C4719) *
                        C152284 +
                    (((C74989 + C74988) * C152167 * C152366 +
                      (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
                         C152075 -
                     (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
                      (C73967 + C73966) * C152167 * C152366) *
                         C152068 -
                     ((C75644 + C75645) * C152167 * C73634 +
                      (C75641 + C75640) * C152167 * C152367 +
                      (C75639 + C75638) * C152167 * C152366) *
                         C4719) *
                        C152030) *
                       C3181 +
                   ((((C150639 * C539 - C73636 * C525 - C150639 * C540 +
                       C152263 * C561 + C150632 * C537 - C73638 * C524 -
                       C150632 * C538 + C151913 * C560) *
                          C152167 * C152366 +
                      (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                         C152075 -
                     (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
                      (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                       C151913 * C168 + C150639 * C152 - C73636 * C143 -
                       C150639 * C153 + C152263 * C167) *
                          C152167 * C152366) *
                         C152068 -
                     ((C77246 + C77247) * C152167 * C73634 +
                      (C77248 + C77249) * C152167 * C152367 +
                      (C150632 * C547 - C73638 * C529 - C150632 * C548 +
                       C151913 * C565 + C150639 * C545 - C73636 * C528 -
                       C150639 * C546 + C152263 * C564) *
                          C152167 * C152366) *
                         C4719) *
                        C152284 +
                    (((C73972 + C73973) * C152167 * C152366 +
                      (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                         C152068 -
                     ((C76162 + C76163) * C152167 * C73634 +
                      (C74993 + C74992) * C152167 * C152367 +
                      (C74991 + C74990) * C152167 * C152366) *
                         C152075 +
                     ((C77249 + C77248) * C152167 * C152366 +
                      (C77247 + C77246) * C152167 * C152367 +
                      (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
                       C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
                       C150632 * C9697 + C151913 * C9698) *
                          C152167 * C73634) *
                         C4719) *
                        C152030) *
                       C151950)) /
                 (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152167 * C152366 +
             (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                C4047 -
            (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
             (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
              C150639 * C541 - C73636 * C526 - C150639 * C542 +
              C152263 * C562) *
                 C152167 * C152366) *
                C152072) *
               C152373 +
           (((C74989 + C74988) * C152167 * C152366 +
             (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
                C152072 -
            (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
             (C73967 + C73966) * C152167 * C152366) *
                C4047) *
               C152357 +
           ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
             C75369 * C73634) *
                C4047 -
            ((C76372 + C76373) * C152167 * C73634 +
             (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
                C152072) *
               C152326) *
              C3181 +
          ((((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
              C150632 * C537 - C73638 * C524 - C150632 * C538 +
              C151913 * C560) *
                 C152167 * C152366 +
             (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                C152072 -
            (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152167 * C152366) *
                C4047) *
               C152373 +
           (((C73972 + C73973) * C152167 * C152366 +
             (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                C4047 -
            ((C76162 + C76163) * C152167 * C73634 +
             (C74993 + C74992) * C152167 * C152367 +
             (C74991 + C74990) * C152167 * C152366) *
                C152072) *
               C152357 +
           ((C76157 * C152366 + (C76163 + C76162) * C152167 * C152367 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152167 * C73634) *
                C152072 -
            ((C75856 + C75857) * C152167 * C73634 +
             (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C4047 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152072) *
              C151967 * C152379 +
          (((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
             C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560) *
                C152167 * C152366 +
            (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
               C152072 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C4047) *
              C151967 * C152372 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C4047 -
           ((C74994 + C74995) * C152167 * C73634 +
            (C74996 + C74997) * C152167 * C152367 +
            (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
             C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560) *
                C152167 * C152366) *
               C152072) *
              C151967 * C152355 +
          (((C150639 * C535 - C73636 * C523 - C150639 * C536 + C152263 * C559 +
             C150632 * C551 - C73638 * C531 - C150632 * C552 + C151913 * C567) *
                C152167 * C152366 +
            (C150639 * C1053 - C73636 * C1044 - C150639 * C1054 +
             C152263 * C1062 + C150632 * C1055 - C73638 * C1045 -
             C150632 * C1056 + C151913 * C1063) *
                C152167 * C152367 +
            (C150639 * C1503 - C73636 * C1487 - C150639 * C1504 +
             C152263 * C1523 + C150632 * C1866 - C73638 * C1865 -
             C150632 * C1867 + C151913 * C1868) *
                C152167 * C73634) *
               C152072 -
           ((C74429 + C74428) * C152167 * C73634 +
            (C74427 + C74426) * C152167 * C152367 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152167 * C152366) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C152381 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152378 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
               C152365 -
           ((C77662 + C77663) * C152167 * C73634 +
            (C77664 + C77665) * C152167 * C152367 +
            (C150632 * C2409 - C73638 * C2399 - C150632 * C2410 +
             C151913 * C2423 + C150639 * C2411 - C73636 * C2400 -
             C150639 * C2412 + C152263 * C2424) *
                C152167 * C152366) *
               C152342) *
              C151967 * C3181 +
          (((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
             C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560) *
                C152167 * C152366 +
            (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
               C152378 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C152381 -
           ((C77246 + C77247) * C152167 * C73634 +
            (C77248 + C77249) * C152167 * C152367 +
            (C150632 * C547 - C73638 * C529 - C150632 * C548 + C151913 * C565 +
             C150639 * C545 - C73636 * C528 - C150639 * C546 + C152263 * C564) *
                C152167 * C152366) *
               C152365 +
           ((C150639 * C2409 - C73636 * C2399 - C150639 * C2410 +
             C152263 * C2423 + C150632 * C2407 - C73638 * C2398 -
             C150632 * C2408 + C151913 * C2422) *
                C152167 * C152366 +
            (C150639 * C2901 - C73636 * C2896 - C150639 * C2902 +
             C152263 * C2908 + C150632 * C2903 - C73638 * C2897 -
             C150632 * C2904 + C151913 * C2909) *
                C152167 * C152367 +
            (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
             C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
             C150632 * C9923 + C151913 * C9924) *
                C152167 * C73634) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C152068 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152075 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
               C4719) *
              C151967 * C151944 +
          (((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
             C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560) *
                C152167 * C152366 +
            (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
               C152075 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C152068 -
           ((C77246 + C77247) * C152167 * C73634 +
            (C77248 + C77249) * C152167 * C152367 +
            (C150632 * C547 - C73638 * C529 - C150632 * C548 + C151913 * C565 +
             C150639 * C545 - C73636 * C528 - C150639 * C546 + C152263 * C564) *
                C152167 * C152366) *
               C4719) *
              C151967 * C151953 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C152068 -
           ((C74994 + C74995) * C152167 * C73634 +
            (C74996 + C74997) * C152167 * C152367 +
            (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
             C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560) *
                C152167 * C152366) *
               C152075 +
           ((C150639 * C547 - C73636 * C529 - C150639 * C548 + C152263 * C565 +
             C150632 * C549 - C73638 * C530 - C150632 * C550 + C151913 * C566) *
                C152167 * C152366 +
            (C150639 * C1497 - C73636 * C1484 - C150639 * C1498 +
             C152263 * C1520 + C150632 * C1495 - C73638 * C1483 -
             C150632 * C1496 + C151913 * C1519) *
                C152167 * C152367 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C152167 * C73634) *
               C4719) *
              C151967 * C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C4047 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152072) *
              C151967 * C152379 +
          (((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
             C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560) *
                C152167 * C152366 +
            (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
               C152072 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C4047) *
              C151967 * C152372 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C4047 -
           ((C74994 + C74995) * C152167 * C73634 +
            (C74996 + C74997) * C152167 * C152367 +
            (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
             C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560) *
                C152167 * C152366) *
               C152072) *
              C151967 * C152355 +
          (((C150639 * C535 - C73636 * C523 - C150639 * C536 + C152263 * C559 +
             C150632 * C551 - C73638 * C531 - C150632 * C552 + C151913 * C567) *
                C152167 * C152366 +
            (C150639 * C1053 - C73636 * C1044 - C150639 * C1054 +
             C152263 * C1062 + C150632 * C1055 - C73638 * C1045 -
             C150632 * C1056 + C151913 * C1063) *
                C152167 * C152367 +
            (C150639 * C1503 - C73636 * C1487 - C150639 * C1504 +
             C152263 * C1523 + C150632 * C1866 - C73638 * C1865 -
             C150632 * C1867 + C151913 * C1868) *
                C152167 * C73634) *
               C152072 -
           ((C74429 + C74428) * C152167 * C73634 +
            (C74427 + C74426) * C152167 * C152367 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152167 * C152366) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152167 * C152366 +
             (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                C4047 -
            (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
             (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
              C150639 * C541 - C73636 * C526 - C150639 * C542 +
              C152263 * C562) *
                 C152167 * C152366) *
                C152072) *
               C152373 +
           (((C74989 + C74988) * C152167 * C152366 +
             (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
                C152072 -
            (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
             (C73967 + C73966) * C152167 * C152366) *
                C4047) *
               C152357 +
           ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
             C75369 * C73634) *
                C4047 -
            ((C76372 + C76373) * C152167 * C73634 +
             (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
                C152072) *
               C152326) *
              C3181 +
          ((((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
              C150632 * C537 - C73638 * C524 - C150632 * C538 +
              C151913 * C560) *
                 C152167 * C152366 +
             (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                C152072 -
            (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152167 * C152366) *
                C4047) *
               C152373 +
           (((C73972 + C73973) * C152167 * C152366 +
             (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                C4047 -
            ((C76162 + C76163) * C152167 * C73634 +
             (C74993 + C74992) * C152167 * C152367 +
             (C74991 + C74990) * C152167 * C152366) *
                C152072) *
               C152357 +
           ((C76157 * C152366 + (C76163 + C76162) * C152167 * C152367 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152167 * C73634) *
                C152072 -
            ((C75856 + C75857) * C152167 * C73634 +
             (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C152284 -
           ((C73970 + C73971) * C152167 * C73634 +
            (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C152030) *
              C703 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 +
            (C73976 + C73977) * C152167 * C73634) *
               C151985 * C152030 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C152284) *
              C704 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C151985 * C152284 -
           ((C73982 + C73983) * C152167 * C73634 +
            (C73981 + C73980) * C152167 * C152367 +
            (C73979 + C73978) * C152167 * C152366) *
               C151985 * C152030) *
              C705 +
          (((C74426 + C74427) * C152167 * C152366 +
            (C74428 + C74429) * C152167 * C152367 +
            (C150639 * C1313 - C73636 * C1305 - C150639 * C1314 +
             C152263 * C1329 + C150632 * C1668 - C73638 * C1667 -
             C150632 * C1669 + C151913 * C1670) *
                C152167 * C73634) *
               C151985 * C152030 -
           ((C74429 + C74428) * C152167 * C73634 +
            (C74427 + C74426) * C152167 * C152367 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152167 * C152366) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C1661 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C1662 +
           (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C151985 * C1663 -
           ((C75366 + C75367) * C152167 * C73634 +
            (C75365 + C75364) * C152167 * C152367 + C75355 * C152366) *
               C151985 * C152336) *
              C152270 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
               C151985 * C1662 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C1661 -
           ((C75856 + C75857) * C152167 * C73634 +
            (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
               C151985 * C1663 +
           (C75851 * C152366 + (C75857 + C75856) * C152167 * C152367 +
            (C150639 * C7735 - C73636 * C7731 - C150639 * C7736 +
             C152263 * C7743 + C150632 * C8276 - C73638 * C8275 -
             C150632 * C8277 + C151913 * C8278) *
                C152167 * C73634) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152167 * C152366 +
             (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                C152285 -
            ((C74986 + C74987) * C152167 * C73634 +
             (C74988 + C74989) * C152167 * C152367 +
             (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
              C150639 * C541 - C73636 * C526 - C150639 * C542 +
              C152263 * C562) *
                 C152167 * C152366) *
                C152072) *
               C152284 +
           (((C74989 + C74988) * C152167 * C152366 +
             (C74987 + C74986) * C152167 * C152367 +
             (C150639 * C2003 - C73636 * C1999 - C150639 * C2004 +
              C152263 * C2011 + C150632 * C2005 - C73638 * C2000 -
              C150632 * C2006 + C151913 * C2012) *
                 C152167 * C73634) *
                C152072 -
            ((C73970 + C73971) * C152167 * C73634 +
             (C73969 + C73968) * C152167 * C152367 +
             (C73967 + C73966) * C152167 * C152366) *
                C152285) *
               C152030) *
              C323 +
          ((((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
              C150632 * C537 - C73638 * C524 - C150632 * C538 +
              C151913 * C560) *
                 C152167 * C152366 +
             (C74990 + C74991) * C152167 * C152367 +
             (C74992 + C74993) * C152167 * C73634) *
                C152072 -
            (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152167 * C152366) *
                C152285) *
               C152284 +
           (((C73972 + C73973) * C152167 * C152366 +
             (C73974 + C73975) * C152167 * C152367 +
             (C73976 + C73977) * C152167 * C73634) *
                C152285 -
            ((C150632 * C2007 - C73638 * C2001 - C150632 * C2008 +
              C151913 * C2013 + C150639 * C2005 - C73636 * C2000 -
              C150639 * C2006 + C152263 * C2012) *
                 C152167 * C73634 +
             (C74993 + C74992) * C152167 * C152367 +
             (C74991 + C74990) * C152167 * C152366) *
                C152072) *
               C152030) *
              C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152167 * C152366 +
             (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
                C152285 -
            ((C74994 + C74995) * C152167 * C73634 +
             (C74996 + C74997) * C152167 * C152367 +
             (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
              C150639 * C537 - C73636 * C524 - C150639 * C538 +
              C152263 * C560) *
                 C152167 * C152366) *
                C152072) *
               C152284 +
           (((C74997 + C74996) * C152167 * C152366 +
             (C74995 + C74994) * C152167 * C152367 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152167 * C73634) *
                C152072 -
            ((C73982 + C73983) * C152167 * C73634 +
             (C73981 + C73980) * C152167 * C152367 +
             (C73979 + C73978) * C152167 * C152366) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C152285 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152072) *
              C1661 +
          (((C74989 + C74988) * C152167 * C152366 +
            (C74987 + C74986) * C152167 * C152367 + C76367 * C73634) *
               C152072 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C152285) *
              C1662 +
          ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C152285 -
           ((C76372 + C76373) * C152167 * C73634 +
            (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
               C152072) *
              C1663 +
          ((C76367 * C152366 + (C76373 + C76372) * C152167 * C152367 +
            (C150639 * C8801 - C73636 * C8799 - C150639 * C8802 +
             C152263 * C8805 + C150632 * C8803 - C73638 * C8800 -
             C150632 * C8804 + C151913 * C8806) *
                C152167 * C73634) *
               C152072 -
           ((C75366 + C75367) * C152167 * C73634 +
            (C75365 + C75364) * C152167 * C152367 + C75355 * C152366) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C152373 -
           ((C73970 + C73971) * C152167 * C73634 +
            (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C152357 +
           (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            (C150639 * C1321 - C73636 * C1309 - C150639 * C1322 +
             C152263 * C1333 + C150632 * C1323 - C73638 * C1310 -
             C150632 * C1324 + C151913 * C1334) *
                C152167 * C73634) *
               C151985 * C152326) *
              C323 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 +
            (C73976 + C73977) * C152167 * C73634) *
               C151985 * C152357 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C152373 -
           ((C150632 * C1325 - C73638 * C1311 - C150632 * C1326 +
             C151913 * C1335 + C150639 * C1323 - C73636 * C1310 -
             C150639 * C1324 + C152263 * C1334) *
                C152167 * C73634 +
            (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
               C151985 * C152326) *
              C324 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C151985 * C152373 -
           ((C73982 + C73983) * C152167 * C73634 +
            (C73981 + C73980) * C152167 * C152367 +
            (C73979 + C73978) * C152167 * C152366) *
               C151985 * C152357 +
           (C73989 * C152366 + (C73983 + C73982) * C152167 * C152367 +
            (C150639 * C1325 - C73636 * C1311 - C150639 * C1326 +
             C152263 * C1335 + C150632 * C1327 - C73638 * C1312 -
             C150632 * C1328 + C151913 * C1336) *
                C152167 * C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152167 * C152366 +
           (C150639 * C344 - C73636 * C329 - C150639 * C345 + C152263 * C365 +
            C150632 * C342 - C73638 * C328 - C150632 * C343 + C151913 * C364) *
               C152167 * C152367 +
           (C150639 * C346 - C73636 * C330 - C150639 * C347 + C152263 * C366 +
            C150632 * C348 - C73638 * C331 - C150632 * C349 + C151913 * C367) *
               C152167 * C73634) *
              C151985 * C151967 * C129 -
          ((C150632 * C350 - C73638 * C332 - C150632 * C351 + C151913 * C368 +
            C150639 * C348 - C73636 * C331 - C150639 * C349 + C152263 * C367) *
               C152167 * C73634 +
           (C150632 * C340 - C73638 * C327 - C150632 * C341 + C151913 * C363 +
            C150639 * C342 - C73636 * C328 - C150639 * C343 + C152263 * C364) *
               C152167 * C152367 +
           (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
            C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
               C152167 * C152366) *
              C151985 * C151967 * C130 +
          ((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
            C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
               C152167 * C152366 +
           (C150639 * C340 - C73636 * C327 - C150639 * C341 + C152263 * C363 +
            C150632 * C338 - C73638 * C326 - C150632 * C339 + C151913 * C362) *
               C152167 * C152367 +
           (C150639 * C350 - C73636 * C332 - C150639 * C351 + C152263 * C368 +
            C150632 * C352 - C73638 * C333 - C150632 * C353 + C151913 * C369) *
               C152167 * C73634) *
              C151985 * C151967 * C131 -
          ((C150632 * C356 - C73638 * C335 - C150632 * C357 + C151913 * C371 +
            C150639 * C352 - C73636 * C333 - C150639 * C353 + C152263 * C369) *
               C152167 * C73634 +
           (C150632 * C354 - C73638 * C334 - C150632 * C355 + C151913 * C370 +
            C150639 * C338 - C73636 * C326 - C150639 * C339 + C152263 * C362) *
               C152167 * C152367 +
           (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
            C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
               C152167 * C152366) *
              C151985 * C151967 * C132 +
          ((C150639 * C158 - C73636 * C146 - C150639 * C159 + C152263 * C170 +
            C150632 * C160 - C73638 * C147 - C150632 * C161 + C151913 * C171) *
               C152167 * C152366 +
           (C150639 * C354 - C73636 * C334 - C150639 * C355 + C152263 * C370 +
            C150632 * C358 - C73638 * C336 - C150632 * C359 + C151913 * C372) *
               C152167 * C152367 +
           (C150639 * C356 - C73636 * C335 - C150639 * C357 + C152263 * C371 +
            C150632 * C360 - C73638 * C337 - C150632 * C361 + C151913 * C373) *
               C152167 * C73634) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C152374 -
           ((C150632 * C1507 - C73638 * C1489 - C150632 * C1508 +
             C151913 * C1525 + C150639 * C1509 - C73636 * C1490 -
             C150639 * C1510 + C152263 * C1526) *
                C152167 * C73634 +
            (C150632 * C1049 - C73638 * C1042 - C150632 * C1050 +
             C151913 * C1060 + C150639 * C1047 - C73636 * C1041 -
             C150639 * C1048 + C152263 * C1059) *
                C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152359 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C150639 * C1501 - C73636 * C1486 - C150639 * C1502 +
             C152263 * C1522 + C150632 * C1499 - C73638 * C1485 -
             C150632 * C1500 + C151913 * C1521) *
                C152167 * C152367 +
            (C150639 * C1511 - C73636 * C1491 - C150639 * C1512 +
             C152263 * C1527 + C150632 * C1513 - C73638 * C1492 -
             C150632 * C1514 + C151913 * C1528) *
                C152167 * C73634) *
               C152329) *
              C151967 * C323 +
          (((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
             C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560) *
                C152167 * C152366 +
            (C150639 * C1049 - C73636 * C1042 - C150639 * C1050 +
             C152263 * C1060 + C150632 * C1051 - C73638 * C1043 -
             C150632 * C1052 + C151913 * C1061) *
                C152167 * C152367 +
            (C150639 * C1507 - C73636 * C1489 - C150639 * C1508 +
             C152263 * C1525 + C150632 * C1505 - C73638 * C1488 -
             C150632 * C1506 + C151913 * C1524) *
                C152167 * C73634) *
               C152359 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C152374 -
           ((C150632 * C1515 - C73638 * C1493 - C150632 * C1516 +
             C151913 * C1529 + C150639 * C1513 - C73636 * C1492 -
             C150639 * C1514 + C152263 * C1528) *
                C152167 * C73634 +
            (C150632 * C1497 - C73638 * C1484 - C150632 * C1498 +
             C151913 * C1520 + C150639 * C1499 - C73636 * C1485 -
             C150639 * C1500 + C152263 * C1521) *
                C152167 * C152367 +
            (C150632 * C547 - C73638 * C529 - C150632 * C548 + C151913 * C565 +
             C150639 * C545 - C73636 * C528 - C150639 * C546 + C152263 * C564) *
                C152167 * C152366) *
               C152329) *
              C151967 * C324 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C152374 -
           ((C150632 * C1503 - C73638 * C1487 - C150632 * C1504 +
             C151913 * C1523 + C150639 * C1505 - C73636 * C1488 -
             C150639 * C1506 + C152263 * C1524) *
                C152167 * C73634 +
            (C150632 * C1053 - C73638 * C1044 - C150632 * C1054 +
             C151913 * C1062 + C150639 * C1051 - C73636 * C1043 -
             C150639 * C1052 + C152263 * C1061) *
                C152167 * C152367 +
            (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
             C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560) *
                C152167 * C152366) *
               C152359 +
           ((C150639 * C547 - C73636 * C529 - C150639 * C548 + C152263 * C565 +
             C150632 * C549 - C73638 * C530 - C150632 * C550 + C151913 * C566) *
                C152167 * C152366 +
            (C150639 * C1497 - C73636 * C1484 - C150639 * C1498 +
             C152263 * C1520 + C150632 * C1495 - C73638 * C1483 -
             C150632 * C1496 + C151913 * C1519) *
                C152167 * C152367 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C152167 * C73634) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C1211 -
           ((C73970 + C73971) * C152167 * C73634 +
            (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C1212 +
           (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            (C150639 * C1321 - C73636 * C1309 - C150639 * C1322 +
             C152263 * C1333 + C150632 * C1323 - C73638 * C1310 -
             C150632 * C1324 + C151913 * C1334) *
                C152167 * C73634) *
               C151985 * C152326) *
              C152370 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 +
            (C73976 + C73977) * C152167 * C73634) *
               C151985 * C1212 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C1211 -
           ((C150632 * C1325 - C73638 * C1311 - C150632 * C1326 +
             C151913 * C1335 + C150639 * C1323 - C73636 * C1310 -
             C150639 * C1324 + C152263 * C1334) *
                C152167 * C73634 +
            (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
               C151985 * C152326) *
              C152353 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C151985 * C1211 -
           ((C73982 + C73983) * C152167 * C73634 +
            (C73981 + C73980) * C152167 * C152367 +
            (C73979 + C73978) * C152167 * C152366) *
               C151985 * C1212 +
           (C73989 * C152366 + (C73983 + C73982) * C152167 * C152367 +
            (C150639 * C1325 - C73636 * C1311 - C150639 * C1326 +
             C152263 * C1335 + C150632 * C1327 - C73638 * C1312 -
             C150632 * C1328 + C151913 * C1336) *
                C152167 * C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152167 * C152366 +
           (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
              C151985 * C1299 -
          (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
           (C73967 + C73966) * C152167 * C152366) *
              C151985 * C1300 +
          (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
           C75369 * C73634) *
              C151985 * C1301 -
          ((C75366 + C75367) * C152167 * C73634 +
           (C75365 + C75364) * C152167 * C152367 + C75355 * C152366) *
              C151985 * C1302 +
          (C75369 * C152366 + (C75367 + C75366) * C152167 * C152367 +
           (C150639 * C7739 - C73636 * C7733 - C150639 * C7740 +
            C152263 * C7745 + C150632 * C7741 - C73638 * C7734 -
            C150632 * C7742 + C151913 * C7746) *
               C152167 * C73634) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C152374 -
           (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152359 +
           ((C150639 * C543 - C73636 * C527 - C150639 * C544 + C152263 * C563 +
             C150632 * C545 - C73638 * C528 - C150632 * C546 + C151913 * C564) *
                C152167 * C152366 +
            (C75638 + C75639) * C152167 * C152367 + C75647 * C73634) *
               C152329) *
              C1211 +
          (((C74989 + C74988) * C152167 * C152366 +
            (C74987 + C74986) * C152167 * C152367 +
            (C75642 + C75643) * C152167 * C73634) *
               C152359 -
           (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C152374 -
           ((C75644 + C75645) * C152167 * C73634 +
            (C75641 + C75640) * C152167 * C152367 +
            (C75639 + C75638) * C152167 * C152366) *
               C152329) *
              C1212 +
          ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            C75369 * C73634) *
               C152374 -
           ((C150632 * C8007 - C73638 * C7999 - C150632 * C8008 +
             C151913 * C8017 + C150639 * C8009 - C73636 * C8000 -
             C150639 * C8010 + C152263 * C8018) *
                C152167 * C73634 +
            (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
               C152359 +
           (C75647 * C152366 + (C75645 + C75644) * C152167 * C152367 +
            (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
             C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
             C150632 * C8014 + C151913 * C8020) *
                C152167 * C73634) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C152285 -
           ((C150632 * C1507 - C73638 * C1489 - C150632 * C1508 +
             C151913 * C1525 + C150639 * C1509 - C73636 * C1490 -
             C150639 * C1510 + C152263 * C1526) *
                C152167 * C73634 +
            (C150632 * C1049 - C73638 * C1042 - C150632 * C1050 +
             C151913 * C1060 + C150639 * C1047 - C73636 * C1041 -
             C150639 * C1048 + C152263 * C1059) *
                C152167 * C152367 +
            (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
             C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562) *
                C152167 * C152366) *
               C152072) *
              C151967 * C703 +
          (((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
             C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560) *
                C152167 * C152366 +
            (C150639 * C1049 - C73636 * C1042 - C150639 * C1050 +
             C152263 * C1060 + C150632 * C1051 - C73638 * C1043 -
             C150632 * C1052 + C151913 * C1061) *
                C152167 * C152367 +
            (C150639 * C1507 - C73636 * C1489 - C150639 * C1508 +
             C152263 * C1525 + C150632 * C1505 - C73638 * C1488 -
             C150632 * C1506 + C151913 * C1524) *
                C152167 * C73634) *
               C152072 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C152285) *
              C151967 * C704 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C152285 -
           ((C150632 * C1503 - C73638 * C1487 - C150632 * C1504 +
             C151913 * C1523 + C150639 * C1505 - C73636 * C1488 -
             C150639 * C1506 + C152263 * C1524) *
                C152167 * C73634 +
            (C150632 * C1053 - C73638 * C1044 - C150632 * C1054 +
             C151913 * C1062 + C150639 * C1051 - C73636 * C1043 -
             C150639 * C1052 + C152263 * C1061) *
                C152167 * C152367 +
            (C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559 +
             C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560) *
                C152167 * C152366) *
               C152072) *
              C151967 * C705 +
          (((C150639 * C535 - C73636 * C523 - C150639 * C536 + C152263 * C559 +
             C150632 * C551 - C73638 * C531 - C150632 * C552 + C151913 * C567) *
                C152167 * C152366 +
            (C150639 * C1053 - C73636 * C1044 - C150639 * C1054 +
             C152263 * C1062 + C150632 * C1055 - C73638 * C1045 -
             C150632 * C1056 + C151913 * C1063) *
                C152167 * C152367 +
            (C150639 * C1503 - C73636 * C1487 - C150639 * C1504 +
             C152263 * C1523 + C150632 * C1866 - C73638 * C1865 -
             C150632 * C1867 + C151913 * C1868) *
                C152167 * C73634) *
               C152072 -
           ((C74429 + C74428) * C152167 * C73634 +
            (C74427 + C74426) * C152167 * C152367 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152167 * C152366) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152167 * C152366 +
             (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
                C152285 -
            (C75621 * C73634 + (C74988 + C74989) * C152167 * C152367 +
             (C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561 +
              C150639 * C541 - C73636 * C526 - C150639 * C542 +
              C152263 * C562) *
                 C152167 * C152366) *
                C152072) *
               C1211 +
           (((C74989 + C74988) * C152167 * C152366 +
             (C74987 + C74986) * C152167 * C152367 +
             (C75642 + C75643) * C152167 * C73634) *
                C152072 -
            (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
             (C73967 + C73966) * C152167 * C152366) *
                C152285) *
               C1212 +
           ((C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
             C75369 * C73634) *
                C152285 -
            ((C150632 * C8007 - C73638 * C7999 - C150632 * C8008 +
              C151913 * C8017 + C150639 * C8009 - C73636 * C8000 -
              C150639 * C8010 + C152263 * C8018) *
                 C152167 * C73634 +
             (C75643 + C75642) * C152167 * C152367 + C75621 * C152366) *
                C152072) *
               C152326) *
              C152270 +
          ((((C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561 +
              C150632 * C537 - C73638 * C524 - C150632 * C538 +
              C151913 * C560) *
                 C152167 * C152366 +
             (C74990 + C74991) * C152167 * C152367 + C76157 * C73634) *
                C152072 -
            (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152167 * C152366) *
                C152285) *
               C1211 +
           (((C73972 + C73973) * C152167 * C152366 +
             (C73974 + C73975) * C152167 * C152367 + C75851 * C73634) *
                C152285 -
            ((C76162 + C76163) * C152167 * C73634 +
             (C74993 + C74992) * C152167 * C152367 +
             (C74991 + C74990) * C152167 * C152366) *
                C152072) *
               C1212 +
           ((C76157 * C152366 + (C76163 + C76162) * C152167 * C152367 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152167 * C73634) *
                C152072 -
            ((C75856 + C75857) * C152167 * C73634 +
             (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152167 * C152366 +
           (C150639 * C344 - C73636 * C329 - C150639 * C345 + C152263 * C365 +
            C150632 * C342 - C73638 * C328 - C150632 * C343 + C151913 * C364) *
               C152167 * C152367 +
           (C150639 * C346 - C73636 * C330 - C150639 * C347 + C152263 * C366 +
            C150632 * C348 - C73638 * C331 - C150632 * C349 + C151913 * C367) *
               C152167 * C73634) *
              C151985 * C151967 * C129 -
          ((C150632 * C350 - C73638 * C332 - C150632 * C351 + C151913 * C368 +
            C150639 * C348 - C73636 * C331 - C150639 * C349 + C152263 * C367) *
               C152167 * C73634 +
           (C150632 * C340 - C73638 * C327 - C150632 * C341 + C151913 * C363 +
            C150639 * C342 - C73636 * C328 - C150639 * C343 + C152263 * C364) *
               C152167 * C152367 +
           (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
            C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
               C152167 * C152366) *
              C151985 * C151967 * C130 +
          ((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
            C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
               C152167 * C152366 +
           (C150639 * C340 - C73636 * C327 - C150639 * C341 + C152263 * C363 +
            C150632 * C338 - C73638 * C326 - C150632 * C339 + C151913 * C362) *
               C152167 * C152367 +
           (C150639 * C350 - C73636 * C332 - C150639 * C351 + C152263 * C368 +
            C150632 * C352 - C73638 * C333 - C150632 * C353 + C151913 * C369) *
               C152167 * C73634) *
              C151985 * C151967 * C131 -
          ((C150632 * C356 - C73638 * C335 - C150632 * C357 + C151913 * C371 +
            C150639 * C352 - C73636 * C333 - C150639 * C353 + C152263 * C369) *
               C152167 * C73634 +
           (C150632 * C354 - C73638 * C334 - C150632 * C355 + C151913 * C370 +
            C150639 * C338 - C73636 * C326 - C150639 * C339 + C152263 * C362) *
               C152167 * C152367 +
           (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
            C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
               C152167 * C152366) *
              C151985 * C151967 * C132 +
          ((C150639 * C158 - C73636 * C146 - C150639 * C159 + C152263 * C170 +
            C150632 * C160 - C73638 * C147 - C150632 * C161 + C151913 * C171) *
               C152167 * C152366 +
           (C150639 * C354 - C73636 * C334 - C150639 * C355 + C152263 * C370 +
            C150632 * C358 - C73638 * C336 - C150632 * C359 + C151913 * C372) *
               C152167 * C152367 +
           (C150639 * C356 - C73636 * C335 - C150639 * C357 + C152263 * C371 +
            C150632 * C360 - C73638 * C337 - C150632 * C361 + C151913 * C373) *
               C152167 * C73634) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C152373 -
           ((C73970 + C73971) * C152167 * C73634 +
            (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C152357 +
           (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            (C150639 * C1321 - C73636 * C1309 - C150639 * C1322 +
             C152263 * C1333 + C150632 * C1323 - C73638 * C1310 -
             C150632 * C1324 + C151913 * C1334) *
                C152167 * C73634) *
               C151985 * C152326) *
              C323 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 +
            (C73976 + C73977) * C152167 * C73634) *
               C151985 * C152357 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C152373 -
           ((C150632 * C1325 - C73638 * C1311 - C150632 * C1326 +
             C151913 * C1335 + C150639 * C1323 - C73636 * C1310 -
             C150639 * C1324 + C152263 * C1334) *
                C152167 * C73634 +
            (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
               C151985 * C152326) *
              C324 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C151985 * C152373 -
           ((C73982 + C73983) * C152167 * C73634 +
            (C73981 + C73980) * C152167 * C152367 +
            (C73979 + C73978) * C152167 * C152366) *
               C151985 * C152357 +
           (C73989 * C152366 + (C73983 + C73982) * C152167 * C152367 +
            (C150639 * C1325 - C73636 * C1311 - C150639 * C1326 +
             C152263 * C1335 + C150632 * C1327 - C73638 * C1312 -
             C150632 * C1328 + C151913 * C1336) *
                C152167 * C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152167 * C152366 +
            (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
               C151985 * C1211 -
           ((C73970 + C73971) * C152167 * C73634 +
            (C73969 + C73968) * C152167 * C152367 +
            (C73967 + C73966) * C152167 * C152366) *
               C151985 * C1212 +
           (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
            (C150639 * C1321 - C73636 * C1309 - C150639 * C1322 +
             C152263 * C1333 + C150632 * C1323 - C73638 * C1310 -
             C150632 * C1324 + C151913 * C1334) *
                C152167 * C73634) *
               C151985 * C152326) *
              C152370 +
          (((C73972 + C73973) * C152167 * C152366 +
            (C73974 + C73975) * C152167 * C152367 +
            (C73976 + C73977) * C152167 * C73634) *
               C151985 * C1212 -
           (C73988 * C73634 + (C73973 + C73972) * C152167 * C152367 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152167 * C152366) *
               C151985 * C1211 -
           ((C150632 * C1325 - C73638 * C1311 - C150632 * C1326 +
             C151913 * C1335 + C150639 * C1323 - C73636 * C1310 -
             C150639 * C1324 + C152263 * C1334) *
                C152167 * C73634 +
            (C73977 + C73976) * C152167 * C152367 + C73988 * C152366) *
               C151985 * C152326) *
              C152353 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152167 * C152366 +
            (C73978 + C73979) * C152167 * C152367 + C73989 * C73634) *
               C151985 * C1211 -
           ((C73982 + C73983) * C152167 * C73634 +
            (C73981 + C73980) * C152167 * C152367 +
            (C73979 + C73978) * C152167 * C152366) *
               C151985 * C1212 +
           (C73989 * C152366 + (C73983 + C73982) * C152167 * C152367 +
            (C150639 * C1325 - C73636 * C1311 - C150639 * C1326 +
             C152263 * C1335 + C150632 * C1327 - C73638 * C1312 -
             C150632 * C1328 + C151913 * C1336) *
                C152167 * C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152167 * C152366 +
           (C73966 + C73967) * C152167 * C152367 + C73987 * C73634) *
              C151985 * C1299 -
          (C75355 * C73634 + (C73969 + C73968) * C152167 * C152367 +
           (C73967 + C73966) * C152167 * C152366) *
              C151985 * C1300 +
          (C73987 * C152366 + (C73971 + C73970) * C152167 * C152367 +
           C75369 * C73634) *
              C151985 * C1301 -
          ((C75366 + C75367) * C152167 * C73634 +
           (C75365 + C75364) * C152167 * C152367 + C75355 * C152366) *
              C151985 * C1302 +
          (C75369 * C152366 + (C75367 + C75366) * C152167 * C152367 +
           (C150639 * C7739 - C73636 * C7733 - C150639 * C7740 +
            C152263 * C7745 + C150632 * C7741 - C73638 * C7734 -
            C150632 * C7742 + C151913 * C7746) *
               C152167 * C73634) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C152026 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C152033 +
           (C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C151985 * C3525) *
              C151944 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            C95178 * C73634) *
               C151985 * C152033 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C152026 -
           ((C95179 + C95180) * C73634 + (C93481 + C93480) * C152367 +
            C93489 * C152366) *
               C151985 * C3525) *
              C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C151985 * C152026 -
           ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
            (C93483 + C93482) * C152366) *
               C151985 * C152033 +
           (C93490 * C152366 + (C93487 + C93486) * C152367 +
            (C59653 * C152302 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C73634) *
               C151985 * C3525) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C152285 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152072) *
               C152026 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             C95668 * C73634) *
                C152072 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C152285) *
               C152033 +
           ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
                C152285 -
            ((C95669 + C95670) * C73634 + (C94980 + C94979) * C152367 +
             C94974 * C152366) *
                C152072) *
               C3525) *
              C3181 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152072 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C152285) *
               C152026 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C152285 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152072) *
               C152033 +
           ((C95471 * C152366 + (C95473 + C95472) * C152367 +
             (C61138 * C152302 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C73634) *
                C152072 -
            ((C95179 + C95180) * C73634 + (C93481 + C93480) * C152367 +
             C93489 * C152366) *
                C152285) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C152380 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C152376 +
           (C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C151985 * C152362 -
           ((C94753 + C94754) * C73634 + (C94752 + C94751) * C152367 +
            C94750 * C152366) *
               C151985 * C152336) *
              C3181 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            C95178 * C73634) *
               C151985 * C152376 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C152380 -
           ((C95179 + C95180) * C73634 + (C93481 + C93480) * C152367 +
            C93489 * C152366) *
               C151985 * C152362 +
           (C95178 * C152366 + (C95180 + C95179) * C152367 +
            (C60936 * C152302 + (C59421 * C8803 - C59422 * C8800 -
                                 C59421 * C8804 + C151908 * C8806) *
                                    C152231) *
                C73634) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C3041 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C152030) *
              C152379 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            C95178 * C73634) *
               C151985 * C152030 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C3041) *
              C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C151985 * C3041 -
           ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
            (C93483 + C93482) * C152366) *
               C151985 * C152030) *
              C152355 +
          (((C93903 + C93904) * C152366 + (C93905 + C93913) * C152367 +
            (C59962 * C152302 + (C59421 * C2009 - C59422 * C2002 -
                                 C59421 * C2010 + C151908 * C2014) *
                                    C152231) *
                C73634) *
               C151985 * C152030 -
           ((C93913 + C93905) * C73634 + (C93904 + C93903) * C152367 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152302) *
                C152366) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C152374 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152359 +
            ((C65787 * C152302 + C65788 * C152231) * C152366 +
             (C94975 + C94976) * C152367 + C94983 * C73634) *
                C152329) *
               C3041 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             C95668 * C73634) *
                C152359 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C152374 -
            ((C94981 + C94982) * C73634 + (C94978 + C94977) * C152367 +
             (C94976 + C94975) * C152366) *
                C152329) *
               C152030) *
              C3181 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152359 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C152374 -
            ((C96519 + C96520) * C73634 + (C96521 + C96522) * C152367 +
             (C65791 * C152231 + C65790 * C152302) * C152366) *
                C152329) *
               C3041 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C152374 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152359 +
            ((C96522 + C96521) * C152366 + (C96520 + C96519) * C152367 +
             (C61872 * C152302 + (C59421 * C10123 - C59422 * C10120 -
                                  C59421 * C10124 + C151908 * C10126) *
                                     C152231) *
                 C73634) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C152285 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152072) *
               C3041 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             C95668 * C73634) *
                C152072 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C152285) *
               C152030) *
              C151944 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152072 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C152285) *
               C3041 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C152285 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152072) *
               C152030) *
              C151953 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C152302 +
              C65793 * C152231) *
                 C152366 +
             (C93482 + C93483) * C152367 + C93490 * C73634) *
                C152285 -
            ((C94406 + C94407) * C73634 + (C94408 + C94409) * C152367 +
             (C65794 * C152231 + C65793 * C152302) * C152366) *
                C152072) *
               C3041 +
           (((C94409 + C94408) * C152366 + (C94407 + C94406) * C152367 +
             (C60350 * C152302 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C73634) *
                C152072 -
            ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
             (C93483 + C93482) * C152366) *
                C152285) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C3041 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C152030) *
              C152379 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            C95178 * C73634) *
               C151985 * C152030 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C3041) *
              C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C151985 * C3041 -
           ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
            (C93483 + C93482) * C152366) *
               C151985 * C152030) *
              C152355 +
          (((C93903 + C93904) * C152366 + (C93905 + C93913) * C152367 +
            (C59962 * C152302 + (C59421 * C2009 - C59422 * C2002 -
                                 C59421 * C2010 + C151908 * C2014) *
                                    C152231) *
                C73634) *
               C151985 * C152030 -
           ((C93913 + C93905) * C73634 + (C93904 + C93903) * C152367 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152302) *
                C152366) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C152380 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C152376 +
           (C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C151985 * C152362 -
           ((C94753 + C94754) * C73634 + (C94752 + C94751) * C152367 +
            C94750 * C152366) *
               C151985 * C152336) *
              C3181 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            C95178 * C73634) *
               C151985 * C152376 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C152380 -
           ((C95179 + C95180) * C73634 + (C93481 + C93480) * C152367 +
            C93489 * C152366) *
               C151985 * C152362 +
           (C95178 * C152366 + (C95180 + C95179) * C152367 +
            (C60936 * C152302 + (C59421 * C8803 - C59422 * C8800 -
                                 C59421 * C8804 + C151908 * C8806) *
                                    C152231) *
                C73634) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C4047 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152072) *
               C152026 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             C95668 * C73634) *
                C152072 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C4047) *
               C152033 +
           ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
                C4047 -
            ((C95669 + C95670) * C73634 + (C94980 + C94979) * C152367 +
             C94974 * C152366) *
                C152072) *
               C3525) *
              C152270 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152072 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C4047) *
               C152026 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C4047 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152072) *
               C152033 +
           ((C95471 * C152366 + (C95473 + C95472) * C152367 +
             (C61138 * C152302 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C73634) *
                C152072 -
            ((C95179 + C95180) * C73634 + (C93481 + C93480) * C152367 +
             C93489 * C152366) *
                C4047) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C152068 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152075 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C94975 + C94976) * C152367 + C94983 * C73634) *
               C4719) *
              C152026 +
          (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
            C95668 * C73634) *
               C152075 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C152068 -
           ((C94981 + C94982) * C73634 + (C94978 + C94977) * C152367 +
            (C94976 + C94975) * C152366) *
               C4719) *
              C152033 +
          ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C152068 -
           ((C95669 + C95670) * C73634 + (C94980 + C94979) * C152367 +
            C94974 * C152366) *
               C152075 +
           (C94983 * C152366 + (C94982 + C94981) * C152367 +
            (C60794 * C152302 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C73634) *
               C4719) *
              C3525) *
         C151939) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C4047 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152072) *
              C152380 +
          (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
            C95668 * C73634) *
               C152072 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C4047) *
              C152376 +
          ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C4047 -
           ((C95669 + C95670) * C73634 + (C94980 + C94979) * C152367 +
            C94974 * C152366) *
               C152072) *
              C152362 +
          ((C95668 * C152366 + (C95670 + C95669) * C152367 +
            (C61280 * C152302 + (C59421 * C60756 - C59422 * C60755 -
                                 C59421 * C60757 + C151908 * C60758) *
                                    C152231) *
                C73634) *
               C152072 -
           ((C94753 + C94754) * C73634 + (C94752 + C94751) * C152367 +
            C94750 * C152366) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C4047 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152072) *
               C3041 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             C95668 * C73634) *
                C152072 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C4047) *
               C152030) *
              C152370 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152072 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C4047) *
               C3041 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C4047 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152072) *
               C152030) *
              C152353 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C152302 +
              C65793 * C152231) *
                 C152366 +
             (C93482 + C93483) * C152367 + C93490 * C73634) *
                C4047 -
            ((C94406 + C94407) * C73634 + (C94408 + C94409) * C152367 +
             (C65794 * C152231 + C65793 * C152302) * C152366) *
                C152072) *
               C3041 +
           (((C94409 + C94408) * C152366 + (C94407 + C94406) * C152367 +
             (C60350 * C152302 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C73634) *
                C152072 -
            ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
             (C93483 + C93482) * C152366) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C152381 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152378 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C94975 + C94976) * C152367 + C94983 * C73634) *
               C152365 -
           ((C96911 + C96912) * C73634 + (C96913 + C96914) * C152367 +
            (C68376 * C152231 + C65788 * C152302) * C152366) *
               C152342) *
              C3041 +
          (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
            C95668 * C73634) *
               C152378 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C152381 -
           ((C94981 + C94982) * C73634 + (C94978 + C94977) * C152367 +
            (C94976 + C94975) * C152366) *
               C152365 +
           ((C96914 + C96913) * C152366 + (C96912 + C96911) * C152367 +
            (C62160 * C152302 + (C59421 * C61656 - C59422 * C61655 -
                                 C59421 * C61657 + C151908 * C61658) *
                                    C152231) *
                C73634) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C152068 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152075 +
            ((C65787 * C152302 + C65788 * C152231) * C152366 +
             (C94975 + C94976) * C152367 + C94983 * C73634) *
                C4719) *
               C3041 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             C95668 * C73634) *
                C152075 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C152068 -
            ((C94981 + C94982) * C73634 + (C94978 + C94977) * C152367 +
             (C94976 + C94975) * C152366) *
                C4719) *
               C152030) *
              C152270 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152075 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C152068 -
            ((C96519 + C96520) * C73634 + (C96521 + C96522) * C152367 +
             (C65791 * C152231 + C65790 * C152302) * C152366) *
                C4719) *
               C3041 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C152068 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152075 +
            ((C96522 + C96521) * C152366 + (C96520 + C96519) * C152367 +
             (C61872 * C152302 + (C59421 * C10123 - C59422 * C10120 -
                                  C59421 * C10124 + C151908 * C10126) *
                                     C152231) *
                 C73634) *
                C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C4047 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152072) *
               C3041 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             C95668 * C73634) *
                C152072 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C4047) *
               C152030) *
              C152370 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152072 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C4047) *
               C3041 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C4047 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152072) *
               C152030) *
              C152353 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C152302 +
              C65793 * C152231) *
                 C152366 +
             (C93482 + C93483) * C152367 + C93490 * C73634) *
                C4047 -
            ((C94406 + C94407) * C73634 + (C94408 + C94409) * C152367 +
             (C65794 * C152231 + C65793 * C152302) * C152366) *
                C152072) *
               C3041 +
           (((C94409 + C94408) * C152366 + (C94407 + C94406) * C152367 +
             (C60350 * C152302 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C73634) *
                C152072 -
            ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
             (C93483 + C93482) * C152366) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C4047 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152072) *
              C152380 +
          (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
            C95668 * C73634) *
               C152072 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C4047) *
              C152376 +
          ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C4047 -
           ((C95669 + C95670) * C73634 + (C94980 + C94979) * C152367 +
            C94974 * C152366) *
               C152072) *
              C152362 +
          ((C95668 * C152366 + (C95670 + C95669) * C152367 +
            (C61280 * C152302 + (C59421 * C60756 - C59422 * C60755 -
                                 C59421 * C60757 + C151908 * C60758) *
                                    C152231) *
                C73634) *
               C152072 -
           ((C94753 + C94754) * C73634 + (C94752 + C94751) * C152367 +
            C94750 * C152366) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C1661 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C1662 +
           (C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C151985 * C1663 -
           ((C94753 + C94754) * C73634 + (C94752 + C94751) * C152367 +
            C94750 * C152366) *
               C151985 * C152336) *
              C152270 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            C95178 * C73634) *
               C151985 * C1662 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C1661 -
           ((C95179 + C95180) * C73634 + (C93481 + C93480) * C152367 +
            C93489 * C152366) *
               C151985 * C1663 +
           (C95178 * C152366 + (C95180 + C95179) * C152367 +
            (C60936 * C152302 + (C59421 * C8803 - C59422 * C8800 -
                                 C59421 * C8804 + C151908 * C8806) *
                                    C152231) *
                C73634) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C152284 -
           ((C93474 + C93475) * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C152030) *
              C703 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            (C93480 + C93481) * C73634) *
               C151985 * C152030 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C152284) *
              C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C151985 * C152284 -
           ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
            (C93483 + C93482) * C152366) *
               C151985 * C152030) *
              C705 +
          (((C93903 + C93904) * C152366 + (C93905 + C93913) * C152367 +
            (C59962 * C152302 + (C59421 * C2009 - C59422 * C2002 -
                                 C59421 * C2010 + C151908 * C2014) *
                                    C152231) *
                C73634) *
               C151985 * C152030 -
           ((C93913 + C93905) * C73634 + (C93904 + C93903) * C152367 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152302) *
                C152366) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C2161 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C2162 +
            ((C65787 * C152302 + C65788 * C152231) * C152366 +
             (C94975 + C94976) * C152367 + C94983 * C73634) *
                C152329) *
               C152284 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             C95668 * C73634) *
                C2162 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C2161 -
            ((C94981 + C94982) * C73634 + (C94978 + C94977) * C152367 +
             (C94976 + C94975) * C152366) *
                C152329) *
               C152030) *
              C152270 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C2162 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C2161 -
            ((C96519 + C96520) * C73634 + (C96521 + C96522) * C152367 +
             (C65791 * C152231 + C65790 * C152302) * C152366) *
                C152329) *
               C152284 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C2161 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C2162 +
            ((C96522 + C96521) * C152366 + (C96520 + C96519) * C152367 +
             (C61872 * C152302 + (C59421 * C10123 - C59422 * C10120 -
                                  C59421 * C10124 + C151908 * C10126) *
                                     C152231) *
                 C73634) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C152285 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152072) *
              C1661 +
          (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
            C95668 * C73634) *
               C152072 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C152285) *
              C1662 +
          ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C152285 -
           ((C95669 + C95670) * C73634 + (C94980 + C94979) * C152367 +
            C94974 * C152366) *
               C152072) *
              C1663 +
          ((C95668 * C152366 + (C95670 + C95669) * C152367 +
            (C61280 * C152302 + (C59421 * C60756 - C59422 * C60755 -
                                 C59421 * C60757 + C151908 * C60758) *
                                    C152231) *
                C73634) *
               C152072 -
           ((C94753 + C94754) * C73634 + (C94752 + C94751) * C152367 +
            C94750 * C152366) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C152285 -
            ((C94398 + C94399) * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152072) *
               C152284 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             (C60344 * C152302 + C60792 * C152231) * C73634) *
                C152072 -
            ((C93474 + C93475) * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C152285) *
               C152030) *
              C323 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + (C94404 + C94405) * C73634) *
                C152072 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C152285) *
               C152284 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             (C93480 + C93481) * C73634) *
                C152285 -
            ((C61872 * C152231 + C60349 * C152302) * C73634 +
             (C94405 + C94404) * C152367 + (C94403 + C94402) * C152366) *
                C152072) *
               C152030) *
              C324 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C152302 +
              C65793 * C152231) *
                 C152366 +
             (C93482 + C93483) * C152367 + C93490 * C73634) *
                C152285 -
            ((C94406 + C94407) * C73634 + (C94408 + C94409) * C152367 +
             (C65794 * C152231 + C65793 * C152302) * C152366) *
                C152072) *
               C152284 +
           (((C94409 + C94408) * C152366 + (C94407 + C94406) * C152367 +
             (C60350 * C152302 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C73634) *
                C152072 -
            ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
             (C93483 + C93482) * C152366) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C2757 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C2758 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C94975 + C94976) * C152367 + C94983 * C73634) *
               C2759 -
           ((C96911 + C96912) * C73634 + (C96913 + C96914) * C152367 +
            (C68376 * C152231 + C65788 * C152302) * C152366) *
               C152342) *
              C152284 +
          (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
            C95668 * C73634) *
               C2758 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C2757 -
           ((C94981 + C94982) * C73634 + (C94978 + C94977) * C152367 +
            (C94976 + C94975) * C152366) *
               C2759 +
           ((C96914 + C96913) * C152366 + (C96912 + C96911) * C152367 +
            (C62160 * C152302 + (C59421 * C61656 - C59422 * C61655 -
                                 C59421 * C61657 + C151908 * C61658) *
                                    C152231) *
                C73634) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C59421 * C150 - C59422 * C142 - C59421 * C151 +
                 C151908 * C166) *
                    C152302 +
                C65786 * C152231) *
                   C152366 +
               (C59642 * C152302 + C60346 * C152231) * C152367 +
               (C59643 * C152302 + C60345 * C152231) * C73634) *
                  C151985 * C151967 * C129 -
              ((C60348 * C152231 + C59647 * C152302) * C73634 +
               (C60347 * C152231 + C59646 * C152302) * C152367 +
               (C65789 * C152231 + (C59421 * C152 - C59422 * C143 -
                                    C59421 * C153 + C151908 * C167) *
                                       C152302) *
                   C152366) *
                  C151985 * C151967 * C130 +
              (((C59421 * C154 - C59422 * C144 - C59421 * C155 +
                 C151908 * C168) *
                    C152302 +
                C65793 * C152231) *
                   C152366 +
               (C59650 * C152302 + C60352 * C152231) * C152367 +
               (C59651 * C152302 + C60351 * C152231) * C73634) *
                  C151985 * C151967 * C131 -
              (((C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
                 C151908 * C1523) *
                    C152231 +
                C59961 * C152302) *
                   C73634 +
               (C66004 * C152231 + C59960 * C152302) * C152367 +
               (C66214 * C152231 + (C59421 * C156 - C59422 * C145 -
                                    C59421 * C157 + C151908 * C169) *
                                       C152302) *
                   C152366) *
                  C151985 * C151967 * C132 +
              (((C59421 * C158 - C59422 * C146 - C59421 * C159 +
                 C151908 * C170) *
                    C152302 +
                (C59421 * C551 - C59422 * C531 - C59421 * C552 +
                 C151908 * C567) *
                    C152231) *
                   C152366 +
               ((C59421 * C354 - C59422 * C334 - C59421 * C355 +
                 C151908 * C370) *
                    C152302 +
                (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
                 C151908 * C1063) *
                    C152231) *
                   C152367 +
               ((C59421 * C356 - C59422 * C335 - C59421 * C357 +
                 C151908 * C371) *
                    C152302 +
                (C59421 * C1866 - C59422 * C1865 - C59421 * C1867 +
                 C151908 * C1868) *
                    C152231) *
                   C73634) *
                  C151985 * C151967 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C59421 * C150 - C59422 * C142 - C59421 * C151 +
                  C151908 * C166) *
                     C152302 +
                 C65786 * C152231) *
                    C152366 +
                (C93470 + C93471) * C152367 + C93488 * C73634) *
                   C151985 * C152373 -
               ((C93474 + C93475) * C73634 + (C93473 + C93472) * C152367 +
                (C93471 + C93470) * C152366) *
                   C151985 * C152357 +
               (C93488 * C152366 + (C93475 + C93474) * C152367 +
                (C59645 * C152302 + C60793 * C152231) * C73634) *
                   C151985 * C152326) *
                  C323 +
              (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
                (C93480 + C93481) * C73634) *
                   C151985 * C152357 -
               (C93489 * C73634 + (C93477 + C93476) * C152367 +
                (C65789 * C152231 + (C59421 * C152 - C59422 * C143 -
                                     C59421 * C153 + C151908 * C167) *
                                        C152302) *
                    C152366) *
                   C151985 * C152373 -
               ((C61138 * C152231 + C59649 * C152302) * C73634 +
                (C93481 + C93480) * C152367 + C93489 * C152366) *
                   C151985 * C152326) *
                  C324 +
              ((((C59421 * C154 - C59422 * C144 - C59421 * C155 +
                  C151908 * C168) *
                     C152302 +
                 C65793 * C152231) *
                    C152366 +
                (C93482 + C93483) * C152367 + C93490 * C73634) *
                   C151985 * C152373 -
               ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
                (C93483 + C93482) * C152366) *
                   C151985 * C152357 +
               (C93490 * C152366 + (C93487 + C93486) * C152367 +
                (C59653 * C152302 + (C59421 * C8586 - C59422 * C8585 -
                                     C59421 * C8587 + C151908 * C8588) *
                                        C152231) *
                    C73634) *
                   C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C152374 -
           ((C60791 * C152231 + C60345 * C152302) * C73634 +
            (C60790 * C152231 + C60346 * C152302) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152359 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C60790 * C152302 + C62162 * C152231) * C152367 +
            (C60791 * C152302 + C62161 * C152231) * C73634) *
               C152329) *
              C151967 * C323 +
          (((C65789 * C152302 + C65790 * C152231) * C152366 +
            (C60347 * C152302 + C61874 * C152231) * C152367 +
            (C60348 * C152302 + C61873 * C152231) * C73634) *
               C152359 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C152374 -
           ((C67597 * C152231 + C61873 * C152302) * C73634 +
            (C65792 * C152231 + C61874 * C152302) * C152367 +
            (C65791 * C152231 + C65790 * C152302) * C152366) *
               C152329) *
              C151967 * C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C152374 -
           ((C65499 * C152231 + C60351 * C152302) * C73634 +
            (C65498 * C152231 + C60352 * C152302) * C152367 +
            (C65794 * C152231 + C65793 * C152302) * C152366) *
               C152359 +
           ((C65794 * C152302 + C65796 * C152231) * C152366 +
            (C65498 * C152302 + C65795 * C152231) * C152367 +
            (C65499 * C152302 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C73634) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C1211 -
           ((C93474 + C93475) * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C1212 +
           (C93488 * C152366 + (C93475 + C93474) * C152367 +
            (C59645 * C152302 + C60793 * C152231) * C73634) *
               C151985 * C152326) *
              C152370 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            (C93480 + C93481) * C73634) *
               C151985 * C1212 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C1211 -
           ((C61138 * C152231 + C59649 * C152302) * C73634 +
            (C93481 + C93480) * C152367 + C93489 * C152366) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C151985 * C1211 -
           ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
            (C93483 + C93482) * C152366) *
               C151985 * C1212 +
           (C93490 * C152366 + (C93487 + C93486) * C152367 +
            (C59653 * C152302 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152302 +
            C65786 * C152231) *
               C152366 +
           (C93470 + C93471) * C152367 + C93488 * C73634) *
              C151985 * C1299 -
          (C94750 * C73634 + (C93473 + C93472) * C152367 +
           (C93471 + C93470) * C152366) *
              C151985 * C1300 +
          (C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
              C151985 * C1301 -
          ((C94753 + C94754) * C73634 + (C94752 + C94751) * C152367 +
           C94750 * C152366) *
              C151985 * C1302 +
          (C94755 * C152366 + (C94754 + C94753) * C152367 +
           (C60607 * C152302 + (C59421 * C61270 - C59422 * C61269 -
                                C59421 * C61271 + C151908 * C61272) *
                                   C152231) *
               C73634) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C152374 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152359 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C94975 + C94976) * C152367 + C94983 * C73634) *
               C152329) *
              C1211 +
          (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
            (C94979 + C94980) * C73634) *
               C152359 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C152374 -
           ((C94981 + C94982) * C73634 + (C94978 + C94977) * C152367 +
            (C94976 + C94975) * C152366) *
               C152329) *
              C1212 +
          ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C152374 -
           ((C60794 * C152231 + C60793 * C152302) * C73634 +
            (C94980 + C94979) * C152367 + C94974 * C152366) *
               C152359 +
           (C94983 * C152366 + (C94982 + C94981) * C152367 +
            (C60794 * C152302 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C73634) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C2161 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C2162 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C94975 + C94976) * C152367 + C94983 * C73634) *
               C152329) *
              C151967 * C152370 +
          (((C65789 * C152302 + C65790 * C152231) * C152366 +
            (C94402 + C94403) * C152367 + C95471 * C73634) *
               C2162 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C2161 -
           ((C67597 * C152231 + C61873 * C152302) * C73634 +
            (C65792 * C152231 + C61874 * C152302) * C152367 +
            (C65791 * C152231 + C65790 * C152302) * C152366) *
               C152329) *
              C151967 * C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C2161 -
           ((C94406 + C94407) * C73634 + (C94408 + C94409) * C152367 +
            (C65794 * C152231 + C65793 * C152302) * C152366) *
               C2162 +
           ((C65794 * C152302 + C65796 * C152231) * C152366 +
            (C65498 * C152302 + C65795 * C152231) * C152367 +
            (C65499 * C152302 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C73634) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C2161 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C2162 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C94975 + C94976) * C152367 + C94983 * C73634) *
               C152329) *
              C152373 +
          (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
            C95668 * C73634) *
               C2162 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C2161 -
           ((C94981 + C94982) * C73634 + (C94978 + C94977) * C152367 +
            (C94976 + C94975) * C152366) *
               C152329) *
              C152357 +
          ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C2161 -
           ((C95669 + C95670) * C73634 + (C94980 + C94979) * C152367 +
            C94974 * C152366) *
               C2162 +
           (C94983 * C152366 + (C94982 + C94981) * C152367 +
            (C60794 * C152302 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C73634) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152302 +
            C65786 * C152231) *
               C152366 +
           (C93470 + C93471) * C152367 + C93488 * C73634) *
              C2392 -
          (C94974 * C73634 + (C94400 + C94401) * C152367 +
           (C65787 * C152231 + C65786 * C152302) * C152366) *
              C2393 +
          ((C65787 * C152302 + C65788 * C152231) * C152366 +
           (C94975 + C94976) * C152367 + C94983 * C73634) *
              C2394 -
          ((C67099 * C152231 + C62161 * C152302) * C73634 +
           (C67098 * C152231 + C62162 * C152302) * C152367 +
           (C68376 * C152231 + C65788 * C152302) * C152366) *
              C2395 +
          ((C68376 * C152302 + C68378 * C152231) * C152366 +
           (C67098 * C152302 + C68377 * C152231) * C152367 +
           (C67099 * C152302 + (C59421 * C69074 - C59422 * C69073 -
                                C59421 * C69075 + C151908 * C69076) *
                                   C152231) *
               C73634) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C152285 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152072) *
               C1211 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             (C94979 + C94980) * C73634) *
                C152072 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C152285) *
               C1212 +
           ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
                C152285 -
            ((C60794 * C152231 + C60793 * C152302) * C73634 +
             (C94980 + C94979) * C152367 + C94974 * C152366) *
                C152072) *
               C152326) *
              C152270 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152072 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C152285) *
               C1211 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C152285 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152072) *
               C1212 +
           ((C95471 * C152366 + (C95473 + C95472) * C152367 +
             (C61138 * C152302 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C73634) *
                C152072 -
            ((C95179 + C95180) * C73634 + (C93481 + C93480) * C152367 +
             C93489 * C152366) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C152285 -
           ((C60791 * C152231 + C60345 * C152302) * C73634 +
            (C60790 * C152231 + C60346 * C152302) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152072) *
              C151967 * C703 +
          (((C65789 * C152302 + C65790 * C152231) * C152366 +
            (C60347 * C152302 + C61874 * C152231) * C152367 +
            (C60348 * C152302 + C61873 * C152231) * C73634) *
               C152072 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C152285) *
              C151967 * C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C152285 -
           ((C65499 * C152231 + C60351 * C152302) * C73634 +
            (C65498 * C152231 + C60352 * C152302) * C152367 +
            (C65794 * C152231 + C65793 * C152302) * C152366) *
               C152072) *
              C151967 * C705 +
          (((C66214 * C152302 + C66215 * C152231) * C152366 +
            (C66004 * C152302 + C66005 * C152231) * C152367 +
            (C93912 * C152302 + (C59421 * C1517 - C59422 * C1494 -
                                 C59421 * C1518 + C151908 * C1530) *
                                    C152231) *
                C73634) *
               C152072 -
           ((C93913 + C93905) * C73634 + (C93904 + C93903) * C152367 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152302) *
                C152366) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C2757 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C2758 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C94975 + C94976) * C152367 + C94983 * C73634) *
               C2759 -
           ((C67099 * C152231 + C62161 * C152302) * C73634 +
            (C67098 * C152231 + C62162 * C152302) * C152367 +
            (C68376 * C152231 + C65788 * C152302) * C152366) *
               C152342) *
              C151967 * C152270 +
          (((C65789 * C152302 + C65790 * C152231) * C152366 +
            (C94402 + C94403) * C152367 + C95471 * C73634) *
               C2758 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C2757 -
           ((C96519 + C96520) * C73634 + (C96521 + C96522) * C152367 +
            (C65791 * C152231 + C65790 * C152302) * C152366) *
               C2759 +
           ((C65791 * C152302 + C68879 * C152231) * C152366 +
            (C65792 * C152302 + C68677 * C152231) * C152367 +
            (C67597 * C152302 + (C59421 * C9397 - C59422 * C9386 -
                                 C59421 * C9398 + C151908 * C9404) *
                                    C152231) *
                C73634) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C152373 -
           ((C93474 + C93475) * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C152357 +
           (C93488 * C152366 + (C93475 + C93474) * C152367 +
            (C59645 * C152302 + C60793 * C152231) * C73634) *
               C151985 * C152326) *
              C323 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            (C93480 + C93481) * C73634) *
               C151985 * C152357 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C152373 -
           ((C61138 * C152231 + C59649 * C152302) * C73634 +
            (C93481 + C93480) * C152367 + C93489 * C152366) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C151985 * C152373 -
           ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
            (C93483 + C93482) * C152366) *
               C151985 * C152357 +
           (C93490 * C152366 + (C93487 + C93486) * C152367 +
            (C59653 * C152302 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152302 +
            C65786 * C152231) *
               C152366 +
           (C59642 * C152302 + C60346 * C152231) * C152367 +
           (C59643 * C152302 + C60345 * C152231) * C73634) *
              C151985 * C151967 * C129 -
          ((C60348 * C152231 + C59647 * C152302) * C73634 +
           (C60347 * C152231 + C59646 * C152302) * C152367 +
           (C65789 * C152231 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152302) *
               C152366) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152302 +
            C65793 * C152231) *
               C152366 +
           (C59650 * C152302 + C60352 * C152231) * C152367 +
           (C59651 * C152302 + C60351 * C152231) * C73634) *
              C151985 * C151967 * C131 -
          (((C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
             C151908 * C1523) *
                C152231 +
            C59961 * C152302) *
               C73634 +
           (C66004 * C152231 + C59960 * C152302) * C152367 +
           (C66214 * C152231 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152302) *
               C152366) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C152302 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152231) *
               C152366 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C152302 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152231) *
               C152367 +
           ((C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
                C152302 +
            (C59421 * C1866 - C59422 * C1865 - C59421 * C1867 +
             C151908 * C1868) *
                C152231) *
               C73634) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C1211 -
           ((C93474 + C93475) * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C1212 +
           (C93488 * C152366 + (C93475 + C93474) * C152367 +
            (C59645 * C152302 + C60793 * C152231) * C73634) *
               C151985 * C152326) *
              C152370 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            (C93480 + C93481) * C73634) *
               C151985 * C1212 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C1211 -
           ((C61138 * C152231 + C59649 * C152302) * C73634 +
            (C93481 + C93480) * C152367 + C93489 * C152366) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C151985 * C1211 -
           ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
            (C93483 + C93482) * C152366) *
               C151985 * C1212 +
           (C93490 * C152366 + (C93487 + C93486) * C152367 +
            (C59653 * C152302 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152302 +
            C65786 * C152231) *
               C152366 +
           (C93470 + C93471) * C152367 + C93488 * C73634) *
              C151985 * C1299 -
          (C94750 * C73634 + (C93473 + C93472) * C152367 +
           (C93471 + C93470) * C152366) *
              C151985 * C1300 +
          (C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
              C151985 * C1301 -
          ((C94753 + C94754) * C73634 + (C94752 + C94751) * C152367 +
           C94750 * C152366) *
              C151985 * C1302 +
          (C94755 * C152366 + (C94754 + C94753) * C152367 +
           (C60607 * C152302 + (C59421 * C61270 - C59422 * C61269 -
                                C59421 * C61271 + C151908 * C61272) *
                                   C152231) *
               C73634) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C2161 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C2162 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C94975 + C94976) * C152367 + C94983 * C73634) *
               C152329) *
              C151967 * C152370 +
          (((C65789 * C152302 + C65790 * C152231) * C152366 +
            (C94402 + C94403) * C152367 + C95471 * C73634) *
               C2162 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C2161 -
           ((C67597 * C152231 + C61873 * C152302) * C73634 +
            (C65792 * C152231 + C61874 * C152302) * C152367 +
            (C65791 * C152231 + C65790 * C152302) * C152366) *
               C152329) *
              C151967 * C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C2161 -
           ((C94406 + C94407) * C73634 + (C94408 + C94409) * C152367 +
            (C65794 * C152231 + C65793 * C152302) * C152366) *
               C2162 +
           ((C65794 * C152302 + C65796 * C152231) * C152366 +
            (C65498 * C152302 + C65795 * C152231) * C152367 +
            (C65499 * C152302 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C73634) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C2161 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C2162 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C94975 + C94976) * C152367 + C94983 * C73634) *
               C152329) *
              C152373 +
          (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
            C95668 * C73634) *
               C2162 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C2161 -
           ((C94981 + C94982) * C73634 + (C94978 + C94977) * C152367 +
            (C94976 + C94975) * C152366) *
               C152329) *
              C152357 +
          ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C2161 -
           ((C95669 + C95670) * C73634 + (C94980 + C94979) * C152367 +
            C94974 * C152366) *
               C2162 +
           (C94983 * C152366 + (C94982 + C94981) * C152367 +
            (C60794 * C152302 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C73634) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C4047 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152072) *
               C152284 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             C95668 * C73634) *
                C152072 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C4047) *
               C152030) *
              C151944 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152072 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C4047) *
               C152284 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C4047 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152072) *
               C152030) *
              C151953 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C152302 +
              C65793 * C152231) *
                 C152366 +
             (C93482 + C93483) * C152367 + C93490 * C73634) *
                C4047 -
            ((C94406 + C94407) * C73634 + (C94408 + C94409) * C152367 +
             (C65794 * C152231 + C65793 * C152302) * C152366) *
                C152072) *
               C152284 +
           (((C94409 + C94408) * C152366 + (C94407 + C94406) * C152367 +
             (C60350 * C152302 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C73634) *
                C152072 -
            ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
             (C93483 + C93482) * C152366) *
                C4047) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C152068 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152075 +
            ((C65787 * C152302 + C65788 * C152231) * C152366 +
             (C94975 + C94976) * C152367 + C94983 * C73634) *
                C4719) *
               C152284 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             C95668 * C73634) *
                C152075 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C152068 -
            ((C94981 + C94982) * C73634 + (C94978 + C94977) * C152367 +
             (C94976 + C94975) * C152366) *
                C4719) *
               C152030) *
              C3181 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152075 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C152068 -
            ((C96519 + C96520) * C73634 + (C96521 + C96522) * C152367 +
             (C65791 * C152231 + C65790 * C152302) * C152366) *
                C4719) *
               C152284 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C152068 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152075 +
            ((C96522 + C96521) * C152366 + (C96520 + C96519) * C152367 +
             (C61872 * C152302 + (C59421 * C10123 - C59422 * C10120 -
                                  C59421 * C10124 + C151908 * C10126) *
                                     C152231) *
                 C73634) *
                C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C4047 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152072) *
               C152373 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             C95668 * C73634) *
                C152072 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C4047) *
               C152357 +
           ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
                C4047 -
            ((C95669 + C95670) * C73634 + (C94980 + C94979) * C152367 +
             C94974 * C152366) *
                C152072) *
               C152326) *
              C3181 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152072 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C4047) *
               C152373 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C4047 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152072) *
               C152357 +
           ((C95471 * C152366 + (C95473 + C95472) * C152367 +
             (C61138 * C152302 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C73634) *
                C152072 -
            ((C95179 + C95180) * C73634 + (C93481 + C93480) * C152367 +
             C93489 * C152366) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C4047 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152072) *
              C151967 * C152379 +
          (((C65789 * C152302 + C65790 * C152231) * C152366 +
            (C94402 + C94403) * C152367 + C95471 * C73634) *
               C152072 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C4047) *
              C151967 * C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C4047 -
           ((C94406 + C94407) * C73634 + (C94408 + C94409) * C152367 +
            (C65794 * C152231 + C65793 * C152302) * C152366) *
               C152072) *
              C151967 * C152355 +
          (((C66214 * C152302 + C66215 * C152231) * C152366 +
            (C66004 * C152302 + C66005 * C152231) * C152367 +
            (C93912 * C152302 + (C59421 * C1517 - C59422 * C1494 -
                                 C59421 * C1518 + C151908 * C1530) *
                                    C152231) *
                C73634) *
               C152072 -
           ((C93913 + C93905) * C73634 + (C93904 + C93903) * C152367 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152302) *
                C152366) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C152381 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152378 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C94975 + C94976) * C152367 + C94983 * C73634) *
               C152365 -
           ((C96911 + C96912) * C73634 + (C96913 + C96914) * C152367 +
            (C68376 * C152231 + C65788 * C152302) * C152366) *
               C152342) *
              C151967 * C3181 +
          (((C65789 * C152302 + C65790 * C152231) * C152366 +
            (C94402 + C94403) * C152367 + C95471 * C73634) *
               C152378 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C152381 -
           ((C96519 + C96520) * C73634 + (C96521 + C96522) * C152367 +
            (C65791 * C152231 + C65790 * C152302) * C152366) *
               C152365 +
           ((C65791 * C152302 + C68879 * C152231) * C152366 +
            (C65792 * C152302 + C68677 * C152231) * C152367 +
            (C67597 * C152302 + (C59421 * C9397 - C59422 * C9386 -
                                 C59421 * C9398 + C151908 * C9404) *
                                    C152231) *
                C73634) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C152068 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152075 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C94975 + C94976) * C152367 + C94983 * C73634) *
               C4719) *
              C151967 * C151944 +
          (((C65789 * C152302 + C65790 * C152231) * C152366 +
            (C94402 + C94403) * C152367 + C95471 * C73634) *
               C152075 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C152068 -
           ((C96519 + C96520) * C73634 + (C96521 + C96522) * C152367 +
            (C65791 * C152231 + C65790 * C152302) * C152366) *
               C4719) *
              C151967 * C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C152068 -
           ((C94406 + C94407) * C73634 + (C94408 + C94409) * C152367 +
            (C65794 * C152231 + C65793 * C152302) * C152366) *
               C152075 +
           ((C65794 * C152302 + C65796 * C152231) * C152366 +
            (C65498 * C152302 + C65795 * C152231) * C152367 +
            (C65499 * C152302 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C73634) *
               C4719) *
              C151967 * C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C4047 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152072) *
              C151967 * C152379 +
          (((C65789 * C152302 + C65790 * C152231) * C152366 +
            (C94402 + C94403) * C152367 + C95471 * C73634) *
               C152072 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C4047) *
              C151967 * C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C4047 -
           ((C94406 + C94407) * C73634 + (C94408 + C94409) * C152367 +
            (C65794 * C152231 + C65793 * C152302) * C152366) *
               C152072) *
              C151967 * C152355 +
          (((C66214 * C152302 + C66215 * C152231) * C152366 +
            (C66004 * C152302 + C66005 * C152231) * C152367 +
            (C93912 * C152302 + (C59421 * C1517 - C59422 * C1494 -
                                 C59421 * C1518 + C151908 * C1530) *
                                    C152231) *
                C73634) *
               C152072 -
           ((C93913 + C93905) * C73634 + (C93904 + C93903) * C152367 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152302) *
                C152366) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C4047 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152072) *
               C152373 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             C95668 * C73634) *
                C152072 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C4047) *
               C152357 +
           ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
                C4047 -
            ((C95669 + C95670) * C73634 + (C94980 + C94979) * C152367 +
             C94974 * C152366) *
                C152072) *
               C152326) *
              C3181 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152072 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C4047) *
               C152373 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C4047 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152072) *
               C152357 +
           ((C95471 * C152366 + (C95473 + C95472) * C152367 +
             (C61138 * C152302 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C73634) *
                C152072 -
            ((C95179 + C95180) * C73634 + (C93481 + C93480) * C152367 +
             C93489 * C152366) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C152284 -
           ((C93474 + C93475) * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C152030) *
              C703 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            (C93480 + C93481) * C73634) *
               C151985 * C152030 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C152284) *
              C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C151985 * C152284 -
           ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
            (C93483 + C93482) * C152366) *
               C151985 * C152030) *
              C705 +
          (((C93903 + C93904) * C152366 + (C93905 + C93913) * C152367 +
            (C59962 * C152302 + (C59421 * C2009 - C59422 * C2002 -
                                 C59421 * C2010 + C151908 * C2014) *
                                    C152231) *
                C73634) *
               C151985 * C152030 -
           ((C93913 + C93905) * C73634 + (C93904 + C93903) * C152367 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152302) *
                C152366) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C1661 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C1662 +
           (C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C151985 * C1663 -
           ((C94753 + C94754) * C73634 + (C94752 + C94751) * C152367 +
            C94750 * C152366) *
               C151985 * C152336) *
              C152270 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            C95178 * C73634) *
               C151985 * C1662 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C1661 -
           ((C95179 + C95180) * C73634 + (C93481 + C93480) * C152367 +
            C93489 * C152366) *
               C151985 * C1663 +
           (C95178 * C152366 + (C95180 + C95179) * C152367 +
            (C60936 * C152302 + (C59421 * C8803 - C59422 * C8800 -
                                 C59421 * C8804 + C151908 * C8806) *
                                    C152231) *
                C73634) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C152285 -
            ((C94398 + C94399) * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152072) *
               C152284 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             (C60344 * C152302 + C60792 * C152231) * C73634) *
                C152072 -
            ((C93474 + C93475) * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C152285) *
               C152030) *
              C323 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + (C94404 + C94405) * C73634) *
                C152072 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C152285) *
               C152284 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             (C93480 + C93481) * C73634) *
                C152285 -
            ((C61872 * C152231 + C60349 * C152302) * C73634 +
             (C94405 + C94404) * C152367 + (C94403 + C94402) * C152366) *
                C152072) *
               C152030) *
              C324 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C152302 +
              C65793 * C152231) *
                 C152366 +
             (C93482 + C93483) * C152367 + C93490 * C73634) *
                C152285 -
            ((C94406 + C94407) * C73634 + (C94408 + C94409) * C152367 +
             (C65794 * C152231 + C65793 * C152302) * C152366) *
                C152072) *
               C152284 +
           (((C94409 + C94408) * C152366 + (C94407 + C94406) * C152367 +
             (C60350 * C152302 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C73634) *
                C152072 -
            ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
             (C93483 + C93482) * C152366) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C152285 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152072) *
              C1661 +
          (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
            C95668 * C73634) *
               C152072 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C152285) *
              C1662 +
          ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C152285 -
           ((C95669 + C95670) * C73634 + (C94980 + C94979) * C152367 +
            C94974 * C152366) *
               C152072) *
              C1663 +
          ((C95668 * C152366 + (C95670 + C95669) * C152367 +
            (C61280 * C152302 + (C59421 * C60756 - C59422 * C60755 -
                                 C59421 * C60757 + C151908 * C60758) *
                                    C152231) *
                C73634) *
               C152072 -
           ((C94753 + C94754) * C73634 + (C94752 + C94751) * C152367 +
            C94750 * C152366) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C152373 -
           ((C93474 + C93475) * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C152357 +
           (C93488 * C152366 + (C93475 + C93474) * C152367 +
            (C59645 * C152302 + C60793 * C152231) * C73634) *
               C151985 * C152326) *
              C323 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            (C93480 + C93481) * C73634) *
               C151985 * C152357 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C152373 -
           ((C61138 * C152231 + C59649 * C152302) * C73634 +
            (C93481 + C93480) * C152367 + C93489 * C152366) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C151985 * C152373 -
           ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
            (C93483 + C93482) * C152366) *
               C151985 * C152357 +
           (C93490 * C152366 + (C93487 + C93486) * C152367 +
            (C59653 * C152302 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152302 +
            C65786 * C152231) *
               C152366 +
           (C59642 * C152302 + C60346 * C152231) * C152367 +
           (C59643 * C152302 + C60345 * C152231) * C73634) *
              C151985 * C151967 * C129 -
          ((C60348 * C152231 + C59647 * C152302) * C73634 +
           (C60347 * C152231 + C59646 * C152302) * C152367 +
           (C65789 * C152231 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152302) *
               C152366) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152302 +
            C65793 * C152231) *
               C152366 +
           (C59650 * C152302 + C60352 * C152231) * C152367 +
           (C59651 * C152302 + C60351 * C152231) * C73634) *
              C151985 * C151967 * C131 -
          (((C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
             C151908 * C1523) *
                C152231 +
            C59961 * C152302) *
               C73634 +
           (C66004 * C152231 + C59960 * C152302) * C152367 +
           (C66214 * C152231 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152302) *
               C152366) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C152302 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152231) *
               C152366 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C152302 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152231) *
               C152367 +
           ((C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
                C152302 +
            (C59421 * C1866 - C59422 * C1865 - C59421 * C1867 +
             C151908 * C1868) *
                C152231) *
               C73634) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C152374 -
           ((C60791 * C152231 + C60345 * C152302) * C73634 +
            (C60790 * C152231 + C60346 * C152302) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152359 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C60790 * C152302 + C62162 * C152231) * C152367 +
            (C60791 * C152302 + C62161 * C152231) * C73634) *
               C152329) *
              C151967 * C323 +
          (((C65789 * C152302 + C65790 * C152231) * C152366 +
            (C60347 * C152302 + C61874 * C152231) * C152367 +
            (C60348 * C152302 + C61873 * C152231) * C73634) *
               C152359 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C152374 -
           ((C67597 * C152231 + C61873 * C152302) * C73634 +
            (C65792 * C152231 + C61874 * C152302) * C152367 +
            (C65791 * C152231 + C65790 * C152302) * C152366) *
               C152329) *
              C151967 * C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C152374 -
           ((C65499 * C152231 + C60351 * C152302) * C73634 +
            (C65498 * C152231 + C60352 * C152302) * C152367 +
            (C65794 * C152231 + C65793 * C152302) * C152366) *
               C152359 +
           ((C65794 * C152302 + C65796 * C152231) * C152366 +
            (C65498 * C152302 + C65795 * C152231) * C152367 +
            (C65499 * C152302 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C73634) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C1211 -
           ((C93474 + C93475) * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C1212 +
           (C93488 * C152366 + (C93475 + C93474) * C152367 +
            (C59645 * C152302 + C60793 * C152231) * C73634) *
               C151985 * C152326) *
              C152370 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            (C93480 + C93481) * C73634) *
               C151985 * C1212 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C1211 -
           ((C61138 * C152231 + C59649 * C152302) * C73634 +
            (C93481 + C93480) * C152367 + C93489 * C152366) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C151985 * C1211 -
           ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
            (C93483 + C93482) * C152366) *
               C151985 * C1212 +
           (C93490 * C152366 + (C93487 + C93486) * C152367 +
            (C59653 * C152302 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152302 +
            C65786 * C152231) *
               C152366 +
           (C93470 + C93471) * C152367 + C93488 * C73634) *
              C151985 * C1299 -
          (C94750 * C73634 + (C93473 + C93472) * C152367 +
           (C93471 + C93470) * C152366) *
              C151985 * C1300 +
          (C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
              C151985 * C1301 -
          ((C94753 + C94754) * C73634 + (C94752 + C94751) * C152367 +
           C94750 * C152366) *
              C151985 * C1302 +
          (C94755 * C152366 + (C94754 + C94753) * C152367 +
           (C60607 * C152302 + (C59421 * C61270 - C59422 * C61269 -
                                C59421 * C61271 + C151908 * C61272) *
                                   C152231) *
               C73634) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C152374 -
           (C94974 * C73634 + (C94400 + C94401) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152359 +
           ((C65787 * C152302 + C65788 * C152231) * C152366 +
            (C94975 + C94976) * C152367 + C94983 * C73634) *
               C152329) *
              C1211 +
          (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
            (C94979 + C94980) * C73634) *
               C152359 -
           (C94750 * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C152374 -
           ((C94981 + C94982) * C73634 + (C94978 + C94977) * C152367 +
            (C94976 + C94975) * C152366) *
               C152329) *
              C1212 +
          ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
               C152374 -
           ((C60794 * C152231 + C60793 * C152302) * C73634 +
            (C94980 + C94979) * C152367 + C94974 * C152366) *
               C152359 +
           (C94983 * C152366 + (C94982 + C94981) * C152367 +
            (C60794 * C152302 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C73634) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C152285 -
           ((C60791 * C152231 + C60345 * C152302) * C73634 +
            (C60790 * C152231 + C60346 * C152302) * C152367 +
            (C65787 * C152231 + C65786 * C152302) * C152366) *
               C152072) *
              C151967 * C703 +
          (((C65789 * C152302 + C65790 * C152231) * C152366 +
            (C60347 * C152302 + C61874 * C152231) * C152367 +
            (C60348 * C152302 + C61873 * C152231) * C73634) *
               C152072 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C152285) *
              C151967 * C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C152285 -
           ((C65499 * C152231 + C60351 * C152302) * C73634 +
            (C65498 * C152231 + C60352 * C152302) * C152367 +
            (C65794 * C152231 + C65793 * C152302) * C152366) *
               C152072) *
              C151967 * C705 +
          (((C66214 * C152302 + C66215 * C152231) * C152366 +
            (C66004 * C152302 + C66005 * C152231) * C152367 +
            (C93912 * C152302 + (C59421 * C1517 - C59422 * C1494 -
                                 C59421 * C1518 + C151908 * C1530) *
                                    C152231) *
                C73634) *
               C152072 -
           ((C93913 + C93905) * C73634 + (C93904 + C93903) * C152367 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152302) *
                C152366) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152302 +
              C65786 * C152231) *
                 C152366 +
             (C93470 + C93471) * C152367 + C93488 * C73634) *
                C152285 -
            (C94974 * C73634 + (C94400 + C94401) * C152367 +
             (C65787 * C152231 + C65786 * C152302) * C152366) *
                C152072) *
               C1211 +
           (((C94401 + C94400) * C152366 + (C94399 + C94398) * C152367 +
             (C94979 + C94980) * C73634) *
                C152072 -
            (C94750 * C73634 + (C93473 + C93472) * C152367 +
             (C93471 + C93470) * C152366) *
                C152285) *
               C1212 +
           ((C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
                C152285 -
            ((C60794 * C152231 + C60793 * C152302) * C73634 +
             (C94980 + C94979) * C152367 + C94974 * C152366) *
                C152072) *
               C152326) *
              C152270 +
          ((((C65789 * C152302 + C65790 * C152231) * C152366 +
             (C94402 + C94403) * C152367 + C95471 * C73634) *
                C152072 -
            (C93489 * C73634 + (C93477 + C93476) * C152367 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152302) *
                 C152366) *
                C152285) *
               C1211 +
           (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
             C95178 * C73634) *
                C152285 -
            ((C95472 + C95473) * C73634 + (C94405 + C94404) * C152367 +
             (C94403 + C94402) * C152366) *
                C152072) *
               C1212 +
           ((C95471 * C152366 + (C95473 + C95472) * C152367 +
             (C61138 * C152302 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C73634) *
                C152072 -
            ((C95179 + C95180) * C73634 + (C93481 + C93480) * C152367 +
             C93489 * C152366) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152302 +
            C65786 * C152231) *
               C152366 +
           (C59642 * C152302 + C60346 * C152231) * C152367 +
           (C59643 * C152302 + C60345 * C152231) * C73634) *
              C151985 * C151967 * C129 -
          ((C60348 * C152231 + C59647 * C152302) * C73634 +
           (C60347 * C152231 + C59646 * C152302) * C152367 +
           (C65789 * C152231 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152302) *
               C152366) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152302 +
            C65793 * C152231) *
               C152366 +
           (C59650 * C152302 + C60352 * C152231) * C152367 +
           (C59651 * C152302 + C60351 * C152231) * C73634) *
              C151985 * C151967 * C131 -
          (((C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
             C151908 * C1523) *
                C152231 +
            C59961 * C152302) *
               C73634 +
           (C66004 * C152231 + C59960 * C152302) * C152367 +
           (C66214 * C152231 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152302) *
               C152366) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C152302 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152231) *
               C152366 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C152302 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152231) *
               C152367 +
           ((C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
                C152302 +
            (C59421 * C1866 - C59422 * C1865 - C59421 * C1867 +
             C151908 * C1868) *
                C152231) *
               C73634) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C152373 -
           ((C93474 + C93475) * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C152357 +
           (C93488 * C152366 + (C93475 + C93474) * C152367 +
            (C59645 * C152302 + C60793 * C152231) * C73634) *
               C151985 * C152326) *
              C323 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            (C93480 + C93481) * C73634) *
               C151985 * C152357 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C152373 -
           ((C61138 * C152231 + C59649 * C152302) * C73634 +
            (C93481 + C93480) * C152367 + C93489 * C152366) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C151985 * C152373 -
           ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
            (C93483 + C93482) * C152366) *
               C151985 * C152357 +
           (C93490 * C152366 + (C93487 + C93486) * C152367 +
            (C59653 * C152302 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152302 +
             C65786 * C152231) *
                C152366 +
            (C93470 + C93471) * C152367 + C93488 * C73634) *
               C151985 * C1211 -
           ((C93474 + C93475) * C73634 + (C93473 + C93472) * C152367 +
            (C93471 + C93470) * C152366) *
               C151985 * C1212 +
           (C93488 * C152366 + (C93475 + C93474) * C152367 +
            (C59645 * C152302 + C60793 * C152231) * C73634) *
               C151985 * C152326) *
              C152370 +
          (((C93476 + C93477) * C152366 + (C93478 + C93479) * C152367 +
            (C93480 + C93481) * C73634) *
               C151985 * C1212 -
           (C93489 * C73634 + (C93477 + C93476) * C152367 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152302) *
                C152366) *
               C151985 * C1211 -
           ((C61138 * C152231 + C59649 * C152302) * C73634 +
            (C93481 + C93480) * C152367 + C93489 * C152366) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152302 +
             C65793 * C152231) *
                C152366 +
            (C93482 + C93483) * C152367 + C93490 * C73634) *
               C151985 * C1211 -
           ((C93486 + C93487) * C73634 + (C93485 + C93484) * C152367 +
            (C93483 + C93482) * C152366) *
               C151985 * C1212 +
           (C93490 * C152366 + (C93487 + C93486) * C152367 +
            (C59653 * C152302 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C73634) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152302 +
            C65786 * C152231) *
               C152366 +
           (C93470 + C93471) * C152367 + C93488 * C73634) *
              C151985 * C1299 -
          (C94750 * C73634 + (C93473 + C93472) * C152367 +
           (C93471 + C93470) * C152366) *
              C151985 * C1300 +
          (C93488 * C152366 + (C93475 + C93474) * C152367 + C94755 * C73634) *
              C151985 * C1301 -
          ((C94753 + C94754) * C73634 + (C94752 + C94751) * C152367 +
           C94750 * C152366) *
              C151985 * C1302 +
          (C94755 * C152366 + (C94754 + C94753) * C152367 +
           (C60607 * C152302 + (C59421 * C61270 - C59422 * C61269 -
                                C59421 * C61271 + C151908 * C61272) *
                                   C152231) *
               C73634) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152026 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152033 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C151985 * C3525) *
              C151944 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152033 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152026 -
           (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
            C59659 * C59417) *
               C151985 * C3525) *
              C151953 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152026 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152033 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152026 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152033 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C151985 * C3525) *
              C151944 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152033 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152026 -
           ((C53100 + C53101 + C53102) * C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C3525) *
              C151953 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C152026 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152033 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C152026 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C152033 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C151985 * C3525) *
              C151944 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C152033 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C152026 -
           ((C67296 + C67297 + C67298) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C3525) *
              C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C152026 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C152033 +
           ((C65493 + C65492 + C65501) * C50892 +
            (C59652 * C14705 + C60350 * C14706 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C14707) *
                C152205) *
               C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152285 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152026 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152285) *
               C152033 +
           ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
             C60608 * C59420) *
                C152285 -
            (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
             C60354 * C59417) *
                C152072) *
               C3525) *
              C3181 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152285) *
               C152026 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152285 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152033 +
           ((C60357 * C59417 + C60358 * C59418 + C61139 * C59419 +
             (C59421 * C8803 - C59422 * C8800 - C59421 * C8804 +
              C151908 * C8806) *
                 C152167 * C59420) *
                C152072 -
            (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
             C59659 * C59417) *
                C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152285 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C152026 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152285) *
               C152033 +
           (((C51232 + C51231 + C51230) * C152167 * C50892 +
             (C52601 + C52602 + C52603) * C152167 * C152205) *
                C152285 -
            ((C53626 + C53627 + C53628) * C152167 * C152205 +
             (C52884 + C52883 + C52882) * C152167 * C50892) *
                C152072) *
               C3525) *
              C3181 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152285) *
               C152026 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152285 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152033 +
           (((C53413 + C53412 + C53411) * C152167 * C50892 +
             (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
              C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
              C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
              C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C53100 + C53101 + C53102) * C152167 * C152205 +
             (C51238 + C51237 + C51236) * C152167 * C50892) *
                C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C152285 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152072) *
               C152026 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152072 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C152285) *
               C152033 +
           (((C65475 + C65474 + C65473) * C50892 +
             (C66855 + C66856 + C66857) * C152205) *
                C152285 -
            ((C67793 + C67794 + C67795) * C152205 +
             (C67087 + C67086 + C67085) * C50892) *
                C152072) *
               C3525) *
              C3181 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152072 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C152285) *
               C152026 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C152285 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152072) *
               C152033 +
           (((C67594 + C67593 + C67598) * C50892 +
             (C60349 * C14705 + C61872 * C14706 +
              (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
               C151908 * C10126) *
                  C14707) *
                 C152205) *
                C152072 -
            ((C67296 + C67297 + C67298) * C152205 +
             (C65481 + C65480 + C65479) * C50892) *
                C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C151985 * C3041 -
               ((C51230 + C51231 + C51232) * C152167 * C152205 +
                (C51229 + C51228 + C51227) * C152167 * C50892) *
                   C151985 * C152030) *
                  C152379 +
              (((C51233 + C51234 + C51235) * C152167 * C50892 +
                (C51236 + C51237 + C51238) * C152167 * C152205) *
                   C151985 * C152030 -
               ((C51235 + C51234 + C51233) * C152167 * C152205 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C152167 * C50892) *
                   C151985 * C3041) *
                  C152372 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C152167 * C50892 +
                (C51239 + C51240 + C51241) * C152167 * C152205) *
                   C151985 * C3041 -
               ((C51242 + C51243 + C51244) * C152167 * C152205 +
                (C51241 + C51240 + C51239) * C152167 * C50892) *
                   C151985 * C152030) *
                  C152355 +
              (((C51675 + C51676 + C51677) * C152167 * C50892 +
                (C50894 * C352 - C50895 * C333 - C50894 * C353 + C50889 * C369 +
                 C50896 * C356 - C50897 * C335 - C50896 * C357 + C50890 * C371 +
                 C50898 * C360 - C50899 * C337 - C50898 * C361 +
                 C50891 * C373) *
                    C152167 * C152205) *
                   C151985 * C152030 -
               ((C51677 + C51676 + C51675) * C152167 * C152205 +
                (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                 C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                 C50894 * C156 - C50895 * C145 - C50894 * C157 +
                 C50889 * C169) *
                    C152167 * C50892) *
                   C151985 * C3041) *
                  C152330) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C151985 * C152380 -
               ((C51230 + C51231 + C51232) * C152167 * C152205 +
                (C51229 + C51228 + C51227) * C152167 * C50892) *
                   C151985 * C152376 +
               ((C51232 + C51231 + C51230) * C152167 * C50892 +
                (C52601 + C52602 + C52603) * C152167 * C152205) *
                   C151985 * C152362 -
               ((C52604 + C52605 + C52606) * C152167 * C152205 +
                (C52603 + C52602 + C52601) * C152167 * C50892) *
                   C151985 * C152336) *
                  C3181 +
              (((C51233 + C51234 + C51235) * C152167 * C50892 +
                (C51236 + C51237 + C51238) * C152167 * C152205) *
                   C151985 * C152376 -
               ((C51235 + C51234 + C51233) * C152167 * C152205 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C152167 * C50892) *
                   C151985 * C152380 -
               ((C53100 + C53101 + C53102) * C152167 * C152205 +
                (C51238 + C51237 + C51236) * C152167 * C50892) *
                   C151985 * C152362 +
               ((C53102 + C53101 + C53100) * C152167 * C50892 +
                (C50894 * C1323 - C50895 * C1310 - C50894 * C1324 +
                 C50889 * C1334 + C50896 * C1325 - C50897 * C1311 -
                 C50896 * C1326 + C50890 * C1335 + C50898 * C1327 -
                 C50899 * C1312 - C50898 * C1328 + C50891 * C1336) *
                    C152167 * C152205) *
                   C151985 * C152336) *
                  C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152374 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152359 +
            ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
              C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
              C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                 C152167 * C50892 +
             (C52879 + C52880 + C52881) * C152167 * C152205) *
                C152329) *
               C3041 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152359 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152374 -
            ((C52885 + C52886 + C52887) * C152167 * C152205 +
             (C52881 + C52880 + C52879) * C152167 * C50892) *
                C152329) *
               C152030) *
              C3181 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152359 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152374 -
            ((C54495 + C54496 + C54497) * C152167 * C152205 +
             (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
              C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
              C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                 C152167 * C50892) *
                C152329) *
               C3041 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152374 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152359 +
            ((C54497 + C54496 + C54495) * C152167 * C50892 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152167 * C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C3041 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152030) *
              C152379 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152030 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C3041) *
              C152372 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C3041 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152030) *
              C152355 +
          ((C59963 * C59417 + C59964 * C59418 + C59965 * C59419 +
            (C59421 * C1327 - C59422 * C1312 - C59421 * C1328 +
             C151908 * C1336) *
                C152167 * C59420) *
               C151985 * C152030 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152380 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152376 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C151985 * C152362 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C151985 * C152336) *
              C3181 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152376 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152380 -
           (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
            C59659 * C59417) *
               C151985 * C152362 +
           (C59660 * C59417 + C59661 * C59418 + C60937 * C59419 +
            (C59421 * C7741 - C59422 * C7734 - C59421 * C7742 +
             C151908 * C7746) *
                C152167 * C59420) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152374 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152359 +
            ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                 C152167 * C59417 +
             C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
                C152329) *
               C3041 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152359 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152374 -
            (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
             C60795 * C59417) *
                C152329) *
               C152030) *
              C3181 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152359 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152374 -
            (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
             (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                 C152167 * C59417) *
                C152329) *
               C3041 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152374 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152359 +
            (C61877 * C59417 + C61876 * C59418 + C61875 * C59419 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C152167 * C59420) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C3041 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C152030) *
              C152379 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C152030 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C3041) *
              C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C3041 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C152030) *
              C152355 +
          (((C65991 + C66006 + C66007) * C50892 +
            (C59961 * C14705 +
             (C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
              C151908 * C1523) *
                 C14706 +
             (C59421 * C1517 - C59422 * C1494 - C59421 * C1518 +
              C151908 * C1530) *
                 C14707) *
                C152205) *
               C151985 * C152030 -
           ((C66007 + C66006 + C65991) * C152205 +
            (C66215 * C14707 + C66214 * C14706 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C14705) *
                C50892) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C152380 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C152376 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C151985 * C152362 -
           ((C66858 + C66859 + C66860) * C152205 +
            (C66857 + C66856 + C66855) * C50892) *
               C151985 * C152336) *
              C3181 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C152376 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C152380 -
           ((C67296 + C67297 + C67298) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C152362 +
           ((C67298 + C67297 + C67296) * C50892 +
            (C59649 * C14705 + C61138 * C14706 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C14707) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C152374 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152359 +
            ((C65787 * C14705 + C65788 * C14706 + C68376 * C14707) * C50892 +
             (C67079 + C67080 + C67100) * C152205) *
                C152329) *
               C3041 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152359 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C152374 -
            ((C67101 + C67092 + C67093) * C152205 +
             (C67100 + C67080 + C67079) * C50892) *
                C152329) *
               C152030) *
              C3181 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152359 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C152374 -
            ((C68678 + C68673 + C68674) * C152205 +
             (C68879 * C14707 + C65791 * C14706 + C65790 * C14705) * C50892) *
                C152329) *
               C3041 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C152374 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152359 +
            ((C68674 + C68673 + C68678) * C50892 +
             (C61873 * C14705 + C67597 * C14706 +
              (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
               C151908 * C9404) *
                  C14707) *
                 C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152285 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C3041 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152285) *
               C152030) *
              C151944 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152285) *
               C3041 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152285 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152030) *
              C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152167 * C59417 +
             C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
                C152285 -
            (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C152167 * C59417) *
                C152072) *
               C3041 +
           ((C60361 * C59417 + C60360 * C59418 + C60359 * C59419 +
             (C59421 * C8586 - C59422 * C8585 - C59421 * C8587 +
              C151908 * C8588) *
                 C152167 * C59420) *
                C152072 -
            (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
             C59662 * C59417) *
                C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152285 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C3041 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152285) *
               C152030) *
              C151944 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152285) *
               C3041 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152285 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152030) *
              C151953 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C152167 * C50892 +
             (C51239 + C51240 + C51241) * C152167 * C152205) *
                C152285 -
            ((C52222 + C52223 + C52224) * C152167 * C152205 +
             (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
              C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
              C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                 C152167 * C50892) *
                C152072) *
               C3041 +
           (((C52224 + C52223 + C52222) * C152167 * C50892 +
             (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
              C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
              C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
              C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C51242 + C51243 + C51244) * C152167 * C152205 +
             (C51241 + C51240 + C51239) * C152167 * C50892) *
                C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C152285 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152072) *
               C3041 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152072 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C152285) *
               C152030) *
              C151944 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152072 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C152285) *
               C3041 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C152285 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152072) *
               C152030) *
              C151953 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C14705 +
              C65793 * C14706 + C65794 * C14707) *
                 C50892 +
             (C65482 + C65483 + C65500) * C152205) *
                C152285 -
            ((C66512 + C66513 + C66514) * C152205 +
             (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
                C152072) *
               C3041 +
           (((C66514 + C66513 + C66512) * C50892 +
             (C60351 * C14705 + C65499 * C14706 +
              (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
               C151908 * C9924) *
                  C14707) *
                 C152205) *
                C152072 -
            ((C65501 + C65492 + C65493) * C152205 +
             (C65500 + C65483 + C65482) * C50892) *
                C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152380 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152376 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C151985 * C152362 -
           ((C52604 + C52605 + C52606) * C152167 * C152205 +
            (C52603 + C52602 + C52601) * C152167 * C50892) *
               C151985 * C152336) *
              C3181 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152376 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152380 -
           ((C53100 + C53101 + C53102) * C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152362 +
           ((C53102 + C53101 + C53100) * C152167 * C50892 +
            (C50894 * C1323 - C50895 * C1310 - C50894 * C1324 + C50889 * C1334 +
             C50896 * C1325 - C50897 * C1311 - C50896 * C1326 + C50890 * C1335 +
             C50898 * C1327 - C50899 * C1312 - C50898 * C1328 +
             C50891 * C1336) *
                C152167 * C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C3041 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152030) *
              C152379 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152030 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C3041) *
              C152372 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C3041 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152030) *
              C152355 +
          (((C51675 + C51676 + C51677) * C152167 * C50892 +
            (C50894 * C352 - C50895 * C333 - C50894 * C353 + C50889 * C369 +
             C50896 * C356 - C50897 * C335 - C50896 * C357 + C50890 * C371 +
             C50898 * C360 - C50899 * C337 - C50898 * C361 + C50891 * C373) *
                C152167 * C152205) *
               C151985 * C152030 -
           ((C51677 + C51676 + C51675) * C152167 * C152205 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C152167 * C50892) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C3041 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152030) *
              C152379 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152030 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C3041) *
              C152372 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C3041 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152030) *
              C152355 +
          ((C59963 * C59417 + C59964 * C59418 + C59965 * C59419 +
            (C59421 * C1327 - C59422 * C1312 - C59421 * C1328 +
             C151908 * C1336) *
                C152167 * C59420) *
               C151985 * C152030 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152380 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152376 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C151985 * C152362 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C151985 * C152336) *
              C3181 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152376 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152380 -
           (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
            C59659 * C59417) *
               C151985 * C152362 +
           (C59660 * C59417 + C59661 * C59418 + C60937 * C59419 +
            (C59421 * C7741 - C59422 * C7734 - C59421 * C7742 +
             C151908 * C7746) *
                C152167 * C59420) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C3041 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C152030) *
              C152379 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C152030 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C3041) *
              C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C3041 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C152030) *
              C152355 +
          (((C65991 + C66006 + C66007) * C50892 +
            (C59961 * C14705 +
             (C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
              C151908 * C1523) *
                 C14706 +
             (C59421 * C1517 - C59422 * C1494 - C59421 * C1518 +
              C151908 * C1530) *
                 C14707) *
                C152205) *
               C151985 * C152030 -
           ((C66007 + C66006 + C65991) * C152205 +
            (C66215 * C14707 + C66214 * C14706 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C14705) *
                C50892) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C152380 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C152376 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C151985 * C152362 -
           ((C66858 + C66859 + C66860) * C152205 +
            (C66857 + C66856 + C66855) * C50892) *
               C151985 * C152336) *
              C3181 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C152376 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C152380 -
           ((C67296 + C67297 + C67298) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C152362 +
           ((C67298 + C67297 + C67296) * C50892 +
            (C59649 * C14705 + C61138 * C14706 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C14707) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C4047 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152026 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C4047) *
               C152033 +
           ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
             C60608 * C59420) *
                C4047 -
            (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
             C60354 * C59417) *
                C152072) *
               C3525) *
              C152270 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C4047) *
               C152026 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C4047 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152033 +
           ((C60357 * C59417 + C60358 * C59418 + C61139 * C59419 +
             (C59421 * C8803 - C59422 * C8800 - C59421 * C8804 +
              C151908 * C8806) *
                 C152167 * C59420) *
                C152072 -
            (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
             C59659 * C59417) *
                C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C4047 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C152026 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C4047) *
               C152033 +
           (((C51232 + C51231 + C51230) * C152167 * C50892 +
             (C52601 + C52602 + C52603) * C152167 * C152205) *
                C4047 -
            ((C53626 + C53627 + C53628) * C152167 * C152205 +
             (C52884 + C52883 + C52882) * C152167 * C50892) *
                C152072) *
               C3525) *
              C152270 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C4047) *
               C152026 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C4047 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152033 +
           (((C53413 + C53412 + C53411) * C152167 * C50892 +
             (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
              C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
              C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
              C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C53100 + C53101 + C53102) * C152167 * C152205 +
             (C51238 + C51237 + C51236) * C152167 * C50892) *
                C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C4047 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152072) *
               C152026 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152072 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C4047) *
               C152033 +
           (((C65475 + C65474 + C65473) * C50892 +
             (C66855 + C66856 + C66857) * C152205) *
                C4047 -
            ((C67793 + C67794 + C67795) * C152205 +
             (C67087 + C67086 + C67085) * C50892) *
                C152072) *
               C3525) *
              C152270 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152072 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C4047) *
               C152026 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C4047 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152072) *
               C152033 +
           (((C67594 + C67593 + C67598) * C50892 +
             (C60349 * C14705 + C61872 * C14706 +
              (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
               C151908 * C10126) *
                  C14707) *
                 C152205) *
                C152072 -
            ((C67296 + C67297 + C67298) * C152205 +
             (C65481 + C65480 + C65479) * C50892) *
                C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152068 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152075 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C4719) *
              C152026 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152075 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C152068 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C4719) *
              C152033 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C152068 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C152075 +
           (C60796 * C59417 + C60797 * C59418 + C60799 * C59419 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C152167 * C59420) *
               C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152068 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152075 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C4719) *
              C152026 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152075 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C152068 -
           ((C52885 + C52886 + C52887) * C152167 * C152205 +
            (C52881 + C52880 + C52879) * C152167 * C50892) *
               C4719) *
              C152033 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C152068 -
           ((C53626 + C53627 + C53628) * C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C152075 +
           ((C52887 + C52886 + C52885) * C152167 * C50892 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152167 * C152205) *
               C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C152068 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152075 +
           ((C65787 * C14705 + C65788 * C14706 + C68376 * C14707) * C50892 +
            (C67079 + C67080 + C67100) * C152205) *
               C4719) *
              C152026 +
          (((C66508 + C66507 + C66506) * C50892 +
            (C67085 + C67086 + C67087) * C152205) *
               C152075 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C152068 -
           ((C67101 + C67092 + C67093) * C152205 +
            (C67100 + C67080 + C67079) * C50892) *
               C4719) *
              C152033 +
          (((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C152068 -
           ((C67793 + C67794 + C67795) * C152205 +
            (C67087 + C67086 + C67085) * C50892) *
               C152075 +
           ((C67093 + C67092 + C67101) * C50892 +
            (C60792 * C14705 + C62160 * C14706 +
             (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
              C151908 * C61658) *
                 C14707) *
                C152205) *
               C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50894 * C150 - C50895 * C142 - C50894 * C151 +
                  C50889 * C166 + C50896 * C152 - C50897 * C143 -
                  C50896 * C153 + C50890 * C167 + C50898 * C154 -
                  C50899 * C144 - C50898 * C155 + C50891 * C168) *
                     C152167 * C50892 +
                 (C51227 + C51228 + C51229) * C152167 * C152205) *
                    C4047 -
                ((C52216 + C52217 + C52218) * C152167 * C152205 +
                 (C50898 * C537 - C50899 * C524 - C50898 * C538 +
                  C50891 * C560 + C50896 * C539 - C50897 * C525 -
                  C50896 * C540 + C50890 * C561 + C50894 * C541 -
                  C50895 * C526 - C50894 * C542 + C50889 * C562) *
                     C152167 * C50892) *
                    C152072) *
                   C3041 +
               (((C52218 + C52217 + C52216) * C152167 * C50892 +
                 (C52882 + C52883 + C52884) * C152167 * C152205) *
                    C152072 -
                ((C51230 + C51231 + C51232) * C152167 * C152205 +
                 (C51229 + C51228 + C51227) * C152167 * C50892) *
                    C4047) *
                   C152030) *
                  C152370 +
              ((((C50894 * C539 - C50895 * C525 - C50894 * C540 +
                  C50889 * C561 + C50896 * C537 - C50897 * C524 -
                  C50896 * C538 + C50890 * C560 + C50898 * C535 -
                  C50899 * C523 - C50898 * C536 + C50891 * C559) *
                     C152167 * C50892 +
                 (C52219 + C52220 + C52221) * C152167 * C152205) *
                    C152072 -
                ((C51235 + C51234 + C51233) * C152167 * C152205 +
                 (C50898 * C156 - C50899 * C145 - C50898 * C157 +
                  C50891 * C169 + C50896 * C154 - C50897 * C144 -
                  C50896 * C155 + C50890 * C168 + C50894 * C152 -
                  C50895 * C143 - C50894 * C153 + C50889 * C167) *
                     C152167 * C50892) *
                    C4047) *
                   C3041 +
               (((C51233 + C51234 + C51235) * C152167 * C50892 +
                 (C51236 + C51237 + C51238) * C152167 * C152205) *
                    C4047 -
                ((C53411 + C53412 + C53413) * C152167 * C152205 +
                 (C52221 + C52220 + C52219) * C152167 * C50892) *
                    C152072) *
                   C152030) *
                  C152353 +
              ((((C50894 * C154 - C50895 * C144 - C50894 * C155 +
                  C50889 * C168 + C50896 * C156 - C50897 * C145 -
                  C50896 * C157 + C50890 * C169 + C50898 * C158 -
                  C50899 * C146 - C50898 * C159 + C50891 * C170) *
                     C152167 * C50892 +
                 (C51239 + C51240 + C51241) * C152167 * C152205) *
                    C4047 -
                ((C52222 + C52223 + C52224) * C152167 * C152205 +
                 (C50898 * C551 - C50899 * C531 - C50898 * C552 +
                  C50891 * C567 + C50896 * C535 - C50897 * C523 -
                  C50896 * C536 + C50890 * C559 + C50894 * C537 -
                  C50895 * C524 - C50894 * C538 + C50889 * C560) *
                     C152167 * C50892) *
                    C152072) *
                   C3041 +
               (((C52224 + C52223 + C52222) * C152167 * C50892 +
                 (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
                  C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
                  C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
                  C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                     C152167 * C152205) *
                    C152072 -
                ((C51242 + C51243 + C51244) * C152167 * C152205 +
                 (C51241 + C51240 + C51239) * C152167 * C50892) *
                    C4047) *
                   C152030) *
                  C152320) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C4047 -
               ((C52216 + C52217 + C52218) * C152167 * C152205 +
                (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
                 C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                 C50894 * C541 - C50895 * C526 - C50894 * C542 +
                 C50889 * C562) *
                    C152167 * C50892) *
                   C152072) *
                  C152380 +
              (((C52218 + C52217 + C52216) * C152167 * C50892 +
                (C52882 + C52883 + C52884) * C152167 * C152205) *
                   C152072 -
               ((C51230 + C51231 + C51232) * C152167 * C152205 +
                (C51229 + C51228 + C51227) * C152167 * C50892) *
                   C4047) *
                  C152376 +
              (((C51232 + C51231 + C51230) * C152167 * C50892 +
                (C52601 + C52602 + C52603) * C152167 * C152205) *
                   C4047 -
               ((C53626 + C53627 + C53628) * C152167 * C152205 +
                (C52884 + C52883 + C52882) * C152167 * C50892) *
                   C152072) *
                  C152362 +
              (((C53628 + C53627 + C53626) * C152167 * C50892 +
                (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 +
                 C50889 * C8018 + C50896 * C8007 - C50897 * C7999 -
                 C50896 * C8008 + C50890 * C8017 + C50898 * C8586 -
                 C50899 * C8585 - C50898 * C8587 + C50891 * C8588) *
                    C152167 * C152205) *
                   C152072 -
               ((C52604 + C52605 + C52606) * C152167 * C152205 +
                (C52603 + C52602 + C52601) * C152167 * C50892) *
                   C4047) *
                  C152336) *
             C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152381 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152378 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152365 -
           ((C54904 + C54905 + C54906) * C152167 * C152205 +
            (C50898 * C2407 - C50899 * C2398 - C50898 * C2408 + C50891 * C2422 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50894 * C2411 - C50895 * C2400 - C50894 * C2412 +
             C50889 * C2424) *
                C152167 * C50892) *
               C152342) *
              C3041 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152378 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C152381 -
           ((C52885 + C52886 + C52887) * C152167 * C152205 +
            (C52881 + C52880 + C52879) * C152167 * C50892) *
               C152365 +
           ((C54906 + C54905 + C54904) * C152167 * C50892 +
            (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 + C50889 * C9400 +
             C50896 * C9387 - C50897 * C9381 - C50896 * C9388 + C50890 * C9399 +
             C50898 * C9922 - C50899 * C9921 - C50898 * C9923 +
             C50891 * C9924) *
                C152167 * C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C4047 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C3041 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C4047) *
               C152030) *
              C152370 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C4047) *
               C3041 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C4047 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152030) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152167 * C59417 +
             C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
                C4047 -
            (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C152167 * C59417) *
                C152072) *
               C3041 +
           ((C60361 * C59417 + C60360 * C59418 + C60359 * C59419 +
             (C59421 * C8586 - C59422 * C8585 - C59421 * C8587 +
              C151908 * C8588) *
                 C152167 * C59420) *
                C152072 -
            (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
             C59662 * C59417) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C4047 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C152380 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152072 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C4047) *
              C152376 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C4047 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C152072) *
              C152362 +
          ((C60353 * C59417 + C60798 * C59418 + C61281 * C59419 +
            (C59421 * C61270 - C59422 * C61269 - C59421 * C61271 +
             C151908 * C61272) *
                C152167 * C59420) *
               C152072 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152381 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152378 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152365 -
           (C62163 * C59420 + C62164 * C59419 + C62165 * C59418 +
            (C59421 * C2411 - C59422 * C2400 - C59421 * C2412 +
             C151908 * C2424) *
                C152167 * C59417) *
               C152342) *
              C3041 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152378 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C152381 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C152365 +
           (C62165 * C59417 + C62164 * C59418 + C62163 * C59419 +
            (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
             C151908 * C62140) *
                C152167 * C59420) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C4047 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152072) *
               C3041 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152072 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C4047) *
               C152030) *
              C152370 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152072 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C4047) *
               C3041 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C4047 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152072) *
               C152030) *
              C152353 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C14705 +
              C65793 * C14706 + C65794 * C14707) *
                 C50892 +
             (C65482 + C65483 + C65500) * C152205) *
                C4047 -
            ((C66512 + C66513 + C66514) * C152205 +
             (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
                C152072) *
               C3041 +
           (((C66514 + C66513 + C66512) * C50892 +
             (C60351 * C14705 + C65499 * C14706 +
              (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
               C151908 * C9924) *
                  C14707) *
                 C152205) *
                C152072 -
            ((C65501 + C65492 + C65493) * C152205 +
             (C65500 + C65483 + C65482) * C50892) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C4047 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152072) *
              C152380 +
          (((C66508 + C66507 + C66506) * C50892 +
            (C67085 + C67086 + C67087) * C152205) *
               C152072 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C4047) *
              C152376 +
          (((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C4047 -
           ((C67793 + C67794 + C67795) * C152205 +
            (C67087 + C67086 + C67085) * C50892) *
               C152072) *
              C152362 +
          (((C67795 + C67794 + C67793) * C50892 +
            (C60793 * C14705 + C60794 * C14706 +
             (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
              C151908 * C62140) *
                 C14707) *
                C152205) *
               C152072 -
           ((C66858 + C66859 + C66860) * C152205 +
            (C66857 + C66856 + C66855) * C50892) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C152381 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152378 +
           ((C65787 * C14705 + C65788 * C14706 + C68376 * C14707) * C50892 +
            (C67079 + C67080 + C67100) * C152205) *
               C152365 -
           ((C69078 + C69079 + C69080) * C152205 +
            (C68378 * C14707 + C68376 * C14706 + C65788 * C14705) * C50892) *
               C152342) *
              C3041 +
          (((C66508 + C66507 + C66506) * C50892 +
            (C67085 + C67086 + C67087) * C152205) *
               C152378 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C152381 -
           ((C67101 + C67092 + C67093) * C152205 +
            (C67100 + C67080 + C67079) * C50892) *
               C152365 +
           ((C69080 + C69079 + C69078) * C50892 +
            (C62161 * C14705 + C67099 * C14706 +
             (C59421 * C69074 - C59422 * C69073 - C59421 * C69075 +
              C151908 * C69076) *
                 C14707) *
                C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152068 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152075 +
            ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                 C152167 * C59417 +
             C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
                C4719) *
               C3041 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152075 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152068 -
            (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
             C60795 * C59417) *
                C4719) *
               C152030) *
              C152270 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152075 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152068 -
            (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
             (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                 C152167 * C59417) *
                C4719) *
               C3041 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152068 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152075 +
            (C61877 * C59417 + C61876 * C59418 + C61875 * C59419 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C152167 * C59420) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152068 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152075 +
            ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
              C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
              C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                 C152167 * C50892 +
             (C52879 + C52880 + C52881) * C152167 * C152205) *
                C4719) *
               C3041 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152075 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152068 -
            ((C52885 + C52886 + C52887) * C152167 * C152205 +
             (C52881 + C52880 + C52879) * C152167 * C50892) *
                C4719) *
               C152030) *
              C152270 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152075 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152068 -
            ((C54495 + C54496 + C54497) * C152167 * C152205 +
             (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
              C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
              C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                 C152167 * C50892) *
                C4719) *
               C3041 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152068 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152075 +
            ((C54497 + C54496 + C54495) * C152167 * C50892 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152167 * C152205) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C152068 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152075 +
            ((C65787 * C14705 + C65788 * C14706 + C68376 * C14707) * C50892 +
             (C67079 + C67080 + C67100) * C152205) *
                C4719) *
               C3041 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152075 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C152068 -
            ((C67101 + C67092 + C67093) * C152205 +
             (C67100 + C67080 + C67079) * C50892) *
                C4719) *
               C152030) *
              C152270 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152075 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C152068 -
            ((C68678 + C68673 + C68674) * C152205 +
             (C68879 * C14707 + C65791 * C14706 + C65790 * C14705) * C50892) *
                C4719) *
               C3041 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C152068 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152075 +
            ((C68674 + C68673 + C68678) * C50892 +
             (C61873 * C14705 + C67597 * C14706 +
              (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
               C151908 * C9404) *
                  C14707) *
                 C152205) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C4047 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152072) *
              C152380 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152072 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C4047) *
              C152376 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C4047 -
           ((C53626 + C53627 + C53628) * C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C152072) *
              C152362 +
          (((C53628 + C53627 + C53626) * C152167 * C50892 +
            (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
             C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
             C50898 * C8586 - C50899 * C8585 - C50898 * C8587 +
             C50891 * C8588) *
                C152167 * C152205) *
               C152072 -
           ((C52604 + C52605 + C52606) * C152167 * C152205 +
            (C52603 + C52602 + C52601) * C152167 * C50892) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C4047 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C3041 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C4047) *
               C152030) *
              C152370 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C4047) *
               C3041 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C4047 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152030) *
              C152353 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C152167 * C50892 +
             (C51239 + C51240 + C51241) * C152167 * C152205) *
                C4047 -
            ((C52222 + C52223 + C52224) * C152167 * C152205 +
             (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
              C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
              C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                 C152167 * C50892) *
                C152072) *
               C3041 +
           (((C52224 + C52223 + C52222) * C152167 * C50892 +
             (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
              C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
              C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
              C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C51242 + C51243 + C51244) * C152167 * C152205 +
             (C51241 + C51240 + C51239) * C152167 * C50892) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C4047 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C3041 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C4047) *
               C152030) *
              C152370 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C4047) *
               C3041 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C4047 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152030) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152167 * C59417 +
             C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
                C4047 -
            (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C152167 * C59417) *
                C152072) *
               C3041 +
           ((C60361 * C59417 + C60360 * C59418 + C60359 * C59419 +
             (C59421 * C8586 - C59422 * C8585 - C59421 * C8587 +
              C151908 * C8588) *
                 C152167 * C59420) *
                C152072 -
            (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
             C59662 * C59417) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C4047 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C152380 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152072 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C4047) *
              C152376 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C4047 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C152072) *
              C152362 +
          ((C60353 * C59417 + C60798 * C59418 + C61281 * C59419 +
            (C59421 * C61270 - C59422 * C61269 - C59421 * C61271 +
             C151908 * C61272) *
                C152167 * C59420) *
               C152072 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C4047 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152072) *
               C3041 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152072 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C4047) *
               C152030) *
              C152370 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152072 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C4047) *
               C3041 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C4047 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152072) *
               C152030) *
              C152353 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C14705 +
              C65793 * C14706 + C65794 * C14707) *
                 C50892 +
             (C65482 + C65483 + C65500) * C152205) *
                C4047 -
            ((C66512 + C66513 + C66514) * C152205 +
             (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
                C152072) *
               C3041 +
           (((C66514 + C66513 + C66512) * C50892 +
             (C60351 * C14705 + C65499 * C14706 +
              (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
               C151908 * C9924) *
                  C14707) *
                 C152205) *
                C152072 -
            ((C65501 + C65492 + C65493) * C152205 +
             (C65500 + C65483 + C65482) * C50892) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C4047 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152072) *
              C152380 +
          (((C66508 + C66507 + C66506) * C50892 +
            (C67085 + C67086 + C67087) * C152205) *
               C152072 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C4047) *
              C152376 +
          (((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C4047 -
           ((C67793 + C67794 + C67795) * C152205 +
            (C67087 + C67086 + C67085) * C50892) *
               C152072) *
              C152362 +
          (((C67795 + C67794 + C67793) * C50892 +
            (C60793 * C14705 + C60794 * C14706 +
             (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
              C151908 * C62140) *
                 C14707) *
                C152205) *
               C152072 -
           ((C66858 + C66859 + C66860) * C152205 +
            (C66857 + C66856 + C66855) * C50892) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C151985 * C152284 -
               ((C51230 + C51231 + C51232) * C152167 * C152205 +
                (C51229 + C51228 + C51227) * C152167 * C50892) *
                   C151985 * C152030) *
                  C703 +
              (((C51233 + C51234 + C51235) * C152167 * C50892 +
                (C51236 + C51237 + C51238) * C152167 * C152205) *
                   C151985 * C152030 -
               ((C51235 + C51234 + C51233) * C152167 * C152205 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C152167 * C50892) *
                   C151985 * C152284) *
                  C704 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C152167 * C50892 +
                (C51239 + C51240 + C51241) * C152167 * C152205) *
                   C151985 * C152284 -
               ((C51242 + C51243 + C51244) * C152167 * C152205 +
                (C51241 + C51240 + C51239) * C152167 * C50892) *
                   C151985 * C152030) *
                  C705 +
              (((C51675 + C51676 + C51677) * C152167 * C50892 +
                (C50894 * C352 - C50895 * C333 - C50894 * C353 + C50889 * C369 +
                 C50896 * C356 - C50897 * C335 - C50896 * C357 + C50890 * C371 +
                 C50898 * C360 - C50899 * C337 - C50898 * C361 +
                 C50891 * C373) *
                    C152167 * C152205) *
                   C151985 * C152030 -
               ((C51677 + C51676 + C51675) * C152167 * C152205 +
                (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                 C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                 C50894 * C156 - C50895 * C145 - C50894 * C157 +
                 C50889 * C169) *
                    C152167 * C50892) *
                   C151985 * C152284) *
                  C152330) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C151985 * C1661 -
               ((C51230 + C51231 + C51232) * C152167 * C152205 +
                (C51229 + C51228 + C51227) * C152167 * C50892) *
                   C151985 * C1662 +
               ((C51232 + C51231 + C51230) * C152167 * C50892 +
                (C52601 + C52602 + C52603) * C152167 * C152205) *
                   C151985 * C1663 -
               ((C52604 + C52605 + C52606) * C152167 * C152205 +
                (C52603 + C52602 + C52601) * C152167 * C50892) *
                   C151985 * C152336) *
                  C152270 +
              (((C51233 + C51234 + C51235) * C152167 * C50892 +
                (C51236 + C51237 + C51238) * C152167 * C152205) *
                   C151985 * C1662 -
               ((C51235 + C51234 + C51233) * C152167 * C152205 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C152167 * C50892) *
                   C151985 * C1661 -
               ((C53100 + C53101 + C53102) * C152167 * C152205 +
                (C51238 + C51237 + C51236) * C152167 * C50892) *
                   C151985 * C1663 +
               ((C53102 + C53101 + C53100) * C152167 * C50892 +
                (C50894 * C1323 - C50895 * C1310 - C50894 * C1324 +
                 C50889 * C1334 + C50896 * C1325 - C50897 * C1311 -
                 C50896 * C1326 + C50890 * C1335 + C50898 * C1327 -
                 C50899 * C1312 - C50898 * C1328 + C50891 * C1336) *
                    C152167 * C152205) *
                   C151985 * C152336) *
                  C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C2161 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C2162 +
            ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
              C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
              C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                 C152167 * C50892 +
             (C52879 + C52880 + C52881) * C152167 * C152205) *
                C152329) *
               C152284 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C2162 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C2161 -
            ((C52885 + C52886 + C52887) * C152167 * C152205 +
             (C52881 + C52880 + C52879) * C152167 * C50892) *
                C152329) *
               C152030) *
              C152270 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C2162 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C2161 -
            ((C54495 + C54496 + C54497) * C152167 * C152205 +
             (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
              C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
              C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                 C152167 * C50892) *
                C152329) *
               C152284 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C2161 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C2162 +
            ((C54497 + C54496 + C54495) * C152167 * C50892 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152167 * C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152284 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152030) *
              C703 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152030 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152284) *
              C704 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152284 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152030) *
              C705 +
          ((C59963 * C59417 + C59964 * C59418 + C59965 * C59419 +
            (C59421 * C1327 - C59422 * C1312 - C59421 * C1328 +
             C151908 * C1336) *
                C152167 * C59420) *
               C151985 * C152030 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C1661 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C1662 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C151985 * C1663 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C151985 * C152336) *
              C152270 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C1662 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C1661 -
           (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
            C59659 * C59417) *
               C151985 * C1663 +
           (C59660 * C59417 + C59661 * C59418 + C60937 * C59419 +
            (C59421 * C7741 - C59422 * C7734 - C59421 * C7742 +
             C151908 * C7746) *
                C152167 * C59420) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C2161 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C2162 +
            ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                 C152167 * C59417 +
             C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
                C152329) *
               C152284 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C2162 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C2161 -
            (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
             C60795 * C59417) *
                C152329) *
               C152030) *
              C152270 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C2162 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C2161 -
            (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
             (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                 C152167 * C59417) *
                C152329) *
               C152284 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C2161 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C2162 +
            (C61877 * C59417 + C61876 * C59418 + C61875 * C59419 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C152167 * C59420) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C152284 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C152030) *
              C703 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C152030 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C152284) *
              C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C152284 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C152030) *
              C705 +
          (((C65991 + C66006 + C66007) * C50892 +
            (C59961 * C14705 +
             (C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
              C151908 * C1523) *
                 C14706 +
             (C59421 * C1517 - C59422 * C1494 - C59421 * C1518 +
              C151908 * C1530) *
                 C14707) *
                C152205) *
               C151985 * C152030 -
           ((C66007 + C66006 + C65991) * C152205 +
            ((C59421 * C549 - C59422 * C530 - C59421 * C550 + C151908 * C566) *
                 C14707 +
             (C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                 C14706 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C14705) *
                C50892) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C1661 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C1662 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C151985 * C1663 -
           ((C66858 + C66859 + C66860) * C152205 +
            (C66857 + C66856 + C66855) * C50892) *
               C151985 * C152336) *
              C152270 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C1662 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C1661 -
           ((C67296 + C67297 + C67298) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C1663 +
           ((C67298 + C67297 + C67296) * C50892 +
            (C59649 * C14705 + C61138 * C14706 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C14707) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C2161 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C2162 +
            ((C65787 * C14705 + C65788 * C14706 + C68376 * C14707) * C50892 +
             (C67079 + C67080 + C67100) * C152205) *
                C152329) *
               C152284 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C2162 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C2161 -
            ((C67101 + C67092 + C67093) * C152205 +
             (C67100 + C67080 + C67079) * C50892) *
                C152329) *
               C152030) *
              C152270 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C2162 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C2161 -
            ((C68678 + C68673 + C68674) * C152205 +
             ((C59421 * C2415 - C59422 * C2402 - C59421 * C2416 +
               C151908 * C2426) *
                  C14707 +
              C65791 * C14706 + C65790 * C14705) *
                 C50892) *
                C152329) *
               C152284 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C2161 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C2162 +
            ((C68674 + C68673 + C68678) * C50892 +
             (C61873 * C14705 + C67597 * C14706 +
              (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
               C151908 * C9404) *
                  C14707) *
                 C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50894 * C150 - C50895 * C142 - C50894 * C151 +
                  C50889 * C166 + C50896 * C152 - C50897 * C143 -
                  C50896 * C153 + C50890 * C167 + C50898 * C154 -
                  C50899 * C144 - C50898 * C155 + C50891 * C168) *
                     C152167 * C50892 +
                 (C51227 + C51228 + C51229) * C152167 * C152205) *
                    C152285 -
                ((C52216 + C52217 + C52218) * C152167 * C152205 +
                 (C50898 * C537 - C50899 * C524 - C50898 * C538 +
                  C50891 * C560 + C50896 * C539 - C50897 * C525 -
                  C50896 * C540 + C50890 * C561 + C50894 * C541 -
                  C50895 * C526 - C50894 * C542 + C50889 * C562) *
                     C152167 * C50892) *
                    C152072) *
                   C152284 +
               (((C52218 + C52217 + C52216) * C152167 * C50892 +
                 (C50894 * C1509 - C50895 * C1490 - C50894 * C1510 +
                  C50889 * C1526 + C50896 * C1507 - C50897 * C1489 -
                  C50896 * C1508 + C50890 * C1525 + C50898 * C1505 -
                  C50899 * C1488 - C50898 * C1506 + C50891 * C1524) *
                     C152167 * C152205) *
                    C152072 -
                ((C51230 + C51231 + C51232) * C152167 * C152205 +
                 (C51229 + C51228 + C51227) * C152167 * C50892) *
                    C152285) *
                   C152030) *
                  C323 +
              ((((C50894 * C539 - C50895 * C525 - C50894 * C540 +
                  C50889 * C561 + C50896 * C537 - C50897 * C524 -
                  C50896 * C538 + C50890 * C560 + C50898 * C535 -
                  C50899 * C523 - C50898 * C536 + C50891 * C559) *
                     C152167 * C50892 +
                 (C52219 + C52220 + C52221) * C152167 * C152205) *
                    C152072 -
                ((C51235 + C51234 + C51233) * C152167 * C152205 +
                 (C50898 * C156 - C50899 * C145 - C50898 * C157 +
                  C50891 * C169 + C50896 * C154 - C50897 * C144 -
                  C50896 * C155 + C50890 * C168 + C50894 * C152 -
                  C50895 * C143 - C50894 * C153 + C50889 * C167) *
                     C152167 * C50892) *
                    C152285) *
                   C152284 +
               (((C51233 + C51234 + C51235) * C152167 * C50892 +
                 (C51236 + C51237 + C51238) * C152167 * C152205) *
                    C152285 -
                ((C50898 * C1503 - C50899 * C1487 - C50898 * C1504 +
                  C50891 * C1523 + C50896 * C1505 - C50897 * C1488 -
                  C50896 * C1506 + C50890 * C1524 + C50894 * C1507 -
                  C50895 * C1489 - C50894 * C1508 + C50889 * C1525) *
                     C152167 * C152205 +
                 (C52221 + C52220 + C52219) * C152167 * C50892) *
                    C152072) *
                   C152030) *
                  C324 +
              ((((C50894 * C154 - C50895 * C144 - C50894 * C155 +
                  C50889 * C168 + C50896 * C156 - C50897 * C145 -
                  C50896 * C157 + C50890 * C169 + C50898 * C158 -
                  C50899 * C146 - C50898 * C159 + C50891 * C170) *
                     C152167 * C50892 +
                 (C51239 + C51240 + C51241) * C152167 * C152205) *
                    C152285 -
                ((C52222 + C52223 + C52224) * C152167 * C152205 +
                 (C50898 * C551 - C50899 * C531 - C50898 * C552 +
                  C50891 * C567 + C50896 * C535 - C50897 * C523 -
                  C50896 * C536 + C50890 * C559 + C50894 * C537 -
                  C50895 * C524 - C50894 * C538 + C50889 * C560) *
                     C152167 * C50892) *
                    C152072) *
                   C152284 +
               (((C52224 + C52223 + C52222) * C152167 * C50892 +
                 (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
                  C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
                  C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
                  C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                     C152167 * C152205) *
                    C152072 -
                ((C51242 + C51243 + C51244) * C152167 * C152205 +
                 (C51241 + C51240 + C51239) * C152167 * C50892) *
                    C152285) *
                   C152030) *
                  C152320) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C152285 -
               ((C52216 + C52217 + C52218) * C152167 * C152205 +
                (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
                 C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                 C50894 * C541 - C50895 * C526 - C50894 * C542 +
                 C50889 * C562) *
                    C152167 * C50892) *
                   C152072) *
                  C1661 +
              (((C52218 + C52217 + C52216) * C152167 * C50892 +
                (C52882 + C52883 + C52884) * C152167 * C152205) *
                   C152072 -
               ((C51230 + C51231 + C51232) * C152167 * C152205 +
                (C51229 + C51228 + C51227) * C152167 * C50892) *
                   C152285) *
                  C1662 +
              (((C51232 + C51231 + C51230) * C152167 * C50892 +
                (C52601 + C52602 + C52603) * C152167 * C152205) *
                   C152285 -
               ((C53626 + C53627 + C53628) * C152167 * C152205 +
                (C52884 + C52883 + C52882) * C152167 * C50892) *
                   C152072) *
                  C1663 +
              (((C53628 + C53627 + C53626) * C152167 * C50892 +
                (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 +
                 C50889 * C8018 + C50896 * C8007 - C50897 * C7999 -
                 C50896 * C8008 + C50890 * C8017 + C50898 * C8586 -
                 C50899 * C8585 - C50898 * C8587 + C50891 * C8588) *
                    C152167 * C152205) *
                   C152072 -
               ((C52604 + C52605 + C52606) * C152167 * C152205 +
                (C52603 + C52602 + C52601) * C152167 * C50892) *
                   C152285) *
                  C152336) *
             C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C2757 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C2758 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C2759 -
           ((C54904 + C54905 + C54906) * C152167 * C152205 +
            (C50898 * C2407 - C50899 * C2398 - C50898 * C2408 + C50891 * C2422 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50894 * C2411 - C50895 * C2400 - C50894 * C2412 +
             C50889 * C2424) *
                C152167 * C50892) *
               C152342) *
              C152284 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C2758 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C2757 -
           ((C52885 + C52886 + C52887) * C152167 * C152205 +
            (C52881 + C52880 + C52879) * C152167 * C50892) *
               C2759 +
           ((C54906 + C54905 + C54904) * C152167 * C50892 +
            (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 + C50889 * C9400 +
             C50896 * C9387 - C50897 * C9381 - C50896 * C9388 + C50890 * C9399 +
             C50898 * C9922 - C50899 * C9921 - C50898 * C9923 +
             C50891 * C9924) *
                C152167 * C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152285 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152284 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             (C59421 * C8009 - C59422 * C8000 - C59421 * C8010 +
              C151908 * C8018) *
                 C152167 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152285) *
               C152030) *
              C323 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152285) *
               C152284 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152285 -
            ((C59421 * C8007 - C59422 * C7999 - C59421 * C8008 +
              C151908 * C8017) *
                 C152167 * C59420 +
             C60358 * C59419 + C60357 * C59418 + C60356 * C59417) *
                C152072) *
               C152030) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152167 * C59417 +
             C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
                C152285 -
            (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C152167 * C59417) *
                C152072) *
               C152284 +
           ((C60361 * C59417 + C60360 * C59418 + C60359 * C59419 +
             (C59421 * C8586 - C59422 * C8585 - C59421 * C8587 +
              C151908 * C8588) *
                 C152167 * C59420) *
                C152072 -
            (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
             C59662 * C59417) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152285 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C1661 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152072 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C152285) *
              C1662 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C152285 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C152072) *
              C1663 +
          ((C60353 * C59417 + C60798 * C59418 + C61281 * C59419 +
            (C59421 * C61270 - C59422 * C61269 - C59421 * C61271 +
             C151908 * C61272) *
                C152167 * C59420) *
               C152072 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C2757 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C2758 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C2759 -
           (C62163 * C59420 + C62164 * C59419 + C62165 * C59418 +
            (C59421 * C2411 - C59422 * C2400 - C59421 * C2412 +
             C151908 * C2424) *
                C152167 * C59417) *
               C152342) *
              C152284 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C2758 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C2757 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C2759 +
           (C62165 * C59417 + C62164 * C59418 + C62163 * C59419 +
            (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
             C151908 * C62140) *
                C152167 * C59420) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C152285 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152072) *
               C152284 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C60345 * C14705 + C60791 * C14706 + C62161 * C14707) * C152205) *
                C152072 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C152285) *
               C152030) *
              C323 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152072 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C152285) *
               C152284 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C152285 -
            (((C59421 * C9387 - C59422 * C9381 - C59421 * C9388 +
               C151908 * C9399) *
                  C14707 +
              C61873 * C14706 + C60348 * C14705) *
                 C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152072) *
               C152030) *
              C324 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C14705 +
              C65793 * C14706 + C65794 * C14707) *
                 C50892 +
             (C65482 + C65483 + C65500) * C152205) *
                C152285 -
            ((C66512 + C66513 + C66514) * C152205 +
             (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
                C152072) *
               C152284 +
           (((C66514 + C66513 + C66512) * C50892 +
             (C60351 * C14705 + C65499 * C14706 +
              (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
               C151908 * C9924) *
                  C14707) *
                 C152205) *
                C152072 -
            ((C65501 + C65492 + C65493) * C152205 +
             (C65500 + C65483 + C65482) * C50892) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C152285 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152072) *
              C1661 +
          (((C66508 + C66507 + C66506) * C50892 +
            (C67085 + C67086 + C67087) * C152205) *
               C152072 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C152285) *
              C1662 +
          (((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C152285 -
           ((C67793 + C67794 + C67795) * C152205 +
            (C67087 + C67086 + C67085) * C50892) *
               C152072) *
              C1663 +
          (((C67795 + C67794 + C67793) * C50892 +
            (C60793 * C14705 + C60794 * C14706 +
             (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
              C151908 * C62140) *
                 C14707) *
                C152205) *
               C152072 -
           ((C66858 + C66859 + C66860) * C152205 +
            (C66857 + C66856 + C66855) * C50892) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C2757 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C2758 +
           ((C65787 * C14705 + C65788 * C14706 + C68376 * C14707) * C50892 +
            (C67079 + C67080 + C67100) * C152205) *
               C2759 -
           ((C69078 + C69079 + C69080) * C152205 +
            (C68378 * C14707 + C68376 * C14706 + C65788 * C14705) * C50892) *
               C152342) *
              C152284 +
          (((C66508 + C66507 + C66506) * C50892 +
            (C67085 + C67086 + C67087) * C152205) *
               C2758 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C2757 -
           ((C67101 + C67092 + C67093) * C152205 +
            (C67100 + C67080 + C67079) * C50892) *
               C2759 +
           ((C69080 + C69079 + C69078) * C50892 +
            (C62161 * C14705 + C67099 * C14706 +
             (C59421 * C69074 - C59422 * C69073 - C59421 * C69075 +
              C151908 * C69076) *
                 C14707) *
                C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                   C152167 * C50892 +
               (C50894 * C344 - C50895 * C329 - C50894 * C345 + C50889 * C365 +
                C50896 * C342 - C50897 * C328 - C50896 * C343 + C50890 * C364 +
                C50898 * C340 - C50899 * C327 - C50898 * C341 + C50891 * C363) *
                   C152167 * C152205) *
                  C151985 * C151967 * C129 -
              ((C50898 * C338 - C50899 * C326 - C50898 * C339 + C50891 * C362 +
                C50896 * C340 - C50897 * C327 - C50896 * C341 + C50890 * C363 +
                C50894 * C342 - C50895 * C328 - C50894 * C343 + C50889 * C364) *
                   C152167 * C152205 +
               (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                   C152167 * C50892) *
                  C151985 * C151967 * C130 +
              ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                   C152167 * C50892 +
               (C50894 * C340 - C50895 * C327 - C50894 * C341 + C50889 * C363 +
                C50896 * C338 - C50897 * C326 - C50896 * C339 + C50890 * C362 +
                C50898 * C354 - C50899 * C334 - C50898 * C355 + C50891 * C370) *
                   C152167 * C152205) *
                  C151985 * C151967 * C131 -
              ((C50898 * C358 - C50899 * C336 - C50898 * C359 + C50891 * C372 +
                C50896 * C354 - C50897 * C334 - C50896 * C355 + C50890 * C370 +
                C50894 * C338 - C50895 * C326 - C50894 * C339 + C50889 * C362) *
                   C152167 * C152205 +
               (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                   C152167 * C50892) *
                  C151985 * C151967 * C132 +
              ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
                C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
                C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
                   C152167 * C50892 +
               (C50894 * C354 - C50895 * C334 - C50894 * C355 + C50889 * C370 +
                C50896 * C358 - C50897 * C336 - C50896 * C359 + C50890 * C372 +
                C50898 * C708 - C50899 * C707 - C50898 * C709 + C50891 * C710) *
                   C152167 * C152205) *
                  C151985 * C151967 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C151985 * C152373 -
               ((C51230 + C51231 + C51232) * C152167 * C152205 +
                (C51229 + C51228 + C51227) * C152167 * C50892) *
                   C151985 * C152357 +
               ((C51232 + C51231 + C51230) * C152167 * C50892 +
                (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 +
                 C50889 * C1332 + C50896 * C1317 - C50897 * C1307 -
                 C50896 * C1318 + C50890 * C1331 + C50898 * C1315 -
                 C50899 * C1306 - C50898 * C1316 + C50891 * C1330) *
                    C152167 * C152205) *
                   C151985 * C152326) *
                  C323 +
              (((C51233 + C51234 + C51235) * C152167 * C50892 +
                (C51236 + C51237 + C51238) * C152167 * C152205) *
                   C151985 * C152357 -
               ((C51235 + C51234 + C51233) * C152167 * C152205 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C152167 * C50892) *
                   C151985 * C152373 -
               ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 +
                 C50891 * C1329 + C50896 * C1315 - C50897 * C1306 -
                 C50896 * C1316 + C50890 * C1330 + C50894 * C1317 -
                 C50895 * C1307 - C50894 * C1318 + C50889 * C1331) *
                    C152167 * C152205 +
                (C51238 + C51237 + C51236) * C152167 * C50892) *
                   C151985 * C152326) *
                  C324 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C152167 * C50892 +
                (C51239 + C51240 + C51241) * C152167 * C152205) *
                   C151985 * C152373 -
               ((C51242 + C51243 + C51244) * C152167 * C152205 +
                (C51241 + C51240 + C51239) * C152167 * C50892) *
                   C151985 * C152357 +
               ((C51244 + C51243 + C51242) * C152167 * C50892 +
                (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 +
                 C50889 * C1330 + C50896 * C1313 - C50897 * C1305 -
                 C50896 * C1314 + C50890 * C1329 + C50898 * C1668 -
                 C50899 * C1667 - C50898 * C1669 + C50891 * C1670) *
                    C152167 * C152205) *
                   C151985 * C152326) *
                  C152320) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C152374 -
               ((C50898 * C1051 - C50899 * C1043 - C50898 * C1052 +
                 C50891 * C1061 + C50896 * C1049 - C50897 * C1042 -
                 C50896 * C1050 + C50890 * C1060 + C50894 * C1047 -
                 C50895 * C1041 - C50894 * C1048 + C50889 * C1059) *
                    C152167 * C152205 +
                (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
                 C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                 C50894 * C541 - C50895 * C526 - C50894 * C542 +
                 C50889 * C562) *
                    C152167 * C50892) *
                   C152359 +
               ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
                 C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
                 C50898 * C547 - C50899 * C529 - C50898 * C548 +
                 C50891 * C565) *
                    C152167 * C50892 +
                (C50894 * C1501 - C50895 * C1486 - C50894 * C1502 +
                 C50889 * C1522 + C50896 * C1499 - C50897 * C1485 -
                 C50896 * C1500 + C50890 * C1521 + C50898 * C1497 -
                 C50899 * C1484 - C50898 * C1498 + C50891 * C1520) *
                    C152167 * C152205) *
                   C152329) *
                  C151967 * C323 +
              (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
                 C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
                 C50898 * C535 - C50899 * C523 - C50898 * C536 +
                 C50891 * C559) *
                    C152167 * C50892 +
                (C50894 * C1049 - C50895 * C1042 - C50894 * C1050 +
                 C50889 * C1060 + C50896 * C1051 - C50897 * C1043 -
                 C50896 * C1052 + C50890 * C1061 + C50898 * C1053 -
                 C50899 * C1044 - C50898 * C1054 + C50891 * C1062) *
                    C152167 * C152205) *
                   C152359 -
               ((C51235 + C51234 + C51233) * C152167 * C152205 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C152167 * C50892) *
                   C152374 -
               ((C50898 * C1495 - C50899 * C1483 - C50898 * C1496 +
                 C50891 * C1519 + C50896 * C1497 - C50897 * C1484 -
                 C50896 * C1498 + C50890 * C1520 + C50894 * C1499 -
                 C50895 * C1485 - C50894 * C1500 + C50889 * C1521) *
                    C152167 * C152205 +
                (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
                 C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
                 C50894 * C545 - C50895 * C528 - C50894 * C546 +
                 C50889 * C564) *
                    C152167 * C50892) *
                   C152329) *
                  C151967 * C324 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C152167 * C50892 +
                (C51239 + C51240 + C51241) * C152167 * C152205) *
                   C152374 -
               ((C50898 * C1055 - C50899 * C1045 - C50898 * C1056 +
                 C50891 * C1063 + C50896 * C1053 - C50897 * C1044 -
                 C50896 * C1054 + C50890 * C1062 + C50894 * C1051 -
                 C50895 * C1043 - C50894 * C1052 + C50889 * C1061) *
                    C152167 * C152205 +
                (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
                 C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
                 C50894 * C537 - C50895 * C524 - C50894 * C538 +
                 C50889 * C560) *
                    C152167 * C50892) *
                   C152359 +
               ((C50894 * C547 - C50895 * C529 - C50894 * C548 + C50889 * C565 +
                 C50896 * C549 - C50897 * C530 - C50896 * C550 + C50890 * C566 +
                 C50898 * C553 - C50899 * C532 - C50898 * C554 +
                 C50891 * C568) *
                    C152167 * C50892 +
                (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
                 C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
                 C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
                 C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                    C152167 * C152205) *
                   C152329) *
                  C151967 * C152320) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C151985 * C1211 -
               ((C51230 + C51231 + C51232) * C152167 * C152205 +
                (C51229 + C51228 + C51227) * C152167 * C50892) *
                   C151985 * C1212 +
               ((C51232 + C51231 + C51230) * C152167 * C50892 +
                (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 +
                 C50889 * C1332 + C50896 * C1317 - C50897 * C1307 -
                 C50896 * C1318 + C50890 * C1331 + C50898 * C1315 -
                 C50899 * C1306 - C50898 * C1316 + C50891 * C1330) *
                    C152167 * C152205) *
                   C151985 * C152326) *
                  C152370 +
              (((C51233 + C51234 + C51235) * C152167 * C50892 +
                (C51236 + C51237 + C51238) * C152167 * C152205) *
                   C151985 * C1212 -
               ((C51235 + C51234 + C51233) * C152167 * C152205 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C152167 * C50892) *
                   C151985 * C1211 -
               ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 +
                 C50891 * C1329 + C50896 * C1315 - C50897 * C1306 -
                 C50896 * C1316 + C50890 * C1330 + C50894 * C1317 -
                 C50895 * C1307 - C50894 * C1318 + C50889 * C1331) *
                    C152167 * C152205 +
                (C51238 + C51237 + C51236) * C152167 * C50892) *
                   C151985 * C152326) *
                  C152353 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C152167 * C50892 +
                (C51239 + C51240 + C51241) * C152167 * C152205) *
                   C151985 * C1211 -
               ((C51242 + C51243 + C51244) * C152167 * C152205 +
                (C51241 + C51240 + C51239) * C152167 * C50892) *
                   C151985 * C1212 +
               ((C51244 + C51243 + C51242) * C152167 * C50892 +
                (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 +
                 C50889 * C1330 + C50896 * C1313 - C50897 * C1305 -
                 C50896 * C1314 + C50890 * C1329 + C50898 * C1668 -
                 C50899 * C1667 - C50898 * C1669 + C50891 * C1670) *
                    C152167 * C152205) *
                   C151985 * C152326) *
                  C152320) -
         0.25 * std::pow(Pi, 2.5) *
             (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                   C152167 * C50892 +
               (C51227 + C51228 + C51229) * C152167 * C152205) *
                  C151985 * C1299 -
              ((C51230 + C51231 + C51232) * C152167 * C152205 +
               (C51229 + C51228 + C51227) * C152167 * C50892) *
                  C151985 * C1300 +
              ((C51232 + C51231 + C51230) * C152167 * C50892 +
               (C52601 + C52602 + C52603) * C152167 * C152205) *
                  C151985 * C1301 -
              ((C52604 + C52605 + C52606) * C152167 * C152205 +
               (C52603 + C52602 + C52601) * C152167 * C50892) *
                  C151985 * C1302 +
              ((C52606 + C52605 + C52604) * C152167 * C50892 +
               (C50894 * C7737 - C50895 * C7732 - C50894 * C7738 +
                C50889 * C7744 + C50896 * C7735 - C50897 * C7731 -
                C50896 * C7736 + C50890 * C7743 + C50898 * C8276 -
                C50899 * C8275 - C50898 * C8277 + C50891 * C8278) *
                   C152167 * C152205) *
                  C151985 * C1303) *
             C151939 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C152374 -
               ((C52216 + C52217 + C52218) * C152167 * C152205 +
                (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
                 C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                 C50894 * C541 - C50895 * C526 - C50894 * C542 +
                 C50889 * C562) *
                    C152167 * C50892) *
                   C152359 +
               ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
                 C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
                 C50898 * C547 - C50899 * C529 - C50898 * C548 +
                 C50891 * C565) *
                    C152167 * C50892 +
                (C52879 + C52880 + C52881) * C152167 * C152205) *
                   C152329) *
                  C1211 +
              (((C52218 + C52217 + C52216) * C152167 * C50892 +
                (C52882 + C52883 + C52884) * C152167 * C152205) *
                   C152359 -
               ((C51230 + C51231 + C51232) * C152167 * C152205 +
                (C51229 + C51228 + C51227) * C152167 * C50892) *
                   C152374 -
               ((C52885 + C52886 + C52887) * C152167 * C152205 +
                (C52881 + C52880 + C52879) * C152167 * C50892) *
                   C152329) *
                  C1212 +
              (((C51232 + C51231 + C51230) * C152167 * C50892 +
                (C52601 + C52602 + C52603) * C152167 * C152205) *
                   C152374 -
               ((C50898 * C2007 - C50899 * C2001 - C50898 * C2008 +
                 C50891 * C2013 + C50896 * C2005 - C50897 * C2000 -
                 C50896 * C2006 + C50890 * C2012 + C50894 * C2003 -
                 C50895 * C1999 - C50894 * C2004 + C50889 * C2011) *
                    C152167 * C152205 +
                (C52884 + C52883 + C52882) * C152167 * C50892) *
                   C152359 +
               ((C52887 + C52886 + C52885) * C152167 * C50892 +
                (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 +
                 C50889 * C8016 + C50896 * C8003 - C50897 * C7997 -
                 C50896 * C8004 + C50890 * C8015 + C50898 * C9696 -
                 C50899 * C9695 - C50898 * C9697 + C50891 * C9698) *
                    C152167 * C152205) *
                   C152329) *
                  C152326) *
             C151939 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C2161 -
               ((C52216 + C52217 + C52218) * C152167 * C152205 +
                (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
                 C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                 C50894 * C541 - C50895 * C526 - C50894 * C542 +
                 C50889 * C562) *
                    C152167 * C50892) *
                   C2162 +
               ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
                 C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
                 C50898 * C547 - C50899 * C529 - C50898 * C548 +
                 C50891 * C565) *
                    C152167 * C50892 +
                (C52879 + C52880 + C52881) * C152167 * C152205) *
                   C152329) *
                  C151967 * C152370 +
              (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
                 C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
                 C50898 * C535 - C50899 * C523 - C50898 * C536 +
                 C50891 * C559) *
                    C152167 * C50892 +
                (C52219 + C52220 + C52221) * C152167 * C152205) *
                   C2162 -
               ((C51235 + C51234 + C51233) * C152167 * C152205 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C152167 * C50892) *
                   C2161 -
               ((C50898 * C1495 - C50899 * C1483 - C50898 * C1496 +
                 C50891 * C1519 + C50896 * C1497 - C50897 * C1484 -
                 C50896 * C1498 + C50890 * C1520 + C50894 * C1499 -
                 C50895 * C1485 - C50894 * C1500 + C50889 * C1521) *
                    C152167 * C152205 +
                (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
                 C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
                 C50894 * C545 - C50895 * C528 - C50894 * C546 +
                 C50889 * C564) *
                    C152167 * C50892) *
                   C152329) *
                  C151967 * C152353 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C152167 * C50892 +
                (C51239 + C51240 + C51241) * C152167 * C152205) *
                   C2161 -
               ((C52222 + C52223 + C52224) * C152167 * C152205 +
                (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
                 C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
                 C50894 * C537 - C50895 * C524 - C50894 * C538 +
                 C50889 * C560) *
                    C152167 * C50892) *
                   C2162 +
               ((C50894 * C547 - C50895 * C529 - C50894 * C548 + C50889 * C565 +
                 C50896 * C549 - C50897 * C530 - C50896 * C550 + C50890 * C566 +
                 C50898 * C553 - C50899 * C532 - C50898 * C554 +
                 C50891 * C568) *
                    C152167 * C50892 +
                (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
                 C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
                 C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
                 C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                    C152167 * C152205) *
                   C152329) *
                  C151967 * C152320) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C2161 -
               ((C52216 + C52217 + C52218) * C152167 * C152205 +
                (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
                 C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                 C50894 * C541 - C50895 * C526 - C50894 * C542 +
                 C50889 * C562) *
                    C152167 * C50892) *
                   C2162 +
               ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
                 C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
                 C50898 * C547 - C50899 * C529 - C50898 * C548 +
                 C50891 * C565) *
                    C152167 * C50892 +
                (C52879 + C52880 + C52881) * C152167 * C152205) *
                   C152329) *
                  C152373 +
              (((C52218 + C52217 + C52216) * C152167 * C50892 +
                (C52882 + C52883 + C52884) * C152167 * C152205) *
                   C2162 -
               ((C51230 + C51231 + C51232) * C152167 * C152205 +
                (C51229 + C51228 + C51227) * C152167 * C50892) *
                   C2161 -
               ((C52885 + C52886 + C52887) * C152167 * C152205 +
                (C52881 + C52880 + C52879) * C152167 * C50892) *
                   C152329) *
                  C152357 +
              (((C51232 + C51231 + C51230) * C152167 * C50892 +
                (C52601 + C52602 + C52603) * C152167 * C152205) *
                   C2161 -
               ((C53626 + C53627 + C53628) * C152167 * C152205 +
                (C52884 + C52883 + C52882) * C152167 * C50892) *
                   C2162 +
               ((C52887 + C52886 + C52885) * C152167 * C50892 +
                (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 +
                 C50889 * C8016 + C50896 * C8003 - C50897 * C7997 -
                 C50896 * C8004 + C50890 * C8015 + C50898 * C9696 -
                 C50899 * C9695 - C50898 * C9697 + C50891 * C9698) *
                    C152167 * C152205) *
                   C152329) *
                  C152326) *
             C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C51227 + C51228 + C51229) * C152167 * C152205) *
              C2392 -
          ((C52216 + C52217 + C52218) * C152167 * C152205 +
           (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
            C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
            C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
               C152167 * C50892) *
              C2393 +
          ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
            C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
            C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
               C152167 * C50892 +
           (C52879 + C52880 + C52881) * C152167 * C152205) *
              C2394 -
          ((C50898 * C2903 - C50899 * C2897 - C50898 * C2904 + C50891 * C2909 +
            C50896 * C2901 - C50897 * C2896 - C50896 * C2902 + C50890 * C2908 +
            C50894 * C2899 - C50895 * C2895 - C50894 * C2900 + C50889 * C2907) *
               C152167 * C152205 +
           (C50898 * C2407 - C50899 * C2398 - C50898 * C2408 + C50891 * C2422 +
            C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
            C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424) *
               C152167 * C50892) *
              C2395 +
          ((C50894 * C2413 - C50895 * C2401 - C50894 * C2414 + C50889 * C2425 +
            C50896 * C2415 - C50897 * C2402 - C50896 * C2416 + C50890 * C2426 +
            C50898 * C2417 - C50899 * C2403 - C50898 * C2418 + C50891 * C2427) *
               C152167 * C50892 +
           (C50894 * C9391 - C50895 * C9383 - C50894 * C9392 + C50889 * C9401 +
            C50896 * C9393 - C50897 * C9384 - C50896 * C9394 + C50890 * C9402 +
            C50898 * C18125 - C50899 * C18124 - C50898 * C18126 +
            C50891 * C18127) *
               C152167 * C152205) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           (C59421 * C344 - C59422 * C329 - C59421 * C345 + C151908 * C365) *
               C152167 * C59418 +
           (C59421 * C346 - C59422 * C330 - C59421 * C347 + C151908 * C366) *
               C152167 * C59419 +
           (C59421 * C1319 - C59422 * C1308 - C59421 * C1320 +
            C151908 * C1332) *
               C152167 * C59420) *
              C151985 * C151967 * C129 -
          ((C59421 * C1317 - C59422 * C1307 - C59421 * C1318 +
            C151908 * C1331) *
               C152167 * C59420 +
           (C59421 * C348 - C59422 * C331 - C59421 * C349 + C151908 * C367) *
               C152167 * C59419 +
           (C59421 * C342 - C59422 * C328 - C59421 * C343 + C151908 * C364) *
               C152167 * C59418 +
           (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
               C152167 * C59417) *
              C151985 * C151967 * C130 +
          ((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
               C152167 * C59417 +
           (C59421 * C340 - C59422 * C327 - C59421 * C341 + C151908 * C363) *
               C152167 * C59418 +
           (C59421 * C350 - C59422 * C332 - C59421 * C351 + C151908 * C368) *
               C152167 * C59419 +
           (C59421 * C1315 - C59422 * C1306 - C59421 * C1316 +
            C151908 * C1330) *
               C152167 * C59420) *
              C151985 * C151967 * C131 -
          ((C59421 * C1313 - C59422 * C1305 - C59421 * C1314 +
            C151908 * C1329) *
               C152167 * C59420 +
           (C59421 * C352 - C59422 * C333 - C59421 * C353 + C151908 * C369) *
               C152167 * C59419 +
           (C59421 * C338 - C59422 * C326 - C59421 * C339 + C151908 * C362) *
               C152167 * C59418 +
           (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
               C152167 * C59417) *
              C151985 * C151967 * C132 +
          ((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
               C152167 * C59417 +
           (C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
               C152167 * C59418 +
           (C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
               C152167 * C59419 +
           (C59421 * C1668 - C59422 * C1667 - C59421 * C1669 +
            C151908 * C1670) *
               C152167 * C59420) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152373 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152357 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C323 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152357 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152373 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152373 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152357 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152374 -
           ((C59421 * C2003 - C59422 * C1999 - C59421 * C2004 +
             C151908 * C2011) *
                C152167 * C59420 +
            (C59421 * C1509 - C59422 * C1490 - C59421 * C1510 +
             C151908 * C1526) *
                C152167 * C59419 +
            (C59421 * C1047 - C59422 * C1041 - C59421 * C1048 +
             C151908 * C1059) *
                C152167 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152359 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            (C59421 * C1501 - C59422 * C1486 - C59421 * C1502 +
             C151908 * C1522) *
                C152167 * C59418 +
            (C59421 * C1511 - C59422 * C1491 - C59421 * C1512 +
             C151908 * C1527) *
                C152167 * C59419 +
            (C59421 * C8005 - C59422 * C7998 - C59421 * C8006 +
             C151908 * C8016) *
                C152167 * C59420) *
               C152329) *
              C151967 * C323 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            (C59421 * C1049 - C59422 * C1042 - C59421 * C1050 +
             C151908 * C1060) *
                C152167 * C59418 +
            (C59421 * C1507 - C59422 * C1489 - C59421 * C1508 +
             C151908 * C1525) *
                C152167 * C59419 +
            (C59421 * C2005 - C59422 * C2000 - C59421 * C2006 +
             C151908 * C2012) *
                C152167 * C59420) *
               C152359 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C152374 -
           ((C59421 * C8003 - C59422 * C7997 - C59421 * C8004 +
             C151908 * C8015) *
                C152167 * C59420 +
            (C59421 * C1513 - C59422 * C1492 - C59421 * C1514 +
             C151908 * C1528) *
                C152167 * C59419 +
            (C59421 * C1499 - C59422 * C1485 - C59421 * C1500 +
             C151908 * C1521) *
                C152167 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C152329) *
              C151967 * C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C152374 -
           ((C59421 * C2007 - C59422 * C2001 - C59421 * C2008 +
             C151908 * C2013) *
                C152167 * C59420 +
            (C59421 * C1505 - C59422 * C1488 - C59421 * C1506 +
             C151908 * C1524) *
                C152167 * C59419 +
            (C59421 * C1051 - C59422 * C1043 - C59421 * C1052 +
             C151908 * C1061) *
                C152167 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152359 +
           ((C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C152167 * C59417 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C152167 * C59418 +
            (C59421 * C1515 - C59422 * C1493 - C59421 * C1516 +
             C151908 * C1529) *
                C152167 * C59419 +
            (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
             C151908 * C9698) *
                C152167 * C59420) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C1211 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C1212 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152370 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C1212 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C1211 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C1211 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C1212 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
              C151985 * C1299 -
          (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
           C59654 * C59417) *
              C151985 * C1300 +
          (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
           C60608 * C59420) *
              C151985 * C1301 -
          (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
           C59656 * C59417) *
              C151985 * C1302 +
          (C59657 * C59417 + C60608 * C59418 + C60609 * C59419 +
           (C59421 * C60590 - C59422 * C60589 - C59421 * C60591 +
            C151908 * C60592) *
               C152167 * C59420) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152374 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152359 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152329) *
              C1211 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152359 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C152374 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C152329) *
              C1212 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C152374 -
           ((C59421 * C8801 - C59422 * C8799 - C59421 * C8802 +
             C151908 * C8805) *
                C152167 * C59420 +
            C60798 * C59419 + C60353 * C59418 + C60354 * C59417) *
               C152359 +
           (C60796 * C59417 + C60797 * C59418 + C60799 * C59419 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C152167 * C59420) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C2161 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C2162 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152329) *
              C151967 * C152370 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C2162 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C2161 -
           ((C59421 * C8003 - C59422 * C7997 - C59421 * C8004 +
             C151908 * C8015) *
                C152167 * C59420 +
            (C59421 * C1513 - C59422 * C1492 - C59421 * C1514 +
             C151908 * C1528) *
                C152167 * C59419 +
            (C59421 * C1499 - C59422 * C1485 - C59421 * C1500 +
             C151908 * C1521) *
                C152167 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C152329) *
              C151967 * C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C2161 -
           (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C2162 +
           ((C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C152167 * C59417 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C152167 * C59418 +
            (C59421 * C1515 - C59422 * C1493 - C59421 * C1516 +
             C151908 * C1529) *
                C152167 * C59419 +
            (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
             C151908 * C9698) *
                C152167 * C59420) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C2161 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C2162 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152329) *
              C152373 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C2162 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C2161 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C152329) *
              C152357 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C2161 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C2162 +
           (C60796 * C59417 + C60797 * C59418 + C60799 * C59419 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C152167 * C59420) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
              C2392 -
          (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
           (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
               C152167 * C59417) *
              C2393 +
          ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
               C152167 * C59417 +
           C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
              C2394 -
          ((C59421 * C10121 - C59422 * C10119 - C59421 * C10122 +
            C151908 * C10125) *
               C152167 * C59420 +
           (C59421 * C9389 - C59422 * C9382 - C59421 * C9390 +
            C151908 * C9400) *
               C152167 * C59419 +
           (C59421 * C2899 - C59422 * C2895 - C59421 * C2900 +
            C151908 * C2907) *
               C152167 * C59418 +
           (C59421 * C2411 - C59422 * C2400 - C59421 * C2412 +
            C151908 * C2424) *
               C152167 * C59417) *
              C2395 +
          ((C59421 * C2413 - C59422 * C2401 - C59421 * C2414 +
            C151908 * C2425) *
               C152167 * C59417 +
           (C59421 * C9391 - C59422 * C9383 - C59421 * C9392 +
            C151908 * C9401) *
               C152167 * C59418 +
           (C59421 * C9395 - C59422 * C9385 - C59421 * C9396 +
            C151908 * C9403) *
               C152167 * C59419 +
           (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
            C151908 * C61658) *
               C152167 * C59420) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C14705 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C14706 +
            (C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C14707) *
               C50892 +
           (C59642 * C14705 + C60346 * C14706 + C60790 * C14707) * C152205) *
              C151985 * C151967 * C129 -
          ((C61874 * C14707 + C60347 * C14706 + C59646 * C14705) * C152205 +
           ((C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C14707 +
            (C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C14706 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C14705) *
               C50892) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C14705 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C14706 +
            (C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C14707) *
               C50892 +
           (C59650 * C14705 + C60352 * C14706 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C14707) *
               C152205) *
              C151985 * C151967 * C131 -
          (((C59421 * C1495 - C59422 * C1483 - C59421 * C1496 +
             C151908 * C1519) *
                C14707 +
            (C59421 * C1053 - C59422 * C1044 - C59421 * C1054 +
             C151908 * C1062) *
                C14706 +
            C59960 * C14705) *
               C152205 +
           ((C59421 * C549 - C59422 * C530 - C59421 * C550 + C151908 * C566) *
                C14707 +
            (C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                C14706 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C14705) *
               C50892) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C14705 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C14706 +
            (C59421 * C553 - C59422 * C532 - C59421 * C554 + C151908 * C568) *
                C14707) *
               C50892 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C14705 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C14706 +
            (C59421 * C2624 - C59422 * C2623 - C59421 * C2625 +
             C151908 * C2626) *
                C14707) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C14706 +
             (C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                 C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C152373 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C152357 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C59644 * C14705 + C60344 * C14706 + C60792 * C14707) * C152205) *
               C151985 * C152326) *
              C323 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C152357 -
           ((C65478 + C65477 + C65476) * C152205 +
            ((C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                 C14707 +
             (C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C152373 -
           ((C61872 * C14707 + C60349 * C14706 + C59648 * C14705) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C14706 +
             (C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                 C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C152373 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C152357 +
           ((C65493 + C65492 + C65501) * C50892 +
            (C59652 * C14705 + C60350 * C14706 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C14707) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C152374 -
           ((C62162 * C14707 + C60790 * C14706 + C60346 * C14705) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152359 +
           ((C65787 * C14705 + C65788 * C14706 +
             (C59421 * C2413 - C59422 * C2401 - C59421 * C2414 +
              C151908 * C2425) *
                 C14707) *
                C50892 +
            (C60790 * C14705 + C62162 * C14706 +
             (C59421 * C9391 - C59422 * C9383 - C59421 * C9392 +
              C151908 * C9401) *
                 C14707) *
                C152205) *
               C152329) *
              C151967 * C323 +
          (((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
            (C60347 * C14705 + C61874 * C14706 + C65792 * C14707) * C152205) *
               C152359 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C152374 -
           (((C59421 * C9393 - C59422 * C9384 - C59421 * C9394 +
              C151908 * C9402) *
                 C14707 +
             C65792 * C14706 + C61874 * C14705) *
                C152205 +
            ((C59421 * C2415 - C59422 * C2402 - C59421 * C2416 +
              C151908 * C2426) *
                 C14707 +
             C65791 * C14706 + C65790 * C14705) *
                C50892) *
               C152329) *
              C151967 * C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C152374 -
           ((C65795 * C14707 + C65498 * C14706 + C60352 * C14705) * C152205 +
            (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
               C152359 +
           ((C65794 * C14705 + C65796 * C14706 +
             (C59421 * C2417 - C59422 * C2403 - C59421 * C2418 +
              C151908 * C2427) *
                 C14707) *
                C50892 +
            (C65498 * C14705 + C65795 * C14706 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C14707) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C1211 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C1212 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C59644 * C14705 + C60344 * C14706 + C60792 * C14707) * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C1212 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C1211 -
           ((C61872 * C14707 + C60349 * C14706 + C59648 * C14705) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C1211 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C1212 +
           ((C65493 + C65492 + C65501) * C50892 +
            (C59652 * C14705 + C60350 * C14706 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C14707) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C14705 +
            C65786 * C14706 + C65787 * C14707) *
               C50892 +
           (C65470 + C65471 + C65472) * C152205) *
              C151985 * C1299 -
          ((C65473 + C65474 + C65475) * C152205 +
           (C65472 + C65471 + C65470) * C50892) *
              C151985 * C1300 +
          ((C65475 + C65474 + C65473) * C50892 +
           (C66855 + C66856 + C66857) * C152205) *
              C151985 * C1301 -
          ((C66858 + C66859 + C66860) * C152205 +
           (C66857 + C66856 + C66855) * C50892) *
              C151985 * C1302 +
          ((C66860 + C66859 + C66858) * C50892 +
           (C60606 * C14705 + C61280 * C14706 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C14707) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C152374 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152359 +
           ((C65787 * C14705 + C65788 * C14706 +
             (C59421 * C2413 - C59422 * C2401 - C59421 * C2414 +
              C151908 * C2425) *
                 C14707) *
                C50892 +
            (C67079 + C67080 + C67100) * C152205) *
               C152329) *
              C1211 +
          (((C66508 + C66507 + C66506) * C50892 +
            (C67085 + C67086 + C67087) * C152205) *
               C152359 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C152374 -
           ((C67101 + C67092 + C67093) * C152205 +
            (C67100 + C67080 + C67079) * C50892) *
               C152329) *
              C1212 +
          (((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C152374 -
           ((C62160 * C14707 + C60792 * C14706 + C60344 * C14705) * C152205 +
            (C67087 + C67086 + C67085) * C50892) *
               C152359 +
           ((C67093 + C67092 + C67101) * C50892 +
            (C60792 * C14705 + C62160 * C14706 +
             (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
              C151908 * C61658) *
                 C14707) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C2161 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C2162 +
           ((C65787 * C14705 + C65788 * C14706 +
             (C59421 * C2413 - C59422 * C2401 - C59421 * C2414 +
              C151908 * C2425) *
                 C14707) *
                C50892 +
            (C67079 + C67080 + C67100) * C152205) *
               C152329) *
              C151967 * C152370 +
          (((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
            (C66509 + C66510 + C66511) * C152205) *
               C2162 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C2161 -
           (((C59421 * C9393 - C59422 * C9384 - C59421 * C9394 +
              C151908 * C9402) *
                 C14707 +
             C65792 * C14706 + C61874 * C14705) *
                C152205 +
            ((C59421 * C2415 - C59422 * C2402 - C59421 * C2416 +
              C151908 * C2426) *
                 C14707 +
             C65791 * C14706 + C65790 * C14705) *
                C50892) *
               C152329) *
              C151967 * C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C2161 -
           ((C66512 + C66513 + C66514) * C152205 +
            (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
               C2162 +
           ((C65794 * C14705 + C65796 * C14706 +
             (C59421 * C2417 - C59422 * C2403 - C59421 * C2418 +
              C151908 * C2427) *
                 C14707) *
                C50892 +
            (C65498 * C14705 + C65795 * C14706 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C14707) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C2161 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C2162 +
           ((C65787 * C14705 + C65788 * C14706 +
             (C59421 * C2413 - C59422 * C2401 - C59421 * C2414 +
              C151908 * C2425) *
                 C14707) *
                C50892 +
            (C67079 + C67080 + C67100) * C152205) *
               C152329) *
              C152373 +
          (((C66508 + C66507 + C66506) * C50892 +
            (C67085 + C67086 + C67087) * C152205) *
               C2162 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C2161 -
           ((C67101 + C67092 + C67093) * C152205 +
            (C67100 + C67080 + C67079) * C50892) *
               C152329) *
              C152357 +
          (((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C2161 -
           ((C67793 + C67794 + C67795) * C152205 +
            (C67087 + C67086 + C67085) * C50892) *
               C2162 +
           ((C67093 + C67092 + C67101) * C50892 +
            (C60792 * C14705 + C62160 * C14706 +
             (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
              C151908 * C61658) *
                 C14707) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C14705 +
            C65786 * C14706 + C65787 * C14707) *
               C50892 +
           (C65470 + C65471 + C65472) * C152205) *
              C2392 -
          ((C66506 + C66507 + C66508) * C152205 +
           (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
              C2393 +
          ((C65787 * C14705 + C65788 * C14706 + C68376 * C14707) * C50892 +
           (C67079 + C67080 + C67100) * C152205) *
              C2394 -
          ((C68377 * C14707 + C67098 * C14706 + C62162 * C14705) * C152205 +
           (C68378 * C14707 + C68376 * C14706 + C65788 * C14705) * C50892) *
              C2395 +
          ((C68376 * C14705 + C68378 * C14706 +
            (C59421 * C17796 - C59422 * C17790 - C59421 * C17797 +
             C151908 * C17802) *
                C14707) *
               C50892 +
           (C67098 * C14705 + C68377 * C14706 +
            (C59421 * C68354 - C59422 * C68353 - C59421 * C68355 +
             C151908 * C68356) *
                C14707) *
               C152205) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C152285 -
               ((C50898 * C1051 - C50899 * C1043 - C50898 * C1052 +
                 C50891 * C1061 + C50896 * C1049 - C50897 * C1042 -
                 C50896 * C1050 + C50890 * C1060 + C50894 * C1047 -
                 C50895 * C1041 - C50894 * C1048 + C50889 * C1059) *
                    C152167 * C152205 +
                (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
                 C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                 C50894 * C541 - C50895 * C526 - C50894 * C542 +
                 C50889 * C562) *
                    C152167 * C50892) *
                   C152072) *
                  C151967 * C703 +
              (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
                 C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
                 C50898 * C535 - C50899 * C523 - C50898 * C536 +
                 C50891 * C559) *
                    C152167 * C50892 +
                (C50894 * C1049 - C50895 * C1042 - C50894 * C1050 +
                 C50889 * C1060 + C50896 * C1051 - C50897 * C1043 -
                 C50896 * C1052 + C50890 * C1061 + C50898 * C1053 -
                 C50899 * C1044 - C50898 * C1054 + C50891 * C1062) *
                    C152167 * C152205) *
                   C152072 -
               ((C51235 + C51234 + C51233) * C152167 * C152205 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C152167 * C50892) *
                   C152285) *
                  C151967 * C704 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C152167 * C50892 +
                (C51239 + C51240 + C51241) * C152167 * C152205) *
                   C152285 -
               ((C50898 * C1055 - C50899 * C1045 - C50898 * C1056 +
                 C50891 * C1063 + C50896 * C1053 - C50897 * C1044 -
                 C50896 * C1054 + C50890 * C1062 + C50894 * C1051 -
                 C50895 * C1043 - C50894 * C1052 + C50889 * C1061) *
                    C152167 * C152205 +
                (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
                 C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
                 C50894 * C537 - C50895 * C524 - C50894 * C538 +
                 C50889 * C560) *
                    C152167 * C50892) *
                   C152072) *
                  C151967 * C705 +
              (((C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559 +
                 C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
                 C50898 * C555 - C50899 * C533 - C50898 * C556 +
                 C50891 * C569) *
                    C152167 * C50892 +
                (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 +
                 C50889 * C1062 + C50896 * C1055 - C50897 * C1045 -
                 C50896 * C1056 + C50890 * C1063 + C50898 * C1057 -
                 C50899 * C1046 - C50898 * C1058 + C50891 * C1064) *
                    C152167 * C152205) *
                   C152072 -
               ((C51677 + C51676 + C51675) * C152167 * C152205 +
                (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                 C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                 C50894 * C156 - C50895 * C145 - C50894 * C157 +
                 C50889 * C169) *
                    C152167 * C50892) *
                   C152285) *
                  C151967 * C152330) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50894 * C150 - C50895 * C142 - C50894 * C151 +
                  C50889 * C166 + C50896 * C152 - C50897 * C143 -
                  C50896 * C153 + C50890 * C167 + C50898 * C154 -
                  C50899 * C144 - C50898 * C155 + C50891 * C168) *
                     C152167 * C50892 +
                 (C51227 + C51228 + C51229) * C152167 * C152205) *
                    C152285 -
                ((C52216 + C52217 + C52218) * C152167 * C152205 +
                 (C50898 * C537 - C50899 * C524 - C50898 * C538 +
                  C50891 * C560 + C50896 * C539 - C50897 * C525 -
                  C50896 * C540 + C50890 * C561 + C50894 * C541 -
                  C50895 * C526 - C50894 * C542 + C50889 * C562) *
                     C152167 * C50892) *
                    C152072) *
                   C1211 +
               (((C52218 + C52217 + C52216) * C152167 * C50892 +
                 (C52882 + C52883 + C52884) * C152167 * C152205) *
                    C152072 -
                ((C51230 + C51231 + C51232) * C152167 * C152205 +
                 (C51229 + C51228 + C51227) * C152167 * C50892) *
                    C152285) *
                   C1212 +
               (((C51232 + C51231 + C51230) * C152167 * C50892 +
                 (C52601 + C52602 + C52603) * C152167 * C152205) *
                    C152285 -
                ((C50898 * C2007 - C50899 * C2001 - C50898 * C2008 +
                  C50891 * C2013 + C50896 * C2005 - C50897 * C2000 -
                  C50896 * C2006 + C50890 * C2012 + C50894 * C2003 -
                  C50895 * C1999 - C50894 * C2004 + C50889 * C2011) *
                     C152167 * C152205 +
                 (C52884 + C52883 + C52882) * C152167 * C50892) *
                    C152072) *
                   C152326) *
                  C152270 +
              ((((C50894 * C539 - C50895 * C525 - C50894 * C540 +
                  C50889 * C561 + C50896 * C537 - C50897 * C524 -
                  C50896 * C538 + C50890 * C560 + C50898 * C535 -
                  C50899 * C523 - C50898 * C536 + C50891 * C559) *
                     C152167 * C50892 +
                 (C52219 + C52220 + C52221) * C152167 * C152205) *
                    C152072 -
                ((C51235 + C51234 + C51233) * C152167 * C152205 +
                 (C50898 * C156 - C50899 * C145 - C50898 * C157 +
                  C50891 * C169 + C50896 * C154 - C50897 * C144 -
                  C50896 * C155 + C50890 * C168 + C50894 * C152 -
                  C50895 * C143 - C50894 * C153 + C50889 * C167) *
                     C152167 * C50892) *
                    C152285) *
                   C1211 +
               (((C51233 + C51234 + C51235) * C152167 * C50892 +
                 (C51236 + C51237 + C51238) * C152167 * C152205) *
                    C152285 -
                ((C53411 + C53412 + C53413) * C152167 * C152205 +
                 (C52221 + C52220 + C52219) * C152167 * C50892) *
                    C152072) *
                   C1212 +
               (((C53413 + C53412 + C53411) * C152167 * C50892 +
                 (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
                  C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
                  C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
                  C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                     C152167 * C152205) *
                    C152072 -
                ((C53100 + C53101 + C53102) * C152167 * C152205 +
                 (C51238 + C51237 + C51236) * C152167 * C50892) *
                    C152285) *
                   C152326) *
                  C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C2757 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C2758 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C2759 -
           ((C50898 * C2903 - C50899 * C2897 - C50898 * C2904 + C50891 * C2909 +
             C50896 * C2901 - C50897 * C2896 - C50896 * C2902 + C50890 * C2908 +
             C50894 * C2899 - C50895 * C2895 - C50894 * C2900 +
             C50889 * C2907) *
                C152167 * C152205 +
            (C50898 * C2407 - C50899 * C2398 - C50898 * C2408 + C50891 * C2422 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50894 * C2411 - C50895 * C2400 - C50894 * C2412 +
             C50889 * C2424) *
                C152167 * C50892) *
               C152342) *
              C151967 * C152270 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C52219 + C52220 + C52221) * C152167 * C152205) *
               C2758 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C2757 -
           ((C54495 + C54496 + C54497) * C152167 * C152205 +
            (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
             C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
             C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                C152167 * C50892) *
               C2759 +
           ((C50894 * C2409 - C50895 * C2399 - C50894 * C2410 + C50889 * C2423 +
             C50896 * C2407 - C50897 * C2398 - C50896 * C2408 + C50890 * C2422 +
             C50898 * C2405 - C50899 * C2397 - C50898 * C2406 +
             C50891 * C2421) *
                C152167 * C50892 +
            (C50894 * C2901 - C50895 * C2896 - C50894 * C2902 + C50889 * C2908 +
             C50896 * C2903 - C50897 * C2897 - C50896 * C2904 + C50890 * C2909 +
             C50898 * C2905 - C50899 * C2898 - C50898 * C2906 +
             C50891 * C2910) *
                C152167 * C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152285 -
           ((C59421 * C2003 - C59422 * C1999 - C59421 * C2004 +
             C151908 * C2011) *
                C152167 * C59420 +
            (C59421 * C1509 - C59422 * C1490 - C59421 * C1510 +
             C151908 * C1526) *
                C152167 * C59419 +
            (C59421 * C1047 - C59422 * C1041 - C59421 * C1048 +
             C151908 * C1059) *
                C152167 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C151967 * C703 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            (C59421 * C1049 - C59422 * C1042 - C59421 * C1050 +
             C151908 * C1060) *
                C152167 * C59418 +
            (C59421 * C1507 - C59422 * C1489 - C59421 * C1508 +
             C151908 * C1525) *
                C152167 * C59419 +
            (C59421 * C2005 - C59422 * C2000 - C59421 * C2006 +
             C151908 * C2012) *
                C152167 * C59420) *
               C152072 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C152285) *
              C151967 * C704 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C152285 -
           ((C59421 * C2007 - C59422 * C2001 - C59421 * C2008 +
             C151908 * C2013) *
                C152167 * C59420 +
            (C59421 * C1505 - C59422 * C1488 - C59421 * C1506 +
             C151908 * C1524) *
                C152167 * C59419 +
            (C59421 * C1051 - C59422 * C1043 - C59421 * C1052 +
             C151908 * C1061) *
                C152167 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152072) *
              C151967 * C705 +
          (((C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                C152167 * C59417 +
            (C59421 * C1053 - C59422 * C1044 - C59421 * C1054 +
             C151908 * C1062) *
                C152167 * C59418 +
            (C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
             C151908 * C1523) *
                C152167 * C59419 +
            (C59421 * C2009 - C59422 * C2002 - C59421 * C2010 +
             C151908 * C2014) *
                C152167 * C59420) *
               C152072 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152285 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C1211 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152285) *
               C1212 +
           ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
             C60608 * C59420) *
                C152285 -
            ((C59421 * C8801 - C59422 * C8799 - C59421 * C8802 +
              C151908 * C8805) *
                 C152167 * C59420 +
             C60798 * C59419 + C60353 * C59418 + C60354 * C59417) *
                C152072) *
               C152326) *
              C152270 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152285) *
               C1211 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152285 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C1212 +
           ((C60357 * C59417 + C60358 * C59418 + C61139 * C59419 +
             (C59421 * C8803 - C59422 * C8800 - C59421 * C8804 +
              C151908 * C8806) *
                 C152167 * C59420) *
                C152072 -
            (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
             C59659 * C59417) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C2757 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C2758 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C2759 -
           ((C59421 * C10121 - C59422 * C10119 - C59421 * C10122 +
             C151908 * C10125) *
                C152167 * C59420 +
            (C59421 * C9389 - C59422 * C9382 - C59421 * C9390 +
             C151908 * C9400) *
                C152167 * C59419 +
            (C59421 * C2899 - C59422 * C2895 - C59421 * C2900 +
             C151908 * C2907) *
                C152167 * C59418 +
            (C59421 * C2411 - C59422 * C2400 - C59421 * C2412 +
             C151908 * C2424) *
                C152167 * C59417) *
               C152342) *
              C151967 * C152270 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C2758 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C2757 -
           (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C2759 +
           ((C59421 * C2409 - C59422 * C2399 - C59421 * C2410 +
             C151908 * C2423) *
                C152167 * C59417 +
            (C59421 * C2901 - C59422 * C2896 - C59421 * C2902 +
             C151908 * C2908) *
                C152167 * C59418 +
            (C59421 * C9387 - C59422 * C9381 - C59421 * C9388 +
             C151908 * C9399) *
                C152167 * C59419 +
            (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
             C151908 * C10126) *
                C152167 * C59420) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C152285 -
           ((C62162 * C14707 + C60790 * C14706 + C60346 * C14705) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152072) *
              C151967 * C703 +
          (((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
            (C60347 * C14705 + C61874 * C14706 + C65792 * C14707) * C152205) *
               C152072 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C152285) *
              C151967 * C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C152285 -
           ((C65795 * C14707 + C65498 * C14706 + C60352 * C14705) * C152205 +
            (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
               C152072) *
              C151967 * C705 +
          (((C66214 * C14705 + C66215 * C14706 +
             (C59421 * C2405 - C59422 * C2397 - C59421 * C2406 +
              C151908 * C2421) *
                 C14707) *
                C50892 +
            (C66004 * C14705 + C66005 * C14706 +
             (C59421 * C2905 - C59422 * C2898 - C59421 * C2906 +
              C151908 * C2910) *
                 C14707) *
                C152205) *
               C152072 -
           ((C66007 + C66006 + C65991) * C152205 +
            (C66215 * C14707 + C66214 * C14706 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C14705) *
                C50892) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C152285 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152072) *
               C1211 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152072 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C152285) *
               C1212 +
           (((C65475 + C65474 + C65473) * C50892 +
             (C66855 + C66856 + C66857) * C152205) *
                C152285 -
            ((C62160 * C14707 + C60792 * C14706 + C60344 * C14705) * C152205 +
             (C67087 + C67086 + C67085) * C50892) *
                C152072) *
               C152326) *
              C152270 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152072 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C152285) *
               C1211 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C152285 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152072) *
               C1212 +
           (((C67594 + C67593 + C67598) * C50892 +
             (C60349 * C14705 + C61872 * C14706 +
              (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
               C151908 * C10126) *
                  C14707) *
                 C152205) *
                C152072 -
            ((C67296 + C67297 + C67298) * C152205 +
             (C65481 + C65480 + C65479) * C50892) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C2757 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C2758 +
           ((C65787 * C14705 + C65788 * C14706 + C68376 * C14707) * C50892 +
            (C67079 + C67080 + C67100) * C152205) *
               C2759 -
           ((C68377 * C14707 + C67098 * C14706 + C62162 * C14705) * C152205 +
            (C68378 * C14707 + C68376 * C14706 + C65788 * C14705) * C50892) *
               C152342) *
              C151967 * C152270 +
          (((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
            (C66509 + C66510 + C66511) * C152205) *
               C2758 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C2757 -
           ((C68678 + C68673 + C68674) * C152205 +
            (C68879 * C14707 + C65791 * C14706 + C65790 * C14705) * C50892) *
               C2759 +
           ((C65791 * C14705 + C68879 * C14706 +
             (C59421 * C17792 - C59422 * C17788 - C59421 * C17793 +
              C151908 * C17800) *
                 C14707) *
                C50892 +
            (C65792 * C14705 + C68677 * C14706 +
             (C59421 * C18554 - C59422 * C18551 - C59421 * C18555 +
              C151908 * C18557) *
                 C14707) *
                C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C50894 * C344 - C50895 * C329 - C50894 * C345 + C50889 * C365 +
            C50896 * C342 - C50897 * C328 - C50896 * C343 + C50890 * C364 +
            C50898 * C340 - C50899 * C327 - C50898 * C341 + C50891 * C363) *
               C152167 * C152205) *
              C151985 * C151967 * C129 -
          ((C50898 * C338 - C50899 * C326 - C50898 * C339 + C50891 * C362 +
            C50896 * C340 - C50897 * C327 - C50896 * C341 + C50890 * C363 +
            C50894 * C342 - C50895 * C328 - C50894 * C343 + C50889 * C364) *
               C152167 * C152205 +
           (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
            C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
            C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
               C152167 * C50892) *
              C151985 * C151967 * C130 +
          ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
            C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
            C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
               C152167 * C50892 +
           (C50894 * C340 - C50895 * C327 - C50894 * C341 + C50889 * C363 +
            C50896 * C338 - C50897 * C326 - C50896 * C339 + C50890 * C362 +
            C50898 * C354 - C50899 * C334 - C50898 * C355 + C50891 * C370) *
               C152167 * C152205) *
              C151985 * C151967 * C131 -
          ((C50898 * C358 - C50899 * C336 - C50898 * C359 + C50891 * C372 +
            C50896 * C354 - C50897 * C334 - C50896 * C355 + C50890 * C370 +
            C50894 * C338 - C50895 * C326 - C50894 * C339 + C50889 * C362) *
               C152167 * C152205 +
           (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
            C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
            C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
               C152167 * C50892) *
              C151985 * C151967 * C132 +
          ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
            C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
            C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
               C152167 * C50892 +
           (C50894 * C354 - C50895 * C334 - C50894 * C355 + C50889 * C370 +
            C50896 * C358 - C50897 * C336 - C50896 * C359 + C50890 * C372 +
            C50898 * C708 - C50899 * C707 - C50898 * C709 + C50891 * C710) *
               C152167 * C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152373 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152357 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 + C50889 * C1332 +
             C50896 * C1317 - C50897 * C1307 - C50896 * C1318 + C50890 * C1331 +
             C50898 * C1315 - C50899 * C1306 - C50898 * C1316 +
             C50891 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C323 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152357 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152373 -
           ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 + C50891 * C1329 +
             C50896 * C1315 - C50897 * C1306 - C50896 * C1316 + C50890 * C1330 +
             C50894 * C1317 - C50895 * C1307 - C50894 * C1318 +
             C50889 * C1331) *
                C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152326) *
              C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C152373 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152357 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 + C50889 * C1332 +
             C50896 * C1317 - C50897 * C1307 - C50896 * C1318 + C50890 * C1331 +
             C50898 * C1315 - C50899 * C1306 - C50898 * C1316 +
             C50891 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C1212 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C1211 -
           ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 + C50891 * C1329 +
             C50896 * C1315 - C50897 * C1306 - C50896 * C1316 + C50890 * C1330 +
             C50894 * C1317 - C50895 * C1307 - C50894 * C1318 +
             C50889 * C1331) *
                C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C51227 + C51228 + C51229) * C152167 * C152205) *
              C151985 * C1299 -
          ((C51230 + C51231 + C51232) * C152167 * C152205 +
           (C51229 + C51228 + C51227) * C152167 * C50892) *
              C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C152167 * C50892 +
           (C52601 + C52602 + C52603) * C152167 * C152205) *
              C151985 * C1301 -
          ((C52604 + C52605 + C52606) * C152167 * C152205 +
           (C52603 + C52602 + C52601) * C152167 * C50892) *
              C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C152167 * C50892 +
           (C50894 * C7737 - C50895 * C7732 - C50894 * C7738 + C50889 * C7744 +
            C50896 * C7735 - C50897 * C7731 - C50896 * C7736 + C50890 * C7743 +
            C50898 * C8276 - C50899 * C8275 - C50898 * C8277 + C50891 * C8278) *
               C152167 * C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C2161 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C2162 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152329) *
              C151967 * C152370 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C52219 + C52220 + C52221) * C152167 * C152205) *
               C2162 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C2161 -
           ((C50898 * C1495 - C50899 * C1483 - C50898 * C1496 + C50891 * C1519 +
             C50896 * C1497 - C50897 * C1484 - C50896 * C1498 + C50890 * C1520 +
             C50894 * C1499 - C50895 * C1485 - C50894 * C1500 +
             C50889 * C1521) *
                C152167 * C152205 +
            (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
             C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
             C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                C152167 * C50892) *
               C152329) *
              C151967 * C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C2161 -
           ((C52222 + C52223 + C52224) * C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C2162 +
           ((C50894 * C547 - C50895 * C529 - C50894 * C548 + C50889 * C565 +
             C50896 * C549 - C50897 * C530 - C50896 * C550 + C50890 * C566 +
             C50898 * C553 - C50899 * C532 - C50898 * C554 + C50891 * C568) *
                C152167 * C50892 +
            (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 + C50889 * C1520 +
             C50896 * C1495 - C50897 * C1483 - C50896 * C1496 + C50890 * C1519 +
             C50898 * C2624 - C50899 * C2623 - C50898 * C2625 +
             C50891 * C2626) *
                C152167 * C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C2161 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C2162 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152329) *
              C152373 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C2162 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C2161 -
           ((C52885 + C52886 + C52887) * C152167 * C152205 +
            (C52881 + C52880 + C52879) * C152167 * C50892) *
               C152329) *
              C152357 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C2161 -
           ((C53626 + C53627 + C53628) * C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C2162 +
           ((C52887 + C52886 + C52885) * C152167 * C50892 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152167 * C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           (C59421 * C344 - C59422 * C329 - C59421 * C345 + C151908 * C365) *
               C152167 * C59418 +
           (C59421 * C346 - C59422 * C330 - C59421 * C347 + C151908 * C366) *
               C152167 * C59419 +
           (C59421 * C1319 - C59422 * C1308 - C59421 * C1320 +
            C151908 * C1332) *
               C152167 * C59420) *
              C151985 * C151967 * C129 -
          ((C59421 * C1317 - C59422 * C1307 - C59421 * C1318 +
            C151908 * C1331) *
               C152167 * C59420 +
           (C59421 * C348 - C59422 * C331 - C59421 * C349 + C151908 * C367) *
               C152167 * C59419 +
           (C59421 * C342 - C59422 * C328 - C59421 * C343 + C151908 * C364) *
               C152167 * C59418 +
           (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
               C152167 * C59417) *
              C151985 * C151967 * C130 +
          ((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
               C152167 * C59417 +
           (C59421 * C340 - C59422 * C327 - C59421 * C341 + C151908 * C363) *
               C152167 * C59418 +
           (C59421 * C350 - C59422 * C332 - C59421 * C351 + C151908 * C368) *
               C152167 * C59419 +
           (C59421 * C1315 - C59422 * C1306 - C59421 * C1316 +
            C151908 * C1330) *
               C152167 * C59420) *
              C151985 * C151967 * C131 -
          ((C59421 * C1313 - C59422 * C1305 - C59421 * C1314 +
            C151908 * C1329) *
               C152167 * C59420 +
           (C59421 * C352 - C59422 * C333 - C59421 * C353 + C151908 * C369) *
               C152167 * C59419 +
           (C59421 * C338 - C59422 * C326 - C59421 * C339 + C151908 * C362) *
               C152167 * C59418 +
           (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
               C152167 * C59417) *
              C151985 * C151967 * C132 +
          ((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
               C152167 * C59417 +
           (C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
               C152167 * C59418 +
           (C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
               C152167 * C59419 +
           (C59421 * C1668 - C59422 * C1667 - C59421 * C1669 +
            C151908 * C1670) *
               C152167 * C59420) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152373 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152357 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C323 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152357 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152373 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152373 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152357 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C1211 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C1212 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152370 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C1212 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C1211 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C1211 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C1212 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
              C151985 * C1299 -
          (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
           C59654 * C59417) *
              C151985 * C1300 +
          (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
           C60608 * C59420) *
              C151985 * C1301 -
          (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
           C59656 * C59417) *
              C151985 * C1302 +
          (C59657 * C59417 + C60608 * C59418 + C60609 * C59419 +
           (C59421 * C60590 - C59422 * C60589 - C59421 * C60591 +
            C151908 * C60592) *
               C152167 * C59420) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C2161 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C2162 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152329) *
              C151967 * C152370 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C2162 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C2161 -
           ((C59421 * C8003 - C59422 * C7997 - C59421 * C8004 +
             C151908 * C8015) *
                C152167 * C59420 +
            (C59421 * C1513 - C59422 * C1492 - C59421 * C1514 +
             C151908 * C1528) *
                C152167 * C59419 +
            (C59421 * C1499 - C59422 * C1485 - C59421 * C1500 +
             C151908 * C1521) *
                C152167 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C152329) *
              C151967 * C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C2161 -
           (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C2162 +
           ((C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C152167 * C59417 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C152167 * C59418 +
            (C59421 * C1515 - C59422 * C1493 - C59421 * C1516 +
             C151908 * C1529) *
                C152167 * C59419 +
            (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
             C151908 * C9698) *
                C152167 * C59420) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C2161 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C2162 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152329) *
              C152373 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C2162 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C2161 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C152329) *
              C152357 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C2161 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C2162 +
           (C60796 * C59417 + C60797 * C59418 + C60799 * C59419 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C152167 * C59420) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C14705 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C14706 +
            (C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C14707) *
               C50892 +
           (C59642 * C14705 + C60346 * C14706 + C60790 * C14707) * C152205) *
              C151985 * C151967 * C129 -
          ((C61874 * C14707 + C60347 * C14706 + C59646 * C14705) * C152205 +
           ((C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C14707 +
            (C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C14706 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C14705) *
               C50892) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C14705 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C14706 +
            (C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C14707) *
               C50892 +
           (C59650 * C14705 + C60352 * C14706 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C14707) *
               C152205) *
              C151985 * C151967 * C131 -
          (((C59421 * C1495 - C59422 * C1483 - C59421 * C1496 +
             C151908 * C1519) *
                C14707 +
            (C59421 * C1053 - C59422 * C1044 - C59421 * C1054 +
             C151908 * C1062) *
                C14706 +
            C59960 * C14705) *
               C152205 +
           ((C59421 * C549 - C59422 * C530 - C59421 * C550 + C151908 * C566) *
                C14707 +
            (C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                C14706 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C14705) *
               C50892) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C14705 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C14706 +
            (C59421 * C553 - C59422 * C532 - C59421 * C554 + C151908 * C568) *
                C14707) *
               C50892 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C14705 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C14706 +
            (C59421 * C2624 - C59422 * C2623 - C59421 * C2625 +
             C151908 * C2626) *
                C14707) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C14706 +
             (C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                 C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C152373 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C152357 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C59644 * C14705 + C60344 * C14706 + C60792 * C14707) * C152205) *
               C151985 * C152326) *
              C323 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C152357 -
           ((C65478 + C65477 + C65476) * C152205 +
            ((C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                 C14707 +
             (C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C152373 -
           ((C61872 * C14707 + C60349 * C14706 + C59648 * C14705) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C14706 +
             (C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                 C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C152373 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C152357 +
           ((C65493 + C65492 + C65501) * C50892 +
            (C59652 * C14705 + C60350 * C14706 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C14707) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C1211 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C1212 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C59644 * C14705 + C60344 * C14706 + C60792 * C14707) * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C1212 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C1211 -
           ((C61872 * C14707 + C60349 * C14706 + C59648 * C14705) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C1211 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C1212 +
           ((C65493 + C65492 + C65501) * C50892 +
            (C59652 * C14705 + C60350 * C14706 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C14707) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C14705 +
            C65786 * C14706 + C65787 * C14707) *
               C50892 +
           (C65470 + C65471 + C65472) * C152205) *
              C151985 * C1299 -
          ((C65473 + C65474 + C65475) * C152205 +
           (C65472 + C65471 + C65470) * C50892) *
              C151985 * C1300 +
          ((C65475 + C65474 + C65473) * C50892 +
           (C66855 + C66856 + C66857) * C152205) *
              C151985 * C1301 -
          ((C66858 + C66859 + C66860) * C152205 +
           (C66857 + C66856 + C66855) * C50892) *
              C151985 * C1302 +
          ((C66860 + C66859 + C66858) * C50892 +
           (C60606 * C14705 + C61280 * C14706 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C14707) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C2161 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C2162 +
           ((C65787 * C14705 + C65788 * C14706 +
             (C59421 * C2413 - C59422 * C2401 - C59421 * C2414 +
              C151908 * C2425) *
                 C14707) *
                C50892 +
            (C67079 + C67080 + C67100) * C152205) *
               C152329) *
              C151967 * C152370 +
          (((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
            (C66509 + C66510 + C66511) * C152205) *
               C2162 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C2161 -
           (((C59421 * C9393 - C59422 * C9384 - C59421 * C9394 +
              C151908 * C9402) *
                 C14707 +
             C65792 * C14706 + C61874 * C14705) *
                C152205 +
            ((C59421 * C2415 - C59422 * C2402 - C59421 * C2416 +
              C151908 * C2426) *
                 C14707 +
             C65791 * C14706 + C65790 * C14705) *
                C50892) *
               C152329) *
              C151967 * C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C2161 -
           ((C66512 + C66513 + C66514) * C152205 +
            (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
               C2162 +
           ((C65794 * C14705 + C65796 * C14706 +
             (C59421 * C2417 - C59422 * C2403 - C59421 * C2418 +
              C151908 * C2427) *
                 C14707) *
                C50892 +
            (C65498 * C14705 + C65795 * C14706 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C14707) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C2161 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C2162 +
           ((C65787 * C14705 + C65788 * C14706 +
             (C59421 * C2413 - C59422 * C2401 - C59421 * C2414 +
              C151908 * C2425) *
                 C14707) *
                C50892 +
            (C67079 + C67080 + C67100) * C152205) *
               C152329) *
              C152373 +
          (((C66508 + C66507 + C66506) * C50892 +
            (C67085 + C67086 + C67087) * C152205) *
               C2162 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C2161 -
           ((C67101 + C67092 + C67093) * C152205 +
            (C67100 + C67080 + C67079) * C50892) *
               C152329) *
              C152357 +
          (((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C2161 -
           ((C67793 + C67794 + C67795) * C152205 +
            (C67087 + C67086 + C67085) * C50892) *
               C2162 +
           ((C67093 + C67092 + C67101) * C50892 +
            (C60792 * C14705 + C62160 * C14706 +
             (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
              C151908 * C61658) *
                 C14707) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C4047 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152284 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C4047) *
               C152030) *
              C151944 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C4047) *
               C152284 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C4047 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152030) *
              C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152167 * C59417 +
             C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
                C4047 -
            (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C152167 * C59417) *
                C152072) *
               C152284 +
           ((C60361 * C59417 + C60360 * C59418 + C60359 * C59419 +
             (C59421 * C8586 - C59422 * C8585 - C59421 * C8587 +
              C151908 * C8588) *
                 C152167 * C59420) *
                C152072 -
            (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
             C59662 * C59417) *
                C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C4047 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C152284 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C4047) *
               C152030) *
              C151944 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C4047) *
               C152284 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C4047 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152030) *
              C151953 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C152167 * C50892 +
             (C51239 + C51240 + C51241) * C152167 * C152205) *
                C4047 -
            ((C52222 + C52223 + C52224) * C152167 * C152205 +
             (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
              C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
              C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                 C152167 * C50892) *
                C152072) *
               C152284 +
           (((C52224 + C52223 + C52222) * C152167 * C50892 +
             (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
              C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
              C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
              C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C51242 + C51243 + C51244) * C152167 * C152205 +
             (C51241 + C51240 + C51239) * C152167 * C50892) *
                C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C4047 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152072) *
               C152284 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152072 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C4047) *
               C152030) *
              C151944 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152072 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C4047) *
               C152284 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C4047 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152072) *
               C152030) *
              C151953 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C14705 +
              C65793 * C14706 + C65794 * C14707) *
                 C50892 +
             (C65482 + C65483 + C65500) * C152205) *
                C4047 -
            ((C66512 + C66513 + C66514) * C152205 +
             (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
                C152072) *
               C152284 +
           (((C66514 + C66513 + C66512) * C50892 +
             (C60351 * C14705 + C65499 * C14706 +
              (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
               C151908 * C9924) *
                  C14707) *
                 C152205) *
                C152072 -
            ((C65501 + C65492 + C65493) * C152205 +
             (C65500 + C65483 + C65482) * C50892) *
                C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152068 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152075 +
            ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                 C152167 * C59417 +
             C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
                C4719) *
               C152284 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152075 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152068 -
            (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
             C60795 * C59417) *
                C4719) *
               C152030) *
              C3181 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152075 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152068 -
            (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
             (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                 C152167 * C59417) *
                C4719) *
               C152284 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152068 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152075 +
            (C61877 * C59417 + C61876 * C59418 + C61875 * C59419 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C152167 * C59420) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152068 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152075 +
            ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
              C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
              C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                 C152167 * C50892 +
             (C52879 + C52880 + C52881) * C152167 * C152205) *
                C4719) *
               C152284 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152075 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152068 -
            ((C52885 + C52886 + C52887) * C152167 * C152205 +
             (C52881 + C52880 + C52879) * C152167 * C50892) *
                C4719) *
               C152030) *
              C3181 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152075 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152068 -
            ((C54495 + C54496 + C54497) * C152167 * C152205 +
             (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
              C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
              C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                 C152167 * C50892) *
                C4719) *
               C152284 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152068 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152075 +
            ((C54497 + C54496 + C54495) * C152167 * C50892 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152167 * C152205) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C152068 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152075 +
            ((C65787 * C14705 + C65788 * C14706 + C68376 * C14707) * C50892 +
             (C67079 + C67080 + C67100) * C152205) *
                C4719) *
               C152284 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152075 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C152068 -
            ((C67101 + C67092 + C67093) * C152205 +
             (C67100 + C67080 + C67079) * C50892) *
                C4719) *
               C152030) *
              C3181 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152075 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C152068 -
            ((C68678 + C68673 + C68674) * C152205 +
             (C68879 * C14707 + C65791 * C14706 + C65790 * C14705) * C50892) *
                C4719) *
               C152284 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C152068 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152075 +
            ((C68674 + C68673 + C68678) * C50892 +
             (C61873 * C14705 + C67597 * C14706 +
              (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
               C151908 * C9404) *
                  C14707) *
                 C152205) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C4047 -
               ((C52216 + C52217 + C52218) * C152167 * C152205 +
                (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
                 C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                 C50894 * C541 - C50895 * C526 - C50894 * C542 +
                 C50889 * C562) *
                    C152167 * C50892) *
                   C152072) *
                  C151967 * C152379 +
              (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
                 C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
                 C50898 * C535 - C50899 * C523 - C50898 * C536 +
                 C50891 * C559) *
                    C152167 * C50892 +
                (C52219 + C52220 + C52221) * C152167 * C152205) *
                   C152072 -
               ((C51235 + C51234 + C51233) * C152167 * C152205 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C152167 * C50892) *
                   C4047) *
                  C151967 * C152372 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C152167 * C50892 +
                (C51239 + C51240 + C51241) * C152167 * C152205) *
                   C4047 -
               ((C52222 + C52223 + C52224) * C152167 * C152205 +
                (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
                 C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
                 C50894 * C537 - C50895 * C524 - C50894 * C538 +
                 C50889 * C560) *
                    C152167 * C50892) *
                   C152072) *
                  C151967 * C152355 +
              (((C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559 +
                 C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
                 C50898 * C555 - C50899 * C533 - C50898 * C556 +
                 C50891 * C569) *
                    C152167 * C50892 +
                (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 +
                 C50889 * C1062 + C50896 * C1055 - C50897 * C1045 -
                 C50896 * C1056 + C50890 * C1063 + C50898 * C1057 -
                 C50899 * C1046 - C50898 * C1058 + C50891 * C1064) *
                    C152167 * C152205) *
                   C152072 -
               ((C51677 + C51676 + C51675) * C152167 * C152205 +
                (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                 C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                 C50894 * C156 - C50895 * C145 - C50894 * C157 +
                 C50889 * C169) *
                    C152167 * C50892) *
                   C4047) *
                  C151967 * C152330) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50894 * C150 - C50895 * C142 - C50894 * C151 +
                  C50889 * C166 + C50896 * C152 - C50897 * C143 -
                  C50896 * C153 + C50890 * C167 + C50898 * C154 -
                  C50899 * C144 - C50898 * C155 + C50891 * C168) *
                     C152167 * C50892 +
                 (C51227 + C51228 + C51229) * C152167 * C152205) *
                    C4047 -
                ((C52216 + C52217 + C52218) * C152167 * C152205 +
                 (C50898 * C537 - C50899 * C524 - C50898 * C538 +
                  C50891 * C560 + C50896 * C539 - C50897 * C525 -
                  C50896 * C540 + C50890 * C561 + C50894 * C541 -
                  C50895 * C526 - C50894 * C542 + C50889 * C562) *
                     C152167 * C50892) *
                    C152072) *
                   C152373 +
               (((C52218 + C52217 + C52216) * C152167 * C50892 +
                 (C52882 + C52883 + C52884) * C152167 * C152205) *
                    C152072 -
                ((C51230 + C51231 + C51232) * C152167 * C152205 +
                 (C51229 + C51228 + C51227) * C152167 * C50892) *
                    C4047) *
                   C152357 +
               (((C51232 + C51231 + C51230) * C152167 * C50892 +
                 (C52601 + C52602 + C52603) * C152167 * C152205) *
                    C4047 -
                ((C53626 + C53627 + C53628) * C152167 * C152205 +
                 (C52884 + C52883 + C52882) * C152167 * C50892) *
                    C152072) *
                   C152326) *
                  C3181 +
              ((((C50894 * C539 - C50895 * C525 - C50894 * C540 +
                  C50889 * C561 + C50896 * C537 - C50897 * C524 -
                  C50896 * C538 + C50890 * C560 + C50898 * C535 -
                  C50899 * C523 - C50898 * C536 + C50891 * C559) *
                     C152167 * C50892 +
                 (C52219 + C52220 + C52221) * C152167 * C152205) *
                    C152072 -
                ((C51235 + C51234 + C51233) * C152167 * C152205 +
                 (C50898 * C156 - C50899 * C145 - C50898 * C157 +
                  C50891 * C169 + C50896 * C154 - C50897 * C144 -
                  C50896 * C155 + C50890 * C168 + C50894 * C152 -
                  C50895 * C143 - C50894 * C153 + C50889 * C167) *
                     C152167 * C50892) *
                    C4047) *
                   C152373 +
               (((C51233 + C51234 + C51235) * C152167 * C50892 +
                 (C51236 + C51237 + C51238) * C152167 * C152205) *
                    C4047 -
                ((C53411 + C53412 + C53413) * C152167 * C152205 +
                 (C52221 + C52220 + C52219) * C152167 * C50892) *
                    C152072) *
                   C152357 +
               (((C53413 + C53412 + C53411) * C152167 * C50892 +
                 (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
                  C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
                  C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
                  C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                     C152167 * C152205) *
                    C152072 -
                ((C53100 + C53101 + C53102) * C152167 * C152205 +
                 (C51238 + C51237 + C51236) * C152167 * C50892) *
                    C4047) *
                   C152326) *
                  C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152381 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152378 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152365 -
           ((C54904 + C54905 + C54906) * C152167 * C152205 +
            (C50898 * C2407 - C50899 * C2398 - C50898 * C2408 + C50891 * C2422 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50894 * C2411 - C50895 * C2400 - C50894 * C2412 +
             C50889 * C2424) *
                C152167 * C50892) *
               C152342) *
              C151967 * C3181 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C52219 + C52220 + C52221) * C152167 * C152205) *
               C152378 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C152381 -
           ((C54495 + C54496 + C54497) * C152167 * C152205 +
            (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
             C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
             C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                C152167 * C50892) *
               C152365 +
           ((C50894 * C2409 - C50895 * C2399 - C50894 * C2410 + C50889 * C2423 +
             C50896 * C2407 - C50897 * C2398 - C50896 * C2408 + C50890 * C2422 +
             C50898 * C2405 - C50899 * C2397 - C50898 * C2406 +
             C50891 * C2421) *
                C152167 * C50892 +
            (C50894 * C2901 - C50895 * C2896 - C50894 * C2902 + C50889 * C2908 +
             C50896 * C2903 - C50897 * C2897 - C50896 * C2904 + C50890 * C2909 +
             C50898 * C2905 - C50899 * C2898 - C50898 * C2906 +
             C50891 * C2910) *
                C152167 * C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C4047 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C151967 * C152379 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C152072 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C4047) *
              C151967 * C152372 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C4047 -
           (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152072) *
              C151967 * C152355 +
          (((C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                C152167 * C59417 +
            (C59421 * C1053 - C59422 * C1044 - C59421 * C1054 +
             C151908 * C1062) *
                C152167 * C59418 +
            (C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
             C151908 * C1523) *
                C152167 * C59419 +
            (C59421 * C2009 - C59422 * C2002 - C59421 * C2010 +
             C151908 * C2014) *
                C152167 * C59420) *
               C152072 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C4047 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152373 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C4047) *
               C152357 +
           ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
             C60608 * C59420) *
                C4047 -
            (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
             C60354 * C59417) *
                C152072) *
               C152326) *
              C3181 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C4047) *
               C152373 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C4047 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152357 +
           ((C60357 * C59417 + C60358 * C59418 + C61139 * C59419 +
             (C59421 * C8803 - C59422 * C8800 - C59421 * C8804 +
              C151908 * C8806) *
                 C152167 * C59420) *
                C152072 -
            (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
             C59659 * C59417) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152381 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152378 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152365 -
           (C62163 * C59420 + C62164 * C59419 + C62165 * C59418 +
            (C59421 * C2411 - C59422 * C2400 - C59421 * C2412 +
             C151908 * C2424) *
                C152167 * C59417) *
               C152342) *
              C151967 * C3181 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C152378 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C152381 -
           (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C152365 +
           ((C59421 * C2409 - C59422 * C2399 - C59421 * C2410 +
             C151908 * C2423) *
                C152167 * C59417 +
            (C59421 * C2901 - C59422 * C2896 - C59421 * C2902 +
             C151908 * C2908) *
                C152167 * C59418 +
            (C59421 * C9387 - C59422 * C9381 - C59421 * C9388 +
             C151908 * C9399) *
                C152167 * C59419 +
            (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
             C151908 * C10126) *
                C152167 * C59420) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C4047 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152072) *
              C151967 * C152379 +
          (((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
            (C66509 + C66510 + C66511) * C152205) *
               C152072 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C4047) *
              C151967 * C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C4047 -
           ((C66512 + C66513 + C66514) * C152205 +
            (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
               C152072) *
              C151967 * C152355 +
          (((C66214 * C14705 + C66215 * C14706 +
             (C59421 * C2405 - C59422 * C2397 - C59421 * C2406 +
              C151908 * C2421) *
                 C14707) *
                C50892 +
            (C66004 * C14705 + C66005 * C14706 +
             (C59421 * C2905 - C59422 * C2898 - C59421 * C2906 +
              C151908 * C2910) *
                 C14707) *
                C152205) *
               C152072 -
           ((C66007 + C66006 + C65991) * C152205 +
            (C66215 * C14707 + C66214 * C14706 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C14705) *
                C50892) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C4047 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152072) *
               C152373 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152072 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C4047) *
               C152357 +
           (((C65475 + C65474 + C65473) * C50892 +
             (C66855 + C66856 + C66857) * C152205) *
                C4047 -
            ((C67793 + C67794 + C67795) * C152205 +
             (C67087 + C67086 + C67085) * C50892) *
                C152072) *
               C152326) *
              C3181 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152072 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C4047) *
               C152373 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C4047 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152072) *
               C152357 +
           (((C67594 + C67593 + C67598) * C50892 +
             (C60349 * C14705 + C61872 * C14706 +
              (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
               C151908 * C10126) *
                  C14707) *
                 C152205) *
                C152072 -
            ((C67296 + C67297 + C67298) * C152205 +
             (C65481 + C65480 + C65479) * C50892) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C152381 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152378 +
           ((C65787 * C14705 + C65788 * C14706 + C68376 * C14707) * C50892 +
            (C67079 + C67080 + C67100) * C152205) *
               C152365 -
           ((C69078 + C69079 + C69080) * C152205 +
            (C68378 * C14707 + C68376 * C14706 + C65788 * C14705) * C50892) *
               C152342) *
              C151967 * C3181 +
          (((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
            (C66509 + C66510 + C66511) * C152205) *
               C152378 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C152381 -
           ((C68678 + C68673 + C68674) * C152205 +
            (C68879 * C14707 + C65791 * C14706 + C65790 * C14705) * C50892) *
               C152365 +
           ((C65791 * C14705 + C68879 * C14706 +
             (C59421 * C17792 - C59422 * C17788 - C59421 * C17793 +
              C151908 * C17800) *
                 C14707) *
                C50892 +
            (C65792 * C14705 + C68677 * C14706 +
             (C59421 * C18554 - C59422 * C18551 - C59421 * C18555 +
              C151908 * C18557) *
                 C14707) *
                C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152068 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152075 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C4719) *
              C151967 * C151944 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C152075 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C152068 -
           (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C4719) *
              C151967 * C151953 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C152068 -
           (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152075 +
           ((C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C152167 * C59417 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C152167 * C59418 +
            (C59421 * C1515 - C59422 * C1493 - C59421 * C1516 +
             C151908 * C1529) *
                C152167 * C59419 +
            (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
             C151908 * C9698) *
                C152167 * C59420) *
               C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152068 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152075 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C4719) *
              C151967 * C151944 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C52219 + C52220 + C52221) * C152167 * C152205) *
               C152075 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C152068 -
           ((C54495 + C54496 + C54497) * C152167 * C152205 +
            (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
             C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
             C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                C152167 * C50892) *
               C4719) *
              C151967 * C151953 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C152068 -
           ((C52222 + C52223 + C52224) * C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C152075 +
           ((C50894 * C547 - C50895 * C529 - C50894 * C548 + C50889 * C565 +
             C50896 * C549 - C50897 * C530 - C50896 * C550 + C50890 * C566 +
             C50898 * C553 - C50899 * C532 - C50898 * C554 + C50891 * C568) *
                C152167 * C50892 +
            (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 + C50889 * C1520 +
             C50896 * C1495 - C50897 * C1483 - C50896 * C1496 + C50890 * C1519 +
             C50898 * C2624 - C50899 * C2623 - C50898 * C2625 +
             C50891 * C2626) *
                C152167 * C152205) *
               C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C152068 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152075 +
           ((C65787 * C14705 + C65788 * C14706 + C68376 * C14707) * C50892 +
            (C67079 + C67080 + C67100) * C152205) *
               C4719) *
              C151967 * C151944 +
          (((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
            (C66509 + C66510 + C66511) * C152205) *
               C152075 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C152068 -
           ((C68678 + C68673 + C68674) * C152205 +
            (C68879 * C14707 + C65791 * C14706 + C65790 * C14705) * C50892) *
               C4719) *
              C151967 * C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C152068 -
           ((C66512 + C66513 + C66514) * C152205 +
            (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
               C152075 +
           ((C65794 * C14705 + C65796 * C14706 +
             (C59421 * C2417 - C59422 * C2403 - C59421 * C2418 +
              C151908 * C2427) *
                 C14707) *
                C50892 +
            (C65498 * C14705 + C65795 * C14706 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C14707) *
                C152205) *
               C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C4047 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C152373 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C4047) *
               C152357 +
           (((C51232 + C51231 + C51230) * C152167 * C50892 +
             (C52601 + C52602 + C52603) * C152167 * C152205) *
                C4047 -
            ((C53626 + C53627 + C53628) * C152167 * C152205 +
             (C52884 + C52883 + C52882) * C152167 * C50892) *
                C152072) *
               C152326) *
              C3181 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C4047) *
               C152373 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C4047 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152357 +
           (((C53413 + C53412 + C53411) * C152167 * C50892 +
             (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
              C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
              C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
              C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C53100 + C53101 + C53102) * C152167 * C152205 +
             (C51238 + C51237 + C51236) * C152167 * C50892) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C4047 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152072) *
              C151967 * C152379 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C52219 + C52220 + C52221) * C152167 * C152205) *
               C152072 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C4047) *
              C151967 * C152372 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C4047 -
           ((C52222 + C52223 + C52224) * C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C152072) *
              C151967 * C152355 +
          (((C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559 +
             C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
             C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569) *
                C152167 * C50892 +
            (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 + C50889 * C1062 +
             C50896 * C1055 - C50897 * C1045 - C50896 * C1056 + C50890 * C1063 +
             C50898 * C1057 - C50899 * C1046 - C50898 * C1058 +
             C50891 * C1064) *
                C152167 * C152205) *
               C152072 -
           ((C51677 + C51676 + C51675) * C152167 * C152205 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C152167 * C50892) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C4047 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C151967 * C152379 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C152072 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C4047) *
              C151967 * C152372 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C4047 -
           (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152072) *
              C151967 * C152355 +
          (((C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                C152167 * C59417 +
            (C59421 * C1053 - C59422 * C1044 - C59421 * C1054 +
             C151908 * C1062) *
                C152167 * C59418 +
            (C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
             C151908 * C1523) *
                C152167 * C59419 +
            (C59421 * C2009 - C59422 * C2002 - C59421 * C2010 +
             C151908 * C2014) *
                C152167 * C59420) *
               C152072 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C4047 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152373 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C4047) *
               C152357 +
           ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
             C60608 * C59420) *
                C4047 -
            (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
             C60354 * C59417) *
                C152072) *
               C152326) *
              C3181 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C4047) *
               C152373 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C4047 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152357 +
           ((C60357 * C59417 + C60358 * C59418 + C61139 * C59419 +
             (C59421 * C8803 - C59422 * C8800 - C59421 * C8804 +
              C151908 * C8806) *
                 C152167 * C59420) *
                C152072 -
            (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
             C59659 * C59417) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C4047 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152072) *
              C151967 * C152379 +
          (((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
            (C66509 + C66510 + C66511) * C152205) *
               C152072 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C4047) *
              C151967 * C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C4047 -
           ((C66512 + C66513 + C66514) * C152205 +
            (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
               C152072) *
              C151967 * C152355 +
          (((C66214 * C14705 + C66215 * C14706 +
             (C59421 * C2405 - C59422 * C2397 - C59421 * C2406 +
              C151908 * C2421) *
                 C14707) *
                C50892 +
            (C66004 * C14705 + C66005 * C14706 +
             (C59421 * C2905 - C59422 * C2898 - C59421 * C2906 +
              C151908 * C2910) *
                 C14707) *
                C152205) *
               C152072 -
           ((C66007 + C66006 + C65991) * C152205 +
            (C66215 * C14707 + C66214 * C14706 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C14705) *
                C50892) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C4047 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152072) *
               C152373 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152072 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C4047) *
               C152357 +
           (((C65475 + C65474 + C65473) * C50892 +
             (C66855 + C66856 + C66857) * C152205) *
                C4047 -
            ((C67793 + C67794 + C67795) * C152205 +
             (C67087 + C67086 + C67085) * C50892) *
                C152072) *
               C152326) *
              C3181 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152072 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C4047) *
               C152373 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C4047 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152072) *
               C152357 +
           (((C67594 + C67593 + C67598) * C50892 +
             (C60349 * C14705 + C61872 * C14706 +
              (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
               C151908 * C10126) *
                  C14707) *
                 C152205) *
                C152072 -
            ((C67296 + C67297 + C67298) * C152205 +
             (C65481 + C65480 + C65479) * C50892) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C1661 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C1662 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C151985 * C1663 -
           ((C52604 + C52605 + C52606) * C152167 * C152205 +
            (C52603 + C52602 + C52601) * C152167 * C50892) *
               C151985 * C152336) *
              C152270 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C1662 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C1661 -
           ((C53100 + C53101 + C53102) * C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C1663 +
           ((C53102 + C53101 + C53100) * C152167 * C50892 +
            (C50894 * C1323 - C50895 * C1310 - C50894 * C1324 + C50889 * C1334 +
             C50896 * C1325 - C50897 * C1311 - C50896 * C1326 + C50890 * C1335 +
             C50898 * C1327 - C50899 * C1312 - C50898 * C1328 +
             C50891 * C1336) *
                C152167 * C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152284 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152030) *
              C703 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152030 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152284) *
              C704 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C152284 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152030) *
              C705 +
          (((C51675 + C51676 + C51677) * C152167 * C50892 +
            (C50894 * C352 - C50895 * C333 - C50894 * C353 + C50889 * C369 +
             C50896 * C356 - C50897 * C335 - C50896 * C357 + C50890 * C371 +
             C50898 * C360 - C50899 * C337 - C50898 * C361 + C50891 * C373) *
                C152167 * C152205) *
               C151985 * C152030 -
           ((C51677 + C51676 + C51675) * C152167 * C152205 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C152167 * C50892) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152284 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152030) *
              C703 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152030 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152284) *
              C704 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152284 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152030) *
              C705 +
          ((C59963 * C59417 + C59964 * C59418 + C59965 * C59419 +
            (C59421 * C1327 - C59422 * C1312 - C59421 * C1328 +
             C151908 * C1336) *
                C152167 * C59420) *
               C151985 * C152030 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C1661 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C1662 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C151985 * C1663 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C151985 * C152336) *
              C152270 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C1662 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C1661 -
           (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
            C59659 * C59417) *
               C151985 * C1663 +
           (C59660 * C59417 + C59661 * C59418 + C60937 * C59419 +
            (C59421 * C7741 - C59422 * C7734 - C59421 * C7742 +
             C151908 * C7746) *
                C152167 * C59420) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C152284 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C152030) *
              C703 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C152030 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C152284) *
              C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C152284 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C152030) *
              C705 +
          (((C65991 + C66006 + C66007) * C50892 +
            (C59961 * C14705 +
             (C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
              C151908 * C1523) *
                 C14706 +
             (C59421 * C1517 - C59422 * C1494 - C59421 * C1518 +
              C151908 * C1530) *
                 C14707) *
                C152205) *
               C151985 * C152030 -
           ((C66007 + C66006 + C65991) * C152205 +
            ((C59421 * C549 - C59422 * C530 - C59421 * C550 + C151908 * C566) *
                 C14707 +
             (C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                 C14706 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C14705) *
                C50892) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C1661 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C1662 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C151985 * C1663 -
           ((C66858 + C66859 + C66860) * C152205 +
            (C66857 + C66856 + C66855) * C50892) *
               C151985 * C152336) *
              C152270 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C1662 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C1661 -
           ((C67296 + C67297 + C67298) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C1663 +
           ((C67298 + C67297 + C67296) * C50892 +
            (C59649 * C14705 + C61138 * C14706 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C14707) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152285 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152072) *
              C1661 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152072 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C152285) *
              C1662 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C152285 -
           ((C53626 + C53627 + C53628) * C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C152072) *
              C1663 +
          (((C53628 + C53627 + C53626) * C152167 * C50892 +
            (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
             C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
             C50898 * C8586 - C50899 * C8585 - C50898 * C8587 +
             C50891 * C8588) *
                C152167 * C152205) *
               C152072 -
           ((C52604 + C52605 + C52606) * C152167 * C152205 +
            (C52603 + C52602 + C52601) * C152167 * C50892) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152285 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C152284 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C50894 * C1509 - C50895 * C1490 - C50894 * C1510 +
              C50889 * C1526 + C50896 * C1507 - C50897 * C1489 -
              C50896 * C1508 + C50890 * C1525 + C50898 * C1505 -
              C50899 * C1488 - C50898 * C1506 + C50891 * C1524) *
                 C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152285) *
               C152030) *
              C323 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152285) *
               C152284 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152285 -
            ((C50898 * C1503 - C50899 * C1487 - C50898 * C1504 +
              C50891 * C1523 + C50896 * C1505 - C50897 * C1488 -
              C50896 * C1506 + C50890 * C1524 + C50894 * C1507 -
              C50895 * C1489 - C50894 * C1508 + C50889 * C1525) *
                 C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152030) *
              C324 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C152167 * C50892 +
             (C51239 + C51240 + C51241) * C152167 * C152205) *
                C152285 -
            ((C52222 + C52223 + C52224) * C152167 * C152205 +
             (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
              C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
              C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                 C152167 * C50892) *
                C152072) *
               C152284 +
           (((C52224 + C52223 + C52222) * C152167 * C50892 +
             (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
              C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
              C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
              C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C51242 + C51243 + C51244) * C152167 * C152205 +
             (C51241 + C51240 + C51239) * C152167 * C50892) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152285 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152284 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             (C59421 * C8009 - C59422 * C8000 - C59421 * C8010 +
              C151908 * C8018) *
                 C152167 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152285) *
               C152030) *
              C323 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152285) *
               C152284 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152285 -
            ((C59421 * C8007 - C59422 * C7999 - C59421 * C8008 +
              C151908 * C8017) *
                 C152167 * C59420 +
             C60358 * C59419 + C60357 * C59418 + C60356 * C59417) *
                C152072) *
               C152030) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152167 * C59417 +
             C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
                C152285 -
            (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C152167 * C59417) *
                C152072) *
               C152284 +
           ((C60361 * C59417 + C60360 * C59418 + C60359 * C59419 +
             (C59421 * C8586 - C59422 * C8585 - C59421 * C8587 +
              C151908 * C8588) *
                 C152167 * C59420) *
                C152072 -
            (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
             C59662 * C59417) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152285 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C1661 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152072 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C152285) *
              C1662 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C152285 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C152072) *
              C1663 +
          ((C60353 * C59417 + C60798 * C59418 + C61281 * C59419 +
            (C59421 * C61270 - C59422 * C61269 - C59421 * C61271 +
             C151908 * C61272) *
                C152167 * C59420) *
               C152072 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C152285 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152072) *
               C152284 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C60345 * C14705 + C60791 * C14706 + C62161 * C14707) * C152205) *
                C152072 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C152285) *
               C152030) *
              C323 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152072 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C152285) *
               C152284 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C152285 -
            (((C59421 * C9387 - C59422 * C9381 - C59421 * C9388 +
               C151908 * C9399) *
                  C14707 +
              C61873 * C14706 + C60348 * C14705) *
                 C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152072) *
               C152030) *
              C324 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C14705 +
              C65793 * C14706 + C65794 * C14707) *
                 C50892 +
             (C65482 + C65483 + C65500) * C152205) *
                C152285 -
            ((C66512 + C66513 + C66514) * C152205 +
             (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
                C152072) *
               C152284 +
           (((C66514 + C66513 + C66512) * C50892 +
             (C60351 * C14705 + C65499 * C14706 +
              (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
               C151908 * C9924) *
                  C14707) *
                 C152205) *
                C152072 -
            ((C65501 + C65492 + C65493) * C152205 +
             (C65500 + C65483 + C65482) * C50892) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C152285 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152072) *
              C1661 +
          (((C66508 + C66507 + C66506) * C50892 +
            (C67085 + C67086 + C67087) * C152205) *
               C152072 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C152285) *
              C1662 +
          (((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C152285 -
           ((C67793 + C67794 + C67795) * C152205 +
            (C67087 + C67086 + C67085) * C50892) *
               C152072) *
              C1663 +
          (((C67795 + C67794 + C67793) * C50892 +
            (C60793 * C14705 + C60794 * C14706 +
             (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
              C151908 * C62140) *
                 C14707) *
                C152205) *
               C152072 -
           ((C66858 + C66859 + C66860) * C152205 +
            (C66857 + C66856 + C66855) * C50892) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                   C152167 * C50892 +
               (C50894 * C344 - C50895 * C329 - C50894 * C345 + C50889 * C365 +
                C50896 * C342 - C50897 * C328 - C50896 * C343 + C50890 * C364 +
                C50898 * C340 - C50899 * C327 - C50898 * C341 + C50891 * C363) *
                   C152167 * C152205) *
                  C151985 * C151967 * C129 -
              ((C50898 * C338 - C50899 * C326 - C50898 * C339 + C50891 * C362 +
                C50896 * C340 - C50897 * C327 - C50896 * C341 + C50890 * C363 +
                C50894 * C342 - C50895 * C328 - C50894 * C343 + C50889 * C364) *
                   C152167 * C152205 +
               (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                   C152167 * C50892) *
                  C151985 * C151967 * C130 +
              ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                   C152167 * C50892 +
               (C50894 * C340 - C50895 * C327 - C50894 * C341 + C50889 * C363 +
                C50896 * C338 - C50897 * C326 - C50896 * C339 + C50890 * C362 +
                C50898 * C354 - C50899 * C334 - C50898 * C355 + C50891 * C370) *
                   C152167 * C152205) *
                  C151985 * C151967 * C131 -
              ((C50898 * C358 - C50899 * C336 - C50898 * C359 + C50891 * C372 +
                C50896 * C354 - C50897 * C334 - C50896 * C355 + C50890 * C370 +
                C50894 * C338 - C50895 * C326 - C50894 * C339 + C50889 * C362) *
                   C152167 * C152205 +
               (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                   C152167 * C50892) *
                  C151985 * C151967 * C132 +
              ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
                C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
                C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
                   C152167 * C50892 +
               (C50894 * C354 - C50895 * C334 - C50894 * C355 + C50889 * C370 +
                C50896 * C358 - C50897 * C336 - C50896 * C359 + C50890 * C372 +
                C50898 * C708 - C50899 * C707 - C50898 * C709 + C50891 * C710) *
                   C152167 * C152205) *
                  C151985 * C151967 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C151985 * C152373 -
               ((C51230 + C51231 + C51232) * C152167 * C152205 +
                (C51229 + C51228 + C51227) * C152167 * C50892) *
                   C151985 * C152357 +
               ((C51232 + C51231 + C51230) * C152167 * C50892 +
                (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 +
                 C50889 * C1332 + C50896 * C1317 - C50897 * C1307 -
                 C50896 * C1318 + C50890 * C1331 + C50898 * C1315 -
                 C50899 * C1306 - C50898 * C1316 + C50891 * C1330) *
                    C152167 * C152205) *
                   C151985 * C152326) *
                  C323 +
              (((C51233 + C51234 + C51235) * C152167 * C50892 +
                (C51236 + C51237 + C51238) * C152167 * C152205) *
                   C151985 * C152357 -
               ((C51235 + C51234 + C51233) * C152167 * C152205 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C152167 * C50892) *
                   C151985 * C152373 -
               ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 +
                 C50891 * C1329 + C50896 * C1315 - C50897 * C1306 -
                 C50896 * C1316 + C50890 * C1330 + C50894 * C1317 -
                 C50895 * C1307 - C50894 * C1318 + C50889 * C1331) *
                    C152167 * C152205 +
                (C51238 + C51237 + C51236) * C152167 * C50892) *
                   C151985 * C152326) *
                  C324 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C152167 * C50892 +
                (C51239 + C51240 + C51241) * C152167 * C152205) *
                   C151985 * C152373 -
               ((C51242 + C51243 + C51244) * C152167 * C152205 +
                (C51241 + C51240 + C51239) * C152167 * C50892) *
                   C151985 * C152357 +
               ((C51244 + C51243 + C51242) * C152167 * C50892 +
                (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 +
                 C50889 * C1330 + C50896 * C1313 - C50897 * C1305 -
                 C50896 * C1314 + C50890 * C1329 + C50898 * C1668 -
                 C50899 * C1667 - C50898 * C1669 + C50891 * C1670) *
                    C152167 * C152205) *
                   C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152374 -
           ((C50898 * C1051 - C50899 * C1043 - C50898 * C1052 + C50891 * C1061 +
             C50896 * C1049 - C50897 * C1042 - C50896 * C1050 + C50890 * C1060 +
             C50894 * C1047 - C50895 * C1041 - C50894 * C1048 +
             C50889 * C1059) *
                C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152359 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C50894 * C1501 - C50895 * C1486 - C50894 * C1502 + C50889 * C1522 +
             C50896 * C1499 - C50897 * C1485 - C50896 * C1500 + C50890 * C1521 +
             C50898 * C1497 - C50899 * C1484 - C50898 * C1498 +
             C50891 * C1520) *
                C152167 * C152205) *
               C152329) *
              C151967 * C323 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C50894 * C1049 - C50895 * C1042 - C50894 * C1050 + C50889 * C1060 +
             C50896 * C1051 - C50897 * C1043 - C50896 * C1052 + C50890 * C1061 +
             C50898 * C1053 - C50899 * C1044 - C50898 * C1054 +
             C50891 * C1062) *
                C152167 * C152205) *
               C152359 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C152374 -
           ((C50898 * C1495 - C50899 * C1483 - C50898 * C1496 + C50891 * C1519 +
             C50896 * C1497 - C50897 * C1484 - C50896 * C1498 + C50890 * C1520 +
             C50894 * C1499 - C50895 * C1485 - C50894 * C1500 +
             C50889 * C1521) *
                C152167 * C152205 +
            (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
             C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
             C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                C152167 * C50892) *
               C152329) *
              C151967 * C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C152374 -
           ((C50898 * C1055 - C50899 * C1045 - C50898 * C1056 + C50891 * C1063 +
             C50896 * C1053 - C50897 * C1044 - C50896 * C1054 + C50890 * C1062 +
             C50894 * C1051 - C50895 * C1043 - C50894 * C1052 +
             C50889 * C1061) *
                C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C152359 +
           ((C50894 * C547 - C50895 * C529 - C50894 * C548 + C50889 * C565 +
             C50896 * C549 - C50897 * C530 - C50896 * C550 + C50890 * C566 +
             C50898 * C553 - C50899 * C532 - C50898 * C554 + C50891 * C568) *
                C152167 * C50892 +
            (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 + C50889 * C1520 +
             C50896 * C1495 - C50897 * C1483 - C50896 * C1496 + C50890 * C1519 +
             C50898 * C2624 - C50899 * C2623 - C50898 * C2625 +
             C50891 * C2626) *
                C152167 * C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 + C50889 * C1332 +
             C50896 * C1317 - C50897 * C1307 - C50896 * C1318 + C50890 * C1331 +
             C50898 * C1315 - C50899 * C1306 - C50898 * C1316 +
             C50891 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C1212 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C1211 -
           ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 + C50891 * C1329 +
             C50896 * C1315 - C50897 * C1306 - C50896 * C1316 + C50890 * C1330 +
             C50894 * C1317 - C50895 * C1307 - C50894 * C1318 +
             C50889 * C1331) *
                C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C51227 + C51228 + C51229) * C152167 * C152205) *
              C151985 * C1299 -
          ((C51230 + C51231 + C51232) * C152167 * C152205 +
           (C51229 + C51228 + C51227) * C152167 * C50892) *
              C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C152167 * C50892 +
           (C52601 + C52602 + C52603) * C152167 * C152205) *
              C151985 * C1301 -
          ((C52604 + C52605 + C52606) * C152167 * C152205 +
           (C52603 + C52602 + C52601) * C152167 * C50892) *
              C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C152167 * C50892 +
           (C50894 * C7737 - C50895 * C7732 - C50894 * C7738 + C50889 * C7744 +
            C50896 * C7735 - C50897 * C7731 - C50896 * C7736 + C50890 * C7743 +
            C50898 * C8276 - C50899 * C8275 - C50898 * C8277 + C50891 * C8278) *
               C152167 * C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152374 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152359 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152329) *
              C1211 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152359 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C152374 -
           ((C52885 + C52886 + C52887) * C152167 * C152205 +
            (C52881 + C52880 + C52879) * C152167 * C50892) *
               C152329) *
              C1212 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C152374 -
           ((C50898 * C2007 - C50899 * C2001 - C50898 * C2008 + C50891 * C2013 +
             C50896 * C2005 - C50897 * C2000 - C50896 * C2006 + C50890 * C2012 +
             C50894 * C2003 - C50895 * C1999 - C50894 * C2004 +
             C50889 * C2011) *
                C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C152359 +
           ((C52887 + C52886 + C52885) * C152167 * C50892 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152167 * C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           (C59421 * C344 - C59422 * C329 - C59421 * C345 + C151908 * C365) *
               C152167 * C59418 +
           (C59421 * C346 - C59422 * C330 - C59421 * C347 + C151908 * C366) *
               C152167 * C59419 +
           (C59421 * C1319 - C59422 * C1308 - C59421 * C1320 +
            C151908 * C1332) *
               C152167 * C59420) *
              C151985 * C151967 * C129 -
          ((C59421 * C1317 - C59422 * C1307 - C59421 * C1318 +
            C151908 * C1331) *
               C152167 * C59420 +
           (C59421 * C348 - C59422 * C331 - C59421 * C349 + C151908 * C367) *
               C152167 * C59419 +
           (C59421 * C342 - C59422 * C328 - C59421 * C343 + C151908 * C364) *
               C152167 * C59418 +
           (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
               C152167 * C59417) *
              C151985 * C151967 * C130 +
          ((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
               C152167 * C59417 +
           (C59421 * C340 - C59422 * C327 - C59421 * C341 + C151908 * C363) *
               C152167 * C59418 +
           (C59421 * C350 - C59422 * C332 - C59421 * C351 + C151908 * C368) *
               C152167 * C59419 +
           (C59421 * C1315 - C59422 * C1306 - C59421 * C1316 +
            C151908 * C1330) *
               C152167 * C59420) *
              C151985 * C151967 * C131 -
          ((C59421 * C1313 - C59422 * C1305 - C59421 * C1314 +
            C151908 * C1329) *
               C152167 * C59420 +
           (C59421 * C352 - C59422 * C333 - C59421 * C353 + C151908 * C369) *
               C152167 * C59419 +
           (C59421 * C338 - C59422 * C326 - C59421 * C339 + C151908 * C362) *
               C152167 * C59418 +
           (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
               C152167 * C59417) *
              C151985 * C151967 * C132 +
          ((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
               C152167 * C59417 +
           (C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
               C152167 * C59418 +
           (C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
               C152167 * C59419 +
           (C59421 * C1668 - C59422 * C1667 - C59421 * C1669 +
            C151908 * C1670) *
               C152167 * C59420) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152373 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152357 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C323 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152357 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152373 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152373 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152357 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152374 -
           ((C59421 * C2003 - C59422 * C1999 - C59421 * C2004 +
             C151908 * C2011) *
                C152167 * C59420 +
            (C59421 * C1509 - C59422 * C1490 - C59421 * C1510 +
             C151908 * C1526) *
                C152167 * C59419 +
            (C59421 * C1047 - C59422 * C1041 - C59421 * C1048 +
             C151908 * C1059) *
                C152167 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152359 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            (C59421 * C1501 - C59422 * C1486 - C59421 * C1502 +
             C151908 * C1522) *
                C152167 * C59418 +
            (C59421 * C1511 - C59422 * C1491 - C59421 * C1512 +
             C151908 * C1527) *
                C152167 * C59419 +
            (C59421 * C8005 - C59422 * C7998 - C59421 * C8006 +
             C151908 * C8016) *
                C152167 * C59420) *
               C152329) *
              C151967 * C323 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            (C59421 * C1049 - C59422 * C1042 - C59421 * C1050 +
             C151908 * C1060) *
                C152167 * C59418 +
            (C59421 * C1507 - C59422 * C1489 - C59421 * C1508 +
             C151908 * C1525) *
                C152167 * C59419 +
            (C59421 * C2005 - C59422 * C2000 - C59421 * C2006 +
             C151908 * C2012) *
                C152167 * C59420) *
               C152359 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C152374 -
           ((C59421 * C8003 - C59422 * C7997 - C59421 * C8004 +
             C151908 * C8015) *
                C152167 * C59420 +
            (C59421 * C1513 - C59422 * C1492 - C59421 * C1514 +
             C151908 * C1528) *
                C152167 * C59419 +
            (C59421 * C1499 - C59422 * C1485 - C59421 * C1500 +
             C151908 * C1521) *
                C152167 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C152329) *
              C151967 * C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C152374 -
           ((C59421 * C2007 - C59422 * C2001 - C59421 * C2008 +
             C151908 * C2013) *
                C152167 * C59420 +
            (C59421 * C1505 - C59422 * C1488 - C59421 * C1506 +
             C151908 * C1524) *
                C152167 * C59419 +
            (C59421 * C1051 - C59422 * C1043 - C59421 * C1052 +
             C151908 * C1061) *
                C152167 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152359 +
           ((C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C152167 * C59417 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C152167 * C59418 +
            (C59421 * C1515 - C59422 * C1493 - C59421 * C1516 +
             C151908 * C1529) *
                C152167 * C59419 +
            (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
             C151908 * C9698) *
                C152167 * C59420) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C1211 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C1212 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152370 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C1212 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C1211 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C1211 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C1212 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
              C151985 * C1299 -
          (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
           C59654 * C59417) *
              C151985 * C1300 +
          (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
           C60608 * C59420) *
              C151985 * C1301 -
          (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
           C59656 * C59417) *
              C151985 * C1302 +
          (C59657 * C59417 + C60608 * C59418 + C60609 * C59419 +
           (C59421 * C60590 - C59422 * C60589 - C59421 * C60591 +
            C151908 * C60592) *
               C152167 * C59420) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152374 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152359 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152329) *
              C1211 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152359 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C152374 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C152329) *
              C1212 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C152374 -
           ((C59421 * C8801 - C59422 * C8799 - C59421 * C8802 +
             C151908 * C8805) *
                C152167 * C59420 +
            C60798 * C59419 + C60353 * C59418 + C60354 * C59417) *
               C152359 +
           (C60796 * C59417 + C60797 * C59418 + C60799 * C59419 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C152167 * C59420) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C14705 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C14706 +
            (C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C14707) *
               C50892 +
           (C59642 * C14705 + C60346 * C14706 + C60790 * C14707) * C152205) *
              C151985 * C151967 * C129 -
          ((C61874 * C14707 + C60347 * C14706 + C59646 * C14705) * C152205 +
           ((C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C14707 +
            (C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C14706 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C14705) *
               C50892) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C14705 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C14706 +
            (C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C14707) *
               C50892 +
           (C59650 * C14705 + C60352 * C14706 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C14707) *
               C152205) *
              C151985 * C151967 * C131 -
          (((C59421 * C1495 - C59422 * C1483 - C59421 * C1496 +
             C151908 * C1519) *
                C14707 +
            (C59421 * C1053 - C59422 * C1044 - C59421 * C1054 +
             C151908 * C1062) *
                C14706 +
            C59960 * C14705) *
               C152205 +
           ((C59421 * C549 - C59422 * C530 - C59421 * C550 + C151908 * C566) *
                C14707 +
            (C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                C14706 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C14705) *
               C50892) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C14705 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C14706 +
            (C59421 * C553 - C59422 * C532 - C59421 * C554 + C151908 * C568) *
                C14707) *
               C50892 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C14705 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C14706 +
            (C59421 * C2624 - C59422 * C2623 - C59421 * C2625 +
             C151908 * C2626) *
                C14707) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C14706 +
             (C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                 C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C152373 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C152357 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C59644 * C14705 + C60344 * C14706 + C60792 * C14707) * C152205) *
               C151985 * C152326) *
              C323 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C152357 -
           ((C65478 + C65477 + C65476) * C152205 +
            ((C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                 C14707 +
             (C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C152373 -
           ((C61872 * C14707 + C60349 * C14706 + C59648 * C14705) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C14706 +
             (C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                 C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C152373 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C152357 +
           ((C65493 + C65492 + C65501) * C50892 +
            (C59652 * C14705 + C60350 * C14706 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C14707) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C152374 -
           ((C62162 * C14707 + C60790 * C14706 + C60346 * C14705) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152359 +
           ((C65787 * C14705 + C65788 * C14706 +
             (C59421 * C2413 - C59422 * C2401 - C59421 * C2414 +
              C151908 * C2425) *
                 C14707) *
                C50892 +
            (C60790 * C14705 + C62162 * C14706 +
             (C59421 * C9391 - C59422 * C9383 - C59421 * C9392 +
              C151908 * C9401) *
                 C14707) *
                C152205) *
               C152329) *
              C151967 * C323 +
          (((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
            (C60347 * C14705 + C61874 * C14706 + C65792 * C14707) * C152205) *
               C152359 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C152374 -
           (((C59421 * C9393 - C59422 * C9384 - C59421 * C9394 +
              C151908 * C9402) *
                 C14707 +
             C65792 * C14706 + C61874 * C14705) *
                C152205 +
            ((C59421 * C2415 - C59422 * C2402 - C59421 * C2416 +
              C151908 * C2426) *
                 C14707 +
             C65791 * C14706 + C65790 * C14705) *
                C50892) *
               C152329) *
              C151967 * C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C152374 -
           ((C65795 * C14707 + C65498 * C14706 + C60352 * C14705) * C152205 +
            (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
               C152359 +
           ((C65794 * C14705 + C65796 * C14706 +
             (C59421 * C2417 - C59422 * C2403 - C59421 * C2418 +
              C151908 * C2427) *
                 C14707) *
                C50892 +
            (C65498 * C14705 + C65795 * C14706 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C14707) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C1211 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C1212 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C59644 * C14705 + C60344 * C14706 + C60792 * C14707) * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C1212 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C1211 -
           ((C61872 * C14707 + C60349 * C14706 + C59648 * C14705) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C1211 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C1212 +
           ((C65493 + C65492 + C65501) * C50892 +
            (C59652 * C14705 + C60350 * C14706 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C14707) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C14705 +
            C65786 * C14706 + C65787 * C14707) *
               C50892 +
           (C65470 + C65471 + C65472) * C152205) *
              C151985 * C1299 -
          ((C65473 + C65474 + C65475) * C152205 +
           (C65472 + C65471 + C65470) * C50892) *
              C151985 * C1300 +
          ((C65475 + C65474 + C65473) * C50892 +
           (C66855 + C66856 + C66857) * C152205) *
              C151985 * C1301 -
          ((C66858 + C66859 + C66860) * C152205 +
           (C66857 + C66856 + C66855) * C50892) *
              C151985 * C1302 +
          ((C66860 + C66859 + C66858) * C50892 +
           (C60606 * C14705 + C61280 * C14706 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C14707) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C152374 -
           ((C66506 + C66507 + C66508) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152359 +
           ((C65787 * C14705 + C65788 * C14706 +
             (C59421 * C2413 - C59422 * C2401 - C59421 * C2414 +
              C151908 * C2425) *
                 C14707) *
                C50892 +
            (C67079 + C67080 + C67100) * C152205) *
               C152329) *
              C1211 +
          (((C66508 + C66507 + C66506) * C50892 +
            (C67085 + C67086 + C67087) * C152205) *
               C152359 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C152374 -
           ((C67101 + C67092 + C67093) * C152205 +
            (C67100 + C67080 + C67079) * C50892) *
               C152329) *
              C1212 +
          (((C65475 + C65474 + C65473) * C50892 +
            (C66855 + C66856 + C66857) * C152205) *
               C152374 -
           ((C62160 * C14707 + C60792 * C14706 + C60344 * C14705) * C152205 +
            (C67087 + C67086 + C67085) * C50892) *
               C152359 +
           ((C67093 + C67092 + C67101) * C50892 +
            (C60792 * C14705 + C62160 * C14706 +
             (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
              C151908 * C61658) *
                 C14707) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152285 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C1211 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152285) *
               C1212 +
           (((C51232 + C51231 + C51230) * C152167 * C50892 +
             (C52601 + C52602 + C52603) * C152167 * C152205) *
                C152285 -
            ((C50898 * C2007 - C50899 * C2001 - C50898 * C2008 +
              C50891 * C2013 + C50896 * C2005 - C50897 * C2000 -
              C50896 * C2006 + C50890 * C2012 + C50894 * C2003 -
              C50895 * C1999 - C50894 * C2004 + C50889 * C2011) *
                 C152167 * C152205 +
             (C52884 + C52883 + C52882) * C152167 * C50892) *
                C152072) *
               C152326) *
              C152270 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152285) *
               C1211 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152285 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C1212 +
           (((C53413 + C53412 + C53411) * C152167 * C50892 +
             (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
              C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
              C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
              C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C53100 + C53101 + C53102) * C152167 * C152205 +
             (C51238 + C51237 + C51236) * C152167 * C50892) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152285 -
           ((C50898 * C1051 - C50899 * C1043 - C50898 * C1052 + C50891 * C1061 +
             C50896 * C1049 - C50897 * C1042 - C50896 * C1050 + C50890 * C1060 +
             C50894 * C1047 - C50895 * C1041 - C50894 * C1048 +
             C50889 * C1059) *
                C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152072) *
              C151967 * C703 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C50894 * C1049 - C50895 * C1042 - C50894 * C1050 + C50889 * C1060 +
             C50896 * C1051 - C50897 * C1043 - C50896 * C1052 + C50890 * C1061 +
             C50898 * C1053 - C50899 * C1044 - C50898 * C1054 +
             C50891 * C1062) *
                C152167 * C152205) *
               C152072 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C152285) *
              C151967 * C704 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C152285 -
           ((C50898 * C1055 - C50899 * C1045 - C50898 * C1056 + C50891 * C1063 +
             C50896 * C1053 - C50897 * C1044 - C50896 * C1054 + C50890 * C1062 +
             C50894 * C1051 - C50895 * C1043 - C50894 * C1052 +
             C50889 * C1061) *
                C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C152072) *
              C151967 * C705 +
          (((C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559 +
             C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
             C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569) *
                C152167 * C50892 +
            (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 + C50889 * C1062 +
             C50896 * C1055 - C50897 * C1045 - C50896 * C1056 + C50890 * C1063 +
             C50898 * C1057 - C50899 * C1046 - C50898 * C1058 +
             C50891 * C1064) *
                C152167 * C152205) *
               C152072 -
           ((C51677 + C51676 + C51675) * C152167 * C152205 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C152167 * C50892) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152285 -
           ((C59421 * C2003 - C59422 * C1999 - C59421 * C2004 +
             C151908 * C2011) *
                C152167 * C59420 +
            (C59421 * C1509 - C59422 * C1490 - C59421 * C1510 +
             C151908 * C1526) *
                C152167 * C59419 +
            (C59421 * C1047 - C59422 * C1041 - C59421 * C1048 +
             C151908 * C1059) *
                C152167 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C151967 * C703 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            (C59421 * C1049 - C59422 * C1042 - C59421 * C1050 +
             C151908 * C1060) *
                C152167 * C59418 +
            (C59421 * C1507 - C59422 * C1489 - C59421 * C1508 +
             C151908 * C1525) *
                C152167 * C59419 +
            (C59421 * C2005 - C59422 * C2000 - C59421 * C2006 +
             C151908 * C2012) *
                C152167 * C59420) *
               C152072 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C152285) *
              C151967 * C704 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C152285 -
           ((C59421 * C2007 - C59422 * C2001 - C59421 * C2008 +
             C151908 * C2013) *
                C152167 * C59420 +
            (C59421 * C1505 - C59422 * C1488 - C59421 * C1506 +
             C151908 * C1524) *
                C152167 * C59419 +
            (C59421 * C1051 - C59422 * C1043 - C59421 * C1052 +
             C151908 * C1061) *
                C152167 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152072) *
              C151967 * C705 +
          (((C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                C152167 * C59417 +
            (C59421 * C1053 - C59422 * C1044 - C59421 * C1054 +
             C151908 * C1062) *
                C152167 * C59418 +
            (C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
             C151908 * C1523) *
                C152167 * C59419 +
            (C59421 * C2009 - C59422 * C2002 - C59421 * C2010 +
             C151908 * C2014) *
                C152167 * C59420) *
               C152072 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152285 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C1211 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152285) *
               C1212 +
           ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
             C60608 * C59420) *
                C152285 -
            ((C59421 * C8801 - C59422 * C8799 - C59421 * C8802 +
              C151908 * C8805) *
                 C152167 * C59420 +
             C60798 * C59419 + C60353 * C59418 + C60354 * C59417) *
                C152072) *
               C152326) *
              C152270 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152285) *
               C1211 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152285 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C1212 +
           ((C60357 * C59417 + C60358 * C59418 + C61139 * C59419 +
             (C59421 * C8803 - C59422 * C8800 - C59421 * C8804 +
              C151908 * C8806) *
                 C152167 * C59420) *
                C152072 -
            (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
             C59659 * C59417) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C152285 -
           ((C62162 * C14707 + C60790 * C14706 + C60346 * C14705) * C152205 +
            (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
               C152072) *
              C151967 * C703 +
          (((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
            (C60347 * C14705 + C61874 * C14706 + C65792 * C14707) * C152205) *
               C152072 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C152285) *
              C151967 * C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C152285 -
           ((C65795 * C14707 + C65498 * C14706 + C60352 * C14705) * C152205 +
            (C65796 * C14707 + C65794 * C14706 + C65793 * C14705) * C50892) *
               C152072) *
              C151967 * C705 +
          (((C66214 * C14705 + C66215 * C14706 +
             (C59421 * C2405 - C59422 * C2397 - C59421 * C2406 +
              C151908 * C2421) *
                 C14707) *
                C50892 +
            (C66004 * C14705 + C66005 * C14706 +
             (C59421 * C2905 - C59422 * C2898 - C59421 * C2906 +
              C151908 * C2910) *
                 C14707) *
                C152205) *
               C152072 -
           ((C66007 + C66006 + C65991) * C152205 +
            (C66215 * C14707 + C66214 * C14706 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C14705) *
                C50892) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C14705 +
              C65786 * C14706 + C65787 * C14707) *
                 C50892 +
             (C65470 + C65471 + C65472) * C152205) *
                C152285 -
            ((C66506 + C66507 + C66508) * C152205 +
             (C65788 * C14707 + C65787 * C14706 + C65786 * C14705) * C50892) *
                C152072) *
               C1211 +
           (((C66508 + C66507 + C66506) * C50892 +
             (C67085 + C67086 + C67087) * C152205) *
                C152072 -
            ((C65473 + C65474 + C65475) * C152205 +
             (C65472 + C65471 + C65470) * C50892) *
                C152285) *
               C1212 +
           (((C65475 + C65474 + C65473) * C50892 +
             (C66855 + C66856 + C66857) * C152205) *
                C152285 -
            ((C62160 * C14707 + C60792 * C14706 + C60344 * C14705) * C152205 +
             (C67087 + C67086 + C67085) * C50892) *
                C152072) *
               C152326) *
              C152270 +
          ((((C65789 * C14705 + C65790 * C14706 + C65791 * C14707) * C50892 +
             (C66509 + C66510 + C66511) * C152205) *
                C152072 -
            ((C65478 + C65477 + C65476) * C152205 +
             (C65790 * C14707 + C65789 * C14706 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C14705) *
                 C50892) *
                C152285) *
               C1211 +
           (((C65476 + C65477 + C65478) * C50892 +
             (C65479 + C65480 + C65481) * C152205) *
                C152285 -
            ((C67598 + C67593 + C67594) * C152205 +
             (C66511 + C66510 + C66509) * C50892) *
                C152072) *
               C1212 +
           (((C67594 + C67593 + C67598) * C50892 +
             (C60349 * C14705 + C61872 * C14706 +
              (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
               C151908 * C10126) *
                  C14707) *
                 C152205) *
                C152072 -
            ((C67296 + C67297 + C67298) * C152205 +
             (C65481 + C65480 + C65479) * C50892) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152373 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152357 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 + C50889 * C1332 +
             C50896 * C1317 - C50897 * C1307 - C50896 * C1318 + C50890 * C1331 +
             C50898 * C1315 - C50899 * C1306 - C50898 * C1316 +
             C50891 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C323 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152357 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152373 -
           ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 + C50891 * C1329 +
             C50896 * C1315 - C50897 * C1306 - C50896 * C1316 + C50890 * C1330 +
             C50894 * C1317 - C50895 * C1307 - C50894 * C1318 +
             C50889 * C1331) *
                C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152326) *
              C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C152373 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152357 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C50894 * C344 - C50895 * C329 - C50894 * C345 + C50889 * C365 +
            C50896 * C342 - C50897 * C328 - C50896 * C343 + C50890 * C364 +
            C50898 * C340 - C50899 * C327 - C50898 * C341 + C50891 * C363) *
               C152167 * C152205) *
              C151985 * C151967 * C129 -
          ((C50898 * C338 - C50899 * C326 - C50898 * C339 + C50891 * C362 +
            C50896 * C340 - C50897 * C327 - C50896 * C341 + C50890 * C363 +
            C50894 * C342 - C50895 * C328 - C50894 * C343 + C50889 * C364) *
               C152167 * C152205 +
           (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
            C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
            C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
               C152167 * C50892) *
              C151985 * C151967 * C130 +
          ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
            C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
            C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
               C152167 * C50892 +
           (C50894 * C340 - C50895 * C327 - C50894 * C341 + C50889 * C363 +
            C50896 * C338 - C50897 * C326 - C50896 * C339 + C50890 * C362 +
            C50898 * C354 - C50899 * C334 - C50898 * C355 + C50891 * C370) *
               C152167 * C152205) *
              C151985 * C151967 * C131 -
          ((C50898 * C358 - C50899 * C336 - C50898 * C359 + C50891 * C372 +
            C50896 * C354 - C50897 * C334 - C50896 * C355 + C50890 * C370 +
            C50894 * C338 - C50895 * C326 - C50894 * C339 + C50889 * C362) *
               C152167 * C152205 +
           (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
            C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
            C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
               C152167 * C50892) *
              C151985 * C151967 * C132 +
          ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
            C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
            C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
               C152167 * C50892 +
           (C50894 * C354 - C50895 * C334 - C50894 * C355 + C50889 * C370 +
            C50896 * C358 - C50897 * C336 - C50896 * C359 + C50890 * C372 +
            C50898 * C708 - C50899 * C707 - C50898 * C709 + C50891 * C710) *
               C152167 * C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 + C50889 * C1332 +
             C50896 * C1317 - C50897 * C1307 - C50896 * C1318 + C50890 * C1331 +
             C50898 * C1315 - C50899 * C1306 - C50898 * C1316 +
             C50891 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C1212 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C1211 -
           ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 + C50891 * C1329 +
             C50896 * C1315 - C50897 * C1306 - C50896 * C1316 + C50890 * C1330 +
             C50894 * C1317 - C50895 * C1307 - C50894 * C1318 +
             C50889 * C1331) *
                C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C51227 + C51228 + C51229) * C152167 * C152205) *
              C151985 * C1299 -
          ((C51230 + C51231 + C51232) * C152167 * C152205 +
           (C51229 + C51228 + C51227) * C152167 * C50892) *
              C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C152167 * C50892 +
           (C52601 + C52602 + C52603) * C152167 * C152205) *
              C151985 * C1301 -
          ((C52604 + C52605 + C52606) * C152167 * C152205 +
           (C52603 + C52602 + C52601) * C152167 * C50892) *
              C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C152167 * C50892 +
           (C50894 * C7737 - C50895 * C7732 - C50894 * C7738 + C50889 * C7744 +
            C50896 * C7735 - C50897 * C7731 - C50896 * C7736 + C50890 * C7743 +
            C50898 * C8276 - C50899 * C8275 - C50898 * C8277 + C50891 * C8278) *
               C152167 * C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           (C59421 * C344 - C59422 * C329 - C59421 * C345 + C151908 * C365) *
               C152167 * C59418 +
           (C59421 * C346 - C59422 * C330 - C59421 * C347 + C151908 * C366) *
               C152167 * C59419 +
           (C59421 * C1319 - C59422 * C1308 - C59421 * C1320 +
            C151908 * C1332) *
               C152167 * C59420) *
              C151985 * C151967 * C129 -
          ((C59421 * C1317 - C59422 * C1307 - C59421 * C1318 +
            C151908 * C1331) *
               C152167 * C59420 +
           (C59421 * C348 - C59422 * C331 - C59421 * C349 + C151908 * C367) *
               C152167 * C59419 +
           (C59421 * C342 - C59422 * C328 - C59421 * C343 + C151908 * C364) *
               C152167 * C59418 +
           (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
               C152167 * C59417) *
              C151985 * C151967 * C130 +
          ((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
               C152167 * C59417 +
           (C59421 * C340 - C59422 * C327 - C59421 * C341 + C151908 * C363) *
               C152167 * C59418 +
           (C59421 * C350 - C59422 * C332 - C59421 * C351 + C151908 * C368) *
               C152167 * C59419 +
           (C59421 * C1315 - C59422 * C1306 - C59421 * C1316 +
            C151908 * C1330) *
               C152167 * C59420) *
              C151985 * C151967 * C131 -
          ((C59421 * C1313 - C59422 * C1305 - C59421 * C1314 +
            C151908 * C1329) *
               C152167 * C59420 +
           (C59421 * C352 - C59422 * C333 - C59421 * C353 + C151908 * C369) *
               C152167 * C59419 +
           (C59421 * C338 - C59422 * C326 - C59421 * C339 + C151908 * C362) *
               C152167 * C59418 +
           (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
               C152167 * C59417) *
              C151985 * C151967 * C132 +
          ((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
               C152167 * C59417 +
           (C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
               C152167 * C59418 +
           (C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
               C152167 * C59419 +
           (C59421 * C1668 - C59422 * C1667 - C59421 * C1669 +
            C151908 * C1670) *
               C152167 * C59420) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152373 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152357 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C323 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152357 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152373 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152373 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152357 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C1211 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C1212 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152370 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C1212 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C1211 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C1211 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C1212 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
              C151985 * C1299 -
          (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
           C59654 * C59417) *
              C151985 * C1300 +
          (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
           C60608 * C59420) *
              C151985 * C1301 -
          (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
           C59656 * C59417) *
              C151985 * C1302 +
          (C59657 * C59417 + C60608 * C59418 + C60609 * C59419 +
           (C59421 * C60590 - C59422 * C60589 - C59421 * C60591 +
            C151908 * C60592) *
               C152167 * C59420) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C14705 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C14706 +
            (C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C14707) *
               C50892 +
           (C59642 * C14705 + C60346 * C14706 + C60790 * C14707) * C152205) *
              C151985 * C151967 * C129 -
          ((C61874 * C14707 + C60347 * C14706 + C59646 * C14705) * C152205 +
           ((C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C14707 +
            (C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C14706 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C14705) *
               C50892) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C14705 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C14706 +
            (C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C14707) *
               C50892 +
           (C59650 * C14705 + C60352 * C14706 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C14707) *
               C152205) *
              C151985 * C151967 * C131 -
          (((C59421 * C1495 - C59422 * C1483 - C59421 * C1496 +
             C151908 * C1519) *
                C14707 +
            (C59421 * C1053 - C59422 * C1044 - C59421 * C1054 +
             C151908 * C1062) *
                C14706 +
            C59960 * C14705) *
               C152205 +
           ((C59421 * C549 - C59422 * C530 - C59421 * C550 + C151908 * C566) *
                C14707 +
            (C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                C14706 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C14705) *
               C50892) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C14705 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C14706 +
            (C59421 * C553 - C59422 * C532 - C59421 * C554 + C151908 * C568) *
                C14707) *
               C50892 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C14705 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C14706 +
            (C59421 * C2624 - C59422 * C2623 - C59421 * C2625 +
             C151908 * C2626) *
                C14707) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C14706 +
             (C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                 C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C152373 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C152357 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C59644 * C14705 + C60344 * C14706 + C60792 * C14707) * C152205) *
               C151985 * C152326) *
              C323 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C152357 -
           ((C65478 + C65477 + C65476) * C152205 +
            ((C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                 C14707 +
             (C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C152373 -
           ((C61872 * C14707 + C60349 * C14706 + C59648 * C14705) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C14706 +
             (C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                 C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C152373 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C152357 +
           ((C65493 + C65492 + C65501) * C50892 +
            (C59652 * C14705 + C60350 * C14706 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C14707) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C14705 +
             C65786 * C14706 + C65787 * C14707) *
                C50892 +
            (C65470 + C65471 + C65472) * C152205) *
               C151985 * C1211 -
           ((C65473 + C65474 + C65475) * C152205 +
            (C65472 + C65471 + C65470) * C50892) *
               C151985 * C1212 +
           ((C65475 + C65474 + C65473) * C50892 +
            (C59644 * C14705 + C60344 * C14706 + C60792 * C14707) * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C65476 + C65477 + C65478) * C50892 +
            (C65479 + C65480 + C65481) * C152205) *
               C151985 * C1212 -
           ((C65478 + C65477 + C65476) * C152205 +
            (C65790 * C14707 + C65789 * C14706 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C14705) *
                C50892) *
               C151985 * C1211 -
           ((C61872 * C14707 + C60349 * C14706 + C59648 * C14705) * C152205 +
            (C65481 + C65480 + C65479) * C50892) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C14705 +
             C65793 * C14706 + C65794 * C14707) *
                C50892 +
            (C65482 + C65483 + C65500) * C152205) *
               C151985 * C1211 -
           ((C65501 + C65492 + C65493) * C152205 +
            (C65500 + C65483 + C65482) * C50892) *
               C151985 * C1212 +
           ((C65493 + C65492 + C65501) * C50892 +
            (C59652 * C14705 + C60350 * C14706 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C14707) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C14705 +
            C65786 * C14706 + C65787 * C14707) *
               C50892 +
           (C65470 + C65471 + C65472) * C152205) *
              C151985 * C1299 -
          ((C65473 + C65474 + C65475) * C152205 +
           (C65472 + C65471 + C65470) * C50892) *
              C151985 * C1300 +
          ((C65475 + C65474 + C65473) * C50892 +
           (C66855 + C66856 + C66857) * C152205) *
              C151985 * C1301 -
          ((C66858 + C66859 + C66860) * C152205 +
           (C66857 + C66856 + C66855) * C50892) *
              C151985 * C1302 +
          ((C66860 + C66859 + C66858) * C50892 +
           (C60606 * C14705 + C61280 * C14706 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C14707) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C151985 * C152026 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C151985 * C152033 +
           ((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C151985 * C3525) *
              C151944 +
          ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C152033 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C152026 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                C152205 +
            (C85260 * C152231 + C73985 * C152302) * C50892) *
               C151985 * C3525) *
              C151953 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
               C151985 * C152026 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
               C151985 * C152033 +
           ((C73986 * C152302 + (C74995 + C74994) * C152231) * C50892 +
            ((C73983 + C73982) * C152302 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C3525) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C152285 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152072) *
               C152026 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C152285) *
               C152033 +
           (((C73984 * C152302 + C84614 * C152231) * C50892 +
             ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
                C152285 -
            (((C75644 + C75645) * C152231 + C85519 * C152302) * C152205 +
             (C84615 * C152231 + C75588 * C152302) * C50892) *
                C152072) *
               C3525) *
              C3181 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C152285) *
               C152026 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C152285 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             (C86699 * C152231 + C83867 * C152302) * C50892) *
                C152072) *
               C152033 +
           (((C76148 * C152302 + (C77247 + C77246) * C152231) * C50892 +
             ((C76163 + C76162) * C152302 +
              (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
               C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
               C150632 * C9697 + C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                 C152205 +
             (C85260 * C152231 + C73985 * C152302) * C50892) *
                C152285) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C151985 * C152380 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C151985 * C152376 +
           ((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C151985 * C152362 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C152302) *
                C152205 +
            (C85519 * C152231 + C75338 * C152302) * C50892) *
               C151985 * C152336) *
              C3181 +
          ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C152376 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C152380 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                C152205 +
            (C85260 * C152231 + C73985 * C152302) * C50892) *
               C151985 * C152362 +
           ((C75842 * C152302 + (C76163 + C76162) * C152231) * C50892 +
            ((C75857 + C75856) * C152302 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152231) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C151985 * C3041 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C151985 * C152030) *
              C152379 +
          ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C152030 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C3041) *
              C152372 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
               C151985 * C3041 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
               C151985 * C152030) *
              C152355 +
          ((((C74426 + C74427) * C152302 + (C83204 + C83205) * C152231) *
                C50892 +
            ((C74428 + C74429) * C152302 +
             (C150639 * C1503 - C73636 * C1487 - C150639 * C1504 +
              C152263 * C1523 + C150632 * C1866 - C73638 * C1865 -
              C150632 * C1867 + C151913 * C1868) *
                 C152231) *
                C152205) *
               C151985 * C152030 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C152302) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C152302) *
                C50892) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C152374 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152359 +
            (((C82923 + C82922) * C152302 + (C86298 + C86299) * C152231) *
                 C50892 +
             (C84613 * C152302 + C87236 * C152231) * C152205) *
                C152329) *
               C3041 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152359 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C152374 -
            (((C77662 + C77663) * C152231 + C84615 * C152302) * C152205 +
             (C87237 * C152231 + C84612 * C152302) * C50892) *
                C152329) *
               C152030) *
              C3181 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + C86690 * C152231) * C152205) *
                C152359 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C152374 -
            (((C86704 + C86705) * C152231 + C86699 * C152302) * C152205 +
             ((C86976 + C86977) * C152231 + (C82927 + C82926) * C152302) *
                 C50892) *
                C152329) *
               C3041 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C152374 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             (C86699 * C152231 + C83867 * C152302) * C50892) *
                C152359 +
            ((C86690 * C152302 + (C86705 + C86704) * C152231) * C50892 +
             ((C77247 + C77246) * C152302 +
              (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
               C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
               C150632 * C9923 + C151913 * C9924) *
                  C152231) *
                 C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C152285 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152072) *
               C3041 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C152285) *
               C152030) *
              C151944 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C152285) *
               C3041 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C152285 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             (C86699 * C152231 + C83867 * C152302) * C50892) *
                C152072) *
               C152030) *
              C151953 +
          (((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
               C152263 * C168 + C150632 * C156 - C73638 * C145 -
               C150632 * C157 + C151913 * C169) *
                  C152302 +
              (C82928 + C82929) * C152231) *
                 C50892 +
             ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
                C152285 -
            (((C82930 + C82931) * C152231 + C83869 * C152302) * C152205 +
             ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                 C50892) *
                C152072) *
               C3041 +
           (((C83868 * C152302 + (C82931 + C82930) * C152231) * C50892 +
             ((C74995 + C74994) * C152302 +
              (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
               C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
               C150632 * C1518 + C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                 C152205 +
             (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
                C152285) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C151985 * C3041 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C151985 * C152030) *
              C152379 +
          ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C152030 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C3041) *
              C152372 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
               C151985 * C3041 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
               C151985 * C152030) *
              C152355 +
          ((((C74426 + C74427) * C152302 + (C83204 + C83205) * C152231) *
                C50892 +
            ((C74428 + C74429) * C152302 +
             (C150639 * C1503 - C73636 * C1487 - C150639 * C1504 +
              C152263 * C1523 + C150632 * C1866 - C73638 * C1865 -
              C150632 * C1867 + C151913 * C1868) *
                 C152231) *
                C152205) *
               C151985 * C152030 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C152302) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C152302) *
                C50892) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C151985 * C152380 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C151985 * C152376 +
           ((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C151985 * C152362 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C152302) *
                C152205 +
            (C85519 * C152231 + C75338 * C152302) * C50892) *
               C151985 * C152336) *
              C3181 +
          ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C152376 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C152380 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                C152205 +
            (C85260 * C152231 + C73985 * C152302) * C50892) *
               C151985 * C152362 +
           ((C75842 * C152302 + (C76163 + C76162) * C152231) * C50892 +
            ((C75857 + C75856) * C152302 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152231) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C4047 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152072) *
               C152026 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C4047) *
               C152033 +
           (((C73984 * C152302 + C84614 * C152231) * C50892 +
             ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
                C4047 -
            (((C75644 + C75645) * C152231 + C85519 * C152302) * C152205 +
             (C84615 * C152231 + C75588 * C152302) * C50892) *
                C152072) *
               C3525) *
              C152270 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C4047) *
               C152026 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C4047 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             (C86699 * C152231 + C83867 * C152302) * C50892) *
                C152072) *
               C152033 +
           (((C76148 * C152302 + (C77247 + C77246) * C152231) * C50892 +
             ((C76163 + C76162) * C152302 +
              (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
               C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
               C150632 * C9697 + C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                 C152205 +
             (C85260 * C152231 + C73985 * C152302) * C50892) *
                C4047) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C152068 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152075 +
           (((C82923 + C82922) * C152302 + (C86298 + C86299) * C152231) *
                C50892 +
            (C84613 * C152302 + C87236 * C152231) * C152205) *
               C4719) *
              C152026 +
          (((C83864 * C152302 + C84613 * C152231) * C50892 +
            (C84614 * C152302 + C75646 * C152231) * C152205) *
               C152075 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C152068 -
           (((C77662 + C77663) * C152231 + C84615 * C152302) * C152205 +
            (C87237 * C152231 + C84612 * C152302) * C50892) *
               C4719) *
              C152033 +
          (((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C152068 -
           (((C75644 + C75645) * C152231 + C85519 * C152302) * C152205 +
            (C84615 * C152231 + C75588 * C152302) * C50892) *
               C152075 +
           ((C75646 * C152302 + (C77663 + C77662) * C152231) * C50892 +
            ((C75645 + C75644) * C152302 +
             (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
              C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
              C150632 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C4719) *
              C3525) *
         C151939) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C4047 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152072) *
              C152380 +
          (((C83864 * C152302 + C84613 * C152231) * C50892 +
            (C84614 * C152302 + C75646 * C152231) * C152205) *
               C152072 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C4047) *
              C152376 +
          (((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C4047 -
           (((C75644 + C75645) * C152231 + C85519 * C152302) * C152205 +
            (C84615 * C152231 + C75588 * C152302) * C50892) *
               C152072) *
              C152362 +
          (((C76358 * C152302 + (C75645 + C75644) * C152231) * C50892 +
            ((C76373 + C76372) * C152302 +
             (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
              C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
              C150632 * C8014 + C151913 * C8020) *
                 C152231) *
                C152205) *
               C152072 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C152302) *
                C152205 +
            (C85519 * C152231 + C75338 * C152302) * C50892) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C4047 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152072) *
               C3041 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C4047) *
               C152030) *
              C152370 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C4047) *
               C3041 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C4047 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             (C86699 * C152231 + C83867 * C152302) * C50892) *
                C152072) *
               C152030) *
              C152353 +
          (((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
               C152263 * C168 + C150632 * C156 - C73638 * C145 -
               C150632 * C157 + C151913 * C169) *
                  C152302 +
              (C82928 + C82929) * C152231) *
                 C50892 +
             ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
                C4047 -
            (((C82930 + C82931) * C152231 + C83869 * C152302) * C152205 +
             ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                 C50892) *
                C152072) *
               C3041 +
           (((C83868 * C152302 + (C82931 + C82930) * C152231) * C50892 +
             ((C74995 + C74994) * C152302 +
              (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
               C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
               C150632 * C1518 + C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                 C152205 +
             (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C152381 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152378 +
           (((C82923 + C82922) * C152302 + (C86298 + C86299) * C152231) *
                C50892 +
            (C84613 * C152302 + C87236 * C152231) * C152205) *
               C152365 -
           (((C86300 + C86301) * C152231 + C87237 * C152302) * C152205 +
            ((C86302 + C86303) * C152231 + (C86299 + C86298) * C152302) *
                C50892) *
               C152342) *
              C3041 +
          (((C83864 * C152302 + C84613 * C152231) * C50892 +
            (C84614 * C152302 + C75646 * C152231) * C152205) *
               C152378 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C152381 -
           (((C77662 + C77663) * C152231 + C84615 * C152302) * C152205 +
            (C87237 * C152231 + C84612 * C152302) * C50892) *
               C152365 +
           ((C87236 * C152302 + (C86301 + C86300) * C152231) * C50892 +
            ((C77663 + C77662) * C152302 +
             (C150639 * C9395 - C73636 * C9385 - C150639 * C9396 +
              C152263 * C9403 + C150632 * C9397 - C73638 * C9386 -
              C150632 * C9398 + C151913 * C9404) *
                 C152231) *
                C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C152068 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152075 +
            (((C82923 + C82922) * C152302 + (C86298 + C86299) * C152231) *
                 C50892 +
             (C84613 * C152302 + C87236 * C152231) * C152205) *
                C4719) *
               C3041 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152075 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C152068 -
            (((C77662 + C77663) * C152231 + C84615 * C152302) * C152205 +
             (C87237 * C152231 + C84612 * C152302) * C50892) *
                C4719) *
               C152030) *
              C152270 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + C86690 * C152231) * C152205) *
                C152075 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C152068 -
            (((C86704 + C86705) * C152231 + C86699 * C152302) * C152205 +
             ((C86976 + C86977) * C152231 + (C82927 + C82926) * C152302) *
                 C50892) *
                C4719) *
               C3041 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C152068 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             (C86699 * C152231 + C83867 * C152302) * C50892) *
                C152075 +
            ((C86690 * C152302 + (C86705 + C86704) * C152231) * C50892 +
             ((C77247 + C77246) * C152302 +
              (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
               C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
               C150632 * C9923 + C151913 * C9924) *
                  C152231) *
                 C152205) *
                C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C4047 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152072) *
               C3041 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C4047) *
               C152030) *
              C152370 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C4047) *
               C3041 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C4047 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             (C86699 * C152231 + C83867 * C152302) * C50892) *
                C152072) *
               C152030) *
              C152353 +
          (((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
               C152263 * C168 + C150632 * C156 - C73638 * C145 -
               C150632 * C157 + C151913 * C169) *
                  C152302 +
              (C82928 + C82929) * C152231) *
                 C50892 +
             ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
                C4047 -
            (((C82930 + C82931) * C152231 + C83869 * C152302) * C152205 +
             ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                 C50892) *
                C152072) *
               C3041 +
           (((C83868 * C152302 + (C82931 + C82930) * C152231) * C50892 +
             ((C74995 + C74994) * C152302 +
              (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
               C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
               C150632 * C1518 + C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                 C152205 +
             (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C4047 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152072) *
              C152380 +
          (((C83864 * C152302 + C84613 * C152231) * C50892 +
            (C84614 * C152302 + C75646 * C152231) * C152205) *
               C152072 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C4047) *
              C152376 +
          (((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C4047 -
           (((C75644 + C75645) * C152231 + C85519 * C152302) * C152205 +
            (C84615 * C152231 + C75588 * C152302) * C50892) *
               C152072) *
              C152362 +
          (((C76358 * C152302 + (C75645 + C75644) * C152231) * C50892 +
            ((C76373 + C76372) * C152302 +
             (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
              C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
              C150632 * C8014 + C151913 * C8020) *
                 C152231) *
                C152205) *
               C152072 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C152302) *
                C152205 +
            (C85519 * C152231 + C75338 * C152302) * C50892) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C151985 * C1661 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C151985 * C1662 +
           ((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C151985 * C1663 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C152302) *
                C152205 +
            ((C75643 + C75642) * C152231 + C75338 * C152302) * C50892) *
               C151985 * C152336) *
              C152270 +
          ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C1662 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C1661 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                C152205 +
            ((C74993 + C74992) * C152231 + C73985 * C152302) * C50892) *
               C151985 * C1663 +
           ((C75842 * C152302 + (C76163 + C76162) * C152231) * C50892 +
            ((C75857 + C75856) * C152302 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152231) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
                C152205) *
               C151985 * C152284 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            ((C74988 + C74989) * C152231 + (C73967 + C73966) * C152302) *
                C50892) *
               C151985 * C152030) *
              C703 +
          ((((C73972 + C73973) * C152302 + (C74990 + C74991) * C152231) *
                C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C152030 -
           (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
                C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C152284) *
              C704 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
                C152205) *
               C151985 * C152284 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                C152205 +
            ((C74996 + C74997) * C152231 + (C73979 + C73978) * C152302) *
                C50892) *
               C151985 * C152030) *
              C705 +
          ((((C74426 + C74427) * C152302 + (C83204 + C83205) * C152231) *
                C50892 +
            ((C74428 + C74429) * C152302 +
             (C150639 * C1503 - C73636 * C1487 - C150639 * C1504 +
              C152263 * C1523 + C150632 * C1866 - C73638 * C1865 -
              C150632 * C1867 + C151913 * C1868) *
                 C152231) *
                C152205) *
               C151985 * C152030 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C152302) *
                C152205 +
            ((C150632 * C551 - C73638 * C531 - C150632 * C552 + C151913 * C567 +
              C150639 * C535 - C73636 * C523 - C150639 * C536 +
              C152263 * C559) *
                 C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C152302) *
                C50892) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C2161 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C2162 +
            (((C82923 + C82922) * C152302 + (C86298 + C86299) * C152231) *
                 C50892 +
             (C84613 * C152302 + (C77665 + C77664) * C152231) * C152205) *
                C152329) *
               C152284 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C2162 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C2161 -
            (((C77662 + C77663) * C152231 + C84615 * C152302) * C152205 +
             ((C77664 + C77665) * C152231 + C84612 * C152302) * C50892) *
                C152329) *
               C152030) *
              C152270 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + C86690 * C152231) * C152205) *
                C2162 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C2161 -
            (((C86704 + C86705) * C152231 + C86699 * C152302) * C152205 +
             ((C150632 * C2407 - C73638 * C2398 - C150632 * C2408 +
               C151913 * C2422 + C150639 * C2409 - C73636 * C2399 -
               C150639 * C2410 + C152263 * C2423) *
                  C152231 +
              (C82927 + C82926) * C152302) *
                 C50892) *
                C152329) *
               C152284 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C2161 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             (C86699 * C152231 + C83867 * C152302) * C50892) *
                C2162 +
            ((C86690 * C152302 + (C86705 + C86704) * C152231) * C50892 +
             ((C77247 + C77246) * C152302 +
              (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
               C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
               C150632 * C9923 + C151913 * C9924) *
                  C152231) *
                 C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C152285 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152072) *
              C1661 +
          (((C83864 * C152302 + C84613 * C152231) * C50892 +
            (C84614 * C152302 + C75646 * C152231) * C152205) *
               C152072 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C152285) *
              C1662 +
          (((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C152285 -
           (((C75644 + C75645) * C152231 + C85519 * C152302) * C152205 +
            (C84615 * C152231 + C75588 * C152302) * C50892) *
               C152072) *
              C1663 +
          (((C76358 * C152302 + (C75645 + C75644) * C152231) * C50892 +
            ((C76373 + C76372) * C152302 +
             (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
              C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
              C150632 * C8014 + C151913 * C8020) *
                 C152231) *
                C152205) *
               C152072 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C152302) *
                C152205 +
            (C85519 * C152231 + C75338 * C152302) * C50892) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C152285 -
            (((C75639 + C75638) * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152072) *
               C152284 +
           (((C83864 * C152302 + (C75638 + C75639) * C152231) * C50892 +
             ((C74987 + C74986) * C152302 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C152285) *
               C152030) *
              C323 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + (C77249 + C77248) * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C152285) *
               C152284 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C152285 -
            (((C77246 + C77247) * C152231 + (C74993 + C74992) * C152302) *
                 C152205 +
             ((C77248 + C77249) * C152231 + C83867 * C152302) * C50892) *
                C152072) *
               C152030) *
              C324 +
          (((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
               C152263 * C168 + C150632 * C156 - C73638 * C145 -
               C150632 * C157 + C151913 * C169) *
                  C152302 +
              (C82928 + C82929) * C152231) *
                 C50892 +
             ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
                C152285 -
            (((C82930 + C82931) * C152231 + C83869 * C152302) * C152205 +
             ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                 C50892) *
                C152072) *
               C152284 +
           (((C83868 * C152302 + (C82931 + C82930) * C152231) * C50892 +
             ((C74995 + C74994) * C152302 +
              (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
               C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
               C150632 * C1518 + C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                 C152205 +
             (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C2757 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C2758 +
           (((C82923 + C82922) * C152302 + (C86298 + C86299) * C152231) *
                C50892 +
            (C84613 * C152302 + C87236 * C152231) * C152205) *
               C2759 -
           (((C86300 + C86301) * C152231 + C87237 * C152302) * C152205 +
            ((C86302 + C86303) * C152231 + (C86299 + C86298) * C152302) *
                C50892) *
               C152342) *
              C152284 +
          (((C83864 * C152302 + C84613 * C152231) * C50892 +
            (C84614 * C152302 + C75646 * C152231) * C152205) *
               C2758 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C2757 -
           (((C77662 + C77663) * C152231 + C84615 * C152302) * C152205 +
            (C87237 * C152231 + C84612 * C152302) * C50892) *
               C2759 +
           ((C87236 * C152302 + (C86301 + C86300) * C152231) * C50892 +
            ((C77663 + C77662) * C152302 +
             (C150639 * C9395 - C73636 * C9385 - C150639 * C9396 +
              C152263 * C9403 + C150632 * C9397 - C73638 * C9386 -
              C150632 * C9398 + C151913 * C9404) *
                 C152231) *
                C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                 C152263 * C166 + C150632 * C152 - C73638 * C143 -
                 C150632 * C153 + C151913 * C167) *
                    C152302 +
                (C150639 * C541 - C73636 * C526 - C150639 * C542 +
                 C152263 * C562 + C150632 * C539 - C73638 * C525 -
                 C150632 * C540 + C151913 * C561) *
                    C152231) *
                   C50892 +
               ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
                   C152205) *
                  C151985 * C151967 * C129 -
              (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
                   C152205 +
               ((C150632 * C537 - C73638 * C524 - C150632 * C538 +
                 C151913 * C560 + C150639 * C539 - C73636 * C525 -
                 C150639 * C540 + C152263 * C561) *
                    C152231 +
                (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                 C151913 * C168 + C150639 * C152 - C73636 * C143 -
                 C150639 * C153 + C152263 * C167) *
                    C152302) *
                   C50892) *
                  C151985 * C151967 * C130 +
              (((C150639 * C154 - C73636 * C144 - C150639 * C155 +
                 C152263 * C168 + C150632 * C156 - C73638 * C145 -
                 C150632 * C157 + C151913 * C169) *
                    C152302 +
                (C150639 * C537 - C73636 * C524 - C150639 * C538 +
                 C152263 * C560 + C150632 * C535 - C73638 * C523 -
                 C150632 * C536 + C151913 * C559) *
                    C152231) *
                   C50892 +
               ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
                   C152205) *
                  C151985 * C151967 * C131 -
              (((C150632 * C1055 - C73638 * C1045 - C150632 * C1056 +
                 C151913 * C1063 + C150639 * C1053 - C73636 * C1044 -
                 C150639 * C1054 + C152263 * C1062) *
                    C152231 +
                (C74427 + C74426) * C152302) *
                   C152205 +
               ((C150632 * C551 - C73638 * C531 - C150632 * C552 +
                 C151913 * C567 + C150639 * C535 - C73636 * C523 -
                 C150639 * C536 + C152263 * C559) *
                    C152231 +
                (C150632 * C158 - C73638 * C146 - C150632 * C159 +
                 C151913 * C170 + C150639 * C156 - C73636 * C145 -
                 C150639 * C157 + C152263 * C169) *
                    C152302) *
                   C50892) *
                  C151985 * C151967 * C132 +
              (((C150639 * C158 - C73636 * C146 - C150639 * C159 +
                 C152263 * C170 + C150632 * C160 - C73638 * C147 -
                 C150632 * C161 + C151913 * C171) *
                    C152302 +
                (C150639 * C551 - C73636 * C531 - C150639 * C552 +
                 C152263 * C567 + C150632 * C555 - C73638 * C533 -
                 C150632 * C556 + C151913 * C569) *
                    C152231) *
                   C50892 +
               ((C150639 * C354 - C73636 * C334 - C150639 * C355 +
                 C152263 * C370 + C150632 * C358 - C73638 * C336 -
                 C150632 * C359 + C151913 * C372) *
                    C152302 +
                (C150639 * C1055 - C73636 * C1045 - C150639 * C1056 +
                 C152263 * C1063 + C150632 * C1057 - C73638 * C1046 -
                 C150632 * C1058 + C151913 * C1064) *
                    C152231) *
                   C152205) *
                  C151985 * C151967 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                  C152263 * C166 + C150632 * C152 - C73638 * C143 -
                  C150632 * C153 + C151913 * C167) *
                     C152302 +
                 (C150639 * C541 - C73636 * C526 - C150639 * C542 +
                  C152263 * C562 + C150632 * C539 - C73638 * C525 -
                  C150632 * C540 + C151913 * C561) *
                     C152231) *
                    C50892 +
                ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
                    C152205) *
                   C151985 * C152373 -
               ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
                ((C74988 + C74989) * C152231 + (C73967 + C73966) * C152302) *
                    C50892) *
                   C151985 * C152357 +
               ((C73984 * C152302 + (C74987 + C74986) * C152231) * C50892 +
                ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
                   C151985 * C152326) *
                  C323 +
              ((((C73972 + C73973) * C152302 + (C74990 + C74991) * C152231) *
                    C50892 +
                ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                   C151985 * C152357 -
               (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
                    C152205 +
                ((C150632 * C537 - C73638 * C524 - C150632 * C538 +
                  C151913 * C560 + C150639 * C539 - C73636 * C525 -
                  C150639 * C540 + C152263 * C561) *
                     C152231 +
                 (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                  C151913 * C168 + C150639 * C152 - C73636 * C143 -
                  C150639 * C153 + C152263 * C167) *
                     C152302) *
                    C50892) *
                   C151985 * C152373 -
               (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                    C152205 +
                ((C74993 + C74992) * C152231 + C73985 * C152302) * C50892) *
                   C151985 * C152326) *
                  C324 +
              ((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
                  C152263 * C168 + C150632 * C156 - C73638 * C145 -
                  C150632 * C157 + C151913 * C169) *
                     C152302 +
                 (C150639 * C537 - C73636 * C524 - C150639 * C538 +
                  C152263 * C560 + C150632 * C535 - C73638 * C523 -
                  C150632 * C536 + C151913 * C559) *
                     C152231) *
                    C50892 +
                ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
                    C152205) *
                   C151985 * C152373 -
               (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                    C152205 +
                ((C74996 + C74997) * C152231 + (C73979 + C73978) * C152302) *
                    C50892) *
                   C151985 * C152357 +
               ((C73986 * C152302 + (C74995 + C74994) * C152231) * C50892 +
                ((C73983 + C73982) * C152302 +
                 (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
                  C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
                  C150632 * C2010 + C151913 * C2014) *
                     C152231) *
                    C152205) *
                   C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
                C152205) *
               C152374 -
           (((C75639 + C75638) * C152231 + (C74988 + C74989) * C152302) *
                C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152359 +
           (((C82923 + C82922) * C152302 +
             (C150639 * C2411 - C73636 * C2400 - C150639 * C2412 +
              C152263 * C2424 + C150632 * C2409 - C73638 * C2399 -
              C150632 * C2410 + C151913 * C2423) *
                 C152231) *
                C50892 +
            ((C75638 + C75639) * C152302 + (C77665 + C77664) * C152231) *
                C152205) *
               C152329) *
              C151967 * C323 +
          ((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                C50892 +
            ((C74990 + C74991) * C152302 + (C77249 + C77248) * C152231) *
                C152205) *
               C152359 -
           (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
                C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C152374 -
           (((C150632 * C2903 - C73638 * C2897 - C150632 * C2904 +
              C151913 * C2909 + C150639 * C2901 - C73636 * C2896 -
              C150639 * C2902 + C152263 * C2908) *
                 C152231 +
             (C77248 + C77249) * C152302) *
                C152205 +
            ((C150632 * C2407 - C73638 * C2398 - C150632 * C2408 +
              C151913 * C2422 + C150639 * C2409 - C73636 * C2399 -
              C150639 * C2410 + C152263 * C2423) *
                 C152231 +
             (C82927 + C82926) * C152302) *
                C50892) *
               C152329) *
              C151967 * C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
                C152205) *
               C152374 -
           (((C82930 + C82931) * C152231 + (C74996 + C74997) * C152302) *
                C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                C50892) *
               C152359 +
           (((C82933 + C82932) * C152302 +
             (C150639 * C2407 - C73636 * C2398 - C150639 * C2408 +
              C152263 * C2422 + C150632 * C2405 - C73638 * C2397 -
              C150632 * C2406 + C151913 * C2421) *
                 C152231) *
                C50892 +
            ((C82931 + C82930) * C152302 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C151985 * C1211 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C151985 * C1212 +
           ((C73984 * C152302 + (C74987 + C74986) * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C152370 +
          ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C1212 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C1211 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                C152205 +
            ((C74993 + C74992) * C152231 + C73985 * C152302) * C50892) *
               C151985 * C152326) *
              C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
               C151985 * C1211 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
               C151985 * C1212 +
           ((C73986 * C152302 + (C74995 + C74994) * C152231) * C50892 +
            ((C73983 + C73982) * C152302 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152302 +
            (C82920 + C82921) * C152231) *
               C50892 +
           ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
              C151985 * C1299 -
          ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
           (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
              C151985 * C1300 +
          ((C73984 * C152302 + (C74987 + C74986) * C152231) * C50892 +
           ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
              C151985 * C1301 -
          (((C76372 + C76373) * C152231 + (C75365 + C75364) * C152302) *
               C152205 +
           ((C75643 + C75642) * C152231 + C75338 * C152302) * C50892) *
              C151985 * C1302 +
          ((C75368 * C152302 + (C76373 + C76372) * C152231) * C50892 +
           ((C75367 + C75366) * C152302 +
            (C150639 * C8801 - C73636 * C8799 - C150639 * C8802 +
             C152263 * C8805 + C150632 * C8803 - C73638 * C8800 -
             C150632 * C8804 + C151913 * C8806) *
                C152231) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C152374 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152359 +
           (((C82923 + C82922) * C152302 +
             (C150639 * C2411 - C73636 * C2400 - C150639 * C2412 +
              C152263 * C2424 + C150632 * C2409 - C73638 * C2399 -
              C150632 * C2410 + C151913 * C2423) *
                 C152231) *
                C50892 +
            (C84613 * C152302 + (C77665 + C77664) * C152231) * C152205) *
               C152329) *
              C1211 +
          (((C83864 * C152302 + C84613 * C152231) * C50892 +
            (C84614 * C152302 + C75646 * C152231) * C152205) *
               C152359 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C152374 -
           (((C77662 + C77663) * C152231 + C84615 * C152302) * C152205 +
            ((C77664 + C77665) * C152231 + C84612 * C152302) * C50892) *
               C152329) *
              C1212 +
          (((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C152374 -
           (((C75644 + C75645) * C152231 + (C75643 + C75642) * C152302) *
                C152205 +
            (C84615 * C152231 + C75588 * C152302) * C50892) *
               C152359 +
           ((C75646 * C152302 + (C77663 + C77662) * C152231) * C50892 +
            ((C75645 + C75644) * C152302 +
             (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
              C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
              C150632 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C2161 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C2162 +
           (((C82923 + C82922) * C152302 +
             (C150639 * C2411 - C73636 * C2400 - C150639 * C2412 +
              C152263 * C2424 + C150632 * C2409 - C73638 * C2399 -
              C150632 * C2410 + C151913 * C2423) *
                 C152231) *
                C50892 +
            (C84613 * C152302 + (C77665 + C77664) * C152231) * C152205) *
               C152329) *
              C151967 * C152370 +
          ((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                C50892 +
            (C83866 * C152302 + (C77249 + C77248) * C152231) * C152205) *
               C2162 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C2161 -
           (((C150632 * C2903 - C73638 * C2897 - C150632 * C2904 +
              C151913 * C2909 + C150639 * C2901 - C73636 * C2896 -
              C150639 * C2902 + C152263 * C2908) *
                 C152231 +
             (C77248 + C77249) * C152302) *
                C152205 +
            ((C150632 * C2407 - C73638 * C2398 - C150632 * C2408 +
              C151913 * C2422 + C150639 * C2409 - C73636 * C2399 -
              C150639 * C2410 + C152263 * C2423) *
                 C152231 +
             (C82927 + C82926) * C152302) *
                C50892) *
               C152329) *
              C151967 * C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
               C2161 -
           (((C82930 + C82931) * C152231 + C83869 * C152302) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                C50892) *
               C2162 +
           (((C82933 + C82932) * C152302 +
             (C150639 * C2407 - C73636 * C2398 - C150639 * C2408 +
              C152263 * C2422 + C150632 * C2405 - C73638 * C2397 -
              C150632 * C2406 + C151913 * C2421) *
                 C152231) *
                C50892 +
            ((C82931 + C82930) * C152302 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C2161 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C2162 +
           (((C82923 + C82922) * C152302 +
             (C150639 * C2411 - C73636 * C2400 - C150639 * C2412 +
              C152263 * C2424 + C150632 * C2409 - C73638 * C2399 -
              C150632 * C2410 + C151913 * C2423) *
                 C152231) *
                C50892 +
            (C84613 * C152302 + (C77665 + C77664) * C152231) * C152205) *
               C152329) *
              C152373 +
          (((C83864 * C152302 + C84613 * C152231) * C50892 +
            (C84614 * C152302 + C75646 * C152231) * C152205) *
               C2162 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C2161 -
           (((C77662 + C77663) * C152231 + C84615 * C152302) * C152205 +
            ((C77664 + C77665) * C152231 + C84612 * C152302) * C50892) *
               C152329) *
              C152357 +
          (((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C2161 -
           (((C75644 + C75645) * C152231 + C85519 * C152302) * C152205 +
            (C84615 * C152231 + C75588 * C152302) * C50892) *
               C2162 +
           ((C75646 * C152302 + (C77663 + C77662) * C152231) * C50892 +
            ((C75645 + C75644) * C152302 +
             (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
              C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
              C150632 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152302 +
            (C82920 + C82921) * C152231) *
               C50892 +
           ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
              C2392 -
          ((C84612 * C152231 + C83865 * C152302) * C152205 +
           ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
               C50892) *
              C2393 +
          (((C82923 + C82922) * C152302 + (C86298 + C86299) * C152231) *
               C50892 +
           (C84613 * C152302 + (C77665 + C77664) * C152231) * C152205) *
              C2394 -
          (((C86300 + C86301) * C152231 + (C77664 + C77665) * C152302) *
               C152205 +
           ((C86302 + C86303) * C152231 + (C86299 + C86298) * C152302) *
               C50892) *
              C2395 +
          (((C86303 + C86302) * C152302 +
            (C150639 * C17794 - C73636 * C17789 - C150639 * C17795 +
             C152263 * C17801 + C150632 * C17792 - C73638 * C17788 -
             C150632 * C17793 + C151913 * C17800) *
                C152231) *
               C50892 +
           ((C86301 + C86300) * C152302 +
            (C150639 * C18552 - C73636 * C18550 - C150639 * C18553 +
             C152263 * C18556 + C150632 * C18554 - C73638 * C18551 -
             C150632 * C18555 + C151913 * C18557) *
                C152231) *
               C152205) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C152285 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152072) *
               C1211 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C152285) *
               C1212 +
           (((C73984 * C152302 + C84614 * C152231) * C50892 +
             ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
                C152285 -
            (((C75644 + C75645) * C152231 + (C75643 + C75642) * C152302) *
                 C152205 +
             (C84615 * C152231 + C75588 * C152302) * C50892) *
                C152072) *
               C152326) *
              C152270 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + (C77249 + C77248) * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C152285) *
               C1211 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C152285 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             ((C77248 + C77249) * C152231 + C83867 * C152302) * C50892) *
                C152072) *
               C1212 +
           (((C76148 * C152302 + (C77247 + C77246) * C152231) * C50892 +
             ((C76163 + C76162) * C152302 +
              (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
               C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
               C150632 * C9697 + C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                 C152205 +
             (C85260 * C152231 + C73985 * C152302) * C50892) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
                C152205) *
               C152285 -
           (((C75639 + C75638) * C152231 + (C74988 + C74989) * C152302) *
                C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152072) *
              C151967 * C703 +
          ((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                C50892 +
            ((C74990 + C74991) * C152302 + (C77249 + C77248) * C152231) *
                C152205) *
               C152072 -
           (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
                C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C152285) *
              C151967 * C704 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
                C152205) *
               C152285 -
           (((C82930 + C82931) * C152231 + (C74996 + C74997) * C152302) *
                C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                C50892) *
               C152072) *
              C151967 * C705 +
          ((((C83476 + C83477) * C152302 +
             (C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566 +
              C150632 * C553 - C73638 * C532 - C150632 * C554 +
              C151913 * C568) *
                 C152231) *
                C50892 +
            ((C83204 + C83205) * C152302 +
             (C150639 * C1495 - C73636 * C1483 - C150639 * C1496 +
              C152263 * C1519 + C150632 * C2624 - C73638 * C2623 -
              C150632 * C2625 + C151913 * C2626) *
                 C152231) *
                C152205) *
               C152072 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C152302) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C152302) *
                C50892) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C2757 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C2758 +
           (((C82923 + C82922) * C152302 + (C86298 + C86299) * C152231) *
                C50892 +
            (C84613 * C152302 + (C77665 + C77664) * C152231) * C152205) *
               C2759 -
           (((C86300 + C86301) * C152231 + (C77664 + C77665) * C152302) *
                C152205 +
            ((C86302 + C86303) * C152231 + (C86299 + C86298) * C152302) *
                C50892) *
               C152342) *
              C151967 * C152270 +
          ((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                C50892 +
            (C83866 * C152302 + C86690 * C152231) * C152205) *
               C2758 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C2757 -
           (((C86704 + C86705) * C152231 + C86699 * C152302) * C152205 +
            ((C86976 + C86977) * C152231 + (C82927 + C82926) * C152302) *
                C50892) *
               C2759 +
           (((C86977 + C86976) * C152302 +
             (C150639 * C2415 - C73636 * C2402 - C150639 * C2416 +
              C152263 * C2426 + C150632 * C2417 - C73638 * C2403 -
              C150632 * C2418 + C151913 * C2427) *
                 C152231) *
                C50892 +
            ((C86705 + C86704) * C152302 +
             (C150639 * C9393 - C73636 * C9384 - C150639 * C9394 +
              C152263 * C9402 + C150632 * C18125 - C73638 * C18124 -
              C150632 * C18126 + C151913 * C18127) *
                 C152231) *
                C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562 +
              C150632 * C539 - C73638 * C525 - C150632 * C540 +
              C151913 * C561) *
                 C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
                C152205) *
               C151985 * C152373 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            ((C74988 + C74989) * C152231 + (C73967 + C73966) * C152302) *
                C50892) *
               C151985 * C152357 +
           ((C73984 * C152302 + (C74987 + C74986) * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C323 +
          ((((C73972 + C73973) * C152302 + (C74990 + C74991) * C152231) *
                C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C152357 -
           (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
                C152205 +
            ((C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560 +
              C150639 * C539 - C73636 * C525 - C150639 * C540 +
              C152263 * C561) *
                 C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C152373 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                C152205 +
            ((C74993 + C74992) * C152231 + C73985 * C152302) * C50892) *
               C151985 * C152326) *
              C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560 +
              C150632 * C535 - C73638 * C523 - C150632 * C536 +
              C151913 * C559) *
                 C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
                C152205) *
               C151985 * C152373 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                C152205 +
            ((C74996 + C74997) * C152231 + (C73979 + C73978) * C152302) *
                C50892) *
               C151985 * C152357 +
           ((C73986 * C152302 + (C74995 + C74994) * C152231) * C50892 +
            ((C73983 + C73982) * C152302 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152302 +
            (C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562 +
             C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561) *
                C152231) *
               C50892 +
           ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
               C152205) *
              C151985 * C151967 * C129 -
          (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
               C152205 +
           ((C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560 +
             C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561) *
                C152231 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152302) *
               C50892) *
              C151985 * C151967 * C130 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152302 +
            (C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560 +
             C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559) *
                C152231) *
               C50892 +
           ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
               C152205) *
              C151985 * C151967 * C131 -
          (((C150632 * C1055 - C73638 * C1045 - C150632 * C1056 +
             C151913 * C1063 + C150639 * C1053 - C73636 * C1044 -
             C150639 * C1054 + C152263 * C1062) *
                C152231 +
            (C74427 + C74426) * C152302) *
               C152205 +
           ((C150632 * C551 - C73638 * C531 - C150632 * C552 + C151913 * C567 +
             C150639 * C535 - C73636 * C523 - C150639 * C536 + C152263 * C559) *
                C152231 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152302) *
               C50892) *
              C151985 * C151967 * C132 +
          (((C150639 * C158 - C73636 * C146 - C150639 * C159 + C152263 * C170 +
             C150632 * C160 - C73638 * C147 - C150632 * C161 + C151913 * C171) *
                C152302 +
            (C150639 * C551 - C73636 * C531 - C150639 * C552 + C152263 * C567 +
             C150632 * C555 - C73638 * C533 - C150632 * C556 + C151913 * C569) *
                C152231) *
               C50892 +
           ((C150639 * C354 - C73636 * C334 - C150639 * C355 + C152263 * C370 +
             C150632 * C358 - C73638 * C336 - C150632 * C359 + C151913 * C372) *
                C152302 +
            (C150639 * C1055 - C73636 * C1045 - C150639 * C1056 +
             C152263 * C1063 + C150632 * C1057 - C73638 * C1046 -
             C150632 * C1058 + C151913 * C1064) *
                C152231) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C151985 * C1211 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C151985 * C1212 +
           ((C73984 * C152302 + (C74987 + C74986) * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C152370 +
          ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C1212 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C1211 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                C152205 +
            ((C74993 + C74992) * C152231 + C73985 * C152302) * C50892) *
               C151985 * C152326) *
              C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
               C151985 * C1211 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
               C151985 * C1212 +
           ((C73986 * C152302 + (C74995 + C74994) * C152231) * C50892 +
            ((C73983 + C73982) * C152302 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152302 +
            (C82920 + C82921) * C152231) *
               C50892 +
           ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
              C151985 * C1299 -
          ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
           (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
              C151985 * C1300 +
          ((C73984 * C152302 + (C74987 + C74986) * C152231) * C50892 +
           ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
              C151985 * C1301 -
          (((C76372 + C76373) * C152231 + (C75365 + C75364) * C152302) *
               C152205 +
           ((C75643 + C75642) * C152231 + C75338 * C152302) * C50892) *
              C151985 * C1302 +
          ((C75368 * C152302 + (C76373 + C76372) * C152231) * C50892 +
           ((C75367 + C75366) * C152302 +
            (C150639 * C8801 - C73636 * C8799 - C150639 * C8802 +
             C152263 * C8805 + C150632 * C8803 - C73638 * C8800 -
             C150632 * C8804 + C151913 * C8806) *
                C152231) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C2161 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C2162 +
           (((C82923 + C82922) * C152302 +
             (C150639 * C2411 - C73636 * C2400 - C150639 * C2412 +
              C152263 * C2424 + C150632 * C2409 - C73638 * C2399 -
              C150632 * C2410 + C151913 * C2423) *
                 C152231) *
                C50892 +
            (C84613 * C152302 + (C77665 + C77664) * C152231) * C152205) *
               C152329) *
              C151967 * C152370 +
          ((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                C50892 +
            (C83866 * C152302 + (C77249 + C77248) * C152231) * C152205) *
               C2162 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C2161 -
           (((C150632 * C2903 - C73638 * C2897 - C150632 * C2904 +
              C151913 * C2909 + C150639 * C2901 - C73636 * C2896 -
              C150639 * C2902 + C152263 * C2908) *
                 C152231 +
             (C77248 + C77249) * C152302) *
                C152205 +
            ((C150632 * C2407 - C73638 * C2398 - C150632 * C2408 +
              C151913 * C2422 + C150639 * C2409 - C73636 * C2399 -
              C150639 * C2410 + C152263 * C2423) *
                 C152231 +
             (C82927 + C82926) * C152302) *
                C50892) *
               C152329) *
              C151967 * C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
               C2161 -
           (((C82930 + C82931) * C152231 + C83869 * C152302) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                C50892) *
               C2162 +
           (((C82933 + C82932) * C152302 +
             (C150639 * C2407 - C73636 * C2398 - C150639 * C2408 +
              C152263 * C2422 + C150632 * C2405 - C73638 * C2397 -
              C150632 * C2406 + C151913 * C2421) *
                 C152231) *
                C50892 +
            ((C82931 + C82930) * C152302 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C2161 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C2162 +
           (((C82923 + C82922) * C152302 +
             (C150639 * C2411 - C73636 * C2400 - C150639 * C2412 +
              C152263 * C2424 + C150632 * C2409 - C73638 * C2399 -
              C150632 * C2410 + C151913 * C2423) *
                 C152231) *
                C50892 +
            (C84613 * C152302 + (C77665 + C77664) * C152231) * C152205) *
               C152329) *
              C152373 +
          (((C83864 * C152302 + C84613 * C152231) * C50892 +
            (C84614 * C152302 + C75646 * C152231) * C152205) *
               C2162 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C2161 -
           (((C77662 + C77663) * C152231 + C84615 * C152302) * C152205 +
            ((C77664 + C77665) * C152231 + C84612 * C152302) * C50892) *
               C152329) *
              C152357 +
          (((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C2161 -
           (((C75644 + C75645) * C152231 + C85519 * C152302) * C152205 +
            (C84615 * C152231 + C75588 * C152302) * C50892) *
               C2162 +
           ((C75646 * C152302 + (C77663 + C77662) * C152231) * C50892 +
            ((C75645 + C75644) * C152302 +
             (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
              C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
              C150632 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C4047 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152072) *
               C152284 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C4047) *
               C152030) *
              C151944 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C4047) *
               C152284 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C4047 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             (C86699 * C152231 + C83867 * C152302) * C50892) *
                C152072) *
               C152030) *
              C151953 +
          (((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
               C152263 * C168 + C150632 * C156 - C73638 * C145 -
               C150632 * C157 + C151913 * C169) *
                  C152302 +
              (C82928 + C82929) * C152231) *
                 C50892 +
             ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
                C4047 -
            (((C82930 + C82931) * C152231 + C83869 * C152302) * C152205 +
             ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                 C50892) *
                C152072) *
               C152284 +
           (((C83868 * C152302 + (C82931 + C82930) * C152231) * C50892 +
             ((C74995 + C74994) * C152302 +
              (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
               C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
               C150632 * C1518 + C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                 C152205 +
             (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
                C4047) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C152068 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152075 +
            (((C82923 + C82922) * C152302 + (C86298 + C86299) * C152231) *
                 C50892 +
             (C84613 * C152302 + C87236 * C152231) * C152205) *
                C4719) *
               C152284 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152075 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C152068 -
            (((C77662 + C77663) * C152231 + C84615 * C152302) * C152205 +
             (C87237 * C152231 + C84612 * C152302) * C50892) *
                C4719) *
               C152030) *
              C3181 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + C86690 * C152231) * C152205) *
                C152075 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C152068 -
            (((C86704 + C86705) * C152231 + C86699 * C152302) * C152205 +
             ((C86976 + C86977) * C152231 + (C82927 + C82926) * C152302) *
                 C50892) *
                C4719) *
               C152284 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C152068 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             (C86699 * C152231 + C83867 * C152302) * C50892) *
                C152075 +
            ((C86690 * C152302 + (C86705 + C86704) * C152231) * C50892 +
             ((C77247 + C77246) * C152302 +
              (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
               C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
               C150632 * C9923 + C151913 * C9924) *
                  C152231) *
                 C152205) *
                C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C4047 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152072) *
               C152373 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C4047) *
               C152357 +
           (((C73984 * C152302 + C84614 * C152231) * C50892 +
             ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
                C4047 -
            (((C75644 + C75645) * C152231 + C85519 * C152302) * C152205 +
             (C84615 * C152231 + C75588 * C152302) * C50892) *
                C152072) *
               C152326) *
              C3181 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C4047) *
               C152373 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C4047 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             (C86699 * C152231 + C83867 * C152302) * C50892) *
                C152072) *
               C152357 +
           (((C76148 * C152302 + (C77247 + C77246) * C152231) * C50892 +
             ((C76163 + C76162) * C152302 +
              (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
               C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
               C150632 * C9697 + C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                 C152205 +
             (C85260 * C152231 + C73985 * C152302) * C50892) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C4047 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152072) *
              C151967 * C152379 +
          ((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                C50892 +
            (C83866 * C152302 + C86690 * C152231) * C152205) *
               C152072 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C4047) *
              C151967 * C152372 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
               C4047 -
           (((C82930 + C82931) * C152231 + C83869 * C152302) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                C50892) *
               C152072) *
              C151967 * C152355 +
          ((((C83476 + C83477) * C152302 +
             (C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566 +
              C150632 * C553 - C73638 * C532 - C150632 * C554 +
              C151913 * C568) *
                 C152231) *
                C50892 +
            ((C83204 + C83205) * C152302 +
             (C150639 * C1495 - C73636 * C1483 - C150639 * C1496 +
              C152263 * C1519 + C150632 * C2624 - C73638 * C2623 -
              C150632 * C2625 + C151913 * C2626) *
                 C152231) *
                C152205) *
               C152072 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C152302) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C152302) *
                C50892) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C152381 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152378 +
           (((C82923 + C82922) * C152302 + (C86298 + C86299) * C152231) *
                C50892 +
            (C84613 * C152302 + C87236 * C152231) * C152205) *
               C152365 -
           (((C86300 + C86301) * C152231 + C87237 * C152302) * C152205 +
            ((C86302 + C86303) * C152231 + (C86299 + C86298) * C152302) *
                C50892) *
               C152342) *
              C151967 * C3181 +
          ((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                C50892 +
            (C83866 * C152302 + C86690 * C152231) * C152205) *
               C152378 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C152381 -
           (((C86704 + C86705) * C152231 + C86699 * C152302) * C152205 +
            ((C86976 + C86977) * C152231 + (C82927 + C82926) * C152302) *
                C50892) *
               C152365 +
           (((C86977 + C86976) * C152302 +
             (C150639 * C2415 - C73636 * C2402 - C150639 * C2416 +
              C152263 * C2426 + C150632 * C2417 - C73638 * C2403 -
              C150632 * C2418 + C151913 * C2427) *
                 C152231) *
                C50892 +
            ((C86705 + C86704) * C152302 +
             (C150639 * C9393 - C73636 * C9384 - C150639 * C9394 +
              C152263 * C9402 + C150632 * C18125 - C73638 * C18124 -
              C150632 * C18126 + C151913 * C18127) *
                 C152231) *
                C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C152068 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152075 +
           (((C82923 + C82922) * C152302 + (C86298 + C86299) * C152231) *
                C50892 +
            (C84613 * C152302 + C87236 * C152231) * C152205) *
               C4719) *
              C151967 * C151944 +
          ((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                C50892 +
            (C83866 * C152302 + C86690 * C152231) * C152205) *
               C152075 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C152068 -
           (((C86704 + C86705) * C152231 + C86699 * C152302) * C152205 +
            ((C86976 + C86977) * C152231 + (C82927 + C82926) * C152302) *
                C50892) *
               C4719) *
              C151967 * C151953 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
               C152068 -
           (((C82930 + C82931) * C152231 + C83869 * C152302) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                C50892) *
               C152075 +
           (((C82933 + C82932) * C152302 +
             (C150639 * C2407 - C73636 * C2398 - C150639 * C2408 +
              C152263 * C2422 + C150632 * C2405 - C73638 * C2397 -
              C150632 * C2406 + C151913 * C2421) *
                 C152231) *
                C50892 +
            ((C82931 + C82930) * C152302 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C4719) *
              C151967 * C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C4047 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152072) *
              C151967 * C152379 +
          ((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                C50892 +
            (C83866 * C152302 + C86690 * C152231) * C152205) *
               C152072 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C4047) *
              C151967 * C152372 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
               C4047 -
           (((C82930 + C82931) * C152231 + C83869 * C152302) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                C50892) *
               C152072) *
              C151967 * C152355 +
          ((((C83476 + C83477) * C152302 +
             (C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566 +
              C150632 * C553 - C73638 * C532 - C150632 * C554 +
              C151913 * C568) *
                 C152231) *
                C50892 +
            ((C83204 + C83205) * C152302 +
             (C150639 * C1495 - C73636 * C1483 - C150639 * C1496 +
              C152263 * C1519 + C150632 * C2624 - C73638 * C2623 -
              C150632 * C2625 + C151913 * C2626) *
                 C152231) *
                C152205) *
               C152072 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C152302) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C152302) *
                C50892) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C4047 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152072) *
               C152373 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C4047) *
               C152357 +
           (((C73984 * C152302 + C84614 * C152231) * C50892 +
             ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
                C4047 -
            (((C75644 + C75645) * C152231 + C85519 * C152302) * C152205 +
             (C84615 * C152231 + C75588 * C152302) * C50892) *
                C152072) *
               C152326) *
              C3181 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C4047) *
               C152373 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C4047 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             (C86699 * C152231 + C83867 * C152302) * C50892) *
                C152072) *
               C152357 +
           (((C76148 * C152302 + (C77247 + C77246) * C152231) * C50892 +
             ((C76163 + C76162) * C152302 +
              (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
               C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
               C150632 * C9697 + C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                 C152205 +
             (C85260 * C152231 + C73985 * C152302) * C50892) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
                C152205) *
               C151985 * C152284 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            ((C74988 + C74989) * C152231 + (C73967 + C73966) * C152302) *
                C50892) *
               C151985 * C152030) *
              C703 +
          ((((C73972 + C73973) * C152302 + (C74990 + C74991) * C152231) *
                C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C152030 -
           (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
                C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C152284) *
              C704 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
                C152205) *
               C151985 * C152284 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                C152205 +
            ((C74996 + C74997) * C152231 + (C73979 + C73978) * C152302) *
                C50892) *
               C151985 * C152030) *
              C705 +
          ((((C74426 + C74427) * C152302 + (C83204 + C83205) * C152231) *
                C50892 +
            ((C74428 + C74429) * C152302 +
             (C150639 * C1503 - C73636 * C1487 - C150639 * C1504 +
              C152263 * C1523 + C150632 * C1866 - C73638 * C1865 -
              C150632 * C1867 + C151913 * C1868) *
                 C152231) *
                C152205) *
               C151985 * C152030 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C152302) *
                C152205 +
            ((C150632 * C551 - C73638 * C531 - C150632 * C552 + C151913 * C567 +
              C150639 * C535 - C73636 * C523 - C150639 * C536 +
              C152263 * C559) *
                 C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C152302) *
                C50892) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C151985 * C1661 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C151985 * C1662 +
           ((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C151985 * C1663 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C152302) *
                C152205 +
            ((C75643 + C75642) * C152231 + C75338 * C152302) * C50892) *
               C151985 * C152336) *
              C152270 +
          ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C1662 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C1661 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                C152205 +
            ((C74993 + C74992) * C152231 + C73985 * C152302) * C50892) *
               C151985 * C1663 +
           ((C75842 * C152302 + (C76163 + C76162) * C152231) * C50892 +
            ((C75857 + C75856) * C152302 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152231) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C152285 -
            (((C75639 + C75638) * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152072) *
               C152284 +
           (((C83864 * C152302 + (C75638 + C75639) * C152231) * C50892 +
             ((C74987 + C74986) * C152302 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C152285) *
               C152030) *
              C323 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + (C77249 + C77248) * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C152285) *
               C152284 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C152285 -
            (((C77246 + C77247) * C152231 + (C74993 + C74992) * C152302) *
                 C152205 +
             ((C77248 + C77249) * C152231 + C83867 * C152302) * C50892) *
                C152072) *
               C152030) *
              C324 +
          (((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
               C152263 * C168 + C150632 * C156 - C73638 * C145 -
               C150632 * C157 + C151913 * C169) *
                  C152302 +
              (C82928 + C82929) * C152231) *
                 C50892 +
             ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
                C152285 -
            (((C82930 + C82931) * C152231 + C83869 * C152302) * C152205 +
             ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                 C50892) *
                C152072) *
               C152284 +
           (((C83868 * C152302 + (C82931 + C82930) * C152231) * C50892 +
             ((C74995 + C74994) * C152302 +
              (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
               C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
               C150632 * C1518 + C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                 C152205 +
             (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C152285 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152072) *
              C1661 +
          (((C83864 * C152302 + C84613 * C152231) * C50892 +
            (C84614 * C152302 + C75646 * C152231) * C152205) *
               C152072 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C152285) *
              C1662 +
          (((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C152285 -
           (((C75644 + C75645) * C152231 + C85519 * C152302) * C152205 +
            (C84615 * C152231 + C75588 * C152302) * C50892) *
               C152072) *
              C1663 +
          (((C76358 * C152302 + (C75645 + C75644) * C152231) * C50892 +
            ((C76373 + C76372) * C152302 +
             (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
              C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
              C150632 * C8014 + C151913 * C8020) *
                 C152231) *
                C152205) *
               C152072 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C152302) *
                C152205 +
            (C85519 * C152231 + C75338 * C152302) * C50892) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562 +
              C150632 * C539 - C73638 * C525 - C150632 * C540 +
              C151913 * C561) *
                 C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
                C152205) *
               C151985 * C152373 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            ((C74988 + C74989) * C152231 + (C73967 + C73966) * C152302) *
                C50892) *
               C151985 * C152357 +
           ((C73984 * C152302 + (C74987 + C74986) * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C323 +
          ((((C73972 + C73973) * C152302 + (C74990 + C74991) * C152231) *
                C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C152357 -
           (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
                C152205 +
            ((C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560 +
              C150639 * C539 - C73636 * C525 - C150639 * C540 +
              C152263 * C561) *
                 C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C152373 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                C152205 +
            ((C74993 + C74992) * C152231 + C73985 * C152302) * C50892) *
               C151985 * C152326) *
              C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560 +
              C150632 * C535 - C73638 * C523 - C150632 * C536 +
              C151913 * C559) *
                 C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
                C152205) *
               C151985 * C152373 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                C152205 +
            ((C74996 + C74997) * C152231 + (C73979 + C73978) * C152302) *
                C50892) *
               C151985 * C152357 +
           ((C73986 * C152302 + (C74995 + C74994) * C152231) * C50892 +
            ((C73983 + C73982) * C152302 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152302 +
            (C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562 +
             C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561) *
                C152231) *
               C50892 +
           ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
               C152205) *
              C151985 * C151967 * C129 -
          (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
               C152205 +
           ((C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560 +
             C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561) *
                C152231 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152302) *
               C50892) *
              C151985 * C151967 * C130 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152302 +
            (C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560 +
             C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559) *
                C152231) *
               C50892 +
           ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
               C152205) *
              C151985 * C151967 * C131 -
          (((C150632 * C1055 - C73638 * C1045 - C150632 * C1056 +
             C151913 * C1063 + C150639 * C1053 - C73636 * C1044 -
             C150639 * C1054 + C152263 * C1062) *
                C152231 +
            (C74427 + C74426) * C152302) *
               C152205 +
           ((C150632 * C551 - C73638 * C531 - C150632 * C552 + C151913 * C567 +
             C150639 * C535 - C73636 * C523 - C150639 * C536 + C152263 * C559) *
                C152231 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152302) *
               C50892) *
              C151985 * C151967 * C132 +
          (((C150639 * C158 - C73636 * C146 - C150639 * C159 + C152263 * C170 +
             C150632 * C160 - C73638 * C147 - C150632 * C161 + C151913 * C171) *
                C152302 +
            (C150639 * C551 - C73636 * C531 - C150639 * C552 + C152263 * C567 +
             C150632 * C555 - C73638 * C533 - C150632 * C556 + C151913 * C569) *
                C152231) *
               C50892 +
           ((C150639 * C354 - C73636 * C334 - C150639 * C355 + C152263 * C370 +
             C150632 * C358 - C73638 * C336 - C150632 * C359 + C151913 * C372) *
                C152302 +
            (C150639 * C1055 - C73636 * C1045 - C150639 * C1056 +
             C152263 * C1063 + C150632 * C1057 - C73638 * C1046 -
             C150632 * C1058 + C151913 * C1064) *
                C152231) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
                C152205) *
               C152374 -
           (((C75639 + C75638) * C152231 + (C74988 + C74989) * C152302) *
                C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152359 +
           (((C82923 + C82922) * C152302 +
             (C150639 * C2411 - C73636 * C2400 - C150639 * C2412 +
              C152263 * C2424 + C150632 * C2409 - C73638 * C2399 -
              C150632 * C2410 + C151913 * C2423) *
                 C152231) *
                C50892 +
            ((C75638 + C75639) * C152302 + (C77665 + C77664) * C152231) *
                C152205) *
               C152329) *
              C151967 * C323 +
          ((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                C50892 +
            ((C74990 + C74991) * C152302 + (C77249 + C77248) * C152231) *
                C152205) *
               C152359 -
           (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
                C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C152374 -
           (((C150632 * C2903 - C73638 * C2897 - C150632 * C2904 +
              C151913 * C2909 + C150639 * C2901 - C73636 * C2896 -
              C150639 * C2902 + C152263 * C2908) *
                 C152231 +
             (C77248 + C77249) * C152302) *
                C152205 +
            ((C150632 * C2407 - C73638 * C2398 - C150632 * C2408 +
              C151913 * C2422 + C150639 * C2409 - C73636 * C2399 -
              C150639 * C2410 + C152263 * C2423) *
                 C152231 +
             (C82927 + C82926) * C152302) *
                C50892) *
               C152329) *
              C151967 * C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
                C152205) *
               C152374 -
           (((C82930 + C82931) * C152231 + (C74996 + C74997) * C152302) *
                C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                C50892) *
               C152359 +
           (((C82933 + C82932) * C152302 +
             (C150639 * C2407 - C73636 * C2398 - C150639 * C2408 +
              C152263 * C2422 + C150632 * C2405 - C73638 * C2397 -
              C150632 * C2406 + C151913 * C2421) *
                 C152231) *
                C50892 +
            ((C82931 + C82930) * C152302 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C151985 * C1211 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C151985 * C1212 +
           ((C73984 * C152302 + (C74987 + C74986) * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C152370 +
          ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C1212 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C1211 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                C152205 +
            ((C74993 + C74992) * C152231 + C73985 * C152302) * C50892) *
               C151985 * C152326) *
              C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
               C151985 * C1211 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
               C151985 * C1212 +
           ((C73986 * C152302 + (C74995 + C74994) * C152231) * C50892 +
            ((C73983 + C73982) * C152302 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152302 +
            (C82920 + C82921) * C152231) *
               C50892 +
           ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
              C151985 * C1299 -
          ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
           (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
              C151985 * C1300 +
          ((C73984 * C152302 + (C74987 + C74986) * C152231) * C50892 +
           ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
              C151985 * C1301 -
          (((C76372 + C76373) * C152231 + (C75365 + C75364) * C152302) *
               C152205 +
           ((C75643 + C75642) * C152231 + C75338 * C152302) * C50892) *
              C151985 * C1302 +
          ((C75368 * C152302 + (C76373 + C76372) * C152231) * C50892 +
           ((C75367 + C75366) * C152302 +
            (C150639 * C8801 - C73636 * C8799 - C150639 * C8802 +
             C152263 * C8805 + C150632 * C8803 - C73638 * C8800 -
             C150632 * C8804 + C151913 * C8806) *
                C152231) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C152374 -
           ((C84612 * C152231 + C83865 * C152302) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152359 +
           (((C82923 + C82922) * C152302 +
             (C150639 * C2411 - C73636 * C2400 - C150639 * C2412 +
              C152263 * C2424 + C150632 * C2409 - C73638 * C2399 -
              C150632 * C2410 + C151913 * C2423) *
                 C152231) *
                C50892 +
            (C84613 * C152302 + (C77665 + C77664) * C152231) * C152205) *
               C152329) *
              C1211 +
          (((C83864 * C152302 + C84613 * C152231) * C50892 +
            (C84614 * C152302 + C75646 * C152231) * C152205) *
               C152359 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C152374 -
           (((C77662 + C77663) * C152231 + C84615 * C152302) * C152205 +
            ((C77664 + C77665) * C152231 + C84612 * C152302) * C50892) *
               C152329) *
              C1212 +
          (((C73984 * C152302 + C84614 * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C152374 -
           (((C75644 + C75645) * C152231 + (C75643 + C75642) * C152302) *
                C152205 +
            (C84615 * C152231 + C75588 * C152302) * C50892) *
               C152359 +
           ((C75646 * C152302 + (C77663 + C77662) * C152231) * C50892 +
            ((C75645 + C75644) * C152302 +
             (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
              C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
              C150632 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
                C152205) *
               C152285 -
           (((C75639 + C75638) * C152231 + (C74988 + C74989) * C152302) *
                C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                C50892) *
               C152072) *
              C151967 * C703 +
          ((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                C50892 +
            ((C74990 + C74991) * C152302 + (C77249 + C77248) * C152231) *
                C152205) *
               C152072 -
           (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
                C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C152285) *
              C151967 * C704 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
                C152205) *
               C152285 -
           (((C82930 + C82931) * C152231 + (C74996 + C74997) * C152302) *
                C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C152302) *
                C50892) *
               C152072) *
              C151967 * C705 +
          ((((C83476 + C83477) * C152302 +
             (C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566 +
              C150632 * C553 - C73638 * C532 - C150632 * C554 +
              C151913 * C568) *
                 C152231) *
                C50892 +
            ((C83204 + C83205) * C152302 +
             (C150639 * C1495 - C73636 * C1483 - C150639 * C1496 +
              C152263 * C1519 + C150632 * C2624 - C73638 * C2623 -
              C150632 * C2625 + C151913 * C2626) *
                 C152231) *
                C152205) *
               C152072 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C152302) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C152302) *
                C50892) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C152302 +
              (C82920 + C82921) * C152231) *
                 C50892 +
             ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
                C152285 -
            ((C84612 * C152231 + C83865 * C152302) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C152302) *
                 C50892) *
                C152072) *
               C1211 +
           (((C83864 * C152302 + C84613 * C152231) * C50892 +
             (C84614 * C152302 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
                C152285) *
               C1212 +
           (((C73984 * C152302 + C84614 * C152231) * C50892 +
             ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
                C152285 -
            (((C75644 + C75645) * C152231 + (C75643 + C75642) * C152302) *
                 C152205 +
             (C84615 * C152231 + C75588 * C152302) * C50892) *
                C152072) *
               C152326) *
              C152270 +
          (((((C82924 + C82925) * C152302 + (C82926 + C82927) * C152231) *
                 C50892 +
             (C83866 * C152302 + (C77249 + C77248) * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C152302) *
                 C50892) *
                C152285) *
               C1211 +
           ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
             ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
                C152285 -
            (((C77246 + C77247) * C152231 + C85260 * C152302) * C152205 +
             ((C77248 + C77249) * C152231 + C83867 * C152302) * C50892) *
                C152072) *
               C1212 +
           (((C76148 * C152302 + (C77247 + C77246) * C152231) * C50892 +
             ((C76163 + C76162) * C152302 +
              (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
               C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
               C150632 * C9697 + C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                 C152205 +
             (C85260 * C152231 + C73985 * C152302) * C50892) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152302 +
            (C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562 +
             C150632 * C539 - C73638 * C525 - C150632 * C540 + C151913 * C561) *
                C152231) *
               C50892 +
           ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
               C152205) *
              C151985 * C151967 * C129 -
          (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
               C152205 +
           ((C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560 +
             C150639 * C539 - C73636 * C525 - C150639 * C540 + C152263 * C561) *
                C152231 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152302) *
               C50892) *
              C151985 * C151967 * C130 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152302 +
            (C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560 +
             C150632 * C535 - C73638 * C523 - C150632 * C536 + C151913 * C559) *
                C152231) *
               C50892 +
           ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
               C152205) *
              C151985 * C151967 * C131 -
          (((C150632 * C1055 - C73638 * C1045 - C150632 * C1056 +
             C151913 * C1063 + C150639 * C1053 - C73636 * C1044 -
             C150639 * C1054 + C152263 * C1062) *
                C152231 +
            (C74427 + C74426) * C152302) *
               C152205 +
           ((C150632 * C551 - C73638 * C531 - C150632 * C552 + C151913 * C567 +
             C150639 * C535 - C73636 * C523 - C150639 * C536 + C152263 * C559) *
                C152231 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152302) *
               C50892) *
              C151985 * C151967 * C132 +
          (((C150639 * C158 - C73636 * C146 - C150639 * C159 + C152263 * C170 +
             C150632 * C160 - C73638 * C147 - C150632 * C161 + C151913 * C171) *
                C152302 +
            (C150639 * C551 - C73636 * C531 - C150639 * C552 + C152263 * C567 +
             C150632 * C555 - C73638 * C533 - C150632 * C556 + C151913 * C569) *
                C152231) *
               C50892 +
           ((C150639 * C354 - C73636 * C334 - C150639 * C355 + C152263 * C370 +
             C150632 * C358 - C73638 * C336 - C150632 * C359 + C151913 * C372) *
                C152302 +
            (C150639 * C1055 - C73636 * C1045 - C150639 * C1056 +
             C152263 * C1063 + C150632 * C1057 - C73638 * C1046 -
             C150632 * C1058 + C151913 * C1064) *
                C152231) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C150639 * C541 - C73636 * C526 - C150639 * C542 + C152263 * C562 +
              C150632 * C539 - C73638 * C525 - C150632 * C540 +
              C151913 * C561) *
                 C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + (C74989 + C74988) * C152231) *
                C152205) *
               C151985 * C152373 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            ((C74988 + C74989) * C152231 + (C73967 + C73966) * C152302) *
                C50892) *
               C151985 * C152357 +
           ((C73984 * C152302 + (C74987 + C74986) * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C323 +
          ((((C73972 + C73973) * C152302 + (C74990 + C74991) * C152231) *
                C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C152357 -
           (((C74991 + C74990) * C152231 + (C73973 + C73972) * C152302) *
                C152205 +
            ((C150632 * C537 - C73638 * C524 - C150632 * C538 + C151913 * C560 +
              C150639 * C539 - C73636 * C525 - C150639 * C540 +
              C152263 * C561) *
                 C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C152373 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                C152205 +
            ((C74993 + C74992) * C152231 + C73985 * C152302) * C50892) *
               C151985 * C152326) *
              C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C150639 * C537 - C73636 * C524 - C150639 * C538 + C152263 * C560 +
              C150632 * C535 - C73638 * C523 - C150632 * C536 +
              C151913 * C559) *
                 C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + (C74997 + C74996) * C152231) *
                C152205) *
               C151985 * C152373 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                C152205 +
            ((C74996 + C74997) * C152231 + (C73979 + C73978) * C152302) *
                C50892) *
               C151985 * C152357 +
           ((C73986 * C152302 + (C74995 + C74994) * C152231) * C50892 +
            ((C73983 + C73982) * C152302 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152302 +
             (C82920 + C82921) * C152231) *
                C50892 +
            ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
               C151985 * C1211 -
           ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
               C151985 * C1212 +
           ((C73984 * C152302 + (C74987 + C74986) * C152231) * C50892 +
            ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C152370 +
          ((((C73972 + C73973) * C152302 + C83866 * C152231) * C50892 +
            ((C73974 + C73975) * C152302 + C76148 * C152231) * C152205) *
               C151985 * C1212 -
           ((C83867 * C152231 + (C73973 + C73972) * C152302) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152302) *
                C50892) *
               C151985 * C1211 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C152302) *
                C152205 +
            ((C74993 + C74992) * C152231 + C73985 * C152302) * C50892) *
               C151985 * C152326) *
              C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152302 +
             (C82928 + C82929) * C152231) *
                C50892 +
            ((C73978 + C73979) * C152302 + C83868 * C152231) * C152205) *
               C151985 * C1211 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C152302) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C152302) * C50892) *
               C151985 * C1212 +
           ((C73986 * C152302 + (C74995 + C74994) * C152231) * C50892 +
            ((C73983 + C73982) * C152302 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152302 +
            (C82920 + C82921) * C152231) *
               C50892 +
           ((C73966 + C73967) * C152302 + C83864 * C152231) * C152205) *
              C151985 * C1299 -
          ((C75588 * C152231 + (C73969 + C73968) * C152302) * C152205 +
           (C83865 * C152231 + (C73967 + C73966) * C152302) * C50892) *
              C151985 * C1300 +
          ((C73984 * C152302 + (C74987 + C74986) * C152231) * C50892 +
           ((C73971 + C73970) * C152302 + C76358 * C152231) * C152205) *
              C151985 * C1301 -
          (((C76372 + C76373) * C152231 + (C75365 + C75364) * C152302) *
               C152205 +
           ((C75643 + C75642) * C152231 + C75338 * C152302) * C50892) *
              C151985 * C1302 +
          ((C75368 * C152302 + (C76373 + C76372) * C152231) * C50892 +
           ((C75367 + C75366) * C152302 +
            (C150639 * C8801 - C73636 * C8799 - C150639 * C8802 +
             C152263 * C8805 + C150632 * C8803 - C73638 * C8800 -
             C150632 * C8804 + C151913 * C8806) *
                C152231) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[225] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152026 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152033 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C151985 * C3525) *
              C151944 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152033 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152026 -
           ((C53100 + C53101 + C53102) * C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C3525) *
              C151953 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C152026 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152033 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152026 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152033 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C151985 * C3525) *
              C151944 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152033 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152026 -
           (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
            C59659 * C59417) *
               C151985 * C3525) *
              C151953 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152026 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152033 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[226] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152285 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C152026 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152285) *
               C152033 +
           (((C51232 + C51231 + C51230) * C152167 * C50892 +
             (C52601 + C52602 + C52603) * C152167 * C152205) *
                C152285 -
            ((C53626 + C53627 + C53628) * C152167 * C152205 +
             (C52884 + C52883 + C52882) * C152167 * C50892) *
                C152072) *
               C3525) *
              C3181 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152285) *
               C152026 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152285 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152033 +
           (((C53413 + C53412 + C53411) * C152167 * C50892 +
             (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
              C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
              C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
              C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C53100 + C53101 + C53102) * C152167 * C152205 +
             (C51238 + C51237 + C51236) * C152167 * C50892) *
                C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152285 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152026 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152285) *
               C152033 +
           ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
             C60608 * C59420) *
                C152285 -
            (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
             C60354 * C59417) *
                C152072) *
               C3525) *
              C3181 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152285) *
               C152026 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152285 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152033 +
           ((C60357 * C59417 + C60358 * C59418 + C61139 * C59419 +
             (C59421 * C8803 - C59422 * C8800 - C59421 * C8804 +
              C151908 * C8806) *
                 C152167 * C59420) *
                C152072 -
            (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
             C59659 * C59417) *
                C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[227] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152380 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152376 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C151985 * C152362 -
           ((C52604 + C52605 + C52606) * C152167 * C152205 +
            (C52603 + C52602 + C52601) * C152167 * C50892) *
               C151985 * C152336) *
              C3181 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152376 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152380 -
           ((C53100 + C53101 + C53102) * C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152362 +
           ((C53102 + C53101 + C53100) * C152167 * C50892 +
            (C50894 * C1323 - C50895 * C1310 - C50894 * C1324 + C50889 * C1334 +
             C50896 * C1325 - C50897 * C1311 - C50896 * C1326 + C50890 * C1335 +
             C50898 * C1327 - C50899 * C1312 - C50898 * C1328 +
             C50891 * C1336) *
                C152167 * C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C3041 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152030) *
              C152379 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152030 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C3041) *
              C152372 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C3041 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152030) *
              C152355 +
          (((C51675 + C51676 + C51677) * C152167 * C50892 +
            (C50894 * C352 - C50895 * C333 - C50894 * C353 + C50889 * C369 +
             C50896 * C356 - C50897 * C335 - C50896 * C357 + C50890 * C371 +
             C50898 * C360 - C50899 * C337 - C50898 * C361 + C50891 * C373) *
                C152167 * C152205) *
               C151985 * C152030 -
           ((C51677 + C51676 + C51675) * C152167 * C152205 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C152167 * C50892) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152374 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152359 +
            ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
              C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
              C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                 C152167 * C50892 +
             (C52879 + C52880 + C52881) * C152167 * C152205) *
                C152329) *
               C3041 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152359 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152374 -
            ((C52885 + C52886 + C52887) * C152167 * C152205 +
             (C52881 + C52880 + C52879) * C152167 * C50892) *
                C152329) *
               C152030) *
              C3181 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152359 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152374 -
            ((C54495 + C54496 + C54497) * C152167 * C152205 +
             (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
              C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
              C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                 C152167 * C50892) *
                C152329) *
               C3041 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152374 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152359 +
            ((C54497 + C54496 + C54495) * C152167 * C50892 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152167 * C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C3041 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152030) *
              C152379 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152030 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C3041) *
              C152372 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C3041 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152030) *
              C152355 +
          ((C59963 * C59417 + C59964 * C59418 + C59965 * C59419 +
            (C59421 * C1327 - C59422 * C1312 - C59421 * C1328 +
             C151908 * C1336) *
                C152167 * C59420) *
               C151985 * C152030 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152380 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152376 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C151985 * C152362 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C151985 * C152336) *
              C3181 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152376 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152380 -
           (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
            C59659 * C59417) *
               C151985 * C152362 +
           (C59660 * C59417 + C59661 * C59418 + C60937 * C59419 +
            (C59421 * C7741 - C59422 * C7734 - C59421 * C7742 +
             C151908 * C7746) *
                C152167 * C59420) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152374 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152359 +
            ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                 C152167 * C59417 +
             C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
                C152329) *
               C3041 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152359 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152374 -
            (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
             C60795 * C59417) *
                C152329) *
               C152030) *
              C3181 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152359 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152374 -
            (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
             (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                 C152167 * C59417) *
                C152329) *
               C3041 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152374 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152359 +
            (C61877 * C59417 + C61876 * C59418 + C61875 * C59419 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C152167 * C59420) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152285 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C3041 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152285) *
               C152030) *
              C151944 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152285) *
               C3041 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152285 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152030) *
              C151953 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C152167 * C50892 +
             (C51239 + C51240 + C51241) * C152167 * C152205) *
                C152285 -
            ((C52222 + C52223 + C52224) * C152167 * C152205 +
             (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
              C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
              C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                 C152167 * C50892) *
                C152072) *
               C3041 +
           (((C52224 + C52223 + C52222) * C152167 * C50892 +
             (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
              C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
              C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
              C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C51242 + C51243 + C51244) * C152167 * C152205 +
             (C51241 + C51240 + C51239) * C152167 * C50892) *
                C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152285 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C3041 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152285) *
               C152030) *
              C151944 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152285) *
               C3041 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152285 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152030) *
              C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152167 * C59417 +
             C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
                C152285 -
            (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C152167 * C59417) *
                C152072) *
               C3041 +
           ((C60361 * C59417 + C60360 * C59418 + C60359 * C59419 +
             (C59421 * C8586 - C59422 * C8585 - C59421 * C8587 +
              C151908 * C8588) *
                 C152167 * C59420) *
                C152072 -
            (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
             C59662 * C59417) *
                C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[229] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C3041 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152030) *
              C152379 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152030 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C3041) *
              C152372 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C3041 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152030) *
              C152355 +
          (((C51675 + C51676 + C51677) * C152167 * C50892 +
            (C50894 * C352 - C50895 * C333 - C50894 * C353 + C50889 * C369 +
             C50896 * C356 - C50897 * C335 - C50896 * C357 + C50890 * C371 +
             C50898 * C360 - C50899 * C337 - C50898 * C361 + C50891 * C373) *
                C152167 * C152205) *
               C151985 * C152030 -
           ((C51677 + C51676 + C51675) * C152167 * C152205 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C152167 * C50892) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152380 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152376 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C151985 * C152362 -
           ((C52604 + C52605 + C52606) * C152167 * C152205 +
            (C52603 + C52602 + C52601) * C152167 * C50892) *
               C151985 * C152336) *
              C3181 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152376 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152380 -
           ((C53100 + C53101 + C53102) * C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152362 +
           ((C53102 + C53101 + C53100) * C152167 * C50892 +
            (C50894 * C1323 - C50895 * C1310 - C50894 * C1324 + C50889 * C1334 +
             C50896 * C1325 - C50897 * C1311 - C50896 * C1326 + C50890 * C1335 +
             C50898 * C1327 - C50899 * C1312 - C50898 * C1328 +
             C50891 * C1336) *
                C152167 * C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C3041 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152030) *
              C152379 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152030 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C3041) *
              C152372 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C3041 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152030) *
              C152355 +
          ((C59963 * C59417 + C59964 * C59418 + C59965 * C59419 +
            (C59421 * C1327 - C59422 * C1312 - C59421 * C1328 +
             C151908 * C1336) *
                C152167 * C59420) *
               C151985 * C152030 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152380 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152376 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C151985 * C152362 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C151985 * C152336) *
              C3181 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152376 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152380 -
           (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
            C59659 * C59417) *
               C151985 * C152362 +
           (C59660 * C59417 + C59661 * C59418 + C60937 * C59419 +
            (C59421 * C7741 - C59422 * C7734 - C59421 * C7742 +
             C151908 * C7746) *
                C152167 * C59420) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[230] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C4047 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C152026 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C4047) *
               C152033 +
           (((C51232 + C51231 + C51230) * C152167 * C50892 +
             (C52601 + C52602 + C52603) * C152167 * C152205) *
                C4047 -
            ((C53626 + C53627 + C53628) * C152167 * C152205 +
             (C52884 + C52883 + C52882) * C152167 * C50892) *
                C152072) *
               C3525) *
              C152270 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C4047) *
               C152026 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C4047 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152033 +
           (((C53413 + C53412 + C53411) * C152167 * C50892 +
             (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
              C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
              C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
              C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C53100 + C53101 + C53102) * C152167 * C152205 +
             (C51238 + C51237 + C51236) * C152167 * C50892) *
                C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C4047 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152026 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C4047) *
               C152033 +
           ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
             C60608 * C59420) *
                C4047 -
            (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
             C60354 * C59417) *
                C152072) *
               C3525) *
              C152270 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C4047) *
               C152026 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C4047 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152033 +
           ((C60357 * C59417 + C60358 * C59418 + C61139 * C59419 +
             (C59421 * C8803 - C59422 * C8800 - C59421 * C8804 +
              C151908 * C8806) *
                 C152167 * C59420) *
                C152072 -
            (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
             C59659 * C59417) *
                C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[231] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152068 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152075 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C4719) *
              C152026 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152075 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C152068 -
           ((C52885 + C52886 + C52887) * C152167 * C152205 +
            (C52881 + C52880 + C52879) * C152167 * C50892) *
               C4719) *
              C152033 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C152068 -
           ((C53626 + C53627 + C53628) * C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C152075 +
           ((C52887 + C52886 + C52885) * C152167 * C50892 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152167 * C152205) *
               C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152068 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152075 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C4719) *
              C152026 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152075 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C152068 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C4719) *
              C152033 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C152068 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C152075 +
           (C60796 * C59417 + C60797 * C59418 + C60799 * C59419 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C152167 * C59420) *
               C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C4047 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152072) *
              C152380 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152072 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C4047) *
              C152376 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C4047 -
           ((C53626 + C53627 + C53628) * C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C152072) *
              C152362 +
          (((C53628 + C53627 + C53626) * C152167 * C50892 +
            (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
             C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
             C50898 * C8586 - C50899 * C8585 - C50898 * C8587 +
             C50891 * C8588) *
                C152167 * C152205) *
               C152072 -
           ((C52604 + C52605 + C52606) * C152167 * C152205 +
            (C52603 + C52602 + C52601) * C152167 * C50892) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C4047 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C3041 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C4047) *
               C152030) *
              C152370 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C4047) *
               C3041 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C4047 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152030) *
              C152353 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C152167 * C50892 +
             (C51239 + C51240 + C51241) * C152167 * C152205) *
                C4047 -
            ((C52222 + C52223 + C52224) * C152167 * C152205 +
             (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
              C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
              C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                 C152167 * C50892) *
                C152072) *
               C3041 +
           (((C52224 + C52223 + C52222) * C152167 * C50892 +
             (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
              C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
              C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
              C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C51242 + C51243 + C51244) * C152167 * C152205 +
             (C51241 + C51240 + C51239) * C152167 * C50892) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152381 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152378 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152365 -
           ((C54904 + C54905 + C54906) * C152167 * C152205 +
            (C50898 * C2407 - C50899 * C2398 - C50898 * C2408 + C50891 * C2422 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50894 * C2411 - C50895 * C2400 - C50894 * C2412 +
             C50889 * C2424) *
                C152167 * C50892) *
               C152342) *
              C3041 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152378 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C152381 -
           ((C52885 + C52886 + C52887) * C152167 * C152205 +
            (C52881 + C52880 + C52879) * C152167 * C50892) *
               C152365 +
           ((C54906 + C54905 + C54904) * C152167 * C50892 +
            (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 + C50889 * C9400 +
             C50896 * C9387 - C50897 * C9381 - C50896 * C9388 + C50890 * C9399 +
             C50898 * C9922 - C50899 * C9921 - C50898 * C9923 +
             C50891 * C9924) *
                C152167 * C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C4047 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C3041 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C4047) *
               C152030) *
              C152370 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C4047) *
               C3041 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C4047 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152030) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152167 * C59417 +
             C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
                C4047 -
            (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C152167 * C59417) *
                C152072) *
               C3041 +
           ((C60361 * C59417 + C60360 * C59418 + C60359 * C59419 +
             (C59421 * C8586 - C59422 * C8585 - C59421 * C8587 +
              C151908 * C8588) *
                 C152167 * C59420) *
                C152072 -
            (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
             C59662 * C59417) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C4047 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C152380 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152072 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C4047) *
              C152376 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C4047 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C152072) *
              C152362 +
          ((C60353 * C59417 + C60798 * C59418 + C61281 * C59419 +
            (C59421 * C61270 - C59422 * C61269 - C59421 * C61271 +
             C151908 * C61272) *
                C152167 * C59420) *
               C152072 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152381 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152378 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152365 -
           (C62163 * C59420 + C62164 * C59419 + C62165 * C59418 +
            (C59421 * C2411 - C59422 * C2400 - C59421 * C2412 +
             C151908 * C2424) *
                C152167 * C59417) *
               C152342) *
              C3041 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152378 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C152381 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C152365 +
           (C62165 * C59417 + C62164 * C59418 + C62163 * C59419 +
            (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
             C151908 * C62140) *
                C152167 * C59420) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[233] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152068 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152075 +
            ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
              C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
              C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                 C152167 * C50892 +
             (C52879 + C52880 + C52881) * C152167 * C152205) *
                C4719) *
               C3041 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152075 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152068 -
            ((C52885 + C52886 + C52887) * C152167 * C152205 +
             (C52881 + C52880 + C52879) * C152167 * C50892) *
                C4719) *
               C152030) *
              C152270 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152075 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152068 -
            ((C54495 + C54496 + C54497) * C152167 * C152205 +
             (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
              C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
              C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                 C152167 * C50892) *
                C4719) *
               C3041 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152068 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152075 +
            ((C54497 + C54496 + C54495) * C152167 * C50892 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152167 * C152205) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152068 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152075 +
            ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                 C152167 * C59417 +
             C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
                C4719) *
               C3041 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152075 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152068 -
            (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
             C60795 * C59417) *
                C4719) *
               C152030) *
              C152270 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152075 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152068 -
            (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
             (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                 C152167 * C59417) *
                C4719) *
               C3041 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152068 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152075 +
            (C61877 * C59417 + C61876 * C59418 + C61875 * C59419 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C152167 * C59420) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C4047 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C3041 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C4047) *
               C152030) *
              C152370 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C4047) *
               C3041 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C4047 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152030) *
              C152353 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C152167 * C50892 +
             (C51239 + C51240 + C51241) * C152167 * C152205) *
                C4047 -
            ((C52222 + C52223 + C52224) * C152167 * C152205 +
             (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
              C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
              C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                 C152167 * C50892) *
                C152072) *
               C3041 +
           (((C52224 + C52223 + C52222) * C152167 * C50892 +
             (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
              C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
              C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
              C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C51242 + C51243 + C51244) * C152167 * C152205 +
             (C51241 + C51240 + C51239) * C152167 * C50892) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C4047 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152072) *
              C152380 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152072 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C4047) *
              C152376 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C4047 -
           ((C53626 + C53627 + C53628) * C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C152072) *
              C152362 +
          (((C53628 + C53627 + C53626) * C152167 * C50892 +
            (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
             C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
             C50898 * C8586 - C50899 * C8585 - C50898 * C8587 +
             C50891 * C8588) *
                C152167 * C152205) *
               C152072 -
           ((C52604 + C52605 + C52606) * C152167 * C152205 +
            (C52603 + C52602 + C52601) * C152167 * C50892) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C4047 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C3041 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C4047) *
               C152030) *
              C152370 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C4047) *
               C3041 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C4047 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152030) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152167 * C59417 +
             C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
                C4047 -
            (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C152167 * C59417) *
                C152072) *
               C3041 +
           ((C60361 * C59417 + C60360 * C59418 + C60359 * C59419 +
             (C59421 * C8586 - C59422 * C8585 - C59421 * C8587 +
              C151908 * C8588) *
                 C152167 * C59420) *
                C152072 -
            (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
             C59662 * C59417) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C4047 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C152380 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152072 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C4047) *
              C152376 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C4047 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C152072) *
              C152362 +
          ((C60353 * C59417 + C60798 * C59418 + C61281 * C59419 +
            (C59421 * C61270 - C59422 * C61269 - C59421 * C61271 +
             C151908 * C61272) *
                C152167 * C59420) *
               C152072 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[235] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C1661 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C1662 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C151985 * C1663 -
           ((C52604 + C52605 + C52606) * C152167 * C152205 +
            (C52603 + C52602 + C52601) * C152167 * C50892) *
               C151985 * C152336) *
              C152270 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C1662 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C1661 -
           ((C53100 + C53101 + C53102) * C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C1663 +
           ((C53102 + C53101 + C53100) * C152167 * C50892 +
            (C50894 * C1323 - C50895 * C1310 - C50894 * C1324 + C50889 * C1334 +
             C50896 * C1325 - C50897 * C1311 - C50896 * C1326 + C50890 * C1335 +
             C50898 * C1327 - C50899 * C1312 - C50898 * C1328 +
             C50891 * C1336) *
                C152167 * C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152284 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152030) *
              C703 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152030 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152284) *
              C704 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C152284 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152030) *
              C705 +
          (((C51675 + C51676 + C51677) * C152167 * C50892 +
            (C50894 * C352 - C50895 * C333 - C50894 * C353 + C50889 * C369 +
             C50896 * C356 - C50897 * C335 - C50896 * C357 + C50890 * C371 +
             C50898 * C360 - C50899 * C337 - C50898 * C361 + C50891 * C373) *
                C152167 * C152205) *
               C151985 * C152030 -
           ((C51677 + C51676 + C51675) * C152167 * C152205 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C152167 * C50892) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C2161 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C2162 +
            ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
              C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
              C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                 C152167 * C50892 +
             (C52879 + C52880 + C52881) * C152167 * C152205) *
                C152329) *
               C152284 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C2162 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C2161 -
            ((C52885 + C52886 + C52887) * C152167 * C152205 +
             (C52881 + C52880 + C52879) * C152167 * C50892) *
                C152329) *
               C152030) *
              C152270 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C2162 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C2161 -
            ((C54495 + C54496 + C54497) * C152167 * C152205 +
             (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
              C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
              C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                 C152167 * C50892) *
                C152329) *
               C152284 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C2161 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C2162 +
            ((C54497 + C54496 + C54495) * C152167 * C50892 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152167 * C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152284 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152030) *
              C703 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152030 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152284) *
              C704 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152284 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152030) *
              C705 +
          ((C59963 * C59417 + C59964 * C59418 + C59965 * C59419 +
            (C59421 * C1327 - C59422 * C1312 - C59421 * C1328 +
             C151908 * C1336) *
                C152167 * C59420) *
               C151985 * C152030 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C1661 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C1662 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C151985 * C1663 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C151985 * C152336) *
              C152270 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C1662 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C1661 -
           (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
            C59659 * C59417) *
               C151985 * C1663 +
           (C59660 * C59417 + C59661 * C59418 + C60937 * C59419 +
            (C59421 * C7741 - C59422 * C7734 - C59421 * C7742 +
             C151908 * C7746) *
                C152167 * C59420) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C2161 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C2162 +
            ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                 C152167 * C59417 +
             C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
                C152329) *
               C152284 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C2162 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C2161 -
            (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
             C60795 * C59417) *
                C152329) *
               C152030) *
              C152270 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C2162 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C2161 -
            (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
             (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                 C152167 * C59417) *
                C152329) *
               C152284 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C2161 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C2162 +
            (C61877 * C59417 + C61876 * C59418 + C61875 * C59419 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C152167 * C59420) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152285 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152072) *
              C1661 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152072 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C152285) *
              C1662 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C152285 -
           ((C53626 + C53627 + C53628) * C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C152072) *
              C1663 +
          (((C53628 + C53627 + C53626) * C152167 * C50892 +
            (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
             C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
             C50898 * C8586 - C50899 * C8585 - C50898 * C8587 +
             C50891 * C8588) *
                C152167 * C152205) *
               C152072 -
           ((C52604 + C52605 + C52606) * C152167 * C152205 +
            (C52603 + C52602 + C52601) * C152167 * C50892) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152285 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C152284 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C50894 * C1509 - C50895 * C1490 - C50894 * C1510 +
              C50889 * C1526 + C50896 * C1507 - C50897 * C1489 -
              C50896 * C1508 + C50890 * C1525 + C50898 * C1505 -
              C50899 * C1488 - C50898 * C1506 + C50891 * C1524) *
                 C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152285) *
               C152030) *
              C323 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152285) *
               C152284 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152285 -
            ((C50898 * C1503 - C50899 * C1487 - C50898 * C1504 +
              C50891 * C1523 + C50896 * C1505 - C50897 * C1488 -
              C50896 * C1506 + C50890 * C1524 + C50894 * C1507 -
              C50895 * C1489 - C50894 * C1508 + C50889 * C1525) *
                 C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152030) *
              C324 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C152167 * C50892 +
             (C51239 + C51240 + C51241) * C152167 * C152205) *
                C152285 -
            ((C52222 + C52223 + C52224) * C152167 * C152205 +
             (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
              C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
              C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                 C152167 * C50892) *
                C152072) *
               C152284 +
           (((C52224 + C52223 + C52222) * C152167 * C50892 +
             (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
              C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
              C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
              C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C51242 + C51243 + C51244) * C152167 * C152205 +
             (C51241 + C51240 + C51239) * C152167 * C50892) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C2757 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C2758 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C2759 -
           ((C54904 + C54905 + C54906) * C152167 * C152205 +
            (C50898 * C2407 - C50899 * C2398 - C50898 * C2408 + C50891 * C2422 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50894 * C2411 - C50895 * C2400 - C50894 * C2412 +
             C50889 * C2424) *
                C152167 * C50892) *
               C152342) *
              C152284 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C2758 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C2757 -
           ((C52885 + C52886 + C52887) * C152167 * C152205 +
            (C52881 + C52880 + C52879) * C152167 * C50892) *
               C2759 +
           ((C54906 + C54905 + C54904) * C152167 * C50892 +
            (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 + C50889 * C9400 +
             C50896 * C9387 - C50897 * C9381 - C50896 * C9388 + C50890 * C9399 +
             C50898 * C9922 - C50899 * C9921 - C50898 * C9923 +
             C50891 * C9924) *
                C152167 * C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152285 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152284 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             (C59421 * C8009 - C59422 * C8000 - C59421 * C8010 +
              C151908 * C8018) *
                 C152167 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152285) *
               C152030) *
              C323 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152285) *
               C152284 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152285 -
            ((C59421 * C8007 - C59422 * C7999 - C59421 * C8008 +
              C151908 * C8017) *
                 C152167 * C59420 +
             C60358 * C59419 + C60357 * C59418 + C60356 * C59417) *
                C152072) *
               C152030) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152167 * C59417 +
             C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
                C152285 -
            (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C152167 * C59417) *
                C152072) *
               C152284 +
           ((C60361 * C59417 + C60360 * C59418 + C60359 * C59419 +
             (C59421 * C8586 - C59422 * C8585 - C59421 * C8587 +
              C151908 * C8588) *
                 C152167 * C59420) *
                C152072 -
            (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
             C59662 * C59417) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152285 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C1661 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152072 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C152285) *
              C1662 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C152285 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C152072) *
              C1663 +
          ((C60353 * C59417 + C60798 * C59418 + C61281 * C59419 +
            (C59421 * C61270 - C59422 * C61269 - C59421 * C61271 +
             C151908 * C61272) *
                C152167 * C59420) *
               C152072 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C2757 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C2758 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C2759 -
           (C62163 * C59420 + C62164 * C59419 + C62165 * C59418 +
            (C59421 * C2411 - C59422 * C2400 - C59421 * C2412 +
             C151908 * C2424) *
                C152167 * C59417) *
               C152342) *
              C152284 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C2758 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C2757 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C2759 +
           (C62165 * C59417 + C62164 * C59418 + C62163 * C59419 +
            (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
             C151908 * C62140) *
                C152167 * C59420) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                   C152167 * C50892 +
               (C50894 * C344 - C50895 * C329 - C50894 * C345 + C50889 * C365 +
                C50896 * C342 - C50897 * C328 - C50896 * C343 + C50890 * C364 +
                C50898 * C340 - C50899 * C327 - C50898 * C341 + C50891 * C363) *
                   C152167 * C152205) *
                  C151985 * C151967 * C129 -
              ((C50898 * C338 - C50899 * C326 - C50898 * C339 + C50891 * C362 +
                C50896 * C340 - C50897 * C327 - C50896 * C341 + C50890 * C363 +
                C50894 * C342 - C50895 * C328 - C50894 * C343 + C50889 * C364) *
                   C152167 * C152205 +
               (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                   C152167 * C50892) *
                  C151985 * C151967 * C130 +
              ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                   C152167 * C50892 +
               (C50894 * C340 - C50895 * C327 - C50894 * C341 + C50889 * C363 +
                C50896 * C338 - C50897 * C326 - C50896 * C339 + C50890 * C362 +
                C50898 * C354 - C50899 * C334 - C50898 * C355 + C50891 * C370) *
                   C152167 * C152205) *
                  C151985 * C151967 * C131 -
              ((C50898 * C358 - C50899 * C336 - C50898 * C359 + C50891 * C372 +
                C50896 * C354 - C50897 * C334 - C50896 * C355 + C50890 * C370 +
                C50894 * C338 - C50895 * C326 - C50894 * C339 + C50889 * C362) *
                   C152167 * C152205 +
               (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                   C152167 * C50892) *
                  C151985 * C151967 * C132 +
              ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
                C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
                C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
                   C152167 * C50892 +
               (C50894 * C354 - C50895 * C334 - C50894 * C355 + C50889 * C370 +
                C50896 * C358 - C50897 * C336 - C50896 * C359 + C50890 * C372 +
                C50898 * C708 - C50899 * C707 - C50898 * C709 + C50891 * C710) *
                   C152167 * C152205) *
                  C151985 * C151967 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C152167 * C50892 +
                (C51227 + C51228 + C51229) * C152167 * C152205) *
                   C151985 * C152373 -
               ((C51230 + C51231 + C51232) * C152167 * C152205 +
                (C51229 + C51228 + C51227) * C152167 * C50892) *
                   C151985 * C152357 +
               ((C51232 + C51231 + C51230) * C152167 * C50892 +
                (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 +
                 C50889 * C1332 + C50896 * C1317 - C50897 * C1307 -
                 C50896 * C1318 + C50890 * C1331 + C50898 * C1315 -
                 C50899 * C1306 - C50898 * C1316 + C50891 * C1330) *
                    C152167 * C152205) *
                   C151985 * C152326) *
                  C323 +
              (((C51233 + C51234 + C51235) * C152167 * C50892 +
                (C51236 + C51237 + C51238) * C152167 * C152205) *
                   C151985 * C152357 -
               ((C51235 + C51234 + C51233) * C152167 * C152205 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C152167 * C50892) *
                   C151985 * C152373 -
               ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 +
                 C50891 * C1329 + C50896 * C1315 - C50897 * C1306 -
                 C50896 * C1316 + C50890 * C1330 + C50894 * C1317 -
                 C50895 * C1307 - C50894 * C1318 + C50889 * C1331) *
                    C152167 * C152205 +
                (C51238 + C51237 + C51236) * C152167 * C50892) *
                   C151985 * C152326) *
                  C324 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C152167 * C50892 +
                (C51239 + C51240 + C51241) * C152167 * C152205) *
                   C151985 * C152373 -
               ((C51242 + C51243 + C51244) * C152167 * C152205 +
                (C51241 + C51240 + C51239) * C152167 * C50892) *
                   C151985 * C152357 +
               ((C51244 + C51243 + C51242) * C152167 * C50892 +
                (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 +
                 C50889 * C1330 + C50896 * C1313 - C50897 * C1305 -
                 C50896 * C1314 + C50890 * C1329 + C50898 * C1668 -
                 C50899 * C1667 - C50898 * C1669 + C50891 * C1670) *
                    C152167 * C152205) *
                   C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152374 -
           ((C50898 * C1051 - C50899 * C1043 - C50898 * C1052 + C50891 * C1061 +
             C50896 * C1049 - C50897 * C1042 - C50896 * C1050 + C50890 * C1060 +
             C50894 * C1047 - C50895 * C1041 - C50894 * C1048 +
             C50889 * C1059) *
                C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152359 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C50894 * C1501 - C50895 * C1486 - C50894 * C1502 + C50889 * C1522 +
             C50896 * C1499 - C50897 * C1485 - C50896 * C1500 + C50890 * C1521 +
             C50898 * C1497 - C50899 * C1484 - C50898 * C1498 +
             C50891 * C1520) *
                C152167 * C152205) *
               C152329) *
              C151967 * C323 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C50894 * C1049 - C50895 * C1042 - C50894 * C1050 + C50889 * C1060 +
             C50896 * C1051 - C50897 * C1043 - C50896 * C1052 + C50890 * C1061 +
             C50898 * C1053 - C50899 * C1044 - C50898 * C1054 +
             C50891 * C1062) *
                C152167 * C152205) *
               C152359 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C152374 -
           ((C50898 * C1495 - C50899 * C1483 - C50898 * C1496 + C50891 * C1519 +
             C50896 * C1497 - C50897 * C1484 - C50896 * C1498 + C50890 * C1520 +
             C50894 * C1499 - C50895 * C1485 - C50894 * C1500 +
             C50889 * C1521) *
                C152167 * C152205 +
            (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
             C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
             C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                C152167 * C50892) *
               C152329) *
              C151967 * C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C152374 -
           ((C50898 * C1055 - C50899 * C1045 - C50898 * C1056 + C50891 * C1063 +
             C50896 * C1053 - C50897 * C1044 - C50896 * C1054 + C50890 * C1062 +
             C50894 * C1051 - C50895 * C1043 - C50894 * C1052 +
             C50889 * C1061) *
                C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C152359 +
           ((C50894 * C547 - C50895 * C529 - C50894 * C548 + C50889 * C565 +
             C50896 * C549 - C50897 * C530 - C50896 * C550 + C50890 * C566 +
             C50898 * C553 - C50899 * C532 - C50898 * C554 + C50891 * C568) *
                C152167 * C50892 +
            (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 + C50889 * C1520 +
             C50896 * C1495 - C50897 * C1483 - C50896 * C1496 + C50890 * C1519 +
             C50898 * C2624 - C50899 * C2623 - C50898 * C2625 +
             C50891 * C2626) *
                C152167 * C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 + C50889 * C1332 +
             C50896 * C1317 - C50897 * C1307 - C50896 * C1318 + C50890 * C1331 +
             C50898 * C1315 - C50899 * C1306 - C50898 * C1316 +
             C50891 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C1212 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C1211 -
           ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 + C50891 * C1329 +
             C50896 * C1315 - C50897 * C1306 - C50896 * C1316 + C50890 * C1330 +
             C50894 * C1317 - C50895 * C1307 - C50894 * C1318 +
             C50889 * C1331) *
                C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C51227 + C51228 + C51229) * C152167 * C152205) *
              C151985 * C1299 -
          ((C51230 + C51231 + C51232) * C152167 * C152205 +
           (C51229 + C51228 + C51227) * C152167 * C50892) *
              C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C152167 * C50892 +
           (C52601 + C52602 + C52603) * C152167 * C152205) *
              C151985 * C1301 -
          ((C52604 + C52605 + C52606) * C152167 * C152205 +
           (C52603 + C52602 + C52601) * C152167 * C50892) *
              C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C152167 * C50892 +
           (C50894 * C7737 - C50895 * C7732 - C50894 * C7738 + C50889 * C7744 +
            C50896 * C7735 - C50897 * C7731 - C50896 * C7736 + C50890 * C7743 +
            C50898 * C8276 - C50899 * C8275 - C50898 * C8277 + C50891 * C8278) *
               C152167 * C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152374 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152359 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152329) *
              C1211 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152359 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C152374 -
           ((C52885 + C52886 + C52887) * C152167 * C152205 +
            (C52881 + C52880 + C52879) * C152167 * C50892) *
               C152329) *
              C1212 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C152374 -
           ((C50898 * C2007 - C50899 * C2001 - C50898 * C2008 + C50891 * C2013 +
             C50896 * C2005 - C50897 * C2000 - C50896 * C2006 + C50890 * C2012 +
             C50894 * C2003 - C50895 * C1999 - C50894 * C2004 +
             C50889 * C2011) *
                C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C152359 +
           ((C52887 + C52886 + C52885) * C152167 * C50892 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152167 * C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C2161 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C2162 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152329) *
              C151967 * C152370 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C52219 + C52220 + C52221) * C152167 * C152205) *
               C2162 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C2161 -
           ((C50898 * C1495 - C50899 * C1483 - C50898 * C1496 + C50891 * C1519 +
             C50896 * C1497 - C50897 * C1484 - C50896 * C1498 + C50890 * C1520 +
             C50894 * C1499 - C50895 * C1485 - C50894 * C1500 +
             C50889 * C1521) *
                C152167 * C152205 +
            (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
             C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
             C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                C152167 * C50892) *
               C152329) *
              C151967 * C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C2161 -
           ((C52222 + C52223 + C52224) * C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C2162 +
           ((C50894 * C547 - C50895 * C529 - C50894 * C548 + C50889 * C565 +
             C50896 * C549 - C50897 * C530 - C50896 * C550 + C50890 * C566 +
             C50898 * C553 - C50899 * C532 - C50898 * C554 + C50891 * C568) *
                C152167 * C50892 +
            (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 + C50889 * C1520 +
             C50896 * C1495 - C50897 * C1483 - C50896 * C1496 + C50890 * C1519 +
             C50898 * C2624 - C50899 * C2623 - C50898 * C2625 +
             C50891 * C2626) *
                C152167 * C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C2161 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C2162 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152329) *
              C152373 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C2162 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C2161 -
           ((C52885 + C52886 + C52887) * C152167 * C152205 +
            (C52881 + C52880 + C52879) * C152167 * C50892) *
               C152329) *
              C152357 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C2161 -
           ((C53626 + C53627 + C53628) * C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C2162 +
           ((C52887 + C52886 + C52885) * C152167 * C50892 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152167 * C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C51227 + C51228 + C51229) * C152167 * C152205) *
              C2392 -
          ((C52216 + C52217 + C52218) * C152167 * C152205 +
           (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
            C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
            C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
               C152167 * C50892) *
              C2393 +
          ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
            C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
            C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
               C152167 * C50892 +
           (C52879 + C52880 + C52881) * C152167 * C152205) *
              C2394 -
          ((C50898 * C2903 - C50899 * C2897 - C50898 * C2904 + C50891 * C2909 +
            C50896 * C2901 - C50897 * C2896 - C50896 * C2902 + C50890 * C2908 +
            C50894 * C2899 - C50895 * C2895 - C50894 * C2900 + C50889 * C2907) *
               C152167 * C152205 +
           (C50898 * C2407 - C50899 * C2398 - C50898 * C2408 + C50891 * C2422 +
            C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
            C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424) *
               C152167 * C50892) *
              C2395 +
          ((C50894 * C2413 - C50895 * C2401 - C50894 * C2414 + C50889 * C2425 +
            C50896 * C2415 - C50897 * C2402 - C50896 * C2416 + C50890 * C2426 +
            C50898 * C2417 - C50899 * C2403 - C50898 * C2418 + C50891 * C2427) *
               C152167 * C50892 +
           (C50894 * C9391 - C50895 * C9383 - C50894 * C9392 + C50889 * C9401 +
            C50896 * C9393 - C50897 * C9384 - C50896 * C9394 + C50890 * C9402 +
            C50898 * C18125 - C50899 * C18124 - C50898 * C18126 +
            C50891 * C18127) *
               C152167 * C152205) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           (C59421 * C344 - C59422 * C329 - C59421 * C345 + C151908 * C365) *
               C152167 * C59418 +
           (C59421 * C346 - C59422 * C330 - C59421 * C347 + C151908 * C366) *
               C152167 * C59419 +
           (C59421 * C1319 - C59422 * C1308 - C59421 * C1320 +
            C151908 * C1332) *
               C152167 * C59420) *
              C151985 * C151967 * C129 -
          ((C59421 * C1317 - C59422 * C1307 - C59421 * C1318 +
            C151908 * C1331) *
               C152167 * C59420 +
           (C59421 * C348 - C59422 * C331 - C59421 * C349 + C151908 * C367) *
               C152167 * C59419 +
           (C59421 * C342 - C59422 * C328 - C59421 * C343 + C151908 * C364) *
               C152167 * C59418 +
           (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
               C152167 * C59417) *
              C151985 * C151967 * C130 +
          ((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
               C152167 * C59417 +
           (C59421 * C340 - C59422 * C327 - C59421 * C341 + C151908 * C363) *
               C152167 * C59418 +
           (C59421 * C350 - C59422 * C332 - C59421 * C351 + C151908 * C368) *
               C152167 * C59419 +
           (C59421 * C1315 - C59422 * C1306 - C59421 * C1316 +
            C151908 * C1330) *
               C152167 * C59420) *
              C151985 * C151967 * C131 -
          ((C59421 * C1313 - C59422 * C1305 - C59421 * C1314 +
            C151908 * C1329) *
               C152167 * C59420 +
           (C59421 * C352 - C59422 * C333 - C59421 * C353 + C151908 * C369) *
               C152167 * C59419 +
           (C59421 * C338 - C59422 * C326 - C59421 * C339 + C151908 * C362) *
               C152167 * C59418 +
           (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
               C152167 * C59417) *
              C151985 * C151967 * C132 +
          ((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
               C152167 * C59417 +
           (C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
               C152167 * C59418 +
           (C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
               C152167 * C59419 +
           (C59421 * C1668 - C59422 * C1667 - C59421 * C1669 +
            C151908 * C1670) *
               C152167 * C59420) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152373 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152357 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C323 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152357 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152373 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152373 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152357 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152374 -
           ((C59421 * C2003 - C59422 * C1999 - C59421 * C2004 +
             C151908 * C2011) *
                C152167 * C59420 +
            (C59421 * C1509 - C59422 * C1490 - C59421 * C1510 +
             C151908 * C1526) *
                C152167 * C59419 +
            (C59421 * C1047 - C59422 * C1041 - C59421 * C1048 +
             C151908 * C1059) *
                C152167 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152359 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            (C59421 * C1501 - C59422 * C1486 - C59421 * C1502 +
             C151908 * C1522) *
                C152167 * C59418 +
            (C59421 * C1511 - C59422 * C1491 - C59421 * C1512 +
             C151908 * C1527) *
                C152167 * C59419 +
            (C59421 * C8005 - C59422 * C7998 - C59421 * C8006 +
             C151908 * C8016) *
                C152167 * C59420) *
               C152329) *
              C151967 * C323 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            (C59421 * C1049 - C59422 * C1042 - C59421 * C1050 +
             C151908 * C1060) *
                C152167 * C59418 +
            (C59421 * C1507 - C59422 * C1489 - C59421 * C1508 +
             C151908 * C1525) *
                C152167 * C59419 +
            (C59421 * C2005 - C59422 * C2000 - C59421 * C2006 +
             C151908 * C2012) *
                C152167 * C59420) *
               C152359 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C152374 -
           ((C59421 * C8003 - C59422 * C7997 - C59421 * C8004 +
             C151908 * C8015) *
                C152167 * C59420 +
            (C59421 * C1513 - C59422 * C1492 - C59421 * C1514 +
             C151908 * C1528) *
                C152167 * C59419 +
            (C59421 * C1499 - C59422 * C1485 - C59421 * C1500 +
             C151908 * C1521) *
                C152167 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C152329) *
              C151967 * C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C152374 -
           ((C59421 * C2007 - C59422 * C2001 - C59421 * C2008 +
             C151908 * C2013) *
                C152167 * C59420 +
            (C59421 * C1505 - C59422 * C1488 - C59421 * C1506 +
             C151908 * C1524) *
                C152167 * C59419 +
            (C59421 * C1051 - C59422 * C1043 - C59421 * C1052 +
             C151908 * C1061) *
                C152167 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152359 +
           ((C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C152167 * C59417 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C152167 * C59418 +
            (C59421 * C1515 - C59422 * C1493 - C59421 * C1516 +
             C151908 * C1529) *
                C152167 * C59419 +
            (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
             C151908 * C9698) *
                C152167 * C59420) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C1211 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C1212 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152370 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C1212 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C1211 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C1211 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C1212 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
              C151985 * C1299 -
          (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
           C59654 * C59417) *
              C151985 * C1300 +
          (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
           C60608 * C59420) *
              C151985 * C1301 -
          (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
           C59656 * C59417) *
              C151985 * C1302 +
          (C59657 * C59417 + C60608 * C59418 + C60609 * C59419 +
           (C59421 * C60590 - C59422 * C60589 - C59421 * C60591 +
            C151908 * C60592) *
               C152167 * C59420) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152374 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152359 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152329) *
              C1211 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152359 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C152374 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C152329) *
              C1212 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C152374 -
           ((C59421 * C8801 - C59422 * C8799 - C59421 * C8802 +
             C151908 * C8805) *
                C152167 * C59420 +
            C60798 * C59419 + C60353 * C59418 + C60354 * C59417) *
               C152359 +
           (C60796 * C59417 + C60797 * C59418 + C60799 * C59419 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C152167 * C59420) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C2161 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C2162 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152329) *
              C151967 * C152370 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C2162 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C2161 -
           ((C59421 * C8003 - C59422 * C7997 - C59421 * C8004 +
             C151908 * C8015) *
                C152167 * C59420 +
            (C59421 * C1513 - C59422 * C1492 - C59421 * C1514 +
             C151908 * C1528) *
                C152167 * C59419 +
            (C59421 * C1499 - C59422 * C1485 - C59421 * C1500 +
             C151908 * C1521) *
                C152167 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C152329) *
              C151967 * C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C2161 -
           (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C2162 +
           ((C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C152167 * C59417 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C152167 * C59418 +
            (C59421 * C1515 - C59422 * C1493 - C59421 * C1516 +
             C151908 * C1529) *
                C152167 * C59419 +
            (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
             C151908 * C9698) *
                C152167 * C59420) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C2161 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C2162 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152329) *
              C152373 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C2162 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C2161 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C152329) *
              C152357 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C2161 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C2162 +
           (C60796 * C59417 + C60797 * C59418 + C60799 * C59419 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C152167 * C59420) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
              C2392 -
          (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
           (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
               C152167 * C59417) *
              C2393 +
          ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
               C152167 * C59417 +
           C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
              C2394 -
          ((C59421 * C10121 - C59422 * C10119 - C59421 * C10122 +
            C151908 * C10125) *
               C152167 * C59420 +
           (C59421 * C9389 - C59422 * C9382 - C59421 * C9390 +
            C151908 * C9400) *
               C152167 * C59419 +
           (C59421 * C2899 - C59422 * C2895 - C59421 * C2900 +
            C151908 * C2907) *
               C152167 * C59418 +
           (C59421 * C2411 - C59422 * C2400 - C59421 * C2412 +
            C151908 * C2424) *
               C152167 * C59417) *
              C2395 +
          ((C59421 * C2413 - C59422 * C2401 - C59421 * C2414 +
            C151908 * C2425) *
               C152167 * C59417 +
           (C59421 * C9391 - C59422 * C9383 - C59421 * C9392 +
            C151908 * C9401) *
               C152167 * C59418 +
           (C59421 * C9395 - C59422 * C9385 - C59421 * C9396 +
            C151908 * C9403) *
               C152167 * C59419 +
           (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
            C151908 * C61658) *
               C152167 * C59420) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[238] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152285 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C1211 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152285) *
               C1212 +
           (((C51232 + C51231 + C51230) * C152167 * C50892 +
             (C52601 + C52602 + C52603) * C152167 * C152205) *
                C152285 -
            ((C50898 * C2007 - C50899 * C2001 - C50898 * C2008 +
              C50891 * C2013 + C50896 * C2005 - C50897 * C2000 -
              C50896 * C2006 + C50890 * C2012 + C50894 * C2003 -
              C50895 * C1999 - C50894 * C2004 + C50889 * C2011) *
                 C152167 * C152205 +
             (C52884 + C52883 + C52882) * C152167 * C50892) *
                C152072) *
               C152326) *
              C152270 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152285) *
               C1211 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152285 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C1212 +
           (((C53413 + C53412 + C53411) * C152167 * C50892 +
             (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
              C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
              C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
              C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C53100 + C53101 + C53102) * C152167 * C152205 +
             (C51238 + C51237 + C51236) * C152167 * C50892) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152285 -
           ((C50898 * C1051 - C50899 * C1043 - C50898 * C1052 + C50891 * C1061 +
             C50896 * C1049 - C50897 * C1042 - C50896 * C1050 + C50890 * C1060 +
             C50894 * C1047 - C50895 * C1041 - C50894 * C1048 +
             C50889 * C1059) *
                C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152072) *
              C151967 * C703 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C50894 * C1049 - C50895 * C1042 - C50894 * C1050 + C50889 * C1060 +
             C50896 * C1051 - C50897 * C1043 - C50896 * C1052 + C50890 * C1061 +
             C50898 * C1053 - C50899 * C1044 - C50898 * C1054 +
             C50891 * C1062) *
                C152167 * C152205) *
               C152072 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C152285) *
              C151967 * C704 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C152285 -
           ((C50898 * C1055 - C50899 * C1045 - C50898 * C1056 + C50891 * C1063 +
             C50896 * C1053 - C50897 * C1044 - C50896 * C1054 + C50890 * C1062 +
             C50894 * C1051 - C50895 * C1043 - C50894 * C1052 +
             C50889 * C1061) *
                C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C152072) *
              C151967 * C705 +
          (((C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559 +
             C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
             C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569) *
                C152167 * C50892 +
            (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 + C50889 * C1062 +
             C50896 * C1055 - C50897 * C1045 - C50896 * C1056 + C50890 * C1063 +
             C50898 * C1057 - C50899 * C1046 - C50898 * C1058 +
             C50891 * C1064) *
                C152167 * C152205) *
               C152072 -
           ((C51677 + C51676 + C51675) * C152167 * C152205 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C152167 * C50892) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C2757 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C2758 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C2759 -
           ((C50898 * C2903 - C50899 * C2897 - C50898 * C2904 + C50891 * C2909 +
             C50896 * C2901 - C50897 * C2896 - C50896 * C2902 + C50890 * C2908 +
             C50894 * C2899 - C50895 * C2895 - C50894 * C2900 +
             C50889 * C2907) *
                C152167 * C152205 +
            (C50898 * C2407 - C50899 * C2398 - C50898 * C2408 + C50891 * C2422 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50894 * C2411 - C50895 * C2400 - C50894 * C2412 +
             C50889 * C2424) *
                C152167 * C50892) *
               C152342) *
              C151967 * C152270 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C52219 + C52220 + C52221) * C152167 * C152205) *
               C2758 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C2757 -
           ((C54495 + C54496 + C54497) * C152167 * C152205 +
            (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
             C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
             C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                C152167 * C50892) *
               C2759 +
           ((C50894 * C2409 - C50895 * C2399 - C50894 * C2410 + C50889 * C2423 +
             C50896 * C2407 - C50897 * C2398 - C50896 * C2408 + C50890 * C2422 +
             C50898 * C2405 - C50899 * C2397 - C50898 * C2406 +
             C50891 * C2421) *
                C152167 * C50892 +
            (C50894 * C2901 - C50895 * C2896 - C50894 * C2902 + C50889 * C2908 +
             C50896 * C2903 - C50897 * C2897 - C50896 * C2904 + C50890 * C2909 +
             C50898 * C2905 - C50899 * C2898 - C50898 * C2906 +
             C50891 * C2910) *
                C152167 * C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152285 -
           ((C59421 * C2003 - C59422 * C1999 - C59421 * C2004 +
             C151908 * C2011) *
                C152167 * C59420 +
            (C59421 * C1509 - C59422 * C1490 - C59421 * C1510 +
             C151908 * C1526) *
                C152167 * C59419 +
            (C59421 * C1047 - C59422 * C1041 - C59421 * C1048 +
             C151908 * C1059) *
                C152167 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C151967 * C703 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            (C59421 * C1049 - C59422 * C1042 - C59421 * C1050 +
             C151908 * C1060) *
                C152167 * C59418 +
            (C59421 * C1507 - C59422 * C1489 - C59421 * C1508 +
             C151908 * C1525) *
                C152167 * C59419 +
            (C59421 * C2005 - C59422 * C2000 - C59421 * C2006 +
             C151908 * C2012) *
                C152167 * C59420) *
               C152072 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C152285) *
              C151967 * C704 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C152285 -
           ((C59421 * C2007 - C59422 * C2001 - C59421 * C2008 +
             C151908 * C2013) *
                C152167 * C59420 +
            (C59421 * C1505 - C59422 * C1488 - C59421 * C1506 +
             C151908 * C1524) *
                C152167 * C59419 +
            (C59421 * C1051 - C59422 * C1043 - C59421 * C1052 +
             C151908 * C1061) *
                C152167 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152072) *
              C151967 * C705 +
          (((C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                C152167 * C59417 +
            (C59421 * C1053 - C59422 * C1044 - C59421 * C1054 +
             C151908 * C1062) *
                C152167 * C59418 +
            (C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
             C151908 * C1523) *
                C152167 * C59419 +
            (C59421 * C2009 - C59422 * C2002 - C59421 * C2010 +
             C151908 * C2014) *
                C152167 * C59420) *
               C152072 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152285 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C1211 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152285) *
               C1212 +
           ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
             C60608 * C59420) *
                C152285 -
            ((C59421 * C8801 - C59422 * C8799 - C59421 * C8802 +
              C151908 * C8805) *
                 C152167 * C59420 +
             C60798 * C59419 + C60353 * C59418 + C60354 * C59417) *
                C152072) *
               C152326) *
              C152270 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152285) *
               C1211 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152285 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C1212 +
           ((C60357 * C59417 + C60358 * C59418 + C61139 * C59419 +
             (C59421 * C8803 - C59422 * C8800 - C59421 * C8804 +
              C151908 * C8806) *
                 C152167 * C59420) *
                C152072 -
            (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
             C59659 * C59417) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C2757 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C2758 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C2759 -
           ((C59421 * C10121 - C59422 * C10119 - C59421 * C10122 +
             C151908 * C10125) *
                C152167 * C59420 +
            (C59421 * C9389 - C59422 * C9382 - C59421 * C9390 +
             C151908 * C9400) *
                C152167 * C59419 +
            (C59421 * C2899 - C59422 * C2895 - C59421 * C2900 +
             C151908 * C2907) *
                C152167 * C59418 +
            (C59421 * C2411 - C59422 * C2400 - C59421 * C2412 +
             C151908 * C2424) *
                C152167 * C59417) *
               C152342) *
              C151967 * C152270 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C2758 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C2757 -
           (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C2759 +
           ((C59421 * C2409 - C59422 * C2399 - C59421 * C2410 +
             C151908 * C2423) *
                C152167 * C59417 +
            (C59421 * C2901 - C59422 * C2896 - C59421 * C2902 +
             C151908 * C2908) *
                C152167 * C59418 +
            (C59421 * C9387 - C59422 * C9381 - C59421 * C9388 +
             C151908 * C9399) *
                C152167 * C59419 +
            (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
             C151908 * C10126) *
                C152167 * C59420) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[239] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152373 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152357 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 + C50889 * C1332 +
             C50896 * C1317 - C50897 * C1307 - C50896 * C1318 + C50890 * C1331 +
             C50898 * C1315 - C50899 * C1306 - C50898 * C1316 +
             C50891 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C323 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152357 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152373 -
           ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 + C50891 * C1329 +
             C50896 * C1315 - C50897 * C1306 - C50896 * C1316 + C50890 * C1330 +
             C50894 * C1317 - C50895 * C1307 - C50894 * C1318 +
             C50889 * C1331) *
                C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152326) *
              C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C152373 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152357 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C50894 * C344 - C50895 * C329 - C50894 * C345 + C50889 * C365 +
            C50896 * C342 - C50897 * C328 - C50896 * C343 + C50890 * C364 +
            C50898 * C340 - C50899 * C327 - C50898 * C341 + C50891 * C363) *
               C152167 * C152205) *
              C151985 * C151967 * C129 -
          ((C50898 * C338 - C50899 * C326 - C50898 * C339 + C50891 * C362 +
            C50896 * C340 - C50897 * C327 - C50896 * C341 + C50890 * C363 +
            C50894 * C342 - C50895 * C328 - C50894 * C343 + C50889 * C364) *
               C152167 * C152205 +
           (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
            C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
            C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
               C152167 * C50892) *
              C151985 * C151967 * C130 +
          ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
            C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
            C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
               C152167 * C50892 +
           (C50894 * C340 - C50895 * C327 - C50894 * C341 + C50889 * C363 +
            C50896 * C338 - C50897 * C326 - C50896 * C339 + C50890 * C362 +
            C50898 * C354 - C50899 * C334 - C50898 * C355 + C50891 * C370) *
               C152167 * C152205) *
              C151985 * C151967 * C131 -
          ((C50898 * C358 - C50899 * C336 - C50898 * C359 + C50891 * C372 +
            C50896 * C354 - C50897 * C334 - C50896 * C355 + C50890 * C370 +
            C50894 * C338 - C50895 * C326 - C50894 * C339 + C50889 * C362) *
               C152167 * C152205 +
           (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
            C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
            C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
               C152167 * C50892) *
              C151985 * C151967 * C132 +
          ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
            C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
            C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
               C152167 * C50892 +
           (C50894 * C354 - C50895 * C334 - C50894 * C355 + C50889 * C370 +
            C50896 * C358 - C50897 * C336 - C50896 * C359 + C50890 * C372 +
            C50898 * C708 - C50899 * C707 - C50898 * C709 + C50891 * C710) *
               C152167 * C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 + C50889 * C1332 +
             C50896 * C1317 - C50897 * C1307 - C50896 * C1318 + C50890 * C1331 +
             C50898 * C1315 - C50899 * C1306 - C50898 * C1316 +
             C50891 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C1212 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C1211 -
           ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 + C50891 * C1329 +
             C50896 * C1315 - C50897 * C1306 - C50896 * C1316 + C50890 * C1330 +
             C50894 * C1317 - C50895 * C1307 - C50894 * C1318 +
             C50889 * C1331) *
                C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C51227 + C51228 + C51229) * C152167 * C152205) *
              C151985 * C1299 -
          ((C51230 + C51231 + C51232) * C152167 * C152205 +
           (C51229 + C51228 + C51227) * C152167 * C50892) *
              C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C152167 * C50892 +
           (C52601 + C52602 + C52603) * C152167 * C152205) *
              C151985 * C1301 -
          ((C52604 + C52605 + C52606) * C152167 * C152205 +
           (C52603 + C52602 + C52601) * C152167 * C50892) *
              C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C152167 * C50892 +
           (C50894 * C7737 - C50895 * C7732 - C50894 * C7738 + C50889 * C7744 +
            C50896 * C7735 - C50897 * C7731 - C50896 * C7736 + C50890 * C7743 +
            C50898 * C8276 - C50899 * C8275 - C50898 * C8277 + C50891 * C8278) *
               C152167 * C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C2161 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C2162 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152329) *
              C151967 * C152370 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C52219 + C52220 + C52221) * C152167 * C152205) *
               C2162 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C2161 -
           ((C50898 * C1495 - C50899 * C1483 - C50898 * C1496 + C50891 * C1519 +
             C50896 * C1497 - C50897 * C1484 - C50896 * C1498 + C50890 * C1520 +
             C50894 * C1499 - C50895 * C1485 - C50894 * C1500 +
             C50889 * C1521) *
                C152167 * C152205 +
            (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
             C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
             C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                C152167 * C50892) *
               C152329) *
              C151967 * C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C2161 -
           ((C52222 + C52223 + C52224) * C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C2162 +
           ((C50894 * C547 - C50895 * C529 - C50894 * C548 + C50889 * C565 +
             C50896 * C549 - C50897 * C530 - C50896 * C550 + C50890 * C566 +
             C50898 * C553 - C50899 * C532 - C50898 * C554 + C50891 * C568) *
                C152167 * C50892 +
            (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 + C50889 * C1520 +
             C50896 * C1495 - C50897 * C1483 - C50896 * C1496 + C50890 * C1519 +
             C50898 * C2624 - C50899 * C2623 - C50898 * C2625 +
             C50891 * C2626) *
                C152167 * C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C2161 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C2162 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152329) *
              C152373 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C2162 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C2161 -
           ((C52885 + C52886 + C52887) * C152167 * C152205 +
            (C52881 + C52880 + C52879) * C152167 * C50892) *
               C152329) *
              C152357 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C2161 -
           ((C53626 + C53627 + C53628) * C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C2162 +
           ((C52887 + C52886 + C52885) * C152167 * C50892 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152167 * C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           (C59421 * C344 - C59422 * C329 - C59421 * C345 + C151908 * C365) *
               C152167 * C59418 +
           (C59421 * C346 - C59422 * C330 - C59421 * C347 + C151908 * C366) *
               C152167 * C59419 +
           (C59421 * C1319 - C59422 * C1308 - C59421 * C1320 +
            C151908 * C1332) *
               C152167 * C59420) *
              C151985 * C151967 * C129 -
          ((C59421 * C1317 - C59422 * C1307 - C59421 * C1318 +
            C151908 * C1331) *
               C152167 * C59420 +
           (C59421 * C348 - C59422 * C331 - C59421 * C349 + C151908 * C367) *
               C152167 * C59419 +
           (C59421 * C342 - C59422 * C328 - C59421 * C343 + C151908 * C364) *
               C152167 * C59418 +
           (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
               C152167 * C59417) *
              C151985 * C151967 * C130 +
          ((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
               C152167 * C59417 +
           (C59421 * C340 - C59422 * C327 - C59421 * C341 + C151908 * C363) *
               C152167 * C59418 +
           (C59421 * C350 - C59422 * C332 - C59421 * C351 + C151908 * C368) *
               C152167 * C59419 +
           (C59421 * C1315 - C59422 * C1306 - C59421 * C1316 +
            C151908 * C1330) *
               C152167 * C59420) *
              C151985 * C151967 * C131 -
          ((C59421 * C1313 - C59422 * C1305 - C59421 * C1314 +
            C151908 * C1329) *
               C152167 * C59420 +
           (C59421 * C352 - C59422 * C333 - C59421 * C353 + C151908 * C369) *
               C152167 * C59419 +
           (C59421 * C338 - C59422 * C326 - C59421 * C339 + C151908 * C362) *
               C152167 * C59418 +
           (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
               C152167 * C59417) *
              C151985 * C151967 * C132 +
          ((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
               C152167 * C59417 +
           (C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
               C152167 * C59418 +
           (C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
               C152167 * C59419 +
           (C59421 * C1668 - C59422 * C1667 - C59421 * C1669 +
            C151908 * C1670) *
               C152167 * C59420) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152373 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152357 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C323 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152357 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152373 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152373 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152357 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C1211 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C1212 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152370 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C1212 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C1211 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C1211 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C1212 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
              C151985 * C1299 -
          (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
           C59654 * C59417) *
              C151985 * C1300 +
          (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
           C60608 * C59420) *
              C151985 * C1301 -
          (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
           C59656 * C59417) *
              C151985 * C1302 +
          (C59657 * C59417 + C60608 * C59418 + C60609 * C59419 +
           (C59421 * C60590 - C59422 * C60589 - C59421 * C60591 +
            C151908 * C60592) *
               C152167 * C59420) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C2161 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C2162 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152329) *
              C151967 * C152370 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C2162 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C2161 -
           ((C59421 * C8003 - C59422 * C7997 - C59421 * C8004 +
             C151908 * C8015) *
                C152167 * C59420 +
            (C59421 * C1513 - C59422 * C1492 - C59421 * C1514 +
             C151908 * C1528) *
                C152167 * C59419 +
            (C59421 * C1499 - C59422 * C1485 - C59421 * C1500 +
             C151908 * C1521) *
                C152167 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C152329) *
              C151967 * C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C2161 -
           (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C2162 +
           ((C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C152167 * C59417 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C152167 * C59418 +
            (C59421 * C1515 - C59422 * C1493 - C59421 * C1516 +
             C151908 * C1529) *
                C152167 * C59419 +
            (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
             C151908 * C9698) *
                C152167 * C59420) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C2161 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C2162 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152329) *
              C152373 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C2162 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C2161 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C152329) *
              C152357 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C2161 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C2162 +
           (C60796 * C59417 + C60797 * C59418 + C60799 * C59419 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C152167 * C59420) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C4047 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C152284 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C4047) *
               C152030) *
              C151944 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C4047) *
               C152284 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C4047 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152030) *
              C151953 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C152167 * C50892 +
             (C51239 + C51240 + C51241) * C152167 * C152205) *
                C4047 -
            ((C52222 + C52223 + C52224) * C152167 * C152205 +
             (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
              C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
              C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                 C152167 * C50892) *
                C152072) *
               C152284 +
           (((C52224 + C52223 + C52222) * C152167 * C50892 +
             (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
              C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
              C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
              C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C51242 + C51243 + C51244) * C152167 * C152205 +
             (C51241 + C51240 + C51239) * C152167 * C50892) *
                C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C4047 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152284 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C4047) *
               C152030) *
              C151944 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C4047) *
               C152284 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C4047 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152030) *
              C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152167 * C59417 +
             C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
                C4047 -
            (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C152167 * C59417) *
                C152072) *
               C152284 +
           ((C60361 * C59417 + C60360 * C59418 + C60359 * C59419 +
             (C59421 * C8586 - C59422 * C8585 - C59421 * C8587 +
              C151908 * C8588) *
                 C152167 * C59420) *
                C152072 -
            (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
             C59662 * C59417) *
                C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[241] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152068 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152075 +
            ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
              C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
              C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                 C152167 * C50892 +
             (C52879 + C52880 + C52881) * C152167 * C152205) *
                C4719) *
               C152284 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152075 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152068 -
            ((C52885 + C52886 + C52887) * C152167 * C152205 +
             (C52881 + C52880 + C52879) * C152167 * C50892) *
                C4719) *
               C152030) *
              C3181 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152075 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152068 -
            ((C54495 + C54496 + C54497) * C152167 * C152205 +
             (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
              C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
              C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                 C152167 * C50892) *
                C4719) *
               C152284 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152068 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152075 +
            ((C54497 + C54496 + C54495) * C152167 * C50892 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152167 * C152205) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152068 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152075 +
            ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                 C152167 * C59417 +
             C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
                C4719) *
               C152284 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152075 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152068 -
            (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
             C60795 * C59417) *
                C4719) *
               C152030) *
              C3181 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152075 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152068 -
            (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
             (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                 C152167 * C59417) *
                C4719) *
               C152284 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152068 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152075 +
            (C61877 * C59417 + C61876 * C59418 + C61875 * C59419 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C152167 * C59420) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[242] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C4047 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C152373 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C4047) *
               C152357 +
           (((C51232 + C51231 + C51230) * C152167 * C50892 +
             (C52601 + C52602 + C52603) * C152167 * C152205) *
                C4047 -
            ((C53626 + C53627 + C53628) * C152167 * C152205 +
             (C52884 + C52883 + C52882) * C152167 * C50892) *
                C152072) *
               C152326) *
              C3181 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C4047) *
               C152373 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C4047 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152357 +
           (((C53413 + C53412 + C53411) * C152167 * C50892 +
             (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
              C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
              C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
              C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C53100 + C53101 + C53102) * C152167 * C152205 +
             (C51238 + C51237 + C51236) * C152167 * C50892) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C4047 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152072) *
              C151967 * C152379 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C52219 + C52220 + C52221) * C152167 * C152205) *
               C152072 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C4047) *
              C151967 * C152372 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C4047 -
           ((C52222 + C52223 + C52224) * C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C152072) *
              C151967 * C152355 +
          (((C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559 +
             C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
             C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569) *
                C152167 * C50892 +
            (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 + C50889 * C1062 +
             C50896 * C1055 - C50897 * C1045 - C50896 * C1056 + C50890 * C1063 +
             C50898 * C1057 - C50899 * C1046 - C50898 * C1058 +
             C50891 * C1064) *
                C152167 * C152205) *
               C152072 -
           ((C51677 + C51676 + C51675) * C152167 * C152205 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C152167 * C50892) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152381 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152378 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152365 -
           ((C54904 + C54905 + C54906) * C152167 * C152205 +
            (C50898 * C2407 - C50899 * C2398 - C50898 * C2408 + C50891 * C2422 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50894 * C2411 - C50895 * C2400 - C50894 * C2412 +
             C50889 * C2424) *
                C152167 * C50892) *
               C152342) *
              C151967 * C3181 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C52219 + C52220 + C52221) * C152167 * C152205) *
               C152378 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C152381 -
           ((C54495 + C54496 + C54497) * C152167 * C152205 +
            (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
             C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
             C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                C152167 * C50892) *
               C152365 +
           ((C50894 * C2409 - C50895 * C2399 - C50894 * C2410 + C50889 * C2423 +
             C50896 * C2407 - C50897 * C2398 - C50896 * C2408 + C50890 * C2422 +
             C50898 * C2405 - C50899 * C2397 - C50898 * C2406 +
             C50891 * C2421) *
                C152167 * C50892 +
            (C50894 * C2901 - C50895 * C2896 - C50894 * C2902 + C50889 * C2908 +
             C50896 * C2903 - C50897 * C2897 - C50896 * C2904 + C50890 * C2909 +
             C50898 * C2905 - C50899 * C2898 - C50898 * C2906 +
             C50891 * C2910) *
                C152167 * C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C4047 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C151967 * C152379 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C152072 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C4047) *
              C151967 * C152372 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C4047 -
           (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152072) *
              C151967 * C152355 +
          (((C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                C152167 * C59417 +
            (C59421 * C1053 - C59422 * C1044 - C59421 * C1054 +
             C151908 * C1062) *
                C152167 * C59418 +
            (C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
             C151908 * C1523) *
                C152167 * C59419 +
            (C59421 * C2009 - C59422 * C2002 - C59421 * C2010 +
             C151908 * C2014) *
                C152167 * C59420) *
               C152072 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C4047 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152373 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C4047) *
               C152357 +
           ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
             C60608 * C59420) *
                C4047 -
            (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
             C60354 * C59417) *
                C152072) *
               C152326) *
              C3181 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C4047) *
               C152373 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C4047 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152357 +
           ((C60357 * C59417 + C60358 * C59418 + C61139 * C59419 +
             (C59421 * C8803 - C59422 * C8800 - C59421 * C8804 +
              C151908 * C8806) *
                 C152167 * C59420) *
                C152072 -
            (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
             C59659 * C59417) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152381 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152378 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152365 -
           (C62163 * C59420 + C62164 * C59419 + C62165 * C59418 +
            (C59421 * C2411 - C59422 * C2400 - C59421 * C2412 +
             C151908 * C2424) *
                C152167 * C59417) *
               C152342) *
              C151967 * C3181 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C152378 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C152381 -
           (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C152365 +
           ((C59421 * C2409 - C59422 * C2399 - C59421 * C2410 +
             C151908 * C2423) *
                C152167 * C59417 +
            (C59421 * C2901 - C59422 * C2896 - C59421 * C2902 +
             C151908 * C2908) *
                C152167 * C59418 +
            (C59421 * C9387 - C59422 * C9381 - C59421 * C9388 +
             C151908 * C9399) *
                C152167 * C59419 +
            (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
             C151908 * C10126) *
                C152167 * C59420) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[243] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152068 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152075 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C4719) *
              C151967 * C151944 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C52219 + C52220 + C52221) * C152167 * C152205) *
               C152075 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C152068 -
           ((C54495 + C54496 + C54497) * C152167 * C152205 +
            (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
             C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
             C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                C152167 * C50892) *
               C4719) *
              C151967 * C151953 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C152068 -
           ((C52222 + C52223 + C52224) * C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C152075 +
           ((C50894 * C547 - C50895 * C529 - C50894 * C548 + C50889 * C565 +
             C50896 * C549 - C50897 * C530 - C50896 * C550 + C50890 * C566 +
             C50898 * C553 - C50899 * C532 - C50898 * C554 + C50891 * C568) *
                C152167 * C50892 +
            (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 + C50889 * C1520 +
             C50896 * C1495 - C50897 * C1483 - C50896 * C1496 + C50890 * C1519 +
             C50898 * C2624 - C50899 * C2623 - C50898 * C2625 +
             C50891 * C2626) *
                C152167 * C152205) *
               C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152068 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152075 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C4719) *
              C151967 * C151944 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C152075 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C152068 -
           (C61875 * C59420 + C61876 * C59419 + C61877 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C4719) *
              C151967 * C151953 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C152068 -
           (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152075 +
           ((C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C152167 * C59417 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C152167 * C59418 +
            (C59421 * C1515 - C59422 * C1493 - C59421 * C1516 +
             C151908 * C1529) *
                C152167 * C59419 +
            (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
             C151908 * C9698) *
                C152167 * C59420) *
               C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[244] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C4047 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152072) *
              C151967 * C152379 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C52219 + C52220 + C52221) * C152167 * C152205) *
               C152072 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C4047) *
              C151967 * C152372 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C4047 -
           ((C52222 + C52223 + C52224) * C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C152072) *
              C151967 * C152355 +
          (((C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559 +
             C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
             C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569) *
                C152167 * C50892 +
            (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 + C50889 * C1062 +
             C50896 * C1055 - C50897 * C1045 - C50896 * C1056 + C50890 * C1063 +
             C50898 * C1057 - C50899 * C1046 - C50898 * C1058 +
             C50891 * C1064) *
                C152167 * C152205) *
               C152072 -
           ((C51677 + C51676 + C51675) * C152167 * C152205 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C152167 * C50892) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C4047 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C152373 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C4047) *
               C152357 +
           (((C51232 + C51231 + C51230) * C152167 * C50892 +
             (C52601 + C52602 + C52603) * C152167 * C152205) *
                C4047 -
            ((C53626 + C53627 + C53628) * C152167 * C152205 +
             (C52884 + C52883 + C52882) * C152167 * C50892) *
                C152072) *
               C152326) *
              C3181 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C4047) *
               C152373 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C4047 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152357 +
           (((C53413 + C53412 + C53411) * C152167 * C50892 +
             (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
              C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
              C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
              C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C53100 + C53101 + C53102) * C152167 * C152205 +
             (C51238 + C51237 + C51236) * C152167 * C50892) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C4047 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C151967 * C152379 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
               C152072 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C4047) *
              C151967 * C152372 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C4047 -
           (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152072) *
              C151967 * C152355 +
          (((C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                C152167 * C59417 +
            (C59421 * C1053 - C59422 * C1044 - C59421 * C1054 +
             C151908 * C1062) *
                C152167 * C59418 +
            (C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
             C151908 * C1523) *
                C152167 * C59419 +
            (C59421 * C2009 - C59422 * C2002 - C59421 * C2010 +
             C151908 * C2014) *
                C152167 * C59420) *
               C152072 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C4047 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152373 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C4047) *
               C152357 +
           ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
             C60608 * C59420) *
                C4047 -
            (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
             C60354 * C59417) *
                C152072) *
               C152326) *
              C3181 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C4047) *
               C152373 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C4047 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C152357 +
           ((C60357 * C59417 + C60358 * C59418 + C61139 * C59419 +
             (C59421 * C8803 - C59422 * C8800 - C59421 * C8804 +
              C151908 * C8806) *
                 C152167 * C59420) *
                C152072 -
            (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
             C59659 * C59417) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[245] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152284 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152030) *
              C703 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152030 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152284) *
              C704 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C152284 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152030) *
              C705 +
          (((C51675 + C51676 + C51677) * C152167 * C50892 +
            (C50894 * C352 - C50895 * C333 - C50894 * C353 + C50889 * C369 +
             C50896 * C356 - C50897 * C335 - C50896 * C357 + C50890 * C371 +
             C50898 * C360 - C50899 * C337 - C50898 * C361 + C50891 * C373) *
                C152167 * C152205) *
               C151985 * C152030 -
           ((C51677 + C51676 + C51675) * C152167 * C152205 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C152167 * C50892) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C1661 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C1662 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C151985 * C1663 -
           ((C52604 + C52605 + C52606) * C152167 * C152205 +
            (C52603 + C52602 + C52601) * C152167 * C50892) *
               C151985 * C152336) *
              C152270 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C1662 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C1661 -
           ((C53100 + C53101 + C53102) * C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C1663 +
           ((C53102 + C53101 + C53100) * C152167 * C50892 +
            (C50894 * C1323 - C50895 * C1310 - C50894 * C1324 + C50889 * C1334 +
             C50896 * C1325 - C50897 * C1311 - C50896 * C1326 + C50890 * C1335 +
             C50898 * C1327 - C50899 * C1312 - C50898 * C1328 +
             C50891 * C1336) *
                C152167 * C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152284 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152030) *
              C703 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152030 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152284) *
              C704 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152284 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152030) *
              C705 +
          ((C59963 * C59417 + C59964 * C59418 + C59965 * C59419 +
            (C59421 * C1327 - C59422 * C1312 - C59421 * C1328 +
             C151908 * C1336) *
                C152167 * C59420) *
               C151985 * C152030 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C1661 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C1662 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C151985 * C1663 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C151985 * C152336) *
              C152270 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C1662 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C1661 -
           (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
            C59659 * C59417) *
               C151985 * C1663 +
           (C59660 * C59417 + C59661 * C59418 + C60937 * C59419 +
            (C59421 * C7741 - C59422 * C7734 - C59421 * C7742 +
             C151908 * C7746) *
                C152167 * C59420) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152285 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C152284 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C50894 * C1509 - C50895 * C1490 - C50894 * C1510 +
              C50889 * C1526 + C50896 * C1507 - C50897 * C1489 -
              C50896 * C1508 + C50890 * C1525 + C50898 * C1505 -
              C50899 * C1488 - C50898 * C1506 + C50891 * C1524) *
                 C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152285) *
               C152030) *
              C323 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152285) *
               C152284 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152285 -
            ((C50898 * C1503 - C50899 * C1487 - C50898 * C1504 +
              C50891 * C1523 + C50896 * C1505 - C50897 * C1488 -
              C50896 * C1506 + C50890 * C1524 + C50894 * C1507 -
              C50895 * C1489 - C50894 * C1508 + C50889 * C1525) *
                 C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C152030) *
              C324 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C152167 * C50892 +
             (C51239 + C51240 + C51241) * C152167 * C152205) *
                C152285 -
            ((C52222 + C52223 + C52224) * C152167 * C152205 +
             (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
              C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
              C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                 C152167 * C50892) *
                C152072) *
               C152284 +
           (((C52224 + C52223 + C52222) * C152167 * C50892 +
             (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
              C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
              C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
              C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                 C152167 * C152205) *
                C152072 -
            ((C51242 + C51243 + C51244) * C152167 * C152205 +
             (C51241 + C51240 + C51239) * C152167 * C50892) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152285 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152072) *
              C1661 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152072 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C152285) *
              C1662 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C152285 -
           ((C53626 + C53627 + C53628) * C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C152072) *
              C1663 +
          (((C53628 + C53627 + C53626) * C152167 * C50892 +
            (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
             C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
             C50898 * C8586 - C50899 * C8585 - C50898 * C8587 +
             C50891 * C8588) *
                C152167 * C152205) *
               C152072 -
           ((C52604 + C52605 + C52606) * C152167 * C152205 +
            (C52603 + C52602 + C52601) * C152167 * C50892) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152285 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C152284 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             (C59421 * C8009 - C59422 * C8000 - C59421 * C8010 +
              C151908 * C8018) *
                 C152167 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152285) *
               C152030) *
              C323 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152285) *
               C152284 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152285 -
            ((C59421 * C8007 - C59422 * C7999 - C59421 * C8008 +
              C151908 * C8017) *
                 C152167 * C59420 +
             C60358 * C59419 + C60357 * C59418 + C60356 * C59417) *
                C152072) *
               C152030) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152167 * C59417 +
             C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
                C152285 -
            (C60359 * C59420 + C60360 * C59419 + C60361 * C59418 +
             (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                 C152167 * C59417) *
                C152072) *
               C152284 +
           ((C60361 * C59417 + C60360 * C59418 + C60359 * C59419 +
             (C59421 * C8586 - C59422 * C8585 - C59421 * C8587 +
              C151908 * C8588) *
                 C152167 * C59420) *
                C152072 -
            (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
             C59662 * C59417) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152285 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C1661 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152072 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C152285) *
              C1662 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C152285 -
           (C61281 * C59420 + C60798 * C59419 + C60353 * C59418 +
            C60354 * C59417) *
               C152072) *
              C1663 +
          ((C60353 * C59417 + C60798 * C59418 + C61281 * C59419 +
            (C59421 * C61270 - C59422 * C61269 - C59421 * C61271 +
             C151908 * C61272) *
                C152167 * C59420) *
               C152072 -
           (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
            C59656 * C59417) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[247] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152373 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152357 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 + C50889 * C1332 +
             C50896 * C1317 - C50897 * C1307 - C50896 * C1318 + C50890 * C1331 +
             C50898 * C1315 - C50899 * C1306 - C50898 * C1316 +
             C50891 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C323 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152357 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152373 -
           ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 + C50891 * C1329 +
             C50896 * C1315 - C50897 * C1306 - C50896 * C1316 + C50890 * C1330 +
             C50894 * C1317 - C50895 * C1307 - C50894 * C1318 +
             C50889 * C1331) *
                C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152326) *
              C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C152373 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152357 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C50894 * C344 - C50895 * C329 - C50894 * C345 + C50889 * C365 +
            C50896 * C342 - C50897 * C328 - C50896 * C343 + C50890 * C364 +
            C50898 * C340 - C50899 * C327 - C50898 * C341 + C50891 * C363) *
               C152167 * C152205) *
              C151985 * C151967 * C129 -
          ((C50898 * C338 - C50899 * C326 - C50898 * C339 + C50891 * C362 +
            C50896 * C340 - C50897 * C327 - C50896 * C341 + C50890 * C363 +
            C50894 * C342 - C50895 * C328 - C50894 * C343 + C50889 * C364) *
               C152167 * C152205 +
           (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
            C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
            C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
               C152167 * C50892) *
              C151985 * C151967 * C130 +
          ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
            C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
            C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
               C152167 * C50892 +
           (C50894 * C340 - C50895 * C327 - C50894 * C341 + C50889 * C363 +
            C50896 * C338 - C50897 * C326 - C50896 * C339 + C50890 * C362 +
            C50898 * C354 - C50899 * C334 - C50898 * C355 + C50891 * C370) *
               C152167 * C152205) *
              C151985 * C151967 * C131 -
          ((C50898 * C358 - C50899 * C336 - C50898 * C359 + C50891 * C372 +
            C50896 * C354 - C50897 * C334 - C50896 * C355 + C50890 * C370 +
            C50894 * C338 - C50895 * C326 - C50894 * C339 + C50889 * C362) *
               C152167 * C152205 +
           (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
            C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
            C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
               C152167 * C50892) *
              C151985 * C151967 * C132 +
          ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
            C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
            C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
               C152167 * C50892 +
           (C50894 * C354 - C50895 * C334 - C50894 * C355 + C50889 * C370 +
            C50896 * C358 - C50897 * C336 - C50896 * C359 + C50890 * C372 +
            C50898 * C708 - C50899 * C707 - C50898 * C709 + C50891 * C710) *
               C152167 * C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152374 -
           ((C50898 * C1051 - C50899 * C1043 - C50898 * C1052 + C50891 * C1061 +
             C50896 * C1049 - C50897 * C1042 - C50896 * C1050 + C50890 * C1060 +
             C50894 * C1047 - C50895 * C1041 - C50894 * C1048 +
             C50889 * C1059) *
                C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152359 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C50894 * C1501 - C50895 * C1486 - C50894 * C1502 + C50889 * C1522 +
             C50896 * C1499 - C50897 * C1485 - C50896 * C1500 + C50890 * C1521 +
             C50898 * C1497 - C50899 * C1484 - C50898 * C1498 +
             C50891 * C1520) *
                C152167 * C152205) *
               C152329) *
              C151967 * C323 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C50894 * C1049 - C50895 * C1042 - C50894 * C1050 + C50889 * C1060 +
             C50896 * C1051 - C50897 * C1043 - C50896 * C1052 + C50890 * C1061 +
             C50898 * C1053 - C50899 * C1044 - C50898 * C1054 +
             C50891 * C1062) *
                C152167 * C152205) *
               C152359 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C152374 -
           ((C50898 * C1495 - C50899 * C1483 - C50898 * C1496 + C50891 * C1519 +
             C50896 * C1497 - C50897 * C1484 - C50896 * C1498 + C50890 * C1520 +
             C50894 * C1499 - C50895 * C1485 - C50894 * C1500 +
             C50889 * C1521) *
                C152167 * C152205 +
            (C50898 * C549 - C50899 * C530 - C50898 * C550 + C50891 * C566 +
             C50896 * C547 - C50897 * C529 - C50896 * C548 + C50890 * C565 +
             C50894 * C545 - C50895 * C528 - C50894 * C546 + C50889 * C564) *
                C152167 * C50892) *
               C152329) *
              C151967 * C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C152374 -
           ((C50898 * C1055 - C50899 * C1045 - C50898 * C1056 + C50891 * C1063 +
             C50896 * C1053 - C50897 * C1044 - C50896 * C1054 + C50890 * C1062 +
             C50894 * C1051 - C50895 * C1043 - C50894 * C1052 +
             C50889 * C1061) *
                C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C152359 +
           ((C50894 * C547 - C50895 * C529 - C50894 * C548 + C50889 * C565 +
             C50896 * C549 - C50897 * C530 - C50896 * C550 + C50890 * C566 +
             C50898 * C553 - C50899 * C532 - C50898 * C554 + C50891 * C568) *
                C152167 * C50892 +
            (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 + C50889 * C1520 +
             C50896 * C1495 - C50897 * C1483 - C50896 * C1496 + C50890 * C1519 +
             C50898 * C2624 - C50899 * C2623 - C50898 * C2625 +
             C50891 * C2626) *
                C152167 * C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 + C50889 * C1332 +
             C50896 * C1317 - C50897 * C1307 - C50896 * C1318 + C50890 * C1331 +
             C50898 * C1315 - C50899 * C1306 - C50898 * C1316 +
             C50891 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C1212 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C1211 -
           ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 + C50891 * C1329 +
             C50896 * C1315 - C50897 * C1306 - C50896 * C1316 + C50890 * C1330 +
             C50894 * C1317 - C50895 * C1307 - C50894 * C1318 +
             C50889 * C1331) *
                C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C51227 + C51228 + C51229) * C152167 * C152205) *
              C151985 * C1299 -
          ((C51230 + C51231 + C51232) * C152167 * C152205 +
           (C51229 + C51228 + C51227) * C152167 * C50892) *
              C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C152167 * C50892 +
           (C52601 + C52602 + C52603) * C152167 * C152205) *
              C151985 * C1301 -
          ((C52604 + C52605 + C52606) * C152167 * C152205 +
           (C52603 + C52602 + C52601) * C152167 * C50892) *
              C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C152167 * C50892 +
           (C50894 * C7737 - C50895 * C7732 - C50894 * C7738 + C50889 * C7744 +
            C50896 * C7735 - C50897 * C7731 - C50896 * C7736 + C50890 * C7743 +
            C50898 * C8276 - C50899 * C8275 - C50898 * C8277 + C50891 * C8278) *
               C152167 * C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152374 -
           ((C52216 + C52217 + C52218) * C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152359 +
           ((C50894 * C543 - C50895 * C527 - C50894 * C544 + C50889 * C563 +
             C50896 * C545 - C50897 * C528 - C50896 * C546 + C50890 * C564 +
             C50898 * C547 - C50899 * C529 - C50898 * C548 + C50891 * C565) *
                C152167 * C50892 +
            (C52879 + C52880 + C52881) * C152167 * C152205) *
               C152329) *
              C1211 +
          (((C52218 + C52217 + C52216) * C152167 * C50892 +
            (C52882 + C52883 + C52884) * C152167 * C152205) *
               C152359 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C152374 -
           ((C52885 + C52886 + C52887) * C152167 * C152205 +
            (C52881 + C52880 + C52879) * C152167 * C50892) *
               C152329) *
              C1212 +
          (((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C52601 + C52602 + C52603) * C152167 * C152205) *
               C152374 -
           ((C50898 * C2007 - C50899 * C2001 - C50898 * C2008 + C50891 * C2013 +
             C50896 * C2005 - C50897 * C2000 - C50896 * C2006 + C50890 * C2012 +
             C50894 * C2003 - C50895 * C1999 - C50894 * C2004 +
             C50889 * C2011) *
                C152167 * C152205 +
            (C52884 + C52883 + C52882) * C152167 * C50892) *
               C152359 +
           ((C52887 + C52886 + C52885) * C152167 * C50892 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152167 * C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           (C59421 * C344 - C59422 * C329 - C59421 * C345 + C151908 * C365) *
               C152167 * C59418 +
           (C59421 * C346 - C59422 * C330 - C59421 * C347 + C151908 * C366) *
               C152167 * C59419 +
           (C59421 * C1319 - C59422 * C1308 - C59421 * C1320 +
            C151908 * C1332) *
               C152167 * C59420) *
              C151985 * C151967 * C129 -
          ((C59421 * C1317 - C59422 * C1307 - C59421 * C1318 +
            C151908 * C1331) *
               C152167 * C59420 +
           (C59421 * C348 - C59422 * C331 - C59421 * C349 + C151908 * C367) *
               C152167 * C59419 +
           (C59421 * C342 - C59422 * C328 - C59421 * C343 + C151908 * C364) *
               C152167 * C59418 +
           (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
               C152167 * C59417) *
              C151985 * C151967 * C130 +
          ((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
               C152167 * C59417 +
           (C59421 * C340 - C59422 * C327 - C59421 * C341 + C151908 * C363) *
               C152167 * C59418 +
           (C59421 * C350 - C59422 * C332 - C59421 * C351 + C151908 * C368) *
               C152167 * C59419 +
           (C59421 * C1315 - C59422 * C1306 - C59421 * C1316 +
            C151908 * C1330) *
               C152167 * C59420) *
              C151985 * C151967 * C131 -
          ((C59421 * C1313 - C59422 * C1305 - C59421 * C1314 +
            C151908 * C1329) *
               C152167 * C59420 +
           (C59421 * C352 - C59422 * C333 - C59421 * C353 + C151908 * C369) *
               C152167 * C59419 +
           (C59421 * C338 - C59422 * C326 - C59421 * C339 + C151908 * C362) *
               C152167 * C59418 +
           (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
               C152167 * C59417) *
              C151985 * C151967 * C132 +
          ((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
               C152167 * C59417 +
           (C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
               C152167 * C59418 +
           (C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
               C152167 * C59419 +
           (C59421 * C1668 - C59422 * C1667 - C59421 * C1669 +
            C151908 * C1670) *
               C152167 * C59420) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152373 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152357 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C323 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152357 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152373 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152373 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152357 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152374 -
           ((C59421 * C2003 - C59422 * C1999 - C59421 * C2004 +
             C151908 * C2011) *
                C152167 * C59420 +
            (C59421 * C1509 - C59422 * C1490 - C59421 * C1510 +
             C151908 * C1526) *
                C152167 * C59419 +
            (C59421 * C1047 - C59422 * C1041 - C59421 * C1048 +
             C151908 * C1059) *
                C152167 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152359 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            (C59421 * C1501 - C59422 * C1486 - C59421 * C1502 +
             C151908 * C1522) *
                C152167 * C59418 +
            (C59421 * C1511 - C59422 * C1491 - C59421 * C1512 +
             C151908 * C1527) *
                C152167 * C59419 +
            (C59421 * C8005 - C59422 * C7998 - C59421 * C8006 +
             C151908 * C8016) *
                C152167 * C59420) *
               C152329) *
              C151967 * C323 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            (C59421 * C1049 - C59422 * C1042 - C59421 * C1050 +
             C151908 * C1060) *
                C152167 * C59418 +
            (C59421 * C1507 - C59422 * C1489 - C59421 * C1508 +
             C151908 * C1525) *
                C152167 * C59419 +
            (C59421 * C2005 - C59422 * C2000 - C59421 * C2006 +
             C151908 * C2012) *
                C152167 * C59420) *
               C152359 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C152374 -
           ((C59421 * C8003 - C59422 * C7997 - C59421 * C8004 +
             C151908 * C8015) *
                C152167 * C59420 +
            (C59421 * C1513 - C59422 * C1492 - C59421 * C1514 +
             C151908 * C1528) *
                C152167 * C59419 +
            (C59421 * C1499 - C59422 * C1485 - C59421 * C1500 +
             C151908 * C1521) *
                C152167 * C59418 +
            (C59421 * C545 - C59422 * C528 - C59421 * C546 + C151908 * C564) *
                C152167 * C59417) *
               C152329) *
              C151967 * C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C152374 -
           ((C59421 * C2007 - C59422 * C2001 - C59421 * C2008 +
             C151908 * C2013) *
                C152167 * C59420 +
            (C59421 * C1505 - C59422 * C1488 - C59421 * C1506 +
             C151908 * C1524) *
                C152167 * C59419 +
            (C59421 * C1051 - C59422 * C1043 - C59421 * C1052 +
             C151908 * C1061) *
                C152167 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152359 +
           ((C59421 * C547 - C59422 * C529 - C59421 * C548 + C151908 * C565) *
                C152167 * C59417 +
            (C59421 * C1497 - C59422 * C1484 - C59421 * C1498 +
             C151908 * C1520) *
                C152167 * C59418 +
            (C59421 * C1515 - C59422 * C1493 - C59421 * C1516 +
             C151908 * C1529) *
                C152167 * C59419 +
            (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
             C151908 * C9698) *
                C152167 * C59420) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C1211 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C1212 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152370 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C1212 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C1211 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C1211 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C1212 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
              C151985 * C1299 -
          (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
           C59654 * C59417) *
              C151985 * C1300 +
          (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
           C60608 * C59420) *
              C151985 * C1301 -
          (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
           C59656 * C59417) *
              C151985 * C1302 +
          (C59657 * C59417 + C60608 * C59418 + C60609 * C59419 +
           (C59421 * C60590 - C59422 * C60589 - C59421 * C60591 +
            C151908 * C60592) *
               C152167 * C59420) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152374 -
           (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152359 +
           ((C59421 * C543 - C59422 * C527 - C59421 * C544 + C151908 * C563) *
                C152167 * C59417 +
            C60795 * C59418 + C60796 * C59419 + C60797 * C59420) *
               C152329) *
              C1211 +
          ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
            C60798 * C59420) *
               C152359 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C152374 -
           (C60799 * C59420 + C60797 * C59419 + C60796 * C59418 +
            C60795 * C59417) *
               C152329) *
              C1212 +
          ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            C60608 * C59420) *
               C152374 -
           ((C59421 * C8801 - C59422 * C8799 - C59421 * C8802 +
             C151908 * C8805) *
                C152167 * C59420 +
            C60798 * C59419 + C60353 * C59418 + C60354 * C59417) *
               C152359 +
           (C60796 * C59417 + C60797 * C59418 + C60799 * C59419 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C152167 * C59420) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[248] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C152285 -
           ((C50898 * C1051 - C50899 * C1043 - C50898 * C1052 + C50891 * C1061 +
             C50896 * C1049 - C50897 * C1042 - C50896 * C1050 + C50890 * C1060 +
             C50894 * C1047 - C50895 * C1041 - C50894 * C1048 +
             C50889 * C1059) *
                C152167 * C152205 +
            (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                C152167 * C50892) *
               C152072) *
              C151967 * C703 +
          (((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                C152167 * C50892 +
            (C50894 * C1049 - C50895 * C1042 - C50894 * C1050 + C50889 * C1060 +
             C50896 * C1051 - C50897 * C1043 - C50896 * C1052 + C50890 * C1061 +
             C50898 * C1053 - C50899 * C1044 - C50898 * C1054 +
             C50891 * C1062) *
                C152167 * C152205) *
               C152072 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C152285) *
              C151967 * C704 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C152285 -
           ((C50898 * C1055 - C50899 * C1045 - C50898 * C1056 + C50891 * C1063 +
             C50896 * C1053 - C50897 * C1044 - C50896 * C1054 + C50890 * C1062 +
             C50894 * C1051 - C50895 * C1043 - C50894 * C1052 +
             C50889 * C1061) *
                C152167 * C152205 +
            (C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560) *
                C152167 * C50892) *
               C152072) *
              C151967 * C705 +
          (((C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559 +
             C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
             C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569) *
                C152167 * C50892 +
            (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 + C50889 * C1062 +
             C50896 * C1055 - C50897 * C1045 - C50896 * C1056 + C50890 * C1063 +
             C50898 * C1057 - C50899 * C1046 - C50898 * C1058 +
             C50891 * C1064) *
                C152167 * C152205) *
               C152072 -
           ((C51677 + C51676 + C51675) * C152167 * C152205 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C152167 * C50892) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C152167 * C50892 +
             (C51227 + C51228 + C51229) * C152167 * C152205) *
                C152285 -
            ((C52216 + C52217 + C52218) * C152167 * C152205 +
             (C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560 +
              C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
              C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562) *
                 C152167 * C50892) *
                C152072) *
               C1211 +
           (((C52218 + C52217 + C52216) * C152167 * C50892 +
             (C52882 + C52883 + C52884) * C152167 * C152205) *
                C152072 -
            ((C51230 + C51231 + C51232) * C152167 * C152205 +
             (C51229 + C51228 + C51227) * C152167 * C50892) *
                C152285) *
               C1212 +
           (((C51232 + C51231 + C51230) * C152167 * C50892 +
             (C52601 + C52602 + C52603) * C152167 * C152205) *
                C152285 -
            ((C50898 * C2007 - C50899 * C2001 - C50898 * C2008 +
              C50891 * C2013 + C50896 * C2005 - C50897 * C2000 -
              C50896 * C2006 + C50890 * C2012 + C50894 * C2003 -
              C50895 * C1999 - C50894 * C2004 + C50889 * C2011) *
                 C152167 * C152205 +
             (C52884 + C52883 + C52882) * C152167 * C50892) *
                C152072) *
               C152326) *
              C152270 +
          ((((C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561 +
              C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
              C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559) *
                 C152167 * C50892 +
             (C52219 + C52220 + C52221) * C152167 * C152205) *
                C152072 -
            ((C51235 + C51234 + C51233) * C152167 * C152205 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C152167 * C50892) *
                C152285) *
               C1211 +
           (((C51233 + C51234 + C51235) * C152167 * C50892 +
             (C51236 + C51237 + C51238) * C152167 * C152205) *
                C152285 -
            ((C53411 + C53412 + C53413) * C152167 * C152205 +
             (C52221 + C52220 + C52219) * C152167 * C50892) *
                C152072) *
               C1212 +
           (((C53413 + C53412 + C53411) * C152167 * C50892 +
             (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
              C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
              C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
              C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                 C152167 * C152205) *
                C152072 -
            ((C53100 + C53101 + C53102) * C152167 * C152205 +
             (C51238 + C51237 + C51236) * C152167 * C50892) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C152285 -
           ((C59421 * C2003 - C59422 * C1999 - C59421 * C2004 +
             C151908 * C2011) *
                C152167 * C59420 +
            (C59421 * C1509 - C59422 * C1490 - C59421 * C1510 +
             C151908 * C1526) *
                C152167 * C59419 +
            (C59421 * C1047 - C59422 * C1041 - C59421 * C1048 +
             C151908 * C1059) *
                C152167 * C59418 +
            (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                C152167 * C59417) *
               C152072) *
              C151967 * C703 +
          (((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                C152167 * C59417 +
            (C59421 * C1049 - C59422 * C1042 - C59421 * C1050 +
             C151908 * C1060) *
                C152167 * C59418 +
            (C59421 * C1507 - C59422 * C1489 - C59421 * C1508 +
             C151908 * C1525) *
                C152167 * C59419 +
            (C59421 * C2005 - C59422 * C2000 - C59421 * C2006 +
             C151908 * C2012) *
                C152167 * C59420) *
               C152072 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C152285) *
              C151967 * C704 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C152285 -
           ((C59421 * C2007 - C59422 * C2001 - C59421 * C2008 +
             C151908 * C2013) *
                C152167 * C59420 +
            (C59421 * C1505 - C59422 * C1488 - C59421 * C1506 +
             C151908 * C1524) *
                C152167 * C59419 +
            (C59421 * C1051 - C59422 * C1043 - C59421 * C1052 +
             C151908 * C1061) *
                C152167 * C59418 +
            (C59421 * C537 - C59422 * C524 - C59421 * C538 + C151908 * C560) *
                C152167 * C59417) *
               C152072) *
              C151967 * C705 +
          (((C59421 * C535 - C59422 * C523 - C59421 * C536 + C151908 * C559) *
                C152167 * C59417 +
            (C59421 * C1053 - C59422 * C1044 - C59421 * C1054 +
             C151908 * C1062) *
                C152167 * C59418 +
            (C59421 * C1503 - C59422 * C1487 - C59421 * C1504 +
             C151908 * C1523) *
                C152167 * C59419 +
            (C59421 * C2009 - C59422 * C2002 - C59421 * C2010 +
             C151908 * C2014) *
                C152167 * C59420) *
               C152072 -
           (C59965 * C59420 + C59964 * C59419 + C59963 * C59418 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152167 * C59417) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152167 * C59417 +
             C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
                C152285 -
            (C60353 * C59420 + C60354 * C59419 + C60355 * C59418 +
             (C59421 * C541 - C59422 * C526 - C59421 * C542 + C151908 * C562) *
                 C152167 * C59417) *
                C152072) *
               C1211 +
           ((C60355 * C59417 + C60354 * C59418 + C60353 * C59419 +
             C60798 * C59420) *
                C152072 -
            (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
             C59654 * C59417) *
                C152285) *
               C1212 +
           ((C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
             C60608 * C59420) *
                C152285 -
            ((C59421 * C8801 - C59422 * C8799 - C59421 * C8802 +
              C151908 * C8805) *
                 C152167 * C59420 +
             C60798 * C59419 + C60353 * C59418 + C60354 * C59417) *
                C152072) *
               C152326) *
              C152270 +
          ((((C59421 * C539 - C59422 * C525 - C59421 * C540 + C151908 * C561) *
                 C152167 * C59417 +
             C60356 * C59418 + C60357 * C59419 + C60358 * C59420) *
                C152072 -
            (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152167 * C59417) *
                C152285) *
               C1211 +
           ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
             C59661 * C59420) *
                C152285 -
            (C61139 * C59420 + C60358 * C59419 + C60357 * C59418 +
             C60356 * C59417) *
                C152072) *
               C1212 +
           ((C60357 * C59417 + C60358 * C59418 + C61139 * C59419 +
             (C59421 * C8803 - C59422 * C8800 - C59421 * C8804 +
              C151908 * C8806) *
                 C152167 * C59420) *
                C152072 -
            (C60937 * C59420 + C59661 * C59419 + C59660 * C59418 +
             C59659 * C59417) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[249] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C50894 * C344 - C50895 * C329 - C50894 * C345 + C50889 * C365 +
            C50896 * C342 - C50897 * C328 - C50896 * C343 + C50890 * C364 +
            C50898 * C340 - C50899 * C327 - C50898 * C341 + C50891 * C363) *
               C152167 * C152205) *
              C151985 * C151967 * C129 -
          ((C50898 * C338 - C50899 * C326 - C50898 * C339 + C50891 * C362 +
            C50896 * C340 - C50897 * C327 - C50896 * C341 + C50890 * C363 +
            C50894 * C342 - C50895 * C328 - C50894 * C343 + C50889 * C364) *
               C152167 * C152205 +
           (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
            C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
            C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
               C152167 * C50892) *
              C151985 * C151967 * C130 +
          ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
            C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
            C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
               C152167 * C50892 +
           (C50894 * C340 - C50895 * C327 - C50894 * C341 + C50889 * C363 +
            C50896 * C338 - C50897 * C326 - C50896 * C339 + C50890 * C362 +
            C50898 * C354 - C50899 * C334 - C50898 * C355 + C50891 * C370) *
               C152167 * C152205) *
              C151985 * C151967 * C131 -
          ((C50898 * C358 - C50899 * C336 - C50898 * C359 + C50891 * C372 +
            C50896 * C354 - C50897 * C334 - C50896 * C355 + C50890 * C370 +
            C50894 * C338 - C50895 * C326 - C50894 * C339 + C50889 * C362) *
               C152167 * C152205 +
           (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
            C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
            C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
               C152167 * C50892) *
              C151985 * C151967 * C132 +
          ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
            C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
            C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
               C152167 * C50892 +
           (C50894 * C354 - C50895 * C334 - C50894 * C355 + C50889 * C370 +
            C50896 * C358 - C50897 * C336 - C50896 * C359 + C50890 * C372 +
            C50898 * C708 - C50899 * C707 - C50898 * C709 + C50891 * C710) *
               C152167 * C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C152373 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C152357 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 + C50889 * C1332 +
             C50896 * C1317 - C50897 * C1307 - C50896 * C1318 + C50890 * C1331 +
             C50898 * C1315 - C50899 * C1306 - C50898 * C1316 +
             C50891 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C323 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C152357 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C152373 -
           ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 + C50891 * C1329 +
             C50896 * C1315 - C50897 * C1306 - C50896 * C1316 + C50890 * C1330 +
             C50894 * C1317 - C50895 * C1307 - C50894 * C1318 +
             C50889 * C1331) *
                C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152326) *
              C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C152373 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C152357 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C152167 * C50892 +
            (C51227 + C51228 + C51229) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51230 + C51231 + C51232) * C152167 * C152205 +
            (C51229 + C51228 + C51227) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C152167 * C50892 +
            (C50894 * C1319 - C50895 * C1308 - C50894 * C1320 + C50889 * C1332 +
             C50896 * C1317 - C50897 * C1307 - C50896 * C1318 + C50890 * C1331 +
             C50898 * C1315 - C50899 * C1306 - C50898 * C1316 +
             C50891 * C1330) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C152167 * C50892 +
            (C51236 + C51237 + C51238) * C152167 * C152205) *
               C151985 * C1212 -
           ((C51235 + C51234 + C51233) * C152167 * C152205 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C152167 * C50892) *
               C151985 * C1211 -
           ((C50898 * C1313 - C50899 * C1305 - C50898 * C1314 + C50891 * C1329 +
             C50896 * C1315 - C50897 * C1306 - C50896 * C1316 + C50890 * C1330 +
             C50894 * C1317 - C50895 * C1307 - C50894 * C1318 +
             C50889 * C1331) *
                C152167 * C152205 +
            (C51238 + C51237 + C51236) * C152167 * C50892) *
               C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C152167 * C50892 +
            (C51239 + C51240 + C51241) * C152167 * C152205) *
               C151985 * C1211 -
           ((C51242 + C51243 + C51244) * C152167 * C152205 +
            (C51241 + C51240 + C51239) * C152167 * C50892) *
               C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C152167 * C50892 +
            (C50894 * C1315 - C50895 * C1306 - C50894 * C1316 + C50889 * C1330 +
             C50896 * C1313 - C50897 * C1305 - C50896 * C1314 + C50890 * C1329 +
             C50898 * C1668 - C50899 * C1667 - C50898 * C1669 +
             C50891 * C1670) *
                C152167 * C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C152167 * C50892 +
           (C51227 + C51228 + C51229) * C152167 * C152205) *
              C151985 * C1299 -
          ((C51230 + C51231 + C51232) * C152167 * C152205 +
           (C51229 + C51228 + C51227) * C152167 * C50892) *
              C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C152167 * C50892 +
           (C52601 + C52602 + C52603) * C152167 * C152205) *
              C151985 * C1301 -
          ((C52604 + C52605 + C52606) * C152167 * C152205 +
           (C52603 + C52602 + C52601) * C152167 * C50892) *
              C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C152167 * C50892 +
           (C50894 * C7737 - C50895 * C7732 - C50894 * C7738 + C50889 * C7744 +
            C50896 * C7735 - C50897 * C7731 - C50896 * C7736 + C50890 * C7743 +
            C50898 * C8276 - C50899 * C8275 - C50898 * C8277 + C50891 * C8278) *
               C152167 * C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           (C59421 * C344 - C59422 * C329 - C59421 * C345 + C151908 * C365) *
               C152167 * C59418 +
           (C59421 * C346 - C59422 * C330 - C59421 * C347 + C151908 * C366) *
               C152167 * C59419 +
           (C59421 * C1319 - C59422 * C1308 - C59421 * C1320 +
            C151908 * C1332) *
               C152167 * C59420) *
              C151985 * C151967 * C129 -
          ((C59421 * C1317 - C59422 * C1307 - C59421 * C1318 +
            C151908 * C1331) *
               C152167 * C59420 +
           (C59421 * C348 - C59422 * C331 - C59421 * C349 + C151908 * C367) *
               C152167 * C59419 +
           (C59421 * C342 - C59422 * C328 - C59421 * C343 + C151908 * C364) *
               C152167 * C59418 +
           (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
               C152167 * C59417) *
              C151985 * C151967 * C130 +
          ((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
               C152167 * C59417 +
           (C59421 * C340 - C59422 * C327 - C59421 * C341 + C151908 * C363) *
               C152167 * C59418 +
           (C59421 * C350 - C59422 * C332 - C59421 * C351 + C151908 * C368) *
               C152167 * C59419 +
           (C59421 * C1315 - C59422 * C1306 - C59421 * C1316 +
            C151908 * C1330) *
               C152167 * C59420) *
              C151985 * C151967 * C131 -
          ((C59421 * C1313 - C59422 * C1305 - C59421 * C1314 +
            C151908 * C1329) *
               C152167 * C59420 +
           (C59421 * C352 - C59422 * C333 - C59421 * C353 + C151908 * C369) *
               C152167 * C59419 +
           (C59421 * C338 - C59422 * C326 - C59421 * C339 + C151908 * C362) *
               C152167 * C59418 +
           (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
               C152167 * C59417) *
              C151985 * C151967 * C132 +
          ((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
               C152167 * C59417 +
           (C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
               C152167 * C59418 +
           (C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
               C152167 * C59419 +
           (C59421 * C1668 - C59422 * C1667 - C59421 * C1669 +
            C151908 * C1670) *
               C152167 * C59420) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C152373 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C152357 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C323 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C152357 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C152373 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C152373 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C152357 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152167 * C59417 +
            C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
               C151985 * C1211 -
           (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
            C59654 * C59417) *
               C151985 * C1212 +
           (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
            (C59421 * C7737 - C59422 * C7732 - C59421 * C7738 +
             C151908 * C7744) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152370 +
          ((C59658 * C59417 + C59659 * C59418 + C59660 * C59419 +
            C59661 * C59420) *
               C151985 * C1212 -
           (C59660 * C59420 + C59659 * C59419 + C59658 * C59418 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152167 * C59417) *
               C151985 * C1211 -
           ((C59421 * C7735 - C59422 * C7731 - C59421 * C7736 +
             C151908 * C7743) *
                C152167 * C59420 +
            C59661 * C59419 + C59660 * C59418 + C59659 * C59417) *
               C151985 * C152326) *
              C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152167 * C59417 +
            C59662 * C59418 + C59663 * C59419 + C59664 * C59420) *
               C151985 * C1211 -
           (C59665 * C59420 + C59664 * C59419 + C59663 * C59418 +
            C59662 * C59417) *
               C151985 * C1212 +
           (C59663 * C59417 + C59664 * C59418 + C59665 * C59419 +
            (C59421 * C8276 - C59422 * C8275 - C59421 * C8277 +
             C151908 * C8278) *
                C152167 * C59420) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C152167 * C59417 +
           C59654 * C59418 + C59655 * C59419 + C59656 * C59420) *
              C151985 * C1299 -
          (C59657 * C59420 + C59656 * C59419 + C59655 * C59418 +
           C59654 * C59417) *
              C151985 * C1300 +
          (C59655 * C59417 + C59656 * C59418 + C59657 * C59419 +
           C60608 * C59420) *
              C151985 * C1301 -
          (C60609 * C59420 + C60608 * C59419 + C59657 * C59418 +
           C59656 * C59417) *
              C151985 * C1302 +
          (C59657 * C59417 + C60608 * C59418 + C60609 * C59419 +
           (C59421 * C60590 - C59422 * C60589 - C59421 * C60591 +
            C151908 * C60592) *
               C152167 * C59420) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C152026 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C152033 +
           ((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C151985 * C3525) *
              C151944 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C152033 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C152026 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                C152205 +
            (C85260 * C152231 + C73985 * C101464) * C152301) *
               C151985 * C3525) *
              C151953 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C151985 * C152026 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
               C151985 * C152033 +
           ((C73986 * C101464 + (C74995 + C74994) * C152231) * C152301 +
            ((C73983 + C73982) * C101464 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C3525) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C152285 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152072) *
               C152026 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C152285) *
               C152033 +
           (((C73984 * C101464 + C84614 * C152231) * C152301 +
             ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
                C152285 -
            (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
             (C84615 * C152231 + C75588 * C101464) * C152301) *
                C152072) *
               C3525) *
              C3181 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C152285) *
               C152026 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C152285 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152072) *
               C152033 +
           (((C76148 * C101464 + (C77247 + C77246) * C152231) * C152301 +
             ((C76163 + C76162) * C101464 +
              (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
               C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
               C150632 * C9697 + C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                 C152205 +
             (C85260 * C152231 + C73985 * C101464) * C152301) *
                C152285) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C152380 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C152376 +
           ((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C151985 * C152362 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C101464) *
                C152205 +
            (C85519 * C152231 + C75338 * C101464) * C152301) *
               C151985 * C152336) *
              C3181 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C152376 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C152380 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                C152205 +
            (C85260 * C152231 + C73985 * C101464) * C152301) *
               C151985 * C152362 +
           ((C75842 * C101464 + (C76163 + C76162) * C152231) * C152301 +
            ((C75857 + C75856) * C101464 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152231) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C3041 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C152030) *
              C152379 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C152030 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C3041) *
              C152372 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C151985 * C3041 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
               C151985 * C152030) *
              C152355 +
          ((((C74426 + C74427) * C101464 + (C83204 + C83205) * C152231) *
                C152301 +
            ((C74428 + C74429) * C101464 +
             (C150639 * C1503 - C73636 * C1487 - C150639 * C1504 +
              C152263 * C1523 + C150632 * C1866 - C73638 * C1865 -
              C150632 * C1867 + C151913 * C1868) *
                 C152231) *
                C152205) *
               C151985 * C152030 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C101464) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C101464) *
                C152301) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C152374 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152359 +
            (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                 C152301 +
             (C84613 * C101464 + C87236 * C152231) * C152205) *
                C152329) *
               C3041 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152359 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C152374 -
            (((C77662 + C77663) * C152231 + C84615 * C101464) * C152205 +
             (C87237 * C152231 + C84612 * C101464) * C152301) *
                C152329) *
               C152030) *
              C3181 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152359 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C152374 -
            (((C86704 + C86705) * C152231 + C86699 * C101464) * C152205 +
             ((C86976 + C86977) * C152231 + (C82927 + C82926) * C101464) *
                 C152301) *
                C152329) *
               C3041 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C152374 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152359 +
            ((C86690 * C101464 + (C86705 + C86704) * C152231) * C152301 +
             ((C77247 + C77246) * C101464 +
              (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
               C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
               C150632 * C9923 + C151913 * C9924) *
                  C152231) *
                 C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C152285 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152072) *
               C3041 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C152285) *
               C152030) *
              C151944 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C152285) *
               C3041 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C152285 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152072) *
               C152030) *
              C151953 +
          (((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
               C152263 * C168 + C150632 * C156 - C73638 * C145 -
               C150632 * C157 + C151913 * C169) *
                  C101464 +
              (C82928 + C82929) * C152231) *
                 C152301 +
             ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
                C152285 -
            (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
             ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                 C152301) *
                C152072) *
               C3041 +
           (((C83868 * C101464 + (C82931 + C82930) * C152231) * C152301 +
             ((C74995 + C74994) * C101464 +
              (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
               C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
               C150632 * C1518 + C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                 C152205 +
             (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
                C152285) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C3041 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C152030) *
              C152379 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C152030 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C3041) *
              C152372 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C151985 * C3041 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
               C151985 * C152030) *
              C152355 +
          ((((C74426 + C74427) * C101464 + (C83204 + C83205) * C152231) *
                C152301 +
            ((C74428 + C74429) * C101464 +
             (C150639 * C1503 - C73636 * C1487 - C150639 * C1504 +
              C152263 * C1523 + C150632 * C1866 - C73638 * C1865 -
              C150632 * C1867 + C151913 * C1868) *
                 C152231) *
                C152205) *
               C151985 * C152030 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C101464) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C101464) *
                C152301) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C152380 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C152376 +
           ((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C151985 * C152362 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C101464) *
                C152205 +
            (C85519 * C152231 + C75338 * C101464) * C152301) *
               C151985 * C152336) *
              C3181 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C152376 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C152380 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                C152205 +
            (C85260 * C152231 + C73985 * C101464) * C152301) *
               C151985 * C152362 +
           ((C75842 * C101464 + (C76163 + C76162) * C152231) * C152301 +
            ((C75857 + C75856) * C101464 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152231) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C4047 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152072) *
               C152026 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C4047) *
               C152033 +
           (((C73984 * C101464 + C84614 * C152231) * C152301 +
             ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
                C4047 -
            (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
             (C84615 * C152231 + C75588 * C101464) * C152301) *
                C152072) *
               C3525) *
              C152270 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C4047) *
               C152026 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C4047 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152072) *
               C152033 +
           (((C76148 * C101464 + (C77247 + C77246) * C152231) * C152301 +
             ((C76163 + C76162) * C101464 +
              (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
               C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
               C150632 * C9697 + C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                 C152205 +
             (C85260 * C152231 + C73985 * C101464) * C152301) *
                C4047) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C152068 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152075 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C4719) *
              C152026 +
          (((C83864 * C101464 + C84613 * C152231) * C152301 +
            (C84614 * C101464 + C75646 * C152231) * C152205) *
               C152075 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C152068 -
           (((C77662 + C77663) * C152231 + C84615 * C101464) * C152205 +
            (C87237 * C152231 + C84612 * C101464) * C152301) *
               C4719) *
              C152033 +
          (((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C152068 -
           (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
            (C84615 * C152231 + C75588 * C101464) * C152301) *
               C152075 +
           ((C75646 * C101464 + (C77663 + C77662) * C152231) * C152301 +
            ((C75645 + C75644) * C101464 +
             (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
              C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
              C150632 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C4719) *
              C3525) *
         C151939) /
        (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C4047 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152072) *
              C152380 +
          (((C83864 * C101464 + C84613 * C152231) * C152301 +
            (C84614 * C101464 + C75646 * C152231) * C152205) *
               C152072 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C4047) *
              C152376 +
          (((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C4047 -
           (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
            (C84615 * C152231 + C75588 * C101464) * C152301) *
               C152072) *
              C152362 +
          (((C76358 * C101464 + (C75645 + C75644) * C152231) * C152301 +
            ((C76373 + C76372) * C101464 +
             (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
              C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
              C150632 * C8014 + C151913 * C8020) *
                 C152231) *
                C152205) *
               C152072 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C101464) *
                C152205 +
            (C85519 * C152231 + C75338 * C101464) * C152301) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C4047 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152072) *
               C3041 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C4047) *
               C152030) *
              C152370 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C4047) *
               C3041 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C4047 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152072) *
               C152030) *
              C152353 +
          (((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
               C152263 * C168 + C150632 * C156 - C73638 * C145 -
               C150632 * C157 + C151913 * C169) *
                  C101464 +
              (C82928 + C82929) * C152231) *
                 C152301 +
             ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
                C4047 -
            (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
             ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                 C152301) *
                C152072) *
               C3041 +
           (((C83868 * C101464 + (C82931 + C82930) * C152231) * C152301 +
             ((C74995 + C74994) * C101464 +
              (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
               C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
               C150632 * C1518 + C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                 C152205 +
             (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C152381 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152378 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C152365 -
           (((C86300 + C86301) * C152231 + C87237 * C101464) * C152205 +
            ((C86302 + C86303) * C152231 + (C86299 + C86298) * C101464) *
                C152301) *
               C152342) *
              C3041 +
          (((C83864 * C101464 + C84613 * C152231) * C152301 +
            (C84614 * C101464 + C75646 * C152231) * C152205) *
               C152378 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C152381 -
           (((C77662 + C77663) * C152231 + C84615 * C101464) * C152205 +
            (C87237 * C152231 + C84612 * C101464) * C152301) *
               C152365 +
           ((C87236 * C101464 + (C86301 + C86300) * C152231) * C152301 +
            ((C77663 + C77662) * C101464 +
             (C150639 * C9395 - C73636 * C9385 - C150639 * C9396 +
              C152263 * C9403 + C150632 * C9397 - C73638 * C9386 -
              C150632 * C9398 + C151913 * C9404) *
                 C152231) *
                C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C152068 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152075 +
            (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                 C152301 +
             (C84613 * C101464 + C87236 * C152231) * C152205) *
                C4719) *
               C3041 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152075 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C152068 -
            (((C77662 + C77663) * C152231 + C84615 * C101464) * C152205 +
             (C87237 * C152231 + C84612 * C101464) * C152301) *
                C4719) *
               C152030) *
              C152270 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152075 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C152068 -
            (((C86704 + C86705) * C152231 + C86699 * C101464) * C152205 +
             ((C86976 + C86977) * C152231 + (C82927 + C82926) * C101464) *
                 C152301) *
                C4719) *
               C3041 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C152068 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152075 +
            ((C86690 * C101464 + (C86705 + C86704) * C152231) * C152301 +
             ((C77247 + C77246) * C101464 +
              (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
               C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
               C150632 * C9923 + C151913 * C9924) *
                  C152231) *
                 C152205) *
                C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C4047 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152072) *
               C3041 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C4047) *
               C152030) *
              C152370 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C4047) *
               C3041 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C4047 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152072) *
               C152030) *
              C152353 +
          (((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
               C152263 * C168 + C150632 * C156 - C73638 * C145 -
               C150632 * C157 + C151913 * C169) *
                  C101464 +
              (C82928 + C82929) * C152231) *
                 C152301 +
             ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
                C4047 -
            (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
             ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                 C152301) *
                C152072) *
               C3041 +
           (((C83868 * C101464 + (C82931 + C82930) * C152231) * C152301 +
             ((C74995 + C74994) * C101464 +
              (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
               C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
               C150632 * C1518 + C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                 C152205 +
             (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C4047 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152072) *
              C152380 +
          (((C83864 * C101464 + C84613 * C152231) * C152301 +
            (C84614 * C101464 + C75646 * C152231) * C152205) *
               C152072 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C4047) *
              C152376 +
          (((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C4047 -
           (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
            (C84615 * C152231 + C75588 * C101464) * C152301) *
               C152072) *
              C152362 +
          (((C76358 * C101464 + (C75645 + C75644) * C152231) * C152301 +
            ((C76373 + C76372) * C101464 +
             (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
              C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
              C150632 * C8014 + C151913 * C8020) *
                 C152231) *
                C152205) *
               C152072 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C101464) *
                C152205 +
            (C85519 * C152231 + C75338 * C101464) * C152301) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C1661 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C1662 +
           ((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C151985 * C1663 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C101464) *
                C152205 +
            (C85519 * C152231 + C75338 * C101464) * C152301) *
               C151985 * C152336) *
              C152270 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C1662 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C1661 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                C152205 +
            (C85260 * C152231 + C73985 * C101464) * C152301) *
               C151985 * C1663 +
           ((C75842 * C101464 + (C76163 + C76162) * C152231) * C152301 +
            ((C75857 + C75856) * C101464 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152231) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C152284 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C152030) *
              C703 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C152030 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C152284) *
              C704 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C151985 * C152284 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
               C151985 * C152030) *
              C705 +
          ((((C74426 + C74427) * C101464 + (C83204 + C83205) * C152231) *
                C152301 +
            ((C74428 + C74429) * C101464 +
             (C150639 * C1503 - C73636 * C1487 - C150639 * C1504 +
              C152263 * C1523 + C150632 * C1866 - C73638 * C1865 -
              C150632 * C1867 + C151913 * C1868) *
                 C152231) *
                C152205) *
               C151985 * C152030 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C101464) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C101464) *
                C152301) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C2161 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C2162 +
            (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                 C152301 +
             (C84613 * C101464 + C87236 * C152231) * C152205) *
                C152329) *
               C152284 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C2162 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C2161 -
            (((C77662 + C77663) * C152231 + C84615 * C101464) * C152205 +
             (C87237 * C152231 + C84612 * C101464) * C152301) *
                C152329) *
               C152030) *
              C152270 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C2162 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C2161 -
            (((C86704 + C86705) * C152231 + C86699 * C101464) * C152205 +
             ((C86976 + C86977) * C152231 + (C82927 + C82926) * C101464) *
                 C152301) *
                C152329) *
               C152284 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C2161 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C2162 +
            ((C86690 * C101464 + (C86705 + C86704) * C152231) * C152301 +
             ((C77247 + C77246) * C101464 +
              (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
               C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
               C150632 * C9923 + C151913 * C9924) *
                  C152231) *
                 C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C152285 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152072) *
              C1661 +
          (((C83864 * C101464 + C84613 * C152231) * C152301 +
            (C84614 * C101464 + C75646 * C152231) * C152205) *
               C152072 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C152285) *
              C1662 +
          (((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C152285 -
           (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
            (C84615 * C152231 + C75588 * C101464) * C152301) *
               C152072) *
              C1663 +
          (((C76358 * C101464 + (C75645 + C75644) * C152231) * C152301 +
            ((C76373 + C76372) * C101464 +
             (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
              C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
              C150632 * C8014 + C151913 * C8020) *
                 C152231) *
                C152205) *
               C152072 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C101464) *
                C152205 +
            (C85519 * C152231 + C75338 * C101464) * C152301) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C152285 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152072) *
               C152284 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C152285) *
               C152030) *
              C323 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C152285) *
               C152284 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C152285 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152072) *
               C152030) *
              C324 +
          (((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
               C152263 * C168 + C150632 * C156 - C73638 * C145 -
               C150632 * C157 + C151913 * C169) *
                  C101464 +
              (C82928 + C82929) * C152231) *
                 C152301 +
             ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
                C152285 -
            (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
             ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                 C152301) *
                C152072) *
               C152284 +
           (((C83868 * C101464 + (C82931 + C82930) * C152231) * C152301 +
             ((C74995 + C74994) * C101464 +
              (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
               C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
               C150632 * C1518 + C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                 C152205 +
             (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C2757 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C2758 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C2759 -
           (((C86300 + C86301) * C152231 + C87237 * C101464) * C152205 +
            ((C86302 + C86303) * C152231 + (C86299 + C86298) * C101464) *
                C152301) *
               C152342) *
              C152284 +
          (((C83864 * C101464 + C84613 * C152231) * C152301 +
            (C84614 * C101464 + C75646 * C152231) * C152205) *
               C2758 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C2757 -
           (((C77662 + C77663) * C152231 + C84615 * C101464) * C152205 +
            (C87237 * C152231 + C84612 * C101464) * C152301) *
               C2759 +
           ((C87236 * C101464 + (C86301 + C86300) * C152231) * C152301 +
            ((C77663 + C77662) * C101464 +
             (C150639 * C9395 - C73636 * C9385 - C150639 * C9396 +
              C152263 * C9403 + C150632 * C9397 - C73638 * C9386 -
              C150632 * C9398 + C151913 * C9404) *
                 C152231) *
                C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                 C152263 * C166 + C150632 * C152 - C73638 * C143 -
                 C150632 * C153 + C151913 * C167) *
                    C101464 +
                (C82920 + C82921) * C152231) *
                   C152301 +
               ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                  C151985 * C151967 * C129 -
              ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
               ((C82925 + C82924) * C152231 +
                (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                 C151913 * C168 + C150639 * C152 - C73636 * C143 -
                 C150639 * C153 + C152263 * C167) *
                    C101464) *
                   C152301) *
                  C151985 * C151967 * C130 +
              (((C150639 * C154 - C73636 * C144 - C150639 * C155 +
                 C152263 * C168 + C150632 * C156 - C73638 * C145 -
                 C150632 * C157 + C151913 * C169) *
                    C101464 +
                (C82928 + C82929) * C152231) *
                   C152301 +
               ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
                  C151985 * C151967 * C131 -
              (((C83205 + C83204) * C152231 + (C74427 + C74426) * C101464) *
                   C152205 +
               ((C83477 + C83476) * C152231 +
                (C150632 * C158 - C73638 * C146 - C150632 * C159 +
                 C151913 * C170 + C150639 * C156 - C73636 * C145 -
                 C150639 * C157 + C152263 * C169) *
                    C101464) *
                   C152301) *
                  C151985 * C151967 * C132 +
              (((C150639 * C158 - C73636 * C146 - C150639 * C159 +
                 C152263 * C170 + C150632 * C160 - C73638 * C147 -
                 C150632 * C161 + C151913 * C171) *
                    C101464 +
                (C150639 * C551 - C73636 * C531 - C150639 * C552 +
                 C152263 * C567 + C150632 * C555 - C73638 * C533 -
                 C150632 * C556 + C151913 * C569) *
                    C152231) *
                   C152301 +
               ((C150639 * C354 - C73636 * C334 - C150639 * C355 +
                 C152263 * C370 + C150632 * C358 - C73638 * C336 -
                 C150632 * C359 + C151913 * C372) *
                    C101464 +
                (C150639 * C1055 - C73636 * C1045 - C150639 * C1056 +
                 C152263 * C1063 + C150632 * C1057 - C73638 * C1046 -
                 C150632 * C1058 + C151913 * C1064) *
                    C152231) *
                   C152205) *
                  C151985 * C151967 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                  C152263 * C166 + C150632 * C152 - C73638 * C143 -
                  C150632 * C153 + C151913 * C167) *
                     C101464 +
                 (C82920 + C82921) * C152231) *
                    C152301 +
                ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                   C151985 * C152373 -
               ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
                (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                   C151985 * C152357 +
               ((C73984 * C101464 + C84614 * C152231) * C152301 +
                ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
                   C151985 * C152326) *
                  C323 +
              ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
                ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                   C151985 * C152357 -
               ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
                ((C82925 + C82924) * C152231 +
                 (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                  C151913 * C168 + C150639 * C152 - C73636 * C143 -
                  C150639 * C153 + C152263 * C167) *
                     C101464) *
                    C152301) *
                   C151985 * C152373 -
               (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                    C152205 +
                (C85260 * C152231 + C73985 * C101464) * C152301) *
                   C151985 * C152326) *
                  C324 +
              ((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
                  C152263 * C168 + C150632 * C156 - C73638 * C145 -
                  C150632 * C157 + C151913 * C169) *
                     C101464 +
                 (C82928 + C82929) * C152231) *
                    C152301 +
                ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
                   C151985 * C152373 -
               (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                    C152205 +
                (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
                   C151985 * C152357 +
               ((C73986 * C101464 + (C74995 + C74994) * C152231) * C152301 +
                ((C73983 + C73982) * C101464 +
                 (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
                  C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
                  C150632 * C2010 + C151913 * C2014) *
                     C152231) *
                    C152205) *
                   C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C152374 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152359 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C152329) *
              C151967 * C323 +
          ((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                C152301 +
            (C83866 * C101464 + C86690 * C152231) * C152205) *
               C152359 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C152374 -
           (((C86704 + C86705) * C152231 + C86699 * C101464) * C152205 +
            ((C86976 + C86977) * C152231 + (C82927 + C82926) * C101464) *
                C152301) *
               C152329) *
              C151967 * C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C152374 -
           (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                C152301) *
               C152359 +
           (((C82933 + C82932) * C101464 +
             (C150639 * C2407 - C73636 * C2398 - C150639 * C2408 +
              C152263 * C2422 + C150632 * C2405 - C73638 * C2397 -
              C150632 * C2406 + C151913 * C2421) *
                 C152231) *
                C152301 +
            ((C82931 + C82930) * C101464 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C1211 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C1212 +
           ((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C152370 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C1212 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C1211 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                C152205 +
            (C85260 * C152231 + C73985 * C101464) * C152301) *
               C151985 * C152326) *
              C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C151985 * C1211 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
               C151985 * C1212 +
           ((C73986 * C101464 + (C74995 + C74994) * C152231) * C152301 +
            ((C73983 + C73982) * C101464 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C101464 +
            (C82920 + C82921) * C152231) *
               C152301 +
           ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
              C151985 * C1299 -
          ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
           (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
              C151985 * C1300 +
          ((C73984 * C101464 + C84614 * C152231) * C152301 +
           ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
              C151985 * C1301 -
          (((C76372 + C76373) * C152231 + (C75365 + C75364) * C101464) *
               C152205 +
           (C85519 * C152231 + C75338 * C101464) * C152301) *
              C151985 * C1302 +
          ((C75368 * C101464 + (C76373 + C76372) * C152231) * C152301 +
           ((C75367 + C75366) * C101464 +
            (C150639 * C8801 - C73636 * C8799 - C150639 * C8802 +
             C152263 * C8805 + C150632 * C8803 - C73638 * C8800 -
             C150632 * C8804 + C151913 * C8806) *
                C152231) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C152374 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152359 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C152329) *
              C1211 +
          (((C83864 * C101464 + C84613 * C152231) * C152301 +
            (C84614 * C101464 + C75646 * C152231) * C152205) *
               C152359 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C152374 -
           (((C77662 + C77663) * C152231 + C84615 * C101464) * C152205 +
            (C87237 * C152231 + C84612 * C101464) * C152301) *
               C152329) *
              C1212 +
          (((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C152374 -
           (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
            (C84615 * C152231 + C75588 * C101464) * C152301) *
               C152359 +
           ((C75646 * C101464 + (C77663 + C77662) * C152231) * C152301 +
            ((C75645 + C75644) * C101464 +
             (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
              C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
              C150632 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C2161 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C2162 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C152329) *
              C151967 * C152370 +
          ((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                C152301 +
            (C83866 * C101464 + C86690 * C152231) * C152205) *
               C2162 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C2161 -
           (((C86704 + C86705) * C152231 + C86699 * C101464) * C152205 +
            ((C86976 + C86977) * C152231 + (C82927 + C82926) * C101464) *
                C152301) *
               C152329) *
              C151967 * C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C2161 -
           (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                C152301) *
               C2162 +
           (((C82933 + C82932) * C101464 +
             (C150639 * C2407 - C73636 * C2398 - C150639 * C2408 +
              C152263 * C2422 + C150632 * C2405 - C73638 * C2397 -
              C150632 * C2406 + C151913 * C2421) *
                 C152231) *
                C152301 +
            ((C82931 + C82930) * C101464 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C2161 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C2162 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C152329) *
              C152373 +
          (((C83864 * C101464 + C84613 * C152231) * C152301 +
            (C84614 * C101464 + C75646 * C152231) * C152205) *
               C2162 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C2161 -
           (((C77662 + C77663) * C152231 + C84615 * C101464) * C152205 +
            (C87237 * C152231 + C84612 * C101464) * C152301) *
               C152329) *
              C152357 +
          (((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C2161 -
           (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
            (C84615 * C152231 + C75588 * C101464) * C152301) *
               C2162 +
           ((C75646 * C101464 + (C77663 + C77662) * C152231) * C152301 +
            ((C75645 + C75644) * C101464 +
             (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
              C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
              C150632 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C101464 +
            (C82920 + C82921) * C152231) *
               C152301 +
           ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
              C2392 -
          ((C84612 * C152231 + C83865 * C101464) * C152205 +
           ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
               C152301) *
              C2393 +
          (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
               C152301 +
           (C84613 * C101464 + C87236 * C152231) * C152205) *
              C2394 -
          (((C86300 + C86301) * C152231 + C87237 * C101464) * C152205 +
           ((C86302 + C86303) * C152231 + (C86299 + C86298) * C101464) *
               C152301) *
              C2395 +
          (((C86303 + C86302) * C101464 +
            (C150639 * C17794 - C73636 * C17789 - C150639 * C17795 +
             C152263 * C17801 + C150632 * C17792 - C73638 * C17788 -
             C150632 * C17793 + C151913 * C17800) *
                C152231) *
               C152301 +
           ((C86301 + C86300) * C101464 +
            (C150639 * C18552 - C73636 * C18550 - C150639 * C18553 +
             C152263 * C18556 + C150632 * C18554 - C73638 * C18551 -
             C150632 * C18555 + C151913 * C18557) *
                C152231) *
               C152205) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C152285 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152072) *
               C1211 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C152285) *
               C1212 +
           (((C73984 * C101464 + C84614 * C152231) * C152301 +
             ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
                C152285 -
            (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
             (C84615 * C152231 + C75588 * C101464) * C152301) *
                C152072) *
               C152326) *
              C152270 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C152285) *
               C1211 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C152285 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152072) *
               C1212 +
           (((C76148 * C101464 + (C77247 + C77246) * C152231) * C152301 +
             ((C76163 + C76162) * C101464 +
              (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
               C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
               C150632 * C9697 + C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                 C152205 +
             (C85260 * C152231 + C73985 * C101464) * C152301) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C152285 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152072) *
              C151967 * C703 +
          ((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                C152301 +
            (C83866 * C101464 + C86690 * C152231) * C152205) *
               C152072 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C152285) *
              C151967 * C704 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C152285 -
           (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                C152301) *
               C152072) *
              C151967 * C705 +
          ((((C83476 + C83477) * C101464 +
             (C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566 +
              C150632 * C553 - C73638 * C532 - C150632 * C554 +
              C151913 * C568) *
                 C152231) *
                C152301 +
            ((C83204 + C83205) * C101464 +
             (C150639 * C1495 - C73636 * C1483 - C150639 * C1496 +
              C152263 * C1519 + C150632 * C2624 - C73638 * C2623 -
              C150632 * C2625 + C151913 * C2626) *
                 C152231) *
                C152205) *
               C152072 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C101464) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C101464) *
                C152301) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C2757 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C2758 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C2759 -
           (((C86300 + C86301) * C152231 + C87237 * C101464) * C152205 +
            ((C86302 + C86303) * C152231 + (C86299 + C86298) * C101464) *
                C152301) *
               C152342) *
              C151967 * C152270 +
          ((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                C152301 +
            (C83866 * C101464 + C86690 * C152231) * C152205) *
               C2758 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C2757 -
           (((C86704 + C86705) * C152231 + C86699 * C101464) * C152205 +
            ((C86976 + C86977) * C152231 + (C82927 + C82926) * C101464) *
                C152301) *
               C2759 +
           (((C86977 + C86976) * C101464 +
             (C150639 * C2415 - C73636 * C2402 - C150639 * C2416 +
              C152263 * C2426 + C150632 * C2417 - C73638 * C2403 -
              C150632 * C2418 + C151913 * C2427) *
                 C152231) *
                C152301 +
            ((C86705 + C86704) * C101464 +
             (C150639 * C9393 - C73636 * C9384 - C150639 * C9394 +
              C152263 * C9402 + C150632 * C18125 - C73638 * C18124 -
              C150632 * C18126 + C151913 * C18127) *
                 C152231) *
                C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C152373 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C152357 +
           ((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C323 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C152357 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C152373 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                C152205 +
            (C85260 * C152231 + C73985 * C101464) * C152301) *
               C151985 * C152326) *
              C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C151985 * C152373 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
               C151985 * C152357 +
           ((C73986 * C101464 + (C74995 + C74994) * C152231) * C152301 +
            ((C73983 + C73982) * C101464 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C101464 +
            (C82920 + C82921) * C152231) *
               C152301 +
           ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
              C151985 * C151967 * C129 -
          ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
           ((C82925 + C82924) * C152231 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C101464) *
               C152301) *
              C151985 * C151967 * C130 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C101464 +
            (C82928 + C82929) * C152231) *
               C152301 +
           ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
              C151985 * C151967 * C131 -
          (((C83205 + C83204) * C152231 + (C74427 + C74426) * C101464) *
               C152205 +
           ((C83477 + C83476) * C152231 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C101464) *
               C152301) *
              C151985 * C151967 * C132 +
          (((C150639 * C158 - C73636 * C146 - C150639 * C159 + C152263 * C170 +
             C150632 * C160 - C73638 * C147 - C150632 * C161 + C151913 * C171) *
                C101464 +
            (C150639 * C551 - C73636 * C531 - C150639 * C552 + C152263 * C567 +
             C150632 * C555 - C73638 * C533 - C150632 * C556 + C151913 * C569) *
                C152231) *
               C152301 +
           ((C150639 * C354 - C73636 * C334 - C150639 * C355 + C152263 * C370 +
             C150632 * C358 - C73638 * C336 - C150632 * C359 + C151913 * C372) *
                C101464 +
            (C150639 * C1055 - C73636 * C1045 - C150639 * C1056 +
             C152263 * C1063 + C150632 * C1057 - C73638 * C1046 -
             C150632 * C1058 + C151913 * C1064) *
                C152231) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C1211 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C1212 +
           ((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C152370 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C1212 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C1211 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                C152205 +
            (C85260 * C152231 + C73985 * C101464) * C152301) *
               C151985 * C152326) *
              C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C151985 * C1211 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
               C151985 * C1212 +
           ((C73986 * C101464 + (C74995 + C74994) * C152231) * C152301 +
            ((C73983 + C73982) * C101464 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C101464 +
            (C82920 + C82921) * C152231) *
               C152301 +
           ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
              C151985 * C1299 -
          ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
           (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
              C151985 * C1300 +
          ((C73984 * C101464 + C84614 * C152231) * C152301 +
           ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
              C151985 * C1301 -
          (((C76372 + C76373) * C152231 + (C75365 + C75364) * C101464) *
               C152205 +
           (C85519 * C152231 + C75338 * C101464) * C152301) *
              C151985 * C1302 +
          ((C75368 * C101464 + (C76373 + C76372) * C152231) * C152301 +
           ((C75367 + C75366) * C101464 +
            (C150639 * C8801 - C73636 * C8799 - C150639 * C8802 +
             C152263 * C8805 + C150632 * C8803 - C73638 * C8800 -
             C150632 * C8804 + C151913 * C8806) *
                C152231) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C2161 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C2162 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C152329) *
              C151967 * C152370 +
          ((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                C152301 +
            (C83866 * C101464 + C86690 * C152231) * C152205) *
               C2162 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C2161 -
           (((C86704 + C86705) * C152231 + C86699 * C101464) * C152205 +
            ((C86976 + C86977) * C152231 + (C82927 + C82926) * C101464) *
                C152301) *
               C152329) *
              C151967 * C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C2161 -
           (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                C152301) *
               C2162 +
           (((C82933 + C82932) * C101464 +
             (C150639 * C2407 - C73636 * C2398 - C150639 * C2408 +
              C152263 * C2422 + C150632 * C2405 - C73638 * C2397 -
              C150632 * C2406 + C151913 * C2421) *
                 C152231) *
                C152301 +
            ((C82931 + C82930) * C101464 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C2161 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C2162 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C152329) *
              C152373 +
          (((C83864 * C101464 + C84613 * C152231) * C152301 +
            (C84614 * C101464 + C75646 * C152231) * C152205) *
               C2162 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C2161 -
           (((C77662 + C77663) * C152231 + C84615 * C101464) * C152205 +
            (C87237 * C152231 + C84612 * C101464) * C152301) *
               C152329) *
              C152357 +
          (((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C2161 -
           (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
            (C84615 * C152231 + C75588 * C101464) * C152301) *
               C2162 +
           ((C75646 * C101464 + (C77663 + C77662) * C152231) * C152301 +
            ((C75645 + C75644) * C101464 +
             (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
              C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
              C150632 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C4047 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152072) *
               C152284 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C4047) *
               C152030) *
              C151944 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C4047) *
               C152284 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C4047 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152072) *
               C152030) *
              C151953 +
          (((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
               C152263 * C168 + C150632 * C156 - C73638 * C145 -
               C150632 * C157 + C151913 * C169) *
                  C101464 +
              (C82928 + C82929) * C152231) *
                 C152301 +
             ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
                C4047 -
            (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
             ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                 C152301) *
                C152072) *
               C152284 +
           (((C83868 * C101464 + (C82931 + C82930) * C152231) * C152301 +
             ((C74995 + C74994) * C101464 +
              (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
               C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
               C150632 * C1518 + C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                 C152205 +
             (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
                C4047) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C152068 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152075 +
            (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                 C152301 +
             (C84613 * C101464 + C87236 * C152231) * C152205) *
                C4719) *
               C152284 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152075 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C152068 -
            (((C77662 + C77663) * C152231 + C84615 * C101464) * C152205 +
             (C87237 * C152231 + C84612 * C101464) * C152301) *
                C4719) *
               C152030) *
              C3181 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152075 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C152068 -
            (((C86704 + C86705) * C152231 + C86699 * C101464) * C152205 +
             ((C86976 + C86977) * C152231 + (C82927 + C82926) * C101464) *
                 C152301) *
                C4719) *
               C152284 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C152068 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152075 +
            ((C86690 * C101464 + (C86705 + C86704) * C152231) * C152301 +
             ((C77247 + C77246) * C101464 +
              (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
               C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
               C150632 * C9923 + C151913 * C9924) *
                  C152231) *
                 C152205) *
                C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C4047 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152072) *
               C152373 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C4047) *
               C152357 +
           (((C73984 * C101464 + C84614 * C152231) * C152301 +
             ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
                C4047 -
            (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
             (C84615 * C152231 + C75588 * C101464) * C152301) *
                C152072) *
               C152326) *
              C3181 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C4047) *
               C152373 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C4047 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152072) *
               C152357 +
           (((C76148 * C101464 + (C77247 + C77246) * C152231) * C152301 +
             ((C76163 + C76162) * C101464 +
              (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
               C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
               C150632 * C9697 + C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                 C152205 +
             (C85260 * C152231 + C73985 * C101464) * C152301) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C4047 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152072) *
              C151967 * C152379 +
          ((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                C152301 +
            (C83866 * C101464 + C86690 * C152231) * C152205) *
               C152072 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C4047) *
              C151967 * C152372 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C4047 -
           (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                C152301) *
               C152072) *
              C151967 * C152355 +
          ((((C83476 + C83477) * C101464 +
             (C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566 +
              C150632 * C553 - C73638 * C532 - C150632 * C554 +
              C151913 * C568) *
                 C152231) *
                C152301 +
            ((C83204 + C83205) * C101464 +
             (C150639 * C1495 - C73636 * C1483 - C150639 * C1496 +
              C152263 * C1519 + C150632 * C2624 - C73638 * C2623 -
              C150632 * C2625 + C151913 * C2626) *
                 C152231) *
                C152205) *
               C152072 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C101464) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C101464) *
                C152301) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C152381 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152378 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C152365 -
           (((C86300 + C86301) * C152231 + C87237 * C101464) * C152205 +
            ((C86302 + C86303) * C152231 + (C86299 + C86298) * C101464) *
                C152301) *
               C152342) *
              C151967 * C3181 +
          ((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                C152301 +
            (C83866 * C101464 + C86690 * C152231) * C152205) *
               C152378 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C152381 -
           (((C86704 + C86705) * C152231 + C86699 * C101464) * C152205 +
            ((C86976 + C86977) * C152231 + (C82927 + C82926) * C101464) *
                C152301) *
               C152365 +
           (((C86977 + C86976) * C101464 +
             (C150639 * C2415 - C73636 * C2402 - C150639 * C2416 +
              C152263 * C2426 + C150632 * C2417 - C73638 * C2403 -
              C150632 * C2418 + C151913 * C2427) *
                 C152231) *
                C152301 +
            ((C86705 + C86704) * C101464 +
             (C150639 * C9393 - C73636 * C9384 - C150639 * C9394 +
              C152263 * C9402 + C150632 * C18125 - C73638 * C18124 -
              C150632 * C18126 + C151913 * C18127) *
                 C152231) *
                C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C152068 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152075 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C4719) *
              C151967 * C151944 +
          ((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                C152301 +
            (C83866 * C101464 + C86690 * C152231) * C152205) *
               C152075 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C152068 -
           (((C86704 + C86705) * C152231 + C86699 * C101464) * C152205 +
            ((C86976 + C86977) * C152231 + (C82927 + C82926) * C101464) *
                C152301) *
               C4719) *
              C151967 * C151953 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C152068 -
           (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                C152301) *
               C152075 +
           (((C82933 + C82932) * C101464 +
             (C150639 * C2407 - C73636 * C2398 - C150639 * C2408 +
              C152263 * C2422 + C150632 * C2405 - C73638 * C2397 -
              C150632 * C2406 + C151913 * C2421) *
                 C152231) *
                C152301 +
            ((C82931 + C82930) * C101464 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C4719) *
              C151967 * C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C4047 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152072) *
              C151967 * C152379 +
          ((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                C152301 +
            (C83866 * C101464 + C86690 * C152231) * C152205) *
               C152072 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C4047) *
              C151967 * C152372 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C4047 -
           (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                C152301) *
               C152072) *
              C151967 * C152355 +
          ((((C83476 + C83477) * C101464 +
             (C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566 +
              C150632 * C553 - C73638 * C532 - C150632 * C554 +
              C151913 * C568) *
                 C152231) *
                C152301 +
            ((C83204 + C83205) * C101464 +
             (C150639 * C1495 - C73636 * C1483 - C150639 * C1496 +
              C152263 * C1519 + C150632 * C2624 - C73638 * C2623 -
              C150632 * C2625 + C151913 * C2626) *
                 C152231) *
                C152205) *
               C152072 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C101464) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C101464) *
                C152301) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C4047 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152072) *
               C152373 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C4047) *
               C152357 +
           (((C73984 * C101464 + C84614 * C152231) * C152301 +
             ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
                C4047 -
            (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
             (C84615 * C152231 + C75588 * C101464) * C152301) *
                C152072) *
               C152326) *
              C3181 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C4047) *
               C152373 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C4047 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152072) *
               C152357 +
           (((C76148 * C101464 + (C77247 + C77246) * C152231) * C152301 +
             ((C76163 + C76162) * C101464 +
              (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
               C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
               C150632 * C9697 + C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                 C152205 +
             (C85260 * C152231 + C73985 * C101464) * C152301) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[270] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C152284 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C152030) *
              C703 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C152030 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C152284) *
              C704 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C151985 * C152284 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
               C151985 * C152030) *
              C705 +
          ((((C74426 + C74427) * C101464 + (C83204 + C83205) * C152231) *
                C152301 +
            ((C74428 + C74429) * C101464 +
             (C150639 * C1503 - C73636 * C1487 - C150639 * C1504 +
              C152263 * C1523 + C150632 * C1866 - C73638 * C1865 -
              C150632 * C1867 + C151913 * C1868) *
                 C152231) *
                C152205) *
               C151985 * C152030 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C101464) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C101464) *
                C152301) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C1661 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C1662 +
           ((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C151985 * C1663 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C101464) *
                C152205 +
            (C85519 * C152231 + C75338 * C101464) * C152301) *
               C151985 * C152336) *
              C152270 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C1662 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C1661 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                C152205 +
            (C85260 * C152231 + C73985 * C101464) * C152301) *
               C151985 * C1663 +
           ((C75842 * C101464 + (C76163 + C76162) * C152231) * C152301 +
            ((C75857 + C75856) * C101464 +
             (C150639 * C8007 - C73636 * C7999 - C150639 * C8008 +
              C152263 * C8017 + C150632 * C8586 - C73638 * C8585 -
              C150632 * C8587 + C151913 * C8588) *
                 C152231) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C152285 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152072) *
               C152284 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C152285) *
               C152030) *
              C323 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C152285) *
               C152284 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C152285 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152072) *
               C152030) *
              C324 +
          (((((C150639 * C154 - C73636 * C144 - C150639 * C155 +
               C152263 * C168 + C150632 * C156 - C73638 * C145 -
               C150632 * C157 + C151913 * C169) *
                  C101464 +
              (C82928 + C82929) * C152231) *
                 C152301 +
             ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
                C152285 -
            (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
             ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                 C152301) *
                C152072) *
               C152284 +
           (((C83868 * C101464 + (C82931 + C82930) * C152231) * C152301 +
             ((C74995 + C74994) * C101464 +
              (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
               C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
               C150632 * C1518 + C151913 * C1530) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                 C152205 +
             (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C152285 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152072) *
              C1661 +
          (((C83864 * C101464 + C84613 * C152231) * C152301 +
            (C84614 * C101464 + C75646 * C152231) * C152205) *
               C152072 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C152285) *
              C1662 +
          (((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C152285 -
           (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
            (C84615 * C152231 + C75588 * C101464) * C152301) *
               C152072) *
              C1663 +
          (((C76358 * C101464 + (C75645 + C75644) * C152231) * C152301 +
            ((C76373 + C76372) * C101464 +
             (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
              C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
              C150632 * C8014 + C151913 * C8020) *
                 C152231) *
                C152205) *
               C152072 -
           (((C76372 + C76373) * C152231 + (C75365 + C75364) * C101464) *
                C152205 +
            (C85519 * C152231 + C75338 * C101464) * C152301) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C152373 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C152357 +
           ((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C323 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C152357 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C152373 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                C152205 +
            (C85260 * C152231 + C73985 * C101464) * C152301) *
               C151985 * C152326) *
              C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C151985 * C152373 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
               C151985 * C152357 +
           ((C73986 * C101464 + (C74995 + C74994) * C152231) * C152301 +
            ((C73983 + C73982) * C101464 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C101464 +
            (C82920 + C82921) * C152231) *
               C152301 +
           ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
              C151985 * C151967 * C129 -
          ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
           ((C82925 + C82924) * C152231 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C101464) *
               C152301) *
              C151985 * C151967 * C130 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C101464 +
            (C82928 + C82929) * C152231) *
               C152301 +
           ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
              C151985 * C151967 * C131 -
          (((C83205 + C83204) * C152231 + (C74427 + C74426) * C101464) *
               C152205 +
           ((C83477 + C83476) * C152231 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C101464) *
               C152301) *
              C151985 * C151967 * C132 +
          (((C150639 * C158 - C73636 * C146 - C150639 * C159 + C152263 * C170 +
             C150632 * C160 - C73638 * C147 - C150632 * C161 + C151913 * C171) *
                C101464 +
            (C150639 * C551 - C73636 * C531 - C150639 * C552 + C152263 * C567 +
             C150632 * C555 - C73638 * C533 - C150632 * C556 + C151913 * C569) *
                C152231) *
               C152301 +
           ((C150639 * C354 - C73636 * C334 - C150639 * C355 + C152263 * C370 +
             C150632 * C358 - C73638 * C336 - C150632 * C359 + C151913 * C372) *
                C101464 +
            (C150639 * C1055 - C73636 * C1045 - C150639 * C1056 +
             C152263 * C1063 + C150632 * C1057 - C73638 * C1046 -
             C150632 * C1058 + C151913 * C1064) *
                C152231) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C152374 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152359 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C152329) *
              C151967 * C323 +
          ((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                C152301 +
            (C83866 * C101464 + C86690 * C152231) * C152205) *
               C152359 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C152374 -
           (((C86704 + C86705) * C152231 + C86699 * C101464) * C152205 +
            ((C86976 + C86977) * C152231 + (C82927 + C82926) * C101464) *
                C152301) *
               C152329) *
              C151967 * C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C152374 -
           (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                C152301) *
               C152359 +
           (((C82933 + C82932) * C101464 +
             (C150639 * C2407 - C73636 * C2398 - C150639 * C2408 +
              C152263 * C2422 + C150632 * C2405 - C73638 * C2397 -
              C150632 * C2406 + C151913 * C2421) *
                 C152231) *
                C152301 +
            ((C82931 + C82930) * C101464 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C152231) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C1211 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C1212 +
           ((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C152370 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C1212 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C1211 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                C152205 +
            (C85260 * C152231 + C73985 * C101464) * C152301) *
               C151985 * C152326) *
              C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C151985 * C1211 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
               C151985 * C1212 +
           ((C73986 * C101464 + (C74995 + C74994) * C152231) * C152301 +
            ((C73983 + C73982) * C101464 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C101464 +
            (C82920 + C82921) * C152231) *
               C152301 +
           ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
              C151985 * C1299 -
          ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
           (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
              C151985 * C1300 +
          ((C73984 * C101464 + C84614 * C152231) * C152301 +
           ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
              C151985 * C1301 -
          (((C76372 + C76373) * C152231 + (C75365 + C75364) * C101464) *
               C152205 +
           (C85519 * C152231 + C75338 * C101464) * C152301) *
              C151985 * C1302 +
          ((C75368 * C101464 + (C76373 + C76372) * C152231) * C152301 +
           ((C75367 + C75366) * C101464 +
            (C150639 * C8801 - C73636 * C8799 - C150639 * C8802 +
             C152263 * C8805 + C150632 * C8803 - C73638 * C8800 -
             C150632 * C8804 + C151913 * C8806) *
                C152231) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C152374 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152359 +
           (((C82923 + C82922) * C101464 + (C86298 + C86299) * C152231) *
                C152301 +
            (C84613 * C101464 + C87236 * C152231) * C152205) *
               C152329) *
              C1211 +
          (((C83864 * C101464 + C84613 * C152231) * C152301 +
            (C84614 * C101464 + C75646 * C152231) * C152205) *
               C152359 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C152374 -
           (((C77662 + C77663) * C152231 + C84615 * C101464) * C152205 +
            (C87237 * C152231 + C84612 * C101464) * C152301) *
               C152329) *
              C1212 +
          (((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C152374 -
           (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
            (C84615 * C152231 + C75588 * C101464) * C152301) *
               C152359 +
           ((C75646 * C101464 + (C77663 + C77662) * C152231) * C152301 +
            ((C75645 + C75644) * C101464 +
             (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
              C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
              C150632 * C10124 + C151913 * C10126) *
                 C152231) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[273] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C152285 -
           ((C84612 * C152231 + C83865 * C101464) * C152205 +
            ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                C152301) *
               C152072) *
              C151967 * C703 +
          ((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                C152301 +
            (C83866 * C101464 + C86690 * C152231) * C152205) *
               C152072 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C152285) *
              C151967 * C704 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C152285 -
           (((C82930 + C82931) * C152231 + C83869 * C101464) * C152205 +
            ((C82932 + C82933) * C152231 + (C82929 + C82928) * C101464) *
                C152301) *
               C152072) *
              C151967 * C705 +
          ((((C83476 + C83477) * C101464 +
             (C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566 +
              C150632 * C553 - C73638 * C532 - C150632 * C554 +
              C151913 * C568) *
                 C152231) *
                C152301 +
            ((C83204 + C83205) * C101464 +
             (C150639 * C1495 - C73636 * C1483 - C150639 * C1496 +
              C152263 * C1519 + C150632 * C2624 - C73638 * C2623 -
              C150632 * C2625 + C151913 * C2626) *
                 C152231) *
                C152205) *
               C152072 -
           (((C83205 + C83204) * C152231 + (C74427 + C74426) * C101464) *
                C152205 +
            ((C83477 + C83476) * C152231 +
             (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
              C150639 * C156 - C73636 * C145 - C150639 * C157 +
              C152263 * C169) *
                 C101464) *
                C152301) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
               C152263 * C166 + C150632 * C152 - C73638 * C143 -
               C150632 * C153 + C151913 * C167) *
                  C101464 +
              (C82920 + C82921) * C152231) *
                 C152301 +
             ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
                C152285 -
            ((C84612 * C152231 + C83865 * C101464) * C152205 +
             ((C82922 + C82923) * C152231 + (C82921 + C82920) * C101464) *
                 C152301) *
                C152072) *
               C1211 +
           (((C83864 * C101464 + C84613 * C152231) * C152301 +
             (C84614 * C101464 + C75646 * C152231) * C152205) *
                C152072 -
            ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
             (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
                C152285) *
               C1212 +
           (((C73984 * C101464 + C84614 * C152231) * C152301 +
             ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
                C152285 -
            (((C75644 + C75645) * C152231 + C85519 * C101464) * C152205 +
             (C84615 * C152231 + C75588 * C101464) * C152301) *
                C152072) *
               C152326) *
              C152270 +
          (((((C82924 + C82925) * C101464 + (C82926 + C82927) * C152231) *
                 C152301 +
             (C83866 * C101464 + C86690 * C152231) * C152205) *
                C152072 -
            ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
             ((C82925 + C82924) * C152231 +
              (C150632 * C154 - C73638 * C144 - C150632 * C155 +
               C151913 * C168 + C150639 * C152 - C73636 * C143 -
               C150639 * C153 + C152263 * C167) *
                  C101464) *
                 C152301) *
                C152285) *
               C1211 +
           ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
             ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
                C152285 -
            (((C77246 + C77247) * C152231 + C85260 * C101464) * C152205 +
             (C86699 * C152231 + C83867 * C101464) * C152301) *
                C152072) *
               C1212 +
           (((C76148 * C101464 + (C77247 + C77246) * C152231) * C152301 +
             ((C76163 + C76162) * C101464 +
              (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
               C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
               C150632 * C9697 + C151913 * C9698) *
                  C152231) *
                 C152205) *
                C152072 -
            (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                 C152205 +
             (C85260 * C152231 + C73985 * C101464) * C152301) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C101464 +
            (C82920 + C82921) * C152231) *
               C152301 +
           ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
              C151985 * C151967 * C129 -
          ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
           ((C82925 + C82924) * C152231 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C101464) *
               C152301) *
              C151985 * C151967 * C130 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C101464 +
            (C82928 + C82929) * C152231) *
               C152301 +
           ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
              C151985 * C151967 * C131 -
          (((C83205 + C83204) * C152231 + (C74427 + C74426) * C101464) *
               C152205 +
           ((C83477 + C83476) * C152231 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C101464) *
               C152301) *
              C151985 * C151967 * C132 +
          (((C150639 * C158 - C73636 * C146 - C150639 * C159 + C152263 * C170 +
             C150632 * C160 - C73638 * C147 - C150632 * C161 + C151913 * C171) *
                C101464 +
            (C150639 * C551 - C73636 * C531 - C150639 * C552 + C152263 * C567 +
             C150632 * C555 - C73638 * C533 - C150632 * C556 + C151913 * C569) *
                C152231) *
               C152301 +
           ((C150639 * C354 - C73636 * C334 - C150639 * C355 + C152263 * C370 +
             C150632 * C358 - C73638 * C336 - C150632 * C359 + C151913 * C372) *
                C101464 +
            (C150639 * C1055 - C73636 * C1045 - C150639 * C1056 +
             C152263 * C1063 + C150632 * C1057 - C73638 * C1046 -
             C150632 * C1058 + C151913 * C1064) *
                C152231) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C152373 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C152357 +
           ((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C323 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C152357 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C152373 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                C152205 +
            (C85260 * C152231 + C73985 * C101464) * C152301) *
               C151985 * C152326) *
              C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C151985 * C152373 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
               C151985 * C152357 +
           ((C73986 * C101464 + (C74995 + C74994) * C152231) * C152301 +
            ((C73983 + C73982) * C101464 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C101464 +
             (C82920 + C82921) * C152231) *
                C152301 +
            ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
               C151985 * C1211 -
           ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
            (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
               C151985 * C1212 +
           ((C73984 * C101464 + C84614 * C152231) * C152301 +
            ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
               C151985 * C152326) *
              C152370 +
          ((((C73972 + C73973) * C101464 + C83866 * C152231) * C152301 +
            ((C73974 + C73975) * C101464 + C76148 * C152231) * C152205) *
               C151985 * C1212 -
           ((C83867 * C152231 + (C73973 + C73972) * C101464) * C152205 +
            ((C82925 + C82924) * C152231 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C101464) *
                C152301) *
               C151985 * C1211 -
           (((C76162 + C76163) * C152231 + (C73977 + C73976) * C101464) *
                C152205 +
            (C85260 * C152231 + C73985 * C101464) * C152301) *
               C151985 * C152326) *
              C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C101464 +
             (C82928 + C82929) * C152231) *
                C152301 +
            ((C73978 + C73979) * C101464 + C83868 * C152231) * C152205) *
               C151985 * C1211 -
           (((C74994 + C74995) * C152231 + (C73981 + C73980) * C101464) *
                C152205 +
            (C83869 * C152231 + (C73979 + C73978) * C101464) * C152301) *
               C151985 * C1212 +
           ((C73986 * C101464 + (C74995 + C74994) * C152231) * C152301 +
            ((C73983 + C73982) * C101464 +
             (C150639 * C2007 - C73636 * C2001 - C150639 * C2008 +
              C152263 * C2013 + C150632 * C2009 - C73638 * C2002 -
              C150632 * C2010 + C151913 * C2014) *
                 C152231) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C101464 +
            (C82920 + C82921) * C152231) *
               C152301 +
           ((C73966 + C73967) * C101464 + C83864 * C152231) * C152205) *
              C151985 * C1299 -
          ((C75588 * C152231 + (C73969 + C73968) * C101464) * C152205 +
           (C83865 * C152231 + (C73967 + C73966) * C101464) * C152301) *
              C151985 * C1300 +
          ((C73984 * C101464 + C84614 * C152231) * C152301 +
           ((C73971 + C73970) * C101464 + C76358 * C152231) * C152205) *
              C151985 * C1301 -
          (((C76372 + C76373) * C152231 + (C75365 + C75364) * C101464) *
               C152205 +
           (C85519 * C152231 + C75338 * C101464) * C152301) *
              C151985 * C1302 +
          ((C75368 * C101464 + (C76373 + C76372) * C152231) * C152301 +
           ((C75367 + C75366) * C101464 +
            (C150639 * C8801 - C73636 * C8799 - C150639 * C8802 +
             C152263 * C8805 + C150632 * C8803 - C73638 * C8800 -
             C150632 * C8804 + C151913 * C8806) *
                C152231) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[275] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C152026 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C152033 +
           ((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C151985 * C3525) *
              C151944 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C152033 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C152026 -
           ((C144439 + C144440 + C144441) * C152205 +
            (C142757 + C142756 + C142755) * C152301) *
               C151985 * C3525) *
              C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C151985 * C152026 -
           ((C142761 + C142762 + C142763) * C152205 +
            (C142760 + C142759 + C142758) * C152301) *
               C151985 * C152033 +
           ((C142763 + C142762 + C142761) * C152301 +
            (C59652 * C152368 + C60350 * C152369 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C134328) *
                C152205) *
               C151985 * C3525) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[276] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C152285 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152072) *
               C152026 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152072 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C152285) *
               C152033 +
           (((C142751 + C142750 + C142749) * C152301 +
             (C144012 + C144013 + C144014) * C152205) *
                C152285 -
            ((C144929 + C144930 + C144931) * C152205 +
             (C144241 + C144240 + C144239) * C152301) *
                C152072) *
               C3525) *
              C3181 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152072 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C152285) *
               C152026 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C152285 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152072) *
               C152033 +
           (((C144734 + C144733 + C144732) * C152301 +
             (C60349 * C152368 + C61872 * C152369 +
              (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
               C151908 * C10126) *
                  C134328) *
                 C152205) *
                C152072 -
            ((C144439 + C144440 + C144441) * C152205 +
             (C142757 + C142756 + C142755) * C152301) *
                C152285) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[277] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C152380 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C152376 +
           ((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C151985 * C152362 -
           ((C144015 + C144016 + C144017) * C152205 +
            (C144014 + C144013 + C144012) * C152301) *
               C151985 * C152336) *
              C3181 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C152376 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C152380 -
           ((C144439 + C144440 + C144441) * C152205 +
            (C142757 + C142756 + C142755) * C152301) *
               C151985 * C152362 +
           ((C144441 + C144440 + C144439) * C152301 +
            (C59649 * C152368 + C61138 * C152369 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C134328) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C3041 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C152030) *
              C152379 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C152030 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C3041) *
              C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C151985 * C3041 -
           ((C142761 + C142762 + C142763) * C152205 +
            (C142760 + C142759 + C142758) * C152301) *
               C151985 * C152030) *
              C152355 +
          (((C143176 + C143177 + C143178) * C152301 +
            (C59961 * C152368 + C93912 * C152369 +
             (C59421 * C1517 - C59422 * C1494 - C59421 * C1518 +
              C151908 * C1530) *
                 C134328) *
                C152205) *
               C151985 * C152030 -
           ((C143178 + C143177 + C143176) * C152205 +
            (C66215 * C134328 + C66214 * C152369 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152368) *
                C152301) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C152374 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152359 +
            ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) *
                 C152301 +
             (C144236 + C144237 + C144238) * C152205) *
                C152329) *
               C3041 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152359 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C152374 -
            ((C144242 + C144243 + C144244) * C152205 +
             (C144238 + C144237 + C144236) * C152301) *
                C152329) *
               C152030) *
              C3181 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152359 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C152374 -
            ((C145780 + C145781 + C145782) * C152205 +
             (C68879 * C134328 + C65791 * C152369 + C65790 * C152368) *
                 C152301) *
                C152329) *
               C3041 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C152374 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152359 +
            ((C145782 + C145781 + C145780) * C152301 +
             (C61873 * C152368 + C67597 * C152369 +
              (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
               C151908 * C9404) *
                  C134328) *
                 C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[278] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C152285 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152072) *
               C3041 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152072 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C152285) *
               C152030) *
              C151944 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152072 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C152285) *
               C3041 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C152285 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152072) *
               C152030) *
              C151953 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C152368 +
              C65793 * C152369 + C65794 * C134328) *
                 C152301 +
             (C142758 + C142759 + C142760) * C152205) *
                C152285 -
            ((C143669 + C143670 + C143671) * C152205 +
             (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                 C152301) *
                C152072) *
               C3041 +
           (((C143671 + C143670 + C143669) * C152301 +
             (C60351 * C152368 + C65499 * C152369 +
              (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
               C151908 * C9924) *
                  C134328) *
                 C152205) *
                C152072 -
            ((C142761 + C142762 + C142763) * C152205 +
             (C142760 + C142759 + C142758) * C152301) *
                C152285) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[279] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C3041 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C152030) *
              C152379 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C152030 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C3041) *
              C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C151985 * C3041 -
           ((C142761 + C142762 + C142763) * C152205 +
            (C142760 + C142759 + C142758) * C152301) *
               C151985 * C152030) *
              C152355 +
          (((C143176 + C143177 + C143178) * C152301 +
            (C59961 * C152368 + C93912 * C152369 +
             (C59421 * C1517 - C59422 * C1494 - C59421 * C1518 +
              C151908 * C1530) *
                 C134328) *
                C152205) *
               C151985 * C152030 -
           ((C143178 + C143177 + C143176) * C152205 +
            (C66215 * C134328 + C66214 * C152369 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152368) *
                C152301) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C152380 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C152376 +
           ((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C151985 * C152362 -
           ((C144015 + C144016 + C144017) * C152205 +
            (C144014 + C144013 + C144012) * C152301) *
               C151985 * C152336) *
              C3181 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C152376 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C152380 -
           ((C144439 + C144440 + C144441) * C152205 +
            (C142757 + C142756 + C142755) * C152301) *
               C151985 * C152362 +
           ((C144441 + C144440 + C144439) * C152301 +
            (C59649 * C152368 + C61138 * C152369 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C134328) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[280] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C4047 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152072) *
               C152026 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152072 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C4047) *
               C152033 +
           (((C142751 + C142750 + C142749) * C152301 +
             (C144012 + C144013 + C144014) * C152205) *
                C4047 -
            ((C144929 + C144930 + C144931) * C152205 +
             (C144241 + C144240 + C144239) * C152301) *
                C152072) *
               C3525) *
              C152270 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152072 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C4047) *
               C152026 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C4047 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152072) *
               C152033 +
           (((C144734 + C144733 + C144732) * C152301 +
             (C60349 * C152368 + C61872 * C152369 +
              (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
               C151908 * C10126) *
                  C134328) *
                 C152205) *
                C152072 -
            ((C144439 + C144440 + C144441) * C152205 +
             (C142757 + C142756 + C142755) * C152301) *
                C4047) *
               C3525) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[281] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C152068 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152075 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C144236 + C144237 + C144238) * C152205) *
               C4719) *
              C152026 +
          (((C143665 + C143664 + C143663) * C152301 +
            (C144239 + C144240 + C144241) * C152205) *
               C152075 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C152068 -
           ((C144242 + C144243 + C144244) * C152205 +
            (C144238 + C144237 + C144236) * C152301) *
               C4719) *
              C152033 +
          (((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C152068 -
           ((C144929 + C144930 + C144931) * C152205 +
            (C144241 + C144240 + C144239) * C152301) *
               C152075 +
           ((C144244 + C144243 + C144242) * C152301 +
            (C60792 * C152368 + C62160 * C152369 +
             (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
              C151908 * C61658) *
                 C134328) *
                C152205) *
               C4719) *
              C3525) *
         C151939) /
        (p * q * std::sqrt(p + q));
    d2ee[282] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C4047 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152072) *
              C152380 +
          (((C143665 + C143664 + C143663) * C152301 +
            (C144239 + C144240 + C144241) * C152205) *
               C152072 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C4047) *
              C152376 +
          (((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C4047 -
           ((C144929 + C144930 + C144931) * C152205 +
            (C144241 + C144240 + C144239) * C152301) *
               C152072) *
              C152362 +
          (((C144931 + C144930 + C144929) * C152301 +
            (C60793 * C152368 + C60794 * C152369 +
             (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
              C151908 * C62140) *
                 C134328) *
                C152205) *
               C152072 -
           ((C144015 + C144016 + C144017) * C152205 +
            (C144014 + C144013 + C144012) * C152301) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C4047 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152072) *
               C3041 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152072 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C4047) *
               C152030) *
              C152370 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152072 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C4047) *
               C3041 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C4047 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152072) *
               C152030) *
              C152353 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C152368 +
              C65793 * C152369 + C65794 * C134328) *
                 C152301 +
             (C142758 + C142759 + C142760) * C152205) *
                C4047 -
            ((C143669 + C143670 + C143671) * C152205 +
             (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                 C152301) *
                C152072) *
               C3041 +
           (((C143671 + C143670 + C143669) * C152301 +
             (C60351 * C152368 + C65499 * C152369 +
              (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
               C151908 * C9924) *
                  C134328) *
                 C152205) *
                C152072 -
            ((C142761 + C142762 + C142763) * C152205 +
             (C142760 + C142759 + C142758) * C152301) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C152381 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152378 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C144236 + C144237 + C144238) * C152205) *
               C152365 -
           ((C146171 + C146172 + C146173) * C152205 +
            (C68378 * C134328 + C68376 * C152369 + C65788 * C152368) *
                C152301) *
               C152342) *
              C3041 +
          (((C143665 + C143664 + C143663) * C152301 +
            (C144239 + C144240 + C144241) * C152205) *
               C152378 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C152381 -
           ((C144242 + C144243 + C144244) * C152205 +
            (C144238 + C144237 + C144236) * C152301) *
               C152365 +
           ((C146173 + C146172 + C146171) * C152301 +
            (C62161 * C152368 + C67099 * C152369 +
             (C59421 * C69074 - C59422 * C69073 - C59421 * C69075 +
              C151908 * C69076) *
                 C134328) *
                C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[283] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C152068 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152075 +
            ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) *
                 C152301 +
             (C144236 + C144237 + C144238) * C152205) *
                C4719) *
               C3041 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152075 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C152068 -
            ((C144242 + C144243 + C144244) * C152205 +
             (C144238 + C144237 + C144236) * C152301) *
                C4719) *
               C152030) *
              C152270 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152075 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C152068 -
            ((C145780 + C145781 + C145782) * C152205 +
             (C68879 * C134328 + C65791 * C152369 + C65790 * C152368) *
                 C152301) *
                C4719) *
               C3041 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C152068 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152075 +
            ((C145782 + C145781 + C145780) * C152301 +
             (C61873 * C152368 + C67597 * C152369 +
              (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
               C151908 * C9404) *
                  C134328) *
                 C152205) *
                C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[284] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C4047 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152072) *
               C3041 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152072 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C4047) *
               C152030) *
              C152370 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152072 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C4047) *
               C3041 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C4047 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152072) *
               C152030) *
              C152353 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C152368 +
              C65793 * C152369 + C65794 * C134328) *
                 C152301 +
             (C142758 + C142759 + C142760) * C152205) *
                C4047 -
            ((C143669 + C143670 + C143671) * C152205 +
             (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                 C152301) *
                C152072) *
               C3041 +
           (((C143671 + C143670 + C143669) * C152301 +
             (C60351 * C152368 + C65499 * C152369 +
              (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
               C151908 * C9924) *
                  C134328) *
                 C152205) *
                C152072 -
            ((C142761 + C142762 + C142763) * C152205 +
             (C142760 + C142759 + C142758) * C152301) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C4047 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152072) *
              C152380 +
          (((C143665 + C143664 + C143663) * C152301 +
            (C144239 + C144240 + C144241) * C152205) *
               C152072 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C4047) *
              C152376 +
          (((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C4047 -
           ((C144929 + C144930 + C144931) * C152205 +
            (C144241 + C144240 + C144239) * C152301) *
               C152072) *
              C152362 +
          (((C144931 + C144930 + C144929) * C152301 +
            (C60793 * C152368 + C60794 * C152369 +
             (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
              C151908 * C62140) *
                 C134328) *
                C152205) *
               C152072 -
           ((C144015 + C144016 + C144017) * C152205 +
            (C144014 + C144013 + C144012) * C152301) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[285] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C1661 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C1662 +
           ((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C151985 * C1663 -
           ((C144015 + C144016 + C144017) * C152205 +
            (C144014 + C144013 + C144012) * C152301) *
               C151985 * C152336) *
              C152270 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C1662 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C1661 -
           ((C144439 + C144440 + C144441) * C152205 +
            (C142757 + C142756 + C142755) * C152301) *
               C151985 * C1663 +
           ((C144441 + C144440 + C144439) * C152301 +
            (C59649 * C152368 + C61138 * C152369 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C134328) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C152284 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C152030) *
              C703 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C152030 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C152284) *
              C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C151985 * C152284 -
           ((C142761 + C142762 + C142763) * C152205 +
            (C142760 + C142759 + C142758) * C152301) *
               C151985 * C152030) *
              C705 +
          (((C143176 + C143177 + C143178) * C152301 +
            (C59961 * C152368 + C93912 * C152369 +
             (C59421 * C1517 - C59422 * C1494 - C59421 * C1518 +
              C151908 * C1530) *
                 C134328) *
                C152205) *
               C151985 * C152030 -
           ((C143178 + C143177 + C143176) * C152205 +
            (C66215 * C134328 + C66214 * C152369 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152368) *
                C152301) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C2161 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C2162 +
            ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) *
                 C152301 +
             (C144236 + C144237 + C144238) * C152205) *
                C152329) *
               C152284 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C2162 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C2161 -
            ((C144242 + C144243 + C144244) * C152205 +
             (C144238 + C144237 + C144236) * C152301) *
                C152329) *
               C152030) *
              C152270 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C2162 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C2161 -
            ((C145780 + C145781 + C145782) * C152205 +
             (C68879 * C134328 + C65791 * C152369 + C65790 * C152368) *
                 C152301) *
                C152329) *
               C152284 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C2161 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C2162 +
            ((C145782 + C145781 + C145780) * C152301 +
             (C61873 * C152368 + C67597 * C152369 +
              (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
               C151908 * C9404) *
                  C134328) *
                 C152205) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[286] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C152285 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152072) *
              C1661 +
          (((C143665 + C143664 + C143663) * C152301 +
            (C144239 + C144240 + C144241) * C152205) *
               C152072 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C152285) *
              C1662 +
          (((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C152285 -
           ((C144929 + C144930 + C144931) * C152205 +
            (C144241 + C144240 + C144239) * C152301) *
               C152072) *
              C1663 +
          (((C144931 + C144930 + C144929) * C152301 +
            (C60793 * C152368 + C60794 * C152369 +
             (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
              C151908 * C62140) *
                 C134328) *
                C152205) *
               C152072 -
           ((C144015 + C144016 + C144017) * C152205 +
            (C144014 + C144013 + C144012) * C152301) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C152285 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152072) *
               C152284 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C60345 * C152368 + C60791 * C152369 + C62161 * C134328) *
                 C152205) *
                C152072 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C152285) *
               C152030) *
              C323 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152072 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C152285) *
               C152284 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C152285 -
            ((C67597 * C134328 + C61873 * C152369 + C60348 * C152368) *
                 C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152072) *
               C152030) *
              C324 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C152368 +
              C65793 * C152369 + C65794 * C134328) *
                 C152301 +
             (C142758 + C142759 + C142760) * C152205) *
                C152285 -
            ((C143669 + C143670 + C143671) * C152205 +
             (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                 C152301) *
                C152072) *
               C152284 +
           (((C143671 + C143670 + C143669) * C152301 +
             (C60351 * C152368 + C65499 * C152369 +
              (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
               C151908 * C9924) *
                  C134328) *
                 C152205) *
                C152072 -
            ((C142761 + C142762 + C142763) * C152205 +
             (C142760 + C142759 + C142758) * C152301) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C2757 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C2758 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C144236 + C144237 + C144238) * C152205) *
               C2759 -
           ((C146171 + C146172 + C146173) * C152205 +
            (C68378 * C134328 + C68376 * C152369 + C65788 * C152368) *
                C152301) *
               C152342) *
              C152284 +
          (((C143665 + C143664 + C143663) * C152301 +
            (C144239 + C144240 + C144241) * C152205) *
               C2758 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C2757 -
           ((C144242 + C144243 + C144244) * C152205 +
            (C144238 + C144237 + C144236) * C152301) *
               C2759 +
           ((C146173 + C146172 + C146171) * C152301 +
            (C62161 * C152368 + C67099 * C152369 +
             (C59421 * C69074 - C59422 * C69073 - C59421 * C69075 +
              C151908 * C69076) *
                 C134328) *
                C152205) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C59421 * C150 - C59422 * C142 - C59421 * C151 +
                 C151908 * C166) *
                    C152368 +
                C65786 * C152369 + C65787 * C134328) *
                   C152301 +
               (C59642 * C152368 + C60346 * C152369 + C60790 * C134328) *
                   C152205) *
                  C151985 * C151967 * C129 -
              ((C61874 * C134328 + C60347 * C152369 + C59646 * C152368) *
                   C152205 +
               (C65790 * C134328 + C65789 * C152369 +
                (C59421 * C152 - C59422 * C143 - C59421 * C153 +
                 C151908 * C167) *
                    C152368) *
                   C152301) *
                  C151985 * C151967 * C130 +
              (((C59421 * C154 - C59422 * C144 - C59421 * C155 +
                 C151908 * C168) *
                    C152368 +
                C65793 * C152369 + C65794 * C134328) *
                   C152301 +
               (C59650 * C152368 + C60352 * C152369 + C65498 * C134328) *
                   C152205) *
                  C151985 * C151967 * C131 -
              ((C66005 * C134328 + C66004 * C152369 + C59960 * C152368) *
                   C152205 +
               (C66215 * C134328 + C66214 * C152369 +
                (C59421 * C156 - C59422 * C145 - C59421 * C157 +
                 C151908 * C169) *
                    C152368) *
                   C152301) *
                  C151985 * C151967 * C132 +
              (((C59421 * C158 - C59422 * C146 - C59421 * C159 +
                 C151908 * C170) *
                    C152368 +
                (C59421 * C551 - C59422 * C531 - C59421 * C552 +
                 C151908 * C567) *
                    C152369 +
                (C59421 * C553 - C59422 * C532 - C59421 * C554 +
                 C151908 * C568) *
                    C134328) *
                   C152301 +
               ((C59421 * C354 - C59422 * C334 - C59421 * C355 +
                 C151908 * C370) *
                    C152368 +
                (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
                 C151908 * C1063) *
                    C152369 +
                (C59421 * C2624 - C59422 * C2623 - C59421 * C2625 +
                 C151908 * C2626) *
                    C134328) *
                   C152205) *
                  C151985 * C151967 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C59421 * C150 - C59422 * C142 - C59421 * C151 +
                  C151908 * C166) *
                     C152368 +
                 C65786 * C152369 + C65787 * C134328) *
                    C152301 +
                (C142746 + C142747 + C142748) * C152205) *
                   C151985 * C152373 -
               ((C142749 + C142750 + C142751) * C152205 +
                (C142748 + C142747 + C142746) * C152301) *
                   C151985 * C152357 +
               ((C142751 + C142750 + C142749) * C152301 +
                (C59644 * C152368 + C60344 * C152369 + C60792 * C134328) *
                    C152205) *
                   C151985 * C152326) *
                  C323 +
              (((C142752 + C142753 + C142754) * C152301 +
                (C142755 + C142756 + C142757) * C152205) *
                   C151985 * C152357 -
               ((C142754 + C142753 + C142752) * C152205 +
                (C65790 * C134328 + C65789 * C152369 +
                 (C59421 * C152 - C59422 * C143 - C59421 * C153 +
                  C151908 * C167) *
                     C152368) *
                    C152301) *
                   C151985 * C152373 -
               ((C61872 * C134328 + C60349 * C152369 + C59648 * C152368) *
                    C152205 +
                (C142757 + C142756 + C142755) * C152301) *
                   C151985 * C152326) *
                  C324 +
              ((((C59421 * C154 - C59422 * C144 - C59421 * C155 +
                  C151908 * C168) *
                     C152368 +
                 C65793 * C152369 + C65794 * C134328) *
                    C152301 +
                (C142758 + C142759 + C142760) * C152205) *
                   C151985 * C152373 -
               ((C142761 + C142762 + C142763) * C152205 +
                (C142760 + C142759 + C142758) * C152301) *
                   C151985 * C152357 +
               ((C142763 + C142762 + C142761) * C152301 +
                (C59652 * C152368 + C60350 * C152369 +
                 (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
                  C151908 * C9698) *
                     C134328) *
                    C152205) *
                   C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C152374 -
           ((C62162 * C134328 + C60790 * C152369 + C60346 * C152368) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152359 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C60790 * C152368 + C62162 * C152369 + C67098 * C134328) *
                C152205) *
               C152329) *
              C151967 * C323 +
          (((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) * C152301 +
            (C60347 * C152368 + C61874 * C152369 + C65792 * C134328) *
                C152205) *
               C152359 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C152374 -
           ((C68677 * C134328 + C65792 * C152369 + C61874 * C152368) * C152205 +
            (C68879 * C134328 + C65791 * C152369 + C65790 * C152368) *
                C152301) *
               C152329) *
              C151967 * C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C152374 -
           ((C65795 * C134328 + C65498 * C152369 + C60352 * C152368) * C152205 +
            (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                C152301) *
               C152359 +
           ((C65794 * C152368 + C65796 * C152369 + C118281 * C134328) *
                C152301 +
            (C65498 * C152368 + C65795 * C152369 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C134328) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C1211 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C1212 +
           ((C142751 + C142750 + C142749) * C152301 +
            (C59644 * C152368 + C60344 * C152369 + C60792 * C134328) *
                C152205) *
               C151985 * C152326) *
              C152370 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C1212 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C1211 -
           ((C61872 * C134328 + C60349 * C152369 + C59648 * C152368) * C152205 +
            (C142757 + C142756 + C142755) * C152301) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C151985 * C1211 -
           ((C142761 + C142762 + C142763) * C152205 +
            (C142760 + C142759 + C142758) * C152301) *
               C151985 * C1212 +
           ((C142763 + C142762 + C142761) * C152301 +
            (C59652 * C152368 + C60350 * C152369 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C134328) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152368 +
            C65786 * C152369 + C65787 * C134328) *
               C152301 +
           (C142746 + C142747 + C142748) * C152205) *
              C151985 * C1299 -
          ((C142749 + C142750 + C142751) * C152205 +
           (C142748 + C142747 + C142746) * C152301) *
              C151985 * C1300 +
          ((C142751 + C142750 + C142749) * C152301 +
           (C144012 + C144013 + C144014) * C152205) *
              C151985 * C1301 -
          ((C144015 + C144016 + C144017) * C152205 +
           (C144014 + C144013 + C144012) * C152301) *
              C151985 * C1302 +
          ((C144017 + C144016 + C144015) * C152301 +
           (C60606 * C152368 + C61280 * C152369 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C134328) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C152374 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152359 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C144236 + C144237 + C144238) * C152205) *
               C152329) *
              C1211 +
          (((C143665 + C143664 + C143663) * C152301 +
            (C144239 + C144240 + C144241) * C152205) *
               C152359 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C152374 -
           ((C144242 + C144243 + C144244) * C152205 +
            (C144238 + C144237 + C144236) * C152301) *
               C152329) *
              C1212 +
          (((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C152374 -
           ((C62160 * C134328 + C60792 * C152369 + C60344 * C152368) * C152205 +
            (C144241 + C144240 + C144239) * C152301) *
               C152359 +
           ((C144244 + C144243 + C144242) * C152301 +
            (C60792 * C152368 + C62160 * C152369 +
             (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
              C151908 * C61658) *
                 C134328) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C2161 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C2162 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C144236 + C144237 + C144238) * C152205) *
               C152329) *
              C151967 * C152370 +
          (((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) * C152301 +
            (C143666 + C143667 + C143668) * C152205) *
               C2162 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C2161 -
           ((C68677 * C134328 + C65792 * C152369 + C61874 * C152368) * C152205 +
            (C68879 * C134328 + C65791 * C152369 + C65790 * C152368) *
                C152301) *
               C152329) *
              C151967 * C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C2161 -
           ((C143669 + C143670 + C143671) * C152205 +
            (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                C152301) *
               C2162 +
           ((C65794 * C152368 + C65796 * C152369 + C118281 * C134328) *
                C152301 +
            (C65498 * C152368 + C65795 * C152369 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C134328) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C2161 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C2162 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C144236 + C144237 + C144238) * C152205) *
               C152329) *
              C152373 +
          (((C143665 + C143664 + C143663) * C152301 +
            (C144239 + C144240 + C144241) * C152205) *
               C2162 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C2161 -
           ((C144242 + C144243 + C144244) * C152205 +
            (C144238 + C144237 + C144236) * C152301) *
               C152329) *
              C152357 +
          (((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C2161 -
           ((C144929 + C144930 + C144931) * C152205 +
            (C144241 + C144240 + C144239) * C152301) *
               C2162 +
           ((C144244 + C144243 + C144242) * C152301 +
            (C60792 * C152368 + C62160 * C152369 +
             (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
              C151908 * C61658) *
                 C134328) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152368 +
            C65786 * C152369 + C65787 * C134328) *
               C152301 +
           (C142746 + C142747 + C142748) * C152205) *
              C2392 -
          ((C143663 + C143664 + C143665) * C152205 +
           (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) * C152301) *
              C2393 +
          ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
           (C144236 + C144237 + C144238) * C152205) *
              C2394 -
          ((C68377 * C134328 + C67098 * C152369 + C62162 * C152368) * C152205 +
           (C68378 * C134328 + C68376 * C152369 + C65788 * C152368) * C152301) *
              C2395 +
          ((C68376 * C152368 + C68378 * C152369 + C119955 * C134328) * C152301 +
           (C67098 * C152368 + C68377 * C152369 +
            (C59421 * C68354 - C59422 * C68353 - C59421 * C68355 +
             C151908 * C68356) *
                C134328) *
               C152205) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C152285 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152072) *
               C1211 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152072 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C152285) *
               C1212 +
           (((C142751 + C142750 + C142749) * C152301 +
             (C144012 + C144013 + C144014) * C152205) *
                C152285 -
            ((C62160 * C134328 + C60792 * C152369 + C60344 * C152368) *
                 C152205 +
             (C144241 + C144240 + C144239) * C152301) *
                C152072) *
               C152326) *
              C152270 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152072 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C152285) *
               C1211 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C152285 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152072) *
               C1212 +
           (((C144734 + C144733 + C144732) * C152301 +
             (C60349 * C152368 + C61872 * C152369 +
              (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
               C151908 * C10126) *
                  C134328) *
                 C152205) *
                C152072 -
            ((C144439 + C144440 + C144441) * C152205 +
             (C142757 + C142756 + C142755) * C152301) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C152285 -
           ((C62162 * C134328 + C60790 * C152369 + C60346 * C152368) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152072) *
              C151967 * C703 +
          (((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) * C152301 +
            (C60347 * C152368 + C61874 * C152369 + C65792 * C134328) *
                C152205) *
               C152072 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C152285) *
              C151967 * C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C152285 -
           ((C65795 * C134328 + C65498 * C152369 + C60352 * C152368) * C152205 +
            (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                C152301) *
               C152072) *
              C151967 * C705 +
          (((C66214 * C152368 + C66215 * C152369 + C118548 * C134328) *
                C152301 +
            (C66004 * C152368 + C66005 * C152369 +
             (C59421 * C2905 - C59422 * C2898 - C59421 * C2906 +
              C151908 * C2910) *
                 C134328) *
                C152205) *
               C152072 -
           ((C143178 + C143177 + C143176) * C152205 +
            (C66215 * C134328 + C66214 * C152369 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152368) *
                C152301) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C2757 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C2758 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C144236 + C144237 + C144238) * C152205) *
               C2759 -
           ((C68377 * C134328 + C67098 * C152369 + C62162 * C152368) * C152205 +
            (C68378 * C134328 + C68376 * C152369 + C65788 * C152368) *
                C152301) *
               C152342) *
              C151967 * C152270 +
          (((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) * C152301 +
            (C143666 + C143667 + C143668) * C152205) *
               C2758 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C2757 -
           ((C145780 + C145781 + C145782) * C152205 +
            (C68879 * C134328 + C65791 * C152369 + C65790 * C152368) *
                C152301) *
               C2759 +
           ((C65791 * C152368 + C68879 * C152369 + C120286 * C134328) *
                C152301 +
            (C65792 * C152368 + C68677 * C152369 +
             (C59421 * C18554 - C59422 * C18551 - C59421 * C18555 +
              C151908 * C18557) *
                 C134328) *
                C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C152373 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C152357 +
           ((C142751 + C142750 + C142749) * C152301 +
            (C59644 * C152368 + C60344 * C152369 + C60792 * C134328) *
                C152205) *
               C151985 * C152326) *
              C323 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C152357 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C152373 -
           ((C61872 * C134328 + C60349 * C152369 + C59648 * C152368) * C152205 +
            (C142757 + C142756 + C142755) * C152301) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C151985 * C152373 -
           ((C142761 + C142762 + C142763) * C152205 +
            (C142760 + C142759 + C142758) * C152301) *
               C151985 * C152357 +
           ((C142763 + C142762 + C142761) * C152301 +
            (C59652 * C152368 + C60350 * C152369 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C134328) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152368 +
            C65786 * C152369 + C65787 * C134328) *
               C152301 +
           (C59642 * C152368 + C60346 * C152369 + C60790 * C134328) * C152205) *
              C151985 * C151967 * C129 -
          ((C61874 * C134328 + C60347 * C152369 + C59646 * C152368) * C152205 +
           (C65790 * C134328 + C65789 * C152369 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152368) *
               C152301) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152368 +
            C65793 * C152369 + C65794 * C134328) *
               C152301 +
           (C59650 * C152368 + C60352 * C152369 + C65498 * C134328) * C152205) *
              C151985 * C151967 * C131 -
          ((C66005 * C134328 + C66004 * C152369 + C59960 * C152368) * C152205 +
           (C66215 * C134328 + C66214 * C152369 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152368) *
               C152301) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C152368 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152369 +
            (C59421 * C553 - C59422 * C532 - C59421 * C554 + C151908 * C568) *
                C134328) *
               C152301 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C152368 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152369 +
            (C59421 * C2624 - C59422 * C2623 - C59421 * C2625 +
             C151908 * C2626) *
                C134328) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C1211 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C1212 +
           ((C142751 + C142750 + C142749) * C152301 +
            (C59644 * C152368 + C60344 * C152369 + C60792 * C134328) *
                C152205) *
               C151985 * C152326) *
              C152370 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C1212 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C1211 -
           ((C61872 * C134328 + C60349 * C152369 + C59648 * C152368) * C152205 +
            (C142757 + C142756 + C142755) * C152301) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C151985 * C1211 -
           ((C142761 + C142762 + C142763) * C152205 +
            (C142760 + C142759 + C142758) * C152301) *
               C151985 * C1212 +
           ((C142763 + C142762 + C142761) * C152301 +
            (C59652 * C152368 + C60350 * C152369 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C134328) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152368 +
            C65786 * C152369 + C65787 * C134328) *
               C152301 +
           (C142746 + C142747 + C142748) * C152205) *
              C151985 * C1299 -
          ((C142749 + C142750 + C142751) * C152205 +
           (C142748 + C142747 + C142746) * C152301) *
              C151985 * C1300 +
          ((C142751 + C142750 + C142749) * C152301 +
           (C144012 + C144013 + C144014) * C152205) *
              C151985 * C1301 -
          ((C144015 + C144016 + C144017) * C152205 +
           (C144014 + C144013 + C144012) * C152301) *
              C151985 * C1302 +
          ((C144017 + C144016 + C144015) * C152301 +
           (C60606 * C152368 + C61280 * C152369 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C134328) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C2161 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C2162 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C144236 + C144237 + C144238) * C152205) *
               C152329) *
              C151967 * C152370 +
          (((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) * C152301 +
            (C143666 + C143667 + C143668) * C152205) *
               C2162 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C2161 -
           ((C68677 * C134328 + C65792 * C152369 + C61874 * C152368) * C152205 +
            (C68879 * C134328 + C65791 * C152369 + C65790 * C152368) *
                C152301) *
               C152329) *
              C151967 * C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C2161 -
           ((C143669 + C143670 + C143671) * C152205 +
            (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                C152301) *
               C2162 +
           ((C65794 * C152368 + C65796 * C152369 + C118281 * C134328) *
                C152301 +
            (C65498 * C152368 + C65795 * C152369 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C134328) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C2161 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C2162 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C144236 + C144237 + C144238) * C152205) *
               C152329) *
              C152373 +
          (((C143665 + C143664 + C143663) * C152301 +
            (C144239 + C144240 + C144241) * C152205) *
               C2162 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C2161 -
           ((C144242 + C144243 + C144244) * C152205 +
            (C144238 + C144237 + C144236) * C152301) *
               C152329) *
              C152357 +
          (((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C2161 -
           ((C144929 + C144930 + C144931) * C152205 +
            (C144241 + C144240 + C144239) * C152301) *
               C2162 +
           ((C144244 + C144243 + C144242) * C152301 +
            (C60792 * C152368 + C62160 * C152369 +
             (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
              C151908 * C61658) *
                 C134328) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[290] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C4047 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152072) *
               C152284 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152072 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C4047) *
               C152030) *
              C151944 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152072 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C4047) *
               C152284 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C4047 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152072) *
               C152030) *
              C151953 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C152368 +
              C65793 * C152369 + C65794 * C134328) *
                 C152301 +
             (C142758 + C142759 + C142760) * C152205) *
                C4047 -
            ((C143669 + C143670 + C143671) * C152205 +
             (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                 C152301) *
                C152072) *
               C152284 +
           (((C143671 + C143670 + C143669) * C152301 +
             (C60351 * C152368 + C65499 * C152369 +
              (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
               C151908 * C9924) *
                  C134328) *
                 C152205) *
                C152072 -
            ((C142761 + C142762 + C142763) * C152205 +
             (C142760 + C142759 + C142758) * C152301) *
                C4047) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[291] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C152068 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152075 +
            ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) *
                 C152301 +
             (C144236 + C144237 + C144238) * C152205) *
                C4719) *
               C152284 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152075 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C152068 -
            ((C144242 + C144243 + C144244) * C152205 +
             (C144238 + C144237 + C144236) * C152301) *
                C4719) *
               C152030) *
              C3181 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152075 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C152068 -
            ((C145780 + C145781 + C145782) * C152205 +
             (C68879 * C134328 + C65791 * C152369 + C65790 * C152368) *
                 C152301) *
                C4719) *
               C152284 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C152068 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152075 +
            ((C145782 + C145781 + C145780) * C152301 +
             (C61873 * C152368 + C67597 * C152369 +
              (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
               C151908 * C9404) *
                  C134328) *
                 C152205) *
                C4719) *
               C152030) *
              C151950)) /
        (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C4047 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152072) *
               C152373 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152072 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C4047) *
               C152357 +
           (((C142751 + C142750 + C142749) * C152301 +
             (C144012 + C144013 + C144014) * C152205) *
                C4047 -
            ((C144929 + C144930 + C144931) * C152205 +
             (C144241 + C144240 + C144239) * C152301) *
                C152072) *
               C152326) *
              C3181 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152072 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C4047) *
               C152373 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C4047 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152072) *
               C152357 +
           (((C144734 + C144733 + C144732) * C152301 +
             (C60349 * C152368 + C61872 * C152369 +
              (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
               C151908 * C10126) *
                  C134328) *
                 C152205) *
                C152072 -
            ((C144439 + C144440 + C144441) * C152205 +
             (C142757 + C142756 + C142755) * C152301) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C4047 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152072) *
              C151967 * C152379 +
          (((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) * C152301 +
            (C143666 + C143667 + C143668) * C152205) *
               C152072 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C4047) *
              C151967 * C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C4047 -
           ((C143669 + C143670 + C143671) * C152205 +
            (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                C152301) *
               C152072) *
              C151967 * C152355 +
          (((C66214 * C152368 + C66215 * C152369 + C118548 * C134328) *
                C152301 +
            (C66004 * C152368 + C66005 * C152369 +
             (C59421 * C2905 - C59422 * C2898 - C59421 * C2906 +
              C151908 * C2910) *
                 C134328) *
                C152205) *
               C152072 -
           ((C143178 + C143177 + C143176) * C152205 +
            (C66215 * C134328 + C66214 * C152369 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152368) *
                C152301) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C152381 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152378 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C144236 + C144237 + C144238) * C152205) *
               C152365 -
           ((C146171 + C146172 + C146173) * C152205 +
            (C68378 * C134328 + C68376 * C152369 + C65788 * C152368) *
                C152301) *
               C152342) *
              C151967 * C3181 +
          (((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) * C152301 +
            (C143666 + C143667 + C143668) * C152205) *
               C152378 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C152381 -
           ((C145780 + C145781 + C145782) * C152205 +
            (C68879 * C134328 + C65791 * C152369 + C65790 * C152368) *
                C152301) *
               C152365 +
           ((C65791 * C152368 + C68879 * C152369 + C120286 * C134328) *
                C152301 +
            (C65792 * C152368 + C68677 * C152369 +
             (C59421 * C18554 - C59422 * C18551 - C59421 * C18555 +
              C151908 * C18557) *
                 C134328) *
                C152205) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[293] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C152068 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152075 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C144236 + C144237 + C144238) * C152205) *
               C4719) *
              C151967 * C151944 +
          (((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) * C152301 +
            (C143666 + C143667 + C143668) * C152205) *
               C152075 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C152068 -
           ((C145780 + C145781 + C145782) * C152205 +
            (C68879 * C134328 + C65791 * C152369 + C65790 * C152368) *
                C152301) *
               C4719) *
              C151967 * C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C152068 -
           ((C143669 + C143670 + C143671) * C152205 +
            (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                C152301) *
               C152075 +
           ((C65794 * C152368 + C65796 * C152369 + C118281 * C134328) *
                C152301 +
            (C65498 * C152368 + C65795 * C152369 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C134328) *
                C152205) *
               C4719) *
              C151967 * C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C4047 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152072) *
              C151967 * C152379 +
          (((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) * C152301 +
            (C143666 + C143667 + C143668) * C152205) *
               C152072 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C4047) *
              C151967 * C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C4047 -
           ((C143669 + C143670 + C143671) * C152205 +
            (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                C152301) *
               C152072) *
              C151967 * C152355 +
          (((C66214 * C152368 + C66215 * C152369 + C118548 * C134328) *
                C152301 +
            (C66004 * C152368 + C66005 * C152369 +
             (C59421 * C2905 - C59422 * C2898 - C59421 * C2906 +
              C151908 * C2910) *
                 C134328) *
                C152205) *
               C152072 -
           ((C143178 + C143177 + C143176) * C152205 +
            (C66215 * C134328 + C66214 * C152369 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152368) *
                C152301) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C4047 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152072) *
               C152373 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152072 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C4047) *
               C152357 +
           (((C142751 + C142750 + C142749) * C152301 +
             (C144012 + C144013 + C144014) * C152205) *
                C4047 -
            ((C144929 + C144930 + C144931) * C152205 +
             (C144241 + C144240 + C144239) * C152301) *
                C152072) *
               C152326) *
              C3181 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152072 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C4047) *
               C152373 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C4047 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152072) *
               C152357 +
           (((C144734 + C144733 + C144732) * C152301 +
             (C60349 * C152368 + C61872 * C152369 +
              (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
               C151908 * C10126) *
                  C134328) *
                 C152205) *
                C152072 -
            ((C144439 + C144440 + C144441) * C152205 +
             (C142757 + C142756 + C142755) * C152301) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[295] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C152284 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C152030) *
              C703 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C152030 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C152284) *
              C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C151985 * C152284 -
           ((C142761 + C142762 + C142763) * C152205 +
            (C142760 + C142759 + C142758) * C152301) *
               C151985 * C152030) *
              C705 +
          (((C143176 + C143177 + C143178) * C152301 +
            (C59961 * C152368 + C93912 * C152369 +
             (C59421 * C1517 - C59422 * C1494 - C59421 * C1518 +
              C151908 * C1530) *
                 C134328) *
                C152205) *
               C151985 * C152030 -
           ((C143178 + C143177 + C143176) * C152205 +
            (C66215 * C134328 + C66214 * C152369 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152368) *
                C152301) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C1661 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C1662 +
           ((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C151985 * C1663 -
           ((C144015 + C144016 + C144017) * C152205 +
            (C144014 + C144013 + C144012) * C152301) *
               C151985 * C152336) *
              C152270 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C1662 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C1661 -
           ((C144439 + C144440 + C144441) * C152205 +
            (C142757 + C142756 + C142755) * C152301) *
               C151985 * C1663 +
           ((C144441 + C144440 + C144439) * C152301 +
            (C59649 * C152368 + C61138 * C152369 +
             (C59421 * C8013 - C59422 * C8002 - C59421 * C8014 +
              C151908 * C8020) *
                 C134328) *
                C152205) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[296] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C152285 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152072) *
               C152284 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C60345 * C152368 + C60791 * C152369 + C62161 * C134328) *
                 C152205) *
                C152072 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C152285) *
               C152030) *
              C323 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152072 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C152285) *
               C152284 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C152285 -
            ((C67597 * C134328 + C61873 * C152369 + C60348 * C152368) *
                 C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152072) *
               C152030) *
              C324 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C152368 +
              C65793 * C152369 + C65794 * C134328) *
                 C152301 +
             (C142758 + C142759 + C142760) * C152205) *
                C152285 -
            ((C143669 + C143670 + C143671) * C152205 +
             (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                 C152301) *
                C152072) *
               C152284 +
           (((C143671 + C143670 + C143669) * C152301 +
             (C60351 * C152368 + C65499 * C152369 +
              (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
               C151908 * C9924) *
                  C134328) *
                 C152205) *
                C152072 -
            ((C142761 + C142762 + C142763) * C152205 +
             (C142760 + C142759 + C142758) * C152301) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C152285 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152072) *
              C1661 +
          (((C143665 + C143664 + C143663) * C152301 +
            (C144239 + C144240 + C144241) * C152205) *
               C152072 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C152285) *
              C1662 +
          (((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C152285 -
           ((C144929 + C144930 + C144931) * C152205 +
            (C144241 + C144240 + C144239) * C152301) *
               C152072) *
              C1663 +
          (((C144931 + C144930 + C144929) * C152301 +
            (C60793 * C152368 + C60794 * C152369 +
             (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
              C151908 * C62140) *
                 C134328) *
                C152205) *
               C152072 -
           ((C144015 + C144016 + C144017) * C152205 +
            (C144014 + C144013 + C144012) * C152301) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C152373 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C152357 +
           ((C142751 + C142750 + C142749) * C152301 +
            (C59644 * C152368 + C60344 * C152369 + C60792 * C134328) *
                C152205) *
               C151985 * C152326) *
              C323 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C152357 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C152373 -
           ((C61872 * C134328 + C60349 * C152369 + C59648 * C152368) * C152205 +
            (C142757 + C142756 + C142755) * C152301) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C151985 * C152373 -
           ((C142761 + C142762 + C142763) * C152205 +
            (C142760 + C142759 + C142758) * C152301) *
               C151985 * C152357 +
           ((C142763 + C142762 + C142761) * C152301 +
            (C59652 * C152368 + C60350 * C152369 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C134328) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152368 +
            C65786 * C152369 + C65787 * C134328) *
               C152301 +
           (C59642 * C152368 + C60346 * C152369 + C60790 * C134328) * C152205) *
              C151985 * C151967 * C129 -
          ((C61874 * C134328 + C60347 * C152369 + C59646 * C152368) * C152205 +
           (C65790 * C134328 + C65789 * C152369 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152368) *
               C152301) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152368 +
            C65793 * C152369 + C65794 * C134328) *
               C152301 +
           (C59650 * C152368 + C60352 * C152369 + C65498 * C134328) * C152205) *
              C151985 * C151967 * C131 -
          ((C66005 * C134328 + C66004 * C152369 + C59960 * C152368) * C152205 +
           (C66215 * C134328 + C66214 * C152369 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152368) *
               C152301) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C152368 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152369 +
            (C59421 * C553 - C59422 * C532 - C59421 * C554 + C151908 * C568) *
                C134328) *
               C152301 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C152368 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152369 +
            (C59421 * C2624 - C59422 * C2623 - C59421 * C2625 +
             C151908 * C2626) *
                C134328) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C152374 -
           ((C62162 * C134328 + C60790 * C152369 + C60346 * C152368) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152359 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C60790 * C152368 + C62162 * C152369 + C67098 * C134328) *
                C152205) *
               C152329) *
              C151967 * C323 +
          (((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) * C152301 +
            (C60347 * C152368 + C61874 * C152369 + C65792 * C134328) *
                C152205) *
               C152359 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C152374 -
           ((C68677 * C134328 + C65792 * C152369 + C61874 * C152368) * C152205 +
            (C68879 * C134328 + C65791 * C152369 + C65790 * C152368) *
                C152301) *
               C152329) *
              C151967 * C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C152374 -
           ((C65795 * C134328 + C65498 * C152369 + C60352 * C152368) * C152205 +
            (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                C152301) *
               C152359 +
           ((C65794 * C152368 + C65796 * C152369 + C118281 * C134328) *
                C152301 +
            (C65498 * C152368 + C65795 * C152369 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C134328) *
                C152205) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C1211 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C1212 +
           ((C142751 + C142750 + C142749) * C152301 +
            (C59644 * C152368 + C60344 * C152369 + C60792 * C134328) *
                C152205) *
               C151985 * C152326) *
              C152370 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C1212 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C1211 -
           ((C61872 * C134328 + C60349 * C152369 + C59648 * C152368) * C152205 +
            (C142757 + C142756 + C142755) * C152301) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C151985 * C1211 -
           ((C142761 + C142762 + C142763) * C152205 +
            (C142760 + C142759 + C142758) * C152301) *
               C151985 * C1212 +
           ((C142763 + C142762 + C142761) * C152301 +
            (C59652 * C152368 + C60350 * C152369 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C134328) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152368 +
            C65786 * C152369 + C65787 * C134328) *
               C152301 +
           (C142746 + C142747 + C142748) * C152205) *
              C151985 * C1299 -
          ((C142749 + C142750 + C142751) * C152205 +
           (C142748 + C142747 + C142746) * C152301) *
              C151985 * C1300 +
          ((C142751 + C142750 + C142749) * C152301 +
           (C144012 + C144013 + C144014) * C152205) *
              C151985 * C1301 -
          ((C144015 + C144016 + C144017) * C152205 +
           (C144014 + C144013 + C144012) * C152301) *
              C151985 * C1302 +
          ((C144017 + C144016 + C144015) * C152301 +
           (C60606 * C152368 + C61280 * C152369 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C134328) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C152374 -
           ((C143663 + C143664 + C143665) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152359 +
           ((C65787 * C152368 + C65788 * C152369 + C68376 * C134328) * C152301 +
            (C144236 + C144237 + C144238) * C152205) *
               C152329) *
              C1211 +
          (((C143665 + C143664 + C143663) * C152301 +
            (C144239 + C144240 + C144241) * C152205) *
               C152359 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C152374 -
           ((C144242 + C144243 + C144244) * C152205 +
            (C144238 + C144237 + C144236) * C152301) *
               C152329) *
              C1212 +
          (((C142751 + C142750 + C142749) * C152301 +
            (C144012 + C144013 + C144014) * C152205) *
               C152374 -
           ((C62160 * C134328 + C60792 * C152369 + C60344 * C152368) * C152205 +
            (C144241 + C144240 + C144239) * C152301) *
               C152359 +
           ((C144244 + C144243 + C144242) * C152301 +
            (C60792 * C152368 + C62160 * C152369 +
             (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
              C151908 * C61658) *
                 C134328) *
                C152205) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C152285 -
           ((C62162 * C134328 + C60790 * C152369 + C60346 * C152368) * C152205 +
            (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                C152301) *
               C152072) *
              C151967 * C703 +
          (((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) * C152301 +
            (C60347 * C152368 + C61874 * C152369 + C65792 * C134328) *
                C152205) *
               C152072 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C152285) *
              C151967 * C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C152285 -
           ((C65795 * C134328 + C65498 * C152369 + C60352 * C152368) * C152205 +
            (C65796 * C134328 + C65794 * C152369 + C65793 * C152368) *
                C152301) *
               C152072) *
              C151967 * C705 +
          (((C66214 * C152368 + C66215 * C152369 + C118548 * C134328) *
                C152301 +
            (C66004 * C152368 + C66005 * C152369 +
             (C59421 * C2905 - C59422 * C2898 - C59421 * C2906 +
              C151908 * C2910) *
                 C134328) *
                C152205) *
               C152072 -
           ((C143178 + C143177 + C143176) * C152205 +
            (C66215 * C134328 + C66214 * C152369 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C152368) *
                C152301) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C152368 +
              C65786 * C152369 + C65787 * C134328) *
                 C152301 +
             (C142746 + C142747 + C142748) * C152205) *
                C152285 -
            ((C143663 + C143664 + C143665) * C152205 +
             (C65788 * C134328 + C65787 * C152369 + C65786 * C152368) *
                 C152301) *
                C152072) *
               C1211 +
           (((C143665 + C143664 + C143663) * C152301 +
             (C144239 + C144240 + C144241) * C152205) *
                C152072 -
            ((C142749 + C142750 + C142751) * C152205 +
             (C142748 + C142747 + C142746) * C152301) *
                C152285) *
               C1212 +
           (((C142751 + C142750 + C142749) * C152301 +
             (C144012 + C144013 + C144014) * C152205) *
                C152285 -
            ((C62160 * C134328 + C60792 * C152369 + C60344 * C152368) *
                 C152205 +
             (C144241 + C144240 + C144239) * C152301) *
                C152072) *
               C152326) *
              C152270 +
          ((((C65789 * C152368 + C65790 * C152369 + C65791 * C134328) *
                 C152301 +
             (C143666 + C143667 + C143668) * C152205) *
                C152072 -
            ((C142754 + C142753 + C142752) * C152205 +
             (C65790 * C134328 + C65789 * C152369 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C152368) *
                 C152301) *
                C152285) *
               C1211 +
           (((C142752 + C142753 + C142754) * C152301 +
             (C142755 + C142756 + C142757) * C152205) *
                C152285 -
            ((C144732 + C144733 + C144734) * C152205 +
             (C143668 + C143667 + C143666) * C152301) *
                C152072) *
               C1212 +
           (((C144734 + C144733 + C144732) * C152301 +
             (C60349 * C152368 + C61872 * C152369 +
              (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
               C151908 * C10126) *
                  C134328) *
                 C152205) *
                C152072 -
            ((C144439 + C144440 + C144441) * C152205 +
             (C142757 + C142756 + C142755) * C152301) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152368 +
            C65786 * C152369 + C65787 * C134328) *
               C152301 +
           (C59642 * C152368 + C60346 * C152369 + C60790 * C134328) * C152205) *
              C151985 * C151967 * C129 -
          ((C61874 * C134328 + C60347 * C152369 + C59646 * C152368) * C152205 +
           (C65790 * C134328 + C65789 * C152369 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C152368) *
               C152301) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C152368 +
            C65793 * C152369 + C65794 * C134328) *
               C152301 +
           (C59650 * C152368 + C60352 * C152369 + C65498 * C134328) * C152205) *
              C151985 * C151967 * C131 -
          ((C66005 * C134328 + C66004 * C152369 + C59960 * C152368) * C152205 +
           (C66215 * C134328 + C66214 * C152369 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C152368) *
               C152301) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C152368 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152369 +
            (C59421 * C553 - C59422 * C532 - C59421 * C554 + C151908 * C568) *
                C134328) *
               C152301 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C152368 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152369 +
            (C59421 * C2624 - C59422 * C2623 - C59421 * C2625 +
             C151908 * C2626) *
                C134328) *
               C152205) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C152373 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C152357 +
           ((C142751 + C142750 + C142749) * C152301 +
            (C59644 * C152368 + C60344 * C152369 + C60792 * C134328) *
                C152205) *
               C151985 * C152326) *
              C323 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C152357 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C152373 -
           ((C61872 * C134328 + C60349 * C152369 + C59648 * C152368) * C152205 +
            (C142757 + C142756 + C142755) * C152301) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C151985 * C152373 -
           ((C142761 + C142762 + C142763) * C152205 +
            (C142760 + C142759 + C142758) * C152301) *
               C151985 * C152357 +
           ((C142763 + C142762 + C142761) * C152301 +
            (C59652 * C152368 + C60350 * C152369 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C134328) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C152368 +
             C65786 * C152369 + C65787 * C134328) *
                C152301 +
            (C142746 + C142747 + C142748) * C152205) *
               C151985 * C1211 -
           ((C142749 + C142750 + C142751) * C152205 +
            (C142748 + C142747 + C142746) * C152301) *
               C151985 * C1212 +
           ((C142751 + C142750 + C142749) * C152301 +
            (C59644 * C152368 + C60344 * C152369 + C60792 * C134328) *
                C152205) *
               C151985 * C152326) *
              C152370 +
          (((C142752 + C142753 + C142754) * C152301 +
            (C142755 + C142756 + C142757) * C152205) *
               C151985 * C1212 -
           ((C142754 + C142753 + C142752) * C152205 +
            (C65790 * C134328 + C65789 * C152369 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C152368) *
                C152301) *
               C151985 * C1211 -
           ((C61872 * C134328 + C60349 * C152369 + C59648 * C152368) * C152205 +
            (C142757 + C142756 + C142755) * C152301) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C152368 +
             C65793 * C152369 + C65794 * C134328) *
                C152301 +
            (C142758 + C142759 + C142760) * C152205) *
               C151985 * C1211 -
           ((C142761 + C142762 + C142763) * C152205 +
            (C142760 + C142759 + C142758) * C152301) *
               C151985 * C1212 +
           ((C142763 + C142762 + C142761) * C152301 +
            (C59652 * C152368 + C60350 * C152369 +
             (C59421 * C9696 - C59422 * C9695 - C59421 * C9697 +
              C151908 * C9698) *
                 C134328) *
                C152205) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C152368 +
            C65786 * C152369 + C65787 * C134328) *
               C152301 +
           (C142746 + C142747 + C142748) * C152205) *
              C151985 * C1299 -
          ((C142749 + C142750 + C142751) * C152205 +
           (C142748 + C142747 + C142746) * C152301) *
              C151985 * C1300 +
          ((C142751 + C142750 + C142749) * C152301 +
           (C144012 + C144013 + C144014) * C152205) *
              C151985 * C1301 -
          ((C144015 + C144016 + C144017) * C152205 +
           (C144014 + C144013 + C144012) * C152301) *
              C151985 * C1302 +
          ((C144017 + C144016 + C144015) * C152301 +
           (C60606 * C152368 + C61280 * C152369 +
            (C59421 * C60756 - C59422 * C60755 - C59421 * C60757 +
             C151908 * C60758) *
                C134328) *
               C152205) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152026 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152033 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C151985 * C3525) *
              C151944 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C152033 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152026 -
           ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
            C110050 * C6026) *
               C151985 * C3525) *
              C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152026 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152033 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C152026 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152033 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C3525) *
              C151944 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152033 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152026 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C3525) *
              C151953 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C152026 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152033 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C152026 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C152033 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C3525) *
              C151944 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C152033 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C152026 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C3525) *
              C151953 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C152026 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C152033 +
           (C59651 * C117978 + C60351 * C117979 + C65499 * C117980 +
            (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
             C151908 * C9924) *
                C117981) *
               C152155 * C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152285 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152026 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152285) *
               C152033 +
           ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
                C152285 -
            ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
             C111528 * C6026) *
                C152072) *
               C3525) *
              C3181 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152285) *
               C152026 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152285 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152033 +
           ((C112025 * C6026 + (C112027 + C112026) * C6027 +
             (C61138 * C101464 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
             C110050 * C6026) *
                C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152285 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C152026 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152285) *
               C152033 +
           (((C51232 + C51231 + C51230) * C101464 +
             (C52882 + C52883 + C52884) * C152231) *
                C152155 * C152285 -
            ((C52885 + C52886 + C52887) * C152231 +
             (C52884 + C52883 + C52882) * C101464) *
                C152155 * C152072) *
               C3525) *
              C3181 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152285) *
               C152026 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152285 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152033 +
           (((C53413 + C53412 + C53411) * C101464 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C53411 + C53412 + C53413) * C152231 +
             (C51238 + C51237 + C51236) * C101464) *
                C152155 * C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C152285 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152072) *
               C152026 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152072 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C152285) *
               C152033 +
           ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
             C62161 * C117981) *
                C152155 * C152285 -
            (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
             C60345 * C117978) *
                C152155 * C152072) *
               C3525) *
              C3181 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152072 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C152285) *
               C152026 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C152285 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152072) *
               C152033 +
           ((C60348 * C117978 + C61873 * C117979 + C67597 * C117980 +
             (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
              C151908 * C9404) *
                 C117981) *
                C152155 * C152072 -
            (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
             C59647 * C117978) *
                C152155 * C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C151985 * C3041 -
               ((C52216 + C52217 + C52218) * C152231 +
                (C51229 + C51228 + C51227) * C101464) *
                   C152155 * C151985 * C152030) *
                  C152379 +
              (((C51233 + C51234 + C51235) * C101464 +
                (C52219 + C52220 + C52221) * C152231) *
                   C152155 * C151985 * C152030 -
               ((C102019 + C102018 + C102017) * C152231 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C101464) *
                   C152155 * C151985 * C3041) *
                  C152372 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C101464 +
                (C102023 + C102024 + C102025) * C152231) *
                   C152155 * C151985 * C3041 -
               ((C52222 + C52223 + C52224) * C152231 +
                (C51241 + C51240 + C51239) * C101464) *
                   C152155 * C151985 * C152030) *
                  C152355 +
              (((C51675 + C51676 + C51677) * C101464 +
                (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 +
                 C50889 * C1062 + C50896 * C1055 - C50897 * C1045 -
                 C50896 * C1056 + C50890 * C1063 + C50898 * C1057 -
                 C50899 * C1046 - C50898 * C1058 + C50891 * C1064) *
                    C152231) *
                   C152155 * C151985 * C152030 -
               ((C102437 + C102436 + C102435) * C152231 +
                (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                 C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                 C50894 * C156 - C50895 * C145 - C50894 * C157 +
                 C50889 * C169) *
                    C101464) *
                   C152155 * C151985 * C3041) *
                  C152330) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C151985 * C152380 -
               ((C52216 + C52217 + C52218) * C152231 +
                (C51229 + C51228 + C51227) * C101464) *
                   C152155 * C151985 * C152376 +
               ((C51232 + C51231 + C51230) * C101464 +
                (C52882 + C52883 + C52884) * C152231) *
                   C152155 * C151985 * C152362 -
               ((C53626 + C53627 + C53628) * C152231 +
                (C52603 + C52602 + C52601) * C101464) *
                   C152155 * C151985 * C152336) *
                  C3181 +
              (((C51233 + C51234 + C51235) * C101464 +
                (C52219 + C52220 + C52221) * C152231) *
                   C152155 * C151985 * C152376 -
               ((C102019 + C102018 + C102017) * C152231 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C101464) *
                   C152155 * C151985 * C152380 -
               ((C53411 + C53412 + C53413) * C152231 +
                (C51238 + C51237 + C51236) * C101464) *
                   C152155 * C151985 * C152362 +
               ((C53102 + C53101 + C53100) * C101464 +
                (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
                 C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
                 C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
                 C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                    C152231) *
                   C152155 * C151985 * C152336) *
                  C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152374 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152359 +
            ((C102016 + C102015 + C102014) * C101464 +
             (C104558 + C104559 + C104560) * C152231) *
                C152155 * C152329) *
               C3041 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152359 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152374 -
            ((C54904 + C54905 + C54906) * C152231 +
             (C52881 + C52880 + C52879) * C101464) *
                C152155 * C152329) *
               C152030) *
              C3181 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152359 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152374 -
            ((C105066 + C105067 + C105068) * C152231 +
             (C102022 + C102021 + C102020) * C101464) *
                C152155 * C152329) *
               C3041 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152374 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152359 +
            ((C54497 + C54496 + C54495) * C101464 +
             (C50894 * C2901 - C50895 * C2896 - C50894 * C2902 +
              C50889 * C2908 + C50896 * C2903 - C50897 * C2897 -
              C50896 * C2904 + C50890 * C2909 + C50898 * C2905 -
              C50899 * C2898 - C50898 * C2906 + C50891 * C2910) *
                 C152231) *
                C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C3041 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152030) *
              C152379 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C152030 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C3041) *
              C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C3041 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152030) *
              C152355 +
          (((C110464 + C110465) * C6026 + (C110466 + C110467) * C6027 +
            (C59962 * C101464 + (C59421 * C2009 - C59422 * C2002 -
                                 C59421 * C2010 + C151908 * C2014) *
                                    C152231) *
                C6028) *
               C151985 * C152030 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152380 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152376 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C151985 * C152362 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C151985 * C152336) *
              C3181 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C152376 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152380 -
           ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
            C110050 * C6026) *
               C151985 * C152362 +
           (C111732 * C6026 + (C111734 + C111733) * C6027 +
            (C60936 * C101464 + (C59421 * C8803 - C59422 * C8800 -
                                 C59421 * C8804 + C151908 * C8806) *
                                    C152231) *
                C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152374 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152359 +
            ((C65787 * C101464 + C65788 * C152231) * C6026 +
             (C111529 + C111530) * C6027 + C111537 * C6028) *
                C152329) *
               C3041 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152359 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152374 -
            ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
             (C111530 + C111529) * C6026) *
                C152329) *
               C152030) *
              C3181 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152359 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152374 -
            ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
             (C65791 * C152231 + C65790 * C101464) * C6026) *
                C152329) *
               C3041 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152374 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152359 +
            ((C113076 + C113075) * C6026 + (C113074 + C113073) * C6027 +
             (C61872 * C101464 + (C59421 * C10123 - C59422 * C10120 -
                                  C59421 * C10124 + C151908 * C10126) *
                                     C152231) *
                 C6028) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C3041 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C152030) *
              C152379 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C152030 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C3041) *
              C152372 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C3041 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C152030) *
              C152355 +
          ((C59960 * C117978 + C66004 * C117979 + C66005 * C117980 +
            (C59421 * C2905 - C59422 * C2898 - C59421 * C2906 +
             C151908 * C2910) *
                C117981) *
               C152155 * C151985 * C152030 -
           (C118548 * C117981 + C66215 * C117980 + C66214 * C117979 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C117978) *
               C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C152380 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C152376 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C152362 -
           (C62160 * C117981 + C60792 * C117980 + C60344 * C117979 +
            C59644 * C117978) *
               C152155 * C151985 * C152336) *
              C3181 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C152376 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C152380 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C152362 +
           (C59648 * C117978 + C60349 * C117979 + C61872 * C117980 +
            (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
             C151908 * C10126) *
                C117981) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C152374 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152359 +
            (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
             C68378 * C117981) *
                C152155 * C152329) *
               C3041 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152359 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C152374 -
            (C68377 * C117981 + C67098 * C117980 + C62162 * C117979 +
             C60790 * C117978) *
                C152155 * C152329) *
               C152030) *
              C3181 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152359 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C152374 -
            (C120286 * C117981 + C68879 * C117980 + C65791 * C117979 +
             C65790 * C117978) *
                C152155 * C152329) *
               C3041 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C152374 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152359 +
            (C61874 * C117978 + C65792 * C117979 + C68677 * C117980 +
             (C59421 * C18554 - C59422 * C18551 - C59421 * C18555 +
              C151908 * C18557) *
                 C117981) *
                C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152285 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C3041 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152285) *
               C152030) *
              C151944 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152285) *
               C3041 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152285 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152030) *
              C151953 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C101464 +
              C65793 * C152231) *
                 C6026 +
             (C110043 + C110044) * C6027 + C110051 * C6028) *
                C152285 -
            ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
             (C65794 * C152231 + C65793 * C101464) * C6026) *
                C152072) *
               C3041 +
           (((C110963 + C110962) * C6026 + (C110961 + C110960) * C6027 +
             (C60350 * C101464 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
             (C110044 + C110043) * C6026) *
                C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152285 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C3041 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152285) *
               C152030) *
              C151944 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152285) *
               C3041 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152285 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152030) *
              C151953 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C101464 +
             (C102023 + C102024 + C102025) * C152231) *
                C152155 * C152285 -
            ((C102026 + C102027 + C102028) * C152231 +
             (C102025 + C102024 + C102023) * C101464) *
                C152155 * C152072) *
               C3041 +
           (((C52224 + C52223 + C52222) * C101464 +
             (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
              C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
              C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
              C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C52222 + C52223 + C52224) * C152231 +
             (C51241 + C51240 + C51239) * C101464) *
                C152155 * C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C152285 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152072) *
               C3041 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152072 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C152285) *
               C152030) *
              C151944 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152072 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C152285) *
               C3041 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C152285 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152072) *
               C152030) *
              C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C117978 +
             C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
                C152155 * C152285 -
            (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
             C65793 * C117978) *
                C152155 * C152072) *
               C3041 +
           ((C60352 * C117978 + C65498 * C117979 + C65795 * C117980 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C117981) *
                C152155 * C152072 -
            (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
             C59650 * C117978) *
                C152155 * C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C152380 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152376 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152362 -
           ((C53626 + C53627 + C53628) * C152231 +
            (C52603 + C52602 + C52601) * C101464) *
               C152155 * C151985 * C152336) *
              C3181 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152376 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152380 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152362 +
           ((C53102 + C53101 + C53100) * C101464 +
            (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 + C50889 * C2012 +
             C50896 * C2007 - C50897 * C2001 - C50896 * C2008 + C50890 * C2013 +
             C50898 * C2009 - C50899 * C2002 - C50898 * C2010 +
             C50891 * C2014) *
                C152231) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C3041 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152030) *
              C152379 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152030 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C3041) *
              C152372 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C3041 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152030) *
              C152355 +
          (((C51675 + C51676 + C51677) * C101464 +
            (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 + C50889 * C1062 +
             C50896 * C1055 - C50897 * C1045 - C50896 * C1056 + C50890 * C1063 +
             C50898 * C1057 - C50899 * C1046 - C50898 * C1058 +
             C50891 * C1064) *
                C152231) *
               C152155 * C151985 * C152030 -
           ((C102437 + C102436 + C102435) * C152231 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C101464) *
               C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C3041 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152030) *
              C152379 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C152030 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C3041) *
              C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C3041 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152030) *
              C152355 +
          (((C110464 + C110465) * C6026 + (C110466 + C110467) * C6027 +
            (C59962 * C101464 + (C59421 * C2009 - C59422 * C2002 -
                                 C59421 * C2010 + C151908 * C2014) *
                                    C152231) *
                C6028) *
               C151985 * C152030 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152380 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152376 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C151985 * C152362 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C151985 * C152336) *
              C3181 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C152376 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152380 -
           ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
            C110050 * C6026) *
               C151985 * C152362 +
           (C111732 * C6026 + (C111734 + C111733) * C6027 +
            (C60936 * C101464 + (C59421 * C8803 - C59422 * C8800 -
                                 C59421 * C8804 + C151908 * C8806) *
                                    C152231) *
                C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C3041 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C152030) *
              C152379 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C152030 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C3041) *
              C152372 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C3041 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C152030) *
              C152355 +
          ((C59960 * C117978 + C66004 * C117979 + C66005 * C117980 +
            (C59421 * C2905 - C59422 * C2898 - C59421 * C2906 +
             C151908 * C2910) *
                C117981) *
               C152155 * C151985 * C152030 -
           (C118548 * C117981 + C66215 * C117980 + C66214 * C117979 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C117978) *
               C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C152380 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C152376 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C152362 -
           (C62160 * C117981 + C60792 * C117980 + C60344 * C117979 +
            C59644 * C117978) *
               C152155 * C151985 * C152336) *
              C3181 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C152376 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C152380 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C152362 +
           (C59648 * C117978 + C60349 * C117979 + C61872 * C117980 +
            (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
             C151908 * C10126) *
                C117981) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C4047 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152026 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C4047) *
               C152033 +
           ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
                C4047 -
            ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
             C111528 * C6026) *
                C152072) *
               C3525) *
              C152270 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C4047) *
               C152026 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C4047 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152033 +
           ((C112025 * C6026 + (C112027 + C112026) * C6027 +
             (C61138 * C101464 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
             C110050 * C6026) *
                C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C4047 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C152026 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C4047) *
               C152033 +
           (((C51232 + C51231 + C51230) * C101464 +
             (C52882 + C52883 + C52884) * C152231) *
                C152155 * C4047 -
            ((C52885 + C52886 + C52887) * C152231 +
             (C52884 + C52883 + C52882) * C101464) *
                C152155 * C152072) *
               C3525) *
              C152270 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C4047) *
               C152026 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C4047 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152033 +
           (((C53413 + C53412 + C53411) * C101464 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C53411 + C53412 + C53413) * C152231 +
             (C51238 + C51237 + C51236) * C101464) *
                C152155 * C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C4047 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152072) *
               C152026 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152072 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C4047) *
               C152033 +
           ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
             C62161 * C117981) *
                C152155 * C4047 -
            (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
             C60345 * C117978) *
                C152155 * C152072) *
               C3525) *
              C152270 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152072 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C4047) *
               C152026 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C4047 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152072) *
               C152033 +
           ((C60348 * C117978 + C61873 * C117979 + C67597 * C117980 +
             (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
              C151908 * C9404) *
                 C117981) *
                C152155 * C152072 -
            (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
             C59647 * C117978) *
                C152155 * C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152068 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152075 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C4719) *
              C152026 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C152075 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C152068 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C4719) *
              C152033 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C152068 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C152075 +
           (C111537 * C6026 + (C111536 + C111535) * C6027 +
            (C60794 * C101464 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C6028) *
               C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152068 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152075 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C104558 + C104559 + C104560) * C152231) *
               C152155 * C4719) *
              C152026 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152075 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C152068 -
           ((C54904 + C54905 + C54906) * C152231 +
            (C52881 + C52880 + C52879) * C101464) *
               C152155 * C4719) *
              C152033 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C152068 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C152075 +
           ((C52887 + C52886 + C52885) * C101464 +
            (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 + C50889 * C9400 +
             C50896 * C9387 - C50897 * C9381 - C50896 * C9388 + C50890 * C9399 +
             C50898 * C9922 - C50899 * C9921 - C50898 * C9923 +
             C50891 * C9924) *
                C152231) *
               C152155 * C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C152068 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152075 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C4719) *
              C152026 +
          ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
            C67098 * C117981) *
               C152155 * C152075 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C152068 -
           (C68377 * C117981 + C67098 * C117980 + C62162 * C117979 +
            C60790 * C117978) *
               C152155 * C4719) *
              C152033 +
          ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C152068 -
           (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
            C60345 * C117978) *
               C152155 * C152075 +
           (C60791 * C117978 + C62161 * C117979 + C67099 * C117980 +
            (C59421 * C69074 - C59422 * C69073 - C59421 * C69075 +
             C151908 * C69076) *
                C117981) *
               C152155 * C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50894 * C150 - C50895 * C142 - C50894 * C151 +
                  C50889 * C166 + C50896 * C152 - C50897 * C143 -
                  C50896 * C153 + C50890 * C167 + C50898 * C154 -
                  C50899 * C144 - C50898 * C155 + C50891 * C168) *
                     C101464 +
                 (C102011 + C102012 + C102013) * C152231) *
                    C152155 * C4047 -
                ((C102014 + C102015 + C102016) * C152231 +
                 (C102013 + C102012 + C102011) * C101464) *
                    C152155 * C152072) *
                   C3041 +
               (((C52218 + C52217 + C52216) * C101464 +
                 (C52879 + C52880 + C52881) * C152231) *
                    C152155 * C152072 -
                ((C52216 + C52217 + C52218) * C152231 +
                 (C51229 + C51228 + C51227) * C101464) *
                    C152155 * C4047) *
                   C152030) *
                  C152370 +
              ((((C102017 + C102018 + C102019) * C101464 +
                 (C102020 + C102021 + C102022) * C152231) *
                    C152155 * C152072 -
                ((C102019 + C102018 + C102017) * C152231 +
                 (C50898 * C156 - C50899 * C145 - C50898 * C157 +
                  C50891 * C169 + C50896 * C154 - C50897 * C144 -
                  C50896 * C155 + C50890 * C168 + C50894 * C152 -
                  C50895 * C143 - C50894 * C153 + C50889 * C167) *
                     C101464) *
                    C152155 * C4047) *
                   C3041 +
               (((C51233 + C51234 + C51235) * C101464 +
                 (C52219 + C52220 + C52221) * C152231) *
                    C152155 * C4047 -
                ((C54495 + C54496 + C54497) * C152231 +
                 (C52221 + C52220 + C52219) * C101464) *
                    C152155 * C152072) *
                   C152030) *
                  C152353 +
              ((((C50894 * C154 - C50895 * C144 - C50894 * C155 +
                  C50889 * C168 + C50896 * C156 - C50897 * C145 -
                  C50896 * C157 + C50890 * C169 + C50898 * C158 -
                  C50899 * C146 - C50898 * C159 + C50891 * C170) *
                     C101464 +
                 (C102023 + C102024 + C102025) * C152231) *
                    C152155 * C4047 -
                ((C102026 + C102027 + C102028) * C152231 +
                 (C102025 + C102024 + C102023) * C101464) *
                    C152155 * C152072) *
                   C3041 +
               (((C52224 + C52223 + C52222) * C101464 +
                 (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
                  C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
                  C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
                  C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                     C152231) *
                    C152155 * C152072 -
                ((C52222 + C52223 + C52224) * C152231 +
                 (C51241 + C51240 + C51239) * C101464) *
                    C152155 * C4047) *
                   C152030) *
                  C152320) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C4047 -
               ((C102014 + C102015 + C102016) * C152231 +
                (C102013 + C102012 + C102011) * C101464) *
                   C152155 * C152072) *
                  C152380 +
              (((C52218 + C52217 + C52216) * C101464 +
                (C52879 + C52880 + C52881) * C152231) *
                   C152155 * C152072 -
               ((C52216 + C52217 + C52218) * C152231 +
                (C51229 + C51228 + C51227) * C101464) *
                   C152155 * C4047) *
                  C152376 +
              (((C51232 + C51231 + C51230) * C101464 +
                (C52882 + C52883 + C52884) * C152231) *
                   C152155 * C4047 -
               ((C52885 + C52886 + C52887) * C152231 +
                (C52884 + C52883 + C52882) * C101464) *
                   C152155 * C152072) *
                  C152362 +
              (((C53628 + C53627 + C53626) * C101464 +
                (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 +
                 C50889 * C8016 + C50896 * C8003 - C50897 * C7997 -
                 C50896 * C8004 + C50890 * C8015 + C50898 * C9696 -
                 C50899 * C9695 - C50898 * C9697 + C50891 * C9698) *
                    C152231) *
                   C152155 * C152072 -
               ((C53626 + C53627 + C53628) * C152231 +
                (C52603 + C52602 + C52601) * C101464) *
                   C152155 * C4047) *
                  C152336) *
             C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152381 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152378 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C104558 + C104559 + C104560) * C152231) *
               C152155 * C152365 -
           ((C104561 + C104562 + C104563) * C152231 +
            (C104560 + C104559 + C104558) * C101464) *
               C152155 * C152342) *
              C3041 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152378 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C152381 -
           ((C54904 + C54905 + C54906) * C152231 +
            (C52881 + C52880 + C52879) * C101464) *
               C152155 * C152365 +
           ((C54906 + C54905 + C54904) * C101464 +
            (C50894 * C9391 - C50895 * C9383 - C50894 * C9392 + C50889 * C9401 +
             C50896 * C9393 - C50897 * C9384 - C50896 * C9394 + C50890 * C9402 +
             C50898 * C18125 - C50899 * C18124 - C50898 * C18126 +
             C50891 * C18127) *
                C152231) *
               C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C4047 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C3041 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C4047) *
               C152030) *
              C152370 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C4047) *
               C3041 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C4047 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152030) *
              C152353 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C101464 +
              C65793 * C152231) *
                 C6026 +
             (C110043 + C110044) * C6027 + C110051 * C6028) *
                C4047 -
            ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
             (C65794 * C152231 + C65793 * C101464) * C6026) *
                C152072) *
               C3041 +
           (((C110963 + C110962) * C6026 + (C110961 + C110960) * C6027 +
             (C60350 * C101464 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
             (C110044 + C110043) * C6026) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C4047 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C152380 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C152072 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C4047) *
              C152376 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C4047 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C152072) *
              C152362 +
          ((C112222 * C6026 + (C112224 + C112223) * C6027 +
            (C61280 * C101464 + (C59421 * C60756 - C59422 * C60755 -
                                 C59421 * C60757 + C151908 * C60758) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152381 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152378 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152365 -
           ((C113465 + C113466) * C6028 + (C113467 + C113468) * C6027 +
            (C68376 * C152231 + C65788 * C101464) * C6026) *
               C152342) *
              C3041 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C152378 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C152381 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C152365 +
           ((C113468 + C113467) * C6026 + (C113466 + C113465) * C6027 +
            (C62160 * C101464 + (C59421 * C61656 - C59422 * C61655 -
                                 C59421 * C61657 + C151908 * C61658) *
                                    C152231) *
                C6028) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C4047 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152072) *
               C3041 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152072 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C4047) *
               C152030) *
              C152370 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152072 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C4047) *
               C3041 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C4047 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152072) *
               C152030) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C117978 +
             C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
                C152155 * C4047 -
            (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
             C65793 * C117978) *
                C152155 * C152072) *
               C3041 +
           ((C60352 * C117978 + C65498 * C117979 + C65795 * C117980 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C117981) *
                C152155 * C152072 -
            (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
             C59650 * C117978) *
                C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C4047 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152072) *
              C152380 +
          ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
            C67098 * C117981) *
               C152155 * C152072 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C4047) *
              C152376 +
          ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C4047 -
           (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
            C60345 * C117978) *
               C152155 * C152072) *
              C152362 +
          ((C60344 * C117978 + C60792 * C117979 + C62160 * C117980 +
            (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
             C151908 * C61658) *
                C117981) *
               C152155 * C152072 -
           (C62160 * C117981 + C60792 * C117980 + C60344 * C117979 +
            C59644 * C117978) *
               C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C152381 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152378 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C152365 -
           (C119955 * C117981 + C68378 * C117980 + C68376 * C117979 +
            C65788 * C117978) *
               C152155 * C152342) *
              C3041 +
          ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
            C67098 * C117981) *
               C152155 * C152378 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C152381 -
           (C68377 * C117981 + C67098 * C117980 + C62162 * C117979 +
            C60790 * C117978) *
               C152155 * C152365 +
           (C62162 * C117978 + C67098 * C117979 + C68377 * C117980 +
            (C59421 * C68354 - C59422 * C68353 - C59421 * C68355 +
             C151908 * C68356) *
                C117981) *
               C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152068 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152075 +
            ((C65787 * C101464 + C65788 * C152231) * C6026 +
             (C111529 + C111530) * C6027 + C111537 * C6028) *
                C4719) *
               C3041 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152075 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152068 -
            ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
             (C111530 + C111529) * C6026) *
                C4719) *
               C152030) *
              C152270 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152075 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152068 -
            ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
             (C65791 * C152231 + C65790 * C101464) * C6026) *
                C4719) *
               C3041 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152068 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152075 +
            ((C113076 + C113075) * C6026 + (C113074 + C113073) * C6027 +
             (C61872 * C101464 + (C59421 * C10123 - C59422 * C10120 -
                                  C59421 * C10124 + C151908 * C10126) *
                                     C152231) *
                 C6028) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152068 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152075 +
            ((C102016 + C102015 + C102014) * C101464 +
             (C104558 + C104559 + C104560) * C152231) *
                C152155 * C4719) *
               C3041 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152075 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152068 -
            ((C54904 + C54905 + C54906) * C152231 +
             (C52881 + C52880 + C52879) * C101464) *
                C152155 * C4719) *
               C152030) *
              C152270 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152075 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152068 -
            ((C105066 + C105067 + C105068) * C152231 +
             (C102022 + C102021 + C102020) * C101464) *
                C152155 * C4719) *
               C3041 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152068 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152075 +
            ((C54497 + C54496 + C54495) * C101464 +
             (C50894 * C2901 - C50895 * C2896 - C50894 * C2902 +
              C50889 * C2908 + C50896 * C2903 - C50897 * C2897 -
              C50896 * C2904 + C50890 * C2909 + C50898 * C2905 -
              C50899 * C2898 - C50898 * C2906 + C50891 * C2910) *
                 C152231) *
                C152155 * C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C152068 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152075 +
            (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
             C68378 * C117981) *
                C152155 * C4719) *
               C3041 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152075 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C152068 -
            (C68377 * C117981 + C67098 * C117980 + C62162 * C117979 +
             C60790 * C117978) *
                C152155 * C4719) *
               C152030) *
              C152270 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152075 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C152068 -
            (C120286 * C117981 + C68879 * C117980 + C65791 * C117979 +
             C65790 * C117978) *
                C152155 * C4719) *
               C3041 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C152068 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152075 +
            (C61874 * C117978 + C65792 * C117979 + C68677 * C117980 +
             (C59421 * C18554 - C59422 * C18551 - C59421 * C18555 +
              C151908 * C18557) *
                 C117981) *
                C152155 * C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C4047 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152072) *
              C152380 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152072 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C4047) *
              C152376 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C4047 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C152072) *
              C152362 +
          (((C53628 + C53627 + C53626) * C101464 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152231) *
               C152155 * C152072 -
           ((C53626 + C53627 + C53628) * C152231 +
            (C52603 + C52602 + C52601) * C101464) *
               C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C4047 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C3041 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C4047) *
               C152030) *
              C152370 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C4047) *
               C3041 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C4047 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152030) *
              C152353 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C101464 +
             (C102023 + C102024 + C102025) * C152231) *
                C152155 * C4047 -
            ((C102026 + C102027 + C102028) * C152231 +
             (C102025 + C102024 + C102023) * C101464) *
                C152155 * C152072) *
               C3041 +
           (((C52224 + C52223 + C52222) * C101464 +
             (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
              C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
              C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
              C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C52222 + C52223 + C52224) * C152231 +
             (C51241 + C51240 + C51239) * C101464) *
                C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C4047 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C3041 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C4047) *
               C152030) *
              C152370 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C4047) *
               C3041 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C4047 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152030) *
              C152353 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C101464 +
              C65793 * C152231) *
                 C6026 +
             (C110043 + C110044) * C6027 + C110051 * C6028) *
                C4047 -
            ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
             (C65794 * C152231 + C65793 * C101464) * C6026) *
                C152072) *
               C3041 +
           (((C110963 + C110962) * C6026 + (C110961 + C110960) * C6027 +
             (C60350 * C101464 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
             (C110044 + C110043) * C6026) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C4047 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C152380 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C152072 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C4047) *
              C152376 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C4047 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C152072) *
              C152362 +
          ((C112222 * C6026 + (C112224 + C112223) * C6027 +
            (C61280 * C101464 + (C59421 * C60756 - C59422 * C60755 -
                                 C59421 * C60757 + C151908 * C60758) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C4047 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152072) *
               C3041 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152072 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C4047) *
               C152030) *
              C152370 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152072 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C4047) *
               C3041 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C4047 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152072) *
               C152030) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C117978 +
             C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
                C152155 * C4047 -
            (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
             C65793 * C117978) *
                C152155 * C152072) *
               C3041 +
           ((C60352 * C117978 + C65498 * C117979 + C65795 * C117980 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C117981) *
                C152155 * C152072 -
            (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
             C59650 * C117978) *
                C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C4047 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152072) *
              C152380 +
          ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
            C67098 * C117981) *
               C152155 * C152072 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C4047) *
              C152376 +
          ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C4047 -
           (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
            C60345 * C117978) *
               C152155 * C152072) *
              C152362 +
          ((C60344 * C117978 + C60792 * C117979 + C62160 * C117980 +
            (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
             C151908 * C61658) *
                C117981) *
               C152155 * C152072 -
           (C62160 * C117981 + C60792 * C117980 + C60344 * C117979 +
            C59644 * C117978) *
               C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C151985 * C152284 -
               ((C52216 + C52217 + C52218) * C152231 +
                (C51229 + C51228 + C51227) * C101464) *
                   C152155 * C151985 * C152030) *
                  C703 +
              (((C51233 + C51234 + C51235) * C101464 +
                (C52219 + C52220 + C52221) * C152231) *
                   C152155 * C151985 * C152030 -
               ((C102019 + C102018 + C102017) * C152231 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C101464) *
                   C152155 * C151985 * C152284) *
                  C704 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C101464 +
                (C102023 + C102024 + C102025) * C152231) *
                   C152155 * C151985 * C152284 -
               ((C52222 + C52223 + C52224) * C152231 +
                (C51241 + C51240 + C51239) * C101464) *
                   C152155 * C151985 * C152030) *
                  C705 +
              (((C51675 + C51676 + C51677) * C101464 +
                (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 +
                 C50889 * C1062 + C50896 * C1055 - C50897 * C1045 -
                 C50896 * C1056 + C50890 * C1063 + C50898 * C1057 -
                 C50899 * C1046 - C50898 * C1058 + C50891 * C1064) *
                    C152231) *
                   C152155 * C151985 * C152030 -
               ((C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569 +
                 C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
                 C50894 * C535 - C50895 * C523 - C50894 * C536 +
                 C50889 * C559) *
                    C152231 +
                (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                 C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                 C50894 * C156 - C50895 * C145 - C50894 * C157 +
                 C50889 * C169) *
                    C101464) *
                   C152155 * C151985 * C152284) *
                  C152330) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C151985 * C1661 -
               ((C52216 + C52217 + C52218) * C152231 +
                (C51229 + C51228 + C51227) * C101464) *
                   C152155 * C151985 * C1662 +
               ((C51232 + C51231 + C51230) * C101464 +
                (C52882 + C52883 + C52884) * C152231) *
                   C152155 * C151985 * C1663 -
               ((C53626 + C53627 + C53628) * C152231 +
                (C52603 + C52602 + C52601) * C101464) *
                   C152155 * C151985 * C152336) *
                  C152270 +
              (((C51233 + C51234 + C51235) * C101464 +
                (C52219 + C52220 + C52221) * C152231) *
                   C152155 * C151985 * C1662 -
               ((C102019 + C102018 + C102017) * C152231 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C101464) *
                   C152155 * C151985 * C1661 -
               ((C53411 + C53412 + C53413) * C152231 +
                (C51238 + C51237 + C51236) * C101464) *
                   C152155 * C151985 * C1663 +
               ((C53102 + C53101 + C53100) * C101464 +
                (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 +
                 C50889 * C2012 + C50896 * C2007 - C50897 * C2001 -
                 C50896 * C2008 + C50890 * C2013 + C50898 * C2009 -
                 C50899 * C2002 - C50898 * C2010 + C50891 * C2014) *
                    C152231) *
                   C152155 * C151985 * C152336) *
                  C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C2161 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C2162 +
            ((C102016 + C102015 + C102014) * C101464 +
             (C104558 + C104559 + C104560) * C152231) *
                C152155 * C152329) *
               C152284 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C2162 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C2161 -
            ((C54904 + C54905 + C54906) * C152231 +
             (C52881 + C52880 + C52879) * C101464) *
                C152155 * C152329) *
               C152030) *
              C152270 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C2162 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C2161 -
            ((C50898 * C2405 - C50899 * C2397 - C50898 * C2406 +
              C50891 * C2421 + C50896 * C2407 - C50897 * C2398 -
              C50896 * C2408 + C50890 * C2422 + C50894 * C2409 -
              C50895 * C2399 - C50894 * C2410 + C50889 * C2423) *
                 C152231 +
             (C102022 + C102021 + C102020) * C101464) *
                C152155 * C152329) *
               C152284 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C2161 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C2162 +
            ((C54497 + C54496 + C54495) * C101464 +
             (C50894 * C2901 - C50895 * C2896 - C50894 * C2902 +
              C50889 * C2908 + C50896 * C2903 - C50897 * C2897 -
              C50896 * C2904 + C50890 * C2909 + C50898 * C2905 -
              C50899 * C2898 - C50898 * C2906 + C50891 * C2910) *
                 C152231) *
                C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152284 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152030) *
              C703 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C152030 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152284) *
              C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152284 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152030) *
              C705 +
          (((C110464 + C110465) * C6026 + (C110466 + C110467) * C6027 +
            (C59962 * C101464 + (C59421 * C2009 - C59422 * C2002 -
                                 C59421 * C2010 + C151908 * C2014) *
                                    C152231) *
                C6028) *
               C151985 * C152030 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C1661 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C1662 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C151985 * C1663 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C151985 * C152336) *
              C152270 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C1662 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C1661 -
           ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
            C110050 * C6026) *
               C151985 * C1663 +
           (C111732 * C6026 + (C111734 + C111733) * C6027 +
            (C60936 * C101464 + (C59421 * C8803 - C59422 * C8800 -
                                 C59421 * C8804 + C151908 * C8806) *
                                    C152231) *
                C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C2161 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C2162 +
            ((C65787 * C101464 + C65788 * C152231) * C6026 +
             (C111529 + C111530) * C6027 + C111537 * C6028) *
                C152329) *
               C152284 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C2162 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C2161 -
            ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
             (C111530 + C111529) * C6026) *
                C152329) *
               C152030) *
              C152270 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C2162 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C2161 -
            ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
             (C65791 * C152231 + C65790 * C101464) * C6026) *
                C152329) *
               C152284 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C2161 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C2162 +
            ((C113076 + C113075) * C6026 + (C113074 + C113073) * C6027 +
             (C61872 * C101464 + (C59421 * C10123 - C59422 * C10120 -
                                  C59421 * C10124 + C151908 * C10126) *
                                     C152231) *
                 C6028) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C152284 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C152030) *
              C703 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C152030 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C152284) *
              C704 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C152284 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C152030) *
              C705 +
          ((C59960 * C117978 + C66004 * C117979 + C66005 * C117980 +
            (C59421 * C2905 - C59422 * C2898 - C59421 * C2906 +
             C151908 * C2910) *
                C117981) *
               C152155 * C151985 * C152030 -
           ((C59421 * C2405 - C59422 * C2397 - C59421 * C2406 +
             C151908 * C2421) *
                C117981 +
            C66215 * C117980 + C66214 * C117979 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C117978) *
               C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C1661 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C1662 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C1663 -
           (C62160 * C117981 + C60792 * C117980 + C60344 * C117979 +
            C59644 * C117978) *
               C152155 * C151985 * C152336) *
              C152270 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C1662 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C1661 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C1663 +
           (C59648 * C117978 + C60349 * C117979 + C61872 * C117980 +
            (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
             C151908 * C10126) *
                C117981) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C2161 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C2162 +
            (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
             C68378 * C117981) *
                C152155 * C152329) *
               C152284 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C2162 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C2161 -
            (C68377 * C117981 + C67098 * C117980 + C62162 * C117979 +
             C60790 * C117978) *
                C152155 * C152329) *
               C152030) *
              C152270 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C2162 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C2161 -
            ((C59421 * C17792 - C59422 * C17788 - C59421 * C17793 +
              C151908 * C17800) *
                 C117981 +
             C68879 * C117980 + C65791 * C117979 + C65790 * C117978) *
                C152155 * C152329) *
               C152284 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C2161 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C2162 +
            (C61874 * C117978 + C65792 * C117979 + C68677 * C117980 +
             (C59421 * C18554 - C59422 * C18551 - C59421 * C18555 +
              C151908 * C18557) *
                 C117981) *
                C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50894 * C150 - C50895 * C142 - C50894 * C151 +
                  C50889 * C166 + C50896 * C152 - C50897 * C143 -
                  C50896 * C153 + C50890 * C167 + C50898 * C154 -
                  C50899 * C144 - C50898 * C155 + C50891 * C168) *
                     C101464 +
                 (C102011 + C102012 + C102013) * C152231) *
                    C152155 * C152285 -
                ((C102014 + C102015 + C102016) * C152231 +
                 (C102013 + C102012 + C102011) * C101464) *
                    C152155 * C152072) *
                   C152284 +
               (((C52218 + C52217 + C52216) * C101464 +
                 (C52879 + C52880 + C52881) * C152231) *
                    C152155 * C152072 -
                ((C52216 + C52217 + C52218) * C152231 +
                 (C51229 + C51228 + C51227) * C101464) *
                    C152155 * C152285) *
                   C152030) *
                  C323 +
              ((((C102017 + C102018 + C102019) * C101464 +
                 (C102020 + C102021 + C102022) * C152231) *
                    C152155 * C152072 -
                ((C102019 + C102018 + C102017) * C152231 +
                 (C50898 * C156 - C50899 * C145 - C50898 * C157 +
                  C50891 * C169 + C50896 * C154 - C50897 * C144 -
                  C50896 * C155 + C50890 * C168 + C50894 * C152 -
                  C50895 * C143 - C50894 * C153 + C50889 * C167) *
                     C101464) *
                    C152155 * C152285) *
                   C152284 +
               (((C51233 + C51234 + C51235) * C101464 +
                 (C52219 + C52220 + C52221) * C152231) *
                    C152155 * C152285 -
                ((C54495 + C54496 + C54497) * C152231 +
                 (C52221 + C52220 + C52219) * C101464) *
                    C152155 * C152072) *
                   C152030) *
                  C324 +
              ((((C50894 * C154 - C50895 * C144 - C50894 * C155 +
                  C50889 * C168 + C50896 * C156 - C50897 * C145 -
                  C50896 * C157 + C50890 * C169 + C50898 * C158 -
                  C50899 * C146 - C50898 * C159 + C50891 * C170) *
                     C101464 +
                 (C102023 + C102024 + C102025) * C152231) *
                    C152155 * C152285 -
                ((C102026 + C102027 + C102028) * C152231 +
                 (C102025 + C102024 + C102023) * C101464) *
                    C152155 * C152072) *
                   C152284 +
               (((C52224 + C52223 + C52222) * C101464 +
                 (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
                  C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
                  C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
                  C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                     C152231) *
                    C152155 * C152072 -
                ((C52222 + C52223 + C52224) * C152231 +
                 (C51241 + C51240 + C51239) * C101464) *
                    C152155 * C152285) *
                   C152030) *
                  C152320) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C152285 -
               ((C102014 + C102015 + C102016) * C152231 +
                (C102013 + C102012 + C102011) * C101464) *
                   C152155 * C152072) *
                  C1661 +
              (((C52218 + C52217 + C52216) * C101464 +
                (C52879 + C52880 + C52881) * C152231) *
                   C152155 * C152072 -
               ((C52216 + C52217 + C52218) * C152231 +
                (C51229 + C51228 + C51227) * C101464) *
                   C152155 * C152285) *
                  C1662 +
              (((C51232 + C51231 + C51230) * C101464 +
                (C52882 + C52883 + C52884) * C152231) *
                   C152155 * C152285 -
               ((C52885 + C52886 + C52887) * C152231 +
                (C52884 + C52883 + C52882) * C101464) *
                   C152155 * C152072) *
                  C1663 +
              (((C53628 + C53627 + C53626) * C101464 +
                (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 +
                 C50889 * C8016 + C50896 * C8003 - C50897 * C7997 -
                 C50896 * C8004 + C50890 * C8015 + C50898 * C9696 -
                 C50899 * C9695 - C50898 * C9697 + C50891 * C9698) *
                    C152231) *
                   C152155 * C152072 -
               ((C53626 + C53627 + C53628) * C152231 +
                (C52603 + C52602 + C52601) * C101464) *
                   C152155 * C152285) *
                  C152336) *
             C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C2757 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C2758 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C104558 + C104559 + C104560) * C152231) *
               C152155 * C2759 -
           ((C104561 + C104562 + C104563) * C152231 +
            (C104560 + C104559 + C104558) * C101464) *
               C152155 * C152342) *
              C152284 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C2758 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C2757 -
           ((C54904 + C54905 + C54906) * C152231 +
            (C52881 + C52880 + C52879) * C101464) *
               C152155 * C2759 +
           ((C54906 + C54905 + C54904) * C101464 +
            (C50894 * C9391 - C50895 * C9383 - C50894 * C9392 + C50889 * C9401 +
             C50896 * C9393 - C50897 * C9384 - C50896 * C9394 + C50890 * C9402 +
             C50898 * C18125 - C50899 * C18124 - C50898 * C18126 +
             C50891 * C18127) *
                C152231) *
               C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152285 -
            ((C110952 + C110953) * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152284 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             (C60344 * C101464 + C60792 * C152231) * C6028) *
                C152072 -
            ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152285) *
               C152030) *
              C323 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + (C110958 + C110959) * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152285) *
               C152284 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             (C110041 + C110042) * C6028) *
                C152285 -
            ((C61872 * C152231 + C60349 * C101464) * C6028 +
             (C110959 + C110958) * C6027 + (C110957 + C110956) * C6026) *
                C152072) *
               C152030) *
              C324 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C101464 +
              C65793 * C152231) *
                 C6026 +
             (C110043 + C110044) * C6027 + C110051 * C6028) *
                C152285 -
            ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
             (C65794 * C152231 + C65793 * C101464) * C6026) *
                C152072) *
               C152284 +
           (((C110963 + C110962) * C6026 + (C110961 + C110960) * C6027 +
             (C60350 * C101464 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
             (C110044 + C110043) * C6026) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152285 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C1661 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C152072 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C152285) *
              C1662 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C152285 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C152072) *
              C1663 +
          ((C112222 * C6026 + (C112224 + C112223) * C6027 +
            (C61280 * C101464 + (C59421 * C60756 - C59422 * C60755 -
                                 C59421 * C60757 + C151908 * C60758) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C2757 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C2758 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C2759 -
           ((C113465 + C113466) * C6028 + (C113467 + C113468) * C6027 +
            (C68376 * C152231 + C65788 * C101464) * C6026) *
               C152342) *
              C152284 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C2758 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C2757 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C2759 +
           ((C113468 + C113467) * C6026 + (C113466 + C113465) * C6027 +
            (C62160 * C101464 + (C59421 * C61656 - C59422 * C61655 -
                                 C59421 * C61657 + C151908 * C61658) *
                                    C152231) *
                C6028) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C152285 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152072) *
               C152284 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152072 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C152285) *
               C152030) *
              C323 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152072 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C152285) *
               C152284 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C152285 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152072) *
               C152030) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C117978 +
             C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
                C152155 * C152285 -
            (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
             C65793 * C117978) *
                C152155 * C152072) *
               C152284 +
           ((C60352 * C117978 + C65498 * C117979 + C65795 * C117980 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C117981) *
                C152155 * C152072 -
            (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
             C59650 * C117978) *
                C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C152285 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152072) *
              C1661 +
          ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
            C67098 * C117981) *
               C152155 * C152072 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C152285) *
              C1662 +
          ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C152285 -
           (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
            C60345 * C117978) *
               C152155 * C152072) *
              C1663 +
          ((C60344 * C117978 + C60792 * C117979 + C62160 * C117980 +
            (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
             C151908 * C61658) *
                C117981) *
               C152155 * C152072 -
           (C62160 * C117981 + C60792 * C117980 + C60344 * C117979 +
            C59644 * C117978) *
               C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C2757 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C2758 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C2759 -
           (C119955 * C117981 + C68378 * C117980 + C68376 * C117979 +
            C65788 * C117978) *
               C152155 * C152342) *
              C152284 +
          ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
            C67098 * C117981) *
               C152155 * C2758 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C2757 -
           (C68377 * C117981 + C67098 * C117980 + C62162 * C117979 +
            C60790 * C117978) *
               C152155 * C2759 +
           (C62162 * C117978 + C67098 * C117979 + C68377 * C117980 +
            (C59421 * C68354 - C59422 * C68353 - C59421 * C68355 +
             C151908 * C68356) *
                C117981) *
               C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                   C101464 +
               (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
                C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
                   C152231) *
                  C152155 * C151985 * C151967 * C129 -
              ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
                C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
                C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
                   C152231 +
               (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                   C101464) *
                  C152155 * C151985 * C151967 * C130 +
              ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                   C101464 +
               (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
                C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
                C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
                   C152231) *
                  C152155 * C151985 * C151967 * C131 -
              ((C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569 +
                C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
                C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559) *
                   C152231 +
               (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                   C101464) *
                  C152155 * C151985 * C151967 * C132 +
              ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
                C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
                C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
                   C101464 +
               (C50894 * C551 - C50895 * C531 - C50894 * C552 + C50889 * C567 +
                C50896 * C555 - C50897 * C533 - C50896 * C556 + C50890 * C569 +
                C50898 * C844 - C50899 * C843 - C50898 * C845 + C50891 * C846) *
                   C152231) *
                  C152155 * C151985 * C151967 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
                 C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                 C50898 * C537 - C50899 * C524 - C50898 * C538 +
                 C50891 * C560) *
                    C152231) *
                   C152155 * C151985 * C152373 -
               ((C52216 + C52217 + C52218) * C152231 +
                (C51229 + C51228 + C51227) * C101464) *
                   C152155 * C151985 * C152357 +
               ((C51232 + C51231 + C51230) * C101464 +
                (C52882 + C52883 + C52884) * C152231) *
                   C152155 * C151985 * C152326) *
                  C323 +
              (((C51233 + C51234 + C51235) * C101464 +
                (C52219 + C52220 + C52221) * C152231) *
                   C152155 * C151985 * C152357 -
               ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
                 C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
                 C50894 * C539 - C50895 * C525 - C50894 * C540 +
                 C50889 * C561) *
                    C152231 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C101464) *
                   C152155 * C151985 * C152373 -
               ((C53411 + C53412 + C53413) * C152231 +
                (C51238 + C51237 + C51236) * C101464) *
                   C152155 * C151985 * C152326) *
                  C324 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C101464 +
                (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
                 C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
                 C50898 * C551 - C50899 * C531 - C50898 * C552 +
                 C50891 * C567) *
                    C152231) *
                   C152155 * C151985 * C152373 -
               ((C52222 + C52223 + C52224) * C152231 +
                (C51241 + C51240 + C51239) * C101464) *
                   C152155 * C151985 * C152357 +
               ((C51244 + C51243 + C51242) * C101464 +
                (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
                 C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
                 C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
                 C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                    C152231) *
                   C152155 * C151985 * C152326) *
                  C152320) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C152374 -
               ((C102014 + C102015 + C102016) * C152231 +
                (C102013 + C102012 + C102011) * C101464) *
                   C152155 * C152359 +
               ((C102016 + C102015 + C102014) * C101464 +
                (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 +
                 C50889 * C2424 + C50896 * C2409 - C50897 * C2399 -
                 C50896 * C2410 + C50890 * C2423 + C50898 * C2407 -
                 C50899 * C2398 - C50898 * C2408 + C50891 * C2422) *
                    C152231) *
                   C152155 * C152329) *
                  C151967 * C323 +
              (((C102017 + C102018 + C102019) * C101464 +
                (C102020 + C102021 + C102022) * C152231) *
                   C152155 * C152359 -
               ((C102019 + C102018 + C102017) * C152231 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C101464) *
                   C152155 * C152374 -
               ((C50898 * C2405 - C50899 * C2397 - C50898 * C2406 +
                 C50891 * C2421 + C50896 * C2407 - C50897 * C2398 -
                 C50896 * C2408 + C50890 * C2422 + C50894 * C2409 -
                 C50895 * C2399 - C50894 * C2410 + C50889 * C2423) *
                    C152231 +
                (C102022 + C102021 + C102020) * C101464) *
                   C152155 * C152329) *
                  C151967 * C324 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C101464 +
                (C102023 + C102024 + C102025) * C152231) *
                   C152155 * C152374 -
               ((C102026 + C102027 + C102028) * C152231 +
                (C102025 + C102024 + C102023) * C101464) *
                   C152155 * C152359 +
               ((C102028 + C102027 + C102026) * C101464 +
                (C50894 * C2407 - C50895 * C2398 - C50894 * C2408 +
                 C50889 * C2422 + C50896 * C2405 - C50897 * C2397 -
                 C50896 * C2406 + C50890 * C2421 + C50898 * C2762 -
                 C50899 * C2761 - C50898 * C2763 + C50891 * C2764) *
                    C152231) *
                   C152155 * C152329) *
                  C151967 * C152320) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C151985 * C1211 -
               ((C52216 + C52217 + C52218) * C152231 +
                (C51229 + C51228 + C51227) * C101464) *
                   C152155 * C151985 * C1212 +
               ((C51232 + C51231 + C51230) * C101464 +
                (C52882 + C52883 + C52884) * C152231) *
                   C152155 * C151985 * C152326) *
                  C152370 +
              (((C51233 + C51234 + C51235) * C101464 +
                (C52219 + C52220 + C52221) * C152231) *
                   C152155 * C151985 * C1212 -
               ((C102019 + C102018 + C102017) * C152231 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C101464) *
                   C152155 * C151985 * C1211 -
               ((C53411 + C53412 + C53413) * C152231 +
                (C51238 + C51237 + C51236) * C101464) *
                   C152155 * C151985 * C152326) *
                  C152353 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C101464 +
                (C102023 + C102024 + C102025) * C152231) *
                   C152155 * C151985 * C1211 -
               ((C52222 + C52223 + C52224) * C152231 +
                (C51241 + C51240 + C51239) * C101464) *
                   C152155 * C151985 * C1212 +
               ((C51244 + C51243 + C51242) * C101464 +
                (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
                 C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
                 C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
                 C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                    C152231) *
                   C152155 * C151985 * C152326) *
                  C152320) -
         0.25 * std::pow(Pi, 2.5) *
             (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                   C101464 +
               (C102011 + C102012 + C102013) * C152231) *
                  C152155 * C151985 * C1299 -
              ((C52216 + C52217 + C52218) * C152231 +
               (C51229 + C51228 + C51227) * C101464) *
                  C152155 * C151985 * C1300 +
              ((C51232 + C51231 + C51230) * C101464 +
               (C52882 + C52883 + C52884) * C152231) *
                  C152155 * C151985 * C1301 -
              ((C53626 + C53627 + C53628) * C152231 +
               (C52603 + C52602 + C52601) * C101464) *
                  C152155 * C151985 * C1302 +
              ((C52606 + C52605 + C52604) * C101464 +
               (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 +
                C50889 * C8018 + C50896 * C8007 - C50897 * C7999 -
                C50896 * C8008 + C50890 * C8017 + C50898 * C8586 -
                C50899 * C8585 - C50898 * C8587 + C50891 * C8588) *
                   C152231) *
                  C152155 * C151985 * C1303) *
             C151939 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C152374 -
               ((C102014 + C102015 + C102016) * C152231 +
                (C102013 + C102012 + C102011) * C101464) *
                   C152155 * C152359 +
               ((C102016 + C102015 + C102014) * C101464 +
                (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 +
                 C50889 * C2424 + C50896 * C2409 - C50897 * C2399 -
                 C50896 * C2410 + C50890 * C2423 + C50898 * C2407 -
                 C50899 * C2398 - C50898 * C2408 + C50891 * C2422) *
                    C152231) *
                   C152155 * C152329) *
                  C1211 +
              (((C52218 + C52217 + C52216) * C101464 +
                (C52879 + C52880 + C52881) * C152231) *
                   C152155 * C152359 -
               ((C52216 + C52217 + C52218) * C152231 +
                (C51229 + C51228 + C51227) * C101464) *
                   C152155 * C152374 -
               ((C54904 + C54905 + C54906) * C152231 +
                (C52881 + C52880 + C52879) * C101464) *
                   C152155 * C152329) *
                  C1212 +
              (((C51232 + C51231 + C51230) * C101464 +
                (C52882 + C52883 + C52884) * C152231) *
                   C152155 * C152374 -
               ((C52885 + C52886 + C52887) * C152231 +
                (C52884 + C52883 + C52882) * C101464) *
                   C152155 * C152359 +
               ((C52887 + C52886 + C52885) * C101464 +
                (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 +
                 C50889 * C9400 + C50896 * C9387 - C50897 * C9381 -
                 C50896 * C9388 + C50890 * C9399 + C50898 * C9922 -
                 C50899 * C9921 - C50898 * C9923 + C50891 * C9924) *
                    C152231) *
                   C152155 * C152329) *
                  C152326) *
             C151939 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C2161 -
               ((C102014 + C102015 + C102016) * C152231 +
                (C102013 + C102012 + C102011) * C101464) *
                   C152155 * C2162 +
               ((C102016 + C102015 + C102014) * C101464 +
                (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 +
                 C50889 * C2424 + C50896 * C2409 - C50897 * C2399 -
                 C50896 * C2410 + C50890 * C2423 + C50898 * C2407 -
                 C50899 * C2398 - C50898 * C2408 + C50891 * C2422) *
                    C152231) *
                   C152155 * C152329) *
                  C151967 * C152370 +
              (((C102017 + C102018 + C102019) * C101464 +
                (C102020 + C102021 + C102022) * C152231) *
                   C152155 * C2162 -
               ((C102019 + C102018 + C102017) * C152231 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C101464) *
                   C152155 * C2161 -
               ((C50898 * C2405 - C50899 * C2397 - C50898 * C2406 +
                 C50891 * C2421 + C50896 * C2407 - C50897 * C2398 -
                 C50896 * C2408 + C50890 * C2422 + C50894 * C2409 -
                 C50895 * C2399 - C50894 * C2410 + C50889 * C2423) *
                    C152231 +
                (C102022 + C102021 + C102020) * C101464) *
                   C152155 * C152329) *
                  C151967 * C152353 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C101464 +
                (C102023 + C102024 + C102025) * C152231) *
                   C152155 * C2161 -
               ((C102026 + C102027 + C102028) * C152231 +
                (C102025 + C102024 + C102023) * C101464) *
                   C152155 * C2162 +
               ((C102028 + C102027 + C102026) * C101464 +
                (C50894 * C2407 - C50895 * C2398 - C50894 * C2408 +
                 C50889 * C2422 + C50896 * C2405 - C50897 * C2397 -
                 C50896 * C2406 + C50890 * C2421 + C50898 * C2762 -
                 C50899 * C2761 - C50898 * C2763 + C50891 * C2764) *
                    C152231) *
                   C152155 * C152329) *
                  C151967 * C152320) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C2161 -
               ((C102014 + C102015 + C102016) * C152231 +
                (C102013 + C102012 + C102011) * C101464) *
                   C152155 * C2162 +
               ((C102016 + C102015 + C102014) * C101464 +
                (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 +
                 C50889 * C2424 + C50896 * C2409 - C50897 * C2399 -
                 C50896 * C2410 + C50890 * C2423 + C50898 * C2407 -
                 C50899 * C2398 - C50898 * C2408 + C50891 * C2422) *
                    C152231) *
                   C152155 * C152329) *
                  C152373 +
              (((C52218 + C52217 + C52216) * C101464 +
                (C52879 + C52880 + C52881) * C152231) *
                   C152155 * C2162 -
               ((C52216 + C52217 + C52218) * C152231 +
                (C51229 + C51228 + C51227) * C101464) *
                   C152155 * C2161 -
               ((C54904 + C54905 + C54906) * C152231 +
                (C52881 + C52880 + C52879) * C101464) *
                   C152155 * C152329) *
                  C152357 +
              (((C51232 + C51231 + C51230) * C101464 +
                (C52882 + C52883 + C52884) * C152231) *
                   C152155 * C2161 -
               ((C52885 + C52886 + C52887) * C152231 +
                (C52884 + C52883 + C52882) * C101464) *
                   C152155 * C2162 +
               ((C52887 + C52886 + C52885) * C101464 +
                (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 +
                 C50889 * C9400 + C50896 * C9387 - C50897 * C9381 -
                 C50896 * C9388 + C50890 * C9399 + C50898 * C9922 -
                 C50899 * C9921 - C50898 * C9923 + C50891 * C9924) *
                    C152231) *
                   C152155 * C152329) *
                  C152326) *
             C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C102011 + C102012 + C102013) * C152231) *
              C152155 * C2392 -
          ((C102014 + C102015 + C102016) * C152231 +
           (C102013 + C102012 + C102011) * C101464) *
              C152155 * C2393 +
          ((C102016 + C102015 + C102014) * C101464 +
           (C104558 + C104559 + C104560) * C152231) *
              C152155 * C2394 -
          ((C104561 + C104562 + C104563) * C152231 +
           (C104560 + C104559 + C104558) * C101464) *
              C152155 * C2395 +
          ((C104563 + C104562 + C104561) * C101464 +
           (C50894 * C17794 - C50895 * C17789 - C50894 * C17795 +
            C50889 * C17801 + C50896 * C17792 - C50897 * C17788 -
            C50896 * C17793 + C50890 * C17800 + C50898 * C18338 -
            C50899 * C18337 - C50898 * C18339 + C50891 * C18340) *
               C152231) *
              C152155 * C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C59642 * C101464 + C60346 * C152231) * C6027 +
           (C59643 * C101464 + C60345 * C152231) * C6028) *
              C151985 * C151967 * C129 -
          ((C60348 * C152231 + C59647 * C101464) * C6028 +
           (C60347 * C152231 + C59646 * C101464) * C6027 +
           (C65789 * C152231 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C101464) *
               C6026) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C101464 +
            C65793 * C152231) *
               C6026 +
           (C59650 * C101464 + C60352 * C152231) * C6027 +
           (C59651 * C101464 + C60351 * C152231) * C6028) *
              C151985 * C151967 * C131 -
          ((C93912 * C152231 + C59961 * C101464) * C6028 +
           (C66004 * C152231 + C59960 * C101464) * C6027 +
           (C66214 * C152231 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C101464) *
               C6026) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C101464 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152231) *
               C6026 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C101464 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152231) *
               C6027 +
           ((C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
                C101464 +
            (C59421 * C1866 - C59422 * C1865 - C59421 * C1867 +
             C151908 * C1868) *
                C152231) *
               C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152373 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152357 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C323 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C152357 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152373 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152373 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152357 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152374 -
           ((C60791 * C152231 + C60345 * C101464) * C6028 +
            (C60790 * C152231 + C60346 * C101464) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152359 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C60790 * C101464 + C62162 * C152231) * C6027 +
            (C60791 * C101464 + C62161 * C152231) * C6028) *
               C152329) *
              C151967 * C323 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C60347 * C101464 + C61874 * C152231) * C6027 +
            (C60348 * C101464 + C61873 * C152231) * C6028) *
               C152359 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C152374 -
           ((C67597 * C152231 + C61873 * C101464) * C6028 +
            (C65792 * C152231 + C61874 * C101464) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C152329) *
              C151967 * C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C152374 -
           ((C65499 * C152231 + C60351 * C101464) * C6028 +
            (C65498 * C152231 + C60352 * C101464) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152359 +
           ((C65794 * C101464 + C65796 * C152231) * C6026 +
            (C65498 * C101464 + C65795 * C152231) * C6027 +
            (C65499 * C101464 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C1211 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C1212 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C1212 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C1211 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C1211 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C1212 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C110031 + C110032) * C6027 + C110049 * C6028) *
              C151985 * C1299 -
          (C111304 * C6028 + (C110034 + C110033) * C6027 +
           (C110032 + C110031) * C6026) *
              C151985 * C1300 +
          (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
              C151985 * C1301 -
          ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
           C111304 * C6026) *
              C151985 * C1302 +
          (C111309 * C6026 + (C111308 + C111307) * C6027 +
           (C60607 * C101464 + (C59421 * C61270 - C59422 * C61269 -
                                C59421 * C61271 + C151908 * C61272) *
                                   C152231) *
               C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152374 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152359 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152329) *
              C1211 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            (C111533 + C111534) * C6028) *
               C152359 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C152374 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C152329) *
              C1212 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C152374 -
           ((C60794 * C152231 + C60793 * C101464) * C6028 +
            (C111534 + C111533) * C6027 + C111528 * C6026) *
               C152359 +
           (C111537 * C6026 + (C111536 + C111535) * C6027 +
            (C60794 * C101464 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C2161 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C2162 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152329) *
              C151967 * C152370 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C2162 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C2161 -
           ((C67597 * C152231 + C61873 * C101464) * C6028 +
            (C65792 * C152231 + C61874 * C101464) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C152329) *
              C151967 * C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C2161 -
           ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C2162 +
           ((C65794 * C101464 + C65796 * C152231) * C6026 +
            (C65498 * C101464 + C65795 * C152231) * C6027 +
            (C65499 * C101464 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C2161 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C2162 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152329) *
              C152373 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C2162 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C2161 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C152329) *
              C152357 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C2161 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C2162 +
           (C111537 * C6026 + (C111536 + C111535) * C6027 +
            (C60794 * C101464 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C110031 + C110032) * C6027 + C110049 * C6028) *
              C2392 -
          (C111528 * C6028 + (C110954 + C110955) * C6027 +
           (C65787 * C152231 + C65786 * C101464) * C6026) *
              C2393 +
          ((C65787 * C101464 + C65788 * C152231) * C6026 +
           (C111529 + C111530) * C6027 + C111537 * C6028) *
              C2394 -
          ((C67099 * C152231 + C62161 * C101464) * C6028 +
           (C67098 * C152231 + C62162 * C101464) * C6027 +
           (C68376 * C152231 + C65788 * C101464) * C6026) *
              C2395 +
          ((C68376 * C101464 + C68378 * C152231) * C6026 +
           (C67098 * C101464 + C68377 * C152231) * C6027 +
           (C67099 * C101464 + (C59421 * C69074 - C59422 * C69073 -
                                C59421 * C69075 + C151908 * C69076) *
                                   C152231) *
               C6028) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C117978 +
           C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
              C152155 * C151985 * C151967 * C129 -
          (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
           (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
               C117978) *
              C152155 * C151985 * C151967 * C130 +
          ((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
               C117978 +
           C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
              C152155 * C151985 * C151967 * C131 -
          ((C59421 * C2405 - C59422 * C2397 - C59421 * C2406 +
            C151908 * C2421) *
               C117981 +
           C66215 * C117980 + C66214 * C117979 +
           (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
               C117978) *
              C152155 * C151985 * C151967 * C132 +
          ((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
               C117978 +
           (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
               C117979 +
           (C59421 * C553 - C59422 * C532 - C59421 * C554 + C151908 * C568) *
               C117980 +
           (C59421 * C2762 - C59422 * C2761 - C59421 * C2763 +
            C151908 * C2764) *
               C117981) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C152373 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C152357 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C152326) *
              C323 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C152357 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C152373 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C152373 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C152357 +
           (C59651 * C117978 + C60351 * C117979 + C65499 * C117980 +
            (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
             C151908 * C9924) *
                C117981) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C152374 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152359 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C152329) *
              C151967 * C323 +
          ((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
            C68879 * C117981) *
               C152155 * C152359 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C152374 -
           ((C59421 * C17792 - C59422 * C17788 - C59421 * C17793 +
             C151908 * C17800) *
                C117981 +
            C68879 * C117980 + C65791 * C117979 + C65790 * C117978) *
               C152155 * C152329) *
              C151967 * C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C152374 -
           (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
            C65793 * C117978) *
               C152155 * C152359 +
           (C65794 * C117978 + C65796 * C117979 + C118281 * C117980 +
            (C59421 * C18338 - C59422 * C18337 - C59421 * C18339 +
             C151908 * C18340) *
                C117981) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C1211 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C1212 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C152326) *
              C152370 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C1212 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C1211 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C1211 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C1212 +
           (C59651 * C117978 + C60351 * C117979 + C65499 * C117980 +
            (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
             C151908 * C9924) *
                C117981) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C117978 +
           C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
              C152155 * C151985 * C1299 -
          (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
           C59642 * C117978) *
              C152155 * C151985 * C1300 +
          (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
           C62161 * C117981) *
              C152155 * C151985 * C1301 -
          (C62160 * C117981 + C60792 * C117980 + C60344 * C117979 +
           C59644 * C117978) *
              C152155 * C151985 * C1302 +
          (C59645 * C117978 + C60793 * C117979 + C60794 * C117980 +
           (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
            C151908 * C62140) *
               C117981) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C152374 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152359 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C152329) *
              C1211 +
          ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
            C67098 * C117981) *
               C152155 * C152359 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C152374 -
           (C68377 * C117981 + C67098 * C117980 + C62162 * C117979 +
            C60790 * C117978) *
               C152155 * C152329) *
              C1212 +
          ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C152374 -
           (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
            C60345 * C117978) *
               C152155 * C152359 +
           (C60791 * C117978 + C62161 * C117979 + C67099 * C117980 +
            (C59421 * C69074 - C59422 * C69073 - C59421 * C69075 +
             C151908 * C69076) *
                C117981) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C2161 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C2162 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C152329) *
              C151967 * C152370 +
          ((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
            C68879 * C117981) *
               C152155 * C2162 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C2161 -
           ((C59421 * C17792 - C59422 * C17788 - C59421 * C17793 +
             C151908 * C17800) *
                C117981 +
            C68879 * C117980 + C65791 * C117979 + C65790 * C117978) *
               C152155 * C152329) *
              C151967 * C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C2161 -
           (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
            C65793 * C117978) *
               C152155 * C2162 +
           (C65794 * C117978 + C65796 * C117979 + C118281 * C117980 +
            (C59421 * C18338 - C59422 * C18337 - C59421 * C18339 +
             C151908 * C18340) *
                C117981) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C2161 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C2162 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C152329) *
              C152373 +
          ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
            C67098 * C117981) *
               C152155 * C2162 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C2161 -
           (C68377 * C117981 + C67098 * C117980 + C62162 * C117979 +
            C60790 * C117978) *
               C152155 * C152329) *
              C152357 +
          ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C2161 -
           (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
            C60345 * C117978) *
               C152155 * C2162 +
           (C60791 * C117978 + C62161 * C117979 + C67099 * C117980 +
            (C59421 * C69074 - C59422 * C69073 - C59421 * C69075 +
             C151908 * C69076) *
                C117981) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C117978 +
           C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
              C152155 * C2392 -
          (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
           C65786 * C117978) *
              C152155 * C2393 +
          (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
           C68378 * C117981) *
              C152155 * C2394 -
          (C119955 * C117981 + C68378 * C117980 + C68376 * C117979 +
           C65788 * C117978) *
              C152155 * C2395 +
          (C68376 * C117978 + C68378 * C117979 + C119955 * C117980 +
           (C59421 * C119945 - C59422 * C119944 - C59421 * C119946 +
            C151908 * C119947) *
               C117981) *
              C152155 * C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C152285 -
               ((C102014 + C102015 + C102016) * C152231 +
                (C102013 + C102012 + C102011) * C101464) *
                   C152155 * C152072) *
                  C151967 * C703 +
              (((C102017 + C102018 + C102019) * C101464 +
                (C102020 + C102021 + C102022) * C152231) *
                   C152155 * C152072 -
               ((C102019 + C102018 + C102017) * C152231 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C101464) *
                   C152155 * C152285) *
                  C151967 * C704 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C101464 +
                (C102023 + C102024 + C102025) * C152231) *
                   C152155 * C152285 -
               ((C102026 + C102027 + C102028) * C152231 +
                (C102025 + C102024 + C102023) * C101464) *
                   C152155 * C152072) *
                  C151967 * C705 +
              (((C102435 + C102436 + C102437) * C101464 +
                (C50894 * C549 - C50895 * C530 - C50894 * C550 + C50889 * C566 +
                 C50896 * C553 - C50897 * C532 - C50896 * C554 + C50890 * C568 +
                 C50898 * C557 - C50899 * C534 - C50898 * C558 +
                 C50891 * C570) *
                    C152231) *
                   C152155 * C152072 -
               ((C102437 + C102436 + C102435) * C152231 +
                (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                 C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                 C50894 * C156 - C50895 * C145 - C50894 * C157 +
                 C50889 * C169) *
                    C101464) *
                   C152155 * C152285) *
                  C151967 * C152330) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50894 * C150 - C50895 * C142 - C50894 * C151 +
                  C50889 * C166 + C50896 * C152 - C50897 * C143 -
                  C50896 * C153 + C50890 * C167 + C50898 * C154 -
                  C50899 * C144 - C50898 * C155 + C50891 * C168) *
                     C101464 +
                 (C102011 + C102012 + C102013) * C152231) *
                    C152155 * C152285 -
                ((C102014 + C102015 + C102016) * C152231 +
                 (C102013 + C102012 + C102011) * C101464) *
                    C152155 * C152072) *
                   C1211 +
               (((C52218 + C52217 + C52216) * C101464 +
                 (C52879 + C52880 + C52881) * C152231) *
                    C152155 * C152072 -
                ((C52216 + C52217 + C52218) * C152231 +
                 (C51229 + C51228 + C51227) * C101464) *
                    C152155 * C152285) *
                   C1212 +
               (((C51232 + C51231 + C51230) * C101464 +
                 (C52882 + C52883 + C52884) * C152231) *
                    C152155 * C152285 -
                ((C52885 + C52886 + C52887) * C152231 +
                 (C52884 + C52883 + C52882) * C101464) *
                    C152155 * C152072) *
                   C152326) *
                  C152270 +
              ((((C102017 + C102018 + C102019) * C101464 +
                 (C102020 + C102021 + C102022) * C152231) *
                    C152155 * C152072 -
                ((C102019 + C102018 + C102017) * C152231 +
                 (C50898 * C156 - C50899 * C145 - C50898 * C157 +
                  C50891 * C169 + C50896 * C154 - C50897 * C144 -
                  C50896 * C155 + C50890 * C168 + C50894 * C152 -
                  C50895 * C143 - C50894 * C153 + C50889 * C167) *
                     C101464) *
                    C152155 * C152285) *
                   C1211 +
               (((C51233 + C51234 + C51235) * C101464 +
                 (C52219 + C52220 + C52221) * C152231) *
                    C152155 * C152285 -
                ((C54495 + C54496 + C54497) * C152231 +
                 (C52221 + C52220 + C52219) * C101464) *
                    C152155 * C152072) *
                   C1212 +
               (((C53413 + C53412 + C53411) * C101464 +
                 (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
                  C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
                  C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
                  C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                     C152231) *
                    C152155 * C152072 -
                ((C53411 + C53412 + C53413) * C152231 +
                 (C51238 + C51237 + C51236) * C101464) *
                    C152155 * C152285) *
                   C152326) *
                  C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C2757 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C2758 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C104558 + C104559 + C104560) * C152231) *
               C152155 * C2759 -
           ((C104561 + C104562 + C104563) * C152231 +
            (C104560 + C104559 + C104558) * C101464) *
               C152155 * C152342) *
              C151967 * C152270 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C2758 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C2757 -
           ((C105066 + C105067 + C105068) * C152231 +
            (C102022 + C102021 + C102020) * C101464) *
               C152155 * C2759 +
           ((C105068 + C105067 + C105066) * C101464 +
            (C50894 * C2415 - C50895 * C2402 - C50894 * C2416 + C50889 * C2426 +
             C50896 * C2417 - C50897 * C2403 - C50896 * C2418 + C50890 * C2427 +
             C50898 * C2419 - C50899 * C2404 - C50898 * C2420 +
             C50891 * C2428) *
                C152231) *
               C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152285 -
           ((C60791 * C152231 + C60345 * C101464) * C6028 +
            (C60790 * C152231 + C60346 * C101464) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C151967 * C703 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C60347 * C101464 + C61874 * C152231) * C6027 +
            (C60348 * C101464 + C61873 * C152231) * C6028) *
               C152072 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C152285) *
              C151967 * C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C152285 -
           ((C65499 * C152231 + C60351 * C101464) * C6028 +
            (C65498 * C152231 + C60352 * C101464) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152072) *
              C151967 * C705 +
          (((C66214 * C101464 + C66215 * C152231) * C6026 +
            (C66004 * C101464 + C66005 * C152231) * C6027 +
            (C93912 * C101464 + (C59421 * C1517 - C59422 * C1494 -
                                 C59421 * C1518 + C151908 * C1530) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152285 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C1211 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             (C111533 + C111534) * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152285) *
               C1212 +
           ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
                C152285 -
            ((C60794 * C152231 + C60793 * C101464) * C6028 +
             (C111534 + C111533) * C6027 + C111528 * C6026) *
                C152072) *
               C152326) *
              C152270 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152285) *
               C1211 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152285 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C1212 +
           ((C112025 * C6026 + (C112027 + C112026) * C6027 +
             (C61138 * C101464 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
             C110050 * C6026) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C2757 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C2758 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C2759 -
           ((C67099 * C152231 + C62161 * C101464) * C6028 +
            (C67098 * C152231 + C62162 * C101464) * C6027 +
            (C68376 * C152231 + C65788 * C101464) * C6026) *
               C152342) *
              C151967 * C152270 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C2758 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C2757 -
           ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C2759 +
           ((C65791 * C101464 + C68879 * C152231) * C6026 +
            (C65792 * C101464 + C68677 * C152231) * C6027 +
            (C67597 * C101464 + (C59421 * C9397 - C59422 * C9386 -
                                 C59421 * C9398 + C151908 * C9404) *
                                    C152231) *
                C6028) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C152285 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152072) *
              C151967 * C703 +
          ((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
            C68879 * C117981) *
               C152155 * C152072 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C152285) *
              C151967 * C704 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C152285 -
           (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
            C65793 * C117978) *
               C152155 * C152072) *
              C151967 * C705 +
          ((C66214 * C117978 + C66215 * C117979 + C118548 * C117980 +
            (C59421 * C2419 - C59422 * C2404 - C59421 * C2420 +
             C151908 * C2428) *
                C117981) *
               C152155 * C152072 -
           (C118548 * C117981 + C66215 * C117980 + C66214 * C117979 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C117978) *
               C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C152285 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152072) *
               C1211 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152072 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C152285) *
               C1212 +
           ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
             C62161 * C117981) *
                C152155 * C152285 -
            (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
             C60345 * C117978) *
                C152155 * C152072) *
               C152326) *
              C152270 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152072 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C152285) *
               C1211 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C152285 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152072) *
               C1212 +
           ((C60348 * C117978 + C61873 * C117979 + C67597 * C117980 +
             (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
              C151908 * C9404) *
                 C117981) *
                C152155 * C152072 -
            (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
             C59647 * C117978) *
                C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C2757 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C2758 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C2759 -
           (C119955 * C117981 + C68378 * C117980 + C68376 * C117979 +
            C65788 * C117978) *
               C152155 * C152342) *
              C151967 * C152270 +
          ((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
            C68879 * C117981) *
               C152155 * C2758 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C2757 -
           (C120286 * C117981 + C68879 * C117980 + C65791 * C117979 +
            C65790 * C117978) *
               C152155 * C2759 +
           (C65791 * C117978 + C68879 * C117979 + C120286 * C117980 +
            (C59421 * C17798 - C59422 * C17791 - C59421 * C17799 +
             C151908 * C17803) *
                C117981) *
               C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
            C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
            C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
               C152231) *
              C152155 * C151985 * C151967 * C129 -
          ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
            C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
            C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
               C152231 +
           (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
            C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
            C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
               C101464) *
              C152155 * C151985 * C151967 * C130 +
          ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
            C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
            C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
               C101464 +
           (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
            C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
            C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
               C152231) *
              C152155 * C151985 * C151967 * C131 -
          ((C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569 +
            C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
            C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559) *
               C152231 +
           (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
            C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
            C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
               C101464) *
              C152155 * C151985 * C151967 * C132 +
          ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
            C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
            C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
               C101464 +
           (C50894 * C551 - C50895 * C531 - C50894 * C552 + C50889 * C567 +
            C50896 * C555 - C50897 * C533 - C50896 * C556 + C50890 * C569 +
            C50898 * C844 - C50899 * C843 - C50898 * C845 + C50891 * C846) *
               C152231) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152357 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152326) *
              C323 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152357 -
           ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
                C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152373 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152357 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C1212 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C1211 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C102011 + C102012 + C102013) * C152231) *
              C152155 * C151985 * C1299 -
          ((C52216 + C52217 + C52218) * C152231 +
           (C51229 + C51228 + C51227) * C101464) *
              C152155 * C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C101464 +
           (C52882 + C52883 + C52884) * C152231) *
              C152155 * C151985 * C1301 -
          ((C53626 + C53627 + C53628) * C152231 +
           (C52603 + C52602 + C52601) * C101464) *
              C152155 * C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C101464 +
           (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
            C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
            C50898 * C8586 - C50899 * C8585 - C50898 * C8587 + C50891 * C8588) *
               C152231) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C2161 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C2162 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50898 * C2407 - C50899 * C2398 - C50898 * C2408 +
             C50891 * C2422) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152370 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C2162 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C2161 -
           ((C50898 * C2405 - C50899 * C2397 - C50898 * C2406 + C50891 * C2421 +
             C50896 * C2407 - C50897 * C2398 - C50896 * C2408 + C50890 * C2422 +
             C50894 * C2409 - C50895 * C2399 - C50894 * C2410 +
             C50889 * C2423) *
                C152231 +
            (C102022 + C102021 + C102020) * C101464) *
               C152155 * C152329) *
              C151967 * C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C2161 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C2162 +
           ((C102028 + C102027 + C102026) * C101464 +
            (C50894 * C2407 - C50895 * C2398 - C50894 * C2408 + C50889 * C2422 +
             C50896 * C2405 - C50897 * C2397 - C50896 * C2406 + C50890 * C2421 +
             C50898 * C2762 - C50899 * C2761 - C50898 * C2763 +
             C50891 * C2764) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C2161 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C2162 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50898 * C2407 - C50899 * C2398 - C50898 * C2408 +
             C50891 * C2422) *
                C152231) *
               C152155 * C152329) *
              C152373 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C2162 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C2161 -
           ((C54904 + C54905 + C54906) * C152231 +
            (C52881 + C52880 + C52879) * C101464) *
               C152155 * C152329) *
              C152357 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C2161 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C2162 +
           ((C52887 + C52886 + C52885) * C101464 +
            (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 + C50889 * C9400 +
             C50896 * C9387 - C50897 * C9381 - C50896 * C9388 + C50890 * C9399 +
             C50898 * C9922 - C50899 * C9921 - C50898 * C9923 +
             C50891 * C9924) *
                C152231) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C59642 * C101464 + C60346 * C152231) * C6027 +
           (C59643 * C101464 + C60345 * C152231) * C6028) *
              C151985 * C151967 * C129 -
          ((C60348 * C152231 + C59647 * C101464) * C6028 +
           (C60347 * C152231 + C59646 * C101464) * C6027 +
           (C65789 * C152231 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C101464) *
               C6026) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C101464 +
            C65793 * C152231) *
               C6026 +
           (C59650 * C101464 + C60352 * C152231) * C6027 +
           (C59651 * C101464 + C60351 * C152231) * C6028) *
              C151985 * C151967 * C131 -
          ((C93912 * C152231 + C59961 * C101464) * C6028 +
           (C66004 * C152231 + C59960 * C101464) * C6027 +
           (C66214 * C152231 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C101464) *
               C6026) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C101464 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152231) *
               C6026 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C101464 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152231) *
               C6027 +
           ((C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
                C101464 +
            (C59421 * C1866 - C59422 * C1865 - C59421 * C1867 +
             C151908 * C1868) *
                C152231) *
               C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152373 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152357 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C323 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C152357 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152373 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152373 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152357 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C1211 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C1212 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C1212 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C1211 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C1211 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C1212 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C110031 + C110032) * C6027 + C110049 * C6028) *
              C151985 * C1299 -
          (C111304 * C6028 + (C110034 + C110033) * C6027 +
           (C110032 + C110031) * C6026) *
              C151985 * C1300 +
          (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
              C151985 * C1301 -
          ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
           C111304 * C6026) *
              C151985 * C1302 +
          (C111309 * C6026 + (C111308 + C111307) * C6027 +
           (C60607 * C101464 + (C59421 * C61270 - C59422 * C61269 -
                                C59421 * C61271 + C151908 * C61272) *
                                   C152231) *
               C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C2161 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C2162 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152329) *
              C151967 * C152370 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C2162 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C2161 -
           ((C67597 * C152231 + C61873 * C101464) * C6028 +
            (C65792 * C152231 + C61874 * C101464) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C152329) *
              C151967 * C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C2161 -
           ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C2162 +
           ((C65794 * C101464 + C65796 * C152231) * C6026 +
            (C65498 * C101464 + C65795 * C152231) * C6027 +
            (C65499 * C101464 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C2161 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C2162 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152329) *
              C152373 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C2162 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C2161 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C152329) *
              C152357 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C2161 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C2162 +
           (C111537 * C6026 + (C111536 + C111535) * C6027 +
            (C60794 * C101464 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C117978 +
           C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
              C152155 * C151985 * C151967 * C129 -
          (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
           (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
               C117978) *
              C152155 * C151985 * C151967 * C130 +
          ((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
               C117978 +
           C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
              C152155 * C151985 * C151967 * C131 -
          ((C59421 * C2405 - C59422 * C2397 - C59421 * C2406 +
            C151908 * C2421) *
               C117981 +
           C66215 * C117980 + C66214 * C117979 +
           (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
               C117978) *
              C152155 * C151985 * C151967 * C132 +
          ((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
               C117978 +
           (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
               C117979 +
           (C59421 * C553 - C59422 * C532 - C59421 * C554 + C151908 * C568) *
               C117980 +
           (C59421 * C2762 - C59422 * C2761 - C59421 * C2763 +
            C151908 * C2764) *
               C117981) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C152373 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C152357 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C152326) *
              C323 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C152357 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C152373 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C152373 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C152357 +
           (C59651 * C117978 + C60351 * C117979 + C65499 * C117980 +
            (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
             C151908 * C9924) *
                C117981) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C1211 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C1212 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C152326) *
              C152370 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C1212 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C1211 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C1211 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C1212 +
           (C59651 * C117978 + C60351 * C117979 + C65499 * C117980 +
            (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
             C151908 * C9924) *
                C117981) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C117978 +
           C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
              C152155 * C151985 * C1299 -
          (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
           C59642 * C117978) *
              C152155 * C151985 * C1300 +
          (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
           C62161 * C117981) *
              C152155 * C151985 * C1301 -
          (C62160 * C117981 + C60792 * C117980 + C60344 * C117979 +
           C59644 * C117978) *
              C152155 * C151985 * C1302 +
          (C59645 * C117978 + C60793 * C117979 + C60794 * C117980 +
           (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
            C151908 * C62140) *
               C117981) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C2161 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C2162 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C152329) *
              C151967 * C152370 +
          ((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
            C68879 * C117981) *
               C152155 * C2162 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C2161 -
           ((C59421 * C17792 - C59422 * C17788 - C59421 * C17793 +
             C151908 * C17800) *
                C117981 +
            C68879 * C117980 + C65791 * C117979 + C65790 * C117978) *
               C152155 * C152329) *
              C151967 * C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C2161 -
           (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
            C65793 * C117978) *
               C152155 * C2162 +
           (C65794 * C117978 + C65796 * C117979 + C118281 * C117980 +
            (C59421 * C18338 - C59422 * C18337 - C59421 * C18339 +
             C151908 * C18340) *
                C117981) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C2161 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C2162 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C152329) *
              C152373 +
          ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
            C67098 * C117981) *
               C152155 * C2162 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C2161 -
           (C68377 * C117981 + C67098 * C117980 + C62162 * C117979 +
            C60790 * C117978) *
               C152155 * C152329) *
              C152357 +
          ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C2161 -
           (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
            C60345 * C117978) *
               C152155 * C2162 +
           (C60791 * C117978 + C62161 * C117979 + C67099 * C117980 +
            (C59421 * C69074 - C59422 * C69073 - C59421 * C69075 +
             C151908 * C69076) *
                C117981) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C4047 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152284 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C4047) *
               C152030) *
              C151944 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C4047) *
               C152284 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C4047 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152030) *
              C151953 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C101464 +
              C65793 * C152231) *
                 C6026 +
             (C110043 + C110044) * C6027 + C110051 * C6028) *
                C4047 -
            ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
             (C65794 * C152231 + C65793 * C101464) * C6026) *
                C152072) *
               C152284 +
           (((C110963 + C110962) * C6026 + (C110961 + C110960) * C6027 +
             (C60350 * C101464 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
             (C110044 + C110043) * C6026) *
                C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C4047 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C152284 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C4047) *
               C152030) *
              C151944 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C4047) *
               C152284 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C4047 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152030) *
              C151953 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C101464 +
             (C102023 + C102024 + C102025) * C152231) *
                C152155 * C4047 -
            ((C102026 + C102027 + C102028) * C152231 +
             (C102025 + C102024 + C102023) * C101464) *
                C152155 * C152072) *
               C152284 +
           (((C52224 + C52223 + C52222) * C101464 +
             (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
              C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
              C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
              C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C52222 + C52223 + C52224) * C152231 +
             (C51241 + C51240 + C51239) * C101464) *
                C152155 * C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C4047 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152072) *
               C152284 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152072 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C4047) *
               C152030) *
              C151944 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152072 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C4047) *
               C152284 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C4047 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152072) *
               C152030) *
              C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C117978 +
             C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
                C152155 * C4047 -
            (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
             C65793 * C117978) *
                C152155 * C152072) *
               C152284 +
           ((C60352 * C117978 + C65498 * C117979 + C65795 * C117980 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C117981) *
                C152155 * C152072 -
            (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
             C59650 * C117978) *
                C152155 * C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152068 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152075 +
            ((C65787 * C101464 + C65788 * C152231) * C6026 +
             (C111529 + C111530) * C6027 + C111537 * C6028) *
                C4719) *
               C152284 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152075 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152068 -
            ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
             (C111530 + C111529) * C6026) *
                C4719) *
               C152030) *
              C3181 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152075 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152068 -
            ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
             (C65791 * C152231 + C65790 * C101464) * C6026) *
                C4719) *
               C152284 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152068 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152075 +
            ((C113076 + C113075) * C6026 + (C113074 + C113073) * C6027 +
             (C61872 * C101464 + (C59421 * C10123 - C59422 * C10120 -
                                  C59421 * C10124 + C151908 * C10126) *
                                     C152231) *
                 C6028) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152068 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152075 +
            ((C102016 + C102015 + C102014) * C101464 +
             (C104558 + C104559 + C104560) * C152231) *
                C152155 * C4719) *
               C152284 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152075 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152068 -
            ((C54904 + C54905 + C54906) * C152231 +
             (C52881 + C52880 + C52879) * C101464) *
                C152155 * C4719) *
               C152030) *
              C3181 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152075 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152068 -
            ((C105066 + C105067 + C105068) * C152231 +
             (C102022 + C102021 + C102020) * C101464) *
                C152155 * C4719) *
               C152284 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152068 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152075 +
            ((C54497 + C54496 + C54495) * C101464 +
             (C50894 * C2901 - C50895 * C2896 - C50894 * C2902 +
              C50889 * C2908 + C50896 * C2903 - C50897 * C2897 -
              C50896 * C2904 + C50890 * C2909 + C50898 * C2905 -
              C50899 * C2898 - C50898 * C2906 + C50891 * C2910) *
                 C152231) *
                C152155 * C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C152068 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152075 +
            (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
             C68378 * C117981) *
                C152155 * C4719) *
               C152284 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152075 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C152068 -
            (C68377 * C117981 + C67098 * C117980 + C62162 * C117979 +
             C60790 * C117978) *
                C152155 * C4719) *
               C152030) *
              C3181 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152075 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C152068 -
            (C120286 * C117981 + C68879 * C117980 + C65791 * C117979 +
             C65790 * C117978) *
                C152155 * C4719) *
               C152284 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C152068 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152075 +
            (C61874 * C117978 + C65792 * C117979 + C68677 * C117980 +
             (C59421 * C18554 - C59422 * C18551 - C59421 * C18555 +
              C151908 * C18557) *
                 C117981) *
                C152155 * C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C102011 + C102012 + C102013) * C152231) *
                   C152155 * C4047 -
               ((C102014 + C102015 + C102016) * C152231 +
                (C102013 + C102012 + C102011) * C101464) *
                   C152155 * C152072) *
                  C151967 * C152379 +
              (((C102017 + C102018 + C102019) * C101464 +
                (C102020 + C102021 + C102022) * C152231) *
                   C152155 * C152072 -
               ((C102019 + C102018 + C102017) * C152231 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C101464) *
                   C152155 * C4047) *
                  C151967 * C152372 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C101464 +
                (C102023 + C102024 + C102025) * C152231) *
                   C152155 * C4047 -
               ((C102026 + C102027 + C102028) * C152231 +
                (C102025 + C102024 + C102023) * C101464) *
                   C152155 * C152072) *
                  C151967 * C152355 +
              (((C102435 + C102436 + C102437) * C101464 +
                (C50894 * C549 - C50895 * C530 - C50894 * C550 + C50889 * C566 +
                 C50896 * C553 - C50897 * C532 - C50896 * C554 + C50890 * C568 +
                 C50898 * C557 - C50899 * C534 - C50898 * C558 +
                 C50891 * C570) *
                    C152231) *
                   C152155 * C152072 -
               ((C102437 + C102436 + C102435) * C152231 +
                (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                 C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                 C50894 * C156 - C50895 * C145 - C50894 * C157 +
                 C50889 * C169) *
                    C101464) *
                   C152155 * C4047) *
                  C151967 * C152330) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50894 * C150 - C50895 * C142 - C50894 * C151 +
                  C50889 * C166 + C50896 * C152 - C50897 * C143 -
                  C50896 * C153 + C50890 * C167 + C50898 * C154 -
                  C50899 * C144 - C50898 * C155 + C50891 * C168) *
                     C101464 +
                 (C102011 + C102012 + C102013) * C152231) *
                    C152155 * C4047 -
                ((C102014 + C102015 + C102016) * C152231 +
                 (C102013 + C102012 + C102011) * C101464) *
                    C152155 * C152072) *
                   C152373 +
               (((C52218 + C52217 + C52216) * C101464 +
                 (C52879 + C52880 + C52881) * C152231) *
                    C152155 * C152072 -
                ((C52216 + C52217 + C52218) * C152231 +
                 (C51229 + C51228 + C51227) * C101464) *
                    C152155 * C4047) *
                   C152357 +
               (((C51232 + C51231 + C51230) * C101464 +
                 (C52882 + C52883 + C52884) * C152231) *
                    C152155 * C4047 -
                ((C52885 + C52886 + C52887) * C152231 +
                 (C52884 + C52883 + C52882) * C101464) *
                    C152155 * C152072) *
                   C152326) *
                  C3181 +
              ((((C102017 + C102018 + C102019) * C101464 +
                 (C102020 + C102021 + C102022) * C152231) *
                    C152155 * C152072 -
                ((C102019 + C102018 + C102017) * C152231 +
                 (C50898 * C156 - C50899 * C145 - C50898 * C157 +
                  C50891 * C169 + C50896 * C154 - C50897 * C144 -
                  C50896 * C155 + C50890 * C168 + C50894 * C152 -
                  C50895 * C143 - C50894 * C153 + C50889 * C167) *
                     C101464) *
                    C152155 * C4047) *
                   C152373 +
               (((C51233 + C51234 + C51235) * C101464 +
                 (C52219 + C52220 + C52221) * C152231) *
                    C152155 * C4047 -
                ((C54495 + C54496 + C54497) * C152231 +
                 (C52221 + C52220 + C52219) * C101464) *
                    C152155 * C152072) *
                   C152357 +
               (((C53413 + C53412 + C53411) * C101464 +
                 (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
                  C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
                  C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
                  C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                     C152231) *
                    C152155 * C152072 -
                ((C53411 + C53412 + C53413) * C152231 +
                 (C51238 + C51237 + C51236) * C101464) *
                    C152155 * C4047) *
                   C152326) *
                  C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152381 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152378 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C104558 + C104559 + C104560) * C152231) *
               C152155 * C152365 -
           ((C104561 + C104562 + C104563) * C152231 +
            (C104560 + C104559 + C104558) * C101464) *
               C152155 * C152342) *
              C151967 * C3181 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152378 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C152381 -
           ((C105066 + C105067 + C105068) * C152231 +
            (C102022 + C102021 + C102020) * C101464) *
               C152155 * C152365 +
           ((C105068 + C105067 + C105066) * C101464 +
            (C50894 * C2415 - C50895 * C2402 - C50894 * C2416 + C50889 * C2426 +
             C50896 * C2417 - C50897 * C2403 - C50896 * C2418 + C50890 * C2427 +
             C50898 * C2419 - C50899 * C2404 - C50898 * C2420 +
             C50891 * C2428) *
                C152231) *
               C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C4047 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C151967 * C152379 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C152072 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C4047) *
              C151967 * C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C4047 -
           ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152072) *
              C151967 * C152355 +
          (((C66214 * C101464 + C66215 * C152231) * C6026 +
            (C66004 * C101464 + C66005 * C152231) * C6027 +
            (C93912 * C101464 + (C59421 * C1517 - C59422 * C1494 -
                                 C59421 * C1518 + C151908 * C1530) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C4047 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152373 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C4047) *
               C152357 +
           ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
                C4047 -
            ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
             C111528 * C6026) *
                C152072) *
               C152326) *
              C3181 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C4047) *
               C152373 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C4047 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152357 +
           ((C112025 * C6026 + (C112027 + C112026) * C6027 +
             (C61138 * C101464 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
             C110050 * C6026) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152381 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152378 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152365 -
           ((C113465 + C113466) * C6028 + (C113467 + C113468) * C6027 +
            (C68376 * C152231 + C65788 * C101464) * C6026) *
               C152342) *
              C151967 * C3181 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C152378 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C152381 -
           ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C152365 +
           ((C65791 * C101464 + C68879 * C152231) * C6026 +
            (C65792 * C101464 + C68677 * C152231) * C6027 +
            (C67597 * C101464 + (C59421 * C9397 - C59422 * C9386 -
                                 C59421 * C9398 + C151908 * C9404) *
                                    C152231) *
                C6028) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C4047 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152072) *
              C151967 * C152379 +
          ((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
            C68879 * C117981) *
               C152155 * C152072 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C4047) *
              C151967 * C152372 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C4047 -
           (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
            C65793 * C117978) *
               C152155 * C152072) *
              C151967 * C152355 +
          ((C66214 * C117978 + C66215 * C117979 + C118548 * C117980 +
            (C59421 * C2419 - C59422 * C2404 - C59421 * C2420 +
             C151908 * C2428) *
                C117981) *
               C152155 * C152072 -
           (C118548 * C117981 + C66215 * C117980 + C66214 * C117979 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C117978) *
               C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C4047 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152072) *
               C152373 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152072 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C4047) *
               C152357 +
           ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
             C62161 * C117981) *
                C152155 * C4047 -
            (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
             C60345 * C117978) *
                C152155 * C152072) *
               C152326) *
              C3181 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152072 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C4047) *
               C152373 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C4047 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152072) *
               C152357 +
           ((C60348 * C117978 + C61873 * C117979 + C67597 * C117980 +
             (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
              C151908 * C9404) *
                 C117981) *
                C152155 * C152072 -
            (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
             C59647 * C117978) *
                C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C152381 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152378 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C152365 -
           (C119955 * C117981 + C68378 * C117980 + C68376 * C117979 +
            C65788 * C117978) *
               C152155 * C152342) *
              C151967 * C3181 +
          ((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
            C68879 * C117981) *
               C152155 * C152378 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C152381 -
           (C120286 * C117981 + C68879 * C117980 + C65791 * C117979 +
            C65790 * C117978) *
               C152155 * C152365 +
           (C65791 * C117978 + C68879 * C117979 + C120286 * C117980 +
            (C59421 * C17798 - C59422 * C17791 - C59421 * C17799 +
             C151908 * C17803) *
                C117981) *
               C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152068 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152075 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C4719) *
              C151967 * C151944 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C152075 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C152068 -
           ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C4719) *
              C151967 * C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C152068 -
           ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152075 +
           ((C65794 * C101464 + C65796 * C152231) * C6026 +
            (C65498 * C101464 + C65795 * C152231) * C6027 +
            (C65499 * C101464 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C6028) *
               C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152068 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152075 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C104558 + C104559 + C104560) * C152231) *
               C152155 * C4719) *
              C151967 * C151944 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152075 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C152068 -
           ((C105066 + C105067 + C105068) * C152231 +
            (C102022 + C102021 + C102020) * C101464) *
               C152155 * C4719) *
              C151967 * C151953 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C152068 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C152075 +
           ((C102028 + C102027 + C102026) * C101464 +
            (C50894 * C2407 - C50895 * C2398 - C50894 * C2408 + C50889 * C2422 +
             C50896 * C2405 - C50897 * C2397 - C50896 * C2406 + C50890 * C2421 +
             C50898 * C2762 - C50899 * C2761 - C50898 * C2763 +
             C50891 * C2764) *
                C152231) *
               C152155 * C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C152068 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152075 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C4719) *
              C151967 * C151944 +
          ((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
            C68879 * C117981) *
               C152155 * C152075 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C152068 -
           (C120286 * C117981 + C68879 * C117980 + C65791 * C117979 +
            C65790 * C117978) *
               C152155 * C4719) *
              C151967 * C151953 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C152068 -
           (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
            C65793 * C117978) *
               C152155 * C152075 +
           (C65794 * C117978 + C65796 * C117979 + C118281 * C117980 +
            (C59421 * C18338 - C59422 * C18337 - C59421 * C18339 +
             C151908 * C18340) *
                C117981) *
               C152155 * C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C4047 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C152373 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C4047) *
               C152357 +
           (((C51232 + C51231 + C51230) * C101464 +
             (C52882 + C52883 + C52884) * C152231) *
                C152155 * C4047 -
            ((C52885 + C52886 + C52887) * C152231 +
             (C52884 + C52883 + C52882) * C101464) *
                C152155 * C152072) *
               C152326) *
              C3181 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C4047) *
               C152373 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C4047 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152357 +
           (((C53413 + C53412 + C53411) * C101464 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C53411 + C53412 + C53413) * C152231 +
             (C51238 + C51237 + C51236) * C101464) *
                C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C4047 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152072) *
              C151967 * C152379 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152072 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C4047) *
              C151967 * C152372 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C4047 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C152072) *
              C151967 * C152355 +
          (((C102435 + C102436 + C102437) * C101464 +
            (C50894 * C549 - C50895 * C530 - C50894 * C550 + C50889 * C566 +
             C50896 * C553 - C50897 * C532 - C50896 * C554 + C50890 * C568 +
             C50898 * C557 - C50899 * C534 - C50898 * C558 + C50891 * C570) *
                C152231) *
               C152155 * C152072 -
           ((C102437 + C102436 + C102435) * C152231 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C101464) *
               C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C4047 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C151967 * C152379 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C152072 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C4047) *
              C151967 * C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C4047 -
           ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152072) *
              C151967 * C152355 +
          (((C66214 * C101464 + C66215 * C152231) * C6026 +
            (C66004 * C101464 + C66005 * C152231) * C6027 +
            (C93912 * C101464 + (C59421 * C1517 - C59422 * C1494 -
                                 C59421 * C1518 + C151908 * C1530) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C4047 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152373 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C4047) *
               C152357 +
           ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
                C4047 -
            ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
             C111528 * C6026) *
                C152072) *
               C152326) *
              C3181 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C4047) *
               C152373 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C4047 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152357 +
           ((C112025 * C6026 + (C112027 + C112026) * C6027 +
             (C61138 * C101464 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
             C110050 * C6026) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C4047 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152072) *
              C151967 * C152379 +
          ((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
            C68879 * C117981) *
               C152155 * C152072 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C4047) *
              C151967 * C152372 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C4047 -
           (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
            C65793 * C117978) *
               C152155 * C152072) *
              C151967 * C152355 +
          ((C66214 * C117978 + C66215 * C117979 + C118548 * C117980 +
            (C59421 * C2419 - C59422 * C2404 - C59421 * C2420 +
             C151908 * C2428) *
                C117981) *
               C152155 * C152072 -
           (C118548 * C117981 + C66215 * C117980 + C66214 * C117979 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C117978) *
               C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C4047 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152072) *
               C152373 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152072 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C4047) *
               C152357 +
           ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
             C62161 * C117981) *
                C152155 * C4047 -
            (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
             C60345 * C117978) *
                C152155 * C152072) *
               C152326) *
              C3181 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152072 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C4047) *
               C152373 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C4047 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152072) *
               C152357 +
           ((C60348 * C117978 + C61873 * C117979 + C67597 * C117980 +
             (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
              C151908 * C9404) *
                 C117981) *
                C152155 * C152072 -
            (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
             C59647 * C117978) *
                C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C1661 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C1662 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C1663 -
           ((C53626 + C53627 + C53628) * C152231 +
            (C52603 + C52602 + C52601) * C101464) *
               C152155 * C151985 * C152336) *
              C152270 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C1662 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C1661 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C1663 +
           ((C53102 + C53101 + C53100) * C101464 +
            (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 + C50889 * C2012 +
             C50896 * C2007 - C50897 * C2001 - C50896 * C2008 + C50890 * C2013 +
             C50898 * C2009 - C50899 * C2002 - C50898 * C2010 +
             C50891 * C2014) *
                C152231) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C152284 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152030) *
              C703 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152030 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152284) *
              C704 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C152284 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152030) *
              C705 +
          (((C51675 + C51676 + C51677) * C101464 +
            (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 + C50889 * C1062 +
             C50896 * C1055 - C50897 * C1045 - C50896 * C1056 + C50890 * C1063 +
             C50898 * C1057 - C50899 * C1046 - C50898 * C1058 +
             C50891 * C1064) *
                C152231) *
               C152155 * C151985 * C152030 -
           ((C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569 +
             C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
             C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559) *
                C152231 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C101464) *
               C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152284 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152030) *
              C703 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C152030 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152284) *
              C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152284 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152030) *
              C705 +
          (((C110464 + C110465) * C6026 + (C110466 + C110467) * C6027 +
            (C59962 * C101464 + (C59421 * C2009 - C59422 * C2002 -
                                 C59421 * C2010 + C151908 * C2014) *
                                    C152231) *
                C6028) *
               C151985 * C152030 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C1661 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C1662 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C151985 * C1663 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C151985 * C152336) *
              C152270 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C1662 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C1661 -
           ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
            C110050 * C6026) *
               C151985 * C1663 +
           (C111732 * C6026 + (C111734 + C111733) * C6027 +
            (C60936 * C101464 + (C59421 * C8803 - C59422 * C8800 -
                                 C59421 * C8804 + C151908 * C8806) *
                                    C152231) *
                C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C152284 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C152030) *
              C703 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C152030 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C152284) *
              C704 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C152284 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C152030) *
              C705 +
          ((C59960 * C117978 + C66004 * C117979 + C66005 * C117980 +
            (C59421 * C2905 - C59422 * C2898 - C59421 * C2906 +
             C151908 * C2910) *
                C117981) *
               C152155 * C151985 * C152030 -
           ((C59421 * C2405 - C59422 * C2397 - C59421 * C2406 +
             C151908 * C2421) *
                C117981 +
            C66215 * C117980 + C66214 * C117979 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C117978) *
               C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C1661 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C1662 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C1663 -
           (C62160 * C117981 + C60792 * C117980 + C60344 * C117979 +
            C59644 * C117978) *
               C152155 * C151985 * C152336) *
              C152270 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C1662 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C1661 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C1663 +
           (C59648 * C117978 + C60349 * C117979 + C61872 * C117980 +
            (C59421 * C10123 - C59422 * C10120 - C59421 * C10124 +
             C151908 * C10126) *
                C117981) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152285 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152072) *
              C1661 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152072 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C152285) *
              C1662 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C152285 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C152072) *
              C1663 +
          (((C53628 + C53627 + C53626) * C101464 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152231) *
               C152155 * C152072 -
           ((C53626 + C53627 + C53628) * C152231 +
            (C52603 + C52602 + C52601) * C101464) *
               C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152285 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C152284 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152285) *
               C152030) *
              C323 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152285) *
               C152284 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152285 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152030) *
              C324 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C101464 +
             (C102023 + C102024 + C102025) * C152231) *
                C152155 * C152285 -
            ((C102026 + C102027 + C102028) * C152231 +
             (C102025 + C102024 + C102023) * C101464) *
                C152155 * C152072) *
               C152284 +
           (((C52224 + C52223 + C52222) * C101464 +
             (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
              C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
              C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
              C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C52222 + C52223 + C52224) * C152231 +
             (C51241 + C51240 + C51239) * C101464) *
                C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152285 -
            ((C110952 + C110953) * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152284 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             (C60344 * C101464 + C60792 * C152231) * C6028) *
                C152072 -
            ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152285) *
               C152030) *
              C323 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + (C110958 + C110959) * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152285) *
               C152284 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             (C110041 + C110042) * C6028) *
                C152285 -
            ((C61872 * C152231 + C60349 * C101464) * C6028 +
             (C110959 + C110958) * C6027 + (C110957 + C110956) * C6026) *
                C152072) *
               C152030) *
              C324 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C101464 +
              C65793 * C152231) *
                 C6026 +
             (C110043 + C110044) * C6027 + C110051 * C6028) *
                C152285 -
            ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
             (C65794 * C152231 + C65793 * C101464) * C6026) *
                C152072) *
               C152284 +
           (((C110963 + C110962) * C6026 + (C110961 + C110960) * C6027 +
             (C60350 * C101464 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
             (C110044 + C110043) * C6026) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152285 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C1661 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C152072 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C152285) *
              C1662 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C152285 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C152072) *
              C1663 +
          ((C112222 * C6026 + (C112224 + C112223) * C6027 +
            (C61280 * C101464 + (C59421 * C60756 - C59422 * C60755 -
                                 C59421 * C60757 + C151908 * C60758) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C152285 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152072) *
               C152284 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152072 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C152285) *
               C152030) *
              C323 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152072 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C152285) *
               C152284 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C152285 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152072) *
               C152030) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C117978 +
             C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
                C152155 * C152285 -
            (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
             C65793 * C117978) *
                C152155 * C152072) *
               C152284 +
           ((C60352 * C117978 + C65498 * C117979 + C65795 * C117980 +
             (C59421 * C18125 - C59422 * C18124 - C59421 * C18126 +
              C151908 * C18127) *
                 C117981) *
                C152155 * C152072 -
            (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
             C59650 * C117978) *
                C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C152285 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152072) *
              C1661 +
          ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
            C67098 * C117981) *
               C152155 * C152072 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C152285) *
              C1662 +
          ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C152285 -
           (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
            C60345 * C117978) *
               C152155 * C152072) *
              C1663 +
          ((C60344 * C117978 + C60792 * C117979 + C62160 * C117980 +
            (C59421 * C61656 - C59422 * C61655 - C59421 * C61657 +
             C151908 * C61658) *
                C117981) *
               C152155 * C152072 -
           (C62160 * C117981 + C60792 * C117980 + C60344 * C117979 +
            C59644 * C117978) *
               C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                   C101464 +
               (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
                C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
                   C152231) *
                  C152155 * C151985 * C151967 * C129 -
              ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
                C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
                C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
                   C152231 +
               (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                   C101464) *
                  C152155 * C151985 * C151967 * C130 +
              ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                   C101464 +
               (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
                C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
                C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
                   C152231) *
                  C152155 * C151985 * C151967 * C131 -
              ((C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569 +
                C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
                C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559) *
                   C152231 +
               (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                   C101464) *
                  C152155 * C151985 * C151967 * C132 +
              ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
                C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
                C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
                   C101464 +
               (C50894 * C551 - C50895 * C531 - C50894 * C552 + C50889 * C567 +
                C50896 * C555 - C50897 * C533 - C50896 * C556 + C50890 * C569 +
                C50898 * C844 - C50899 * C843 - C50898 * C845 + C50891 * C846) *
                   C152231) *
                  C152155 * C151985 * C151967 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
                 C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                 C50898 * C537 - C50899 * C524 - C50898 * C538 +
                 C50891 * C560) *
                    C152231) *
                   C152155 * C151985 * C152373 -
               ((C52216 + C52217 + C52218) * C152231 +
                (C51229 + C51228 + C51227) * C101464) *
                   C152155 * C151985 * C152357 +
               ((C51232 + C51231 + C51230) * C101464 +
                (C52882 + C52883 + C52884) * C152231) *
                   C152155 * C151985 * C152326) *
                  C323 +
              (((C51233 + C51234 + C51235) * C101464 +
                (C52219 + C52220 + C52221) * C152231) *
                   C152155 * C151985 * C152357 -
               ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
                 C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
                 C50894 * C539 - C50895 * C525 - C50894 * C540 +
                 C50889 * C561) *
                    C152231 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C101464) *
                   C152155 * C151985 * C152373 -
               ((C53411 + C53412 + C53413) * C152231 +
                (C51238 + C51237 + C51236) * C101464) *
                   C152155 * C151985 * C152326) *
                  C324 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C101464 +
                (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
                 C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
                 C50898 * C551 - C50899 * C531 - C50898 * C552 +
                 C50891 * C567) *
                    C152231) *
                   C152155 * C151985 * C152373 -
               ((C52222 + C52223 + C52224) * C152231 +
                (C51241 + C51240 + C51239) * C101464) *
                   C152155 * C151985 * C152357 +
               ((C51244 + C51243 + C51242) * C101464 +
                (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
                 C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
                 C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
                 C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                    C152231) *
                   C152155 * C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152374 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152359 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50898 * C2407 - C50899 * C2398 - C50898 * C2408 +
             C50891 * C2422) *
                C152231) *
               C152155 * C152329) *
              C151967 * C323 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152359 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C152374 -
           ((C50898 * C2405 - C50899 * C2397 - C50898 * C2406 + C50891 * C2421 +
             C50896 * C2407 - C50897 * C2398 - C50896 * C2408 + C50890 * C2422 +
             C50894 * C2409 - C50895 * C2399 - C50894 * C2410 +
             C50889 * C2423) *
                C152231 +
            (C102022 + C102021 + C102020) * C101464) *
               C152155 * C152329) *
              C151967 * C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C152374 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C152359 +
           ((C102028 + C102027 + C102026) * C101464 +
            (C50894 * C2407 - C50895 * C2398 - C50894 * C2408 + C50889 * C2422 +
             C50896 * C2405 - C50897 * C2397 - C50896 * C2406 + C50890 * C2421 +
             C50898 * C2762 - C50899 * C2761 - C50898 * C2763 +
             C50891 * C2764) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C1212 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C1211 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C102011 + C102012 + C102013) * C152231) *
              C152155 * C151985 * C1299 -
          ((C52216 + C52217 + C52218) * C152231 +
           (C51229 + C51228 + C51227) * C101464) *
              C152155 * C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C101464 +
           (C52882 + C52883 + C52884) * C152231) *
              C152155 * C151985 * C1301 -
          ((C53626 + C53627 + C53628) * C152231 +
           (C52603 + C52602 + C52601) * C101464) *
              C152155 * C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C101464 +
           (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
            C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
            C50898 * C8586 - C50899 * C8585 - C50898 * C8587 + C50891 * C8588) *
               C152231) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152374 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152359 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50898 * C2407 - C50899 * C2398 - C50898 * C2408 +
             C50891 * C2422) *
                C152231) *
               C152155 * C152329) *
              C1211 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152359 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C152374 -
           ((C54904 + C54905 + C54906) * C152231 +
            (C52881 + C52880 + C52879) * C101464) *
               C152155 * C152329) *
              C1212 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C152374 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C152359 +
           ((C52887 + C52886 + C52885) * C101464 +
            (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 + C50889 * C9400 +
             C50896 * C9387 - C50897 * C9381 - C50896 * C9388 + C50890 * C9399 +
             C50898 * C9922 - C50899 * C9921 - C50898 * C9923 +
             C50891 * C9924) *
                C152231) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C59642 * C101464 + C60346 * C152231) * C6027 +
           (C59643 * C101464 + C60345 * C152231) * C6028) *
              C151985 * C151967 * C129 -
          ((C60348 * C152231 + C59647 * C101464) * C6028 +
           (C60347 * C152231 + C59646 * C101464) * C6027 +
           (C65789 * C152231 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C101464) *
               C6026) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C101464 +
            C65793 * C152231) *
               C6026 +
           (C59650 * C101464 + C60352 * C152231) * C6027 +
           (C59651 * C101464 + C60351 * C152231) * C6028) *
              C151985 * C151967 * C131 -
          ((C93912 * C152231 + C59961 * C101464) * C6028 +
           (C66004 * C152231 + C59960 * C101464) * C6027 +
           (C66214 * C152231 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C101464) *
               C6026) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C101464 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152231) *
               C6026 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C101464 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152231) *
               C6027 +
           ((C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
                C101464 +
            (C59421 * C1866 - C59422 * C1865 - C59421 * C1867 +
             C151908 * C1868) *
                C152231) *
               C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152373 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152357 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C323 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C152357 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152373 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152373 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152357 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152374 -
           ((C60791 * C152231 + C60345 * C101464) * C6028 +
            (C60790 * C152231 + C60346 * C101464) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152359 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C60790 * C101464 + C62162 * C152231) * C6027 +
            (C60791 * C101464 + C62161 * C152231) * C6028) *
               C152329) *
              C151967 * C323 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C60347 * C101464 + C61874 * C152231) * C6027 +
            (C60348 * C101464 + C61873 * C152231) * C6028) *
               C152359 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C152374 -
           ((C67597 * C152231 + C61873 * C101464) * C6028 +
            (C65792 * C152231 + C61874 * C101464) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C152329) *
              C151967 * C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C152374 -
           ((C65499 * C152231 + C60351 * C101464) * C6028 +
            (C65498 * C152231 + C60352 * C101464) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152359 +
           ((C65794 * C101464 + C65796 * C152231) * C6026 +
            (C65498 * C101464 + C65795 * C152231) * C6027 +
            (C65499 * C101464 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C1211 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C1212 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C1212 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C1211 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C1211 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C1212 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C110031 + C110032) * C6027 + C110049 * C6028) *
              C151985 * C1299 -
          (C111304 * C6028 + (C110034 + C110033) * C6027 +
           (C110032 + C110031) * C6026) *
              C151985 * C1300 +
          (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
              C151985 * C1301 -
          ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
           C111304 * C6026) *
              C151985 * C1302 +
          (C111309 * C6026 + (C111308 + C111307) * C6027 +
           (C60607 * C101464 + (C59421 * C61270 - C59422 * C61269 -
                                C59421 * C61271 + C151908 * C61272) *
                                   C152231) *
               C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152374 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152359 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152329) *
              C1211 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            (C111533 + C111534) * C6028) *
               C152359 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C152374 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C152329) *
              C1212 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C152374 -
           ((C60794 * C152231 + C60793 * C101464) * C6028 +
            (C111534 + C111533) * C6027 + C111528 * C6026) *
               C152359 +
           (C111537 * C6026 + (C111536 + C111535) * C6027 +
            (C60794 * C101464 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C117978 +
           C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
              C152155 * C151985 * C151967 * C129 -
          (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
           (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
               C117978) *
              C152155 * C151985 * C151967 * C130 +
          ((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
               C117978 +
           C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
              C152155 * C151985 * C151967 * C131 -
          ((C59421 * C2405 - C59422 * C2397 - C59421 * C2406 +
            C151908 * C2421) *
               C117981 +
           C66215 * C117980 + C66214 * C117979 +
           (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
               C117978) *
              C152155 * C151985 * C151967 * C132 +
          ((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
               C117978 +
           (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
               C117979 +
           (C59421 * C553 - C59422 * C532 - C59421 * C554 + C151908 * C568) *
               C117980 +
           (C59421 * C2762 - C59422 * C2761 - C59421 * C2763 +
            C151908 * C2764) *
               C117981) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C152373 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C152357 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C152326) *
              C323 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C152357 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C152373 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C152373 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C152357 +
           (C59651 * C117978 + C60351 * C117979 + C65499 * C117980 +
            (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
             C151908 * C9924) *
                C117981) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C152374 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152359 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C152329) *
              C151967 * C323 +
          ((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
            C68879 * C117981) *
               C152155 * C152359 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C152374 -
           ((C59421 * C17792 - C59422 * C17788 - C59421 * C17793 +
             C151908 * C17800) *
                C117981 +
            C68879 * C117980 + C65791 * C117979 + C65790 * C117978) *
               C152155 * C152329) *
              C151967 * C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C152374 -
           (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
            C65793 * C117978) *
               C152155 * C152359 +
           (C65794 * C117978 + C65796 * C117979 + C118281 * C117980 +
            (C59421 * C18338 - C59422 * C18337 - C59421 * C18339 +
             C151908 * C18340) *
                C117981) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C1211 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C1212 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C152326) *
              C152370 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C1212 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C1211 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C1211 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C1212 +
           (C59651 * C117978 + C60351 * C117979 + C65499 * C117980 +
            (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
             C151908 * C9924) *
                C117981) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C117978 +
           C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
              C152155 * C151985 * C1299 -
          (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
           C59642 * C117978) *
              C152155 * C151985 * C1300 +
          (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
           C62161 * C117981) *
              C152155 * C151985 * C1301 -
          (C62160 * C117981 + C60792 * C117980 + C60344 * C117979 +
           C59644 * C117978) *
              C152155 * C151985 * C1302 +
          (C59645 * C117978 + C60793 * C117979 + C60794 * C117980 +
           (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
            C151908 * C62140) *
               C117981) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C152374 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152359 +
           (C65787 * C117978 + C65788 * C117979 + C68376 * C117980 +
            C68378 * C117981) *
               C152155 * C152329) *
              C1211 +
          ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
            C67098 * C117981) *
               C152155 * C152359 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C152374 -
           (C68377 * C117981 + C67098 * C117980 + C62162 * C117979 +
            C60790 * C117978) *
               C152155 * C152329) *
              C1212 +
          ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C152374 -
           (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
            C60345 * C117978) *
               C152155 * C152359 +
           (C60791 * C117978 + C62161 * C117979 + C67099 * C117980 +
            (C59421 * C69074 - C59422 * C69073 - C59421 * C69075 +
             C151908 * C69076) *
                C117981) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152285 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C1211 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152285) *
               C1212 +
           (((C51232 + C51231 + C51230) * C101464 +
             (C52882 + C52883 + C52884) * C152231) *
                C152155 * C152285 -
            ((C52885 + C52886 + C52887) * C152231 +
             (C52884 + C52883 + C52882) * C101464) *
                C152155 * C152072) *
               C152326) *
              C152270 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152285) *
               C1211 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152285 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C1212 +
           (((C53413 + C53412 + C53411) * C101464 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C53411 + C53412 + C53413) * C152231 +
             (C51238 + C51237 + C51236) * C101464) *
                C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152285 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152072) *
              C151967 * C703 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152072 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C152285) *
              C151967 * C704 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C152285 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C152072) *
              C151967 * C705 +
          (((C102435 + C102436 + C102437) * C101464 +
            (C50894 * C549 - C50895 * C530 - C50894 * C550 + C50889 * C566 +
             C50896 * C553 - C50897 * C532 - C50896 * C554 + C50890 * C568 +
             C50898 * C557 - C50899 * C534 - C50898 * C558 + C50891 * C570) *
                C152231) *
               C152155 * C152072 -
           ((C102437 + C102436 + C102435) * C152231 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C101464) *
               C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152285 -
           ((C60791 * C152231 + C60345 * C101464) * C6028 +
            (C60790 * C152231 + C60346 * C101464) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C151967 * C703 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C60347 * C101464 + C61874 * C152231) * C6027 +
            (C60348 * C101464 + C61873 * C152231) * C6028) *
               C152072 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C152285) *
              C151967 * C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C152285 -
           ((C65499 * C152231 + C60351 * C101464) * C6028 +
            (C65498 * C152231 + C60352 * C101464) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152072) *
              C151967 * C705 +
          (((C66214 * C101464 + C66215 * C152231) * C6026 +
            (C66004 * C101464 + C66005 * C152231) * C6027 +
            (C93912 * C101464 + (C59421 * C1517 - C59422 * C1494 -
                                 C59421 * C1518 + C151908 * C1530) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152285 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C1211 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             (C111533 + C111534) * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152285) *
               C1212 +
           ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
                C152285 -
            ((C60794 * C152231 + C60793 * C101464) * C6028 +
             (C111534 + C111533) * C6027 + C111528 * C6026) *
                C152072) *
               C152326) *
              C152270 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152285) *
               C1211 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152285 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C1212 +
           ((C112025 * C6026 + (C112027 + C112026) * C6027 +
             (C61138 * C101464 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
             C110050 * C6026) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C152285 -
           (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
            C65786 * C117978) *
               C152155 * C152072) *
              C151967 * C703 +
          ((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
            C68879 * C117981) *
               C152155 * C152072 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C152285) *
              C151967 * C704 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C152285 -
           (C118281 * C117981 + C65796 * C117980 + C65794 * C117979 +
            C65793 * C117978) *
               C152155 * C152072) *
              C151967 * C705 +
          ((C66214 * C117978 + C66215 * C117979 + C118548 * C117980 +
            (C59421 * C2419 - C59422 * C2404 - C59421 * C2420 +
             C151908 * C2428) *
                C117981) *
               C152155 * C152072 -
           (C118548 * C117981 + C66215 * C117980 + C66214 * C117979 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C117978) *
               C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C117978 +
             C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
                C152155 * C152285 -
            (C68376 * C117981 + C65788 * C117980 + C65787 * C117979 +
             C65786 * C117978) *
                C152155 * C152072) *
               C1211 +
           ((C60346 * C117978 + C60790 * C117979 + C62162 * C117980 +
             C67098 * C117981) *
                C152155 * C152072 -
            (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
             C59642 * C117978) *
                C152155 * C152285) *
               C1212 +
           ((C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
             C62161 * C117981) *
                C152155 * C152285 -
            (C67099 * C117981 + C62161 * C117980 + C60791 * C117979 +
             C60345 * C117978) *
                C152155 * C152072) *
               C152326) *
              C152270 +
          (((C65789 * C117978 + C65790 * C117979 + C65791 * C117980 +
             C68879 * C117981) *
                C152155 * C152072 -
            (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C117978) *
                C152155 * C152285) *
               C1211 +
           ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
             C65792 * C117981) *
                C152155 * C152285 -
            (C68677 * C117981 + C65792 * C117980 + C61874 * C117979 +
             C60347 * C117978) *
                C152155 * C152072) *
               C1212 +
           ((C60348 * C117978 + C61873 * C117979 + C67597 * C117980 +
             (C59421 * C9397 - C59422 * C9386 - C59421 * C9398 +
              C151908 * C9404) *
                 C117981) *
                C152155 * C152072 -
            (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
             C59647 * C117978) *
                C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152357 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152326) *
              C323 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152357 -
           ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
                C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152373 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152357 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
            C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
            C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
               C152231) *
              C152155 * C151985 * C151967 * C129 -
          ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
            C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
            C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
               C152231 +
           (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
            C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
            C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
               C101464) *
              C152155 * C151985 * C151967 * C130 +
          ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
            C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
            C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
               C101464 +
           (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
            C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
            C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
               C152231) *
              C152155 * C151985 * C151967 * C131 -
          ((C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569 +
            C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
            C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559) *
               C152231 +
           (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
            C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
            C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
               C101464) *
              C152155 * C151985 * C151967 * C132 +
          ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
            C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
            C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
               C101464 +
           (C50894 * C551 - C50895 * C531 - C50894 * C552 + C50889 * C567 +
            C50896 * C555 - C50897 * C533 - C50896 * C556 + C50890 * C569 +
            C50898 * C844 - C50899 * C843 - C50898 * C845 + C50891 * C846) *
               C152231) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C1212 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C1211 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C102011 + C102012 + C102013) * C152231) *
              C152155 * C151985 * C1299 -
          ((C52216 + C52217 + C52218) * C152231 +
           (C51229 + C51228 + C51227) * C101464) *
              C152155 * C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C101464 +
           (C52882 + C52883 + C52884) * C152231) *
              C152155 * C151985 * C1301 -
          ((C53626 + C53627 + C53628) * C152231 +
           (C52603 + C52602 + C52601) * C101464) *
              C152155 * C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C101464 +
           (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
            C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
            C50898 * C8586 - C50899 * C8585 - C50898 * C8587 + C50891 * C8588) *
               C152231) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C59642 * C101464 + C60346 * C152231) * C6027 +
           (C59643 * C101464 + C60345 * C152231) * C6028) *
              C151985 * C151967 * C129 -
          ((C60348 * C152231 + C59647 * C101464) * C6028 +
           (C60347 * C152231 + C59646 * C101464) * C6027 +
           (C65789 * C152231 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C101464) *
               C6026) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C101464 +
            C65793 * C152231) *
               C6026 +
           (C59650 * C101464 + C60352 * C152231) * C6027 +
           (C59651 * C101464 + C60351 * C152231) * C6028) *
              C151985 * C151967 * C131 -
          ((C93912 * C152231 + C59961 * C101464) * C6028 +
           (C66004 * C152231 + C59960 * C101464) * C6027 +
           (C66214 * C152231 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C101464) *
               C6026) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C101464 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152231) *
               C6026 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C101464 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152231) *
               C6027 +
           ((C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
                C101464 +
            (C59421 * C1866 - C59422 * C1865 - C59421 * C1867 +
             C151908 * C1868) *
                C152231) *
               C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152373 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152357 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C323 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C152357 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152373 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152373 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152357 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C1211 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C1212 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C1212 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C1211 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C1211 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C1212 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C110031 + C110032) * C6027 + C110049 * C6028) *
              C151985 * C1299 -
          (C111304 * C6028 + (C110034 + C110033) * C6027 +
           (C110032 + C110031) * C6026) *
              C151985 * C1300 +
          (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
              C151985 * C1301 -
          ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
           C111304 * C6026) *
              C151985 * C1302 +
          (C111309 * C6026 + (C111308 + C111307) * C6027 +
           (C60607 * C101464 + (C59421 * C61270 - C59422 * C61269 -
                                C59421 * C61271 + C151908 * C61272) *
                                   C152231) *
               C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C117978 +
           C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
              C152155 * C151985 * C151967 * C129 -
          (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
           (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
               C117978) *
              C152155 * C151985 * C151967 * C130 +
          ((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
               C117978 +
           C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
              C152155 * C151985 * C151967 * C131 -
          ((C59421 * C2405 - C59422 * C2397 - C59421 * C2406 +
            C151908 * C2421) *
               C117981 +
           C66215 * C117980 + C66214 * C117979 +
           (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
               C117978) *
              C152155 * C151985 * C151967 * C132 +
          ((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
               C117978 +
           (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
               C117979 +
           (C59421 * C553 - C59422 * C532 - C59421 * C554 + C151908 * C568) *
               C117980 +
           (C59421 * C2762 - C59422 * C2761 - C59421 * C2763 +
            C151908 * C2764) *
               C117981) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C152373 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C152357 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C152326) *
              C323 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C152357 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C152373 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C152373 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C152357 +
           (C59651 * C117978 + C60351 * C117979 + C65499 * C117980 +
            (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
             C151908 * C9924) *
                C117981) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C117978 +
            C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
               C152155 * C151985 * C1211 -
           (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
            C59642 * C117978) *
               C152155 * C151985 * C1212 +
           (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
            C62161 * C117981) *
               C152155 * C151985 * C152326) *
              C152370 +
          ((C59646 * C117978 + C60347 * C117979 + C61874 * C117980 +
            C65792 * C117981) *
               C152155 * C151985 * C1212 -
           (C65791 * C117981 + C65790 * C117980 + C65789 * C117979 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C117978) *
               C152155 * C151985 * C1211 -
           (C67597 * C117981 + C61873 * C117980 + C60348 * C117979 +
            C59647 * C117978) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C117978 +
            C65793 * C117979 + C65794 * C117980 + C65796 * C117981) *
               C152155 * C151985 * C1211 -
           (C65795 * C117981 + C65498 * C117980 + C60352 * C117979 +
            C59650 * C117978) *
               C152155 * C151985 * C1212 +
           (C59651 * C117978 + C60351 * C117979 + C65499 * C117980 +
            (C59421 * C9922 - C59422 * C9921 - C59421 * C9923 +
             C151908 * C9924) *
                C117981) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
               C117978 +
           C65786 * C117979 + C65787 * C117980 + C65788 * C117981) *
              C152155 * C151985 * C1299 -
          (C62162 * C117981 + C60790 * C117980 + C60346 * C117979 +
           C59642 * C117978) *
              C152155 * C151985 * C1300 +
          (C59643 * C117978 + C60345 * C117979 + C60791 * C117980 +
           C62161 * C117981) *
              C152155 * C151985 * C1301 -
          (C62160 * C117981 + C60792 * C117980 + C60344 * C117979 +
           C59644 * C117978) *
              C152155 * C151985 * C1302 +
          (C59645 * C117978 + C60793 * C117979 + C60794 * C117980 +
           (C59421 * C62138 - C59422 * C62137 - C59421 * C62139 +
            C151908 * C62140) *
               C117981) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[325] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C152026 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C152033 +
           (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C151985 * C3525) *
              C151944 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C152033 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C152026 -
           ((C77246 + C77247) * C134328 + C85260 * C152369 + C73985 * C152368) *
               C152155 * C151985 * C3525) *
              C151953 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C151985 * C152026 -
           ((C82930 + C82931) * C134328 + C83869 * C152369 +
            (C73979 + C73978) * C152368) *
               C152155 * C151985 * C152033 +
           (C73986 * C152368 + (C74995 + C74994) * C152369 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C134328) *
               C152155 * C151985 * C3525) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[326] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                       C152263 * C166 + C150632 * C152 - C73638 * C143 -
                       C150632 * C153 + C151913 * C167) *
                          C152368 +
                      (C82920 + C82921) * C152369 + C134766 * C134328) *
                         C152155 * C152285 -
                     (C137269 * C134328 + (C82922 + C82923) * C152369 +
                      (C82921 + C82920) * C152368) *
                         C152155 * C152072) *
                        C152026 +
                    ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) *
                         C152155 * C152072 -
                     (C84612 * C134328 + C83865 * C152369 +
                      (C73967 + C73966) * C152368) *
                         C152155 * C152285) *
                        C152033 +
                    ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) *
                         C152155 * C152285 -
                     ((C77662 + C77663) * C134328 + C84615 * C152369 +
                      C75588 * C152368) *
                         C152155 * C152072) *
                        C3525) *
                       C3181 +
                   ((((C82924 + C82925) * C152368 +
                      (C82926 + C82927) * C152369 + C137769 * C134328) *
                         C152155 * C152072 -
                     (C134767 * C134328 + (C82925 + C82924) * C152369 +
                      (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                       C151913 * C168 + C150639 * C152 - C73636 * C143 -
                       C150639 * C153 + C152263 * C167) *
                          C152368) *
                         C152155 * C152285) *
                        C152026 +
                    (((C73972 + C73973) * C152368 + C83866 * C152369 +
                      C86690 * C134328) *
                         C152155 * C152285 -
                     ((C86704 + C86705) * C134328 + C86699 * C152369 +
                      C83867 * C152368) *
                         C152155 * C152072) *
                        C152033 +
                    ((C76148 * C152368 + (C77247 + C77246) * C152369 +
                      (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
                       C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
                       C150632 * C9923 + C151913 * C9924) *
                          C134328) *
                         C152155 * C152072 -
                     ((C77246 + C77247) * C134328 + C85260 * C152369 +
                      C73985 * C152368) *
                         C152155 * C152285) *
                        C3525) *
                       C151950)) /
                 (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C152380 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C152376 +
           (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C151985 * C152362 -
           ((C75644 + C75645) * C134328 + C85519 * C152369 + C75338 * C152368) *
               C152155 * C151985 * C152336) *
              C3181 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C152376 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C152380 -
           ((C77246 + C77247) * C134328 + C85260 * C152369 + C73985 * C152368) *
               C152155 * C151985 * C152362 +
           (C75842 * C152368 + (C76163 + C76162) * C152369 +
            (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
             C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
             C150632 * C9697 + C151913 * C9698) *
                C134328) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C3041 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C152030) *
              C152379 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C152030 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C3041) *
              C152372 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C151985 * C3041 -
           ((C82930 + C82931) * C134328 + C83869 * C152369 +
            (C73979 + C73978) * C152368) *
               C152155 * C151985 * C152030) *
              C152355 +
          (((C74426 + C74427) * C152368 + (C83204 + C83205) * C152369 +
            (C150639 * C1495 - C73636 * C1483 - C150639 * C1496 +
             C152263 * C1519 + C150632 * C2624 - C73638 * C2623 -
             C150632 * C2625 + C151913 * C2626) *
                C134328) *
               C152155 * C151985 * C152030 -
           ((C135184 + C135183) * C134328 + (C83477 + C83476) * C152369 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152368) *
               C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152368 +
             (C82920 + C82921) * C152369 + C134766 * C134328) *
                C152155 * C152374 -
            (C137269 * C134328 + (C82922 + C82923) * C152369 +
             (C82921 + C82920) * C152368) *
                C152155 * C152359 +
            (C134766 * C152368 + (C86298 + C86299) * C152369 +
             C137270 * C134328) *
                C152155 * C152329) *
               C3041 +
           ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
                C152359 -
            (C84612 * C134328 + C83865 * C152369 +
             (C73967 + C73966) * C152368) *
                C152155 * C152374 -
            ((C86300 + C86301) * C134328 + C87237 * C152369 +
             C84612 * C152368) *
                C152155 * C152329) *
               C152030) *
              C3181 +
          ((((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
             C137769 * C134328) *
                C152155 * C152359 -
            (C134767 * C134328 + (C82925 + C82924) * C152369 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152368) *
                C152155 * C152374 -
            ((C137782 + C137783) * C134328 + (C86976 + C86977) * C152369 +
             C134767 * C152368) *
                C152155 * C152329) *
               C3041 +
           (((C73972 + C73973) * C152368 + C83866 * C152369 +
             C86690 * C134328) *
                C152155 * C152374 -
            ((C86704 + C86705) * C134328 + C86699 * C152369 +
             C83867 * C152368) *
                C152155 * C152359 +
            (C86690 * C152368 + (C86705 + C86704) * C152369 +
             (C150639 * C9393 - C73636 * C9384 - C150639 * C9394 +
              C152263 * C9402 + C150632 * C18125 - C73638 * C18124 -
              C150632 * C18126 + C151913 * C18127) *
                 C134328) *
                C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[328] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152368 +
             (C82920 + C82921) * C152369 + C134766 * C134328) *
                C152155 * C152285 -
            (C137269 * C134328 + (C82922 + C82923) * C152369 +
             (C82921 + C82920) * C152368) *
                C152155 * C152072) *
               C3041 +
           ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
                C152072 -
            (C84612 * C134328 + C83865 * C152369 +
             (C73967 + C73966) * C152368) *
                C152155 * C152285) *
               C152030) *
              C151944 +
          ((((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
             C137769 * C134328) *
                C152155 * C152072 -
            (C134767 * C134328 + (C82925 + C82924) * C152369 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152368) *
                C152155 * C152285) *
               C3041 +
           (((C73972 + C73973) * C152368 + C83866 * C152369 +
             C86690 * C134328) *
                C152155 * C152285 -
            ((C86704 + C86705) * C134328 + C86699 * C152369 +
             C83867 * C152368) *
                C152155 * C152072) *
               C152030) *
              C151953 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152368 +
             (C82928 + C82929) * C152369 + C134768 * C134328) *
                C152155 * C152285 -
            ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
             (C82929 + C82928) * C152368) *
                C152155 * C152072) *
               C3041 +
           ((C83868 * C152368 + (C82931 + C82930) * C152369 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C134328) *
                C152155 * C152072 -
            ((C82930 + C82931) * C134328 + C83869 * C152369 +
             (C73979 + C73978) * C152368) *
                C152155 * C152285) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[329] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C3041 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C152030) *
              C152379 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C152030 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C3041) *
              C152372 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C151985 * C3041 -
           ((C82930 + C82931) * C134328 + C83869 * C152369 +
            (C73979 + C73978) * C152368) *
               C152155 * C151985 * C152030) *
              C152355 +
          (((C74426 + C74427) * C152368 + (C83204 + C83205) * C152369 +
            (C150639 * C1495 - C73636 * C1483 - C150639 * C1496 +
             C152263 * C1519 + C150632 * C2624 - C73638 * C2623 -
             C150632 * C2625 + C151913 * C2626) *
                C134328) *
               C152155 * C151985 * C152030 -
           ((C135184 + C135183) * C134328 + (C83477 + C83476) * C152369 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152368) *
               C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C152380 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C152376 +
           (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C151985 * C152362 -
           ((C75644 + C75645) * C134328 + C85519 * C152369 + C75338 * C152368) *
               C152155 * C151985 * C152336) *
              C3181 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C152376 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C152380 -
           ((C77246 + C77247) * C134328 + C85260 * C152369 + C73985 * C152368) *
               C152155 * C151985 * C152362 +
           (C75842 * C152368 + (C76163 + C76162) * C152369 +
            (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
             C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
             C150632 * C9697 + C151913 * C9698) *
                C134328) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[330] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                       C152263 * C166 + C150632 * C152 - C73638 * C143 -
                       C150632 * C153 + C151913 * C167) *
                          C152368 +
                      (C82920 + C82921) * C152369 + C134766 * C134328) *
                         C152155 * C4047 -
                     (C137269 * C134328 + (C82922 + C82923) * C152369 +
                      (C82921 + C82920) * C152368) *
                         C152155 * C152072) *
                        C152026 +
                    ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) *
                         C152155 * C152072 -
                     (C84612 * C134328 + C83865 * C152369 +
                      (C73967 + C73966) * C152368) *
                         C152155 * C4047) *
                        C152033 +
                    ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) *
                         C152155 * C4047 -
                     ((C77662 + C77663) * C134328 + C84615 * C152369 +
                      C75588 * C152368) *
                         C152155 * C152072) *
                        C3525) *
                       C152270 +
                   ((((C82924 + C82925) * C152368 +
                      (C82926 + C82927) * C152369 + C137769 * C134328) *
                         C152155 * C152072 -
                     (C134767 * C134328 + (C82925 + C82924) * C152369 +
                      (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                       C151913 * C168 + C150639 * C152 - C73636 * C143 -
                       C150639 * C153 + C152263 * C167) *
                          C152368) *
                         C152155 * C4047) *
                        C152026 +
                    (((C73972 + C73973) * C152368 + C83866 * C152369 +
                      C86690 * C134328) *
                         C152155 * C4047 -
                     ((C86704 + C86705) * C134328 + C86699 * C152369 +
                      C83867 * C152368) *
                         C152155 * C152072) *
                        C152033 +
                    ((C76148 * C152368 + (C77247 + C77246) * C152369 +
                      (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
                       C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
                       C150632 * C9923 + C151913 * C9924) *
                          C134328) *
                         C152155 * C152072 -
                     ((C77246 + C77247) * C134328 + C85260 * C152369 +
                      C73985 * C152368) *
                         C152155 * C4047) *
                        C3525) *
                       C151950)) /
                 (p * q * std::sqrt(p + q));
    d2ee[331] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C152068 -
           (C137269 * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152075 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            C137270 * C134328) *
               C152155 * C4719) *
              C152026 +
          ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
               C152075 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C152068 -
           ((C86300 + C86301) * C134328 + C87237 * C152369 + C84612 * C152368) *
               C152155 * C4719) *
              C152033 +
          ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C152068 -
           ((C77662 + C77663) * C134328 + C84615 * C152369 + C75588 * C152368) *
               C152155 * C152075 +
           (C75646 * C152368 + (C77663 + C77662) * C152369 +
            (C150639 * C9395 - C73636 * C9385 - C150639 * C9396 +
             C152263 * C9403 + C150632 * C9397 - C73638 * C9386 -
             C150632 * C9398 + C151913 * C9404) *
                C134328) *
               C152155 * C4719) *
              C3525) *
         C151939) /
        (p * q * std::sqrt(p + q));
    d2ee[332] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C4047 -
           (C137269 * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152072) *
              C152380 +
          ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
               C152072 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C4047) *
              C152376 +
          ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C4047 -
           ((C77662 + C77663) * C134328 + C84615 * C152369 + C75588 * C152368) *
               C152155 * C152072) *
              C152362 +
          ((C76358 * C152368 + (C75645 + C75644) * C152369 +
            (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
             C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
             C150632 * C10124 + C151913 * C10126) *
                C134328) *
               C152155 * C152072 -
           ((C75644 + C75645) * C134328 + C85519 * C152369 + C75338 * C152368) *
               C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152368 +
             (C82920 + C82921) * C152369 + C134766 * C134328) *
                C152155 * C4047 -
            (C137269 * C134328 + (C82922 + C82923) * C152369 +
             (C82921 + C82920) * C152368) *
                C152155 * C152072) *
               C3041 +
           ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
                C152072 -
            (C84612 * C134328 + C83865 * C152369 +
             (C73967 + C73966) * C152368) *
                C152155 * C4047) *
               C152030) *
              C152370 +
          ((((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
             C137769 * C134328) *
                C152155 * C152072 -
            (C134767 * C134328 + (C82925 + C82924) * C152369 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152368) *
                C152155 * C4047) *
               C3041 +
           (((C73972 + C73973) * C152368 + C83866 * C152369 +
             C86690 * C134328) *
                C152155 * C4047 -
            ((C86704 + C86705) * C134328 + C86699 * C152369 +
             C83867 * C152368) *
                C152155 * C152072) *
               C152030) *
              C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152368 +
             (C82928 + C82929) * C152369 + C134768 * C134328) *
                C152155 * C4047 -
            ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
             (C82929 + C82928) * C152368) *
                C152155 * C152072) *
               C3041 +
           ((C83868 * C152368 + (C82931 + C82930) * C152369 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C134328) *
                C152155 * C152072 -
            ((C82930 + C82931) * C134328 + C83869 * C152369 +
             (C73979 + C73978) * C152368) *
                C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C152381 -
           (C137269 * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152378 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            C137270 * C134328) *
               C152155 * C152365 -
           ((C137283 + C137284) * C134328 + (C86302 + C86303) * C152369 +
            C137269 * C152368) *
               C152155 * C152342) *
              C3041 +
          ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
               C152378 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C152381 -
           ((C86300 + C86301) * C134328 + C87237 * C152369 + C84612 * C152368) *
               C152155 * C152365 +
           (C87236 * C152368 + (C86301 + C86300) * C152369 +
            (C150639 * C18552 - C73636 * C18550 - C150639 * C18553 +
             C152263 * C18556 + C150632 * C18554 - C73638 * C18551 -
             C150632 * C18555 + C151913 * C18557) *
                C134328) *
               C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[333] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                       C152263 * C166 + C150632 * C152 - C73638 * C143 -
                       C150632 * C153 + C151913 * C167) *
                          C152368 +
                      (C82920 + C82921) * C152369 + C134766 * C134328) *
                         C152155 * C152068 -
                     (C137269 * C134328 + (C82922 + C82923) * C152369 +
                      (C82921 + C82920) * C152368) *
                         C152155 * C152075 +
                     (C134766 * C152368 + (C86298 + C86299) * C152369 +
                      C137270 * C134328) *
                         C152155 * C4719) *
                        C3041 +
                    ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) *
                         C152155 * C152075 -
                     (C84612 * C134328 + C83865 * C152369 +
                      (C73967 + C73966) * C152368) *
                         C152155 * C152068 -
                     ((C86300 + C86301) * C134328 + C87237 * C152369 +
                      C84612 * C152368) *
                         C152155 * C4719) *
                        C152030) *
                       C152270 +
                   ((((C82924 + C82925) * C152368 +
                      (C82926 + C82927) * C152369 + C137769 * C134328) *
                         C152155 * C152075 -
                     (C134767 * C134328 + (C82925 + C82924) * C152369 +
                      (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                       C151913 * C168 + C150639 * C152 - C73636 * C143 -
                       C150639 * C153 + C152263 * C167) *
                          C152368) *
                         C152155 * C152068 -
                     ((C137782 + C137783) * C134328 +
                      (C86976 + C86977) * C152369 + C134767 * C152368) *
                         C152155 * C4719) *
                        C3041 +
                    (((C73972 + C73973) * C152368 + C83866 * C152369 +
                      C86690 * C134328) *
                         C152155 * C152068 -
                     ((C86704 + C86705) * C134328 + C86699 * C152369 +
                      C83867 * C152368) *
                         C152155 * C152075 +
                     (C86690 * C152368 + (C86705 + C86704) * C152369 +
                      (C150639 * C9393 - C73636 * C9384 - C150639 * C9394 +
                       C152263 * C9402 + C150632 * C18125 - C73638 * C18124 -
                       C150632 * C18126 + C151913 * C18127) *
                          C134328) *
                         C152155 * C4719) *
                        C152030) *
                       C151950)) /
                 (p * q * std::sqrt(p + q));
    d2ee[334] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152368 +
             (C82920 + C82921) * C152369 + C134766 * C134328) *
                C152155 * C4047 -
            (C137269 * C134328 + (C82922 + C82923) * C152369 +
             (C82921 + C82920) * C152368) *
                C152155 * C152072) *
               C3041 +
           ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
                C152072 -
            (C84612 * C134328 + C83865 * C152369 +
             (C73967 + C73966) * C152368) *
                C152155 * C4047) *
               C152030) *
              C152370 +
          ((((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
             C137769 * C134328) *
                C152155 * C152072 -
            (C134767 * C134328 + (C82925 + C82924) * C152369 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152368) *
                C152155 * C4047) *
               C3041 +
           (((C73972 + C73973) * C152368 + C83866 * C152369 +
             C86690 * C134328) *
                C152155 * C4047 -
            ((C86704 + C86705) * C134328 + C86699 * C152369 +
             C83867 * C152368) *
                C152155 * C152072) *
               C152030) *
              C152353 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152368 +
             (C82928 + C82929) * C152369 + C134768 * C134328) *
                C152155 * C4047 -
            ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
             (C82929 + C82928) * C152368) *
                C152155 * C152072) *
               C3041 +
           ((C83868 * C152368 + (C82931 + C82930) * C152369 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C134328) *
                C152155 * C152072 -
            ((C82930 + C82931) * C134328 + C83869 * C152369 +
             (C73979 + C73978) * C152368) *
                C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C4047 -
           (C137269 * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152072) *
              C152380 +
          ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
               C152072 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C4047) *
              C152376 +
          ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C4047 -
           ((C77662 + C77663) * C134328 + C84615 * C152369 + C75588 * C152368) *
               C152155 * C152072) *
              C152362 +
          ((C76358 * C152368 + (C75645 + C75644) * C152369 +
            (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
             C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
             C150632 * C10124 + C151913 * C10126) *
                C134328) *
               C152155 * C152072 -
           ((C75644 + C75645) * C134328 + C85519 * C152369 + C75338 * C152368) *
               C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C1661 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C1662 +
           (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C151985 * C1663 -
           ((C75644 + C75645) * C134328 + C85519 * C152369 + C75338 * C152368) *
               C152155 * C151985 * C152336) *
              C152270 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C1662 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C1661 -
           ((C77246 + C77247) * C134328 + C85260 * C152369 + C73985 * C152368) *
               C152155 * C151985 * C1663 +
           (C75842 * C152368 + (C76163 + C76162) * C152369 +
            (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
             C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
             C150632 * C9697 + C151913 * C9698) *
                C134328) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C152284 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C152030) *
              C703 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C152030 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C152284) *
              C704 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C151985 * C152284 -
           ((C82930 + C82931) * C134328 + C83869 * C152369 +
            (C73979 + C73978) * C152368) *
               C152155 * C151985 * C152030) *
              C705 +
          (((C74426 + C74427) * C152368 + (C83204 + C83205) * C152369 +
            (C150639 * C1495 - C73636 * C1483 - C150639 * C1496 +
             C152263 * C1519 + C150632 * C2624 - C73638 * C2623 -
             C150632 * C2625 + C151913 * C2626) *
                C134328) *
               C152155 * C151985 * C152030 -
           ((C150632 * C553 - C73638 * C532 - C150632 * C554 + C151913 * C568 +
             C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566) *
                C134328 +
            (C83477 + C83476) * C152369 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152368) *
               C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152368 +
             (C82920 + C82921) * C152369 + C134766 * C134328) *
                C152155 * C2161 -
            (C137269 * C134328 + (C82922 + C82923) * C152369 +
             (C82921 + C82920) * C152368) *
                C152155 * C2162 +
            (C134766 * C152368 + (C86298 + C86299) * C152369 +
             C137270 * C134328) *
                C152155 * C152329) *
               C152284 +
           ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
                C2162 -
            (C84612 * C134328 + C83865 * C152369 +
             (C73967 + C73966) * C152368) *
                C152155 * C2161 -
            ((C86300 + C86301) * C134328 + C87237 * C152369 +
             C84612 * C152368) *
                C152155 * C152329) *
               C152030) *
              C152270 +
          ((((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
             (C86977 + C86976) * C134328) *
                C152155 * C2162 -
            (C134767 * C134328 + (C82925 + C82924) * C152369 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152368) *
                C152155 * C2161 -
            ((C150632 * C2417 - C73638 * C2403 - C150632 * C2418 +
              C151913 * C2427 + C150639 * C2415 - C73636 * C2402 -
              C150639 * C2416 + C152263 * C2426) *
                 C134328 +
             (C86976 + C86977) * C152369 + C134767 * C152368) *
                C152155 * C152329) *
               C152284 +
           (((C73972 + C73973) * C152368 + C83866 * C152369 +
             C86690 * C134328) *
                C152155 * C2161 -
            ((C86704 + C86705) * C134328 + C86699 * C152369 +
             C83867 * C152368) *
                C152155 * C2162 +
            (C86690 * C152368 + (C86705 + C86704) * C152369 +
             (C150639 * C9393 - C73636 * C9384 - C150639 * C9394 +
              C152263 * C9402 + C150632 * C18125 - C73638 * C18124 -
              C150632 * C18126 + C151913 * C18127) *
                 C134328) *
                C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C152285 -
           ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152072) *
              C1661 +
          ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
               C152072 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C152285) *
              C1662 +
          ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C152285 -
           ((C77662 + C77663) * C134328 + C84615 * C152369 + C75588 * C152368) *
               C152155 * C152072) *
              C1663 +
          ((C76358 * C152368 + (C75645 + C75644) * C152369 +
            (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
             C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
             C150632 * C10124 + C151913 * C10126) *
                C134328) *
               C152155 * C152072 -
           ((C75644 + C75645) * C134328 + C85519 * C152369 + C75338 * C152368) *
               C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152368 +
             (C82920 + C82921) * C152369 + C134766 * C134328) *
                C152155 * C152285 -
            ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
             (C82921 + C82920) * C152368) *
                C152155 * C152072) *
               C152284 +
           ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
                C152072 -
            (C84612 * C134328 + C83865 * C152369 +
             (C73967 + C73966) * C152368) *
                C152155 * C152285) *
               C152030) *
              C323 +
          ((((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
             (C86977 + C86976) * C134328) *
                C152155 * C152072 -
            (C134767 * C134328 + (C82925 + C82924) * C152369 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152368) *
                C152155 * C152285) *
               C152284 +
           (((C73972 + C73973) * C152368 + C83866 * C152369 +
             C86690 * C134328) *
                C152155 * C152285 -
            ((C86704 + C86705) * C134328 + C86699 * C152369 +
             C83867 * C152368) *
                C152155 * C152072) *
               C152030) *
              C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152368 +
             (C82928 + C82929) * C152369 + C134768 * C134328) *
                C152155 * C152285 -
            ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
             (C82929 + C82928) * C152368) *
                C152155 * C152072) *
               C152284 +
           ((C83868 * C152368 + (C82931 + C82930) * C152369 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C134328) *
                C152155 * C152072 -
            ((C82930 + C82931) * C134328 + C83869 * C152369 +
             (C73979 + C73978) * C152368) *
                C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C2757 -
           (C137269 * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C2758 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            C137270 * C134328) *
               C152155 * C2759 -
           ((C137283 + C137284) * C134328 + (C86302 + C86303) * C152369 +
            C137269 * C152368) *
               C152155 * C152342) *
              C152284 +
          ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
               C2758 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C2757 -
           ((C86300 + C86301) * C134328 + C87237 * C152369 + C84612 * C152368) *
               C152155 * C2759 +
           (C87236 * C152368 + (C86301 + C86300) * C152369 +
            (C150639 * C18552 - C73636 * C18550 - C150639 * C18553 +
             C152263 * C18556 + C150632 * C18554 - C73638 * C18551 -
             C150632 * C18555 + C151913 * C18557) *
                C134328) *
               C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                C152263 * C166 + C150632 * C152 - C73638 * C143 -
                C150632 * C153 + C151913 * C167) *
                   C152368 +
               (C82920 + C82921) * C152369 + (C82923 + C82922) * C134328) *
                  C152155 * C151985 * C151967 * C129 -
              ((C82927 + C82926) * C134328 + (C82925 + C82924) * C152369 +
               (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                C151913 * C168 + C150639 * C152 - C73636 * C143 -
                C150639 * C153 + C152263 * C167) *
                   C152368) *
                  C152155 * C151985 * C151967 * C130 +
              ((C150639 * C154 - C73636 * C144 - C150639 * C155 +
                C152263 * C168 + C150632 * C156 - C73638 * C145 -
                C150632 * C157 + C151913 * C169) *
                   C152368 +
               (C82928 + C82929) * C152369 + (C82933 + C82932) * C134328) *
                  C152155 * C151985 * C151967 * C131 -
              ((C150632 * C553 - C73638 * C532 - C150632 * C554 +
                C151913 * C568 + C150639 * C549 - C73636 * C530 -
                C150639 * C550 + C152263 * C566) *
                   C134328 +
               (C83477 + C83476) * C152369 +
               (C150632 * C158 - C73638 * C146 - C150632 * C159 +
                C151913 * C170 + C150639 * C156 - C73636 * C145 -
                C150639 * C157 + C152263 * C169) *
                   C152368) *
                  C152155 * C151985 * C151967 * C132 +
              ((C150639 * C158 - C73636 * C146 - C150639 * C159 +
                C152263 * C170 + C150632 * C160 - C73638 * C147 -
                C150632 * C161 + C151913 * C171) *
                   C152368 +
               (C150639 * C551 - C73636 * C531 - C150639 * C552 +
                C152263 * C567 + C150632 * C555 - C73638 * C533 -
                C150632 * C556 + C151913 * C569) *
                   C152369 +
               (C150639 * C553 - C73636 * C532 - C150639 * C554 +
                C152263 * C568 + C150632 * C557 - C73638 * C534 -
                C150632 * C558 + C151913 * C570) *
                   C134328) *
                  C152155 * C151985 * C151967 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                 C152263 * C166 + C150632 * C152 - C73638 * C143 -
                 C150632 * C153 + C151913 * C167) *
                    C152368 +
                (C82920 + C82921) * C152369 + (C82923 + C82922) * C134328) *
                   C152155 * C151985 * C152373 -
               (C84612 * C134328 + C83865 * C152369 +
                (C73967 + C73966) * C152368) *
                   C152155 * C151985 * C152357 +
               (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) *
                   C152155 * C151985 * C152326) *
                  C323 +
              (((C73972 + C73973) * C152368 + C83866 * C152369 +
                C86690 * C134328) *
                   C152155 * C151985 * C152357 -
               ((C82927 + C82926) * C134328 + (C82925 + C82924) * C152369 +
                (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                 C151913 * C168 + C150639 * C152 - C73636 * C143 -
                 C150639 * C153 + C152263 * C167) *
                    C152368) *
                   C152155 * C151985 * C152373 -
               ((C77246 + C77247) * C134328 + C85260 * C152369 +
                C73985 * C152368) *
                   C152155 * C151985 * C152326) *
                  C324 +
              (((C150639 * C154 - C73636 * C144 - C150639 * C155 +
                 C152263 * C168 + C150632 * C156 - C73638 * C145 -
                 C150632 * C157 + C151913 * C169) *
                    C152368 +
                (C82928 + C82929) * C152369 + (C82933 + C82932) * C134328) *
                   C152155 * C151985 * C152373 -
               ((C82930 + C82931) * C134328 + C83869 * C152369 +
                (C73979 + C73978) * C152368) *
                   C152155 * C151985 * C152357 +
               (C73986 * C152368 + (C74995 + C74994) * C152369 +
                (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
                 C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
                 C150632 * C1518 + C151913 * C1530) *
                    C134328) *
                   C152155 * C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C152374 -
           ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152359 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            (C86303 + C86302) * C134328) *
               C152155 * C152329) *
              C151967 * C323 +
          (((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
            (C86977 + C86976) * C134328) *
               C152155 * C152359 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C152374 -
           ((C150632 * C2417 - C73638 * C2403 - C150632 * C2418 +
             C151913 * C2427 + C150639 * C2415 - C73636 * C2402 -
             C150639 * C2416 + C152263 * C2426) *
                C134328 +
            (C86976 + C86977) * C152369 + C134767 * C152368) *
               C152155 * C152329) *
              C151967 * C324 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C152374 -
           ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
            (C82929 + C82928) * C152368) *
               C152155 * C152359 +
           (C134768 * C152368 + (C134782 + C134781) * C152369 +
            (C150639 * C2417 - C73636 * C2403 - C150639 * C2418 +
             C152263 * C2427 + C150632 * C2419 - C73638 * C2404 -
             C150632 * C2420 + C151913 * C2428) *
                C134328) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C1211 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C1212 +
           (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C151985 * C152326) *
              C152370 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C1212 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C1211 -
           ((C77246 + C77247) * C134328 + C85260 * C152369 + C73985 * C152368) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C151985 * C1211 -
           ((C82930 + C82931) * C134328 + C83869 * C152369 +
            (C73979 + C73978) * C152368) *
               C152155 * C151985 * C1212 +
           (C73986 * C152368 + (C74995 + C74994) * C152369 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C134328) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152368 +
           (C82920 + C82921) * C152369 + C134766 * C134328) *
              C152155 * C151985 * C1299 -
          (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
              C152155 * C151985 * C1300 +
          (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
              C151985 * C1301 -
          ((C75644 + C75645) * C134328 + C85519 * C152369 + C75338 * C152368) *
              C152155 * C151985 * C1302 +
          (C75368 * C152368 + (C76373 + C76372) * C152369 +
           (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
            C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
            C150632 * C8014 + C151913 * C8020) *
               C134328) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C152374 -
           ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152359 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            (C86303 + C86302) * C134328) *
               C152155 * C152329) *
              C1211 +
          ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
               C152359 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C152374 -
           ((C86300 + C86301) * C134328 + C87237 * C152369 + C84612 * C152368) *
               C152155 * C152329) *
              C1212 +
          ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C152374 -
           ((C77662 + C77663) * C134328 + C84615 * C152369 + C75588 * C152368) *
               C152155 * C152359 +
           (C75646 * C152368 + (C77663 + C77662) * C152369 +
            (C150639 * C9395 - C73636 * C9385 - C150639 * C9396 +
             C152263 * C9403 + C150632 * C9397 - C73638 * C9386 -
             C150632 * C9398 + C151913 * C9404) *
                C134328) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C2161 -
           ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C2162 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            (C86303 + C86302) * C134328) *
               C152155 * C152329) *
              C151967 * C152370 +
          (((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
            (C86977 + C86976) * C134328) *
               C152155 * C2162 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C2161 -
           ((C150632 * C2417 - C73638 * C2403 - C150632 * C2418 +
             C151913 * C2427 + C150639 * C2415 - C73636 * C2402 -
             C150639 * C2416 + C152263 * C2426) *
                C134328 +
            (C86976 + C86977) * C152369 + C134767 * C152368) *
               C152155 * C152329) *
              C151967 * C152353 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C2161 -
           ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
            (C82929 + C82928) * C152368) *
               C152155 * C2162 +
           (C134768 * C152368 + (C134782 + C134781) * C152369 +
            (C150639 * C2417 - C73636 * C2403 - C150639 * C2418 +
             C152263 * C2427 + C150632 * C2419 - C73638 * C2404 -
             C150632 * C2420 + C151913 * C2428) *
                C134328) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C2161 -
           ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C2162 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            (C86303 + C86302) * C134328) *
               C152155 * C152329) *
              C152373 +
          ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
               C2162 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C2161 -
           ((C86300 + C86301) * C134328 + C87237 * C152369 + C84612 * C152368) *
               C152155 * C152329) *
              C152357 +
          ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C2161 -
           ((C77662 + C77663) * C134328 + C84615 * C152369 + C75588 * C152368) *
               C152155 * C2162 +
           (C75646 * C152368 + (C77663 + C77662) * C152369 +
            (C150639 * C9395 - C73636 * C9385 - C150639 * C9396 +
             C152263 * C9403 + C150632 * C9397 - C73638 * C9386 -
             C150632 * C9398 + C151913 * C9404) *
                C134328) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152368 +
           (C82920 + C82921) * C152369 + C134766 * C134328) *
              C152155 * C2392 -
          (C137269 * C134328 + (C82922 + C82923) * C152369 +
           (C82921 + C82920) * C152368) *
              C152155 * C2393 +
          (C134766 * C152368 + (C86298 + C86299) * C152369 +
           C137270 * C134328) *
              C152155 * C2394 -
          ((C137283 + C137284) * C134328 + (C86302 + C86303) * C152369 +
           C137269 * C152368) *
              C152155 * C2395 +
          (C137270 * C152368 + (C137284 + C137283) * C152369 +
           (C150639 * C17796 - C73636 * C17790 - C150639 * C17797 +
            C152263 * C17802 + C150632 * C17798 - C73638 * C17791 -
            C150632 * C17799 + C151913 * C17803) *
               C134328) *
              C152155 * C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[338] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152368 +
             (C82920 + C82921) * C152369 + C134766 * C134328) *
                C152155 * C152285 -
            ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
             (C82921 + C82920) * C152368) *
                C152155 * C152072) *
               C1211 +
           ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
                C152072 -
            (C84612 * C134328 + C83865 * C152369 +
             (C73967 + C73966) * C152368) *
                C152155 * C152285) *
               C1212 +
           ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
                C152285 -
            ((C77662 + C77663) * C134328 + C84615 * C152369 +
             C75588 * C152368) *
                C152155 * C152072) *
               C152326) *
              C152270 +
          ((((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
             (C86977 + C86976) * C134328) *
                C152155 * C152072 -
            (C134767 * C134328 + (C82925 + C82924) * C152369 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152368) *
                C152155 * C152285) *
               C1211 +
           (((C73972 + C73973) * C152368 + C83866 * C152369 +
             C86690 * C134328) *
                C152155 * C152285 -
            ((C86704 + C86705) * C134328 + C86699 * C152369 +
             C83867 * C152368) *
                C152155 * C152072) *
               C1212 +
           ((C76148 * C152368 + (C77247 + C77246) * C152369 +
             (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
              C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
              C150632 * C9923 + C151913 * C9924) *
                 C134328) *
                C152155 * C152072 -
            ((C77246 + C77247) * C134328 + C85260 * C152369 +
             C73985 * C152368) *
                C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C152285 -
           ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152072) *
              C151967 * C703 +
          (((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
            (C86977 + C86976) * C134328) *
               C152155 * C152072 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C152285) *
              C151967 * C704 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C152285 -
           ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
            (C82929 + C82928) * C152368) *
               C152155 * C152072) *
              C151967 * C705 +
          (((C83476 + C83477) * C152368 + (C135183 + C135184) * C152369 +
            (C150639 * C2405 - C73636 * C2397 - C150639 * C2406 +
             C152263 * C2421 + C150632 * C2762 - C73638 * C2761 -
             C150632 * C2763 + C151913 * C2764) *
                C134328) *
               C152155 * C152072 -
           ((C135184 + C135183) * C134328 + (C83477 + C83476) * C152369 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152368) *
               C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C2757 -
           (C137269 * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C2758 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            C137270 * C134328) *
               C152155 * C2759 -
           ((C137283 + C137284) * C134328 + (C86302 + C86303) * C152369 +
            C137269 * C152368) *
               C152155 * C152342) *
              C151967 * C152270 +
          (((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
            C137769 * C134328) *
               C152155 * C2758 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C2757 -
           ((C137782 + C137783) * C134328 + (C86976 + C86977) * C152369 +
            C134767 * C152368) *
               C152155 * C2759 +
           (C137769 * C152368 + (C137783 + C137782) * C152369 +
            (C150639 * C17792 - C73636 * C17788 - C150639 * C17793 +
             C152263 * C17800 + C150632 * C18338 - C73638 * C18337 -
             C150632 * C18339 + C151913 * C18340) *
                C134328) *
               C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + (C82923 + C82922) * C134328) *
               C152155 * C151985 * C152373 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C152357 +
           (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C151985 * C152326) *
              C323 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C152357 -
           ((C82927 + C82926) * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C152373 -
           ((C77246 + C77247) * C134328 + C85260 * C152369 + C73985 * C152368) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + (C82933 + C82932) * C134328) *
               C152155 * C151985 * C152373 -
           ((C82930 + C82931) * C134328 + C83869 * C152369 +
            (C73979 + C73978) * C152368) *
               C152155 * C151985 * C152357 +
           (C73986 * C152368 + (C74995 + C74994) * C152369 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C134328) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152368 +
           (C82920 + C82921) * C152369 + (C82923 + C82922) * C134328) *
              C152155 * C151985 * C151967 * C129 -
          ((C82927 + C82926) * C134328 + (C82925 + C82924) * C152369 +
           (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
            C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
               C152368) *
              C152155 * C151985 * C151967 * C130 +
          ((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
            C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
               C152368 +
           (C82928 + C82929) * C152369 + (C82933 + C82932) * C134328) *
              C152155 * C151985 * C151967 * C131 -
          ((C150632 * C553 - C73638 * C532 - C150632 * C554 + C151913 * C568 +
            C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566) *
               C134328 +
           (C83477 + C83476) * C152369 +
           (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
            C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
               C152368) *
              C152155 * C151985 * C151967 * C132 +
          ((C150639 * C158 - C73636 * C146 - C150639 * C159 + C152263 * C170 +
            C150632 * C160 - C73638 * C147 - C150632 * C161 + C151913 * C171) *
               C152368 +
           (C150639 * C551 - C73636 * C531 - C150639 * C552 + C152263 * C567 +
            C150632 * C555 - C73638 * C533 - C150632 * C556 + C151913 * C569) *
               C152369 +
           (C150639 * C553 - C73636 * C532 - C150639 * C554 + C152263 * C568 +
            C150632 * C557 - C73638 * C534 - C150632 * C558 + C151913 * C570) *
               C134328) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C1211 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C1212 +
           (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C151985 * C152326) *
              C152370 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C1212 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C1211 -
           ((C77246 + C77247) * C134328 + C85260 * C152369 + C73985 * C152368) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C151985 * C1211 -
           ((C82930 + C82931) * C134328 + C83869 * C152369 +
            (C73979 + C73978) * C152368) *
               C152155 * C151985 * C1212 +
           (C73986 * C152368 + (C74995 + C74994) * C152369 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C134328) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152368 +
           (C82920 + C82921) * C152369 + C134766 * C134328) *
              C152155 * C151985 * C1299 -
          (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
              C152155 * C151985 * C1300 +
          (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
              C151985 * C1301 -
          ((C75644 + C75645) * C134328 + C85519 * C152369 + C75338 * C152368) *
              C152155 * C151985 * C1302 +
          (C75368 * C152368 + (C76373 + C76372) * C152369 +
           (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
            C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
            C150632 * C8014 + C151913 * C8020) *
               C134328) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C2161 -
           ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C2162 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            (C86303 + C86302) * C134328) *
               C152155 * C152329) *
              C151967 * C152370 +
          (((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
            (C86977 + C86976) * C134328) *
               C152155 * C2162 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C2161 -
           ((C150632 * C2417 - C73638 * C2403 - C150632 * C2418 +
             C151913 * C2427 + C150639 * C2415 - C73636 * C2402 -
             C150639 * C2416 + C152263 * C2426) *
                C134328 +
            (C86976 + C86977) * C152369 + C134767 * C152368) *
               C152155 * C152329) *
              C151967 * C152353 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C2161 -
           ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
            (C82929 + C82928) * C152368) *
               C152155 * C2162 +
           (C134768 * C152368 + (C134782 + C134781) * C152369 +
            (C150639 * C2417 - C73636 * C2403 - C150639 * C2418 +
             C152263 * C2427 + C150632 * C2419 - C73638 * C2404 -
             C150632 * C2420 + C151913 * C2428) *
                C134328) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C2161 -
           ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C2162 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            (C86303 + C86302) * C134328) *
               C152155 * C152329) *
              C152373 +
          ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
               C2162 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C2161 -
           ((C86300 + C86301) * C134328 + C87237 * C152369 + C84612 * C152368) *
               C152155 * C152329) *
              C152357 +
          ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C2161 -
           ((C77662 + C77663) * C134328 + C84615 * C152369 + C75588 * C152368) *
               C152155 * C2162 +
           (C75646 * C152368 + (C77663 + C77662) * C152369 +
            (C150639 * C9395 - C73636 * C9385 - C150639 * C9396 +
             C152263 * C9403 + C150632 * C9397 - C73638 * C9386 -
             C150632 * C9398 + C151913 * C9404) *
                C134328) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[340] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152368 +
             (C82920 + C82921) * C152369 + C134766 * C134328) *
                C152155 * C4047 -
            (C137269 * C134328 + (C82922 + C82923) * C152369 +
             (C82921 + C82920) * C152368) *
                C152155 * C152072) *
               C152284 +
           ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
                C152072 -
            (C84612 * C134328 + C83865 * C152369 +
             (C73967 + C73966) * C152368) *
                C152155 * C4047) *
               C152030) *
              C151944 +
          ((((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
             C137769 * C134328) *
                C152155 * C152072 -
            (C134767 * C134328 + (C82925 + C82924) * C152369 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152368) *
                C152155 * C4047) *
               C152284 +
           (((C73972 + C73973) * C152368 + C83866 * C152369 +
             C86690 * C134328) *
                C152155 * C4047 -
            ((C86704 + C86705) * C134328 + C86699 * C152369 +
             C83867 * C152368) *
                C152155 * C152072) *
               C152030) *
              C151953 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152368 +
             (C82928 + C82929) * C152369 + C134768 * C134328) *
                C152155 * C4047 -
            ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
             (C82929 + C82928) * C152368) *
                C152155 * C152072) *
               C152284 +
           ((C83868 * C152368 + (C82931 + C82930) * C152369 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C134328) *
                C152155 * C152072 -
            ((C82930 + C82931) * C134328 + C83869 * C152369 +
             (C73979 + C73978) * C152368) *
                C152155 * C4047) *
               C152030) *
              C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[341] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C150639 * C150 - C73636 * C142 - C150639 * C151 +
                       C152263 * C166 + C150632 * C152 - C73638 * C143 -
                       C150632 * C153 + C151913 * C167) *
                          C152368 +
                      (C82920 + C82921) * C152369 + C134766 * C134328) *
                         C152155 * C152068 -
                     (C137269 * C134328 + (C82922 + C82923) * C152369 +
                      (C82921 + C82920) * C152368) *
                         C152155 * C152075 +
                     (C134766 * C152368 + (C86298 + C86299) * C152369 +
                      C137270 * C134328) *
                         C152155 * C4719) *
                        C152284 +
                    ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) *
                         C152155 * C152075 -
                     (C84612 * C134328 + C83865 * C152369 +
                      (C73967 + C73966) * C152368) *
                         C152155 * C152068 -
                     ((C86300 + C86301) * C134328 + C87237 * C152369 +
                      C84612 * C152368) *
                         C152155 * C4719) *
                        C152030) *
                       C3181 +
                   ((((C82924 + C82925) * C152368 +
                      (C82926 + C82927) * C152369 + C137769 * C134328) *
                         C152155 * C152075 -
                     (C134767 * C134328 + (C82925 + C82924) * C152369 +
                      (C150632 * C154 - C73638 * C144 - C150632 * C155 +
                       C151913 * C168 + C150639 * C152 - C73636 * C143 -
                       C150639 * C153 + C152263 * C167) *
                          C152368) *
                         C152155 * C152068 -
                     ((C137782 + C137783) * C134328 +
                      (C86976 + C86977) * C152369 + C134767 * C152368) *
                         C152155 * C4719) *
                        C152284 +
                    (((C73972 + C73973) * C152368 + C83866 * C152369 +
                      C86690 * C134328) *
                         C152155 * C152068 -
                     ((C86704 + C86705) * C134328 + C86699 * C152369 +
                      C83867 * C152368) *
                         C152155 * C152075 +
                     (C86690 * C152368 + (C86705 + C86704) * C152369 +
                      (C150639 * C9393 - C73636 * C9384 - C150639 * C9394 +
                       C152263 * C9402 + C150632 * C18125 - C73638 * C18124 -
                       C150632 * C18126 + C151913 * C18127) *
                          C134328) *
                         C152155 * C4719) *
                        C152030) *
                       C151950)) /
                 (p * q * std::sqrt(p + q));
    d2ee[342] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152368 +
             (C82920 + C82921) * C152369 + C134766 * C134328) *
                C152155 * C4047 -
            (C137269 * C134328 + (C82922 + C82923) * C152369 +
             (C82921 + C82920) * C152368) *
                C152155 * C152072) *
               C152373 +
           ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
                C152072 -
            (C84612 * C134328 + C83865 * C152369 +
             (C73967 + C73966) * C152368) *
                C152155 * C4047) *
               C152357 +
           ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
                C4047 -
            ((C77662 + C77663) * C134328 + C84615 * C152369 +
             C75588 * C152368) *
                C152155 * C152072) *
               C152326) *
              C3181 +
          ((((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
             C137769 * C134328) *
                C152155 * C152072 -
            (C134767 * C134328 + (C82925 + C82924) * C152369 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152368) *
                C152155 * C4047) *
               C152373 +
           (((C73972 + C73973) * C152368 + C83866 * C152369 +
             C86690 * C134328) *
                C152155 * C4047 -
            ((C86704 + C86705) * C134328 + C86699 * C152369 +
             C83867 * C152368) *
                C152155 * C152072) *
               C152357 +
           ((C76148 * C152368 + (C77247 + C77246) * C152369 +
             (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
              C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
              C150632 * C9923 + C151913 * C9924) *
                 C134328) *
                C152155 * C152072 -
            ((C77246 + C77247) * C134328 + C85260 * C152369 +
             C73985 * C152368) *
                C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C4047 -
           (C137269 * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152072) *
              C151967 * C152379 +
          (((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
            C137769 * C134328) *
               C152155 * C152072 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C4047) *
              C151967 * C152372 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C4047 -
           ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
            (C82929 + C82928) * C152368) *
               C152155 * C152072) *
              C151967 * C152355 +
          (((C83476 + C83477) * C152368 + (C135183 + C135184) * C152369 +
            (C150639 * C2405 - C73636 * C2397 - C150639 * C2406 +
             C152263 * C2421 + C150632 * C2762 - C73638 * C2761 -
             C150632 * C2763 + C151913 * C2764) *
                C134328) *
               C152155 * C152072 -
           ((C135184 + C135183) * C134328 + (C83477 + C83476) * C152369 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152368) *
               C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C152381 -
           (C137269 * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152378 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            C137270 * C134328) *
               C152155 * C152365 -
           ((C137283 + C137284) * C134328 + (C86302 + C86303) * C152369 +
            C137269 * C152368) *
               C152155 * C152342) *
              C151967 * C3181 +
          (((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
            C137769 * C134328) *
               C152155 * C152378 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C152381 -
           ((C137782 + C137783) * C134328 + (C86976 + C86977) * C152369 +
            C134767 * C152368) *
               C152155 * C152365 +
           (C137769 * C152368 + (C137783 + C137782) * C152369 +
            (C150639 * C17792 - C73636 * C17788 - C150639 * C17793 +
             C152263 * C17800 + C150632 * C18338 - C73638 * C18337 -
             C150632 * C18339 + C151913 * C18340) *
                C134328) *
               C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[343] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C152068 -
           (C137269 * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152075 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            C137270 * C134328) *
               C152155 * C4719) *
              C151967 * C151944 +
          (((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
            C137769 * C134328) *
               C152155 * C152075 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C152068 -
           ((C137782 + C137783) * C134328 + (C86976 + C86977) * C152369 +
            C134767 * C152368) *
               C152155 * C4719) *
              C151967 * C151953 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C152068 -
           ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
            (C82929 + C82928) * C152368) *
               C152155 * C152075 +
           (C134768 * C152368 + (C134782 + C134781) * C152369 +
            (C150639 * C2417 - C73636 * C2403 - C150639 * C2418 +
             C152263 * C2427 + C150632 * C2419 - C73638 * C2404 -
             C150632 * C2420 + C151913 * C2428) *
                C134328) *
               C152155 * C4719) *
              C151967 * C3528)) /
        (p * q * std::sqrt(p + q));
    d2ee[344] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C4047 -
           (C137269 * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152072) *
              C151967 * C152379 +
          (((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
            C137769 * C134328) *
               C152155 * C152072 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C4047) *
              C151967 * C152372 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C4047 -
           ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
            (C82929 + C82928) * C152368) *
               C152155 * C152072) *
              C151967 * C152355 +
          (((C83476 + C83477) * C152368 + (C135183 + C135184) * C152369 +
            (C150639 * C2405 - C73636 * C2397 - C150639 * C2406 +
             C152263 * C2421 + C150632 * C2762 - C73638 * C2761 -
             C150632 * C2763 + C151913 * C2764) *
                C134328) *
               C152155 * C152072 -
           ((C135184 + C135183) * C134328 + (C83477 + C83476) * C152369 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152368) *
               C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152368 +
             (C82920 + C82921) * C152369 + C134766 * C134328) *
                C152155 * C4047 -
            (C137269 * C134328 + (C82922 + C82923) * C152369 +
             (C82921 + C82920) * C152368) *
                C152155 * C152072) *
               C152373 +
           ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
                C152072 -
            (C84612 * C134328 + C83865 * C152369 +
             (C73967 + C73966) * C152368) *
                C152155 * C4047) *
               C152357 +
           ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
                C4047 -
            ((C77662 + C77663) * C134328 + C84615 * C152369 +
             C75588 * C152368) *
                C152155 * C152072) *
               C152326) *
              C3181 +
          ((((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
             C137769 * C134328) *
                C152155 * C152072 -
            (C134767 * C134328 + (C82925 + C82924) * C152369 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152368) *
                C152155 * C4047) *
               C152373 +
           (((C73972 + C73973) * C152368 + C83866 * C152369 +
             C86690 * C134328) *
                C152155 * C4047 -
            ((C86704 + C86705) * C134328 + C86699 * C152369 +
             C83867 * C152368) *
                C152155 * C152072) *
               C152357 +
           ((C76148 * C152368 + (C77247 + C77246) * C152369 +
             (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
              C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
              C150632 * C9923 + C151913 * C9924) *
                 C134328) *
                C152155 * C152072 -
            ((C77246 + C77247) * C134328 + C85260 * C152369 +
             C73985 * C152368) *
                C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[345] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C152284 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C152030) *
              C703 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C152030 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C152284) *
              C704 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C151985 * C152284 -
           ((C82930 + C82931) * C134328 + C83869 * C152369 +
            (C73979 + C73978) * C152368) *
               C152155 * C151985 * C152030) *
              C705 +
          (((C74426 + C74427) * C152368 + (C83204 + C83205) * C152369 +
            (C150639 * C1495 - C73636 * C1483 - C150639 * C1496 +
             C152263 * C1519 + C150632 * C2624 - C73638 * C2623 -
             C150632 * C2625 + C151913 * C2626) *
                C134328) *
               C152155 * C151985 * C152030 -
           ((C150632 * C553 - C73638 * C532 - C150632 * C554 + C151913 * C568 +
             C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566) *
                C134328 +
            (C83477 + C83476) * C152369 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152368) *
               C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C1661 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C1662 +
           (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C151985 * C1663 -
           ((C75644 + C75645) * C134328 + C85519 * C152369 + C75338 * C152368) *
               C152155 * C151985 * C152336) *
              C152270 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C1662 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C1661 -
           ((C77246 + C77247) * C134328 + C85260 * C152369 + C73985 * C152368) *
               C152155 * C151985 * C1663 +
           (C75842 * C152368 + (C76163 + C76162) * C152369 +
            (C150639 * C8003 - C73636 * C7997 - C150639 * C8004 +
             C152263 * C8015 + C150632 * C9696 - C73638 * C9695 -
             C150632 * C9697 + C151913 * C9698) *
                C134328) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[346] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152368 +
             (C82920 + C82921) * C152369 + C134766 * C134328) *
                C152155 * C152285 -
            ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
             (C82921 + C82920) * C152368) *
                C152155 * C152072) *
               C152284 +
           ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
                C152072 -
            (C84612 * C134328 + C83865 * C152369 +
             (C73967 + C73966) * C152368) *
                C152155 * C152285) *
               C152030) *
              C323 +
          ((((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
             (C86977 + C86976) * C134328) *
                C152155 * C152072 -
            (C134767 * C134328 + (C82925 + C82924) * C152369 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152368) *
                C152155 * C152285) *
               C152284 +
           (((C73972 + C73973) * C152368 + C83866 * C152369 +
             C86690 * C134328) *
                C152155 * C152285 -
            ((C86704 + C86705) * C134328 + C86699 * C152369 +
             C83867 * C152368) *
                C152155 * C152072) *
               C152030) *
              C324 +
          ((((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
              C150632 * C156 - C73638 * C145 - C150632 * C157 +
              C151913 * C169) *
                 C152368 +
             (C82928 + C82929) * C152369 + C134768 * C134328) *
                C152155 * C152285 -
            ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
             (C82929 + C82928) * C152368) *
                C152155 * C152072) *
               C152284 +
           ((C83868 * C152368 + (C82931 + C82930) * C152369 +
             (C150639 * C2903 - C73636 * C2897 - C150639 * C2904 +
              C152263 * C2909 + C150632 * C2905 - C73638 * C2898 -
              C150632 * C2906 + C151913 * C2910) *
                 C134328) *
                C152155 * C152072 -
            ((C82930 + C82931) * C134328 + C83869 * C152369 +
             (C73979 + C73978) * C152368) *
                C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C152285 -
           ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152072) *
              C1661 +
          ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
               C152072 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C152285) *
              C1662 +
          ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C152285 -
           ((C77662 + C77663) * C134328 + C84615 * C152369 + C75588 * C152368) *
               C152155 * C152072) *
              C1663 +
          ((C76358 * C152368 + (C75645 + C75644) * C152369 +
            (C150639 * C10121 - C73636 * C10119 - C150639 * C10122 +
             C152263 * C10125 + C150632 * C10123 - C73638 * C10120 -
             C150632 * C10124 + C151913 * C10126) *
                C134328) *
               C152155 * C152072 -
           ((C75644 + C75645) * C134328 + C85519 * C152369 + C75338 * C152368) *
               C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + (C82923 + C82922) * C134328) *
               C152155 * C151985 * C152373 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C152357 +
           (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C151985 * C152326) *
              C323 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C152357 -
           ((C82927 + C82926) * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C152373 -
           ((C77246 + C77247) * C134328 + C85260 * C152369 + C73985 * C152368) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + (C82933 + C82932) * C134328) *
               C152155 * C151985 * C152373 -
           ((C82930 + C82931) * C134328 + C83869 * C152369 +
            (C73979 + C73978) * C152368) *
               C152155 * C151985 * C152357 +
           (C73986 * C152368 + (C74995 + C74994) * C152369 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C134328) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152368 +
           (C82920 + C82921) * C152369 + (C82923 + C82922) * C134328) *
              C152155 * C151985 * C151967 * C129 -
          ((C82927 + C82926) * C134328 + (C82925 + C82924) * C152369 +
           (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
            C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
               C152368) *
              C152155 * C151985 * C151967 * C130 +
          ((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
            C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
               C152368 +
           (C82928 + C82929) * C152369 + (C82933 + C82932) * C134328) *
              C152155 * C151985 * C151967 * C131 -
          ((C150632 * C553 - C73638 * C532 - C150632 * C554 + C151913 * C568 +
            C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566) *
               C134328 +
           (C83477 + C83476) * C152369 +
           (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
            C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
               C152368) *
              C152155 * C151985 * C151967 * C132 +
          ((C150639 * C158 - C73636 * C146 - C150639 * C159 + C152263 * C170 +
            C150632 * C160 - C73638 * C147 - C150632 * C161 + C151913 * C171) *
               C152368 +
           (C150639 * C551 - C73636 * C531 - C150639 * C552 + C152263 * C567 +
            C150632 * C555 - C73638 * C533 - C150632 * C556 + C151913 * C569) *
               C152369 +
           (C150639 * C553 - C73636 * C532 - C150639 * C554 + C152263 * C568 +
            C150632 * C557 - C73638 * C534 - C150632 * C558 + C151913 * C570) *
               C134328) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C152374 -
           ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152359 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            (C86303 + C86302) * C134328) *
               C152155 * C152329) *
              C151967 * C323 +
          (((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
            (C86977 + C86976) * C134328) *
               C152155 * C152359 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C152374 -
           ((C150632 * C2417 - C73638 * C2403 - C150632 * C2418 +
             C151913 * C2427 + C150639 * C2415 - C73636 * C2402 -
             C150639 * C2416 + C152263 * C2426) *
                C134328 +
            (C86976 + C86977) * C152369 + C134767 * C152368) *
               C152155 * C152329) *
              C151967 * C324 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C152374 -
           ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
            (C82929 + C82928) * C152368) *
               C152155 * C152359 +
           (C134768 * C152368 + (C134782 + C134781) * C152369 +
            (C150639 * C2417 - C73636 * C2403 - C150639 * C2418 +
             C152263 * C2427 + C150632 * C2419 - C73638 * C2404 -
             C150632 * C2420 + C151913 * C2428) *
                C134328) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C1211 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C1212 +
           (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C151985 * C152326) *
              C152370 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C1212 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C1211 -
           ((C77246 + C77247) * C134328 + C85260 * C152369 + C73985 * C152368) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C151985 * C1211 -
           ((C82930 + C82931) * C134328 + C83869 * C152369 +
            (C73979 + C73978) * C152368) *
               C152155 * C151985 * C1212 +
           (C73986 * C152368 + (C74995 + C74994) * C152369 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C134328) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152368 +
           (C82920 + C82921) * C152369 + C134766 * C134328) *
              C152155 * C151985 * C1299 -
          (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
              C152155 * C151985 * C1300 +
          (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
              C151985 * C1301 -
          ((C75644 + C75645) * C134328 + C85519 * C152369 + C75338 * C152368) *
              C152155 * C151985 * C1302 +
          (C75368 * C152368 + (C76373 + C76372) * C152369 +
           (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
            C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
            C150632 * C8014 + C151913 * C8020) *
               C134328) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C152374 -
           ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152359 +
           (C134766 * C152368 + (C86298 + C86299) * C152369 +
            (C86303 + C86302) * C134328) *
               C152155 * C152329) *
              C1211 +
          ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
               C152359 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C152374 -
           ((C86300 + C86301) * C134328 + C87237 * C152369 + C84612 * C152368) *
               C152155 * C152329) *
              C1212 +
          ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C152374 -
           ((C77662 + C77663) * C134328 + C84615 * C152369 + C75588 * C152368) *
               C152155 * C152359 +
           (C75646 * C152368 + (C77663 + C77662) * C152369 +
            (C150639 * C9395 - C73636 * C9385 - C150639 * C9396 +
             C152263 * C9403 + C150632 * C9397 - C73638 * C9386 -
             C150632 * C9398 + C151913 * C9404) *
                C134328) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[348] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C152285 -
           ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
            (C82921 + C82920) * C152368) *
               C152155 * C152072) *
              C151967 * C703 +
          (((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
            (C86977 + C86976) * C134328) *
               C152155 * C152072 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C152285) *
              C151967 * C704 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C152285 -
           ((C134781 + C134782) * C134328 + (C82932 + C82933) * C152369 +
            (C82929 + C82928) * C152368) *
               C152155 * C152072) *
              C151967 * C705 +
          (((C83476 + C83477) * C152368 + (C135183 + C135184) * C152369 +
            (C150639 * C2405 - C73636 * C2397 - C150639 * C2406 +
             C152263 * C2421 + C150632 * C2762 - C73638 * C2761 -
             C150632 * C2763 + C151913 * C2764) *
                C134328) *
               C152155 * C152072 -
           ((C135184 + C135183) * C134328 + (C83477 + C83476) * C152369 +
            (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
             C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
                C152368) *
               C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
              C150632 * C152 - C73638 * C143 - C150632 * C153 +
              C151913 * C167) *
                 C152368 +
             (C82920 + C82921) * C152369 + C134766 * C134328) *
                C152155 * C152285 -
            ((C86299 + C86298) * C134328 + (C82922 + C82923) * C152369 +
             (C82921 + C82920) * C152368) *
                C152155 * C152072) *
               C1211 +
           ((C83864 * C152368 + C84613 * C152369 + C87236 * C134328) * C152155 *
                C152072 -
            (C84612 * C134328 + C83865 * C152369 +
             (C73967 + C73966) * C152368) *
                C152155 * C152285) *
               C1212 +
           ((C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
                C152285 -
            ((C77662 + C77663) * C134328 + C84615 * C152369 +
             C75588 * C152368) *
                C152155 * C152072) *
               C152326) *
              C152270 +
          ((((C82924 + C82925) * C152368 + (C82926 + C82927) * C152369 +
             (C86977 + C86976) * C134328) *
                C152155 * C152072 -
            (C134767 * C134328 + (C82925 + C82924) * C152369 +
             (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
              C150639 * C152 - C73636 * C143 - C150639 * C153 +
              C152263 * C167) *
                 C152368) *
                C152155 * C152285) *
               C1211 +
           (((C73972 + C73973) * C152368 + C83866 * C152369 +
             C86690 * C134328) *
                C152155 * C152285 -
            ((C86704 + C86705) * C134328 + C86699 * C152369 +
             C83867 * C152368) *
                C152155 * C152072) *
               C1212 +
           ((C76148 * C152368 + (C77247 + C77246) * C152369 +
             (C150639 * C9387 - C73636 * C9381 - C150639 * C9388 +
              C152263 * C9399 + C150632 * C9922 - C73638 * C9921 -
              C150632 * C9923 + C151913 * C9924) *
                 C134328) *
                C152155 * C152072 -
            ((C77246 + C77247) * C134328 + C85260 * C152369 +
             C73985 * C152368) *
                C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152368 +
           (C82920 + C82921) * C152369 + (C82923 + C82922) * C134328) *
              C152155 * C151985 * C151967 * C129 -
          ((C82927 + C82926) * C134328 + (C82925 + C82924) * C152369 +
           (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
            C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
               C152368) *
              C152155 * C151985 * C151967 * C130 +
          ((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
            C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
               C152368 +
           (C82928 + C82929) * C152369 + (C82933 + C82932) * C134328) *
              C152155 * C151985 * C151967 * C131 -
          ((C150632 * C553 - C73638 * C532 - C150632 * C554 + C151913 * C568 +
            C150639 * C549 - C73636 * C530 - C150639 * C550 + C152263 * C566) *
               C134328 +
           (C83477 + C83476) * C152369 +
           (C150632 * C158 - C73638 * C146 - C150632 * C159 + C151913 * C170 +
            C150639 * C156 - C73636 * C145 - C150639 * C157 + C152263 * C169) *
               C152368) *
              C152155 * C151985 * C151967 * C132 +
          ((C150639 * C158 - C73636 * C146 - C150639 * C159 + C152263 * C170 +
            C150632 * C160 - C73638 * C147 - C150632 * C161 + C151913 * C171) *
               C152368 +
           (C150639 * C551 - C73636 * C531 - C150639 * C552 + C152263 * C567 +
            C150632 * C555 - C73638 * C533 - C150632 * C556 + C151913 * C569) *
               C152369 +
           (C150639 * C553 - C73636 * C532 - C150639 * C554 + C152263 * C568 +
            C150632 * C557 - C73638 * C534 - C150632 * C558 + C151913 * C570) *
               C134328) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + (C82923 + C82922) * C134328) *
               C152155 * C151985 * C152373 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C152357 +
           (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C151985 * C152326) *
              C323 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C152357 -
           ((C82927 + C82926) * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C152373 -
           ((C77246 + C77247) * C134328 + C85260 * C152369 + C73985 * C152368) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + (C82933 + C82932) * C134328) *
               C152155 * C151985 * C152373 -
           ((C82930 + C82931) * C134328 + C83869 * C152369 +
            (C73979 + C73978) * C152368) *
               C152155 * C151985 * C152357 +
           (C73986 * C152368 + (C74995 + C74994) * C152369 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C134328) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
             C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
                C152368 +
            (C82920 + C82921) * C152369 + C134766 * C134328) *
               C152155 * C151985 * C1211 -
           (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
               C152155 * C151985 * C1212 +
           (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
               C151985 * C152326) *
              C152370 +
          (((C73972 + C73973) * C152368 + C83866 * C152369 + C86690 * C134328) *
               C152155 * C151985 * C1212 -
           (C134767 * C134328 + (C82925 + C82924) * C152369 +
            (C150632 * C154 - C73638 * C144 - C150632 * C155 + C151913 * C168 +
             C150639 * C152 - C73636 * C143 - C150639 * C153 + C152263 * C167) *
                C152368) *
               C152155 * C151985 * C1211 -
           ((C77246 + C77247) * C134328 + C85260 * C152369 + C73985 * C152368) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C150639 * C154 - C73636 * C144 - C150639 * C155 + C152263 * C168 +
             C150632 * C156 - C73638 * C145 - C150632 * C157 + C151913 * C169) *
                C152368 +
            (C82928 + C82929) * C152369 + C134768 * C134328) *
               C152155 * C151985 * C1211 -
           ((C82930 + C82931) * C134328 + C83869 * C152369 +
            (C73979 + C73978) * C152368) *
               C152155 * C151985 * C1212 +
           (C73986 * C152368 + (C74995 + C74994) * C152369 +
            (C150639 * C1515 - C73636 * C1493 - C150639 * C1516 +
             C152263 * C1529 + C150632 * C1517 - C73638 * C1494 -
             C150632 * C1518 + C151913 * C1530) *
                C134328) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C150639 * C150 - C73636 * C142 - C150639 * C151 + C152263 * C166 +
            C150632 * C152 - C73638 * C143 - C150632 * C153 + C151913 * C167) *
               C152368 +
           (C82920 + C82921) * C152369 + C134766 * C134328) *
              C152155 * C151985 * C1299 -
          (C84612 * C134328 + C83865 * C152369 + (C73967 + C73966) * C152368) *
              C152155 * C151985 * C1300 +
          (C73984 * C152368 + C84614 * C152369 + C75646 * C134328) * C152155 *
              C151985 * C1301 -
          ((C75644 + C75645) * C134328 + C85519 * C152369 + C75338 * C152368) *
              C152155 * C151985 * C1302 +
          (C75368 * C152368 + (C76373 + C76372) * C152369 +
           (C150639 * C8011 - C73636 * C8001 - C150639 * C8012 +
            C152263 * C8019 + C150632 * C8013 - C73638 * C8002 -
            C150632 * C8014 + C151913 * C8020) *
               C134328) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C152026 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152033 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C3525) *
              C151944 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152033 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152026 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C3525) *
              C151953 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C152026 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152033 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152026 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152033 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C151985 * C3525) *
              C151944 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C152033 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152026 -
           ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
            C110050 * C6026) *
               C151985 * C3525) *
              C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152026 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152033 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C3525) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152285 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C152026 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152285) *
               C152033 +
           (((C51232 + C51231 + C51230) * C101464 +
             (C52882 + C52883 + C52884) * C152231) *
                C152155 * C152285 -
            ((C52885 + C52886 + C52887) * C152231 +
             (C52884 + C52883 + C52882) * C101464) *
                C152155 * C152072) *
               C3525) *
              C3181 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152285) *
               C152026 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152285 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152033 +
           (((C53413 + C53412 + C53411) * C101464 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C53411 + C53412 + C53413) * C152231 +
             (C51238 + C51237 + C51236) * C101464) *
                C152155 * C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152285 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152026 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152285) *
               C152033 +
           ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
                C152285 -
            ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
             C111528 * C6026) *
                C152072) *
               C3525) *
              C3181 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152285) *
               C152026 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152285 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152033 +
           ((C112025 * C6026 + (C112027 + C112026) * C6027 +
             (C61138 * C101464 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
             C110050 * C6026) *
                C152285) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C152380 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152376 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152362 -
           ((C53626 + C53627 + C53628) * C152231 +
            (C52603 + C52602 + C52601) * C101464) *
               C152155 * C151985 * C152336) *
              C3181 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152376 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152380 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152362 +
           ((C53102 + C53101 + C53100) * C101464 +
            (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 + C50889 * C2012 +
             C50896 * C2007 - C50897 * C2001 - C50896 * C2008 + C50890 * C2013 +
             C50898 * C2009 - C50899 * C2002 - C50898 * C2010 +
             C50891 * C2014) *
                C152231) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C3041 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152030) *
              C152379 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152030 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C3041) *
              C152372 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C3041 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152030) *
              C152355 +
          (((C51675 + C51676 + C51677) * C101464 +
            (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 + C50889 * C1062 +
             C50896 * C1055 - C50897 * C1045 - C50896 * C1056 + C50890 * C1063 +
             C50898 * C1057 - C50899 * C1046 - C50898 * C1058 +
             C50891 * C1064) *
                C152231) *
               C152155 * C151985 * C152030 -
           ((C102437 + C102436 + C102435) * C152231 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C101464) *
               C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152374 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152359 +
            ((C102016 + C102015 + C102014) * C101464 +
             (C104558 + C104559 + C104560) * C152231) *
                C152155 * C152329) *
               C3041 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152359 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152374 -
            ((C54904 + C54905 + C54906) * C152231 +
             (C52881 + C52880 + C52879) * C101464) *
                C152155 * C152329) *
               C152030) *
              C3181 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152359 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152374 -
            ((C105066 + C105067 + C105068) * C152231 +
             (C102022 + C102021 + C102020) * C101464) *
                C152155 * C152329) *
               C3041 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152374 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152359 +
            ((C54497 + C54496 + C54495) * C101464 +
             (C50894 * C2901 - C50895 * C2896 - C50894 * C2902 +
              C50889 * C2908 + C50896 * C2903 - C50897 * C2897 -
              C50896 * C2904 + C50890 * C2909 + C50898 * C2905 -
              C50899 * C2898 - C50898 * C2906 + C50891 * C2910) *
                 C152231) *
                C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C3041 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152030) *
              C152379 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C152030 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C3041) *
              C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C3041 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152030) *
              C152355 +
          (((C110464 + C110465) * C6026 + (C110466 + C110467) * C6027 +
            (C59962 * C101464 + (C59421 * C2009 - C59422 * C2002 -
                                 C59421 * C2010 + C151908 * C2014) *
                                    C152231) *
                C6028) *
               C151985 * C152030 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152380 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152376 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C151985 * C152362 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C151985 * C152336) *
              C3181 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C152376 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152380 -
           ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
            C110050 * C6026) *
               C151985 * C152362 +
           (C111732 * C6026 + (C111734 + C111733) * C6027 +
            (C60936 * C101464 + (C59421 * C8803 - C59422 * C8800 -
                                 C59421 * C8804 + C151908 * C8806) *
                                    C152231) *
                C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152374 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152359 +
            ((C65787 * C101464 + C65788 * C152231) * C6026 +
             (C111529 + C111530) * C6027 + C111537 * C6028) *
                C152329) *
               C3041 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152359 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152374 -
            ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
             (C111530 + C111529) * C6026) *
                C152329) *
               C152030) *
              C3181 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152359 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152374 -
            ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
             (C65791 * C152231 + C65790 * C101464) * C6026) *
                C152329) *
               C3041 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152374 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152359 +
            ((C113076 + C113075) * C6026 + (C113074 + C113073) * C6027 +
             (C61872 * C101464 + (C59421 * C10123 - C59422 * C10120 -
                                  C59421 * C10124 + C151908 * C10126) *
                                     C152231) *
                 C6028) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152285 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C3041 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152285) *
               C152030) *
              C151944 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152285) *
               C3041 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152285 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152030) *
              C151953 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C101464 +
             (C102023 + C102024 + C102025) * C152231) *
                C152155 * C152285 -
            ((C102026 + C102027 + C102028) * C152231 +
             (C102025 + C102024 + C102023) * C101464) *
                C152155 * C152072) *
               C3041 +
           (((C52224 + C52223 + C52222) * C101464 +
             (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
              C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
              C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
              C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C52222 + C52223 + C52224) * C152231 +
             (C51241 + C51240 + C51239) * C101464) *
                C152155 * C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152285 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C3041 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152285) *
               C152030) *
              C151944 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152285) *
               C3041 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152285 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152030) *
              C151953 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C101464 +
              C65793 * C152231) *
                 C6026 +
             (C110043 + C110044) * C6027 + C110051 * C6028) *
                C152285 -
            ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
             (C65794 * C152231 + C65793 * C101464) * C6026) *
                C152072) *
               C3041 +
           (((C110963 + C110962) * C6026 + (C110961 + C110960) * C6027 +
             (C60350 * C101464 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
             (C110044 + C110043) * C6026) *
                C152285) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C3041 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152030) *
              C152379 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152030 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C3041) *
              C152372 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C3041 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152030) *
              C152355 +
          (((C51675 + C51676 + C51677) * C101464 +
            (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 + C50889 * C1062 +
             C50896 * C1055 - C50897 * C1045 - C50896 * C1056 + C50890 * C1063 +
             C50898 * C1057 - C50899 * C1046 - C50898 * C1058 +
             C50891 * C1064) *
                C152231) *
               C152155 * C151985 * C152030 -
           ((C102437 + C102436 + C102435) * C152231 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C101464) *
               C152155 * C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C152380 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152376 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152362 -
           ((C53626 + C53627 + C53628) * C152231 +
            (C52603 + C52602 + C52601) * C101464) *
               C152155 * C151985 * C152336) *
              C3181 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152376 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152380 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152362 +
           ((C53102 + C53101 + C53100) * C101464 +
            (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 + C50889 * C2012 +
             C50896 * C2007 - C50897 * C2001 - C50896 * C2008 + C50890 * C2013 +
             C50898 * C2009 - C50899 * C2002 - C50898 * C2010 +
             C50891 * C2014) *
                C152231) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C3041 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152030) *
              C152379 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C152030 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C3041) *
              C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C3041 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152030) *
              C152355 +
          (((C110464 + C110465) * C6026 + (C110466 + C110467) * C6027 +
            (C59962 * C101464 + (C59421 * C2009 - C59422 * C2002 -
                                 C59421 * C2010 + C151908 * C2014) *
                                    C152231) *
                C6028) *
               C151985 * C152030 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C151985 * C3041) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152380 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152376 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C151985 * C152362 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C151985 * C152336) *
              C3181 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C152376 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152380 -
           ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
            C110050 * C6026) *
               C151985 * C152362 +
           (C111732 * C6026 + (C111734 + C111733) * C6027 +
            (C60936 * C101464 + (C59421 * C8803 - C59422 * C8800 -
                                 C59421 * C8804 + C151908 * C8806) *
                                    C152231) *
                C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C4047 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C152026 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C4047) *
               C152033 +
           (((C51232 + C51231 + C51230) * C101464 +
             (C52882 + C52883 + C52884) * C152231) *
                C152155 * C4047 -
            ((C52885 + C52886 + C52887) * C152231 +
             (C52884 + C52883 + C52882) * C101464) *
                C152155 * C152072) *
               C3525) *
              C152270 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C4047) *
               C152026 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C4047 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152033 +
           (((C53413 + C53412 + C53411) * C101464 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C53411 + C53412 + C53413) * C152231 +
             (C51238 + C51237 + C51236) * C101464) *
                C152155 * C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C4047 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152026 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C4047) *
               C152033 +
           ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
                C4047 -
            ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
             C111528 * C6026) *
                C152072) *
               C3525) *
              C152270 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C4047) *
               C152026 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C4047 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152033 +
           ((C112025 * C6026 + (C112027 + C112026) * C6027 +
             (C61138 * C101464 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
             C110050 * C6026) *
                C4047) *
               C3525) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152068 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152075 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C104558 + C104559 + C104560) * C152231) *
               C152155 * C4719) *
              C152026 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152075 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C152068 -
           ((C54904 + C54905 + C54906) * C152231 +
            (C52881 + C52880 + C52879) * C101464) *
               C152155 * C4719) *
              C152033 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C152068 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C152075 +
           ((C52887 + C52886 + C52885) * C101464 +
            (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 + C50889 * C9400 +
             C50896 * C9387 - C50897 * C9381 - C50896 * C9388 + C50890 * C9399 +
             C50898 * C9922 - C50899 * C9921 - C50898 * C9923 +
             C50891 * C9924) *
                C152231) *
               C152155 * C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152068 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152075 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C4719) *
              C152026 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C152075 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C152068 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C4719) *
              C152033 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C152068 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C152075 +
           (C111537 * C6026 + (C111536 + C111535) * C6027 +
            (C60794 * C101464 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C6028) *
               C4719) *
              C3525) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C4047 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152072) *
              C152380 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152072 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C4047) *
              C152376 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C4047 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C152072) *
              C152362 +
          (((C53628 + C53627 + C53626) * C101464 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152231) *
               C152155 * C152072 -
           ((C53626 + C53627 + C53628) * C152231 +
            (C52603 + C52602 + C52601) * C101464) *
               C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C4047 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C3041 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C4047) *
               C152030) *
              C152370 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C4047) *
               C3041 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C4047 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152030) *
              C152353 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C101464 +
             (C102023 + C102024 + C102025) * C152231) *
                C152155 * C4047 -
            ((C102026 + C102027 + C102028) * C152231 +
             (C102025 + C102024 + C102023) * C101464) *
                C152155 * C152072) *
               C3041 +
           (((C52224 + C52223 + C52222) * C101464 +
             (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
              C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
              C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
              C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C52222 + C52223 + C52224) * C152231 +
             (C51241 + C51240 + C51239) * C101464) *
                C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152381 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152378 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C104558 + C104559 + C104560) * C152231) *
               C152155 * C152365 -
           ((C104561 + C104562 + C104563) * C152231 +
            (C104560 + C104559 + C104558) * C101464) *
               C152155 * C152342) *
              C3041 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152378 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C152381 -
           ((C54904 + C54905 + C54906) * C152231 +
            (C52881 + C52880 + C52879) * C101464) *
               C152155 * C152365 +
           ((C54906 + C54905 + C54904) * C101464 +
            (C50894 * C9391 - C50895 * C9383 - C50894 * C9392 + C50889 * C9401 +
             C50896 * C9393 - C50897 * C9384 - C50896 * C9394 + C50890 * C9402 +
             C50898 * C18125 - C50899 * C18124 - C50898 * C18126 +
             C50891 * C18127) *
                C152231) *
               C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C4047 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C3041 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C4047) *
               C152030) *
              C152370 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C4047) *
               C3041 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C4047 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152030) *
              C152353 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C101464 +
              C65793 * C152231) *
                 C6026 +
             (C110043 + C110044) * C6027 + C110051 * C6028) *
                C4047 -
            ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
             (C65794 * C152231 + C65793 * C101464) * C6026) *
                C152072) *
               C3041 +
           (((C110963 + C110962) * C6026 + (C110961 + C110960) * C6027 +
             (C60350 * C101464 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
             (C110044 + C110043) * C6026) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C4047 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C152380 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C152072 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C4047) *
              C152376 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C4047 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C152072) *
              C152362 +
          ((C112222 * C6026 + (C112224 + C112223) * C6027 +
            (C61280 * C101464 + (C59421 * C60756 - C59422 * C60755 -
                                 C59421 * C60757 + C151908 * C60758) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152381 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152378 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152365 -
           ((C113465 + C113466) * C6028 + (C113467 + C113468) * C6027 +
            (C68376 * C152231 + C65788 * C101464) * C6026) *
               C152342) *
              C3041 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C152378 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C152381 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C152365 +
           ((C113468 + C113467) * C6026 + (C113466 + C113465) * C6027 +
            (C62160 * C101464 + (C59421 * C61656 - C59422 * C61655 -
                                 C59421 * C61657 + C151908 * C61658) *
                                    C152231) *
                C6028) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152068 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152075 +
            ((C102016 + C102015 + C102014) * C101464 +
             (C104558 + C104559 + C104560) * C152231) *
                C152155 * C4719) *
               C3041 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152075 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152068 -
            ((C54904 + C54905 + C54906) * C152231 +
             (C52881 + C52880 + C52879) * C101464) *
                C152155 * C4719) *
               C152030) *
              C152270 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152075 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152068 -
            ((C105066 + C105067 + C105068) * C152231 +
             (C102022 + C102021 + C102020) * C101464) *
                C152155 * C4719) *
               C3041 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152068 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152075 +
            ((C54497 + C54496 + C54495) * C101464 +
             (C50894 * C2901 - C50895 * C2896 - C50894 * C2902 +
              C50889 * C2908 + C50896 * C2903 - C50897 * C2897 -
              C50896 * C2904 + C50890 * C2909 + C50898 * C2905 -
              C50899 * C2898 - C50898 * C2906 + C50891 * C2910) *
                 C152231) *
                C152155 * C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152068 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152075 +
            ((C65787 * C101464 + C65788 * C152231) * C6026 +
             (C111529 + C111530) * C6027 + C111537 * C6028) *
                C4719) *
               C3041 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152075 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152068 -
            ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
             (C111530 + C111529) * C6026) *
                C4719) *
               C152030) *
              C152270 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152075 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152068 -
            ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
             (C65791 * C152231 + C65790 * C101464) * C6026) *
                C4719) *
               C3041 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152068 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152075 +
            ((C113076 + C113075) * C6026 + (C113074 + C113073) * C6027 +
             (C61872 * C101464 + (C59421 * C10123 - C59422 * C10120 -
                                  C59421 * C10124 + C151908 * C10126) *
                                     C152231) *
                 C6028) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C4047 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C3041 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C4047) *
               C152030) *
              C152370 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C4047) *
               C3041 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C4047 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152030) *
              C152353 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C101464 +
             (C102023 + C102024 + C102025) * C152231) *
                C152155 * C4047 -
            ((C102026 + C102027 + C102028) * C152231 +
             (C102025 + C102024 + C102023) * C101464) *
                C152155 * C152072) *
               C3041 +
           (((C52224 + C52223 + C52222) * C101464 +
             (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
              C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
              C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
              C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C52222 + C52223 + C52224) * C152231 +
             (C51241 + C51240 + C51239) * C101464) *
                C152155 * C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C4047 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152072) *
              C152380 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152072 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C4047) *
              C152376 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C4047 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C152072) *
              C152362 +
          (((C53628 + C53627 + C53626) * C101464 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152231) *
               C152155 * C152072 -
           ((C53626 + C53627 + C53628) * C152231 +
            (C52603 + C52602 + C52601) * C101464) *
               C152155 * C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C4047 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C3041 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C4047) *
               C152030) *
              C152370 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C4047) *
               C3041 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C4047 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152030) *
              C152353 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C101464 +
              C65793 * C152231) *
                 C6026 +
             (C110043 + C110044) * C6027 + C110051 * C6028) *
                C4047 -
            ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
             (C65794 * C152231 + C65793 * C101464) * C6026) *
                C152072) *
               C3041 +
           (((C110963 + C110962) * C6026 + (C110961 + C110960) * C6027 +
             (C60350 * C101464 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
             (C110044 + C110043) * C6026) *
                C4047) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C4047 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C152380 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C152072 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C4047) *
              C152376 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C4047 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C152072) *
              C152362 +
          ((C112222 * C6026 + (C112224 + C112223) * C6027 +
            (C61280 * C101464 + (C59421 * C60756 - C59422 * C60755 -
                                 C59421 * C60757 + C151908 * C60758) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C4047) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C1661 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C1662 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C1663 -
           ((C53626 + C53627 + C53628) * C152231 +
            (C52603 + C52602 + C52601) * C101464) *
               C152155 * C151985 * C152336) *
              C152270 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C1662 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C1661 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C1663 +
           ((C53102 + C53101 + C53100) * C101464 +
            (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 + C50889 * C2012 +
             C50896 * C2007 - C50897 * C2001 - C50896 * C2008 + C50890 * C2013 +
             C50898 * C2009 - C50899 * C2002 - C50898 * C2010 +
             C50891 * C2014) *
                C152231) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C152284 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152030) *
              C703 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152030 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152284) *
              C704 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C152284 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152030) *
              C705 +
          (((C51675 + C51676 + C51677) * C101464 +
            (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 + C50889 * C1062 +
             C50896 * C1055 - C50897 * C1045 - C50896 * C1056 + C50890 * C1063 +
             C50898 * C1057 - C50899 * C1046 - C50898 * C1058 +
             C50891 * C1064) *
                C152231) *
               C152155 * C151985 * C152030 -
           ((C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569 +
             C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
             C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559) *
                C152231 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C101464) *
               C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C2161 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C2162 +
            ((C102016 + C102015 + C102014) * C101464 +
             (C104558 + C104559 + C104560) * C152231) *
                C152155 * C152329) *
               C152284 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C2162 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C2161 -
            ((C54904 + C54905 + C54906) * C152231 +
             (C52881 + C52880 + C52879) * C101464) *
                C152155 * C152329) *
               C152030) *
              C152270 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C2162 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C2161 -
            ((C50898 * C2405 - C50899 * C2397 - C50898 * C2406 +
              C50891 * C2421 + C50896 * C2407 - C50897 * C2398 -
              C50896 * C2408 + C50890 * C2422 + C50894 * C2409 -
              C50895 * C2399 - C50894 * C2410 + C50889 * C2423) *
                 C152231 +
             (C102022 + C102021 + C102020) * C101464) *
                C152155 * C152329) *
               C152284 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C2161 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C2162 +
            ((C54497 + C54496 + C54495) * C101464 +
             (C50894 * C2901 - C50895 * C2896 - C50894 * C2902 +
              C50889 * C2908 + C50896 * C2903 - C50897 * C2897 -
              C50896 * C2904 + C50890 * C2909 + C50898 * C2905 -
              C50899 * C2898 - C50898 * C2906 + C50891 * C2910) *
                 C152231) *
                C152155 * C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152284 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152030) *
              C703 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C152030 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152284) *
              C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152284 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152030) *
              C705 +
          (((C110464 + C110465) * C6026 + (C110466 + C110467) * C6027 +
            (C59962 * C101464 + (C59421 * C2009 - C59422 * C2002 -
                                 C59421 * C2010 + C151908 * C2014) *
                                    C152231) *
                C6028) *
               C151985 * C152030 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C1661 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C1662 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C151985 * C1663 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C151985 * C152336) *
              C152270 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C1662 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C1661 -
           ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
            C110050 * C6026) *
               C151985 * C1663 +
           (C111732 * C6026 + (C111734 + C111733) * C6027 +
            (C60936 * C101464 + (C59421 * C8803 - C59422 * C8800 -
                                 C59421 * C8804 + C151908 * C8806) *
                                    C152231) *
                C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C2161 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C2162 +
            ((C65787 * C101464 + C65788 * C152231) * C6026 +
             (C111529 + C111530) * C6027 + C111537 * C6028) *
                C152329) *
               C152284 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C2162 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C2161 -
            ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
             (C111530 + C111529) * C6026) *
                C152329) *
               C152030) *
              C152270 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C2162 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C2161 -
            ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
             (C65791 * C152231 + C65790 * C101464) * C6026) *
                C152329) *
               C152284 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C2161 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C2162 +
            ((C113076 + C113075) * C6026 + (C113074 + C113073) * C6027 +
             (C61872 * C101464 + (C59421 * C10123 - C59422 * C10120 -
                                  C59421 * C10124 + C151908 * C10126) *
                                     C152231) *
                 C6028) *
                C152329) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152285 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152072) *
              C1661 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152072 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C152285) *
              C1662 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C152285 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C152072) *
              C1663 +
          (((C53628 + C53627 + C53626) * C101464 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152231) *
               C152155 * C152072 -
           ((C53626 + C53627 + C53628) * C152231 +
            (C52603 + C52602 + C52601) * C101464) *
               C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152285 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C152284 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152285) *
               C152030) *
              C323 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152285) *
               C152284 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152285 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152030) *
              C324 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C101464 +
             (C102023 + C102024 + C102025) * C152231) *
                C152155 * C152285 -
            ((C102026 + C102027 + C102028) * C152231 +
             (C102025 + C102024 + C102023) * C101464) *
                C152155 * C152072) *
               C152284 +
           (((C52224 + C52223 + C52222) * C101464 +
             (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
              C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
              C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
              C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C52222 + C52223 + C52224) * C152231 +
             (C51241 + C51240 + C51239) * C101464) *
                C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C2757 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C2758 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C104558 + C104559 + C104560) * C152231) *
               C152155 * C2759 -
           ((C104561 + C104562 + C104563) * C152231 +
            (C104560 + C104559 + C104558) * C101464) *
               C152155 * C152342) *
              C152284 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C2758 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C2757 -
           ((C54904 + C54905 + C54906) * C152231 +
            (C52881 + C52880 + C52879) * C101464) *
               C152155 * C2759 +
           ((C54906 + C54905 + C54904) * C101464 +
            (C50894 * C9391 - C50895 * C9383 - C50894 * C9392 + C50889 * C9401 +
             C50896 * C9393 - C50897 * C9384 - C50896 * C9394 + C50890 * C9402 +
             C50898 * C18125 - C50899 * C18124 - C50898 * C18126 +
             C50891 * C18127) *
                C152231) *
               C152155 * C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152285 -
            ((C110952 + C110953) * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152284 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             (C60344 * C101464 + C60792 * C152231) * C6028) *
                C152072 -
            ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152285) *
               C152030) *
              C323 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + (C110958 + C110959) * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152285) *
               C152284 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             (C110041 + C110042) * C6028) *
                C152285 -
            ((C61872 * C152231 + C60349 * C101464) * C6028 +
             (C110959 + C110958) * C6027 + (C110957 + C110956) * C6026) *
                C152072) *
               C152030) *
              C324 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C101464 +
              C65793 * C152231) *
                 C6026 +
             (C110043 + C110044) * C6027 + C110051 * C6028) *
                C152285 -
            ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
             (C65794 * C152231 + C65793 * C101464) * C6026) *
                C152072) *
               C152284 +
           (((C110963 + C110962) * C6026 + (C110961 + C110960) * C6027 +
             (C60350 * C101464 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
             (C110044 + C110043) * C6026) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152285 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C1661 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C152072 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C152285) *
              C1662 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C152285 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C152072) *
              C1663 +
          ((C112222 * C6026 + (C112224 + C112223) * C6027 +
            (C61280 * C101464 + (C59421 * C60756 - C59422 * C60755 -
                                 C59421 * C60757 + C151908 * C60758) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C2757 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C2758 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C2759 -
           ((C113465 + C113466) * C6028 + (C113467 + C113468) * C6027 +
            (C68376 * C152231 + C65788 * C101464) * C6026) *
               C152342) *
              C152284 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C2758 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C2757 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C2759 +
           ((C113468 + C113467) * C6026 + (C113466 + C113465) * C6027 +
            (C62160 * C101464 + (C59421 * C61656 - C59422 * C61655 -
                                 C59421 * C61657 + C151908 * C61658) *
                                    C152231) *
                C6028) *
               C152342) *
              C152030) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                   C101464 +
               (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
                C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
                   C152231) *
                  C152155 * C151985 * C151967 * C129 -
              ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
                C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
                C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
                   C152231 +
               (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                   C101464) *
                  C152155 * C151985 * C151967 * C130 +
              ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                   C101464 +
               (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
                C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
                C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
                   C152231) *
                  C152155 * C151985 * C151967 * C131 -
              ((C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569 +
                C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
                C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559) *
                   C152231 +
               (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
                C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
                C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                   C101464) *
                  C152155 * C151985 * C151967 * C132 +
              ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
                C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
                C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
                   C101464 +
               (C50894 * C551 - C50895 * C531 - C50894 * C552 + C50889 * C567 +
                C50896 * C555 - C50897 * C533 - C50896 * C556 + C50890 * C569 +
                C50898 * C844 - C50899 * C843 - C50898 * C845 + C50891 * C846) *
                   C152231) *
                  C152155 * C151985 * C151967 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
                 C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
                 C50898 * C154 - C50899 * C144 - C50898 * C155 +
                 C50891 * C168) *
                    C101464 +
                (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
                 C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
                 C50898 * C537 - C50899 * C524 - C50898 * C538 +
                 C50891 * C560) *
                    C152231) *
                   C152155 * C151985 * C152373 -
               ((C52216 + C52217 + C52218) * C152231 +
                (C51229 + C51228 + C51227) * C101464) *
                   C152155 * C151985 * C152357 +
               ((C51232 + C51231 + C51230) * C101464 +
                (C52882 + C52883 + C52884) * C152231) *
                   C152155 * C151985 * C152326) *
                  C323 +
              (((C51233 + C51234 + C51235) * C101464 +
                (C52219 + C52220 + C52221) * C152231) *
                   C152155 * C151985 * C152357 -
               ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
                 C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
                 C50894 * C539 - C50895 * C525 - C50894 * C540 +
                 C50889 * C561) *
                    C152231 +
                (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
                 C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
                 C50894 * C152 - C50895 * C143 - C50894 * C153 +
                 C50889 * C167) *
                    C101464) *
                   C152155 * C151985 * C152373 -
               ((C53411 + C53412 + C53413) * C152231 +
                (C51238 + C51237 + C51236) * C101464) *
                   C152155 * C151985 * C152326) *
                  C324 +
              (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
                 C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
                 C50898 * C158 - C50899 * C146 - C50898 * C159 +
                 C50891 * C170) *
                    C101464 +
                (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
                 C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
                 C50898 * C551 - C50899 * C531 - C50898 * C552 +
                 C50891 * C567) *
                    C152231) *
                   C152155 * C151985 * C152373 -
               ((C52222 + C52223 + C52224) * C152231 +
                (C51241 + C51240 + C51239) * C101464) *
                   C152155 * C151985 * C152357 +
               ((C51244 + C51243 + C51242) * C101464 +
                (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 +
                 C50889 * C1524 + C50896 * C1503 - C50897 * C1487 -
                 C50896 * C1504 + C50890 * C1523 + C50898 * C1866 -
                 C50899 * C1865 - C50898 * C1867 + C50891 * C1868) *
                    C152231) *
                   C152155 * C151985 * C152326) *
                  C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152374 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152359 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50898 * C2407 - C50899 * C2398 - C50898 * C2408 +
             C50891 * C2422) *
                C152231) *
               C152155 * C152329) *
              C151967 * C323 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152359 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C152374 -
           ((C50898 * C2405 - C50899 * C2397 - C50898 * C2406 + C50891 * C2421 +
             C50896 * C2407 - C50897 * C2398 - C50896 * C2408 + C50890 * C2422 +
             C50894 * C2409 - C50895 * C2399 - C50894 * C2410 +
             C50889 * C2423) *
                C152231 +
            (C102022 + C102021 + C102020) * C101464) *
               C152155 * C152329) *
              C151967 * C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C152374 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C152359 +
           ((C102028 + C102027 + C102026) * C101464 +
            (C50894 * C2407 - C50895 * C2398 - C50894 * C2408 + C50889 * C2422 +
             C50896 * C2405 - C50897 * C2397 - C50896 * C2406 + C50890 * C2421 +
             C50898 * C2762 - C50899 * C2761 - C50898 * C2763 +
             C50891 * C2764) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C1212 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C1211 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C102011 + C102012 + C102013) * C152231) *
              C152155 * C151985 * C1299 -
          ((C52216 + C52217 + C52218) * C152231 +
           (C51229 + C51228 + C51227) * C101464) *
              C152155 * C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C101464 +
           (C52882 + C52883 + C52884) * C152231) *
              C152155 * C151985 * C1301 -
          ((C53626 + C53627 + C53628) * C152231 +
           (C52603 + C52602 + C52601) * C101464) *
              C152155 * C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C101464 +
           (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
            C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
            C50898 * C8586 - C50899 * C8585 - C50898 * C8587 + C50891 * C8588) *
               C152231) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152374 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152359 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50898 * C2407 - C50899 * C2398 - C50898 * C2408 +
             C50891 * C2422) *
                C152231) *
               C152155 * C152329) *
              C1211 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152359 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C152374 -
           ((C54904 + C54905 + C54906) * C152231 +
            (C52881 + C52880 + C52879) * C101464) *
               C152155 * C152329) *
              C1212 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C152374 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C152359 +
           ((C52887 + C52886 + C52885) * C101464 +
            (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 + C50889 * C9400 +
             C50896 * C9387 - C50897 * C9381 - C50896 * C9388 + C50890 * C9399 +
             C50898 * C9922 - C50899 * C9921 - C50898 * C9923 +
             C50891 * C9924) *
                C152231) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C2161 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C2162 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50898 * C2407 - C50899 * C2398 - C50898 * C2408 +
             C50891 * C2422) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152370 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C2162 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C2161 -
           ((C50898 * C2405 - C50899 * C2397 - C50898 * C2406 + C50891 * C2421 +
             C50896 * C2407 - C50897 * C2398 - C50896 * C2408 + C50890 * C2422 +
             C50894 * C2409 - C50895 * C2399 - C50894 * C2410 +
             C50889 * C2423) *
                C152231 +
            (C102022 + C102021 + C102020) * C101464) *
               C152155 * C152329) *
              C151967 * C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C2161 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C2162 +
           ((C102028 + C102027 + C102026) * C101464 +
            (C50894 * C2407 - C50895 * C2398 - C50894 * C2408 + C50889 * C2422 +
             C50896 * C2405 - C50897 * C2397 - C50896 * C2406 + C50890 * C2421 +
             C50898 * C2762 - C50899 * C2761 - C50898 * C2763 +
             C50891 * C2764) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C2161 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C2162 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50898 * C2407 - C50899 * C2398 - C50898 * C2408 +
             C50891 * C2422) *
                C152231) *
               C152155 * C152329) *
              C152373 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C2162 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C2161 -
           ((C54904 + C54905 + C54906) * C152231 +
            (C52881 + C52880 + C52879) * C101464) *
               C152155 * C152329) *
              C152357 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C2161 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C2162 +
           ((C52887 + C52886 + C52885) * C101464 +
            (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 + C50889 * C9400 +
             C50896 * C9387 - C50897 * C9381 - C50896 * C9388 + C50890 * C9399 +
             C50898 * C9922 - C50899 * C9921 - C50898 * C9923 +
             C50891 * C9924) *
                C152231) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C102011 + C102012 + C102013) * C152231) *
              C152155 * C2392 -
          ((C102014 + C102015 + C102016) * C152231 +
           (C102013 + C102012 + C102011) * C101464) *
              C152155 * C2393 +
          ((C102016 + C102015 + C102014) * C101464 +
           (C104558 + C104559 + C104560) * C152231) *
              C152155 * C2394 -
          ((C104561 + C104562 + C104563) * C152231 +
           (C104560 + C104559 + C104558) * C101464) *
              C152155 * C2395 +
          ((C104563 + C104562 + C104561) * C101464 +
           (C50894 * C17794 - C50895 * C17789 - C50894 * C17795 +
            C50889 * C17801 + C50896 * C17792 - C50897 * C17788 -
            C50896 * C17793 + C50890 * C17800 + C50898 * C18338 -
            C50899 * C18337 - C50898 * C18339 + C50891 * C18340) *
               C152231) *
              C152155 * C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C59642 * C101464 + C60346 * C152231) * C6027 +
           (C59643 * C101464 + C60345 * C152231) * C6028) *
              C151985 * C151967 * C129 -
          ((C60348 * C152231 + C59647 * C101464) * C6028 +
           (C60347 * C152231 + C59646 * C101464) * C6027 +
           (C65789 * C152231 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C101464) *
               C6026) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C101464 +
            C65793 * C152231) *
               C6026 +
           (C59650 * C101464 + C60352 * C152231) * C6027 +
           (C59651 * C101464 + C60351 * C152231) * C6028) *
              C151985 * C151967 * C131 -
          ((C93912 * C152231 + C59961 * C101464) * C6028 +
           (C66004 * C152231 + C59960 * C101464) * C6027 +
           (C66214 * C152231 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C101464) *
               C6026) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C101464 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152231) *
               C6026 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C101464 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152231) *
               C6027 +
           ((C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
                C101464 +
            (C59421 * C1866 - C59422 * C1865 - C59421 * C1867 +
             C151908 * C1868) *
                C152231) *
               C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152373 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152357 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C323 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C152357 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152373 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152373 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152357 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152374 -
           ((C60791 * C152231 + C60345 * C101464) * C6028 +
            (C60790 * C152231 + C60346 * C101464) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152359 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C60790 * C101464 + C62162 * C152231) * C6027 +
            (C60791 * C101464 + C62161 * C152231) * C6028) *
               C152329) *
              C151967 * C323 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C60347 * C101464 + C61874 * C152231) * C6027 +
            (C60348 * C101464 + C61873 * C152231) * C6028) *
               C152359 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C152374 -
           ((C67597 * C152231 + C61873 * C101464) * C6028 +
            (C65792 * C152231 + C61874 * C101464) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C152329) *
              C151967 * C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C152374 -
           ((C65499 * C152231 + C60351 * C101464) * C6028 +
            (C65498 * C152231 + C60352 * C101464) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152359 +
           ((C65794 * C101464 + C65796 * C152231) * C6026 +
            (C65498 * C101464 + C65795 * C152231) * C6027 +
            (C65499 * C101464 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C1211 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C1212 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C1212 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C1211 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C1211 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C1212 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C110031 + C110032) * C6027 + C110049 * C6028) *
              C151985 * C1299 -
          (C111304 * C6028 + (C110034 + C110033) * C6027 +
           (C110032 + C110031) * C6026) *
              C151985 * C1300 +
          (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
              C151985 * C1301 -
          ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
           C111304 * C6026) *
              C151985 * C1302 +
          (C111309 * C6026 + (C111308 + C111307) * C6027 +
           (C60607 * C101464 + (C59421 * C61270 - C59422 * C61269 -
                                C59421 * C61271 + C151908 * C61272) *
                                   C152231) *
               C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152374 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152359 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152329) *
              C1211 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            (C111533 + C111534) * C6028) *
               C152359 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C152374 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C152329) *
              C1212 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C152374 -
           ((C60794 * C152231 + C60793 * C101464) * C6028 +
            (C111534 + C111533) * C6027 + C111528 * C6026) *
               C152359 +
           (C111537 * C6026 + (C111536 + C111535) * C6027 +
            (C60794 * C101464 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C2161 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C2162 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152329) *
              C151967 * C152370 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C2162 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C2161 -
           ((C67597 * C152231 + C61873 * C101464) * C6028 +
            (C65792 * C152231 + C61874 * C101464) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C152329) *
              C151967 * C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C2161 -
           ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C2162 +
           ((C65794 * C101464 + C65796 * C152231) * C6026 +
            (C65498 * C101464 + C65795 * C152231) * C6027 +
            (C65499 * C101464 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C2161 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C2162 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152329) *
              C152373 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C2162 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C2161 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C152329) *
              C152357 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C2161 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C2162 +
           (C111537 * C6026 + (C111536 + C111535) * C6027 +
            (C60794 * C101464 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C110031 + C110032) * C6027 + C110049 * C6028) *
              C2392 -
          (C111528 * C6028 + (C110954 + C110955) * C6027 +
           (C65787 * C152231 + C65786 * C101464) * C6026) *
              C2393 +
          ((C65787 * C101464 + C65788 * C152231) * C6026 +
           (C111529 + C111530) * C6027 + C111537 * C6028) *
              C2394 -
          ((C67099 * C152231 + C62161 * C101464) * C6028 +
           (C67098 * C152231 + C62162 * C101464) * C6027 +
           (C68376 * C152231 + C65788 * C101464) * C6026) *
              C2395 +
          ((C68376 * C101464 + C68378 * C152231) * C6026 +
           (C67098 * C101464 + C68377 * C152231) * C6027 +
           (C67099 * C101464 + (C59421 * C69074 - C59422 * C69073 -
                                C59421 * C69075 + C151908 * C69076) *
                                   C152231) *
               C6028) *
              C2396) *
         C151967 * C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152285 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C1211 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152285) *
               C1212 +
           (((C51232 + C51231 + C51230) * C101464 +
             (C52882 + C52883 + C52884) * C152231) *
                C152155 * C152285 -
            ((C52885 + C52886 + C52887) * C152231 +
             (C52884 + C52883 + C52882) * C101464) *
                C152155 * C152072) *
               C152326) *
              C152270 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152285) *
               C1211 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152285 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C1212 +
           (((C53413 + C53412 + C53411) * C101464 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C53411 + C53412 + C53413) * C152231 +
             (C51238 + C51237 + C51236) * C101464) *
                C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152285 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152072) *
              C151967 * C703 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152072 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C152285) *
              C151967 * C704 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C152285 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C152072) *
              C151967 * C705 +
          (((C102435 + C102436 + C102437) * C101464 +
            (C50894 * C549 - C50895 * C530 - C50894 * C550 + C50889 * C566 +
             C50896 * C553 - C50897 * C532 - C50896 * C554 + C50890 * C568 +
             C50898 * C557 - C50899 * C534 - C50898 * C558 + C50891 * C570) *
                C152231) *
               C152155 * C152072 -
           ((C102437 + C102436 + C102435) * C152231 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C101464) *
               C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C2757 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C2758 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C104558 + C104559 + C104560) * C152231) *
               C152155 * C2759 -
           ((C104561 + C104562 + C104563) * C152231 +
            (C104560 + C104559 + C104558) * C101464) *
               C152155 * C152342) *
              C151967 * C152270 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C2758 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C2757 -
           ((C105066 + C105067 + C105068) * C152231 +
            (C102022 + C102021 + C102020) * C101464) *
               C152155 * C2759 +
           ((C105068 + C105067 + C105066) * C101464 +
            (C50894 * C2415 - C50895 * C2402 - C50894 * C2416 + C50889 * C2426 +
             C50896 * C2417 - C50897 * C2403 - C50896 * C2418 + C50890 * C2427 +
             C50898 * C2419 - C50899 * C2404 - C50898 * C2420 +
             C50891 * C2428) *
                C152231) *
               C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152285 -
           ((C60791 * C152231 + C60345 * C101464) * C6028 +
            (C60790 * C152231 + C60346 * C101464) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C151967 * C703 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C60347 * C101464 + C61874 * C152231) * C6027 +
            (C60348 * C101464 + C61873 * C152231) * C6028) *
               C152072 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C152285) *
              C151967 * C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C152285 -
           ((C65499 * C152231 + C60351 * C101464) * C6028 +
            (C65498 * C152231 + C60352 * C101464) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152072) *
              C151967 * C705 +
          (((C66214 * C101464 + C66215 * C152231) * C6026 +
            (C66004 * C101464 + C66005 * C152231) * C6027 +
            (C93912 * C101464 + (C59421 * C1517 - C59422 * C1494 -
                                 C59421 * C1518 + C151908 * C1530) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152285 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C1211 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             (C111533 + C111534) * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152285) *
               C1212 +
           ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
                C152285 -
            ((C60794 * C152231 + C60793 * C101464) * C6028 +
             (C111534 + C111533) * C6027 + C111528 * C6026) *
                C152072) *
               C152326) *
              C152270 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152285) *
               C1211 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152285 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C1212 +
           ((C112025 * C6026 + (C112027 + C112026) * C6027 +
             (C61138 * C101464 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
             C110050 * C6026) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C2757 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C2758 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C2759 -
           ((C67099 * C152231 + C62161 * C101464) * C6028 +
            (C67098 * C152231 + C62162 * C101464) * C6027 +
            (C68376 * C152231 + C65788 * C101464) * C6026) *
               C152342) *
              C151967 * C152270 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C2758 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C2757 -
           ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C2759 +
           ((C65791 * C101464 + C68879 * C152231) * C6026 +
            (C65792 * C101464 + C68677 * C152231) * C6027 +
            (C67597 * C101464 + (C59421 * C9397 - C59422 * C9386 -
                                 C59421 * C9398 + C151908 * C9404) *
                                    C152231) *
                C6028) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152357 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152326) *
              C323 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152357 -
           ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
                C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152373 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152357 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
            C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
            C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
               C152231) *
              C152155 * C151985 * C151967 * C129 -
          ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
            C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
            C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
               C152231 +
           (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
            C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
            C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
               C101464) *
              C152155 * C151985 * C151967 * C130 +
          ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
            C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
            C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
               C101464 +
           (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
            C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
            C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
               C152231) *
              C152155 * C151985 * C151967 * C131 -
          ((C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569 +
            C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
            C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559) *
               C152231 +
           (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
            C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
            C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
               C101464) *
              C152155 * C151985 * C151967 * C132 +
          ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
            C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
            C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
               C101464 +
           (C50894 * C551 - C50895 * C531 - C50894 * C552 + C50889 * C567 +
            C50896 * C555 - C50897 * C533 - C50896 * C556 + C50890 * C569 +
            C50898 * C844 - C50899 * C843 - C50898 * C845 + C50891 * C846) *
               C152231) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C1212 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C1211 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C102011 + C102012 + C102013) * C152231) *
              C152155 * C151985 * C1299 -
          ((C52216 + C52217 + C52218) * C152231 +
           (C51229 + C51228 + C51227) * C101464) *
              C152155 * C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C101464 +
           (C52882 + C52883 + C52884) * C152231) *
              C152155 * C151985 * C1301 -
          ((C53626 + C53627 + C53628) * C152231 +
           (C52603 + C52602 + C52601) * C101464) *
              C152155 * C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C101464 +
           (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
            C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
            C50898 * C8586 - C50899 * C8585 - C50898 * C8587 + C50891 * C8588) *
               C152231) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C2161 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C2162 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50898 * C2407 - C50899 * C2398 - C50898 * C2408 +
             C50891 * C2422) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152370 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C2162 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C2161 -
           ((C50898 * C2405 - C50899 * C2397 - C50898 * C2406 + C50891 * C2421 +
             C50896 * C2407 - C50897 * C2398 - C50896 * C2408 + C50890 * C2422 +
             C50894 * C2409 - C50895 * C2399 - C50894 * C2410 +
             C50889 * C2423) *
                C152231 +
            (C102022 + C102021 + C102020) * C101464) *
               C152155 * C152329) *
              C151967 * C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C2161 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C2162 +
           ((C102028 + C102027 + C102026) * C101464 +
            (C50894 * C2407 - C50895 * C2398 - C50894 * C2408 + C50889 * C2422 +
             C50896 * C2405 - C50897 * C2397 - C50896 * C2406 + C50890 * C2421 +
             C50898 * C2762 - C50899 * C2761 - C50898 * C2763 +
             C50891 * C2764) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C2161 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C2162 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50898 * C2407 - C50899 * C2398 - C50898 * C2408 +
             C50891 * C2422) *
                C152231) *
               C152155 * C152329) *
              C152373 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C2162 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C2161 -
           ((C54904 + C54905 + C54906) * C152231 +
            (C52881 + C52880 + C52879) * C101464) *
               C152155 * C152329) *
              C152357 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C2161 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C2162 +
           ((C52887 + C52886 + C52885) * C101464 +
            (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 + C50889 * C9400 +
             C50896 * C9387 - C50897 * C9381 - C50896 * C9388 + C50890 * C9399 +
             C50898 * C9922 - C50899 * C9921 - C50898 * C9923 +
             C50891 * C9924) *
                C152231) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C59642 * C101464 + C60346 * C152231) * C6027 +
           (C59643 * C101464 + C60345 * C152231) * C6028) *
              C151985 * C151967 * C129 -
          ((C60348 * C152231 + C59647 * C101464) * C6028 +
           (C60347 * C152231 + C59646 * C101464) * C6027 +
           (C65789 * C152231 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C101464) *
               C6026) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C101464 +
            C65793 * C152231) *
               C6026 +
           (C59650 * C101464 + C60352 * C152231) * C6027 +
           (C59651 * C101464 + C60351 * C152231) * C6028) *
              C151985 * C151967 * C131 -
          ((C93912 * C152231 + C59961 * C101464) * C6028 +
           (C66004 * C152231 + C59960 * C101464) * C6027 +
           (C66214 * C152231 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C101464) *
               C6026) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C101464 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152231) *
               C6026 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C101464 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152231) *
               C6027 +
           ((C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
                C101464 +
            (C59421 * C1866 - C59422 * C1865 - C59421 * C1867 +
             C151908 * C1868) *
                C152231) *
               C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152373 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152357 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C323 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C152357 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152373 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152373 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152357 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C1211 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C1212 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C1212 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C1211 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C1211 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C1212 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C110031 + C110032) * C6027 + C110049 * C6028) *
              C151985 * C1299 -
          (C111304 * C6028 + (C110034 + C110033) * C6027 +
           (C110032 + C110031) * C6026) *
              C151985 * C1300 +
          (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
              C151985 * C1301 -
          ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
           C111304 * C6026) *
              C151985 * C1302 +
          (C111309 * C6026 + (C111308 + C111307) * C6027 +
           (C60607 * C101464 + (C59421 * C61270 - C59422 * C61269 -
                                C59421 * C61271 + C151908 * C61272) *
                                   C152231) *
               C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C2161 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C2162 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152329) *
              C151967 * C152370 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C2162 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C2161 -
           ((C67597 * C152231 + C61873 * C101464) * C6028 +
            (C65792 * C152231 + C61874 * C101464) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C152329) *
              C151967 * C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C2161 -
           ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C2162 +
           ((C65794 * C101464 + C65796 * C152231) * C6026 +
            (C65498 * C101464 + C65795 * C152231) * C6027 +
            (C65499 * C101464 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C2161 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C2162 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152329) *
              C152373 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C2162 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C2161 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C152329) *
              C152357 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C2161 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C2162 +
           (C111537 * C6026 + (C111536 + C111535) * C6027 +
            (C60794 * C101464 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C4047 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C152284 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C4047) *
               C152030) *
              C151944 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C4047) *
               C152284 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C4047 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152030) *
              C151953 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C101464 +
             (C102023 + C102024 + C102025) * C152231) *
                C152155 * C4047 -
            ((C102026 + C102027 + C102028) * C152231 +
             (C102025 + C102024 + C102023) * C101464) *
                C152155 * C152072) *
               C152284 +
           (((C52224 + C52223 + C52222) * C101464 +
             (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
              C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
              C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
              C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C52222 + C52223 + C52224) * C152231 +
             (C51241 + C51240 + C51239) * C101464) *
                C152155 * C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C4047 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152284 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C4047) *
               C152030) *
              C151944 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C4047) *
               C152284 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C4047 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152030) *
              C151953 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C101464 +
              C65793 * C152231) *
                 C6026 +
             (C110043 + C110044) * C6027 + C110051 * C6028) *
                C4047 -
            ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
             (C65794 * C152231 + C65793 * C101464) * C6026) *
                C152072) *
               C152284 +
           (((C110963 + C110962) * C6026 + (C110961 + C110960) * C6027 +
             (C60350 * C101464 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
             (C110044 + C110043) * C6026) *
                C4047) *
               C152030) *
              C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152068 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152075 +
            ((C102016 + C102015 + C102014) * C101464 +
             (C104558 + C104559 + C104560) * C152231) *
                C152155 * C4719) *
               C152284 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152075 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152068 -
            ((C54904 + C54905 + C54906) * C152231 +
             (C52881 + C52880 + C52879) * C101464) *
                C152155 * C4719) *
               C152030) *
              C3181 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152075 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152068 -
            ((C105066 + C105067 + C105068) * C152231 +
             (C102022 + C102021 + C102020) * C101464) *
                C152155 * C4719) *
               C152284 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152068 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152075 +
            ((C54497 + C54496 + C54495) * C101464 +
             (C50894 * C2901 - C50895 * C2896 - C50894 * C2902 +
              C50889 * C2908 + C50896 * C2903 - C50897 * C2897 -
              C50896 * C2904 + C50890 * C2909 + C50898 * C2905 -
              C50899 * C2898 - C50898 * C2906 + C50891 * C2910) *
                 C152231) *
                C152155 * C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152068 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152075 +
            ((C65787 * C101464 + C65788 * C152231) * C6026 +
             (C111529 + C111530) * C6027 + C111537 * C6028) *
                C4719) *
               C152284 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152075 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152068 -
            ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
             (C111530 + C111529) * C6026) *
                C4719) *
               C152030) *
              C3181 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152075 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152068 -
            ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
             (C65791 * C152231 + C65790 * C101464) * C6026) *
                C4719) *
               C152284 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152068 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152075 +
            ((C113076 + C113075) * C6026 + (C113074 + C113073) * C6027 +
             (C61872 * C101464 + (C59421 * C10123 - C59422 * C10120 -
                                  C59421 * C10124 + C151908 * C10126) *
                                     C152231) *
                 C6028) *
                C4719) *
               C152030) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C4047 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C152373 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C4047) *
               C152357 +
           (((C51232 + C51231 + C51230) * C101464 +
             (C52882 + C52883 + C52884) * C152231) *
                C152155 * C4047 -
            ((C52885 + C52886 + C52887) * C152231 +
             (C52884 + C52883 + C52882) * C101464) *
                C152155 * C152072) *
               C152326) *
              C3181 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C4047) *
               C152373 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C4047 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152357 +
           (((C53413 + C53412 + C53411) * C101464 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C53411 + C53412 + C53413) * C152231 +
             (C51238 + C51237 + C51236) * C101464) *
                C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C4047 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152072) *
              C151967 * C152379 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152072 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C4047) *
              C151967 * C152372 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C4047 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C152072) *
              C151967 * C152355 +
          (((C102435 + C102436 + C102437) * C101464 +
            (C50894 * C549 - C50895 * C530 - C50894 * C550 + C50889 * C566 +
             C50896 * C553 - C50897 * C532 - C50896 * C554 + C50890 * C568 +
             C50898 * C557 - C50899 * C534 - C50898 * C558 + C50891 * C570) *
                C152231) *
               C152155 * C152072 -
           ((C102437 + C102436 + C102435) * C152231 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C101464) *
               C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152381 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152378 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C104558 + C104559 + C104560) * C152231) *
               C152155 * C152365 -
           ((C104561 + C104562 + C104563) * C152231 +
            (C104560 + C104559 + C104558) * C101464) *
               C152155 * C152342) *
              C151967 * C3181 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152378 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C152381 -
           ((C105066 + C105067 + C105068) * C152231 +
            (C102022 + C102021 + C102020) * C101464) *
               C152155 * C152365 +
           ((C105068 + C105067 + C105066) * C101464 +
            (C50894 * C2415 - C50895 * C2402 - C50894 * C2416 + C50889 * C2426 +
             C50896 * C2417 - C50897 * C2403 - C50896 * C2418 + C50890 * C2427 +
             C50898 * C2419 - C50899 * C2404 - C50898 * C2420 +
             C50891 * C2428) *
                C152231) *
               C152155 * C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C4047 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C151967 * C152379 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C152072 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C4047) *
              C151967 * C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C4047 -
           ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152072) *
              C151967 * C152355 +
          (((C66214 * C101464 + C66215 * C152231) * C6026 +
            (C66004 * C101464 + C66005 * C152231) * C6027 +
            (C93912 * C101464 + (C59421 * C1517 - C59422 * C1494 -
                                 C59421 * C1518 + C151908 * C1530) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C4047 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152373 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C4047) *
               C152357 +
           ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
                C4047 -
            ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
             C111528 * C6026) *
                C152072) *
               C152326) *
              C3181 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C4047) *
               C152373 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C4047 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152357 +
           ((C112025 * C6026 + (C112027 + C112026) * C6027 +
             (C61138 * C101464 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
             C110050 * C6026) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152381 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152378 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152365 -
           ((C113465 + C113466) * C6028 + (C113467 + C113468) * C6027 +
            (C68376 * C152231 + C65788 * C101464) * C6026) *
               C152342) *
              C151967 * C3181 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C152378 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C152381 -
           ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C152365 +
           ((C65791 * C101464 + C68879 * C152231) * C6026 +
            (C65792 * C101464 + C68677 * C152231) * C6027 +
            (C67597 * C101464 + (C59421 * C9397 - C59422 * C9386 -
                                 C59421 * C9398 + C151908 * C9404) *
                                    C152231) *
                C6028) *
               C152342) *
              C151967 * C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152068 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152075 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C104558 + C104559 + C104560) * C152231) *
               C152155 * C4719) *
              C151967 * C151944 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152075 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C152068 -
           ((C105066 + C105067 + C105068) * C152231 +
            (C102022 + C102021 + C102020) * C101464) *
               C152155 * C4719) *
              C151967 * C151953 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C152068 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C152075 +
           ((C102028 + C102027 + C102026) * C101464 +
            (C50894 * C2407 - C50895 * C2398 - C50894 * C2408 + C50889 * C2422 +
             C50896 * C2405 - C50897 * C2397 - C50896 * C2406 + C50890 * C2421 +
             C50898 * C2762 - C50899 * C2761 - C50898 * C2763 +
             C50891 * C2764) *
                C152231) *
               C152155 * C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152068 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152075 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C4719) *
              C151967 * C151944 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C152075 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C152068 -
           ((C113073 + C113074) * C6028 + (C113075 + C113076) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C4719) *
              C151967 * C151953 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C152068 -
           ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152075 +
           ((C65794 * C101464 + C65796 * C152231) * C6026 +
            (C65498 * C101464 + C65795 * C152231) * C6027 +
            (C65499 * C101464 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C6028) *
               C4719) *
              C151967 * C3528)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C4047 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152072) *
              C151967 * C152379 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152072 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C4047) *
              C151967 * C152372 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C4047 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C152072) *
              C151967 * C152355 +
          (((C102435 + C102436 + C102437) * C101464 +
            (C50894 * C549 - C50895 * C530 - C50894 * C550 + C50889 * C566 +
             C50896 * C553 - C50897 * C532 - C50896 * C554 + C50890 * C568 +
             C50898 * C557 - C50899 * C534 - C50898 * C558 + C50891 * C570) *
                C152231) *
               C152155 * C152072 -
           ((C102437 + C102436 + C102435) * C152231 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C101464) *
               C152155 * C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C4047 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C152373 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C4047) *
               C152357 +
           (((C51232 + C51231 + C51230) * C101464 +
             (C52882 + C52883 + C52884) * C152231) *
                C152155 * C4047 -
            ((C52885 + C52886 + C52887) * C152231 +
             (C52884 + C52883 + C52882) * C101464) *
                C152155 * C152072) *
               C152326) *
              C3181 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C4047) *
               C152373 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C4047 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152357 +
           (((C53413 + C53412 + C53411) * C101464 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C53411 + C53412 + C53413) * C152231 +
             (C51238 + C51237 + C51236) * C101464) *
                C152155 * C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C4047 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C151967 * C152379 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C110956 + C110957) * C6027 + C112025 * C6028) *
               C152072 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C4047) *
              C151967 * C152372 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C4047 -
           ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152072) *
              C151967 * C152355 +
          (((C66214 * C101464 + C66215 * C152231) * C6026 +
            (C66004 * C101464 + C66005 * C152231) * C6027 +
            (C93912 * C101464 + (C59421 * C1517 - C59422 * C1494 -
                                 C59421 * C1518 + C151908 * C1530) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C4047) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C4047 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152373 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             C112222 * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C4047) *
               C152357 +
           ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
                C4047 -
            ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
             C111528 * C6026) *
                C152072) *
               C152326) *
              C3181 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C4047) *
               C152373 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C4047 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C152357 +
           ((C112025 * C6026 + (C112027 + C112026) * C6027 +
             (C61138 * C101464 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
             C110050 * C6026) *
                C4047) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C152284 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152030) *
              C703 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152030 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152284) *
              C704 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C152284 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152030) *
              C705 +
          (((C51675 + C51676 + C51677) * C101464 +
            (C50894 * C1053 - C50895 * C1044 - C50894 * C1054 + C50889 * C1062 +
             C50896 * C1055 - C50897 * C1045 - C50896 * C1056 + C50890 * C1063 +
             C50898 * C1057 - C50899 * C1046 - C50898 * C1058 +
             C50891 * C1064) *
                C152231) *
               C152155 * C151985 * C152030 -
           ((C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569 +
             C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
             C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559) *
                C152231 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C101464) *
               C152155 * C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C1661 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C1662 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C1663 -
           ((C53626 + C53627 + C53628) * C152231 +
            (C52603 + C52602 + C52601) * C101464) *
               C152155 * C151985 * C152336) *
              C152270 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C1662 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C1661 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C1663 +
           ((C53102 + C53101 + C53100) * C101464 +
            (C50894 * C2005 - C50895 * C2000 - C50894 * C2006 + C50889 * C2012 +
             C50896 * C2007 - C50897 * C2001 - C50896 * C2008 + C50890 * C2013 +
             C50898 * C2009 - C50899 * C2002 - C50898 * C2010 +
             C50891 * C2014) *
                C152231) *
               C152155 * C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152284 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152030) *
              C703 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C152030 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152284) *
              C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152284 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152030) *
              C705 +
          (((C110464 + C110465) * C6026 + (C110466 + C110467) * C6027 +
            (C59962 * C101464 + (C59421 * C2009 - C59422 * C2002 -
                                 C59421 * C2010 + C151908 * C2014) *
                                    C152231) *
                C6028) *
               C151985 * C152030 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C151985 * C152284) *
              C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C1661 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C1662 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C151985 * C1663 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C151985 * C152336) *
              C152270 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            C111732 * C6028) *
               C151985 * C1662 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C1661 -
           ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
            C110050 * C6026) *
               C151985 * C1663 +
           (C111732 * C6026 + (C111734 + C111733) * C6027 +
            (C60936 * C101464 + (C59421 * C8803 - C59422 * C8800 -
                                 C59421 * C8804 + C151908 * C8806) *
                                    C152231) *
                C6028) *
               C151985 * C152336) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152285 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C152284 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152285) *
               C152030) *
              C323 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152285) *
               C152284 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152285 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C152030) *
              C324 +
          ((((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
              C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
              C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                 C101464 +
             (C102023 + C102024 + C102025) * C152231) *
                C152155 * C152285 -
            ((C102026 + C102027 + C102028) * C152231 +
             (C102025 + C102024 + C102023) * C101464) *
                C152155 * C152072) *
               C152284 +
           (((C52224 + C52223 + C52222) * C101464 +
             (C50894 * C1497 - C50895 * C1484 - C50894 * C1498 +
              C50889 * C1520 + C50896 * C1495 - C50897 * C1483 -
              C50896 * C1496 + C50890 * C1519 + C50898 * C2624 -
              C50899 * C2623 - C50898 * C2625 + C50891 * C2626) *
                 C152231) *
                C152155 * C152072 -
            ((C52222 + C52223 + C52224) * C152231 +
             (C51241 + C51240 + C51239) * C101464) *
                C152155 * C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152285 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152072) *
              C1661 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152072 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C152285) *
              C1662 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C152285 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C152072) *
              C1663 +
          (((C53628 + C53627 + C53626) * C101464 +
            (C50894 * C8005 - C50895 * C7998 - C50894 * C8006 + C50889 * C8016 +
             C50896 * C8003 - C50897 * C7997 - C50896 * C8004 + C50890 * C8015 +
             C50898 * C9696 - C50899 * C9695 - C50898 * C9697 +
             C50891 * C9698) *
                C152231) *
               C152155 * C152072 -
           ((C53626 + C53627 + C53628) * C152231 +
            (C52603 + C52602 + C52601) * C101464) *
               C152155 * C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152285 -
            ((C110952 + C110953) * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C152284 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             (C60344 * C101464 + C60792 * C152231) * C6028) *
                C152072 -
            ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152285) *
               C152030) *
              C323 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + (C110958 + C110959) * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152285) *
               C152284 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             (C110041 + C110042) * C6028) *
                C152285 -
            ((C61872 * C152231 + C60349 * C101464) * C6028 +
             (C110959 + C110958) * C6027 + (C110957 + C110956) * C6026) *
                C152072) *
               C152030) *
              C324 +
          (((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                  C101464 +
              C65793 * C152231) *
                 C6026 +
             (C110043 + C110044) * C6027 + C110051 * C6028) *
                C152285 -
            ((C110960 + C110961) * C6028 + (C110962 + C110963) * C6027 +
             (C65794 * C152231 + C65793 * C101464) * C6026) *
                C152072) *
               C152284 +
           (((C110963 + C110962) * C6026 + (C110961 + C110960) * C6027 +
             (C60350 * C101464 + (C59421 * C9696 - C59422 * C9695 -
                                  C59421 * C9697 + C151908 * C9698) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
             (C110044 + C110043) * C6026) *
                C152285) *
               C152030) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152285 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C1661 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            C112222 * C6028) *
               C152072 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C152285) *
              C1662 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C152285 -
           ((C112223 + C112224) * C6028 + (C111534 + C111533) * C6027 +
            C111528 * C6026) *
               C152072) *
              C1663 +
          ((C112222 * C6026 + (C112224 + C112223) * C6027 +
            (C61280 * C101464 + (C59421 * C60756 - C59422 * C60755 -
                                 C59421 * C60757 + C151908 * C60758) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
            C111304 * C6026) *
               C152285) *
              C152336) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152357 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152326) *
              C323 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152357 -
           ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
                C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152373 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152357 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
            C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
            C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
               C152231) *
              C152155 * C151985 * C151967 * C129 -
          ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
            C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
            C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
               C152231 +
           (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
            C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
            C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
               C101464) *
              C152155 * C151985 * C151967 * C130 +
          ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
            C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
            C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
               C101464 +
           (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
            C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
            C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
               C152231) *
              C152155 * C151985 * C151967 * C131 -
          ((C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569 +
            C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
            C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559) *
               C152231 +
           (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
            C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
            C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
               C101464) *
              C152155 * C151985 * C151967 * C132 +
          ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
            C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
            C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
               C101464 +
           (C50894 * C551 - C50895 * C531 - C50894 * C552 + C50889 * C567 +
            C50896 * C555 - C50897 * C533 - C50896 * C556 + C50890 * C569 +
            C50898 * C844 - C50899 * C843 - C50898 * C845 + C50891 * C846) *
               C152231) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152374 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152359 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50898 * C2407 - C50899 * C2398 - C50898 * C2408 +
             C50891 * C2422) *
                C152231) *
               C152155 * C152329) *
              C151967 * C323 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152359 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C152374 -
           ((C50898 * C2405 - C50899 * C2397 - C50898 * C2406 + C50891 * C2421 +
             C50896 * C2407 - C50897 * C2398 - C50896 * C2408 + C50890 * C2422 +
             C50894 * C2409 - C50895 * C2399 - C50894 * C2410 +
             C50889 * C2423) *
                C152231 +
            (C102022 + C102021 + C102020) * C101464) *
               C152155 * C152329) *
              C151967 * C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C152374 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C152359 +
           ((C102028 + C102027 + C102026) * C101464 +
            (C50894 * C2407 - C50895 * C2398 - C50894 * C2408 + C50889 * C2422 +
             C50896 * C2405 - C50897 * C2397 - C50896 * C2406 + C50890 * C2421 +
             C50898 * C2762 - C50899 * C2761 - C50898 * C2763 +
             C50891 * C2764) *
                C152231) *
               C152155 * C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C1212 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C1211 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C102011 + C102012 + C102013) * C152231) *
              C152155 * C151985 * C1299 -
          ((C52216 + C52217 + C52218) * C152231 +
           (C51229 + C51228 + C51227) * C101464) *
              C152155 * C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C101464 +
           (C52882 + C52883 + C52884) * C152231) *
              C152155 * C151985 * C1301 -
          ((C53626 + C53627 + C53628) * C152231 +
           (C52603 + C52602 + C52601) * C101464) *
              C152155 * C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C101464 +
           (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
            C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
            C50898 * C8586 - C50899 * C8585 - C50898 * C8587 + C50891 * C8588) *
               C152231) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152374 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152359 +
           ((C102016 + C102015 + C102014) * C101464 +
            (C50894 * C2411 - C50895 * C2400 - C50894 * C2412 + C50889 * C2424 +
             C50896 * C2409 - C50897 * C2399 - C50896 * C2410 + C50890 * C2423 +
             C50898 * C2407 - C50899 * C2398 - C50898 * C2408 +
             C50891 * C2422) *
                C152231) *
               C152155 * C152329) *
              C1211 +
          (((C52218 + C52217 + C52216) * C101464 +
            (C52879 + C52880 + C52881) * C152231) *
               C152155 * C152359 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C152374 -
           ((C54904 + C54905 + C54906) * C152231 +
            (C52881 + C52880 + C52879) * C101464) *
               C152155 * C152329) *
              C1212 +
          (((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C152374 -
           ((C52885 + C52886 + C52887) * C152231 +
            (C52884 + C52883 + C52882) * C101464) *
               C152155 * C152359 +
           ((C52887 + C52886 + C52885) * C101464 +
            (C50894 * C9389 - C50895 * C9382 - C50894 * C9390 + C50889 * C9400 +
             C50896 * C9387 - C50897 * C9381 - C50896 * C9388 + C50890 * C9399 +
             C50898 * C9922 - C50899 * C9921 - C50898 * C9923 +
             C50891 * C9924) *
                C152231) *
               C152155 * C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C59642 * C101464 + C60346 * C152231) * C6027 +
           (C59643 * C101464 + C60345 * C152231) * C6028) *
              C151985 * C151967 * C129 -
          ((C60348 * C152231 + C59647 * C101464) * C6028 +
           (C60347 * C152231 + C59646 * C101464) * C6027 +
           (C65789 * C152231 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C101464) *
               C6026) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C101464 +
            C65793 * C152231) *
               C6026 +
           (C59650 * C101464 + C60352 * C152231) * C6027 +
           (C59651 * C101464 + C60351 * C152231) * C6028) *
              C151985 * C151967 * C131 -
          ((C93912 * C152231 + C59961 * C101464) * C6028 +
           (C66004 * C152231 + C59960 * C101464) * C6027 +
           (C66214 * C152231 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C101464) *
               C6026) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C101464 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152231) *
               C6026 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C101464 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152231) *
               C6027 +
           ((C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
                C101464 +
            (C59421 * C1866 - C59422 * C1865 - C59421 * C1867 +
             C151908 * C1868) *
                C152231) *
               C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152373 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152357 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C323 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C152357 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152373 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152373 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152357 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152374 -
           ((C60791 * C152231 + C60345 * C101464) * C6028 +
            (C60790 * C152231 + C60346 * C101464) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152359 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C60790 * C101464 + C62162 * C152231) * C6027 +
            (C60791 * C101464 + C62161 * C152231) * C6028) *
               C152329) *
              C151967 * C323 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C60347 * C101464 + C61874 * C152231) * C6027 +
            (C60348 * C101464 + C61873 * C152231) * C6028) *
               C152359 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C152374 -
           ((C67597 * C152231 + C61873 * C101464) * C6028 +
            (C65792 * C152231 + C61874 * C101464) * C6027 +
            (C65791 * C152231 + C65790 * C101464) * C6026) *
               C152329) *
              C151967 * C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C152374 -
           ((C65499 * C152231 + C60351 * C101464) * C6028 +
            (C65498 * C152231 + C60352 * C101464) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152359 +
           ((C65794 * C101464 + C65796 * C152231) * C6026 +
            (C65498 * C101464 + C65795 * C152231) * C6027 +
            (C65499 * C101464 + (C59421 * C9922 - C59422 * C9921 -
                                 C59421 * C9923 + C151908 * C9924) *
                                    C152231) *
                C6028) *
               C152329) *
              C151967 * C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C1211 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C1212 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C1212 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C1211 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C1211 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C1212 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C110031 + C110032) * C6027 + C110049 * C6028) *
              C151985 * C1299 -
          (C111304 * C6028 + (C110034 + C110033) * C6027 +
           (C110032 + C110031) * C6026) *
              C151985 * C1300 +
          (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
              C151985 * C1301 -
          ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
           C111304 * C6026) *
              C151985 * C1302 +
          (C111309 * C6026 + (C111308 + C111307) * C6027 +
           (C60607 * C101464 + (C59421 * C61270 - C59422 * C61269 -
                                C59421 * C61271 + C151908 * C61272) *
                                   C152231) *
               C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152374 -
           (C111528 * C6028 + (C110954 + C110955) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152359 +
           ((C65787 * C101464 + C65788 * C152231) * C6026 +
            (C111529 + C111530) * C6027 + C111537 * C6028) *
               C152329) *
              C1211 +
          (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
            (C111533 + C111534) * C6028) *
               C152359 -
           (C111304 * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C152374 -
           ((C111535 + C111536) * C6028 + (C111532 + C111531) * C6027 +
            (C111530 + C111529) * C6026) *
               C152329) *
              C1212 +
          ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
               C152374 -
           ((C60794 * C152231 + C60793 * C101464) * C6028 +
            (C111534 + C111533) * C6027 + C111528 * C6026) *
               C152359 +
           (C111537 * C6026 + (C111536 + C111535) * C6027 +
            (C60794 * C101464 + (C59421 * C62138 - C59422 * C62137 -
                                 C59421 * C62139 + C151908 * C62140) *
                                    C152231) *
                C6028) *
               C152329) *
              C152326) *
         C151939) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C152285 -
           ((C102014 + C102015 + C102016) * C152231 +
            (C102013 + C102012 + C102011) * C101464) *
               C152155 * C152072) *
              C151967 * C703 +
          (((C102017 + C102018 + C102019) * C101464 +
            (C102020 + C102021 + C102022) * C152231) *
               C152155 * C152072 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C152285) *
              C151967 * C704 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C152285 -
           ((C102026 + C102027 + C102028) * C152231 +
            (C102025 + C102024 + C102023) * C101464) *
               C152155 * C152072) *
              C151967 * C705 +
          (((C102435 + C102436 + C102437) * C101464 +
            (C50894 * C549 - C50895 * C530 - C50894 * C550 + C50889 * C566 +
             C50896 * C553 - C50897 * C532 - C50896 * C554 + C50890 * C568 +
             C50898 * C557 - C50899 * C534 - C50898 * C558 + C50891 * C570) *
                C152231) *
               C152155 * C152072 -
           ((C102437 + C102436 + C102435) * C152231 +
            (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
             C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
             C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
                C101464) *
               C152155 * C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
              C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
              C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                 C101464 +
             (C102011 + C102012 + C102013) * C152231) *
                C152155 * C152285 -
            ((C102014 + C102015 + C102016) * C152231 +
             (C102013 + C102012 + C102011) * C101464) *
                C152155 * C152072) *
               C1211 +
           (((C52218 + C52217 + C52216) * C101464 +
             (C52879 + C52880 + C52881) * C152231) *
                C152155 * C152072 -
            ((C52216 + C52217 + C52218) * C152231 +
             (C51229 + C51228 + C51227) * C101464) *
                C152155 * C152285) *
               C1212 +
           (((C51232 + C51231 + C51230) * C101464 +
             (C52882 + C52883 + C52884) * C152231) *
                C152155 * C152285 -
            ((C52885 + C52886 + C52887) * C152231 +
             (C52884 + C52883 + C52882) * C101464) *
                C152155 * C152072) *
               C152326) *
              C152270 +
          ((((C102017 + C102018 + C102019) * C101464 +
             (C102020 + C102021 + C102022) * C152231) *
                C152155 * C152072 -
            ((C102019 + C102018 + C102017) * C152231 +
             (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
              C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
              C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                 C101464) *
                C152155 * C152285) *
               C1211 +
           (((C51233 + C51234 + C51235) * C101464 +
             (C52219 + C52220 + C52221) * C152231) *
                C152155 * C152285 -
            ((C54495 + C54496 + C54497) * C152231 +
             (C52221 + C52220 + C52219) * C101464) *
                C152155 * C152072) *
               C1212 +
           (((C53413 + C53412 + C53411) * C101464 +
             (C50894 * C1513 - C50895 * C1492 - C50894 * C1514 +
              C50889 * C1528 + C50896 * C1515 - C50897 * C1493 -
              C50896 * C1516 + C50890 * C1529 + C50898 * C1517 -
              C50899 * C1494 - C50898 * C1518 + C50891 * C1530) *
                 C152231) *
                C152155 * C152072 -
            ((C53411 + C53412 + C53413) * C152231 +
             (C51238 + C51237 + C51236) * C101464) *
                C152155 * C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C152285 -
           ((C60791 * C152231 + C60345 * C101464) * C6028 +
            (C60790 * C152231 + C60346 * C101464) * C6027 +
            (C65787 * C152231 + C65786 * C101464) * C6026) *
               C152072) *
              C151967 * C703 +
          (((C65789 * C101464 + C65790 * C152231) * C6026 +
            (C60347 * C101464 + C61874 * C152231) * C6027 +
            (C60348 * C101464 + C61873 * C152231) * C6028) *
               C152072 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C152285) *
              C151967 * C704 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C152285 -
           ((C65499 * C152231 + C60351 * C101464) * C6028 +
            (C65498 * C152231 + C60352 * C101464) * C6027 +
            (C65794 * C152231 + C65793 * C101464) * C6026) *
               C152072) *
              C151967 * C705 +
          (((C66214 * C101464 + C66215 * C152231) * C6026 +
            (C66004 * C101464 + C66005 * C152231) * C6027 +
            (C93912 * C101464 + (C59421 * C1517 - C59422 * C1494 -
                                 C59421 * C1518 + C151908 * C1530) *
                                    C152231) *
                C6028) *
               C152072 -
           ((C110467 + C110466) * C6028 + (C110465 + C110464) * C6027 +
            (C66214 * C152231 +
             (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                 C101464) *
                C6026) *
               C152285) *
              C151967 * C152330)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                  C101464 +
              C65786 * C152231) *
                 C6026 +
             (C110031 + C110032) * C6027 + C110049 * C6028) *
                C152285 -
            (C111528 * C6028 + (C110954 + C110955) * C6027 +
             (C65787 * C152231 + C65786 * C101464) * C6026) *
                C152072) *
               C1211 +
           (((C110955 + C110954) * C6026 + (C110953 + C110952) * C6027 +
             (C111533 + C111534) * C6028) *
                C152072 -
            (C111304 * C6028 + (C110034 + C110033) * C6027 +
             (C110032 + C110031) * C6026) *
                C152285) *
               C1212 +
           ((C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
                C152285 -
            ((C60794 * C152231 + C60793 * C101464) * C6028 +
             (C111534 + C111533) * C6027 + C111528 * C6026) *
                C152072) *
               C152326) *
              C152270 +
          ((((C65789 * C101464 + C65790 * C152231) * C6026 +
             (C110956 + C110957) * C6027 + C112025 * C6028) *
                C152072 -
            (C110050 * C6028 + (C110038 + C110037) * C6027 +
             (C65789 * C152231 +
              (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                  C101464) *
                 C6026) *
                C152285) *
               C1211 +
           (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
             C111732 * C6028) *
                C152285 -
            ((C112026 + C112027) * C6028 + (C110959 + C110958) * C6027 +
             (C110957 + C110956) * C6026) *
                C152072) *
               C1212 +
           ((C112025 * C6026 + (C112027 + C112026) * C6027 +
             (C61138 * C101464 + (C59421 * C8013 - C59422 * C8002 -
                                  C59421 * C8014 + C151908 * C8020) *
                                     C152231) *
                 C6028) *
                C152072 -
            ((C111733 + C111734) * C6028 + (C110042 + C110041) * C6027 +
             C110050 * C6026) *
                C152285) *
               C152326) *
              C151950)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
            C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
            C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
               C152231) *
              C152155 * C151985 * C151967 * C129 -
          ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
            C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
            C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
               C152231 +
           (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
            C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
            C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
               C101464) *
              C152155 * C151985 * C151967 * C130 +
          ((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
            C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
            C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
               C101464 +
           (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
            C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
            C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
               C152231) *
              C152155 * C151985 * C151967 * C131 -
          ((C50898 * C555 - C50899 * C533 - C50898 * C556 + C50891 * C569 +
            C50896 * C551 - C50897 * C531 - C50896 * C552 + C50890 * C567 +
            C50894 * C535 - C50895 * C523 - C50894 * C536 + C50889 * C559) *
               C152231 +
           (C50898 * C160 - C50899 * C147 - C50898 * C161 + C50891 * C171 +
            C50896 * C158 - C50897 * C146 - C50896 * C159 + C50890 * C170 +
            C50894 * C156 - C50895 * C145 - C50894 * C157 + C50889 * C169) *
               C101464) *
              C152155 * C151985 * C151967 * C132 +
          ((C50894 * C158 - C50895 * C146 - C50894 * C159 + C50889 * C170 +
            C50896 * C160 - C50897 * C147 - C50896 * C161 + C50890 * C171 +
            C50898 * C162 - C50899 * C148 - C50898 * C163 + C50891 * C172) *
               C101464 +
           (C50894 * C551 - C50895 * C531 - C50894 * C552 + C50889 * C567 +
            C50896 * C555 - C50897 * C533 - C50896 * C556 + C50890 * C569 +
            C50898 * C844 - C50899 * C843 - C50898 * C845 + C50891 * C846) *
               C152231) *
              C152155 * C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C50894 * C541 - C50895 * C526 - C50894 * C542 + C50889 * C562 +
             C50896 * C539 - C50897 * C525 - C50896 * C540 + C50890 * C561 +
             C50898 * C537 - C50899 * C524 - C50898 * C538 + C50891 * C560) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C152357 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152326) *
              C323 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C152357 -
           ((C50898 * C535 - C50899 * C523 - C50898 * C536 + C50891 * C559 +
             C50896 * C537 - C50897 * C524 - C50896 * C538 + C50890 * C560 +
             C50894 * C539 - C50895 * C525 - C50894 * C540 + C50889 * C561) *
                C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C152373 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152326) *
              C324 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C50894 * C537 - C50895 * C524 - C50894 * C538 + C50889 * C560 +
             C50896 * C535 - C50897 * C523 - C50896 * C536 + C50890 * C559 +
             C50898 * C551 - C50899 * C531 - C50898 * C552 + C50891 * C567) *
                C152231) *
               C152155 * C151985 * C152373 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C152357 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
             C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
             C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
                C101464 +
            (C102011 + C102012 + C102013) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52216 + C52217 + C52218) * C152231 +
            (C51229 + C51228 + C51227) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51232 + C51231 + C51230) * C101464 +
            (C52882 + C52883 + C52884) * C152231) *
               C152155 * C151985 * C152326) *
              C152370 +
          (((C51233 + C51234 + C51235) * C101464 +
            (C52219 + C52220 + C52221) * C152231) *
               C152155 * C151985 * C1212 -
           ((C102019 + C102018 + C102017) * C152231 +
            (C50898 * C156 - C50899 * C145 - C50898 * C157 + C50891 * C169 +
             C50896 * C154 - C50897 * C144 - C50896 * C155 + C50890 * C168 +
             C50894 * C152 - C50895 * C143 - C50894 * C153 + C50889 * C167) *
                C101464) *
               C152155 * C151985 * C1211 -
           ((C53411 + C53412 + C53413) * C152231 +
            (C51238 + C51237 + C51236) * C101464) *
               C152155 * C151985 * C152326) *
              C152353 +
          (((C50894 * C154 - C50895 * C144 - C50894 * C155 + C50889 * C168 +
             C50896 * C156 - C50897 * C145 - C50896 * C157 + C50890 * C169 +
             C50898 * C158 - C50899 * C146 - C50898 * C159 + C50891 * C170) *
                C101464 +
            (C102023 + C102024 + C102025) * C152231) *
               C152155 * C151985 * C1211 -
           ((C52222 + C52223 + C52224) * C152231 +
            (C51241 + C51240 + C51239) * C101464) *
               C152155 * C151985 * C1212 +
           ((C51244 + C51243 + C51242) * C101464 +
            (C50894 * C1505 - C50895 * C1488 - C50894 * C1506 + C50889 * C1524 +
             C50896 * C1503 - C50897 * C1487 - C50896 * C1504 + C50890 * C1523 +
             C50898 * C1866 - C50899 * C1865 - C50898 * C1867 +
             C50891 * C1868) *
                C152231) *
               C152155 * C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C50894 * C150 - C50895 * C142 - C50894 * C151 + C50889 * C166 +
            C50896 * C152 - C50897 * C143 - C50896 * C153 + C50890 * C167 +
            C50898 * C154 - C50899 * C144 - C50898 * C155 + C50891 * C168) *
               C101464 +
           (C102011 + C102012 + C102013) * C152231) *
              C152155 * C151985 * C1299 -
          ((C52216 + C52217 + C52218) * C152231 +
           (C51229 + C51228 + C51227) * C101464) *
              C152155 * C151985 * C1300 +
          ((C51232 + C51231 + C51230) * C101464 +
           (C52882 + C52883 + C52884) * C152231) *
              C152155 * C151985 * C1301 -
          ((C53626 + C53627 + C53628) * C152231 +
           (C52603 + C52602 + C52601) * C101464) *
              C152155 * C151985 * C1302 +
          ((C52606 + C52605 + C52604) * C101464 +
           (C50894 * C8009 - C50895 * C8000 - C50894 * C8010 + C50889 * C8018 +
            C50896 * C8007 - C50897 * C7999 - C50896 * C8008 + C50890 * C8017 +
            C50898 * C8586 - C50899 * C8585 - C50898 * C8587 + C50891 * C8588) *
               C152231) *
              C152155 * C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C59642 * C101464 + C60346 * C152231) * C6027 +
           (C59643 * C101464 + C60345 * C152231) * C6028) *
              C151985 * C151967 * C129 -
          ((C60348 * C152231 + C59647 * C101464) * C6028 +
           (C60347 * C152231 + C59646 * C101464) * C6027 +
           (C65789 * C152231 +
            (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                C101464) *
               C6026) *
              C151985 * C151967 * C130 +
          (((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                C101464 +
            C65793 * C152231) *
               C6026 +
           (C59650 * C101464 + C60352 * C152231) * C6027 +
           (C59651 * C101464 + C60351 * C152231) * C6028) *
              C151985 * C151967 * C131 -
          ((C93912 * C152231 + C59961 * C101464) * C6028 +
           (C66004 * C152231 + C59960 * C101464) * C6027 +
           (C66214 * C152231 +
            (C59421 * C156 - C59422 * C145 - C59421 * C157 + C151908 * C169) *
                C101464) *
               C6026) *
              C151985 * C151967 * C132 +
          (((C59421 * C158 - C59422 * C146 - C59421 * C159 + C151908 * C170) *
                C101464 +
            (C59421 * C551 - C59422 * C531 - C59421 * C552 + C151908 * C567) *
                C152231) *
               C6026 +
           ((C59421 * C354 - C59422 * C334 - C59421 * C355 + C151908 * C370) *
                C101464 +
            (C59421 * C1055 - C59422 * C1045 - C59421 * C1056 +
             C151908 * C1063) *
                C152231) *
               C6027 +
           ((C59421 * C356 - C59422 * C335 - C59421 * C357 + C151908 * C371) *
                C101464 +
            (C59421 * C1866 - C59422 * C1865 - C59421 * C1867 +
             C151908 * C1868) *
                C152231) *
               C6028) *
              C151985 * C151967 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C152373 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C152357 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C323 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C152357 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C152373 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C324 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C152373 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C152357 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                 C101464 +
             C65786 * C152231) *
                C6026 +
            (C110031 + C110032) * C6027 + C110049 * C6028) *
               C151985 * C1211 -
           ((C110035 + C110036) * C6028 + (C110034 + C110033) * C6027 +
            (C110032 + C110031) * C6026) *
               C151985 * C1212 +
           (C110049 * C6026 + (C110036 + C110035) * C6027 +
            (C59645 * C101464 + C60793 * C152231) * C6028) *
               C151985 * C152326) *
              C152370 +
          (((C110037 + C110038) * C6026 + (C110039 + C110040) * C6027 +
            (C110041 + C110042) * C6028) *
               C151985 * C1212 -
           (C110050 * C6028 + (C110038 + C110037) * C6027 +
            (C65789 * C152231 +
             (C59421 * C152 - C59422 * C143 - C59421 * C153 + C151908 * C167) *
                 C101464) *
                C6026) *
               C151985 * C1211 -
           ((C61138 * C152231 + C59649 * C101464) * C6028 +
            (C110042 + C110041) * C6027 + C110050 * C6026) *
               C151985 * C152326) *
              C152353 +
          ((((C59421 * C154 - C59422 * C144 - C59421 * C155 + C151908 * C168) *
                 C101464 +
             C65793 * C152231) *
                C6026 +
            (C110043 + C110044) * C6027 + C110051 * C6028) *
               C151985 * C1211 -
           ((C110047 + C110048) * C6028 + (C110046 + C110045) * C6027 +
            (C110044 + C110043) * C6026) *
               C151985 * C1212 +
           (C110051 * C6026 + (C110048 + C110047) * C6027 +
            (C59653 * C101464 + (C59421 * C8586 - C59422 * C8585 -
                                 C59421 * C8587 + C151908 * C8588) *
                                    C152231) *
                C6028) *
               C151985 * C152326) *
              C152320)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C59421 * C150 - C59422 * C142 - C59421 * C151 + C151908 * C166) *
                C101464 +
            C65786 * C152231) *
               C6026 +
           (C110031 + C110032) * C6027 + C110049 * C6028) *
              C151985 * C1299 -
          (C111304 * C6028 + (C110034 + C110033) * C6027 +
           (C110032 + C110031) * C6026) *
              C151985 * C1300 +
          (C110049 * C6026 + (C110036 + C110035) * C6027 + C111309 * C6028) *
              C151985 * C1301 -
          ((C111307 + C111308) * C6028 + (C111306 + C111305) * C6027 +
           C111304 * C6026) *
              C151985 * C1302 +
          (C111309 * C6026 + (C111308 + C111307) * C6027 +
           (C60607 * C101464 + (C59421 * C61270 - C59422 * C61269 -
                                C59421 * C61271 + C151908 * C61272) *
                                   C152231) *
               C6028) *
              C151985 * C1303) *
         C151939) /
            (p * q * std::sqrt(p + q));
}
