/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pddd_AB_yy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1222_12_22(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C150608 = ae + be;
    const double C150607 = ae * be;
    const double C150606 = yA - yB;
    const double C150615 = 0 * be;
    const double C150664 = 0 * ae;
    const double C150659 = 0 * be;
    const double C150713 = p + q;
    const double C150712 = p * q;
    const double C150719 = bs[3];
    const double C150718 = yP - yQ;
    const double C150726 = bs[4];
    const double C150724 = xP - xQ;
    const double C150734 = bs[5];
    const double C150743 = bs[6];
    const double C150754 = bs[7];
    const double C150769 = bs[8];
    const double C150793 = bs[2];
    const double C150928 = zP - zQ;
    const double C136 = bs[0];
    const double C152077 = xA - xB;
    const double C152104 = ce + de;
    const double C152103 = ce * de;
    const double C152102 = xC - xD;
    const double C152136 = yC - yD;
    const double C152154 = zC - zD;
    const double C152335 = zA - zB;
    const double C150616 = std::pow(C150608, 2);
    const double C150660 = 2 * C150608;
    const double C150623 = 2 * C150607;
    const double C150617 = C150607 * C150606;
    const double C152320 = std::pow(C150606, 2);
    const double C152372 = C150606 * be;
    const double C152371 = C150606 * ae;
    const double C150661 = C150606 * C150615;
    const double C150679 = -2 * C150615;
    const double C150669 = C150664 / C150608;
    const double C150714 = 2 * C150712;
    const double C150721 = std::pow(C150718, 2);
    const double C150784 = C150718 * ae;
    const double C150783 = C150718 * be;
    const double C150736 = std::pow(C150724, 2);
    const double C151060 = std::pow(C150928, 2);
    const double C152080 = C152077 * be;
    const double C152079 = C152077 * ae;
    const double C152078 = std::pow(C152077, 2);
    const double C152108 = 2 * C152104;
    const double C152107 = std::pow(C152104, 2);
    const double C152109 = C152102 * de;
    const double C152106 = C152102 * ce;
    const double C152105 = std::pow(C152102, 2);
    const double C152137 = std::pow(C152136, 2);
    const double C152196 = C152136 * de;
    const double C152194 = C152136 * ce;
    const double C152155 = std::pow(C152154, 2);
    const double C152238 = C152154 * de;
    const double C152236 = C152154 * ce;
    const double C152336 = std::pow(C152335, 2);
    const double C152400 = C152335 * be;
    const double C152399 = C152335 * ae;
    const double C150618 = 2 * C150616;
    const double C152440 = 4 * C150616;
    const double C150678 = C150616 * C150660;
    const double C152088 = std::pow(C150660, -1);
    const double C152472 = std::pow(C150660, -2);
    const double C152321 = C152320 * C150607;
    const double C150666 = C150661 / C150608;
    const double C150682 = ae * C150679;
    const double C150716 = C150714 / C150713;
    const double C160 =
        ((std::pow(yP - yQ, 2) * bs[2] * std::pow(C150714 / C150713, 2) -
          (bs[1] * C150714) / C150713) *
         C150607) /
        C150616;
    const double C137 = -(C150724 * bs[1] * C150714) / C150713;
    const double C365 = -(C150718 * bs[1] * C150714) / C150713;
    const double C618 = -(C150928 * bs[1] * C150714) / C150713;
    const double C150728 = C150721 * C150726;
    const double C150737 = C150721 * C150734;
    const double C150745 = C150721 * C150743;
    const double C150757 = C150721 * C150754;
    const double C150772 = C150721 * C150769;
    const double C150786 = C150726 * C150784;
    const double C150797 = C150719 * C150784;
    const double C150807 = C150734 * C150784;
    const double C150821 = C150743 * C150784;
    const double C150848 = C150754 * C150784;
    const double C150884 = C150769 * C150784;
    const double C145 = (-(bs[1] * C150784 * C150714) / C150713) / C150608;
    const double C150785 = C150726 * C150783;
    const double C150796 = C150719 * C150783;
    const double C150805 = C150734 * C150783;
    const double C150817 = C150743 * C150783;
    const double C150842 = C150754 * C150783;
    const double C150876 = C150769 * C150783;
    const double C144 = (-(bs[1] * C150783 * C150714) / C150713) / C150608;
    const double C152081 = C152078 * C150607;
    const double C152121 = std::pow(C152108, -1);
    const double C152448 = std::pow(C152108, -2);
    const double C152122 = 2 * C152107;
    const double C152452 = C152107 * C152108;
    const double C152451 = 4 * C152107;
    const double C152441 = std::pow(C152106, 2);
    const double C152110 = C152105 * C152103;
    const double C152138 = C152137 * C152103;
    const double C152453 = std::pow(C152194, 2);
    const double C152156 = C152155 * C152103;
    const double C152455 = std::pow(C152236, 2);
    const double C152337 = C152336 * C150607;
    const double C150663 = C150615 / C150618;
    const double C150667 = C150659 / C150618;
    const double C152322 = C152321 / C150608;
    const double C150670 = 0 - C150666;
    const double C150720 = -C150716;
    const double C150727 = std::pow(C150716, 4);
    const double C150744 = std::pow(C150716, 6);
    const double C150770 = std::pow(C150716, 8);
    const double C150792 = std::pow(C150716, 2);
    const double C161 =
        ((xP - xQ) *
         (bs[2] * std::pow(C150716, 2) +
          std::pow(yP - yQ, 2) * bs[3] * std::pow(-C150716, 3)) *
         C150607) /
        C150616;
    const double C152082 = C152081 / C150608;
    const double C152496 = 4 * C152452;
    const double C152495 = C152104 * C152451;
    const double C152111 = C152110 / C152104;
    const double C152139 = C152138 / C152104;
    const double C152157 = C152156 / C152104;
    const double C152338 = C152337 / C150608;
    const double C152323 = -C152322;
    const double C150673 = C150670 * ae;
    const double C150722 = std::pow(C150720, 3);
    const double C150735 = std::pow(C150720, 5);
    const double C150755 = std::pow(C150720, 7);
    const double C150729 = C150728 * C150727;
    const double C150733 = C150726 * C150727;
    const double C150788 = C150727 * C150786;
    const double C150787 = C150727 * C150785;
    const double C150746 = C150745 * C150744;
    const double C150753 = C150743 * C150744;
    const double C150827 = C150744 * C150821;
    const double C150823 = C150744 * C150817;
    const double C150773 = C150772 * C150770;
    const double C150890 = C150770 * C150884;
    const double C150886 = C150770 * C150876;
    const double C150795 = C150793 * C150792;
    const double C146 = (C150724 * C150792 * C150793 * C150783) / C150608;
    const double C147 = (C150724 * C150792 * C150793 * C150784) / C150608;
    const double C380 = (C150718 * C150792 * C150793 * C150783) / C150608 -
                        (be * bs[1] * C150714) / (C150713 * C150608);
    const double C381 = (C150718 * C150792 * C150793 * C150784) / C150608 -
                        (ae * bs[1] * C150714) / (C150713 * C150608);
    const double C633 = (C150928 * C150792 * C150793 * C150783) / C150608;
    const double C634 = (C150928 * C150792 * C150793 * C150784) / C150608;
    const double C152083 = -C152082;
    const double C152112 = -C152111;
    const double C152140 = -C152139;
    const double C152158 = -C152157;
    const double C152339 = -C152338;
    const double C152324 = std::exp(C152323);
    const double C150674 = C150673 / C150608;
    const double C150725 = C150719 * C150722;
    const double C150799 = C150722 * C150797;
    const double C150798 = C150722 * C150796;
    const double C162 =
        ((bs[2] * std::pow(C150716, 2) + C150721 * C150719 * C150722) *
             C150607 +
         (C150719 * C150722 + C150721 * bs[4] * std::pow(C150716, 4)) *
             C150607 * std::pow(xP - xQ, 2)) /
        C150616;
    const double C401 =
        (ae * C150792 * C150793 * C150783 + be * C150792 * C150793 * C150784 +
         C150718 * (C150793 * C150792 + C150721 * C150719 * C150722) *
             C150607) /
        C150616;
    const double C150738 = C150737 * C150735;
    const double C150742 = C150734 * C150735;
    const double C150810 = C150735 * C150807;
    const double C150808 = C150735 * C150805;
    const double C150758 = C150757 * C150755;
    const double C150768 = C150754 * C150755;
    const double C150854 = C150755 * C150848;
    const double C150850 = C150755 * C150842;
    const double C150806 = C150733 * C150736;
    const double C150818 = C150724 * C150733;
    const double C150976 = C150733 * ae;
    const double C150974 = C150733 * C150721;
    const double C150973 = C150718 * C150733;
    const double C150972 = C150733 * be;
    const double C152022 = C150733 * C151060;
    const double C152025 = C150928 * C150733;
    const double C150803 = C150724 * C150788;
    const double C150963 = C150718 * C150788;
    const double C150969 = be * C150788;
    const double C150801 = C150724 * C150787;
    const double C150960 = C150718 * C150787;
    const double C150968 = ae * C150787;
    const double C150845 = C150753 * C150736;
    const double C150879 = C150724 * C150753;
    const double C151207 = C150753 * ae;
    const double C151201 = C150753 * C150721;
    const double C151200 = C150718 * C150753;
    const double C151199 = C150753 * be;
    const double C152066 = C150753 * C151060;
    const double C150830 = C150827 * C150736;
    const double C150847 = C150724 * C150827;
    const double C151158 = C150718 * C150827;
    const double C151194 = be * C150827;
    const double C151341 = C150827 * C151060;
    const double C151418 = C150928 * C150827;
    const double C150828 = C150823 * C150736;
    const double C150841 = C150724 * C150823;
    const double C151152 = C150718 * C150823;
    const double C151193 = ae * C150823;
    const double C151340 = C150823 * C151060;
    const double C151417 = C150928 * C150823;
    const double C150893 = C150890 * C150736;
    const double C151266 = C150724 * C150890;
    const double C151499 = C150718 * C150890;
    const double C150891 = C150886 * C150736;
    const double C151260 = C150724 * C150886;
    const double C151489 = C150718 * C150886;
    const double C654 =
        ((zP - zQ) * (C150795 + C150721 * C150719 * C150722) * C150607) /
        C150616;
    const double C138 = C150795 * C150736 - (bs[1] * C150714) / C150713;
    const double C364 = C150718 * C150724 * C150795;
    const double C366 = C150795 * C150721 - (bs[1] * C150714) / C150713;
    const double C617 = C150928 * C150724 * C150795;
    const double C619 = C150795 * C151060 - (bs[1] * C150714) / C150713;
    const double C1203 = C150928 * C150718 * C150795;
    const double C152084 = std::exp(C152083);
    const double C152113 = std::exp(C152112);
    const double C152141 = std::exp(C152140);
    const double C152159 = std::exp(C152158);
    const double C152340 = std::exp(C152339);
    const double C172 = C152324 * C161;
    const double C150619 = C150617 * C152324;
    const double C134 = -(2 * ae * be * (yA - yB) * C152324) / (ae + be);
    const double C135 =
        -((C152324 - (C150606 * 2 * C150607 * C150606 * C152324) / C150608) *
          2 * C150607) /
        C150608;
    const double C152373 = C152324 * C152371;
    const double C152376 = C152088 * C152324;
    const double C152476 = C152324 * C152372;
    const double C152471 = C152324 / C150660;
    const double C6300 = C152472 * C152324;
    const double C150675 = C150674 - C150667;
    const double C150730 = C150725 + C150729;
    const double C150802 = C150724 * C150725;
    const double C150964 = C150725 * ae;
    const double C150962 = C150718 * C150725;
    const double C150961 = C150725 * be;
    const double C139 =
        2 * C150724 * C150795 + C150724 * (C150795 + C150725 * C150736);
    const double C363 = C150718 * (C150795 + C150725 * C150736);
    const double C616 = C150928 * (C150795 + C150725 * C150736);
    const double C1498 =
        2 * C150718 * C150795 + C150718 * (C150795 + C150725 * C150721);
    const double C1680 = C150928 * (C150795 + C150725 * C150721);
    const double C2632 =
        2 * C150928 * C150795 + C150928 * (C150795 + C150725 * C151060);
    const double C2633 = 3 * (C150795 + C150725 * C151060) +
                         C150928 * (2 * C150928 * C150725 +
                                    C150928 * (C150725 + C150733 * C151060));
    const double C149 =
        (C150792 * C150793 * C150784 + C150799 * C150736) / C150608;
    const double C151 =
        (2 * C150724 * C150799 + C150724 * (C150799 + C150788 * C150736)) /
        C150608;
    const double C377 = (C150718 * (C150799 + C150788 * C150736) +
                         (C150795 + C150725 * C150736) * ae) /
                        C150608;
    const double C379 =
        (C150718 * C150724 * C150799 + C150724 * C150795 * ae) / C150608;
    const double C383 = (C150792 * C150793 * C150784 +
                         C150718 * (C150718 * C150799 + C150795 * ae) +
                         C150718 * C150795 * ae) /
                        C150608;
    const double C630 = (C150928 * (C150799 + C150788 * C150736)) / C150608;
    const double C632 = (C150928 * C150724 * C150799) / C150608;
    const double C636 =
        (C150792 * C150793 * C150784 + C150799 * C151060) / C150608;
    const double C1210 =
        (C150928 * (C150718 * C150799 + C150795 * ae)) / C150608;
    const double C2644 =
        (2 * C150928 * C150799 + C150928 * (C150799 + C150788 * C151060)) /
        C150608;
    const double C148 =
        (C150792 * C150793 * C150783 + C150798 * C150736) / C150608;
    const double C150 =
        (2 * C150724 * C150798 + C150724 * (C150798 + C150787 * C150736)) /
        C150608;
    const double C376 = (C150718 * (C150798 + C150787 * C150736) +
                         (C150795 + C150725 * C150736) * be) /
                        C150608;
    const double C378 =
        (C150718 * C150724 * C150798 + C150724 * C150795 * be) / C150608;
    const double C382 = (C150792 * C150793 * C150783 +
                         C150718 * (C150718 * C150798 + C150795 * be) +
                         C150718 * C150795 * be) /
                        C150608;
    const double C629 = (C150928 * (C150798 + C150787 * C150736)) / C150608;
    const double C631 = (C150928 * C150724 * C150798) / C150608;
    const double C635 =
        (C150792 * C150793 * C150783 + C150798 * C151060) / C150608;
    const double C1209 =
        (C150928 * (C150718 * C150798 + C150795 * be)) / C150608;
    const double C2643 =
        (2 * C150928 * C150798 + C150928 * (C150798 + C150787 * C151060)) /
        C150608;
    const double C176 = C152324 * C162;
    const double C150739 = C150733 + C150738;
    const double C150747 = C150742 + C150746;
    const double C150819 = C150742 * C150736;
    const double C150844 = C150724 * C150742;
    const double C151159 = C150742 * ae;
    const double C151155 = C150742 * C150721;
    const double C151154 = C150718 * C150742;
    const double C151153 = C150742 * be;
    const double C152026 = C150742 * C151060;
    const double C152065 = C150928 * C150742;
    const double C150812 = C150810 * C150736;
    const double C150820 = C150724 * C150810;
    const double C150975 = C150718 * C150810;
    const double C151149 = be * C150810;
    const double C151332 = C150928 * C150810;
    const double C151844 = C150810 * C151060;
    const double C2646 = (3 * (C150799 + C150788 * C151060) +
                          C150928 * (2 * C150928 * C150788 +
                                     C150928 * (C150788 + C150810 * C151060))) /
                         C150608;
    const double C150811 = C150808 * C150736;
    const double C150816 = C150724 * C150808;
    const double C150971 = C150718 * C150808;
    const double C151148 = ae * C150808;
    const double C151331 = C150928 * C150808;
    const double C151841 = C150808 * C151060;
    const double C2645 = (3 * (C150798 + C150787 * C151060) +
                          C150928 * (2 * C150928 * C150787 +
                                     C150928 * (C150787 + C150808 * C151060))) /
                         C150608;
    const double C150759 = C150753 + C150758;
    const double C150774 = C150768 + C150773;
    const double C150880 = C150768 * C150736;
    const double C151261 = C150724 * C150768;
    const double C151500 = C150768 * ae;
    const double C151492 = C150768 * C150721;
    const double C151491 = C150718 * C150768;
    const double C151490 = C150768 * be;
    const double C150857 = C150854 * C150736;
    const double C150883 = C150724 * C150854;
    const double C151206 = C150718 * C150854;
    const double C151484 = be * C150854;
    const double C151560 = C150854 * C151060;
    const double C151585 = C150928 * C150854;
    const double C150855 = C150850 * C150736;
    const double C150875 = C150724 * C150850;
    const double C151198 = C150718 * C150850;
    const double C151483 = ae * C150850;
    const double C151559 = C150850 * C151060;
    const double C151584 = C150928 * C150850;
    const double C150809 = C150725 + C150806;
    const double C150824 = 2 * C150818;
    const double C150956 = C150818 * ae;
    const double C150954 = C150718 * C150818;
    const double C150953 = C150818 * be;
    const double C150980 = C150725 + C150974;
    const double C150982 = C150973 * ae;
    const double C150979 = C150973 * be;
    const double C151156 = 2 * C150973;
    const double C152023 = C150725 + C152022;
    const double C152027 = 2 * C152025;
    const double C638 = (C150724 * C150799 + C150803 * C151060) / C150608;
    const double C637 = (C150724 * C150798 + C150801 * C151060) / C150608;
    const double C150977 = C150968 + C150969;
    const double C150852 = C150742 + C150845;
    const double C150887 = 2 * C150879;
    const double C151117 = C150879 * ae;
    const double C151113 = C150879 * C150721;
    const double C151112 = C150718 * C150879;
    const double C151111 = C150879 * be;
    const double C152033 = C150879 * C151060;
    const double C151213 = C150742 + C151201;
    const double C151215 = C151200 * ae;
    const double C151212 = C151200 * be;
    const double C151493 = 2 * C151200;
    const double C152055 = C151200 * C151060;
    const double C152068 = C150742 + C152066;
    const double C150833 = C150810 + C150830;
    const double C150853 = 2 * C150847;
    const double C150998 = C150718 * C150847;
    const double C151107 = be * C150847;
    const double C151323 = C150928 * C150847;
    const double C151838 = C150847 * C151060;
    const double C151344 = C150810 + C151341;
    const double C151423 = be * C151418;
    const double C151614 = 2 * C151418;
    const double C150831 = C150808 + C150828;
    const double C150849 = 2 * C150841;
    const double C150994 = C150718 * C150841;
    const double C151106 = ae * C150841;
    const double C151322 = C150928 * C150841;
    const double C151835 = C150841 * C151060;
    const double C151210 = C151193 + C151194;
    const double C151343 = C150808 + C151340;
    const double C151422 = ae * C151417;
    const double C151612 = 2 * C151417;
    const double C150896 = C150854 + C150893;
    const double C151275 = C150718 * C151266;
    const double C150894 = C150850 + C150891;
    const double C151271 = C150718 * C151260;
    const double C15418 = C152324 * C654;
    const double C152085 = C152084 * C152079;
    const double C152089 = C152088 * C152084;
    const double C152437 = C152084 * C152080;
    const double C152434 = C152084 / C150660;
    const double C51197 = C152472 * C152084;
    const double C152115 = C152113 * C152106;
    const double C152114 = C152113 / C152108;
    const double C152124 = C152121 * C152113;
    const double C152444 = C152113 * C152109;
    const double C152493 = C152448 * C152113;
    const double C152487 = C152113 * C152441;
    const double C152195 = C152141 / C152108;
    const double C152197 = C152141 * C152194;
    const double C152204 = C152121 * C152141;
    const double C152459 = C152141 * C152196;
    const double C152499 = C152448 * C152141;
    const double C152497 = C152141 * C152453;
    const double C152237 = C152159 / C152108;
    const double C152239 = C152159 * C152236;
    const double C152246 = C152121 * C152159;
    const double C152465 = C152159 * C152238;
    const double C152502 = C152448 * C152159;
    const double C152500 = C152159 * C152455;
    const double C152401 = C152340 * C152399;
    const double C152404 = C152088 * C152340;
    const double C152480 = C152340 * C152400;
    const double C152473 = C152340 / C150660;
    const double C14963 = C152472 * C152340;
    const double C150622 = 2 * C150619;
    const double C150665 = C150619 / C150616;
    const double C150680 = -4 * C150619;
    const double C6307 =
        ((0 * ae) / C150608 - C150619 / C150616) / (2 * C150608) +
        (0 * ae) / C150608;
    const double C23384 = (0 * ae) / C150608 - C150619 / C150616;
    const double C171 = C134 * C147;
    const double C169 = C134 * C146;
    const double C15417 = C134 * C634;
    const double C15415 = C134 * C633;
    const double C174 = C135 * C138;
    const double C170 = C135 * C137;
    const double C420 = C135 * C364;
    const double C673 = C135 * C617;
    const double C15421 = C135 * C619;
    const double C15416 = C135 * C618;
    const double C16154 = C135 * C1203;
    const double C152478 = C152373 / C150618;
    const double C152477 = C152373 * C152372;
    const double C152474 = C152373 / C150608;
    const double C6299 = (2 * C152088 * C152373) / C150608;
    const double C152479 = C152376 * C152372;
    const double C59731 = C152376 / C152440;
    const double C73652 = C152376 / C150660;
    const double C152516 = C152476 / C150608;
    const double C6298 = (C152324 * std::pow(C152371, 2)) / C150616 + C152471;
    const double C150731 = C150730 * C150607;
    const double C384 =
        (C150724 * C150798 + C150718 * (C150718 * C150801 + C150802 * be) +
         C150718 * C150802 * be) /
        C150608;
    const double C385 =
        (C150724 * C150799 + C150718 * (C150718 * C150803 + C150802 * ae) +
         C150718 * C150802 * ae) /
        C150608;
    const double C1211 =
        (C150928 * (C150718 * C150801 + C150802 * be)) / C150608;
    const double C1212 =
        (C150928 * (C150718 * C150803 + C150802 * ae)) / C150608;
    const double C367 = C150724 * C150795 + C150802 * C150721;
    const double C620 = C150724 * C150795 + C150802 * C151060;
    const double C1204 = C150928 * C150718 * C150802;
    const double C1497 =
        2 * C150718 * C150802 + C150718 * (C150802 + C150818 * C150721);
    const double C1679 = C150928 * (C150802 + C150818 * C150721);
    const double C2631 =
        2 * C150928 * C150802 + C150928 * (C150802 + C150818 * C151060);
    const double C150966 = C150963 + C150964;
    const double C1676 = C150718 * C150795 + C150962 * C151060;
    const double C3169 =
        2 * C150928 * C150962 + C150928 * (C150962 + C150973 * C151060);
    const double C150965 = C150960 + C150961;
    const double C178 = C135 * C139;
    const double C416 = C135 * C363;
    const double C669 = C135 * C616;
    const double C16758 = C135 * C1680;
    const double C15427 = C135 * C2632;
    const double C18086 = C135 * C2633;
    const double C175 = C134 * C149;
    const double C179 = C134 * C151;
    const double C417 = C134 * C377;
    const double C421 = C134 * C379;
    const double C670 = C134 * C630;
    const double C674 = C134 * C632;
    const double C15422 = C134 * C636;
    const double C16155 = C134 * C1210;
    const double C15428 = C134 * C2644;
    const double C173 = C134 * C148;
    const double C177 = C134 * C150;
    const double C415 = C134 * C376;
    const double C419 = C134 * C378;
    const double C668 = C134 * C629;
    const double C672 = C134 * C631;
    const double C15420 = C134 * C635;
    const double C16153 = C134 * C1209;
    const double C15426 = C134 * C2643;
    const double C150740 = C150739 * C150607;
    const double C150748 = C150747 * C150607;
    const double C150825 = C150733 + C150819;
    const double C150851 = 2 * C150844;
    const double C150999 = C150844 * ae;
    const double C150997 = C150844 * C150721;
    const double C150996 = C150718 * C150844;
    const double C150995 = C150844 * be;
    const double C152019 = C150844 * C151060;
    const double C152032 = C150928 * C150844;
    const double C2634 = 3 * (C150802 + C150818 * C151060) +
                         C150928 * (2 * C150928 * C150818 +
                                    C150928 * (C150818 + C150844 * C151060));
    const double C151165 = C151158 + C151159;
    const double C151164 = C150733 + C151155;
    const double C151166 = C151154 * ae;
    const double C151163 = C151154 * be;
    const double C151202 = 2 * C151154;
    const double C152043 = C151154 * C151060;
    const double C152054 = C150928 * C151154;
    const double C9653 = 3 * (C150962 + C150973 * C151060) +
                         C150928 * (2 * C150928 * C150973 +
                                    C150928 * (C150973 + C151154 * C151060));
    const double C151162 = C151152 + C151153;
    const double C152028 = C150733 + C152026;
    const double C152067 = 2 * C152065;
    const double C150814 = C150788 + C150812;
    const double C150826 = 2 * C150820;
    const double C150955 = C150718 * C150820;
    const double C150992 = be * C150820;
    const double C2642 =
        (2 * C150928 * C150803 + C150928 * (C150803 + C150820 * C151060)) /
        C150608;
    const double C2648 = (3 * (C150803 + C150820 * C151060) +
                          C150928 * (2 * C150928 * C150820 +
                                     C150928 * (C150820 + C150847 * C151060))) /
                         C150608;
    const double C150981 = C150975 + C150976;
    const double C151335 = be * C151332;
    const double C151851 = 2 * C151332;
    const double C151845 = C150788 + C151844;
    const double C18087 = C134 * C2646;
    const double C150813 = C150787 + C150811;
    const double C150822 = 2 * C150816;
    const double C150952 = C150718 * C150816;
    const double C150991 = ae * C150816;
    const double C2641 =
        (2 * C150928 * C150801 + C150928 * (C150801 + C150816 * C151060)) /
        C150608;
    const double C2647 = (3 * (C150801 + C150816 * C151060) +
                          C150928 * (2 * C150928 * C150816 +
                                     C150928 * (C150816 + C150841 * C151060))) /
                         C150608;
    const double C150978 = C150971 + C150972;
    const double C151161 = C151148 + C151149;
    const double C151334 = ae * C151331;
    const double C151847 = 2 * C151331;
    const double C151842 = C150787 + C151841;
    const double C18085 = C134 * C2645;
    const double C150760 = C150759 * C150607;
    const double C150775 = C150774 * C150607;
    const double C150888 = C150753 + C150880;
    const double C151276 = C151261 * ae;
    const double C151274 = C151261 * C150721;
    const double C151273 = C150718 * C151261;
    const double C151272 = C151261 * be;
    const double C151508 = C151499 + C151500;
    const double C151507 = C150753 + C151492;
    const double C151509 = C151491 * ae;
    const double C151506 = C151491 * be;
    const double C151505 = C151489 + C151490;
    const double C150860 = C150827 + C150857;
    const double C150889 = 2 * C150883;
    const double C151116 = C150718 * C150883;
    const double C151256 = be * C150883;
    const double C151353 = C150883 * C151060;
    const double C151435 = C150928 * C150883;
    const double C151214 = C151206 + C151207;
    const double C151565 = C150827 + C151560;
    const double C151592 = be * C151585;
    const double C150858 = C150823 + C150855;
    const double C150885 = 2 * C150875;
    const double C151110 = C150718 * C150875;
    const double C151255 = ae * C150875;
    const double C151352 = C150875 * C151060;
    const double C151434 = C150928 * C150875;
    const double C151211 = C151198 + C151199;
    const double C151504 = C151483 + C151484;
    const double C151564 = C150823 + C151559;
    const double C151591 = ae * C151584;
    const double C140 = 3 * (C150795 + C150725 * C150736) +
                        C150724 * (2 * C150802 + C150724 * C150809);
    const double C362 = C150718 * (2 * C150802 + C150724 * C150809);
    const double C368 = C150795 + C150725 * C150736 + C150809 * C150721;
    const double C615 = C150928 * (2 * C150802 + C150724 * C150809);
    const double C621 = C150795 + C150725 * C150736 + C150809 * C151060;
    const double C1205 = C150928 * C150718 * C150809;
    const double C1675 = C150718 * C150802 + C150954 * C151060;
    const double C1499 = 3 * (C150795 + C150725 * C150721) +
                         C150718 * (2 * C150962 + C150718 * C150980);
    const double C1681 = C150795 + C150725 * C150721 + C150980 * C151060;
    const double C2231 = C150928 * (2 * C150962 + C150718 * C150980);
    const double C18068 =
        4 * (2 * C150928 * C150725 + C150928 * C152023) +
        C150928 *
            (3 * C152023 + C150928 * (2 * C150928 * C150733 +
                                      C150928 * (C150733 + C150742 * C151060)));
    const double C678 = C134 * C638;
    const double C676 = C134 * C637;
    const double C150856 = C150724 * C150852;
    const double C150878 = 3 * C150852;
    const double C151022 = C150852 * ae;
    const double C151020 = C150852 * C150721;
    const double C151019 = C150718 * C150852;
    const double C151018 = C150852 * be;
    const double C152040 = C150852 * C151060;
    const double C151122 = C150844 + C151113;
    const double C151124 = C151112 * ae;
    const double C151121 = C151112 * be;
    const double C151262 = 2 * C151112;
    const double C152046 = C151112 * C151060;
    const double C152035 = C150844 + C152033;
    const double C151223 = C151213 * ae;
    const double C151221 = C150718 * C151213;
    const double C151220 = C151213 * be;
    const double C151494 = 3 * C151213;
    const double C152061 = C151213 * C151060;
    const double C152057 = C151154 + C152055;
    const double C152069 = C150928 * C152068;
    const double C150835 = C150724 * C150833;
    const double C150846 = 3 * C150833;
    const double C150946 = C150718 * C150833;
    const double C151015 = be * C150833;
    const double C151326 = be * C151323;
    const double C151859 = 2 * C151323;
    const double C151839 = C150820 + C151838;
    const double C151347 = be * C151344;
    const double C151852 = C150928 * C151344;
    const double C151911 = 3 * C151344;
    const double C150834 = C150724 * C150831;
    const double C150840 = 3 * C150831;
    const double C150943 = C150718 * C150831;
    const double C151014 = ae * C150831;
    const double C151119 = C151106 + C151107;
    const double C151325 = ae * C151322;
    const double C151855 = 2 * C151322;
    const double C151836 = C150816 + C151835;
    const double C151346 = ae * C151343;
    const double C151848 = C150928 * C151343;
    const double C151907 = 3 * C151343;
    const double C151426 = C151422 + C151423;
    const double C150899 = C150724 * C150896;
    const double C151376 = C150718 * C150896;
    const double C150897 = C150724 * C150894;
    const double C151370 = C150718 * C150894;
    const double C152438 = C152085 / C150618;
    const double C152436 = C152085 / C150608;
    const double C152435 = C152085 * C152080;
    const double C51196 = (2 * C152088 * C152085) / C150608;
    const double C152439 = C152089 * C152080;
    const double C125 = C152089 / C152440;
    const double C23381 = C152089 / C150660;
    const double C152485 = C152437 / C150608;
    const double C51195 = (C152084 * std::pow(C152079, 2)) / C150616 + C152434;
    const double C152116 = C152115 * C152109;
    const double C152123 = C152115 / C152122;
    const double C152445 = C152121 * C152115;
    const double C152443 = C152115 / C152104;
    const double C359 = (C152113 * std::pow(C152109, 2)) / C152107 + C152114;
    const double C152125 = C152124 * C152109;
    const double C152449 = C152106 * C152124;
    const double C152447 = 2 * C152124;
    const double C152503 = C152124 / C152451;
    const double C133 = C152124 / C152496;
    const double C3802 = C152124 / C152108;
    const double C152489 = C152444 / C152104;
    const double C360 = (-2 * C152121 * C152444) / C152104;
    const double C152524 = C152487 / C152107;
    const double C1401 = (C152141 * std::pow(C152196, 2)) / C152107 + C152195;
    const double C152198 = C152197 * C152196;
    const double C152203 = C152197 / C152122;
    const double C152457 = C152197 / C152104;
    const double C152454 = C152121 * C152197;
    const double C152205 = C152204 * C152196;
    const double C152463 = C152194 * C152204;
    const double C152462 = 2 * C152204;
    const double C152509 = C152204 / C152451;
    const double C1493 = C152204 / C152496;
    const double C3799 = C152204 / C152108;
    const double C152505 = C152459 / C152104;
    const double C1402 = (-2 * C152121 * C152459) / C152104;
    const double C152529 = C152497 / C152107;
    const double C2393 = (C152159 * std::pow(C152238, 2)) / C152107 + C152237;
    const double C152240 = C152239 * C152238;
    const double C152245 = C152239 / C152122;
    const double C152458 = C152239 / C152104;
    const double C152456 = C152121 * C152239;
    const double C152247 = C152246 * C152238;
    const double C152469 = C152236 * C152246;
    const double C152468 = 2 * C152246;
    const double C152515 = C152246 / C152451;
    const double C2628 = C152246 / C152496;
    const double C4993 = C152246 / C152108;
    const double C152511 = C152465 / C152104;
    const double C2394 = (-2 * C152121 * C152465) / C152104;
    const double C152531 = C152500 / C152107;
    const double C152482 = C152401 / C150618;
    const double C152481 = C152401 * C152400;
    const double C152475 = C152401 / C150608;
    const double C14962 = (2 * C152088 * C152401) / C150608;
    const double C152483 = C152404 * C152400;
    const double C117921 = C152404 / C152440;
    const double C134308 = C152404 / C150660;
    const double C152519 = C152480 / C150608;
    const double C14961 = (C152340 * std::pow(C152399, 2)) / C150616 + C152473;
    const double C150624 = C150606 * C150622;
    const double C51200 =
        (-C150622 / C150608) / (2 * C150608) - (0 * be) / C150608;
    const double C150672 = C150669 - C150665;
    const double C150683 = C150680 / C150608;
    const double C23401 = C23384 * C377;
    const double C23399 = C23384 * C376;
    const double C23393 = C23384 * C379;
    const double C23391 = C23384 * C378;
    const double C40784 = C23384 * C1210;
    const double C40782 = C23384 * C1209;
    const double C193 = C169 - C170;
    const double C15450 = C15415 - C15416;
    const double C152517 = C152477 / C150616;
    const double C23398 = C152474 * C162;
    const double C23390 = C152474 * C161;
    const double C40781 = C152474 * C654;
    const double C6303 =
        (((0 - (C150606 * C150615) / C150608) * ae) / C150608 -
         (0 * be) / C150618) /
            (2 * C150608) +
        ((C150606 *
              (((C152324 - (C150606 * 2 * C150619) / C150608) * ae) / C150608 -
               C150615 / C150618) +
          C152474) *
         ae) /
            C150608 +
        (0 * ae) / C150608 - C150619 / C150616;
    const double C152518 = C152479 / C150608;
    const double C51193 = -C152516;
    const double C6333 = C6298 * C162;
    const double C6313 = C6298 * C161;
    const double C110052 = C6298 * C654;
    const double C163 =
        (2 * C150724 * C150731 +
         C150724 * (C150731 + (C150726 * C150727 +
                               C150721 * bs[5] * std::pow(C150720, 5)) *
                                  C150607 * std::pow(C150724, 2))) /
        C150616;
    const double C400 = (ae * C150724 * C150722 * C150719 * C150783 +
                         be * C150724 * C150722 * C150719 * C150784 +
                         C150718 * C150724 * C150731) /
                        C150616;
    const double C402 =
        ((C150795 + C150721 * C150719 * C150722) * C150607 +
         ae * (C150718 * C150798 + C150795 * be) +
         be * (C150718 * C150799 + C150795 * ae) +
         C150718 * (ae * C150798 + be * C150799 + C150718 * C150731)) /
        C150616;
    const double C653 = ((zP - zQ) * C150724 * C150731) / C150616;
    const double C655 = ((C150795 + C150721 * C150719 * C150722) * C150607 +
                         C150731 * std::pow(zP - zQ, 2)) /
                        C150616;
    const double C1221 = (ae * C150928 * C150798 + be * C150928 * C150799 +
                          C150718 * C150928 * C150731) /
                         C150616;
    const double C423 = C134 * C384;
    const double C6318 = C6307 * C384;
    const double C23686 = C23384 * C384;
    const double C425 = C134 * C385;
    const double C6320 = C6307 * C385;
    const double C23688 = C23384 * C385;
    const double C1228 = C134 * C1211;
    const double C23990 = C23384 * C1211;
    const double C1230 = C134 * C1212;
    const double C23992 = C23384 * C1212;
    const double C424 = C135 * C367;
    const double C677 = C135 * C620;
    const double C1229 = C135 * C1204;
    const double C1871 = C135 * C1497;
    const double C2090 = C135 * C1679;
    const double C3028 = C135 * C2631;
    const double C1510 =
        (2 * (C150718 * C150799 + C150795 * ae) +
         C150718 * (C150799 + C150718 * C150966 + C150962 * ae) +
         (C150795 + C150725 * C150721) * ae) /
        C150608;
    const double C1692 =
        (C150718 * C150799 + C150795 * ae + C150966 * C151060) / C150608;
    const double C1700 =
        (C150928 * (C150799 + C150718 * C150966 + C150962 * ae)) / C150608;
    const double C16159 = C135 * C1676;
    const double C16752 = C135 * C3169;
    const double C1509 =
        (2 * (C150718 * C150798 + C150795 * be) +
         C150718 * (C150798 + C150718 * C150965 + C150962 * be) +
         (C150795 + C150725 * C150721) * be) /
        C150608;
    const double C1691 =
        (C150718 * C150798 + C150795 * be + C150965 * C151060) / C150608;
    const double C1699 =
        (C150928 * (C150798 + C150718 * C150965 + C150962 * be)) / C150608;
    const double C194 = C173 - C174;
    const double C195 = C177 - C178;
    const double C444 = C415 - C416;
    const double C445 = C419 - C420;
    const double C697 = C668 - C669;
    const double C698 = C672 - C673;
    const double C15451 = C15420 - C15421;
    const double C16179 = C16153 - C16154;
    const double C15452 = C15426 - C15427;
    const double C150951 = C150724 * C150740;
    const double C150970 = C150718 * C150740;
    const double C151082 = C150928 * C150740;
    const double C164 =
        (3 * (C150731 + C150740 * C150736) +
         C150724 *
             (2 * C150724 * C150740 +
              C150724 * (C150740 + (C150734 * C150735 +
                                    C150721 * bs[6] * std::pow(C150716, 6)) *
                                       C150607 * C150736))) /
        C150616;
    const double C399 =
        (ae * (C150722 * C150719 * C150783 + C150787 * C150736) +
         be * (C150722 * C150719 * C150784 + C150788 * C150736) +
         C150718 * (C150731 + C150740 * C150736)) /
        C150616;
    const double C403 =
        (C150724 * C150731 + ae * (C150718 * C150801 + C150802 * be) +
         be * (C150718 * C150803 + C150802 * ae) +
         C150718 *
             (ae * C150801 + be * C150803 + C150718 * C150724 * C150740)) /
        C150616;
    const double C652 = ((zP - zQ) * (C150731 + C150740 * C150736)) / C150616;
    const double C656 =
        (C150724 * C150731 + C150724 * C150740 * std::pow(zP - zQ, 2)) /
        C150616;
    const double C1222 = (ae * C150928 * C150801 + be * C150928 * C150803 +
                          C150718 * C150928 * C150724 * C150740) /
                         C150616;
    const double C1522 =
        (2 * (ae * C150798 + be * C150799 + C150718 * C150731) +
         ae * (C150798 + C150718 * C150965 + C150962 * be) +
         be * (C150799 + C150718 * C150966 + C150962 * ae) +
         C150718 *
             (C150731 + ae * C150965 + be * C150966 +
              C150718 * (ae * C150787 + be * C150788 + C150718 * C150740))) /
        C150616;
    const double C1712 = (ae * (C150798 + C150787 * C151060) +
                          be * (C150799 + C150788 * C151060) +
                          C150718 * (C150731 + C150740 * C151060)) /
                         C150616;
    const double C1716 =
        (C150928 * C150731 + ae * C150928 * C150965 + be * C150928 * C150966 +
         C150718 * (ae * C150928 * C150787 + be * C150928 * C150788 +
                    C150718 * C150928 * C150740)) /
        C150616;
    const double C2656 =
        (2 * C150928 * C150731 + C150928 * (C150731 + C150740 * C151060)) /
        C150616;
    const double C150749 = C150748 * C150736;
    const double C150752 = C150724 * C150748;
    const double C151150 = C150718 * C150748;
    const double C151319 = C150748 * C151060;
    const double C151333 = C150928 * C150748;
    const double C150829 = C150724 * C150825;
    const double C150843 = 3 * C150825;
    const double C150947 = C150825 * ae;
    const double C150945 = C150718 * C150825;
    const double C150944 = C150825 * be;
    const double C1496 =
        2 * C150718 * C150809 + C150718 * (C150809 + C150825 * C150721);
    const double C1678 = C150928 * (C150809 + C150825 * C150721);
    const double C2630 =
        2 * C150928 * C150809 + C150928 * (C150809 + C150825 * C151060);
    const double C2635 = 3 * (C150809 + C150825 * C151060) +
                         C150928 * (2 * C150928 * C150825 +
                                    C150928 * (C150825 + C150852 * C151060));
    const double C151004 = C150998 + C150999;
    const double C151003 = C150818 + C150997;
    const double C151005 = C150996 * ae;
    const double C151002 = C150996 * be;
    const double C151114 = 2 * C150996;
    const double C3170 =
        2 * C150928 * C150954 + C150928 * (C150954 + C150996 * C151060);
    const double C9655 = 3 * (C150954 + C150996 * C151060) +
                         C150928 * (2 * C150928 * C150996 +
                                    C150928 * (C150996 + C151112 * C151060));
    const double C151001 = C150994 + C150995;
    const double C152020 = C150818 + C152019;
    const double C152034 = 2 * C152032;
    const double C15431 = C135 * C2634;
    const double C151172 = C150718 * C151165;
    const double C151205 = 2 * C151165;
    const double C151192 = be * C151165;
    const double C151416 = C150928 * C151165;
    const double C151874 = C151165 * C151060;
    const double C151173 = C151164 * ae;
    const double C151171 = C150718 * C151164;
    const double C151170 = C151164 * be;
    const double C151203 = 3 * C151164;
    const double C9652 =
        2 * C150928 * C150980 + C150928 * (C150980 + C151164 * C151060);
    const double C9654 = 3 * (C150980 + C151164 * C151060) +
                         C150928 * (2 * C150928 * C151164 +
                                    C150928 * (C151164 + C151213 * C151060));
    const double C152044 = C150973 + C152043;
    const double C152056 = 2 * C152054;
    const double C18821 = C135 * C9653;
    const double C151169 = C150718 * C151162;
    const double C151197 = 2 * C151162;
    const double C151191 = ae * C151162;
    const double C151415 = C150928 * C151162;
    const double C151871 = C151162 * C151060;
    const double C152029 = C150928 * C152028;
    const double C152064 = 3 * C152028;
    const double C153 = (3 * (C150799 + C150788 * C150736) +
                         C150724 * (2 * C150803 + C150724 * C150814)) /
                        C150608;
    const double C375 = (C150718 * (2 * C150803 + C150724 * C150814) +
                         (2 * C150802 + C150724 * C150809) * ae) /
                        C150608;
    const double C387 = (C150799 + C150788 * C150736 +
                         C150718 * (C150718 * C150814 + C150809 * ae) +
                         C150718 * C150809 * ae) /
                        C150608;
    const double C628 = (C150928 * (2 * C150803 + C150724 * C150814)) / C150608;
    const double C640 =
        (C150799 + C150788 * C150736 + C150814 * C151060) / C150608;
    const double C1214 =
        (C150928 * (C150718 * C150814 + C150809 * ae)) / C150608;
    const double C2640 =
        (2 * C150928 * C150814 + C150928 * (C150814 + C150833 * C151060)) /
        C150608;
    const double C150958 = C150955 + C150956;
    const double C3029 = C134 * C2642;
    const double C15432 = C134 * C2648;
    const double C150985 = C150718 * C150981;
    const double C151157 = 2 * C150981;
    const double C151147 = be * C150981;
    const double C3174 =
        (2 * C150928 * C150966 + C150928 * (C150966 + C150981 * C151060)) /
        C150608;
    const double C9662 = (3 * (C150966 + C150981 * C151060) +
                          C150928 * (2 * C150928 * C150981 +
                                     C150928 * (C150981 + C151165 * C151060))) /
                         C150608;
    const double C18074 =
        (4 * (2 * C150928 * C150788 + C150928 * C151845) +
         C150928 *
             (3 * C151845 + C150928 * (2 * C151332 + C150928 * C151344))) /
        C150608;
    const double C152 = (3 * (C150798 + C150787 * C150736) +
                         C150724 * (2 * C150801 + C150724 * C150813)) /
                        C150608;
    const double C374 = (C150718 * (2 * C150801 + C150724 * C150813) +
                         (2 * C150802 + C150724 * C150809) * be) /
                        C150608;
    const double C386 = (C150798 + C150787 * C150736 +
                         C150718 * (C150718 * C150813 + C150809 * be) +
                         C150718 * C150809 * be) /
                        C150608;
    const double C627 = (C150928 * (2 * C150801 + C150724 * C150813)) / C150608;
    const double C639 =
        (C150798 + C150787 * C150736 + C150813 * C151060) / C150608;
    const double C1213 =
        (C150928 * (C150718 * C150813 + C150809 * be)) / C150608;
    const double C2639 =
        (2 * C150928 * C150813 + C150928 * (C150813 + C150831 * C151060)) /
        C150608;
    const double C150957 = C150952 + C150953;
    const double C151000 = C150991 + C150992;
    const double C3027 = C134 * C2641;
    const double C15430 = C134 * C2647;
    const double C150984 = C150718 * C150978;
    const double C151151 = 2 * C150978;
    const double C151146 = ae * C150978;
    const double C1717 =
        (C150731 + C150740 * C151060 + ae * (C150965 + C150978 * C151060) +
         be * (C150966 + C150981 * C151060) +
         C150718 * (ae * (C150787 + C150808 * C151060) +
                    be * (C150788 + C150810 * C151060) +
                    C150718 * (C150740 + C150748 * C151060))) /
        C150616;
    const double C3173 =
        (2 * C150928 * C150965 + C150928 * (C150965 + C150978 * C151060)) /
        C150608;
    const double C9661 = (3 * (C150965 + C150978 * C151060) +
                          C150928 * (2 * C150928 * C150978 +
                                     C150928 * (C150978 + C151162 * C151060))) /
                         C150608;
    const double C151337 = C151334 + C151335;
    const double C18073 =
        (4 * (2 * C150928 * C150787 + C150928 * C151842) +
         C150928 *
             (3 * C151842 + C150928 * (2 * C151331 + C150928 * C151343))) /
        C150608;
    const double C18098 = C18085 - C18086;
    const double C150761 = C150760 * C150736;
    const double C150767 = C150724 * C150760;
    const double C151195 = C150718 * C150760;
    const double C151342 = C150760 * C151060;
    const double C151419 = C150928 * C150760;
    const double C150776 = C150775 * C150736;
    const double C151257 = C150724 * C150775;
    const double C151485 = C150718 * C150775;
    const double C151561 = C150775 * C151060;
    const double C151586 = C150928 * C150775;
    const double C150892 = C150724 * C150888;
    const double C151377 = C150888 * ae;
    const double C151373 = C150888 * C150721;
    const double C151372 = C150718 * C150888;
    const double C151371 = C150888 * be;
    const double C151283 = C151275 + C151276;
    const double C151282 = C150879 + C151274;
    const double C151284 = C151273 * ae;
    const double C151281 = C151273 * be;
    const double C151280 = C151271 + C151272;
    const double C151517 = C150718 * C151508;
    const double C151518 = C151507 * ae;
    const double C151516 = C150718 * C151507;
    const double C151515 = C151507 * be;
    const double C151514 = C150718 * C151505;
    const double C150863 = C150724 * C150860;
    const double C150882 = 3 * C150860;
    const double C151021 = C150718 * C150860;
    const double C151367 = be * C150860;
    const double C151407 = C150928 * C150860;
    const double C151868 = C150860 * C151060;
    const double C2650 = (3 * (C150814 + C150833 * C151060) +
                          C150928 * (2 * C150928 * C150833 +
                                     C150928 * (C150833 + C150860 * C151060))) /
                         C150608;
    const double C151123 = C151116 + C151117;
    const double C151356 = C150847 + C151353;
    const double C151440 = be * C151435;
    const double C151222 = C150718 * C151214;
    const double C151498 = 2 * C151214;
    const double C151482 = be * C151214;
    const double C151558 = C151214 * C151060;
    const double C151583 = C150928 * C151214;
    const double C151570 = be * C151565;
    const double C151615 = C150928 * C151565;
    const double C150861 = C150724 * C150858;
    const double C150874 = 3 * C150858;
    const double C151017 = C150718 * C150858;
    const double C151366 = ae * C150858;
    const double C151406 = C150928 * C150858;
    const double C151865 = C150858 * C151060;
    const double C2649 = (3 * (C150813 + C150831 * C151060) +
                          C150928 * (2 * C150928 * C150831 +
                                     C150928 * (C150831 + C150858 * C151060))) /
                         C150608;
    const double C151120 = C151110 + C151111;
    const double C151269 = C151255 + C151256;
    const double C151355 = C150841 + C151352;
    const double C151439 = ae * C151434;
    const double C151219 = C150718 * C151211;
    const double C151488 = 2 * C151211;
    const double C151481 = ae * C151211;
    const double C151557 = C151211 * C151060;
    const double C151582 = C150928 * C151211;
    const double C151569 = ae * C151564;
    const double C151613 = C150928 * C151564;
    const double C151596 = C151591 + C151592;
    const double C182 = C135 * C140;
    const double C412 = C135 * C362;
    const double C428 = C135 * C368;
    const double C665 = C135 * C615;
    const double C681 = C135 * C621;
    const double C1233 = C135 * C1205;
    const double C2869 = C135 * C1675;
    const double C16763 = C135 * C1681;
    const double C17493 = C135 * C2231;
    const double C18095 = C135 * C18068;
    const double C150859 = C150851 + C150856;
    const double C151026 = C150825 + C151020;
    const double C151028 = C151019 * ae;
    const double C151025 = C151019 * be;
    const double C151374 = 2 * C151019;
    const double C152041 = C150825 + C152040;
    const double C151131 = C151122 * ae;
    const double C151129 = C150718 * C151122;
    const double C151128 = C151122 * be;
    const double C151263 = 3 * C151122;
    const double C152047 = C150996 + C152046;
    const double C152036 = C150928 * C152035;
    const double C151226 = C151202 + C151221;
    const double C152062 = C151164 + C152061;
    const double C152058 = C150928 * C152057;
    const double C152070 = C152067 + C152069;
    const double C150837 = C150826 + C150835;
    const double C151853 = C151851 + C151852;
    const double C150836 = C150822 + C150834;
    const double C151023 = C151014 + C151015;
    const double C151328 = C151325 + C151326;
    const double C151349 = C151346 + C151347;
    const double C151849 = C151847 + C151848;
    const double C150902 = C150889 + C150899;
    const double C150900 = C150885 + C150897;
    const double C152484 = C152435 / C150616;
    const double C152486 = C152439 / C150608;
    const double C6301 = -C152485;
    const double C152117 = C152116 / C152107;
    const double C152490 = 2 * C152445;
    const double C152126 = C152125 / C152104;
    const double C152494 = C152449 / C152122;
    const double C152525 = C152443 - C152489;
    const double C3455 = -C152489;
    const double C152543 = C152524 + C152114;
    const double C152199 = C152198 / C152107;
    const double C152498 = 2 * C152454;
    const double C152206 = C152205 / C152104;
    const double C152508 = C152463 / C152122;
    const double C152533 = C152457 - C152505;
    const double C3315 = -C152505;
    const double C152546 = C152529 + C152195;
    const double C152241 = C152240 / C152107;
    const double C152501 = 2 * C152456;
    const double C152248 = C152247 / C152104;
    const double C152514 = C152469 / C152122;
    const double C152536 = C152458 - C152511;
    const double C4321 = -C152511;
    const double C152547 = C152531 + C152237;
    const double C152520 = C152481 / C150616;
    const double C152521 = C152483 / C150608;
    const double C101414 = -C152519;
    const double C150625 = C150624 / C150608;
    const double C51217 = C51200 * C377;
    const double C51215 = C51200 * C376;
    const double C51209 = C51200 * C379;
    const double C51207 = C51200 * C378;
    const double C51504 = C51200 * C385;
    const double C51502 = C51200 * C384;
    const double C51808 = C51200 * C1212;
    const double C51806 = C51200 * C1211;
    const double C65692 = C51200 * C1210;
    const double C65690 = C51200 * C1209;
    const double C59739 =
        (C150672 / C150660 - (0 * be) / C150608) / C150660 + (0 * ae) / C150608;
    const double C73659 = C150672 / C150660 - (0 * be) / C150608;
    const double C199 = C193 - C171;
    const double C15457 = C15450 - C15417;
    const double C152539 = C152471 - C152517;
    const double C6336 = C6303 * C151;
    const double C6334 = C6303 * C150;
    const double C6332 = C6303 * C149;
    const double C6330 = C6303 * C148;
    const double C6312 = C6303 * C147;
    const double C6310 = C6303 * C146;
    const double C6638 = C6303 * C377;
    const double C6636 = C6303 * C376;
    const double C6626 = C6303 * C385;
    const double C6624 = C6303 * C384;
    const double C6622 = C6303 * C379;
    const double C6620 = C6303 * C378;
    const double C6940 = C6303 * C630;
    const double C6938 = C6303 * C629;
    const double C6928 = C6303 * C638;
    const double C6926 = C6303 * C637;
    const double C6924 = C6303 * C632;
    const double C6922 = C6303 * C631;
    const double C7720 = C6303 * C1212;
    const double C7718 = C6303 * C1211;
    const double C10199 = C6303 * C2642;
    const double C10197 = C6303 * C2641;
    const double C110071 = C6303 * C636;
    const double C110069 = C6303 * C635;
    const double C110051 = C6303 * C634;
    const double C110049 = C6303 * C633;
    const double C110771 = C6303 * C1210;
    const double C110769 = C6303 * C1209;
    const double C112690 = C6303 * C2646;
    const double C112688 = C6303 * C2645;
    const double C112670 = C6303 * C2644;
    const double C112668 = C6303 * C2643;
    const double C152540 = C152478 - C152518;
    const double C51214 = C51193 * C162;
    const double C51206 = C51193 * C161;
    const double C65689 = C51193 * C654;
    const double C180 = C152324 * C163;
    const double C6337 = C6298 * C163;
    const double C23410 = C152474 * C163;
    const double C51226 = C51193 * C163;
    const double C422 = C152324 * C400;
    const double C6317 = C6299 * C400;
    const double C6623 = C6298 * C400;
    const double C23394 = C152376 * C400;
    const double C23693 = C152474 * C400;
    const double C51210 = C152376 * C400;
    const double C51509 = C51193 * C400;
    const double C675 = C152324 * C653;
    const double C6925 = C6298 * C653;
    const double C23997 = C152474 * C653;
    const double C51813 = C51193 * C653;
    const double C15423 = C152324 * C655;
    const double C40795 = C152474 * C655;
    const double C65697 = C51193 * C655;
    const double C110072 = C6298 * C655;
    const double C16156 = C152324 * C1221;
    const double C40785 = C152376 * C1221;
    const double C41718 = C152474 * C1221;
    const double C65693 = C152376 * C1221;
    const double C66414 = C51193 * C1221;
    const double C110056 = C6299 * C1221;
    const double C110772 = C6298 * C1221;
    const double C446 = C423 - C424;
    const double C699 = C676 - C677;
    const double C1244 = C1228 - C1229;
    const double C16160 = C134 * C1692;
    const double C40790 = C23384 * C1692;
    const double C65700 = C51200 * C1692;
    const double C111350 = C6303 * C1692;
    const double C16759 = C134 * C1700;
    const double C41721 = C23384 * C1700;
    const double C66417 = C51200 * C1700;
    const double C110059 = C6307 * C1700;
    const double C111362 = C6303 * C1700;
    const double C16158 = C134 * C1691;
    const double C40788 = C23384 * C1691;
    const double C65698 = C51200 * C1691;
    const double C111348 = C6303 * C1691;
    const double C16757 = C134 * C1699;
    const double C41719 = C23384 * C1699;
    const double C66415 = C51200 * C1699;
    const double C110057 = C6307 * C1699;
    const double C111360 = C6303 * C1699;
    const double C200 = C194 - C175;
    const double C201 = C195 - C179;
    const double C452 = C444 - C417;
    const double C453 = C445 - C421;
    const double C705 = C697 - C670;
    const double C706 = C698 - C674;
    const double C15458 = C15451 - C15422;
    const double C16183 = C16179 - C16155;
    const double C15459 = C15452 - C15428;
    const double C150983 = C150977 + C150970;
    const double C2657 =
        (3 * (C150731 + C150740 * C151060) +
         C150928 * (2 * C151082 + C150928 * (C150740 + C150748 * C151060))) /
        C150616;
    const double C3181 =
        (ae *
             (2 * C150928 * C150787 + C150928 * (C150787 + C150808 * C151060)) +
         be *
             (2 * C150928 * C150788 + C150928 * (C150788 + C150810 * C151060)) +
         C150718 * (2 * C151082 + C150928 * (C150740 + C150748 * C151060))) /
        C150616;
    const double C184 = C152324 * C164;
    const double C6357 = C6298 * C164;
    const double C23414 = C152474 * C164;
    const double C51230 = C51193 * C164;
    const double C418 = C152324 * C399;
    const double C6329 = C6299 * C399;
    const double C6639 = C6298 * C399;
    const double C23402 = C152376 * C399;
    const double C23685 = C152474 * C399;
    const double C51218 = C152376 * C399;
    const double C51501 = C51193 * C399;
    const double C426 = C152324 * C403;
    const double C6321 = C6300 * C403;
    const double C6627 = C6298 * C403;
    const double C6619 = C6299 * C403;
    const double C23697 = C152474 * C403;
    const double C23689 = C152376 * C403;
    const double C51513 = C51193 * C403;
    const double C51505 = C152376 * C403;
    const double C73673 = C73652 * C403;
    const double C671 = C152324 * C652;
    const double C6941 = C6298 * C652;
    const double C23989 = C152474 * C652;
    const double C51805 = C51193 * C652;
    const double C679 = C152324 * C656;
    const double C6929 = C6298 * C656;
    const double C24001 = C152474 * C656;
    const double C51817 = C51193 * C656;
    const double C1231 = C152324 * C1222;
    const double C6921 = C6299 * C1222;
    const double C7721 = C6298 * C1222;
    const double C23993 = C152376 * C1222;
    const double C24779 = C152474 * C1222;
    const double C51809 = C152376 * C1222;
    const double C52595 = C51193 * C1222;
    const double C16161 = C152324 * C1712;
    const double C40791 = C152376 * C1712;
    const double C42477 = C152474 * C1712;
    const double C65701 = C152376 * C1712;
    const double C66422 = C51193 * C1712;
    const double C110068 = C6299 * C1712;
    const double C111351 = C6298 * C1712;
    const double C16760 = C152324 * C1716;
    const double C41722 = C152376 * C1716;
    const double C42485 = C152474 * C1716;
    const double C66418 = C152376 * C1716;
    const double C67009 = C51193 * C1716;
    const double C93516 = C73652 * C1716;
    const double C110060 = C6300 * C1716;
    const double C110776 = C6299 * C1716;
    const double C111363 = C6298 * C1716;
    const double C15429 = C152324 * C2656;
    const double C44207 = C152474 * C2656;
    const double C65709 = C51193 * C2656;
    const double C112671 = C6298 * C2656;
    const double C150750 = C150740 + C150749;
    const double C150756 = 2 * C150752;
    const double C150993 = C150718 * C150752;
    const double C151084 = C150928 * C150752;
    const double C1711 = (ae * (C150801 + C150816 * C151060) +
                          be * (C150803 + C150820 * C151060) +
                          C150718 * (C150951 + C150752 * C151060)) /
                         C150616;
    const double C2655 =
        (2 * C150928 * C150951 + C150928 * (C150951 + C150752 * C151060)) /
        C150616;
    const double C151168 = C151161 + C151150;
    const double C151320 = C150740 + C151319;
    const double C151336 = C150718 * C151333;
    const double C151459 = 2 * C151333;
    const double C150832 = C150824 + C150829;
    const double C150949 = C150946 + C150947;
    const double C1674 = C150718 * C150809 + C150945 * C151060;
    const double C3171 =
        2 * C150928 * C150945 + C150928 * (C150945 + C151019 * C151060);
    const double C150948 = C150943 + C150944;
    const double C1867 = C135 * C1496;
    const double C2086 = C135 * C1678;
    const double C3024 = C135 * C2630;
    const double C15441 = C135 * C2635;
    const double C151008 = C150718 * C151004;
    const double C151115 = 2 * C151004;
    const double C151105 = be * C151004;
    const double C1500 = 3 * (C150802 + C150818 * C150721) +
                         C150718 * (2 * C150954 + C150718 * C151003);
    const double C1682 = C150802 + C150818 * C150721 + C151003 * C151060;
    const double C2232 = C150928 * (2 * C150954 + C150718 * C151003);
    const double C9651 =
        2 * C150928 * C151003 + C150928 * (C151003 + C151122 * C151060);
    const double C16164 = C135 * C3170;
    const double C18406 = C135 * C9655;
    const double C151007 = C150718 * C151001;
    const double C151109 = 2 * C151001;
    const double C151104 = ae * C151001;
    const double C18067 =
        4 * (2 * C150928 * C150818 + C150928 * C152020) +
        C150928 *
            (3 * C152020 + C150928 * (2 * C150928 * C150844 +
                                      C150928 * (C150844 + C150879 * C151060)));
    const double C151177 = C150810 + C151172;
    const double C151421 = be * C151416;
    const double C151897 = 2 * C151416;
    const double C151875 = C150981 + C151874;
    const double C151176 = C151156 + C151171;
    const double C16772 = C135 * C9652;
    const double C119072 = C135 * C9654;
    const double C18809 =
        4 * (2 * C150928 * C150973 + C150928 * C152044) +
        C150928 *
            (3 * C152044 + C150928 * (2 * C150928 * C151154 +
                                      C150928 * (C151154 + C151200 * C151060)));
    const double C151175 = C150808 + C151169;
    const double C151209 = C150748 + C151191;
    const double C151420 = ae * C151415;
    const double C151893 = 2 * C151415;
    const double C151872 = C150978 + C151871;
    const double C152030 = C152027 + C152029;
    const double C183 = C134 * C153;
    const double C6356 = C6303 * C153;
    const double C413 = C134 * C375;
    const double C7202 = C6303 * C375;
    const double C23405 = C23384 * C375;
    const double C51221 = C51200 * C375;
    const double C429 = C134 * C387;
    const double C6324 = C6307 * C387;
    const double C6658 = C6303 * C387;
    const double C23680 = C23384 * C387;
    const double C51496 = C51200 * C387;
    const double C666 = C134 * C628;
    const double C7417 = C6303 * C628;
    const double C682 = C134 * C640;
    const double C6960 = C6303 * C640;
    const double C1234 = C134 * C1214;
    const double C7740 = C6303 * C1214;
    const double C23984 = C23384 * C1214;
    const double C51800 = C51200 * C1214;
    const double C3025 = C134 * C2640;
    const double C1508 =
        (2 * (C150718 * C150803 + C150802 * ae) +
         C150718 * (C150803 + C150718 * C150958 + C150954 * ae) +
         (C150802 + C150818 * C150721) * ae) /
        C150608;
    const double C1690 =
        (C150718 * C150803 + C150802 * ae + C150958 * C151060) / C150608;
    const double C1698 =
        (C150928 * (C150803 + C150718 * C150958 + C150954 * ae)) / C150608;
    const double C3176 =
        (2 * C150928 * C150958 + C150928 * (C150958 + C151004 * C151060)) /
        C150608;
    const double C150987 = C150788 + C150985;
    const double C16753 = C134 * C3174;
    const double C44210 = C23384 * C3174;
    const double C65704 = C51200 * C3174;
    const double C113398 = C6303 * C3174;
    const double C18822 = C134 * C9662;
    const double C44222 = C23384 * C9662;
    const double C68346 = C51200 * C9662;
    const double C18096 = C134 * C18074;
    const double C181 = C134 * C152;
    const double C6354 = C6303 * C152;
    const double C411 = C134 * C374;
    const double C7200 = C6303 * C374;
    const double C23403 = C23384 * C374;
    const double C51219 = C51200 * C374;
    const double C427 = C134 * C386;
    const double C6322 = C6307 * C386;
    const double C6656 = C6303 * C386;
    const double C23678 = C23384 * C386;
    const double C51494 = C51200 * C386;
    const double C664 = C134 * C627;
    const double C7415 = C6303 * C627;
    const double C680 = C134 * C639;
    const double C6958 = C6303 * C639;
    const double C1232 = C134 * C1213;
    const double C7738 = C6303 * C1213;
    const double C23982 = C23384 * C1213;
    const double C51798 = C51200 * C1213;
    const double C3023 = C134 * C2639;
    const double C1521 =
        (2 * (ae * C150801 + be * C150803 + C150718 * C150951) +
         ae * (C150801 + C150718 * C150957 + C150954 * be) +
         be * (C150803 + C150718 * C150958 + C150954 * ae) +
         C150718 *
             (C150951 + ae * C150957 + be * C150958 +
              C150718 * (ae * C150816 + be * C150820 + C150718 * C150752))) /
        C150616;
    const double C1715 =
        (C150928 * C150951 + ae * C150928 * C150957 + be * C150928 * C150958 +
         C150718 * (ae * C150928 * C150816 + be * C150928 * C150820 +
                    C150718 * C150928 * C150752)) /
        C150616;
    const double C1507 =
        (2 * (C150718 * C150801 + C150802 * be) +
         C150718 * (C150801 + C150718 * C150957 + C150954 * be) +
         (C150802 + C150818 * C150721) * be) /
        C150608;
    const double C1689 =
        (C150718 * C150801 + C150802 * be + C150957 * C151060) / C150608;
    const double C1697 =
        (C150928 * (C150801 + C150718 * C150957 + C150954 * be)) / C150608;
    const double C3175 =
        (2 * C150928 * C150957 + C150928 * (C150957 + C151001 * C151060)) /
        C150608;
    const double C3033 = C3027 - C3028;
    const double C15453 = C15430 - C15431;
    const double C150986 = C150787 + C150984;
    const double C151160 = C150740 + C151146;
    const double C16765 = C152324 * C1717;
    const double C42505 = C152474 * C1717;
    const double C42481 = C152376 * C1717;
    const double C66426 = C152376 * C1717;
    const double C67017 = C51193 * C1717;
    const double C93520 = C73652 * C1717;
    const double C110064 = C6300 * C1717;
    const double C111383 = C6298 * C1717;
    const double C111355 = C6299 * C1717;
    const double C16751 = C134 * C3173;
    const double C44208 = C23384 * C3173;
    const double C65702 = C51200 * C3173;
    const double C113396 = C6303 * C3173;
    const double C18820 = C134 * C9661;
    const double C44220 = C23384 * C9661;
    const double C68344 = C51200 * C9661;
    const double C18094 = C134 * C18073;
    const double C18101 = C18098 - C18087;
    const double C150762 = C150748 + C150761;
    const double C150771 = 2 * C150767;
    const double C151108 = C150718 * C150767;
    const double C151316 = C150767 * C151060;
    const double C151324 = C150928 * C150767;
    const double C1718 =
        (C150951 + C150752 * C151060 + ae * (C150957 + C151001 * C151060) +
         be * (C150958 + C151004 * C151060) +
         C150718 * (ae * (C150816 + C150841 * C151060) +
                    be * (C150820 + C150847 * C151060) +
                    C150718 * (C150752 + C150767 * C151060))) /
        C150616;
    const double C151218 = C151210 + C151195;
    const double C151345 = C150748 + C151342;
    const double C151424 = C150718 * C151419;
    const double C151606 = 2 * C151419;
    const double C150777 = C150760 + C150776;
    const double C151270 = C150718 * C151257;
    const double C151354 = C151257 * C151060;
    const double C151436 = C150928 * C151257;
    const double C151513 = C151504 + C151485;
    const double C151566 = C150760 + C151561;
    const double C151593 = C150718 * C151586;
    const double C150895 = C150887 + C150892;
    const double C151383 = C151376 + C151377;
    const double C151382 = C150852 + C151373;
    const double C151384 = C151372 * ae;
    const double C151381 = C151372 * be;
    const double C18400 = 3 * (C150945 + C151019 * C151060) +
                          C150928 * (2 * C150928 * C151019 +
                                     C150928 * (C151019 + C151372 * C151060));
    const double C151380 = C151370 + C151371;
    const double C151289 = C150718 * C151283;
    const double C151290 = C151282 * ae;
    const double C151288 = C150718 * C151282;
    const double C151287 = C151282 * be;
    const double C9656 = 3 * (C151003 + C151122 * C151060) +
                         C150928 * (2 * C150928 * C151122 +
                                    C150928 * (C151122 + C151282 * C151060));
    const double C151286 = C150718 * C151280;
    const double C151522 = C150854 + C151517;
    const double C151521 = C151493 + C151516;
    const double C151520 = C150850 + C151514;
    const double C150866 = C150853 + C150863;
    const double C151027 = C151021 + C151022;
    const double C151410 = be * C151407;
    const double C151869 = C150833 + C151868;
    const double C15442 = C134 * C2650;
    const double C151130 = C150718 * C151123;
    const double C151265 = 2 * C151123;
    const double C151254 = be * C151123;
    const double C151433 = C150928 * C151123;
    const double C151880 = C151123 * C151060;
    const double C9666 = (3 * (C150958 + C151004 * C151060) +
                          C150928 * (2 * C150928 * C151004 +
                                     C150928 * (C151004 + C151123 * C151060))) /
                         C150608;
    const double C151359 = be * C151356;
    const double C151860 = C150928 * C151356;
    const double C18072 =
        (4 * (2 * C150928 * C150820 + C150928 * C151839) +
         C150928 *
             (3 * C151839 + C150928 * (2 * C151323 + C150928 * C151356))) /
        C150608;
    const double C151227 = C150827 + C151222;
    const double C151563 = C151165 + C151558;
    const double C151590 = be * C151583;
    const double C151618 = C151614 + C151615;
    const double C150864 = C150849 + C150861;
    const double C151024 = C151017 + C151018;
    const double C151379 = C151366 + C151367;
    const double C151409 = ae * C151406;
    const double C151866 = C150831 + C151865;
    const double C15440 = C134 * C2649;
    const double C151127 = C150718 * C151120;
    const double C151259 = 2 * C151120;
    const double C151253 = ae * C151120;
    const double C151432 = C150928 * C151120;
    const double C151877 = C151120 * C151060;
    const double C9665 = (3 * (C150957 + C151001 * C151060) +
                          C150928 * (2 * C150928 * C151001 +
                                     C150928 * (C151001 + C151120 * C151060))) /
                         C150608;
    const double C151358 = ae * C151355;
    const double C151856 = C150928 * C151355;
    const double C18071 =
        (4 * (2 * C150928 * C150816 + C150928 * C151836) +
         C150928 *
             (3 * C151836 + C150928 * (2 * C151322 + C150928 * C151355))) /
        C150608;
    const double C151443 = C151439 + C151440;
    const double C151225 = C150823 + C151219;
    const double C151503 = C150760 + C151481;
    const double C151562 = C151162 + C151557;
    const double C151589 = ae * C151582;
    const double C151573 = C151569 + C151570;
    const double C151617 = C151612 + C151613;
    const double C150862 = C150724 * C150859;
    const double C150877 = 4 * C150859;
    const double C150939 = C150859 * ae;
    const double C150937 = C150718 * C150859;
    const double C150936 = C150859 * be;
    const double C1501 = 3 * (C150809 + C150825 * C150721) +
                         C150718 * (2 * C150945 + C150718 * C151026);
    const double C1683 = C150809 + C150825 * C150721 + C151026 * C151060;
    const double C2233 = C150928 * (2 * C150945 + C150718 * C151026);
    const double C18608 =
        4 * (2 * C150928 * C150825 + C150928 * C152041) +
        C150928 *
            (3 * C152041 + C150928 * (2 * C150928 * C150852 +
                                      C150928 * (C150852 + C150888 * C151060)));
    const double C151134 = C151114 + C151129;
    const double C18810 =
        4 * (2 * C150928 * C150996 + C150928 * C152047) +
        C150928 *
            (3 * C152047 + C150928 * (2 * C150928 * C151112 +
                                      C150928 * (C151112 + C151273 * C151060)));
    const double C152037 = C152034 + C152036;
    const double C151233 = C151226 * ae;
    const double C151231 = C150718 * C151226;
    const double C151230 = C151226 * be;
    const double C151495 = 4 * C151226;
    const double C69080 =
        4 * (2 * C150928 * C151164 + C150928 * C152062) +
        C150928 *
            (3 * C152062 + C150928 * (2 * C150928 * C151213 +
                                      C150928 * (C151213 + C151507 * C151060)));
    const double C152059 = C152056 + C152058;
    const double C152071 = C150928 * C152070;
    const double C155 = (4 * (2 * C150803 + C150724 * C150814) +
                         C150724 * (3 * C150814 + C150724 * C150837)) /
                        C150608;
    const double C642 =
        (2 * C150803 + C150724 * C150814 + C150837 * C151060) / C150608;
    const double C644 = (C150928 * (3 * C150814 + C150724 * C150837)) / C150608;
    const double C154 = (4 * (2 * C150801 + C150724 * C150813) +
                         C150724 * (3 * C150813 + C150724 * C150836)) /
                        C150608;
    const double C641 =
        (2 * C150801 + C150724 * C150813 + C150836 * C151060) / C150608;
    const double C643 = (C150928 * (3 * C150813 + C150724 * C150836)) / C150608;
    const double C150905 = C150724 * C150902;
    const double C151044 = C150718 * C150902;
    const double C150903 = C150724 * C150900;
    const double C151040 = C150718 * C150900;
    const double C152522 = C152434 - C152484;
    const double C152523 = C152438 - C152486;
    const double C152118 = C152114 - C152117;
    const double C152526 = C152490 / C152104;
    const double C152127 = C152123 - C152126;
    const double C152544 = C152525 / C152108;
    const double C152200 = C152195 - C152199;
    const double C152530 = C152498 / C152104;
    const double C152207 = C152203 - C152206;
    const double C152548 = C152533 / C152108;
    const double C152242 = C152237 - C152241;
    const double C152532 = C152501 / C152104;
    const double C152249 = C152245 - C152248;
    const double C152550 = C152536 / C152108;
    const double C152541 = C152473 - C152520;
    const double C152542 = C152482 - C152521;
    const double C150626 = C152324 - C150625;
    const double C73676 = C73659 * C387;
    const double C73674 = C73659 * C386;
    const double C73672 = C73659 * C385;
    const double C73670 = C73659 * C384;
    const double C93515 = C73659 * C1700;
    const double C93513 = C73659 * C1699;
    const double C205 = C199 + C172;
    const double C15462 = C15457 + C15418;
    const double C73709 = C152539 * C164;
    const double C73689 = C152539 * C163;
    const double C73685 = C152539 * C162;
    const double C73665 = C152539 * C161;
    const double C73991 = C152539 * C399;
    const double C73979 = C152539 * C403;
    const double C73975 = C152539 * C400;
    const double C74293 = C152539 * C652;
    const double C74281 = C152539 * C656;
    const double C74277 = C152539 * C653;
    const double C75073 = C152539 * C1222;
    const double C93528 = C152539 * C655;
    const double C93508 = C152539 * C654;
    const double C94228 = C152539 * C1221;
    const double C94839 = C152539 * C1717;
    const double C94819 = C152539 * C1716;
    const double C94807 = C152539 * C1712;
    const double C96127 = C152539 * C2656;
    const double C59728 =
        (C152539 * C152371) / C150608 + (C152474 - C152516) / C150660;
    const double C73681 = C152540 * C399;
    const double C73669 = C152540 * C400;
    const double C73971 = C152540 * C403;
    const double C74273 = C152540 * C1222;
    const double C93524 = C152540 * C1712;
    const double C93512 = C152540 * C1221;
    const double C94232 = C152540 * C1716;
    const double C94811 = C152540 * C1717;
    const double C59729 =
        (C152540 * C152371) / C150608 + (2 * C152376 + C152539) / C150660;
    const double C59730 = (C152371 * C152376) / C150618 + C152540 / C150660;
    const double C454 = C446 - C425;
    const double C707 = C699 - C678;
    const double C1248 = C1244 - C1230;
    const double C16180 = C16158 - C16159;
    const double C16776 = C16757 - C16758;
    const double C206 = C200 + C176;
    const double C207 = C201 + C180;
    const double C461 = C453 + C422;
    const double C714 = C706 + C675;
    const double C15463 = C15458 + C15423;
    const double C16187 = C16183 + C16156;
    const double C18088 = C152324 * C2657;
    const double C44227 = C152474 * C2657;
    const double C68343 = C51193 * C2657;
    const double C96147 = C152539 * C2657;
    const double C112691 = C6298 * C2657;
    const double C16754 = C152324 * C3181;
    const double C44211 = C152376 * C3181;
    const double C45173 = C152474 * C3181;
    const double C65705 = C152376 * C3181;
    const double C67000 = C51193 * C3181;
    const double C96131 = C152540 * C3181;
    const double C96855 = C152539 * C3181;
    const double C112675 = C6299 * C3181;
    const double C113399 = C6298 * C3181;
    const double C460 = C452 + C418;
    const double C713 = C705 + C671;
    const double C15464 = C15459 + C15429;
    const double C165 =
        (4 * (2 * C150724 * C150740 + C150724 * C150750) +
         C150724 * (3 * C150750 +
                    C150724 * (2 * C150724 * C150748 +
                               C150724 * (C150748 + (C150743 * C150744 +
                                                     C150721 * bs[7] *
                                                         std::pow(C150720, 7)) *
                                                        C150607 * C150736)))) /
        C150616;
    const double C398 =
        (ae * (2 * C150724 * C150787 +
               C150724 * (C150787 + C150735 * C150734 * C150783 * C150736)) +
         be * (2 * C150724 * C150788 +
               C150724 * (C150788 + C150735 * C150734 * C150784 * C150736)) +
         C150718 * (2 * C150724 * C150740 + C150724 * C150750)) /
        C150616;
    const double C404 =
        (C150731 + C150740 * C150736 + ae * (C150718 * C150813 + C150809 * be) +
         be * (C150718 * C150814 + C150809 * ae) +
         C150718 * (ae * C150813 + be * C150814 + C150718 * C150750)) /
        C150616;
    const double C651 =
        ((zP - zQ) * (2 * C150724 * C150740 + C150724 * C150750)) / C150616;
    const double C657 =
        (C150731 + C150740 * C150736 + C150750 * std::pow(zP - zQ, 2)) /
        C150616;
    const double C1223 = (ae * C150928 * C150813 + be * C150928 * C150814 +
                          C150718 * C150928 * C150750) /
                         C150616;
    const double C151006 = C151000 + C150993;
    const double C2658 =
        (3 * (C150951 + C150752 * C151060) +
         C150928 * (2 * C151084 + C150928 * (C150752 + C150767 * C151060))) /
        C150616;
    const double C3182 =
        (ae *
             (2 * C150928 * C150816 + C150928 * (C150816 + C150841 * C151060)) +
         be *
             (2 * C150928 * C150820 + C150928 * (C150820 + C150847 * C151060)) +
         C150718 * (2 * C151084 + C150928 * (C150752 + C150767 * C151060))) /
        C150616;
    const double C2871 = C152324 * C1711;
    const double C6933 = C6299 * C1711;
    const double C9981 = C6298 * C1711;
    const double C24005 = C152376 * C1711;
    const double C26974 = C152474 * C1711;
    const double C51821 = C152376 * C1711;
    const double C54790 = C51193 * C1711;
    const double C74285 = C152540 * C1711;
    const double C77249 = C152539 * C1711;
    const double C3030 = C152324 * C2655;
    const double C10200 = C6298 * C2655;
    const double C27196 = C152474 * C2655;
    const double C55012 = C51193 * C2655;
    const double C77464 = C152539 * C2655;
    const double C151174 = C150718 * C151168;
    const double C151188 = 2 * C151168;
    const double C151338 = C151337 + C151336;
    const double C388 = (2 * C150801 + C150724 * C150813 +
                         C150718 * (C150718 * C150836 + C150832 * be) +
                         C150718 * C150832 * be) /
                        C150608;
    const double C389 = (2 * C150803 + C150724 * C150814 +
                         C150718 * (C150718 * C150837 + C150832 * ae) +
                         C150718 * C150832 * ae) /
                        C150608;
    const double C390 = (C150718 * (3 * C150813 + C150724 * C150836) +
                         (3 * C150809 + C150724 * C150832) * be) /
                        C150608;
    const double C391 = (C150718 * (3 * C150814 + C150724 * C150837) +
                         (3 * C150809 + C150724 * C150832) * ae) /
                        C150608;
    const double C1215 =
        (C150928 * (C150718 * C150836 + C150832 * be)) / C150608;
    const double C1216 =
        (C150928 * (C150718 * C150837 + C150832 * ae)) / C150608;
    const double C141 = 4 * (2 * C150802 + C150724 * C150809) +
                        C150724 * (3 * C150809 + C150724 * C150832);
    const double C369 = 2 * C150802 + C150724 * C150809 + C150832 * C150721;
    const double C370 = C150718 * (3 * C150809 + C150724 * C150832);
    const double C622 = 2 * C150802 + C150724 * C150809 + C150832 * C151060;
    const double C623 = C150928 * (3 * C150809 + C150724 * C150832);
    const double C1206 = C150928 * C150718 * C150832;
    const double C1495 =
        2 * C150718 * C150832 + C150718 * (C150832 + C150859 * C150721);
    const double C1677 = C150928 * (C150832 + C150859 * C150721);
    const double C2629 =
        2 * C150928 * C150832 + C150928 * (C150832 + C150859 * C151060);
    const double C1506 =
        (2 * (C150718 * C150814 + C150809 * ae) +
         C150718 * (C150814 + C150718 * C150949 + C150945 * ae) +
         (C150809 + C150825 * C150721) * ae) /
        C150608;
    const double C1688 =
        (C150718 * C150814 + C150809 * ae + C150949 * C151060) / C150608;
    const double C1696 =
        (C150928 * (C150814 + C150718 * C150949 + C150945 * ae)) / C150608;
    const double C2865 = C135 * C1674;
    const double C16172 = C135 * C3171;
    const double C1505 =
        (2 * (C150718 * C150813 + C150809 * be) +
         C150718 * (C150813 + C150718 * C150948 + C150945 * be) +
         (C150809 + C150825 * C150721) * be) /
        C150608;
    const double C1687 =
        (C150718 * C150813 + C150809 * be + C150948 * C151060) / C150608;
    const double C1695 =
        (C150928 * (C150813 + C150718 * C150948 + C150945 * be)) / C150608;
    const double C151010 = C150820 + C151008;
    const double C15184 = C135 * C1682;
    const double C16995 = C135 * C2232;
    const double C16768 = C135 * C9651;
    const double C151009 = C150816 + C151007;
    const double C151118 = C150752 + C151104;
    const double C18091 = C135 * C18067;
    const double C151180 = C151177 + C151166;
    const double C8100 = 4 * (2 * C150962 + C150718 * C150980) +
                         C150718 * (3 * C150980 + C150718 * C151176);
    const double C8334 = 2 * C150962 + C150718 * C150980 + C151176 * C151060;
    const double C8336 = C150928 * (3 * C150980 + C150718 * C151176);
    const double C10403 =
        2 * C150928 * C151176 + C150928 * (C151176 + C151226 * C151060);
    const double C120390 = C135 * C18809;
    const double C151179 = C151175 + C151163;
    const double C151217 = C151209 + C151192;
    const double C151425 = C151333 + C151420;
    const double C18069 =
        5 * (3 * C152023 + C150928 * C152030) +
        C150928 *
            (4 * C152030 +
             C150928 * (3 * C152028 +
                        C150928 * (2 * C150928 * C150742 +
                                   C150928 * (C150742 + C150753 * C151060))));
    const double C1872 = C134 * C1508;
    const double C6614 = C6307 * C1508;
    const double C8566 = C6303 * C1508;
    const double C23700 = C23384 * C1508;
    const double C51516 = C51200 * C1508;
    const double C73966 = C73659 * C1508;
    const double C2870 = C134 * C1690;
    const double C9980 = C6303 * C1690;
    const double C24004 = C23384 * C1690;
    const double C51820 = C51200 * C1690;
    const double C2091 = C134 * C1698;
    const double C6916 = C6307 * C1698;
    const double C8881 = C6303 * C1698;
    const double C24782 = C23384 * C1698;
    const double C52598 = C51200 * C1698;
    const double C74268 = C73659 * C1698;
    const double C16165 = C134 * C3176;
    const double C27191 = C23384 * C3176;
    const double C55007 = C51200 * C3176;
    const double C150989 = C150987 + C150982;
    const double C196 = C181 - C182;
    const double C443 = C411 - C412;
    const double C447 = C427 - C428;
    const double C696 = C664 - C665;
    const double C700 = C680 - C681;
    const double C1245 = C1232 - C1233;
    const double C3032 = C3023 - C3024;
    const double C1873 = C152324 * C1521;
    const double C6631 = C6299 * C1521;
    const double C6615 = C6300 * C1521;
    const double C8567 = C6298 * C1521;
    const double C23701 = C152376 * C1521;
    const double C25586 = C152474 * C1521;
    const double C51517 = C152376 * C1521;
    const double C53402 = C51193 * C1521;
    const double C73983 = C152540 * C1521;
    const double C73967 = C73652 * C1521;
    const double C75875 = C152539 * C1521;
    const double C2092 = C152324 * C1715;
    const double C6917 = C6300 * C1715;
    const double C7725 = C6299 * C1715;
    const double C8882 = C6298 * C1715;
    const double C24783 = C152376 * C1715;
    const double C25904 = C152474 * C1715;
    const double C52599 = C152376 * C1715;
    const double C53720 = C51193 * C1715;
    const double C74269 = C73652 * C1715;
    const double C75077 = C152540 * C1715;
    const double C76186 = C152539 * C1715;
    const double C1870 = C134 * C1507;
    const double C6612 = C6307 * C1507;
    const double C8564 = C6303 * C1507;
    const double C23698 = C23384 * C1507;
    const double C51514 = C51200 * C1507;
    const double C73964 = C73659 * C1507;
    const double C2868 = C134 * C1689;
    const double C9978 = C6303 * C1689;
    const double C24002 = C23384 * C1689;
    const double C51818 = C51200 * C1689;
    const double C2089 = C134 * C1697;
    const double C6914 = C6307 * C1697;
    const double C8879 = C6303 * C1697;
    const double C24780 = C23384 * C1697;
    const double C52596 = C51200 * C1697;
    const double C74266 = C73659 * C1697;
    const double C16163 = C134 * C3175;
    const double C27189 = C23384 * C3175;
    const double C55005 = C51200 * C3175;
    const double C3036 = C3033 - C3029;
    const double C15460 = C15453 - C15432;
    const double C150988 = C150986 + C150979;
    const double C151167 = C151160 + C151147;
    const double C16775 = C16751 - C16752;
    const double C18824 = C18820 - C18821;
    const double C18100 = C18094 - C18095;
    const double C150763 = C150724 * C150762;
    const double C150766 = 3 * C150762;
    const double C151016 = C150718 * C150762;
    const double C151086 = C150928 * C150762;
    const double C1520 =
        (2 * (ae * C150813 + be * C150814 + C150718 * C150750) +
         ae * (C150813 + C150718 * C150948 + C150945 * be) +
         be * (C150814 + C150718 * C150949 + C150945 * ae) +
         C150718 *
             (C150750 + ae * C150948 + be * C150949 +
              C150718 * (ae * C150831 + be * C150833 + C150718 * C150762))) /
        C150616;
    const double C1710 = (ae * (C150813 + C150831 * C151060) +
                          be * (C150814 + C150833 * C151060) +
                          C150718 * (C150750 + C150762 * C151060)) /
                         C150616;
    const double C1714 =
        (C150928 * C150750 + ae * C150928 * C150948 + be * C150928 * C150949 +
         C150718 * (ae * C150928 * C150831 + be * C150928 * C150833 +
                    C150718 * C150928 * C150762)) /
        C150616;
    const double C2654 =
        (2 * C150928 * C150750 + C150928 * (C150750 + C150762 * C151060)) /
        C150616;
    const double C151126 = C151119 + C151108;
    const double C151317 = C150752 + C151316;
    const double C151327 = C150718 * C151324;
    const double C151463 = 2 * C151324;
    const double C6937 = C6300 * C1718;
    const double C9977 = C6299 * C1718;
    const double C15186 = C152324 * C1718;
    const double C26970 = C152376 * C1718;
    const double C42497 = C152474 * C1718;
    const double C54786 = C152376 * C1718;
    const double C67544 = C51193 * C1718;
    const double C74289 = C73652 * C1718;
    const double C77245 = C152540 * C1718;
    const double C151224 = C150718 * C151218;
    const double C151478 = 2 * C151218;
    const double C151348 = C150718 * C151345;
    const double C151460 = C150928 * C151345;
    const double C151605 = 3 * C151345;
    const double C9670 =
        (2 * C151082 + C150928 * C151320 +
         ae *
             (2 * C150928 * C150978 + C150928 * (C150978 + C151162 * C151060)) +
         be *
             (2 * C150928 * C150981 + C150928 * (C150981 + C151165 * C151060)) +
         C150718 * (ae * (2 * C151331 + C150928 * C151343) +
                    be * (2 * C151332 + C150928 * C151344) +
                    C150718 * (2 * C151333 + C150928 * C151345))) /
        C150616;
    const double C9671 =
        (ae * (3 * (C150787 + C150808 * C151060) +
               C150928 * (2 * C151331 + C150928 * C151343)) +
         be * (3 * (C150788 + C150810 * C151060) +
               C150928 * (2 * C151332 + C150928 * C151344)) +
         C150718 *
             (3 * C151320 + C150928 * (2 * C151333 + C150928 * C151345))) /
        C150616;
    const double C9672 =
        (3 * C151320 + C150928 * (2 * C151333 + C150928 * C151345) +
         ae * (3 * (C150978 + C151162 * C151060) +
               C150928 *
                   (2 * C151415 + C150928 * (C151162 + C151211 * C151060))) +
         be * (3 * (C150981 + C151165 * C151060) +
               C150928 *
                   (2 * C151416 + C150928 * (C151165 + C151214 * C151060))) +
         C150718 * (ae * (3 * C151343 +
                          C150928 * (2 * C151417 +
                                     C150928 * (C150823 + C150850 * C151060))) +
                    be * (3 * C151344 +
                          C150928 * (2 * C151418 +
                                     C150928 * (C150827 + C150854 * C151060))) +
                    C150718 * (3 * C151345 +
                               C150928 * (2 * C151419 +
                                          C150928 * (C150760 +
                                                     C150775 * C151060))))) /
        C150616;
    const double C151428 = C151426 + C151424;
    const double C150778 = C150724 * C150777;
    const double C151368 = C150718 * C150777;
    const double C151408 = C150928 * C150777;
    const double C151455 = C150777 * C151060;
    const double C151279 = C151269 + C151270;
    const double C151357 = C150767 + C151354;
    const double C151441 = C150718 * C151436;
    const double C151519 = C150718 * C151513;
    const double C151571 = C150718 * C151566;
    const double C151607 = C150928 * C151566;
    const double C151599 = C151596 + C151593;
    const double C150898 = C150724 * C150895;
    const double C151045 = C150895 * ae;
    const double C151043 = C150895 * C150721;
    const double C151042 = C150718 * C150895;
    const double C151041 = C150895 * be;
    const double C2636 = 3 * (C150832 + C150859 * C151060) +
                         C150928 * (2 * C150928 * C150859 +
                                    C150928 * (C150859 + C150895 * C151060));
    const double C151390 = C150718 * C151383;
    const double C151391 = C151382 * ae;
    const double C151389 = C150718 * C151382;
    const double C151388 = C151382 * be;
    const double C10184 =
        2 * C150928 * C151026 + C150928 * (C151026 + C151382 * C151060);
    const double C151387 = C150718 * C151380;
    const double C151294 = C150883 + C151289;
    const double C151293 = C151262 + C151288;
    const double C151292 = C150875 + C151286;
    const double C151527 = C151522 + C151509;
    const double C151528 = C151521 * ae;
    const double C151526 = C150718 * C151521;
    const double C151525 = C151521 * be;
    const double C61701 = 3 * (C151176 + C151226 * C151060) +
                          C150928 * (2 * C150928 * C151226 +
                                     C150928 * (C151226 + C151521 * C151060));
    const double C151524 = C151520 + C151506;
    const double C150868 = C150724 * C150866;
    const double C150881 = 4 * C150866;
    const double C150938 = C150718 * C150866;
    const double C151038 = be * C150866;
    const double C2638 =
        (2 * C150928 * C150837 + C150928 * (C150837 + C150866 * C151060)) /
        C150608;
    const double C2652 = (3 * (C150837 + C150866 * C151060) +
                          C150928 * (2 * C150928 * C150866 +
                                     C150928 * (C150866 + C150902 * C151060))) /
                         C150608;
    const double C151031 = C150718 * C151027;
    const double C151375 = 2 * C151027;
    const double C151365 = be * C151027;
    const double C3178 =
        (2 * C150928 * C150949 + C150928 * (C150949 + C151027 * C151060)) /
        C150608;
    const double C18402 =
        (3 * (C150949 + C151027 * C151060) +
         C150928 * (2 * C150928 * C151027 +
                    C150928 * (C151027 + C151383 * C151060))) /
        C150608;
    const double C18610 =
        (4 * (2 * C150928 * C150833 + C150928 * C151869) +
         C150928 * (3 * C151869 +
                    C150928 * (2 * C151407 +
                               C150928 * (C150860 + C150896 * C151060)))) /
        C150608;
    const double C151135 = C150847 + C151130;
    const double C151438 = be * C151433;
    const double C151881 = C151004 + C151880;
    const double C18407 = C134 * C9666;
    const double C44214 = C23384 * C9666;
    const double C68874 = C51200 * C9666;
    const double C151861 = C151859 + C151860;
    const double C18092 = C134 * C18072;
    const double C151232 = C151227 + C151215;
    const double C151568 = be * C151563;
    const double C151898 = C150928 * C151563;
    const double C18812 =
        (4 * (2 * C150928 * C150981 + C150928 * C151875) +
         C150928 *
             (3 * C151875 + C150928 * (2 * C151416 + C150928 * C151563))) /
        C150608;
    const double C151620 = be * C151618;
    const double C151912 = C150928 * C151618;
    const double C18076 =
        (5 * (3 * C151845 + C150928 * C151853) +
         C150928 *
             (4 * C151853 + C150928 * (3 * C151344 + C150928 * C151618))) /
        C150608;
    const double C150867 = C150724 * C150864;
    const double C150873 = 4 * C150864;
    const double C150935 = C150718 * C150864;
    const double C151037 = ae * C150864;
    const double C2637 =
        (2 * C150928 * C150836 + C150928 * (C150836 + C150864 * C151060)) /
        C150608;
    const double C2651 = (3 * (C150836 + C150864 * C151060) +
                          C150928 * (2 * C150928 * C150864 +
                                     C150928 * (C150864 + C150900 * C151060))) /
                         C150608;
    const double C151030 = C150718 * C151024;
    const double C151369 = 2 * C151024;
    const double C151364 = ae * C151024;
    const double C1719 =
        (C150750 + C150762 * C151060 + ae * (C150948 + C151024 * C151060) +
         be * (C150949 + C151027 * C151060) +
         C150718 * (ae * (C150831 + C150858 * C151060) +
                    be * (C150833 + C150860 * C151060) +
                    C150718 * (C150762 + C150777 * C151060))) /
        C150616;
    const double C3177 =
        (2 * C150928 * C150948 + C150928 * (C150948 + C151024 * C151060)) /
        C150608;
    const double C18401 =
        (3 * (C150948 + C151024 * C151060) +
         C150928 * (2 * C150928 * C151024 +
                    C150928 * (C151024 + C151380 * C151060))) /
        C150608;
    const double C151412 = C151409 + C151410;
    const double C18609 =
        (4 * (2 * C150928 * C150831 + C150928 * C151866) +
         C150928 * (3 * C151866 +
                    C150928 * (2 * C151406 +
                               C150928 * (C150858 + C150894 * C151060)))) /
        C150608;
    const double C15455 = C15440 - C15441;
    const double C151133 = C150841 + C151127;
    const double C151268 = C150767 + C151253;
    const double C151437 = ae * C151432;
    const double C151878 = C151001 + C151877;
    const double C18405 = C134 * C9665;
    const double C44212 = C23384 * C9665;
    const double C68872 = C51200 * C9665;
    const double C151361 = C151358 + C151359;
    const double C151857 = C151855 + C151856;
    const double C18090 = C134 * C18071;
    const double C151229 = C151225 + C151212;
    const double C151512 = C151503 + C151482;
    const double C151567 = ae * C151562;
    const double C151894 = C150928 * C151562;
    const double C18811 =
        (4 * (2 * C150928 * C150978 + C150928 * C151872) +
         C150928 *
             (3 * C151872 + C150928 * (2 * C151415 + C150928 * C151562))) /
        C150608;
    const double C151595 = C151419 + C151589;
    const double C151619 = ae * C151617;
    const double C151908 = C150928 * C151617;
    const double C18075 =
        (5 * (3 * C151842 + C150928 * C151849) +
         C150928 *
             (4 * C151849 + C150928 * (3 * C151343 + C150928 * C151617))) /
        C150608;
    const double C150865 = C150843 + C150862;
    const double C1673 = C150718 * C150832 + C150937 * C151060;
    const double C15188 = C135 * C1683;
    const double C33861 = C135 * C2233;
    const double C8099 = 4 * (2 * C150954 + C150718 * C151003) +
                         C150718 * (3 * C151003 + C150718 * C151134);
    const double C8333 = 2 * C150954 + C150718 * C151003 + C151134 * C151060;
    const double C8335 = C150928 * (3 * C151003 + C150718 * C151134);
    const double C18070 =
        5 * (3 * C152020 + C150928 * C152037) +
        C150928 *
            (4 * C152037 +
             C150928 * (3 * C152035 +
                        C150928 * (2 * C150928 * C150879 +
                                   C150928 * (C150879 + C151261 * C151060))));
    const double C151236 = C151203 + C151231;
    const double C68334 =
        5 * (3 * C152044 + C150928 * C152059) +
        C150928 *
            (4 * C152059 +
             C150928 * (3 * C152057 +
                        C150928 * (2 * C150928 * C151200 +
                                   C150928 * (C151200 + C151491 * C151060))));
    const double C152072 = C152064 + C152071;
    const double C187 = C134 * C155;
    const double C686 = C134 * C642;
    const double C690 = C134 * C644;
    const double C185 = C134 * C154;
    const double C684 = C134 * C641;
    const double C688 = C134 * C643;
    const double C150908 = C150882 + C150905;
    const double C150906 = C150874 + C150903;
    const double C122 =
        (C152522 * C152079) / C150608 + (C152436 - C152485) / C150660;
    const double C123 =
        (C152523 * C152079) / C150608 + (2 * C152089 + C152522) / C150660;
    const double C124 = (C152079 * C152089) / C150618 + C152523 / C150660;
    const double C152442 = C152118 * C152106;
    const double C152492 = C152447 + C152118;
    const double C152450 = C152127 / C152108;
    const double C152446 = C152127 * C152106;
    const double C851 = C152544 - (C152118 * C152109) / C152104;
    const double C152460 = C152200 * C152194;
    const double C152507 = C152462 + C152200;
    const double C152464 = C152207 / C152108;
    const double C152461 = C152207 * C152194;
    const double C1851 = C152548 - (C152200 * C152196) / C152104;
    const double C152466 = C152242 * C152236;
    const double C152513 = C152468 + C152242;
    const double C152470 = C152249 / C152108;
    const double C152467 = C152249 * C152236;
    const double C3010 = C152550 - (C152242 * C152238) / C152104;
    const double C117918 =
        (C152541 * C152399) / C150608 + (C152475 - C152519) / C150660;
    const double C117919 =
        (C152542 * C152399) / C150608 + (2 * C152404 + C152541) / C150660;
    const double C117920 = (C152399 * C152404) / C150618 + C152542 / C150660;
    const double C150627 = C150626 * C150623;
    const double C150662 = C150626 * ae;
    const double C6305 =
        ((C150626 * ae) / C150608 - C150615 / C150618) / (2 * C150608) +
        ((C150606 * ((0 * ae) / C150608 - C150619 / C150616) + C152376) * ae) /
            C150608;
    const double C23382 = (C150626 * ae) / C150608 - C150615 / C150618;
    const double C51198 =
        (-C150615 / C150608) / (2 * C150608) - (C150626 * be) / C150608;
    const double C15467 = C15462 * C6301;
    const double C32391 = C15462 * C152522;
    const double C101853 = C15462 * C51195;
    const double C118215 = C15462 * C152084;
    const double C134746 = C15462 * C152436;
    const double C462 = C454 + C426;
    const double C715 = C707 + C679;
    const double C1252 = C1248 + C1231;
    const double C16184 = C16180 - C16160;
    const double C16781 = C16776 - C16759;
    const double C15434 = C714 * C6301;
    const double C15419 = C714 * C152089;
    const double C32397 = C714 * C152522;
    const double C32392 = C714 * C152523;
    const double C101859 = C714 * C51195;
    const double C101854 = C714 * C51196;
    const double C118219 = C714 * C152084;
    const double C134752 = C714 * C152436;
    const double C134747 = C714 * C152089;
    const double C15468 = C15463 * C6301;
    const double C32396 = C15463 * C152522;
    const double C101858 = C15463 * C51195;
    const double C118216 = C15463 * C152084;
    const double C134748 = C15463 * C152436;
    const double C16191 = C16187 * C6301;
    const double C33090 = C16187 * C152522;
    const double C102552 = C16187 * C51195;
    const double C118684 = C16187 * C152084;
    const double C135449 = C16187 * C152436;
    const double C18104 = C18101 + C18088;
    const double C15444 = C713 * C6301;
    const double C15435 = C713 * C152089;
    const double C32403 = C713 * C152522;
    const double C32398 = C713 * C152523;
    const double C32393 = C713 * C23381;
    const double C101865 = C713 * C51195;
    const double C101860 = C713 * C51196;
    const double C101855 = C713 * C51197;
    const double C118223 = C713 * C152084;
    const double C134758 = C713 * C152436;
    const double C134753 = C713 * C152089;
    const double C15469 = C15464 * C6301;
    const double C34915 = C15464 * C152522;
    const double C104370 = C15464 * C51195;
    const double C118217 = C15464 * C152084;
    const double C134751 = C15464 * C152436;
    const double C188 = C152324 * C165;
    const double C23426 = C152474 * C165;
    const double C51242 = C51193 * C165;
    const double C414 = C152324 * C398;
    const double C6341 = C6299 * C398;
    const double C7203 = C6298 * C398;
    const double C23406 = C152376 * C398;
    const double C23713 = C152474 * C398;
    const double C51222 = C152376 * C398;
    const double C51529 = C51193 * C398;
    const double C73693 = C152540 * C398;
    const double C74555 = C152539 * C398;
    const double C430 = C152324 * C404;
    const double C6325 = C6300 * C404;
    const double C6659 = C6298 * C404;
    const double C6643 = C6299 * C404;
    const double C23705 = C152474 * C404;
    const double C23681 = C152376 * C404;
    const double C51521 = C51193 * C404;
    const double C51497 = C152376 * C404;
    const double C73677 = C73652 * C404;
    const double C74011 = C152539 * C404;
    const double C73995 = C152540 * C404;
    const double C667 = C152324 * C651;
    const double C7418 = C6298 * C651;
    const double C24017 = C152474 * C651;
    const double C51833 = C51193 * C651;
    const double C74770 = C152539 * C651;
    const double C683 = C152324 * C657;
    const double C6961 = C6298 * C657;
    const double C24009 = C152474 * C657;
    const double C51825 = C51193 * C657;
    const double C74313 = C152539 * C657;
    const double C1235 = C152324 * C1223;
    const double C6945 = C6299 * C1223;
    const double C7741 = C6298 * C1223;
    const double C23985 = C152376 * C1223;
    const double C24787 = C152474 * C1223;
    const double C51801 = C152376 * C1223;
    const double C52603 = C51193 * C1223;
    const double C74297 = C152540 * C1223;
    const double C75093 = C152539 * C1223;
    const double C15433 = C152324 * C2658;
    const double C44219 = C152474 * C2658;
    const double C68879 = C51193 * C2658;
    const double C10196 = C6299 * C3182;
    const double C16166 = C152324 * C3182;
    const double C27192 = C152376 * C3182;
    const double C44640 = C152474 * C3182;
    const double C55008 = C152376 * C3182;
    const double C68669 = C51193 * C3182;
    const double C77460 = C152540 * C3182;
    const double C431 = C134 * C388;
    const double C6342 = C6307 * C388;
    const double C23714 = C23384 * C388;
    const double C51530 = C51200 * C388;
    const double C73694 = C73659 * C388;
    const double C433 = C134 * C389;
    const double C6344 = C6307 * C389;
    const double C23716 = C23384 * C389;
    const double C51532 = C51200 * C389;
    const double C73696 = C73659 * C389;
    const double C435 = C134 * C390;
    const double C23415 = C23384 * C390;
    const double C51231 = C51200 * C390;
    const double C437 = C134 * C391;
    const double C23417 = C23384 * C391;
    const double C51233 = C51200 * C391;
    const double C1236 = C134 * C1215;
    const double C24018 = C23384 * C1215;
    const double C51834 = C51200 * C1215;
    const double C1238 = C134 * C1216;
    const double C24020 = C23384 * C1216;
    const double C51836 = C51200 * C1216;
    const double C186 = C135 * C141;
    const double C432 = C135 * C369;
    const double C436 = C135 * C370;
    const double C685 = C135 * C622;
    const double C689 = C135 * C623;
    const double C1237 = C135 * C1206;
    const double C1863 = C135 * C1495;
    const double C2082 = C135 * C1677;
    const double C3020 = C135 * C2629;
    const double C1868 = C134 * C1506;
    const double C6646 = C6307 * C1506;
    const double C23708 = C23384 * C1506;
    const double C51524 = C51200 * C1506;
    const double C73998 = C73659 * C1506;
    const double C2866 = C134 * C1688;
    const double C24012 = C23384 * C1688;
    const double C51828 = C51200 * C1688;
    const double C2087 = C134 * C1696;
    const double C6948 = C6307 * C1696;
    const double C24790 = C23384 * C1696;
    const double C52606 = C51200 * C1696;
    const double C74300 = C73659 * C1696;
    const double C1866 = C134 * C1505;
    const double C6644 = C6307 * C1505;
    const double C23706 = C23384 * C1505;
    const double C51522 = C51200 * C1505;
    const double C73996 = C73659 * C1505;
    const double C2864 = C134 * C1687;
    const double C24010 = C23384 * C1687;
    const double C51826 = C51200 * C1687;
    const double C2085 = C134 * C1695;
    const double C6946 = C6307 * C1695;
    const double C24788 = C23384 * C1695;
    const double C52604 = C51200 * C1695;
    const double C74298 = C73659 * C1695;
    const double C151012 = C151010 + C151005;
    const double C151011 = C151009 + C151002;
    const double C151125 = C151118 + C151105;
    const double C151182 = C150718 * C151180;
    const double C151204 = 3 * C151180;
    const double C151190 = be * C151180;
    const double C17498 = C135 * C8334;
    const double C119539 = C135 * C10403;
    const double C151181 = C150718 * C151179;
    const double C151196 = 3 * C151179;
    const double C151189 = ae * C151179;
    const double C151427 = C151425 + C151421;
    const double C119926 = C135 * C18069;
    const double C1512 =
        (3 * (C150799 + C150718 * C150966 + C150962 * ae) +
         C150718 * (2 * C150966 + C150718 * C150989 + C150980 * ae) +
         (2 * C150962 + C150718 * C150980) * ae) /
        C150608;
    const double C1702 =
        (C150799 + C150718 * C150966 + C150962 * ae + C150989 * C151060) /
        C150608;
    const double C2236 =
        (C150928 * (2 * C150966 + C150718 * C150989 + C150980 * ae)) / C150608;
    const double C9660 =
        (2 * C150928 * C150989 + C150928 * (C150989 + C151180 * C151060)) /
        C150608;
    const double C202 = C196 - C183;
    const double C451 = C443 - C413;
    const double C455 = C447 - C429;
    const double C704 = C696 - C666;
    const double C708 = C700 - C682;
    const double C1249 = C1245 - C1234;
    const double C3035 = C3032 - C3025;
    const double C1876 = C1870 - C1871;
    const double C2874 = C2868 - C2869;
    const double C2095 = C2089 - C2090;
    const double C16181 = C16163 - C16164;
    const double C3039 = C3036 + C3030;
    const double C1523 =
        (3 * (C150731 + ae * C150965 + be * C150966 + C150718 * C150983) +
         ae * (2 * C150965 + C150718 * C150988 + C150980 * be) +
         be * (2 * C150966 + C150718 * C150989 + C150980 * ae) +
         C150718 * (2 * C150983 + ae * C150988 + be * C150989 +
                    C150718 * (C150740 + ae * C150978 + be * C150981 +
                               C150718 * (ae * C150808 + be * C150810 +
                                          C150718 * C150748)))) /
        C150616;
    const double C2243 =
        (2 * (ae * C150928 * C150787 + be * C150928 * C150788 +
              C150718 * C151082) +
         ae * C150928 * C150988 + be * C150928 * C150989 +
         C150718 * (C151082 + ae * C150928 * C150978 + be * C150928 * C150981 +
                    C150718 * (ae * C150928 * C150808 + be * C150928 * C150810 +
                               C150718 * C150928 * C150748))) /
        C150616;
    const double C8352 =
        (2 * (ae * (C150787 + C150808 * C151060) +
              be * (C150788 + C150810 * C151060) + C150718 * C151320) +
         ae * (C150988 + C151179 * C151060) +
         be * (C150989 + C151180 * C151060) +
         C150718 * (C151320 + ae * (C150978 + C151162 * C151060) +
                    be * (C150981 + C151165 * C151060) +
                    C150718 * (ae * (C150808 + C150823 * C151060) +
                               be * (C150810 + C150827 * C151060) +
                               C150718 * (C150748 + C150760 * C151060)))) /
        C150616;
    const double C1511 =
        (3 * (C150798 + C150718 * C150965 + C150962 * be) +
         C150718 * (2 * C150965 + C150718 * C150988 + C150980 * be) +
         (2 * C150962 + C150718 * C150980) * be) /
        C150608;
    const double C1701 =
        (C150798 + C150718 * C150965 + C150962 * be + C150988 * C151060) /
        C150608;
    const double C2235 =
        (C150928 * (2 * C150965 + C150718 * C150988 + C150980 * be)) / C150608;
    const double C9659 =
        (2 * C150928 * C150988 + C150928 * (C150988 + C151179 * C151060)) /
        C150608;
    const double C151178 = C151167 + C151174;
    const double C16780 = C16775 - C16753;
    const double C18825 = C18824 - C18822;
    const double C18103 = C18100 - C18096;
    const double C150764 = C150756 + C150763;
    const double C151029 = C151023 + C151016;
    const double C2659 =
        (3 * (C150750 + C150762 * C151060) +
         C150928 * (2 * C151086 + C150928 * (C150762 + C150777 * C151060))) /
        C150616;
    const double C3183 =
        (ae *
             (2 * C150928 * C150831 + C150928 * (C150831 + C150858 * C151060)) +
         be *
             (2 * C150928 * C150833 + C150928 * (C150833 + C150860 * C151060)) +
         C150718 * (2 * C151086 + C150928 * (C150762 + C150777 * C151060))) /
        C150616;
    const double C1869 = C152324 * C1520;
    const double C6655 = C6299 * C1520;
    const double C6647 = C6300 * C1520;
    const double C23709 = C152376 * C1520;
    const double C25578 = C152474 * C1520;
    const double C51525 = C152376 * C1520;
    const double C53394 = C51193 * C1520;
    const double C74007 = C152540 * C1520;
    const double C73999 = C73652 * C1520;
    const double C2867 = C152324 * C1710;
    const double C6957 = C6299 * C1710;
    const double C24013 = C152376 * C1710;
    const double C26966 = C152474 * C1710;
    const double C51829 = C152376 * C1710;
    const double C54782 = C51193 * C1710;
    const double C74309 = C152540 * C1710;
    const double C2088 = C152324 * C1714;
    const double C6949 = C6300 * C1714;
    const double C7737 = C6299 * C1714;
    const double C24791 = C152376 * C1714;
    const double C25896 = C152474 * C1714;
    const double C52607 = C152376 * C1714;
    const double C53712 = C51193 * C1714;
    const double C74301 = C73652 * C1714;
    const double C75089 = C152540 * C1714;
    const double C3026 = C152324 * C2654;
    const double C27188 = C152474 * C2654;
    const double C55004 = C51193 * C2654;
    const double C151132 = C150718 * C151126;
    const double C151250 = 2 * C151126;
    const double C151329 = C151328 + C151327;
    const double C151228 = C151217 + C151224;
    const double C151350 = C151349 + C151348;
    const double C151461 = C151459 + C151460;
    const double C16774 = C152324 * C9670;
    const double C45169 = C152376 * C9670;
    const double C67029 = C51193 * C9670;
    const double C67004 = C152376 * C9670;
    const double C96135 = C73652 * C9670;
    const double C96851 = C152540 * C9670;
    const double C112679 = C6300 * C9670;
    const double C113395 = C6299 * C9670;
    const double C144201 = C152474 * C9670;
    const double C18823 = C152324 * C9671;
    const double C44223 = C152376 * C9671;
    const double C68347 = C152376 * C9671;
    const double C69093 = C51193 * C9671;
    const double C96143 = C152540 * C9671;
    const double C112687 = C6299 * C9671;
    const double C146166 = C152474 * C9671;
    const double C69089 = C152376 * C9672;
    const double C96139 = C73652 * C9672;
    const double C112683 = C6300 * C9672;
    const double C119074 = C152324 * C9672;
    const double C146162 = C152376 * C9672;
    const double C151429 = C150718 * C151428;
    const double C151579 = 2 * C151428;
    const double C150779 = C150771 + C150778;
    const double C151386 = C151379 + C151368;
    const double C151411 = C150718 * C151408;
    const double C151456 = C150762 + C151455;
    const double C151285 = C150718 * C151279;
    const double C151360 = C150718 * C151357;
    const double C151464 = C150928 * C151357;
    const double C9669 =
        (2 * C151084 + C150928 * C151317 +
         ae *
             (2 * C150928 * C151001 + C150928 * (C151001 + C151120 * C151060)) +
         be *
             (2 * C150928 * C151004 + C150928 * (C151004 + C151123 * C151060)) +
         C150718 * (ae * (2 * C151322 + C150928 * C151355) +
                    be * (2 * C151323 + C150928 * C151356) +
                    C150718 * (2 * C151324 + C150928 * C151357))) /
        C150616;
    const double C9673 =
        (ae * (3 * (C150816 + C150841 * C151060) +
               C150928 * (2 * C151322 + C150928 * C151355)) +
         be * (3 * (C150820 + C150847 * C151060) +
               C150928 * (2 * C151323 + C150928 * C151356)) +
         C150718 *
             (3 * C151317 + C150928 * (2 * C151324 + C150928 * C151357))) /
        C150616;
    const double C9674 =
        (3 * C151317 + C150928 * (2 * C151324 + C150928 * C151357) +
         ae * (3 * (C151001 + C151120 * C151060) +
               C150928 *
                   (2 * C151432 + C150928 * (C151120 + C151280 * C151060))) +
         be * (3 * (C151004 + C151123 * C151060) +
               C150928 *
                   (2 * C151433 + C150928 * (C151123 + C151283 * C151060))) +
         C150718 *
             (ae * (3 * C151355 +
                    C150928 * (2 * C151434 +
                               C150928 * (C150875 + C151260 * C151060))) +
              be * (3 * C151356 +
                    C150928 * (2 * C151435 +
                               C150928 * (C150883 + C151266 * C151060))) +
              C150718 * (3 * C151357 +
                         C150928 * (2 * C151436 +
                                    C150928 * (C151257 +
                                               C150724 *
                                                   (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                   C150607 * C151060))))) /
        C150616;
    const double C151445 = C151443 + C151441;
    const double C151575 = C151573 + C151571;
    const double C151608 = C151606 + C151607;
    const double C151600 = C150718 * C151599;
    const double C150901 = C150878 + C150898;
    const double C151050 = C151044 + C151045;
    const double C151049 = C150859 + C151043;
    const double C151051 = C151042 * ae;
    const double C151048 = C151042 * be;
    const double C3172 =
        2 * C150928 * C150937 + C150928 * (C150937 + C151042 * C151060);
    const double C151047 = C151040 + C151041;
    const double C151395 = C150860 + C151390;
    const double C151394 = C151374 + C151389;
    const double C151393 = C150858 + C151387;
    const double C151299 = C151294 + C151284;
    const double C151300 = C151293 * ae;
    const double C151298 = C150718 * C151293;
    const double C151297 = C151293 * be;
    const double C10404 =
        2 * C150928 * C151134 + C150928 * (C151134 + C151293 * C151060);
    const double C151296 = C151292 + C151281;
    const double C151532 = C150718 * C151527;
    const double C151531 = C151494 + C151526;
    const double C151530 = C150718 * C151524;
    const double C150870 = C150846 + C150868;
    const double C150941 = C150938 + C150939;
    const double C3021 = C134 * C2638;
    const double C151033 = C150833 + C151031;
    const double C16173 = C134 * C3178;
    const double C27183 = C23384 * C3178;
    const double C54999 = C51200 * C3178;
    const double C151138 = C151135 + C151124;
    const double C18814 =
        (4 * (2 * C150928 * C151004 + C150928 * C151881) +
         C150928 * (3 * C151881 +
                    C150928 * (2 * C151433 +
                               C150928 * (C151123 + C151283 * C151060)))) /
        C150608;
    const double C18078 =
        (5 * (3 * C151839 + C150928 * C151861) +
         C150928 * (4 * C151861 +
                    C150928 * (3 * C151356 +
                               C150928 * (2 * C151435 +
                                          C150928 * (C150883 +
                                                     C151266 * C151060))))) /
        C150608;
    const double C151237 = C150718 * C151232;
    const double C151497 = 3 * C151232;
    const double C151480 = be * C151232;
    const double C151581 = C150928 * C151232;
    const double C151904 = C151232 * C151060;
    const double C9664 = (3 * (C150989 + C151180 * C151060) +
                          C150928 * (2 * C150928 * C151180 +
                                     C150928 * (C151180 + C151232 * C151060))) /
                         C150608;
    const double C151899 = C151897 + C151898;
    const double C68350 = C51200 * C18812;
    const double C120391 = C134 * C18812;
    const double C145464 = C23384 * C18812;
    const double C151913 = C151911 + C151912;
    const double C119927 = C134 * C18076;
    const double C150869 = C150840 + C150867;
    const double C150940 = C150935 + C150936;
    const double C151046 = C151037 + C151038;
    const double C3019 = C134 * C2637;
    const double C151032 = C150831 + C151030;
    const double C151378 = C150762 + C151364;
    const double C6953 = C6300 * C1719;
    const double C15190 = C152324 * C1719;
    const double C26962 = C152376 * C1719;
    const double C54778 = C152376 * C1719;
    const double C74305 = C73652 * C1719;
    const double C16171 = C134 * C3177;
    const double C27181 = C23384 * C3177;
    const double C54997 = C51200 * C3177;
    const double C15461 = C15455 - C15442;
    const double C151137 = C151133 + C151121;
    const double C151278 = C151268 + C151254;
    const double C151442 = C151324 + C151437;
    const double C18813 =
        (4 * (2 * C150928 * C151001 + C150928 * C151878) +
         C150928 * (3 * C151878 +
                    C150928 * (2 * C151432 +
                               C150928 * (C151120 + C151280 * C151060)))) /
        C150608;
    const double C18412 = C18405 - C18406;
    const double C18077 =
        (5 * (3 * C151836 + C150928 * C151857) +
         C150928 * (4 * C151857 +
                    C150928 * (3 * C151355 +
                               C150928 * (2 * C151434 +
                                          C150928 * (C150875 +
                                                     C151260 * C151060))))) /
        C150608;
    const double C18099 = C18090 - C18091;
    const double C151235 = C150718 * C151229;
    const double C151487 = 3 * C151229;
    const double C151479 = ae * C151229;
    const double C151580 = C150928 * C151229;
    const double C151901 = C151229 * C151060;
    const double C9663 = (3 * (C150988 + C151179 * C151060) +
                          C150928 * (2 * C150928 * C151179 +
                                     C150928 * (C151179 + C151229 * C151060))) /
                         C150608;
    const double C151523 = C151512 + C151519;
    const double C151572 = C151345 + C151567;
    const double C151895 = C151893 + C151894;
    const double C68348 = C51200 * C18811;
    const double C120389 = C134 * C18811;
    const double C145462 = C23384 * C18811;
    const double C151598 = C151595 + C151590;
    const double C151621 = C151619 + C151620;
    const double C151909 = C151907 + C151908;
    const double C119925 = C134 * C18075;
    const double C142 = 5 * (3 * C150809 + C150724 * C150832) +
                        C150724 * (4 * C150832 + C150724 * C150865);
    const double C371 = 3 * C150809 + C150724 * C150832 + C150865 * C150721;
    const double C372 = C150718 * (4 * C150832 + C150724 * C150865);
    const double C624 = 3 * C150809 + C150724 * C150832 + C150865 * C151060;
    const double C625 = C150928 * (4 * C150832 + C150724 * C150865);
    const double C1207 = C150928 * C150718 * C150865;
    const double C2861 = C135 * C1673;
    const double C16991 = C135 * C8333;
    const double C8101 = 5 * (3 * C150980 + C150718 * C151176) +
                         C150718 * (4 * C151176 + C150718 * C151236);
    const double C8337 = 3 * C150980 + C150718 * C151176 + C151236 * C151060;
    const double C9085 = C150928 * (4 * C151176 + C150718 * C151236);
    const double C119919 =
        6 * (4 * C152030 + C150928 * C152072) +
        C150928 *
            (5 * C152072 +
             C150928 * (4 * C152070 +
                        C150928 * (3 * C152068 +
                                   C150928 * (2 * C150928 * C150753 +
                                              C150928 * (C150753 +
                                                         C150768 * C151060)))));
    const double C150910 = C150724 * C150908;
    const double C151076 = C150718 * C150908;
    const double C150909 = C150724 * C150906;
    const double C151073 = C150718 * C150906;
    const double C152488 = C152442 / C152104;
    const double C152527 = C152492 / C152108;
    const double C152528 = C152494 + C152450;
    const double C853 = C152450 - C152125 / C152122;
    const double C152491 = C152446 / C152104;
    const double C152504 = C152460 / C152104;
    const double C152534 = C152507 / C152108;
    const double C152535 = C152508 + C152464;
    const double C1853 = C152464 - C152205 / C152122;
    const double C152506 = C152461 / C152104;
    const double C152510 = C152466 / C152104;
    const double C152537 = C152513 / C152108;
    const double C152538 = C152514 + C152470;
    const double C3012 = C152470 - C152247 / C152122;
    const double C152512 = C152467 / C152104;
    const double C150632 = C150606 * C150627;
    const double C6304 =
        (ae * -2 * C150615) / (C150616 * 2 * C150608) +
        (((C150606 *
           ((-4 * C150619) / C150608 - (C150606 * C150627) / C150608) * ae) /
              C150608 +
          2 * ((C150626 * ae) / C150608 - C150615 / C150618)) *
         ae) /
            C150608 -
        C150627 / C150618;
    const double C6308 = (-C150627 / C150608) / (4 * C150616);
    const double C23385 = (-C150627 / C150608) / (2 * C150608);
    const double C51201 = (-C150627 / C150608) / (2 * C150608);
    const double C59740 = (-C150627 / C150608) / (4 * C150678);
    const double C73660 = (-C150627 / C150608) / (4 * C150616);
    const double C150668 = C150662 / C150608;
    const double C6352 = C6305 * C391;
    const double C6350 = C6305 * C390;
    const double C6340 = C6305 * C375;
    const double C6338 = C6305 * C374;
    const double C6328 = C6305 * C377;
    const double C6326 = C6305 * C376;
    const double C6316 = C6305 * C379;
    const double C6314 = C6305 * C378;
    const double C6654 = C6305 * C1506;
    const double C6652 = C6305 * C1505;
    const double C6642 = C6305 * C387;
    const double C6640 = C6305 * C386;
    const double C6630 = C6305 * C1508;
    const double C6628 = C6305 * C1507;
    const double C6618 = C6305 * C385;
    const double C6616 = C6305 * C384;
    const double C6956 = C6305 * C1688;
    const double C6954 = C6305 * C1687;
    const double C6944 = C6305 * C1214;
    const double C6942 = C6305 * C1213;
    const double C6932 = C6305 * C1690;
    const double C6930 = C6305 * C1689;
    const double C6920 = C6305 * C1212;
    const double C6918 = C6305 * C1211;
    const double C7198 = C6305 * C389;
    const double C7196 = C6305 * C388;
    const double C7413 = C6305 * C1216;
    const double C7411 = C6305 * C1215;
    const double C7736 = C6305 * C1696;
    const double C7734 = C6305 * C1695;
    const double C7724 = C6305 * C1698;
    const double C7722 = C6305 * C1697;
    const double C10195 = C6305 * C3176;
    const double C10193 = C6305 * C3175;
    const double C110067 = C6305 * C1692;
    const double C110065 = C6305 * C1691;
    const double C110055 = C6305 * C1210;
    const double C110053 = C6305 * C1209;
    const double C110775 = C6305 * C1700;
    const double C110773 = C6305 * C1699;
    const double C112686 = C6305 * C9662;
    const double C112684 = C6305 * C9661;
    const double C112674 = C6305 * C3174;
    const double C112672 = C6305 * C3173;
    const double C23425 = C23382 * C155;
    const double C23423 = C23382 * C154;
    const double C23413 = C23382 * C153;
    const double C23411 = C23382 * C152;
    const double C23409 = C23382 * C151;
    const double C23407 = C23382 * C150;
    const double C23397 = C23382 * C149;
    const double C23395 = C23382 * C148;
    const double C23389 = C23382 * C147;
    const double C23387 = C23382 * C146;
    const double C23724 = C23382 * C389;
    const double C23722 = C23382 * C388;
    const double C23712 = C23382 * C375;
    const double C23710 = C23382 * C374;
    const double C23704 = C23382 * C387;
    const double C23702 = C23382 * C386;
    const double C23696 = C23382 * C385;
    const double C23694 = C23382 * C384;
    const double C23692 = C23382 * C379;
    const double C23690 = C23382 * C378;
    const double C23684 = C23382 * C377;
    const double C23682 = C23382 * C376;
    const double C24028 = C23382 * C642;
    const double C24026 = C23382 * C641;
    const double C24016 = C23382 * C628;
    const double C24014 = C23382 * C627;
    const double C24008 = C23382 * C640;
    const double C24006 = C23382 * C639;
    const double C24000 = C23382 * C638;
    const double C23998 = C23382 * C637;
    const double C23996 = C23382 * C632;
    const double C23994 = C23382 * C631;
    const double C23988 = C23382 * C630;
    const double C23986 = C23382 * C629;
    const double C24269 = C23382 * C391;
    const double C24267 = C23382 * C390;
    const double C24478 = C23382 * C644;
    const double C24476 = C23382 * C643;
    const double C24798 = C23382 * C1216;
    const double C24796 = C23382 * C1215;
    const double C24786 = C23382 * C1214;
    const double C24784 = C23382 * C1213;
    const double C24778 = C23382 * C1212;
    const double C24776 = C23382 * C1211;
    const double C25585 = C23382 * C1508;
    const double C25583 = C23382 * C1507;
    const double C25577 = C23382 * C1506;
    const double C25575 = C23382 * C1505;
    const double C25903 = C23382 * C1698;
    const double C25901 = C23382 * C1697;
    const double C25895 = C23382 * C1696;
    const double C25893 = C23382 * C1695;
    const double C26973 = C23382 * C1690;
    const double C26971 = C23382 * C1689;
    const double C26965 = C23382 * C1688;
    const double C26963 = C23382 * C1687;
    const double C27195 = C23382 * C2642;
    const double C27193 = C23382 * C2641;
    const double C27187 = C23382 * C2640;
    const double C27185 = C23382 * C2639;
    const double C40794 = C23382 * C636;
    const double C40792 = C23382 * C635;
    const double C40780 = C23382 * C634;
    const double C40778 = C23382 * C633;
    const double C41717 = C23382 * C1210;
    const double C41715 = C23382 * C1209;
    const double C42484 = C23382 * C1700;
    const double C42482 = C23382 * C1699;
    const double C42476 = C23382 * C1692;
    const double C42474 = C23382 * C1691;
    const double C44226 = C23382 * C2646;
    const double C44224 = C23382 * C2645;
    const double C44218 = C23382 * C2648;
    const double C44216 = C23382 * C2647;
    const double C44206 = C23382 * C2644;
    const double C44204 = C23382 * C2643;
    const double C44639 = C23382 * C3176;
    const double C44637 = C23382 * C3175;
    const double C45172 = C23382 * C3174;
    const double C45170 = C23382 * C3173;
    const double C145468 = C23382 * C18074;
    const double C145466 = C23382 * C18073;
    const double C146165 = C23382 * C9662;
    const double C146163 = C23382 * C9661;
    const double C51241 = C51198 * C155;
    const double C51239 = C51198 * C154;
    const double C51229 = C51198 * C153;
    const double C51227 = C51198 * C152;
    const double C51225 = C51198 * C151;
    const double C51223 = C51198 * C150;
    const double C51213 = C51198 * C149;
    const double C51211 = C51198 * C148;
    const double C51205 = C51198 * C147;
    const double C51203 = C51198 * C146;
    const double C51540 = C51198 * C389;
    const double C51538 = C51198 * C388;
    const double C51528 = C51198 * C375;
    const double C51526 = C51198 * C374;
    const double C51520 = C51198 * C387;
    const double C51518 = C51198 * C386;
    const double C51512 = C51198 * C385;
    const double C51510 = C51198 * C384;
    const double C51508 = C51198 * C379;
    const double C51506 = C51198 * C378;
    const double C51500 = C51198 * C377;
    const double C51498 = C51198 * C376;
    const double C51844 = C51198 * C642;
    const double C51842 = C51198 * C641;
    const double C51832 = C51198 * C628;
    const double C51830 = C51198 * C627;
    const double C51824 = C51198 * C640;
    const double C51822 = C51198 * C639;
    const double C51816 = C51198 * C638;
    const double C51814 = C51198 * C637;
    const double C51812 = C51198 * C632;
    const double C51810 = C51198 * C631;
    const double C51804 = C51198 * C630;
    const double C51802 = C51198 * C629;
    const double C52085 = C51198 * C391;
    const double C52083 = C51198 * C390;
    const double C52294 = C51198 * C644;
    const double C52292 = C51198 * C643;
    const double C52614 = C51198 * C1216;
    const double C52612 = C51198 * C1215;
    const double C52602 = C51198 * C1214;
    const double C52600 = C51198 * C1213;
    const double C52594 = C51198 * C1212;
    const double C52592 = C51198 * C1211;
    const double C53401 = C51198 * C1508;
    const double C53399 = C51198 * C1507;
    const double C53393 = C51198 * C1506;
    const double C53391 = C51198 * C1505;
    const double C53719 = C51198 * C1698;
    const double C53717 = C51198 * C1697;
    const double C53711 = C51198 * C1696;
    const double C53709 = C51198 * C1695;
    const double C54789 = C51198 * C1690;
    const double C54787 = C51198 * C1689;
    const double C54781 = C51198 * C1688;
    const double C54779 = C51198 * C1687;
    const double C55011 = C51198 * C2642;
    const double C55009 = C51198 * C2641;
    const double C55003 = C51198 * C2640;
    const double C55001 = C51198 * C2639;
    const double C65708 = C51198 * C2644;
    const double C65706 = C51198 * C2643;
    const double C65696 = C51198 * C636;
    const double C65694 = C51198 * C635;
    const double C65688 = C51198 * C634;
    const double C65686 = C51198 * C633;
    const double C66421 = C51198 * C1692;
    const double C66419 = C51198 * C1691;
    const double C66413 = C51198 * C1210;
    const double C66411 = C51198 * C1209;
    const double C67008 = C51198 * C1700;
    const double C67006 = C51198 * C1699;
    const double C66999 = C51198 * C3174;
    const double C66997 = C51198 * C3173;
    const double C68354 = C51198 * C18074;
    const double C68352 = C51198 * C18073;
    const double C68342 = C51198 * C2646;
    const double C68340 = C51198 * C2645;
    const double C68668 = C51198 * C3176;
    const double C68666 = C51198 * C3175;
    const double C68878 = C51198 * C2648;
    const double C68876 = C51198 * C2647;
    const double C69092 = C51198 * C9662;
    const double C69090 = C51198 * C9661;
    const double C15436 = C715 * C6301;
    const double C15424 = C715 * C152089;
    const double C32400 = C715 * C152522;
    const double C32395 = C715 * C152523;
    const double C101862 = C715 * C51195;
    const double C101857 = C715 * C51196;
    const double C118220 = C715 * C152084;
    const double C134754 = C715 * C152436;
    const double C134749 = C715 * C152089;
    const double C16167 = C1252 * C6301;
    const double C16157 = C1252 * C152089;
    const double C33093 = C1252 * C152522;
    const double C33091 = C1252 * C152523;
    const double C102555 = C1252 * C51195;
    const double C102553 = C1252 * C51196;
    const double C118687 = C1252 * C152084;
    const double C135453 = C1252 * C152436;
    const double C135450 = C1252 * C152089;
    const double C16188 = C16184 + C16161;
    const double C16786 = C16781 + C16760;
    const double C18107 = C18104 * C6301;
    const double C34920 = C18104 * C152522;
    const double C104375 = C18104 * C51195;
    const double C118218 = C18104 * C152084;
    const double C137274 = C18104 * C152436;
    const double C15465 = C15460 + C15433;
    const double C197 = C185 - C186;
    const double C448 = C431 - C432;
    const double C449 = C435 - C436;
    const double C701 = C684 - C685;
    const double C702 = C688 - C689;
    const double C1246 = C1236 - C1237;
    const double C1875 = C1866 - C1867;
    const double C2873 = C2864 - C2865;
    const double C2094 = C2085 - C2086;
    const double C1514 =
        (3 * (C150803 + C150718 * C150958 + C150954 * ae) +
         C150718 * (2 * C150958 + C150718 * C151012 + C151003 * ae) +
         (2 * C150954 + C150718 * C151003) * ae) /
        C150608;
    const double C1704 =
        (C150803 + C150718 * C150958 + C150954 * ae + C151012 * C151060) /
        C150608;
    const double C2238 =
        (C150928 * (2 * C150958 + C150718 * C151012 + C151003 * ae)) / C150608;
    const double C1524 =
        (3 * (C150951 + ae * C150957 + be * C150958 + C150718 * C151006) +
         ae * (2 * C150957 + C150718 * C151011 + C151003 * be) +
         be * (2 * C150958 + C150718 * C151012 + C151003 * ae) +
         C150718 * (2 * C151006 + ae * C151011 + be * C151012 +
                    C150718 * (C150752 + ae * C151001 + be * C151004 +
                               C150718 * (ae * C150841 + be * C150847 +
                                          C150718 * C150767)))) /
        C150616;
    const double C2244 =
        (2 * (ae * C150928 * C150816 + be * C150928 * C150820 +
              C150718 * C151084) +
         ae * C150928 * C151011 + be * C150928 * C151012 +
         C150718 * (C151084 + ae * C150928 * C151001 + be * C150928 * C151004 +
                    C150718 * (ae * C150928 * C150841 + be * C150928 * C150847 +
                               C150718 * C150928 * C150767))) /
        C150616;
    const double C1513 =
        (3 * (C150801 + C150718 * C150957 + C150954 * be) +
         C150718 * (2 * C150957 + C150718 * C151011 + C151003 * be) +
         (2 * C150954 + C150718 * C151003) * be) /
        C150608;
    const double C1703 =
        (C150801 + C150718 * C150957 + C150954 * be + C151011 * C151060) /
        C150608;
    const double C2237 =
        (C150928 * (2 * C150957 + C150718 * C151011 + C151003 * be)) / C150608;
    const double C151184 = C151157 + C151182;
    const double C151183 = C151151 + C151181;
    const double C151208 = C151188 + C151189;
    const double C16764 = C134 * C1702;
    const double C42504 = C23382 * C1702;
    const double C42480 = C23384 * C1702;
    const double C66425 = C51200 * C1702;
    const double C67016 = C51198 * C1702;
    const double C93519 = C73659 * C1702;
    const double C110063 = C6307 * C1702;
    const double C111382 = C6303 * C1702;
    const double C111354 = C6305 * C1702;
    const double C17494 = C134 * C2236;
    const double C42488 = C23384 * C2236;
    const double C43450 = C23382 * C2236;
    const double C67012 = C51200 * C2236;
    const double C67751 = C51198 * C2236;
    const double C94235 = C73659 * C2236;
    const double C110779 = C6307 * C2236;
    const double C111366 = C6305 * C2236;
    const double C112091 = C6303 * C2236;
    const double C16773 = C134 * C9660;
    const double C45168 = C23384 * C9660;
    const double C67028 = C51198 * C9660;
    const double C67003 = C51200 * C9660;
    const double C96134 = C73659 * C9660;
    const double C112678 = C6307 * C9660;
    const double C113394 = C6305 * C9660;
    const double C144200 = C23382 * C9660;
    const double C208 = C202 + C184;
    const double C459 = C451 + C414;
    const double C463 = C455 + C430;
    const double C712 = C704 + C667;
    const double C716 = C708 + C683;
    const double C1253 = C1249 + C1235;
    const double C1879 = C1876 - C1872;
    const double C2877 = C2874 - C2870;
    const double C2098 = C2095 - C2091;
    const double C16185 = C16181 - C16165;
    const double C15438 = C3039 * C6301;
    const double C15425 = C3039 * C152089;
    const double C34916 = C3039 * C152523;
    const double C35410 = C3039 * C152522;
    const double C104371 = C3039 * C51196;
    const double C104865 = C3039 * C51195;
    const double C118221 = C3039 * C152084;
    const double C134756 = C3039 * C152436;
    const double C134750 = C3039 * C152089;
    const double C17495 = C152324 * C2243;
    const double C42489 = C152376 * C2243;
    const double C43451 = C152474 * C2243;
    const double C67013 = C152376 * C2243;
    const double C67752 = C51193 * C2243;
    const double C94236 = C73652 * C2243;
    const double C94823 = C152540 * C2243;
    const double C95548 = C152539 * C2243;
    const double C110780 = C6300 * C2243;
    const double C111367 = C6299 * C2243;
    const double C112092 = C6298 * C2243;
    const double C17500 = C152324 * C8352;
    const double C42501 = C152376 * C8352;
    const double C67021 = C152376 * C8352;
    const double C67760 = C51193 * C8352;
    const double C94835 = C152540 * C8352;
    const double C94815 = C73652 * C8352;
    const double C111379 = C6299 * C8352;
    const double C111359 = C6300 * C8352;
    const double C144891 = C152474 * C8352;
    const double C16762 = C134 * C1701;
    const double C42502 = C23382 * C1701;
    const double C42478 = C23384 * C1701;
    const double C66423 = C51200 * C1701;
    const double C67014 = C51198 * C1701;
    const double C93517 = C73659 * C1701;
    const double C110061 = C6307 * C1701;
    const double C111380 = C6303 * C1701;
    const double C111352 = C6305 * C1701;
    const double C17492 = C134 * C2235;
    const double C42486 = C23384 * C2235;
    const double C43448 = C23382 * C2235;
    const double C67010 = C51200 * C2235;
    const double C67749 = C51198 * C2235;
    const double C94233 = C73659 * C2235;
    const double C110777 = C6307 * C2235;
    const double C111364 = C6305 * C2235;
    const double C112089 = C6303 * C2235;
    const double C16771 = C134 * C9659;
    const double C45166 = C23384 * C9659;
    const double C67026 = C51198 * C9659;
    const double C67001 = C51200 * C9659;
    const double C96132 = C73659 * C9659;
    const double C112676 = C6307 * C9659;
    const double C113392 = C6305 * C9659;
    const double C144198 = C23382 * C9659;
    const double C16785 = C16780 + C16754;
    const double C166 =
        (5 * (3 * C150750 + C150724 * C150764) +
         C150724 *
             (4 * C150764 +
              C150724 *
                  (3 * C150762 +
                   C150724 * (2 * C150724 * C150760 +
                              C150724 * (C150760 + (C150754 * C150755 +
                                                    C150721 * bs[8] *
                                                        std::pow(C150716, 8)) *
                                                       C150607 * C150736))))) /
        C150616;
    const double C405 =
        (2 * C150724 * C150740 + C150724 * C150750 +
         ae * (C150718 * C150836 + C150832 * be) +
         be * (C150718 * C150837 + C150832 * ae) +
         C150718 * (ae * C150836 + be * C150837 + C150718 * C150764)) /
        C150616;
    const double C406 = (ae * (3 * C150813 + C150724 * C150836) +
                         be * (3 * C150814 + C150724 * C150837) +
                         C150718 * (3 * C150750 + C150724 * C150764)) /
                        C150616;
    const double C658 = (2 * C150724 * C150740 + C150724 * C150750 +
                         C150764 * std::pow(zP - zQ, 2)) /
                        C150616;
    const double C659 =
        ((zP - zQ) * (3 * C150750 + C150724 * C150764)) / C150616;
    const double C1224 = (ae * C150928 * C150836 + be * C150928 * C150837 +
                          C150718 * C150928 * C150764) /
                         C150616;
    const double C15443 = C152324 * C2659;
    const double C16174 = C152324 * C3183;
    const double C27184 = C152376 * C3183;
    const double C55000 = C152376 * C3183;
    const double C3038 = C3035 + C3026;
    const double C151136 = C151125 + C151132;
    const double C151234 = C150718 * C151228;
    const double C151475 = 3 * C151228;
    const double C10409 =
        (2 * (ae * (2 * C151331 + C150928 * C151343) +
              be * (2 * C151332 + C150928 * C151344) + C150718 * C151461) +
         ae *
             (2 * C150928 * C151179 + C150928 * (C151179 + C151229 * C151060)) +
         be *
             (2 * C150928 * C151180 + C150928 * (C151180 + C151232 * C151060)) +
         C150718 *
             (C151461 +
              ae * (2 * C151415 + C150928 * (C151162 + C151211 * C151060)) +
              be * (2 * C151416 + C150928 * (C151165 + C151214 * C151060)) +
              C150718 *
                  (ae *
                       (2 * C151417 + C150928 * (C150823 + C150850 * C151060)) +
                   be *
                       (2 * C151418 + C150928 * (C150827 + C150854 * C151060)) +
                   C150718 * (2 * C151419 +
                              C150928 * (C150760 + C150775 * C151060))))) /
        C150616;
    const double C18080 = (4 * (2 * C151082 + C150928 * C151320) +
                           C150928 * (3 * C151320 + C150928 * C151461)) /
                          C150616;
    const double C18081 =
        (5 * (3 * C151320 + C150928 * C151461) +
         C150928 * (4 * C151461 +
                    C150928 * (3 * C151345 +
                               C150928 * (2 * C151419 +
                                          C150928 * (C150760 +
                                                     C150775 * C151060))))) /
        C150616;
    const double C18815 =
        (ae *
             (4 * (2 * C151331 + C150928 * C151343) +
              C150928 * (3 * C151343 +
                         C150928 * (2 * C151417 +
                                    C150928 * (C150823 + C150850 * C151060)))) +
         be *
             (4 * (2 * C151332 + C150928 * C151344) +
              C150928 * (3 * C151344 +
                         C150928 * (2 * C151418 +
                                    C150928 * (C150827 + C150854 * C151060)))) +
         C150718 * (4 * C151461 +
                    C150928 * (3 * C151345 +
                               C150928 * (2 * C151419 +
                                          C150928 * (C150760 +
                                                     C150775 * C151060))))) /
        C150616;
    const double C18826 = C18825 + C18823;
    const double C151430 = C151427 + C151429;
    const double C150780 = C150724 * C150779;
    const double C151039 = C150718 * C150779;
    const double C151088 = C150928 * C150779;
    const double C1709 = (ae * (C150836 + C150864 * C151060) +
                          be * (C150837 + C150866 * C151060) +
                          C150718 * (C150764 + C150779 * C151060)) /
                         C150616;
    const double C2653 =
        (2 * C150928 * C150764 + C150928 * (C150764 + C150779 * C151060)) /
        C150616;
    const double C151392 = C150718 * C151386;
    const double C151413 = C151412 + C151411;
    const double C10187 =
        (2 * C151086 + C150928 * C151456 +
         ae *
             (2 * C150928 * C151024 + C150928 * (C151024 + C151380 * C151060)) +
         be *
             (2 * C150928 * C151027 + C150928 * (C151027 + C151383 * C151060)) +
         C150718 *
             (ae * (2 * C151406 + C150928 * (C150858 + C150894 * C151060)) +
              be * (2 * C151407 + C150928 * (C150860 + C150896 * C151060)) +
              C150718 *
                  (2 * C151408 +
                   C150928 * (C150777 + (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736) *
                                            C151060)))) /
        C150616;
    const double C18403 =
        (ae * (3 * (C150831 + C150858 * C151060) +
               C150928 *
                   (2 * C151406 + C150928 * (C150858 + C150894 * C151060))) +
         be * (3 * (C150833 + C150860 * C151060) +
               C150928 *
                   (2 * C151407 + C150928 * (C150860 + C150896 * C151060))) +
         C150718 *
             (3 * C151456 +
              C150928 *
                  (2 * C151408 +
                   C150928 * (C150777 + (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736) *
                                            C151060)))) /
        C150616;
    const double C18611 =
        (4 * (2 * C151086 + C150928 * C151456) +
         C150928 *
             (3 * C151456 +
              C150928 *
                  (2 * C151408 +
                   C150928 * (C150777 + (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736) *
                                            C151060)))) /
        C150616;
    const double C151362 = C151361 + C151360;
    const double C151465 = C151463 + C151464;
    const double C10192 = C6300 * C9669;
    const double C16770 = C152324 * C9669;
    const double C44636 = C152376 * C9669;
    const double C68665 = C152376 * C9669;
    const double C77456 = C73652 * C9669;
    const double C18408 = C152324 * C9673;
    const double C44215 = C152376 * C9673;
    const double C68875 = C152376 * C9673;
    const double C151446 = C150718 * C151445;
    const double C151576 = C150718 * C151575;
    const double C151609 = C150928 * C151608;
    const double C151616 = C150718 * C151608;
    const double C150904 = C150724 * C150901;
    const double C151077 = C150901 * ae;
    const double C151075 = C150718 * C150901;
    const double C151074 = C150901 * be;
    const double C1857 =
        2 * C150718 * C150865 + C150718 * (C150865 + C150901 * C150721);
    const double C2076 = C150928 * (C150865 + C150901 * C150721);
    const double C3014 =
        2 * C150928 * C150865 + C150928 * (C150865 + C150901 * C151060);
    const double C151054 = C150718 * C151050;
    const double C1502 = 3 * (C150832 + C150859 * C150721) +
                         C150718 * (2 * C150937 + C150718 * C151049);
    const double C1684 = C150832 + C150859 * C150721 + C151049 * C151060;
    const double C2234 = C150928 * (2 * C150937 + C150718 * C151049);
    const double C151053 = C150718 * C151047;
    const double C151398 = C151395 + C151384;
    const double C8551 = 4 * (2 * C150945 + C150718 * C151026) +
                         C150718 * (3 * C151026 + C150718 * C151394);
    const double C8866 = C150928 * (3 * C151026 + C150718 * C151394);
    const double C9965 = 2 * C150945 + C150718 * C151026 + C151394 * C151060;
    const double C151397 = C151393 + C151381;
    const double C151304 = C150718 * C151299;
    const double C151303 = C151263 + C151298;
    const double C151302 = C150718 * C151296;
    const double C151537 = C151498 + C151532;
    const double C151538 = C151531 * ae;
    const double C151536 = C150718 * C151531;
    const double C151535 = C151531 * be;
    const double C62159 =
        2 * C150928 * C151236 + C150928 * (C151236 + C151531 * C151060);
    const double C151534 = C151488 + C151530;
    const double C157 = (5 * (3 * C150814 + C150724 * C150837) +
                         C150724 * (4 * C150837 + C150724 * C150870)) /
                        C150608;
    const double C393 = (3 * C150814 + C150724 * C150837 +
                         C150718 * (C150718 * C150870 + C150865 * ae) +
                         C150718 * C150865 * ae) /
                        C150608;
    const double C395 = (C150718 * (4 * C150837 + C150724 * C150870) +
                         (4 * C150832 + C150724 * C150865) * ae) /
                        C150608;
    const double C646 =
        (3 * C150814 + C150724 * C150837 + C150870 * C151060) / C150608;
    const double C648 = (C150928 * (4 * C150837 + C150724 * C150870)) / C150608;
    const double C1218 =
        (C150928 * (C150718 * C150870 + C150865 * ae)) / C150608;
    const double C3016 =
        (2 * C150928 * C150870 + C150928 * (C150870 + C150908 * C151060)) /
        C150608;
    const double C1504 =
        (2 * (C150718 * C150837 + C150832 * ae) +
         C150718 * (C150837 + C150718 * C150941 + C150937 * ae) +
         (C150832 + C150859 * C150721) * ae) /
        C150608;
    const double C1686 =
        (C150718 * C150837 + C150832 * ae + C150941 * C151060) / C150608;
    const double C1694 =
        (C150928 * (C150837 + C150718 * C150941 + C150937 * ae)) / C150608;
    const double C3180 =
        (2 * C150928 * C150941 + C150928 * (C150941 + C151050 * C151060)) /
        C150608;
    const double C151035 = C151033 + C151028;
    const double C151140 = C150718 * C151138;
    const double C151264 = 3 * C151138;
    const double C151252 = be * C151138;
    const double C9658 =
        (2 * C150928 * C151012 + C150928 * (C151012 + C151138 * C151060)) /
        C150608;
    const double C9668 = (3 * (C151012 + C151138 * C151060) +
                          C150928 * (2 * C150928 * C151138 +
                                     C150928 * (C151138 + C151299 * C151060))) /
                         C150608;
    const double C151240 = C151205 + C151237;
    const double C151588 = be * C151581;
    const double C151905 = C151180 + C151904;
    const double C69088 = C51200 * C9664;
    const double C96138 = C73659 * C9664;
    const double C112682 = C6307 * C9664;
    const double C119073 = C134 * C9664;
    const double C146161 = C23384 * C9664;
    const double C68336 =
        (5 * (3 * C151875 + C150928 * C151899) +
         C150928 * (4 * C151899 +
                    C150928 * (3 * C151563 +
                               C150928 * (2 * C151583 +
                                          C150928 * (C151214 +
                                                     C151508 * C151060))))) /
        C150608;
    const double C119921 =
        (6 * (4 * C151853 + C150928 * C151913) +
         C150928 *
             (5 * C151913 +
              C150928 *
                  (4 * C151618 +
                   C150928 * (3 * C151565 +
                              C150928 * (2 * C151585 +
                                         C150928 * (C150854 +
                                                    C150890 * C151060)))))) /
        C150608;
    const double C156 = (5 * (3 * C150813 + C150724 * C150836) +
                         C150724 * (4 * C150836 + C150724 * C150869)) /
                        C150608;
    const double C392 = (3 * C150813 + C150724 * C150836 +
                         C150718 * (C150718 * C150869 + C150865 * be) +
                         C150718 * C150865 * be) /
                        C150608;
    const double C394 = (C150718 * (4 * C150836 + C150724 * C150869) +
                         (4 * C150832 + C150724 * C150865) * be) /
                        C150608;
    const double C645 =
        (3 * C150813 + C150724 * C150836 + C150869 * C151060) / C150608;
    const double C647 = (C150928 * (4 * C150836 + C150724 * C150869)) / C150608;
    const double C1217 =
        (C150928 * (C150718 * C150869 + C150865 * be)) / C150608;
    const double C3015 =
        (2 * C150928 * C150869 + C150928 * (C150869 + C150906 * C151060)) /
        C150608;
    const double C1519 =
        (2 * (ae * C150836 + be * C150837 + C150718 * C150764) +
         ae * (C150836 + C150718 * C150940 + C150937 * be) +
         be * (C150837 + C150718 * C150941 + C150937 * ae) +
         C150718 *
             (C150764 + ae * C150940 + be * C150941 +
              C150718 * (ae * C150864 + be * C150866 + C150718 * C150779))) /
        C150616;
    const double C1713 =
        (C150928 * C150764 + ae * C150928 * C150940 + be * C150928 * C150941 +
         C150718 * (ae * C150928 * C150864 + be * C150928 * C150866 +
                    C150718 * C150928 * C150779)) /
        C150616;
    const double C1720 =
        (C150764 + C150779 * C151060 + ae * (C150940 + C151047 * C151060) +
         be * (C150941 + C151050 * C151060) +
         C150718 *
             (ae * (C150864 + C150900 * C151060) +
              be * (C150866 + C150902 * C151060) +
              C150718 * (C150779 +
                         (2 * C150724 * C150775 +
                          C150724 * (C150775 +
                                     (C150769 * C150770 +
                                      C150721 * bs[9] * std::pow(C150720, 9)) *
                                         C150607 * C150736)) *
                             C151060))) /
        C150616;
    const double C1503 =
        (2 * (C150718 * C150836 + C150832 * be) +
         C150718 * (C150836 + C150718 * C150940 + C150937 * be) +
         (C150832 + C150859 * C150721) * be) /
        C150608;
    const double C1685 =
        (C150718 * C150836 + C150832 * be + C150940 * C151060) / C150608;
    const double C1693 =
        (C150928 * (C150836 + C150718 * C150940 + C150937 * be)) / C150608;
    const double C3179 =
        (2 * C150928 * C150940 + C150928 * (C150940 + C151047 * C151060)) /
        C150608;
    const double C3031 = C3019 - C3020;
    const double C151034 = C151032 + C151025;
    const double C151385 = C151378 + C151365;
    const double C16182 = C16171 - C16172;
    const double C151139 = C150718 * C151137;
    const double C151258 = 3 * C151137;
    const double C151251 = ae * C151137;
    const double C8351 =
        (2 * (ae * (C150816 + C150841 * C151060) +
              be * (C150820 + C150847 * C151060) + C150718 * C151317) +
         ae * (C151011 + C151137 * C151060) +
         be * (C151012 + C151138 * C151060) +
         C150718 * (C151317 + ae * (C151001 + C151120 * C151060) +
                    be * (C151004 + C151123 * C151060) +
                    C150718 * (ae * (C150841 + C150875 * C151060) +
                               be * (C150847 + C150883 * C151060) +
                               C150718 * (C150767 + C151257 * C151060)))) /
        C150616;
    const double C9657 =
        (2 * C150928 * C151011 + C150928 * (C151011 + C151137 * C151060)) /
        C150608;
    const double C9667 = (3 * (C151011 + C151137 * C151060) +
                          C150928 * (2 * C150928 * C151137 +
                                     C150928 * (C151137 + C151296 * C151060))) /
                         C150608;
    const double C151291 = C151278 + C151285;
    const double C151444 = C151442 + C151438;
    const double C18413 = C18412 - C18407;
    const double C18102 = C18099 - C18092;
    const double C151239 = C151197 + C151235;
    const double C151502 = C151478 + C151479;
    const double C151587 = ae * C151580;
    const double C151902 = C151179 + C151901;
    const double C69086 = C51200 * C9663;
    const double C96136 = C73659 * C9663;
    const double C112680 = C6307 * C9663;
    const double C119071 = C134 * C9663;
    const double C146159 = C23384 * C9663;
    const double C151529 = C150718 * C151523;
    const double C151574 = C151572 + C151568;
    const double C68335 =
        (5 * (3 * C151872 + C150928 * C151895) +
         C150928 * (4 * C151895 +
                    C150928 * (3 * C151562 +
                               C150928 * (2 * C151582 +
                                          C150928 * (C151211 +
                                                     C151505 * C151060))))) /
        C150608;
    const double C120393 = C120389 - C120390;
    const double C151601 = C151598 + C151600;
    const double C119920 =
        (6 * (4 * C151849 + C150928 * C151909) +
         C150928 *
             (5 * C151909 +
              C150928 *
                  (4 * C151617 +
                   C150928 * (3 * C151564 +
                              C150928 * (2 * C151584 +
                                         C150928 * (C150850 +
                                                    C150886 * C151060)))))) /
        C150608;
    const double C119929 = C119925 - C119926;
    const double C190 = C135 * C142;
    const double C440 = C135 * C371;
    const double C861 = C135 * C372;
    const double C693 = C135 * C624;
    const double C1004 = C135 * C625;
    const double C1241 = C135 * C1207;
    const double C150912 = C150881 + C150910;
    const double C150911 = C150873 + C150909;
    const double C152552 = C152488 + C152544;
    const double C852 = C152527 - (C152127 * C152109) / C152104;
    const double C132 = C152528 / C152108 - C152125 / C152495;
    const double C152545 = C152491 + C152527;
    const double C152553 = C152504 + C152548;
    const double C1852 = C152534 - (C152207 * C152196) / C152104;
    const double C1492 = C152535 / C152108 - C152205 / C152495;
    const double C152549 = C152506 + C152534;
    const double C152554 = C152510 + C152550;
    const double C3011 = C152537 - (C152249 * C152238) / C152104;
    const double C2627 = C152538 / C152108 - C152247 / C152495;
    const double C152551 = C152512 + C152537;
    const double C150681 = C150632 / C150608;
    const double C6306 =
        (((-4 * C150619) / C150608 - C150632 / C150608) * ae) / C150618 +
        ((2 * ((0 * ae) / C150608 - C150619 / C150616) - C150632 / C150618) *
         ae) /
            C150608;
    const double C23383 =
        (((-4 * C150619) / C150608 - C150632 / C150608) * ae) / C150608;
    const double C51199 =
        -(((-4 * C150619) / C150608 - C150632 / C150608) * be) / C150608;
    const double C6355 = C6304 * C140;
    const double C6335 = C6304 * C139;
    const double C6331 = C6304 * C138;
    const double C6311 = C6304 * C137;
    const double C6657 = C6304 * C368;
    const double C6637 = C6304 * C363;
    const double C6625 = C6304 * C367;
    const double C6621 = C6304 * C364;
    const double C6959 = C6304 * C621;
    const double C6939 = C6304 * C616;
    const double C6927 = C6304 * C620;
    const double C6923 = C6304 * C617;
    const double C7201 = C6304 * C362;
    const double C7416 = C6304 * C615;
    const double C7739 = C6304 * C1205;
    const double C7719 = C6304 * C1204;
    const double C8565 = C6304 * C1497;
    const double C8880 = C6304 * C1679;
    const double C9979 = C6304 * C1675;
    const double C10198 = C6304 * C2631;
    const double C110070 = C6304 * C619;
    const double C110050 = C6304 * C618;
    const double C110770 = C6304 * C1203;
    const double C111381 = C6304 * C1681;
    const double C111361 = C6304 * C1680;
    const double C111349 = C6304 * C1676;
    const double C112090 = C6304 * C2231;
    const double C112689 = C6304 * C2633;
    const double C112669 = C6304 * C2632;
    const double C113397 = C6304 * C3169;
    const double C6347 = C6308 * C371;
    const double C6343 = C6308 * C369;
    const double C6323 = C6308 * C368;
    const double C6319 = C6308 * C367;
    const double C6649 = C6308 * C1501;
    const double C6645 = C6308 * C1496;
    const double C6633 = C6308 * C1500;
    const double C6613 = C6308 * C1497;
    const double C6951 = C6308 * C1683;
    const double C6947 = C6308 * C1678;
    const double C6935 = C6308 * C1682;
    const double C6915 = C6308 * C1679;
    const double C7193 = C6308 * C1495;
    const double C7408 = C6308 * C1677;
    const double C7731 = C6308 * C2233;
    const double C7727 = C6308 * C2232;
    const double C8557 = C6308 * C8099;
    const double C8872 = C6308 * C8335;
    const double C9971 = C6308 * C8333;
    const double C10190 = C6308 * C9651;
    const double C110062 = C6308 * C1681;
    const double C110058 = C6308 * C1680;
    const double C110778 = C6308 * C2231;
    const double C111373 = C6308 * C8337;
    const double C111369 = C6308 * C8336;
    const double C111357 = C6308 * C8334;
    const double C112098 = C6308 * C9085;
    const double C112681 = C6308 * C9654;
    const double C112677 = C6308 * C9652;
    const double C113389 = C6308 * C10403;
    const double C23420 = C23385 * C372;
    const double C23416 = C23385 * C370;
    const double C23404 = C23385 * C362;
    const double C23400 = C23385 * C363;
    const double C23392 = C23385 * C364;
    const double C23719 = C23385 * C1495;
    const double C23715 = C23385 * C369;
    const double C23707 = C23385 * C1496;
    const double C23699 = C23385 * C1497;
    const double C23687 = C23385 * C367;
    const double C23679 = C23385 * C368;
    const double C24023 = C23385 * C1673;
    const double C24019 = C23385 * C1206;
    const double C24011 = C23385 * C1674;
    const double C24003 = C23385 * C1675;
    const double C23991 = C23385 * C1204;
    const double C23983 = C23385 * C1205;
    const double C24264 = C23385 * C371;
    const double C24473 = C23385 * C1207;
    const double C24793 = C23385 * C1677;
    const double C24789 = C23385 * C1678;
    const double C24781 = C23385 * C1679;
    const double C25580 = C23385 * C1500;
    const double C25572 = C23385 * C1501;
    const double C25898 = C23385 * C2232;
    const double C25890 = C23385 * C2233;
    const double C26968 = C23385 * C1682;
    const double C26960 = C23385 * C1683;
    const double C27190 = C23385 * C3170;
    const double C27182 = C23385 * C3171;
    const double C40789 = C23385 * C1676;
    const double C40783 = C23385 * C1203;
    const double C41720 = C23385 * C1680;
    const double C42499 = C23385 * C8334;
    const double C42491 = C23385 * C8333;
    const double C42487 = C23385 * C2231;
    const double C42479 = C23385 * C1681;
    const double C42789 = C23385 * C8335;
    const double C43453 = C23385 * C8336;
    const double C44221 = C23385 * C9653;
    const double C44213 = C23385 * C9655;
    const double C44209 = C23385 * C3169;
    const double C44634 = C23385 * C9651;
    const double C45167 = C23385 * C9652;
    const double C144195 = C23385 * C10403;
    const double C144893 = C23385 * C8337;
    const double C145463 = C23385 * C18809;
    const double C146160 = C23385 * C9654;
    const double C51236 = C51201 * C372;
    const double C51232 = C51201 * C370;
    const double C51220 = C51201 * C362;
    const double C51216 = C51201 * C363;
    const double C51208 = C51201 * C364;
    const double C51535 = C51201 * C1495;
    const double C51531 = C51201 * C369;
    const double C51523 = C51201 * C1496;
    const double C51515 = C51201 * C1497;
    const double C51503 = C51201 * C367;
    const double C51495 = C51201 * C368;
    const double C51839 = C51201 * C1673;
    const double C51835 = C51201 * C1206;
    const double C51827 = C51201 * C1674;
    const double C51819 = C51201 * C1675;
    const double C51807 = C51201 * C1204;
    const double C51799 = C51201 * C1205;
    const double C52080 = C51201 * C371;
    const double C52289 = C51201 * C1207;
    const double C52609 = C51201 * C1677;
    const double C52605 = C51201 * C1678;
    const double C52597 = C51201 * C1679;
    const double C53396 = C51201 * C1500;
    const double C53388 = C51201 * C1501;
    const double C53714 = C51201 * C2232;
    const double C53706 = C51201 * C2233;
    const double C54784 = C51201 * C1682;
    const double C54776 = C51201 * C1683;
    const double C55006 = C51201 * C3170;
    const double C54998 = C51201 * C3171;
    const double C65703 = C51201 * C3169;
    const double C65699 = C51201 * C1676;
    const double C65691 = C51201 * C1203;
    const double C66424 = C51201 * C1681;
    const double C66416 = C51201 * C1680;
    const double C67023 = C51201 * C10403;
    const double C67019 = C51201 * C8334;
    const double C67011 = C51201 * C2231;
    const double C67002 = C51201 * C9652;
    const double C67546 = C51201 * C8333;
    const double C67762 = C51201 * C8337;
    const double C67754 = C51201 * C8336;
    const double C68349 = C51201 * C18809;
    const double C68345 = C51201 * C9653;
    const double C68663 = C51201 * C9651;
    const double C68873 = C51201 * C9655;
    const double C69087 = C51201 * C9654;
    const double C84750 = C51201 * C8335;
    const double C73699 = C73660 * C371;
    const double C73695 = C73660 * C369;
    const double C73675 = C73660 * C368;
    const double C73671 = C73660 * C367;
    const double C74001 = C73660 * C1501;
    const double C73997 = C73660 * C1496;
    const double C73985 = C73660 * C1500;
    const double C73965 = C73660 * C1497;
    const double C74303 = C73660 * C1683;
    const double C74299 = C73660 * C1678;
    const double C74287 = C73660 * C1682;
    const double C74267 = C73660 * C1679;
    const double C74545 = C73660 * C1495;
    const double C74760 = C73660 * C1677;
    const double C75083 = C73660 * C2233;
    const double C75079 = C73660 * C2232;
    const double C75865 = C73660 * C8099;
    const double C76176 = C73660 * C8335;
    const double C77239 = C73660 * C8333;
    const double C77454 = C73660 * C9651;
    const double C93518 = C73660 * C1681;
    const double C93514 = C73660 * C1680;
    const double C94234 = C73660 * C2231;
    const double C94829 = C73660 * C8337;
    const double C94825 = C73660 * C8336;
    const double C94813 = C73660 * C8334;
    const double C95554 = C73660 * C9085;
    const double C96137 = C73660 * C9654;
    const double C96133 = C73660 * C9652;
    const double C96845 = C73660 * C10403;
    const double C150671 = C150668 - C150663;
    const double C15470 = C15468 + C15424;
    const double C134764 = C134748 + C134749;
    const double C16192 = C16188 * C6301;
    const double C33657 = C16188 * C152522;
    const double C103119 = C16188 * C51195;
    const double C118685 = C16188 * C152084;
    const double C135451 = C16188 * C152436;
    const double C16791 = C16786 * C6301;
    const double C33660 = C16786 * C152522;
    const double C103122 = C16786 * C51195;
    const double C119068 = C16786 * C152084;
    const double C136022 = C16786 * C152436;
    const double C18089 = C15465 * C152089;
    const double C18615 = C15465 * C6301;
    const double C34919 = C15465 * C152523;
    const double C104374 = C15465 * C51196;
    const double C118222 = C15465 * C152084;
    const double C137275 = C15465 * C152089;
    const double C137768 = C15465 * C152436;
    const double C203 = C197 - C187;
    const double C456 = C448 - C433;
    const double C457 = C449 - C437;
    const double C709 = C701 - C686;
    const double C710 = C702 - C690;
    const double C1250 = C1246 - C1238;
    const double C1878 = C1875 - C1868;
    const double C2876 = C2873 - C2866;
    const double C2097 = C2094 - C2087;
    const double C6634 = C6307 * C1514;
    const double C8562 = C6305 * C1514;
    const double C25581 = C23384 * C1514;
    const double C53397 = C51200 * C1514;
    const double C73986 = C73659 * C1514;
    const double C6936 = C6307 * C1704;
    const double C9976 = C6305 * C1704;
    const double C15185 = C134 * C1704;
    const double C26969 = C23384 * C1704;
    const double C42496 = C23382 * C1704;
    const double C54785 = C51200 * C1704;
    const double C67543 = C51198 * C1704;
    const double C74288 = C73659 * C1704;
    const double C7728 = C6307 * C2238;
    const double C8877 = C6305 * C2238;
    const double C16996 = C134 * C2238;
    const double C25899 = C23384 * C2238;
    const double C42794 = C23382 * C2238;
    const double C53715 = C51200 * C2238;
    const double C75080 = C73659 * C2238;
    const double C84755 = C51198 * C2238;
    const double C6635 = C6300 * C1524;
    const double C8563 = C6299 * C1524;
    const double C25582 = C152376 * C1524;
    const double C53398 = C152376 * C1524;
    const double C73987 = C73652 * C1524;
    const double C75871 = C152540 * C1524;
    const double C7729 = C6300 * C2244;
    const double C8878 = C6299 * C2244;
    const double C16997 = C152324 * C2244;
    const double C25900 = C152376 * C2244;
    const double C42795 = C152474 * C2244;
    const double C53716 = C152376 * C2244;
    const double C75081 = C73652 * C2244;
    const double C76182 = C152540 * C2244;
    const double C84756 = C51193 * C2244;
    const double C6632 = C6307 * C1513;
    const double C8560 = C6305 * C1513;
    const double C25579 = C23384 * C1513;
    const double C53395 = C51200 * C1513;
    const double C73984 = C73659 * C1513;
    const double C6934 = C6307 * C1703;
    const double C9974 = C6305 * C1703;
    const double C15183 = C134 * C1703;
    const double C26967 = C23384 * C1703;
    const double C42494 = C23382 * C1703;
    const double C54783 = C51200 * C1703;
    const double C67541 = C51198 * C1703;
    const double C74286 = C73659 * C1703;
    const double C7726 = C6307 * C2237;
    const double C8875 = C6305 * C2237;
    const double C16994 = C134 * C2237;
    const double C25897 = C23384 * C2237;
    const double C42792 = C23382 * C2237;
    const double C53713 = C51200 * C2237;
    const double C75078 = C73659 * C2237;
    const double C84753 = C51198 * C2237;
    const double C151186 = C151184 + C151173;
    const double C151185 = C151183 + C151170;
    const double C151216 = C151208 + C151190;
    const double C15445 = C712 * C152089;
    const double C15859 = C712 * C6301;
    const double C32404 = C712 * C152523;
    const double C32399 = C712 * C23381;
    const double C32797 = C712 * C152522;
    const double C101866 = C712 * C51196;
    const double C101861 = C712 * C51197;
    const double C102259 = C712 * C51195;
    const double C118487 = C712 * C152084;
    const double C134759 = C712 * C152089;
    const double C135155 = C712 * C152436;
    const double C15446 = C716 * C6301;
    const double C15437 = C716 * C152089;
    const double C32408 = C716 * C152522;
    const double C32401 = C716 * C152523;
    const double C32394 = C716 * C23381;
    const double C101870 = C716 * C51195;
    const double C101863 = C716 * C51196;
    const double C101856 = C716 * C51197;
    const double C118224 = C716 * C152084;
    const double C134760 = C716 * C152436;
    const double C134755 = C716 * C152089;
    const double C16175 = C1253 * C6301;
    const double C16168 = C1253 * C152089;
    const double C33096 = C1253 * C152522;
    const double C33094 = C1253 * C152523;
    const double C33092 = C1253 * C23381;
    const double C102558 = C1253 * C51195;
    const double C102556 = C1253 * C51196;
    const double C102554 = C1253 * C51197;
    const double C118690 = C1253 * C152084;
    const double C135457 = C1253 * C152436;
    const double C135454 = C1253 * C152089;
    const double C1882 = C1879 + C1873;
    const double C2880 = C2877 + C2871;
    const double C2101 = C2098 + C2092;
    const double C16189 = C16185 + C16166;
    const double C18084 = C15425 + C15469;
    const double C137273 = C134750 + C134751;
    const double C16777 = C16762 - C16763;
    const double C17502 = C17492 - C17493;
    const double C16779 = C16771 - C16772;
    const double C16790 = C16785 * C6301;
    const double C35607 = C16785 * C152522;
    const double C105062 = C16785 * C51195;
    const double C118686 = C16785 * C152084;
    const double C136019 = C16785 * C152436;
    const double C192 = C152324 * C166;
    const double C434 = C152324 * C405;
    const double C6345 = C6300 * C405;
    const double C7199 = C6299 * C405;
    const double C23725 = C152474 * C405;
    const double C23717 = C152376 * C405;
    const double C51541 = C51193 * C405;
    const double C51533 = C152376 * C405;
    const double C73697 = C73652 * C405;
    const double C74551 = C152540 * C405;
    const double C438 = C152324 * C406;
    const double C6353 = C6299 * C406;
    const double C23418 = C152376 * C406;
    const double C24270 = C152474 * C406;
    const double C51234 = C152376 * C406;
    const double C52086 = C51193 * C406;
    const double C73705 = C152540 * C406;
    const double C687 = C152324 * C658;
    const double C24029 = C152474 * C658;
    const double C51845 = C51193 * C658;
    const double C691 = C152324 * C659;
    const double C24479 = C152474 * C659;
    const double C52295 = C51193 * C659;
    const double C1239 = C152324 * C1224;
    const double C7414 = C6299 * C1224;
    const double C24021 = C152376 * C1224;
    const double C24799 = C152474 * C1224;
    const double C51837 = C152376 * C1224;
    const double C52615 = C51193 * C1224;
    const double C74766 = C152540 * C1224;
    const double C15466 = C15461 + C15443;
    const double C15449 = C3038 * C6301;
    const double C15439 = C3038 * C152089;
    const double C34917 = C3038 * C23381;
    const double C35409 = C3038 * C152523;
    const double C104372 = C3038 * C51197;
    const double C104864 = C3038 * C51196;
    const double C118225 = C3038 * C152084;
    const double C134763 = C3038 * C152436;
    const double C134757 = C3038 * C152089;
    const double C67025 = C152376 * C10409;
    const double C96847 = C73652 * C10409;
    const double C113391 = C6300 * C10409;
    const double C119541 = C152324 * C10409;
    const double C144197 = C152376 * C10409;
    const double C18097 = C152324 * C18080;
    const double C68355 = C51193 * C18080;
    const double C145469 = C152474 * C18080;
    const double C119928 = C152324 * C18081;
    const double C68351 = C152376 * C18815;
    const double C120392 = C152324 * C18815;
    const double C145465 = C152376 * C18815;
    const double C18827 = C18826 * C6301;
    const double C119067 = C18826 * C152084;
    const double C137965 = C18826 * C152436;
    const double C150781 = C150766 + C150780;
    const double C151052 = C151046 + C151039;
    const double C2660 =
        (3 * (C150764 + C150779 * C151060) +
         C150928 *
             (2 * C151088 +
              C150928 * (C150779 +
                         (2 * C150724 * C150775 +
                          C150724 * (C150775 +
                                     (C150769 * C150770 +
                                      C150721 * bs[9] * std::pow(C150720, 9)) *
                                         C150607 * C150736)) *
                             C151060))) /
        C150616;
    const double C3184 =
        (ae *
             (2 * C150928 * C150864 + C150928 * (C150864 + C150900 * C151060)) +
         be *
             (2 * C150928 * C150866 + C150928 * (C150866 + C150902 * C151060)) +
         C150718 *
             (2 * C151088 +
              C150928 * (C150779 +
                         (2 * C150724 * C150775 +
                          C150724 * (C150775 +
                                     (C150769 * C150770 +
                                      C150721 * bs[9] * std::pow(C150720, 9)) *
                                         C150607 * C150736)) *
                             C151060))) /
        C150616;
    const double C2863 = C152324 * C1709;
    const double C24025 = C152376 * C1709;
    const double C51841 = C152376 * C1709;
    const double C3022 = C152324 * C2653;
    const double C10410 =
        (2 * (ae * (2 * C151322 + C150928 * C151355) +
              be * (2 * C151323 + C150928 * C151356) + C150718 * C151465) +
         ae *
             (2 * C150928 * C151137 + C150928 * (C151137 + C151296 * C151060)) +
         be *
             (2 * C150928 * C151138 + C150928 * (C151138 + C151299 * C151060)) +
         C150718 *
             (C151465 +
              ae * (2 * C151432 + C150928 * (C151120 + C151280 * C151060)) +
              be * (2 * C151433 + C150928 * (C151123 + C151283 * C151060)) +
              C150718 * (ae * (2 * C151434 +
                               C150928 * (C150875 + C151260 * C151060)) +
                         be * (2 * C151435 +
                               C150928 * (C150883 + C151266 * C151060)) +
                         C150718 * (2 * C151436 +
                                    C150928 * (C151257 +
                                               C150724 *
                                                   (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                   C150607 * C151060))))) /
        C150616;
    const double C18079 = (4 * (2 * C151084 + C150928 * C151317) +
                           C150928 * (3 * C151317 + C150928 * C151465)) /
                          C150616;
    const double C18082 =
        (5 * (3 * C151317 + C150928 * C151465) +
         C150928 *
             (4 * C151465 +
              C150928 * (3 * C151357 +
                         C150928 * (2 * C151436 +
                                    C150928 * (C151257 +
                                               C150724 *
                                                   (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                   C150607 * C151060))))) /
        C150616;
    const double C18816 =
        (ae *
             (4 * (2 * C151322 + C150928 * C151355) +
              C150928 * (3 * C151355 +
                         C150928 * (2 * C151434 +
                                    C150928 * (C150875 + C151260 * C151060)))) +
         be *
             (4 * (2 * C151323 + C150928 * C151356) +
              C150928 * (3 * C151356 +
                         C150928 * (2 * C151435 +
                                    C150928 * (C150883 + C151266 * C151060)))) +
         C150718 *
             (4 * C151465 +
              C150928 * (3 * C151357 +
                         C150928 * (2 * C151436 +
                                    C150928 * (C151257 +
                                               C150724 *
                                                   (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                   C150607 * C151060))))) /
        C150616;
    const double C151610 = C151605 + C151609;
    const double C151622 = C151621 + C151616;
    const double C150907 = C150877 + C150904;
    const double C151079 = C151076 + C151077;
    const double C2855 = C150718 * C150865 + C151075 * C151060;
    const double C151078 = C151073 + C151074;
    const double C151056 = C150866 + C151054;
    const double C151055 = C150864 + C151053;
    const double C151400 = C150718 * C151398;
    const double C151399 = C150718 * C151397;
    const double C151306 = C151265 + C151304;
    const double C8102 = 5 * (3 * C151003 + C150718 * C151134) +
                         C150718 * (4 * C151134 + C150718 * C151303);
    const double C8338 = 3 * C151003 + C150718 * C151134 + C151303 * C151060;
    const double C9086 = C150928 * (4 * C151134 + C150718 * C151303);
    const double C151305 = C151259 + C151302;
    const double C151542 = C151537 + C151518;
    const double C151541 = C151495 + C151536;
    const double C151540 = C151534 + C151515;
    const double C191 = C134 * C157;
    const double C441 = C134 * C393;
    const double C6348 = C6307 * C393;
    const double C24265 = C23384 * C393;
    const double C52081 = C51200 * C393;
    const double C73700 = C73659 * C393;
    const double C862 = C134 * C395;
    const double C23421 = C23384 * C395;
    const double C51237 = C51200 * C395;
    const double C694 = C134 * C646;
    const double C1005 = C134 * C648;
    const double C1242 = C134 * C1218;
    const double C24474 = C23384 * C1218;
    const double C52290 = C51200 * C1218;
    const double C1864 = C134 * C1504;
    const double C7194 = C6307 * C1504;
    const double C23720 = C23384 * C1504;
    const double C51536 = C51200 * C1504;
    const double C74546 = C73659 * C1504;
    const double C2862 = C134 * C1686;
    const double C24024 = C23384 * C1686;
    const double C51840 = C51200 * C1686;
    const double C2083 = C134 * C1694;
    const double C7409 = C6307 * C1694;
    const double C24794 = C23384 * C1694;
    const double C52610 = C51200 * C1694;
    const double C74761 = C73659 * C1694;
    const double C1516 =
        (3 * (C150814 + C150718 * C150949 + C150945 * ae) +
         C150718 * (2 * C150949 + C150718 * C151035 + C151026 * ae) +
         (2 * C150945 + C150718 * C151026) * ae) /
        C150608;
    const double C1706 =
        (C150814 + C150718 * C150949 + C150945 * ae + C151035 * C151060) /
        C150608;
    const double C2240 =
        (C150928 * (2 * C150949 + C150718 * C151035 + C151026 * ae)) / C150608;
    const double C10186 =
        (2 * C150928 * C151035 + C150928 * (C151035 + C151398 * C151060)) /
        C150608;
    const double C151142 = C151115 + C151140;
    const double C10191 = C6307 * C9658;
    const double C16769 = C134 * C9658;
    const double C44635 = C23384 * C9658;
    const double C68664 = C51200 * C9658;
    const double C77455 = C73659 * C9658;
    const double C151242 = C151240 + C151223;
    const double C69082 =
        (4 * (2 * C150928 * C151180 + C150928 * C151905) +
         C150928 * (3 * C151905 +
                    C150928 * (2 * C151581 +
                               C150928 * (C151232 + C151527 * C151060)))) /
        C150608;
    const double C189 = C134 * C156;
    const double C439 = C134 * C392;
    const double C6346 = C6307 * C392;
    const double C24263 = C23384 * C392;
    const double C52079 = C51200 * C392;
    const double C73698 = C73659 * C392;
    const double C860 = C134 * C394;
    const double C23419 = C23384 * C394;
    const double C51235 = C51200 * C394;
    const double C692 = C134 * C645;
    const double C1003 = C134 * C647;
    const double C1240 = C134 * C1217;
    const double C24472 = C23384 * C1217;
    const double C52288 = C51200 * C1217;
    const double C1865 = C152324 * C1519;
    const double C7195 = C6300 * C1519;
    const double C23721 = C152376 * C1519;
    const double C51537 = C152376 * C1519;
    const double C74547 = C73652 * C1519;
    const double C2084 = C152324 * C1713;
    const double C7410 = C6300 * C1713;
    const double C24795 = C152376 * C1713;
    const double C52611 = C152376 * C1713;
    const double C74762 = C73652 * C1713;
    const double C1862 = C134 * C1503;
    const double C7192 = C6307 * C1503;
    const double C23718 = C23384 * C1503;
    const double C51534 = C51200 * C1503;
    const double C74544 = C73659 * C1503;
    const double C2860 = C134 * C1685;
    const double C24022 = C23384 * C1685;
    const double C51838 = C51200 * C1685;
    const double C2081 = C134 * C1693;
    const double C7407 = C6307 * C1693;
    const double C24792 = C23384 * C1693;
    const double C52608 = C51200 * C1693;
    const double C74759 = C73659 * C1693;
    const double C3034 = C3031 - C3021;
    const double C1525 =
        (3 * (C150750 + ae * C150948 + be * C150949 + C150718 * C151029) +
         ae * (2 * C150948 + C150718 * C151034 + C151026 * be) +
         be * (2 * C150949 + C150718 * C151035 + C151026 * ae) +
         C150718 * (2 * C151029 + ae * C151034 + be * C151035 +
                    C150718 * (C150762 + ae * C151024 + be * C151027 +
                               C150718 * (ae * C150858 + be * C150860 +
                                          C150718 * C150777)))) /
        C150616;
    const double C2245 =
        (2 * (ae * C150928 * C150831 + be * C150928 * C150833 +
              C150718 * C151086) +
         ae * C150928 * C151034 + be * C150928 * C151035 +
         C150718 * (C151086 + ae * C150928 * C151024 + be * C150928 * C151027 +
                    C150718 * (ae * C150928 * C150858 + be * C150928 * C150860 +
                               C150718 * C150928 * C150777))) /
        C150616;
    const double C9968 =
        (2 * (ae * (C150831 + C150858 * C151060) +
              be * (C150833 + C150860 * C151060) + C150718 * C151456) +
         ae * (C151034 + C151397 * C151060) +
         be * (C151035 + C151398 * C151060) +
         C150718 *
             (C151456 + ae * (C151024 + C151380 * C151060) +
              be * (C151027 + C151383 * C151060) +
              C150718 *
                  (ae * (C150858 + C150894 * C151060) +
                   be * (C150860 + C150896 * C151060) +
                   C150718 * (C150777 + (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736) *
                                            C151060)))) /
        C150616;
    const double C1515 =
        (3 * (C150813 + C150718 * C150948 + C150945 * be) +
         C150718 * (2 * C150948 + C150718 * C151034 + C151026 * be) +
         (2 * C150945 + C150718 * C151026) * be) /
        C150608;
    const double C1705 =
        (C150813 + C150718 * C150948 + C150945 * be + C151034 * C151060) /
        C150608;
    const double C2239 =
        (C150928 * (2 * C150948 + C150718 * C151034 + C151026 * be)) / C150608;
    const double C10185 =
        (2 * C150928 * C151034 + C150928 * (C151034 + C151397 * C151060)) /
        C150608;
    const double C151396 = C151385 + C151392;
    const double C16186 = C16182 - C16173;
    const double C151141 = C151109 + C151139;
    const double C151267 = C151250 + C151251;
    const double C9973 = C6300 * C8351;
    const double C16993 = C152324 * C8351;
    const double C42493 = C152376 * C8351;
    const double C67548 = C152376 * C8351;
    const double C77241 = C73652 * C8351;
    const double C10189 = C6307 * C9657;
    const double C16767 = C134 * C9657;
    const double C44633 = C23384 * C9657;
    const double C68662 = C51200 * C9657;
    const double C77453 = C73659 * C9657;
    const double C151295 = C150718 * C151291;
    const double C151447 = C151444 + C151446;
    const double C18414 = C18413 + C18408;
    const double C151241 = C151239 + C151220;
    const double C151511 = C151502 + C151480;
    const double C151594 = C151579 + C151587;
    const double C69081 =
        (4 * (2 * C150928 * C151179 + C150928 * C151902) +
         C150928 * (3 * C151902 +
                    C150928 * (2 * C151580 +
                               C150928 * (C151229 + C151524 * C151060)))) /
        C150608;
    const double C119075 = C119071 - C119072;
    const double C151577 = C151574 + C151576;
    const double C120394 = C120393 - C120391;
    const double C151602 = C150718 * C151601;
    const double C119930 = C119929 - C119927;
    const double C159 = (6 * (4 * C150837 + C150724 * C150870) +
                         C150724 * (5 * C150870 + C150724 * C150912)) /
                        C150608;
    const double C650 =
        (4 * C150837 + C150724 * C150870 + C150912 * C151060) / C150608;
    const double C1000 =
        (C150928 * (5 * C150870 + C150724 * C150912)) / C150608;
    const double C1226 =
        (ae * C150928 * C150911 + be * C150928 * C150912 +
         C150718 * C150928 *
             (4 * C150779 +
              C150724 *
                  (3 * C150777 +
                   C150724 * (2 * C150724 * C150775 +
                              C150724 * (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736))))) /
        C150616;
    const double C158 = (6 * (4 * C150836 + C150724 * C150869) +
                         C150724 * (5 * C150869 + C150724 * C150911)) /
                        C150608;
    const double C649 =
        (4 * C150836 + C150724 * C150869 + C150911 * C151060) / C150608;
    const double C999 = (C150928 * (5 * C150869 + C150724 * C150911)) / C150608;
    const double C129 =
        (C152543 + 2 * C152118) / C152108 - (C152552 * C152109) / C152104;
    const double C130 = (C152526 + 2 * C152127 + C152552) / C152108 -
                        (C152545 * C152109) / C152104;
    const double C131 = (C152493 + C152124 / C152104 + C152545) / C152108 -
                        (C152528 * C152109) / C152104;
    const double C1489 =
        (C152546 + 2 * C152200) / C152108 - (C152553 * C152196) / C152104;
    const double C1490 = (C152530 + 2 * C152207 + C152553) / C152108 -
                         (C152549 * C152196) / C152104;
    const double C1491 = (C152499 + C152204 / C152104 + C152549) / C152108 -
                         (C152535 * C152196) / C152104;
    const double C2624 =
        (C152547 + 2 * C152242) / C152108 - (C152554 * C152238) / C152104;
    const double C2625 = (C152532 + 2 * C152249 + C152554) / C152108 -
                         (C152551 * C152238) / C152104;
    const double C2626 = (C152502 + C152246 / C152104 + C152551) / C152108 -
                         (C152538 * C152238) / C152104;
    const double C150684 = C150683 - C150681;
    const double C6351 = C6306 * C370;
    const double C6339 = C6306 * C362;
    const double C6327 = C6306 * C363;
    const double C6315 = C6306 * C364;
    const double C6653 = C6306 * C1496;
    const double C6641 = C6306 * C368;
    const double C6629 = C6306 * C1497;
    const double C6617 = C6306 * C367;
    const double C6955 = C6306 * C1674;
    const double C6943 = C6306 * C1205;
    const double C6931 = C6306 * C1675;
    const double C6919 = C6306 * C1204;
    const double C7197 = C6306 * C369;
    const double C7412 = C6306 * C1206;
    const double C7735 = C6306 * C1678;
    const double C7723 = C6306 * C1679;
    const double C8561 = C6306 * C1500;
    const double C8876 = C6306 * C2232;
    const double C9975 = C6306 * C1682;
    const double C10194 = C6306 * C3170;
    const double C110066 = C6306 * C1676;
    const double C110054 = C6306 * C1203;
    const double C110774 = C6306 * C1680;
    const double C111377 = C6306 * C8334;
    const double C111365 = C6306 * C2231;
    const double C111353 = C6306 * C1681;
    const double C112094 = C6306 * C8336;
    const double C112685 = C6306 * C9653;
    const double C112673 = C6306 * C3169;
    const double C113393 = C6306 * C9652;
    const double C23424 = C23383 * C141;
    const double C23412 = C23383 * C140;
    const double C23408 = C23383 * C139;
    const double C23396 = C23383 * C138;
    const double C23388 = C23383 * C137;
    const double C23723 = C23383 * C369;
    const double C23711 = C23383 * C362;
    const double C23703 = C23383 * C368;
    const double C23695 = C23383 * C367;
    const double C23691 = C23383 * C364;
    const double C23683 = C23383 * C363;
    const double C24027 = C23383 * C622;
    const double C24015 = C23383 * C615;
    const double C24007 = C23383 * C621;
    const double C23999 = C23383 * C620;
    const double C23995 = C23383 * C617;
    const double C23987 = C23383 * C616;
    const double C24268 = C23383 * C370;
    const double C24477 = C23383 * C623;
    const double C24797 = C23383 * C1206;
    const double C24785 = C23383 * C1205;
    const double C24777 = C23383 * C1204;
    const double C25584 = C23383 * C1497;
    const double C25576 = C23383 * C1496;
    const double C25902 = C23383 * C1679;
    const double C25894 = C23383 * C1678;
    const double C26972 = C23383 * C1675;
    const double C26964 = C23383 * C1674;
    const double C27194 = C23383 * C2631;
    const double C27186 = C23383 * C2630;
    const double C40793 = C23383 * C619;
    const double C40779 = C23383 * C618;
    const double C41716 = C23383 * C1203;
    const double C42503 = C23383 * C1681;
    const double C42495 = C23383 * C1682;
    const double C42483 = C23383 * C1680;
    const double C42475 = C23383 * C1676;
    const double C42793 = C23383 * C2232;
    const double C43449 = C23383 * C2231;
    const double C44225 = C23383 * C2633;
    const double C44217 = C23383 * C2634;
    const double C44205 = C23383 * C2632;
    const double C44638 = C23383 * C3170;
    const double C45171 = C23383 * C3169;
    const double C144199 = C23383 * C9652;
    const double C144889 = C23383 * C8334;
    const double C145467 = C23383 * C18068;
    const double C146164 = C23383 * C9653;
    const double C51240 = C51199 * C141;
    const double C51228 = C51199 * C140;
    const double C51224 = C51199 * C139;
    const double C51212 = C51199 * C138;
    const double C51204 = C51199 * C137;
    const double C51539 = C51199 * C369;
    const double C51527 = C51199 * C362;
    const double C51519 = C51199 * C368;
    const double C51511 = C51199 * C367;
    const double C51507 = C51199 * C364;
    const double C51499 = C51199 * C363;
    const double C51843 = C51199 * C622;
    const double C51831 = C51199 * C615;
    const double C51823 = C51199 * C621;
    const double C51815 = C51199 * C620;
    const double C51811 = C51199 * C617;
    const double C51803 = C51199 * C616;
    const double C52084 = C51199 * C370;
    const double C52293 = C51199 * C623;
    const double C52613 = C51199 * C1206;
    const double C52601 = C51199 * C1205;
    const double C52593 = C51199 * C1204;
    const double C53400 = C51199 * C1497;
    const double C53392 = C51199 * C1496;
    const double C53718 = C51199 * C1679;
    const double C53710 = C51199 * C1678;
    const double C54788 = C51199 * C1675;
    const double C54780 = C51199 * C1674;
    const double C55010 = C51199 * C2631;
    const double C55002 = C51199 * C2630;
    const double C65707 = C51199 * C2632;
    const double C65695 = C51199 * C619;
    const double C65687 = C51199 * C618;
    const double C66420 = C51199 * C1676;
    const double C66412 = C51199 * C1203;
    const double C67027 = C51199 * C9652;
    const double C67015 = C51199 * C1681;
    const double C67007 = C51199 * C1680;
    const double C66998 = C51199 * C3169;
    const double C67542 = C51199 * C1682;
    const double C67758 = C51199 * C8334;
    const double C67750 = C51199 * C2231;
    const double C68353 = C51199 * C18068;
    const double C68341 = C51199 * C2633;
    const double C68667 = C51199 * C3170;
    const double C68877 = C51199 * C2634;
    const double C69091 = C51199 * C9653;
    const double C84754 = C51199 * C2232;
    const double C6369 = C6354 - C6355;
    const double C6364 = C6334 - C6335;
    const double C6363 = C6330 - C6331;
    const double C6358 = C6310 - C6311;
    const double C6671 = C6656 - C6657;
    const double C6666 = C6636 - C6637;
    const double C6663 = C6624 - C6625;
    const double C6662 = C6620 - C6621;
    const double C6973 = C6958 - C6959;
    const double C6968 = C6938 - C6939;
    const double C6965 = C6926 - C6927;
    const double C6964 = C6922 - C6923;
    const double C7206 = C7200 - C7201;
    const double C7421 = C7415 - C7416;
    const double C7747 = C7738 - C7739;
    const double C7742 = C7718 - C7719;
    const double C8570 = C8564 - C8565;
    const double C8885 = C8879 - C8880;
    const double C9984 = C9978 - C9979;
    const double C10203 = C10197 - C10198;
    const double C110078 = C110069 - C110070;
    const double C110073 = C110049 - C110050;
    const double C110781 = C110769 - C110770;
    const double C111392 = C111380 - C111381;
    const double C111387 = C111360 - C111361;
    const double C111384 = C111348 - C111349;
    const double C112101 = C112089 - C112090;
    const double C112697 = C112688 - C112689;
    const double C112692 = C112668 - C112669;
    const double C113402 = C113396 - C113397;
    const double C6366 = C6342 - C6343;
    const double C6361 = C6322 - C6323;
    const double C6360 = C6318 - C6319;
    const double C6668 = C6644 - C6645;
    const double C6660 = C6612 - C6613;
    const double C6970 = C6946 - C6947;
    const double C6962 = C6914 - C6915;
    const double C110076 = C110061 - C110062;
    const double C110075 = C110057 - C110058;
    const double C110783 = C110777 - C110778;
    const double C112695 = C112680 - C112681;
    const double C112694 = C112676 - C112677;
    const double C23434 = C23415 - C23416;
    const double C23431 = C23403 - C23404;
    const double C23430 = C23399 - C23400;
    const double C23428 = C23391 - C23392;
    const double C23735 = C23714 - C23715;
    const double C23733 = C23706 - C23707;
    const double C23731 = C23698 - C23699;
    const double C23728 = C23686 - C23687;
    const double C23726 = C23678 - C23679;
    const double C24039 = C24018 - C24019;
    const double C24037 = C24010 - C24011;
    const double C24035 = C24002 - C24003;
    const double C24032 = C23990 - C23991;
    const double C24030 = C23982 - C23983;
    const double C24803 = C24788 - C24789;
    const double C24801 = C24780 - C24781;
    const double C27199 = C27189 - C27190;
    const double C27197 = C27181 - C27182;
    const double C40802 = C40788 - C40789;
    const double C40801 = C40782 - C40783;
    const double C41727 = C41719 - C41720;
    const double C42509 = C42486 - C42487;
    const double C42507 = C42478 - C42479;
    const double C44232 = C44220 - C44221;
    const double C44230 = C44212 - C44213;
    const double C44229 = C44208 - C44209;
    const double C45174 = C45166 - C45167;
    const double C145472 = C145462 - C145463;
    const double C146168 = C146159 - C146160;
    const double C51250 = C51231 - C51232;
    const double C51247 = C51219 - C51220;
    const double C51246 = C51215 - C51216;
    const double C51244 = C51207 - C51208;
    const double C51551 = C51530 - C51531;
    const double C51549 = C51522 - C51523;
    const double C51547 = C51514 - C51515;
    const double C51544 = C51502 - C51503;
    const double C51542 = C51494 - C51495;
    const double C51855 = C51834 - C51835;
    const double C51853 = C51826 - C51827;
    const double C51851 = C51818 - C51819;
    const double C51848 = C51806 - C51807;
    const double C51846 = C51798 - C51799;
    const double C52619 = C52604 - C52605;
    const double C52617 = C52596 - C52597;
    const double C55015 = C55005 - C55006;
    const double C55013 = C54997 - C54998;
    const double C65716 = C65702 - C65703;
    const double C65715 = C65698 - C65699;
    const double C65713 = C65690 - C65691;
    const double C66430 = C66423 - C66424;
    const double C66428 = C66415 - C66416;
    const double C67034 = C67010 - C67011;
    const double C67031 = C67001 - C67002;
    const double C68359 = C68348 - C68349;
    const double C68358 = C68344 - C68345;
    const double C68881 = C68872 - C68873;
    const double C69095 = C69086 - C69087;
    const double C73718 = C73694 - C73695;
    const double C73713 = C73674 - C73675;
    const double C73712 = C73670 - C73671;
    const double C74020 = C73996 - C73997;
    const double C74012 = C73964 - C73965;
    const double C74322 = C74298 - C74299;
    const double C74314 = C74266 - C74267;
    const double C93532 = C93517 - C93518;
    const double C93531 = C93513 - C93514;
    const double C94239 = C94233 - C94234;
    const double C96151 = C96136 - C96137;
    const double C96150 = C96132 - C96133;
    const double C59733 =
        ((((0 - (C150606 * C150659) / C150608) * ae) / C150608 -
          (0 * be) / C150618 + C150615 / C150608) /
             C150660 -
         ((C150606 * C150675 + 0) * be) / C150608) /
            C150660 +
        ((C150606 * (C150675 / C150660 -
                     ((C150606 * C150671 + C152474) * be) / C150608 + C150672) +
          C152539) *
         ae) /
            C150608 +
        C150671 / C150660 - ((C150606 * C150672 + C152376) * be) / C150608;
    const double C59735 =
        (C150675 / C150660 - ((C150606 * C150671 + C152474) * be) / C150608 +
         C150672) /
            C150660 +
        ((C150606 * (C150671 / C150660 -
                     ((C150606 * C150672 + C152376) * be) / C150608) +
          C152540) *
         ae) /
            C150608 +
        2 * (C150672 / C150660 - (0 * be) / C150608);
    const double C59737 =
        (C150671 / C150660 - ((C150606 * C150672 + C152376) * be) / C150608) /
            C150660 +
        ((C150606 * (C150672 / C150660 - (0 * be) / C150608) + C73652) * ae) /
            C150608;
    const double C73655 = C150675 / C150660 -
                          ((C150606 * C150671 + C152474) * be) / C150608 +
                          C150672;
    const double C73657 =
        C150671 / C150660 - ((C150606 * C150672 + C152376) * be) / C150608;
    const double C18110 = C18107 + C18089;
    const double C137278 = C137274 + C137275;
    const double C209 = C203 + C188;
    const double C1881 = C1878 + C1869;
    const double C2879 = C2876 + C2867;
    const double C2100 = C2097 + C2088;
    const double C6665 = C6632 - C6633;
    const double C25589 = C25579 - C25580;
    const double C53405 = C53395 - C53396;
    const double C74017 = C73984 - C73985;
    const double C6967 = C6934 - C6935;
    const double C15191 = C15183 - C15184;
    const double C26977 = C26967 - C26968;
    const double C54793 = C54783 - C54784;
    const double C74319 = C74286 - C74287;
    const double C7744 = C7726 - C7727;
    const double C16999 = C16994 - C16995;
    const double C25907 = C25897 - C25898;
    const double C53723 = C53713 - C53714;
    const double C75096 = C75078 - C75079;
    const double C8106 =
        (4 * (2 * C150966 + C150718 * C150989 + C150980 * ae) +
         C150718 * (3 * C150989 + C150718 * C151186 + C151176 * ae) +
         (3 * C150980 + C150718 * C151176) * ae) /
        C150608;
    const double C8342 =
        (2 * C150966 + C150718 * C150989 + C150980 * ae + C151186 * C151060) /
        C150608;
    const double C8346 =
        (C150928 * (3 * C150989 + C150718 * C151186 + C151176 * ae)) / C150608;
    const double C8112 =
        (4 * (2 * C150983 + ae * C150988 + be * C150989 + C150718 * C151178) +
         ae * (3 * C150988 + C150718 * C151185 + C151176 * be) +
         be * (3 * C150989 + C150718 * C151186 + C151176 * ae) +
         C150718 *
             (3 * C151178 + ae * C151185 + be * C151186 +
              C150718 * (2 * C151168 + ae * C151179 + be * C151180 +
                         C150718 * (C150748 + ae * C151162 + be * C151165 +
                                    C150718 * (ae * C150823 + be * C150827 +
                                               C150718 * C150760))))) /
        C150616;
    const double C8354 =
        (3 * (C151082 + ae * C150928 * C150978 + be * C150928 * C150981 +
              C150718 * C151338) +
         ae * C150928 * C151185 + be * C150928 * C151186 +
         C150718 *
             (2 * C151338 + ae * C150928 * C151179 + be * C150928 * C151180 +
              C150718 *
                  (C151333 + ae * C150928 * C151162 + be * C150928 * C151165 +
                   C150718 * (ae * C150928 * C150823 + be * C150928 * C150827 +
                              C150718 * C150928 * C150760)))) /
        C150616;
    const double C8105 =
        (4 * (2 * C150965 + C150718 * C150988 + C150980 * be) +
         C150718 * (3 * C150988 + C150718 * C151185 + C151176 * be) +
         (3 * C150980 + C150718 * C151176) * be) /
        C150608;
    const double C8341 =
        (2 * C150965 + C150718 * C150988 + C150980 * be + C151185 * C151060) /
        C150608;
    const double C8345 =
        (C150928 * (3 * C150988 + C150718 * C151185 + C151176 * be)) / C150608;
    const double C151238 = C151216 + C151234;
    const double C15454 = C15437 + C15436;
    const double C134765 = C134755 + C134754;
    const double C16169 = C2880 * C6301;
    const double C16162 = C2880 * C152089;
    const double C33658 = C2880 * C152523;
    const double C35213 = C2880 * C152522;
    const double C103120 = C2880 * C51196;
    const double C104668 = C2880 * C51195;
    const double C118688 = C2880 * C152084;
    const double C135455 = C2880 * C152436;
    const double C135452 = C2880 * C152089;
    const double C16761 = C2101 * C152089;
    const double C17294 = C2101 * C6301;
    const double C33661 = C2101 * C152523;
    const double C34157 = C2101 * C152522;
    const double C103123 = C2101 * C51196;
    const double C103612 = C2101 * C51195;
    const double C119403 = C2101 * C152084;
    const double C136023 = C2101 * C152089;
    const double C136513 = C2101 * C152436;
    const double C16755 = C16189 * C152089;
    const double C18411 = C16189 * C6301;
    const double C35606 = C16189 * C152523;
    const double C105061 = C16189 * C51196;
    const double C118689 = C16189 * C152084;
    const double C136020 = C16189 * C152089;
    const double C137571 = C16189 * C152436;
    const double C16782 = C16777 - C16764;
    const double C17504 = C17502 - C17494;
    const double C16784 = C16779 - C16773;
    const double C464 = C456 + C434;
    const double C465 = C457 + C438;
    const double C717 = C709 + C687;
    const double C718 = C710 + C691;
    const double C1254 = C1250 + C1239;
    const double C18614 = C15466 * C152089;
    const double C34918 = C15466 * C23381;
    const double C104373 = C15466 * C51197;
    const double C118226 = C15466 * C152084;
    const double C137767 = C15466 * C152089;
    const double C18613 = C15438 + C15439;
    const double C137766 = C134756 + C134757;
    const double C18106 = C18103 + C18097;
    const double C167 =
        (6 * (4 * C150764 + C150724 * C150781) +
         C150724 *
             (5 * C150781 +
              C150724 *
                  (4 * C150779 +
                   C150724 *
                       (3 * C150777 +
                        C150724 *
                            (2 * C150724 * C150775 +
                             C150724 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150736)))))) /
        C150616;
    const double C407 =
        (3 * C150750 + C150724 * C150764 +
         ae * (C150718 * C150869 + C150865 * be) +
         be * (C150718 * C150870 + C150865 * ae) +
         C150718 * (ae * C150869 + be * C150870 + C150718 * C150781)) /
        C150616;
    const double C408 = (ae * (4 * C150836 + C150724 * C150869) +
                         be * (4 * C150837 + C150724 * C150870) +
                         C150718 * (4 * C150764 + C150724 * C150781)) /
                        C150616;
    const double C660 =
        (3 * C150750 + C150724 * C150764 + C150781 * std::pow(zP - zQ, 2)) /
        C150616;
    const double C661 =
        ((zP - zQ) * (4 * C150764 + C150724 * C150781)) / C150616;
    const double C662 =
        (4 * C150764 + C150724 * C150781 +
         (4 * C150779 +
          C150724 *
              (3 * C150777 +
               C150724 * (2 * C150724 * C150775 +
                          C150724 * (C150775 +
                                     (C150769 * C150770 +
                                      C150721 * bs[9] * std::pow(C150720, 9)) *
                                         C150607 * C150736)))) *
             std::pow(zP - zQ, 2)) /
        C150616;
    const double C858 =
        (ae * (5 * C150869 + C150724 * C150911) +
         be * (5 * C150870 + C150724 * C150912) +
         C150718 *
             (5 * C150781 +
              C150724 *
                  (4 * C150779 +
                   C150724 *
                       (3 * C150777 +
                        C150724 *
                            (2 * C150724 * C150775 +
                             C150724 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150736)))))) /
        C150616;
    const double C1001 =
        ((zP - zQ) *
         (5 * C150781 +
          C150724 *
              (4 * C150779 +
               C150724 * (3 * C150777 +
                          C150724 * (2 * C150724 * C150775 +
                                     C150724 * (C150775 +
                                                (C150769 * C150770 +
                                                 C150721 * bs[9] *
                                                     std::pow(C150720, 9)) *
                                                    C150607 * C150736)))))) /
        C150616;
    const double C1225 = (ae * C150928 * C150869 + be * C150928 * C150870 +
                          C150718 * C150928 * C150781) /
                         C150616;
    const double C2858 =
        (ae * (C150869 + C150906 * C151060) +
         be * (C150870 + C150908 * C151060) +
         C150718 *
             (C150781 +
              (3 * C150777 +
               C150724 * (2 * C150724 * C150775 +
                          C150724 * (C150775 +
                                     (C150769 * C150770 +
                                      C150721 * bs[9] * std::pow(C150720, 9)) *
                                         C150607 * C150736))) *
                  C151060)) /
        C150616;
    const double C3017 =
        (2 * C150928 * C150781 +
         C150928 *
             (C150781 +
              (3 * C150777 +
               C150724 * (2 * C150724 * C150775 +
                          C150724 * (C150775 +
                                     (C150769 * C150770 +
                                      C150721 * bs[9] * std::pow(C150720, 9)) *
                                         C150607 * C150736))) *
                  C151060)) /
        C150616;
    const double C18093 = C152324 * C18079;
    const double C61704 =
        (2 * (ae * (3 * C151343 + C150928 * (2 * C151417 + C150928 * C151564)) +
              be * (3 * C151344 + C150928 * (2 * C151418 + C150928 * C151565)) +
              C150718 * C151610) +
         ae * (3 * (C151179 + C151229 * C151060) +
               C150928 *
                   (2 * C151580 + C150928 * (C151229 + C151524 * C151060))) +
         be * (3 * (C151180 + C151232 * C151060) +
               C150928 *
                   (2 * C151581 + C150928 * (C151232 + C151527 * C151060))) +
         C150718 *
             (C151610 +
              ae * (3 * C151562 +
                    C150928 * (2 * C151582 +
                               C150928 * (C151211 + C151505 * C151060))) +
              be * (3 * C151563 +
                    C150928 * (2 * C151583 +
                               C150928 * (C151214 + C151508 * C151060))) +
              C150718 *
                  (ae * (3 * C151564 +
                         C150928 * (2 * C151584 +
                                    C150928 * (C150850 + C150886 * C151060))) +
                   be * (3 * C151565 +
                         C150928 * (2 * C151585 +
                                    C150928 * (C150854 + C150890 * C151060))) +
                   C150718 *
                       (3 * C151566 +
                        C150928 *
                            (2 * C151586 +
                             C150928 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C151060)))))) /
        C150616;
    const double C68337 =
        (ae * (5 * (3 * C151343 + C150928 * C151617) +
               C150928 *
                   (4 * C151617 +
                    C150928 * (3 * C151564 +
                               C150928 * (2 * C151584 +
                                          C150928 * (C150850 +
                                                     C150886 * C151060))))) +
         be * (5 * (3 * C151344 + C150928 * C151618) +
               C150928 *
                   (4 * C151618 +
                    C150928 * (3 * C151565 +
                               C150928 * (2 * C151585 +
                                          C150928 * (C150854 +
                                                     C150890 * C151060))))) +
         C150718 *
             (5 * C151610 +
              C150928 *
                  (4 * C151608 +
                   C150928 *
                       (3 * C151566 +
                        C150928 *
                            (2 * C151586 +
                             C150928 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C151060)))))) /
        C150616;
    const double C69083 =
        (4 * C151461 + C150928 * C151610 +
         ae *
             (4 * (2 * C151415 + C150928 * C151562) +
              C150928 * (3 * C151562 +
                         C150928 * (2 * C151582 +
                                    C150928 * (C151211 + C151505 * C151060)))) +
         be *
             (4 * (2 * C151416 + C150928 * C151563) +
              C150928 * (3 * C151563 +
                         C150928 * (2 * C151583 +
                                    C150928 * (C151214 + C151508 * C151060)))) +
         C150718 *
             (ae * (4 * C151617 +
                    C150928 *
                        (3 * C151564 +
                         C150928 * (2 * C151584 +
                                    C150928 * (C150850 + C150886 * C151060)))) +
              be * (4 * C151618 +
                    C150928 *
                        (3 * C151565 +
                         C150928 * (2 * C151585 +
                                    C150928 * (C150854 + C150890 * C151060)))) +
              C150718 *
                  (4 * C151608 +
                   C150928 *
                       (3 * C151566 +
                        C150928 *
                            (2 * C151586 +
                             C150928 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C151060)))))) /
        C150616;
    const double C119922 =
        (6 * (4 * C151461 + C150928 * C151610) +
         C150928 *
             (5 * C151610 +
              C150928 *
                  (4 * C151608 +
                   C150928 *
                       (3 * C151566 +
                        C150928 *
                            (2 * C151586 +
                             C150928 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C151060)))))) /
        C150616;
    const double C409 =
        (4 * C150764 + C150724 * C150781 +
         ae * (C150718 * C150911 + C150907 * be) +
         be * (C150718 * C150912 + C150907 * ae) +
         C150718 *
             (ae * C150911 + be * C150912 +
              C150718 *
                  (4 * C150779 +
                   C150724 *
                       (3 * C150777 +
                        C150724 *
                            (2 * C150724 * C150775 +
                             C150724 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150736)))))) /
        C150616;
    const double C396 = (4 * C150836 + C150724 * C150869 +
                         C150718 * (C150718 * C150911 + C150907 * be) +
                         C150718 * C150907 * be) /
                        C150608;
    const double C397 = (4 * C150837 + C150724 * C150870 +
                         C150718 * (C150718 * C150912 + C150907 * ae) +
                         C150718 * C150907 * ae) /
                        C150608;
    const double C856 = (C150718 * (5 * C150869 + C150724 * C150911) +
                         (5 * C150865 + C150724 * C150907) * be) /
                        C150608;
    const double C857 = (C150718 * (5 * C150870 + C150724 * C150912) +
                         (5 * C150865 + C150724 * C150907) * ae) /
                        C150608;
    const double C1219 =
        (C150928 * (C150718 * C150911 + C150907 * be)) / C150608;
    const double C1220 =
        (C150928 * (C150718 * C150912 + C150907 * ae)) / C150608;
    const double C143 = 6 * (4 * C150832 + C150724 * C150865) +
                        C150724 * (5 * C150865 + C150724 * C150907);
    const double C373 = 4 * C150832 + C150724 * C150865 + C150907 * C150721;
    const double C626 = 4 * C150832 + C150724 * C150865 + C150907 * C151060;
    const double C855 = C150718 * (5 * C150865 + C150724 * C150907);
    const double C998 = C150928 * (5 * C150865 + C150724 * C150907);
    const double C1208 = C150928 * C150718 * C150907;
    const double C1859 =
        (2 * (C150718 * C150870 + C150865 * ae) +
         C150718 * (C150870 + C150718 * C151079 + C151075 * ae) +
         (C150865 + C150901 * C150721) * ae) /
        C150608;
    const double C2078 =
        (C150928 * (C150870 + C150718 * C151079 + C151075 * ae)) / C150608;
    const double C2857 =
        (C150718 * C150870 + C150865 * ae + C151079 * C151060) / C150608;
    const double C1860 =
        (2 * (ae * C150869 + be * C150870 + C150718 * C150781) +
         ae * (C150869 + C150718 * C151078 + C151075 * be) +
         be * (C150870 + C150718 * C151079 + C151075 * ae) +
         C150718 *
             (C150781 + ae * C151078 + be * C151079 +
              C150718 *
                  (ae * C150906 + be * C150908 +
                   C150718 *
                       (3 * C150777 +
                        C150724 *
                            (2 * C150724 * C150775 +
                             C150724 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150736)))))) /
        C150616;
    const double C2079 =
        (C150928 * C150781 + ae * C150928 * C151078 + be * C150928 * C151079 +
         C150718 *
             (ae * C150928 * C150906 + be * C150928 * C150908 +
              C150718 * C150928 *
                  (3 * C150777 +
                   C150724 * (2 * C150724 * C150775 +
                              C150724 * (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736))))) /
        C150616;
    const double C1858 =
        (2 * (C150718 * C150869 + C150865 * be) +
         C150718 * (C150869 + C150718 * C151078 + C151075 * be) +
         (C150865 + C150901 * C150721) * be) /
        C150608;
    const double C2077 =
        (C150928 * (C150869 + C150718 * C151078 + C151075 * be)) / C150608;
    const double C2856 =
        (C150718 * C150869 + C150865 * be + C151078 * C151060) / C150608;
    const double C151058 = C151056 + C151051;
    const double C151057 = C151055 + C151048;
    const double C151402 = C151375 + C151400;
    const double C151401 = C151369 + C151399;
    const double C151308 = C151306 + C151290;
    const double C151307 = C151305 + C151287;
    const double C151545 = C150718 * C151542;
    const double C60715 = 6 * (4 * C151176 + C150718 * C151236) +
                          C150718 * (5 * C151236 + C150718 * C151541);
    const double C60865 = 4 * C151176 + C150718 * C151236 + C151541 * C151060;
    const double C61323 = C150928 * (5 * C151236 + C150718 * C151541);
    const double C151544 = C150718 * C151540;
    const double C6650 = C6307 * C1516;
    const double C25573 = C23384 * C1516;
    const double C53389 = C51200 * C1516;
    const double C74002 = C73659 * C1516;
    const double C6952 = C6307 * C1706;
    const double C15189 = C134 * C1706;
    const double C26961 = C23384 * C1706;
    const double C54777 = C51200 * C1706;
    const double C74304 = C73659 * C1706;
    const double C7732 = C6307 * C2240;
    const double C25891 = C23384 * C2240;
    const double C33862 = C134 * C2240;
    const double C53707 = C51200 * C2240;
    const double C75084 = C73659 * C2240;
    const double C151144 = C151142 + C151131;
    const double C151244 = C150718 * C151242;
    const double C151496 = 4 * C151242;
    const double C151477 = be * C151242;
    const double C10406 =
        (2 * C150928 * C151186 + C150928 * (C151186 + C151242 * C151060)) /
        C150608;
    const double C61703 =
        (3 * (C151186 + C151242 * C151060) +
         C150928 * (2 * C150928 * C151242 +
                    C150928 * (C151242 + C151542 * C151060))) /
        C150608;
    const double C198 = C189 - C190;
    const double C450 = C439 - C440;
    const double C6367 = C6346 - C6347;
    const double C24271 = C24263 - C24264;
    const double C52087 = C52079 - C52080;
    const double C73719 = C73698 - C73699;
    const double C864 = C860 - C861;
    const double C23435 = C23419 - C23420;
    const double C51251 = C51235 - C51236;
    const double C703 = C692 - C693;
    const double C1007 = C1003 - C1004;
    const double C1247 = C1240 - C1241;
    const double C24480 = C24472 - C24473;
    const double C52296 = C52288 - C52289;
    const double C1874 = C1862 - C1863;
    const double C7204 = C7192 - C7193;
    const double C23736 = C23718 - C23719;
    const double C51552 = C51534 - C51535;
    const double C74556 = C74544 - C74545;
    const double C2872 = C2860 - C2861;
    const double C24040 = C24022 - C24023;
    const double C51856 = C51838 - C51839;
    const double C2093 = C2081 - C2082;
    const double C7419 = C7407 - C7408;
    const double C24804 = C24792 - C24793;
    const double C52620 = C52608 - C52609;
    const double C74771 = C74759 - C74760;
    const double C3037 = C3034 + C3022;
    const double C6651 = C6300 * C1525;
    const double C25574 = C152376 * C1525;
    const double C53390 = C152376 * C1525;
    const double C74003 = C73652 * C1525;
    const double C7733 = C6300 * C2245;
    const double C25892 = C152376 * C2245;
    const double C33863 = C152324 * C2245;
    const double C53708 = C152376 * C2245;
    const double C75085 = C73652 * C2245;
    const double C6648 = C6307 * C1515;
    const double C25571 = C23384 * C1515;
    const double C53387 = C51200 * C1515;
    const double C74000 = C73659 * C1515;
    const double C6950 = C6307 * C1705;
    const double C15187 = C134 * C1705;
    const double C26959 = C23384 * C1705;
    const double C54775 = C51200 * C1705;
    const double C74302 = C73659 * C1705;
    const double C7730 = C6307 * C2239;
    const double C25889 = C23384 * C2239;
    const double C33860 = C134 * C2239;
    const double C53705 = C51200 * C2239;
    const double C75082 = C73659 * C2239;
    const double C16190 = C16186 + C16174;
    const double C151143 = C151141 + C151128;
    const double C151277 = C151267 + C151252;
    const double C10201 = C10189 - C10190;
    const double C16778 = C16767 - C16768;
    const double C44642 = C44633 - C44634;
    const double C68671 = C68662 - C68663;
    const double C77465 = C77453 - C77454;
    const double C18819 = C18414 * C152089;
    const double C120127 = C18414 * C152084;
    const double C137964 = C18414 * C152089;
    const double C151243 = C150718 * C151241;
    const double C151486 = 4 * C151241;
    const double C151476 = ae * C151241;
    const double C8355 =
        (3 * (C151320 + ae * (C150978 + C151162 * C151060) +
              be * (C150981 + C151165 * C151060) + C150718 * C151350) +
         ae * (C151185 + C151241 * C151060) +
         be * (C151186 + C151242 * C151060) +
         C150718 * (2 * C151350 + ae * (C151179 + C151229 * C151060) +
                    be * (C151180 + C151232 * C151060) +
                    C150718 * (C151345 + ae * (C151162 + C151211 * C151060) +
                               be * (C151165 + C151214 * C151060) +
                               C150718 * (ae * (C150823 + C150850 * C151060) +
                                          be * (C150827 + C150854 * C151060) +
                                          C150718 * (C150760 +
                                                     C150775 * C151060))))) /
        C150616;
    const double C62162 =
        (3 * (C151461 + ae * (2 * C151415 + C150928 * C151562) +
              be * (2 * C151416 + C150928 * C151563) + C150718 * C151622) +
         ae *
             (2 * C150928 * C151241 + C150928 * (C151241 + C151540 * C151060)) +
         be *
             (2 * C150928 * C151242 + C150928 * (C151242 + C151542 * C151060)) +
         C150718 *
             (2 * C151622 +
              ae * (2 * C151580 + C150928 * (C151229 + C151524 * C151060)) +
              be * (2 * C151581 + C150928 * (C151232 + C151527 * C151060)) +
              C150718 *
                  (C151608 +
                   ae *
                       (2 * C151582 + C150928 * (C151211 + C151505 * C151060)) +
                   be *
                       (2 * C151583 + C150928 * (C151214 + C151508 * C151060)) +
                   C150718 *
                       (ae * (2 * C151584 +
                              C150928 * (C150850 + C150886 * C151060)) +
                        be * (2 * C151585 +
                              C150928 * (C150854 + C150890 * C151060)) +
                        C150718 *
                            (2 * C151586 +
                             C150928 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C151060)))))) /
        C150616;
    const double C10405 =
        (2 * C150928 * C151185 + C150928 * (C151185 + C151241 * C151060)) /
        C150608;
    const double C61702 =
        (3 * (C151185 + C151241 * C151060) +
         C150928 * (2 * C150928 * C151241 +
                    C150928 * (C151241 + C151540 * C151060))) /
        C150608;
    const double C151533 = C151511 + C151529;
    const double C151597 = C151594 + C151588;
    const double C119076 = C119075 - C119073;
    const double C120395 = C120394 + C120392;
    const double C119931 = C119930 + C119928;
    const double C150685 = C150684 * ae;
    const double C6368 = C6350 - C6351;
    const double C6365 = C6338 - C6339;
    const double C6362 = C6326 - C6327;
    const double C6359 = C6314 - C6315;
    const double C6670 = C6652 - C6653;
    const double C6667 = C6640 - C6641;
    const double C6664 = C6628 - C6629;
    const double C6661 = C6616 - C6617;
    const double C6972 = C6954 - C6955;
    const double C6969 = C6942 - C6943;
    const double C6966 = C6930 - C6931;
    const double C6963 = C6918 - C6919;
    const double C7205 = C7196 - C7197;
    const double C7420 = C7411 - C7412;
    const double C7746 = C7734 - C7735;
    const double C7743 = C7722 - C7723;
    const double C8569 = C8560 - C8561;
    const double C8884 = C8875 - C8876;
    const double C9983 = C9974 - C9975;
    const double C10202 = C10193 - C10194;
    const double C110077 = C110065 - C110066;
    const double C110074 = C110053 - C110054;
    const double C110782 = C110773 - C110774;
    const double C111388 = C111364 - C111365;
    const double C111385 = C111352 - C111353;
    const double C112696 = C112684 - C112685;
    const double C112693 = C112672 - C112673;
    const double C113401 = C113392 - C113393;
    const double C23436 = C23423 - C23424;
    const double C23433 = C23411 - C23412;
    const double C23432 = C23407 - C23408;
    const double C23429 = C23395 - C23396;
    const double C23427 = C23387 - C23388;
    const double C23737 = C23722 - C23723;
    const double C23734 = C23710 - C23711;
    const double C23732 = C23702 - C23703;
    const double C23730 = C23694 - C23695;
    const double C23729 = C23690 - C23691;
    const double C23727 = C23682 - C23683;
    const double C24041 = C24026 - C24027;
    const double C24038 = C24014 - C24015;
    const double C24036 = C24006 - C24007;
    const double C24034 = C23998 - C23999;
    const double C24033 = C23994 - C23995;
    const double C24031 = C23986 - C23987;
    const double C24272 = C24267 - C24268;
    const double C24481 = C24476 - C24477;
    const double C24805 = C24796 - C24797;
    const double C24802 = C24784 - C24785;
    const double C24800 = C24776 - C24777;
    const double C25590 = C25583 - C25584;
    const double C25588 = C25575 - C25576;
    const double C25908 = C25901 - C25902;
    const double C25906 = C25893 - C25894;
    const double C26978 = C26971 - C26972;
    const double C26976 = C26963 - C26964;
    const double C27200 = C27193 - C27194;
    const double C27198 = C27185 - C27186;
    const double C40803 = C40792 - C40793;
    const double C40800 = C40778 - C40779;
    const double C41726 = C41715 - C41716;
    const double C42513 = C42502 - C42503;
    const double C42511 = C42494 - C42495;
    const double C42508 = C42482 - C42483;
    const double C42506 = C42474 - C42475;
    const double C42797 = C42792 - C42793;
    const double C43456 = C43448 - C43449;
    const double C44233 = C44224 - C44225;
    const double C44231 = C44216 - C44217;
    const double C44228 = C44204 - C44205;
    const double C44643 = C44637 - C44638;
    const double C45175 = C45170 - C45171;
    const double C144205 = C144198 - C144199;
    const double C145473 = C145466 - C145467;
    const double C146169 = C146163 - C146164;
    const double C51252 = C51239 - C51240;
    const double C51249 = C51227 - C51228;
    const double C51248 = C51223 - C51224;
    const double C51245 = C51211 - C51212;
    const double C51243 = C51203 - C51204;
    const double C51553 = C51538 - C51539;
    const double C51550 = C51526 - C51527;
    const double C51548 = C51518 - C51519;
    const double C51546 = C51510 - C51511;
    const double C51545 = C51506 - C51507;
    const double C51543 = C51498 - C51499;
    const double C51857 = C51842 - C51843;
    const double C51854 = C51830 - C51831;
    const double C51852 = C51822 - C51823;
    const double C51850 = C51814 - C51815;
    const double C51849 = C51810 - C51811;
    const double C51847 = C51802 - C51803;
    const double C52088 = C52083 - C52084;
    const double C52297 = C52292 - C52293;
    const double C52621 = C52612 - C52613;
    const double C52618 = C52600 - C52601;
    const double C52616 = C52592 - C52593;
    const double C53406 = C53399 - C53400;
    const double C53404 = C53391 - C53392;
    const double C53724 = C53717 - C53718;
    const double C53722 = C53709 - C53710;
    const double C54794 = C54787 - C54788;
    const double C54792 = C54779 - C54780;
    const double C55016 = C55009 - C55010;
    const double C55014 = C55001 - C55002;
    const double C65717 = C65706 - C65707;
    const double C65714 = C65694 - C65695;
    const double C65712 = C65686 - C65687;
    const double C66429 = C66419 - C66420;
    const double C66427 = C66411 - C66412;
    const double C67038 = C67026 - C67027;
    const double C67035 = C67014 - C67015;
    const double C67033 = C67006 - C67007;
    const double C67030 = C66997 - C66998;
    const double C67549 = C67541 - C67542;
    const double C67765 = C67749 - C67750;
    const double C68360 = C68352 - C68353;
    const double C68357 = C68340 - C68341;
    const double C68672 = C68666 - C68667;
    const double C68882 = C68876 - C68877;
    const double C69096 = C69090 - C69091;
    const double C84758 = C84753 - C84754;
    const double C6381 = C6369 - C6356;
    const double C6376 = C6364 - C6336;
    const double C6375 = C6363 - C6332;
    const double C6370 = C6358 - C6312;
    const double C6683 = C6671 - C6658;
    const double C6678 = C6666 - C6638;
    const double C6675 = C6663 - C6626;
    const double C6674 = C6662 - C6622;
    const double C6985 = C6973 - C6960;
    const double C6980 = C6968 - C6940;
    const double C6977 = C6965 - C6928;
    const double C6976 = C6964 - C6924;
    const double C7209 = C7206 - C7202;
    const double C7424 = C7421 - C7417;
    const double C7753 = C7747 - C7740;
    const double C7748 = C7742 - C7720;
    const double C8573 = C8570 - C8566;
    const double C8888 = C8885 - C8881;
    const double C9987 = C9984 - C9980;
    const double C10206 = C10203 - C10199;
    const double C110084 = C110078 - C110071;
    const double C110079 = C110073 - C110051;
    const double C110784 = C110781 - C110771;
    const double C111401 = C111392 - C111382;
    const double C111396 = C111387 - C111362;
    const double C111393 = C111384 - C111350;
    const double C112104 = C112101 - C112091;
    const double C112703 = C112697 - C112690;
    const double C112698 = C112692 - C112670;
    const double C113405 = C113402 - C113398;
    const double C6378 = C6366 - C6344;
    const double C6373 = C6361 - C6324;
    const double C6372 = C6360 - C6320;
    const double C6680 = C6668 - C6646;
    const double C6672 = C6660 - C6614;
    const double C6982 = C6970 - C6948;
    const double C6974 = C6962 - C6916;
    const double C110082 = C110076 - C110063;
    const double C110081 = C110075 - C110059;
    const double C110786 = C110783 - C110779;
    const double C112701 = C112695 - C112682;
    const double C112700 = C112694 - C112678;
    const double C23444 = C23434 - C23417;
    const double C23441 = C23431 - C23405;
    const double C23440 = C23430 - C23401;
    const double C23438 = C23428 - C23393;
    const double C23747 = C23735 - C23716;
    const double C23745 = C23733 - C23708;
    const double C23743 = C23731 - C23700;
    const double C23740 = C23728 - C23688;
    const double C23738 = C23726 - C23680;
    const double C24051 = C24039 - C24020;
    const double C24049 = C24037 - C24012;
    const double C24047 = C24035 - C24004;
    const double C24044 = C24032 - C23992;
    const double C24042 = C24030 - C23984;
    const double C24809 = C24803 - C24790;
    const double C24807 = C24801 - C24782;
    const double C27203 = C27199 - C27191;
    const double C27201 = C27197 - C27183;
    const double C40806 = C40802 - C40790;
    const double C40805 = C40801 - C40784;
    const double C41729 = C41727 - C41721;
    const double C42517 = C42509 - C42488;
    const double C42515 = C42507 - C42480;
    const double C44238 = C44232 - C44222;
    const double C44236 = C44230 - C44214;
    const double C44235 = C44229 - C44210;
    const double C45176 = C45174 - C45168;
    const double C145474 = C145472 - C145464;
    const double C146170 = C146168 - C146161;
    const double C51260 = C51250 - C51233;
    const double C51257 = C51247 - C51221;
    const double C51256 = C51246 - C51217;
    const double C51254 = C51244 - C51209;
    const double C51563 = C51551 - C51532;
    const double C51561 = C51549 - C51524;
    const double C51559 = C51547 - C51516;
    const double C51556 = C51544 - C51504;
    const double C51554 = C51542 - C51496;
    const double C51867 = C51855 - C51836;
    const double C51865 = C51853 - C51828;
    const double C51863 = C51851 - C51820;
    const double C51860 = C51848 - C51808;
    const double C51858 = C51846 - C51800;
    const double C52625 = C52619 - C52606;
    const double C52623 = C52617 - C52598;
    const double C55019 = C55015 - C55007;
    const double C55017 = C55013 - C54999;
    const double C65723 = C65716 - C65704;
    const double C65722 = C65715 - C65700;
    const double C65720 = C65713 - C65692;
    const double C66434 = C66430 - C66425;
    const double C66432 = C66428 - C66417;
    const double C67042 = C67034 - C67012;
    const double C67040 = C67031 - C67003;
    const double C68363 = C68359 - C68350;
    const double C68362 = C68358 - C68346;
    const double C68883 = C68881 - C68874;
    const double C69097 = C69095 - C69088;
    const double C73730 = C73718 - C73696;
    const double C73725 = C73713 - C73676;
    const double C73724 = C73712 - C73672;
    const double C74032 = C74020 - C73998;
    const double C74024 = C74012 - C73966;
    const double C74334 = C74322 - C74300;
    const double C74326 = C74314 - C74268;
    const double C93538 = C93532 - C93519;
    const double C93537 = C93531 - C93515;
    const double C94242 = C94239 - C94235;
    const double C96157 = C96151 - C96138;
    const double C96156 = C96150 - C96134;
    const double C73708 = C73655 * C153;
    const double C73706 = C73655 * C152;
    const double C73688 = C73655 * C151;
    const double C73686 = C73655 * C150;
    const double C73684 = C73655 * C149;
    const double C73682 = C73655 * C148;
    const double C73664 = C73655 * C147;
    const double C73662 = C73655 * C146;
    const double C74010 = C73655 * C387;
    const double C74008 = C73655 * C386;
    const double C73990 = C73655 * C377;
    const double C73988 = C73655 * C376;
    const double C73978 = C73655 * C385;
    const double C73976 = C73655 * C384;
    const double C73974 = C73655 * C379;
    const double C73972 = C73655 * C378;
    const double C74312 = C73655 * C640;
    const double C74310 = C73655 * C639;
    const double C74292 = C73655 * C630;
    const double C74290 = C73655 * C629;
    const double C74280 = C73655 * C638;
    const double C74278 = C73655 * C637;
    const double C74276 = C73655 * C632;
    const double C74274 = C73655 * C631;
    const double C74554 = C73655 * C375;
    const double C74552 = C73655 * C374;
    const double C74769 = C73655 * C628;
    const double C74767 = C73655 * C627;
    const double C75092 = C73655 * C1214;
    const double C75090 = C73655 * C1213;
    const double C75072 = C73655 * C1212;
    const double C75070 = C73655 * C1211;
    const double C75874 = C73655 * C1508;
    const double C75872 = C73655 * C1507;
    const double C76185 = C73655 * C1698;
    const double C76183 = C73655 * C1697;
    const double C77248 = C73655 * C1690;
    const double C77246 = C73655 * C1689;
    const double C77463 = C73655 * C2642;
    const double C77461 = C73655 * C2641;
    const double C93527 = C73655 * C636;
    const double C93525 = C73655 * C635;
    const double C93507 = C73655 * C634;
    const double C93505 = C73655 * C633;
    const double C94227 = C73655 * C1210;
    const double C94225 = C73655 * C1209;
    const double C94838 = C73655 * C1702;
    const double C94836 = C73655 * C1701;
    const double C94818 = C73655 * C1700;
    const double C94816 = C73655 * C1699;
    const double C94806 = C73655 * C1692;
    const double C94804 = C73655 * C1691;
    const double C95547 = C73655 * C2236;
    const double C95545 = C73655 * C2235;
    const double C96146 = C73655 * C2646;
    const double C96144 = C73655 * C2645;
    const double C96126 = C73655 * C2644;
    const double C96124 = C73655 * C2643;
    const double C96854 = C73655 * C3174;
    const double C96852 = C73655 * C3173;
    const double C73704 = C73657 * C391;
    const double C73702 = C73657 * C390;
    const double C73692 = C73657 * C375;
    const double C73690 = C73657 * C374;
    const double C73680 = C73657 * C377;
    const double C73678 = C73657 * C376;
    const double C73668 = C73657 * C379;
    const double C73666 = C73657 * C378;
    const double C74006 = C73657 * C1506;
    const double C74004 = C73657 * C1505;
    const double C73994 = C73657 * C387;
    const double C73992 = C73657 * C386;
    const double C73982 = C73657 * C1508;
    const double C73980 = C73657 * C1507;
    const double C73970 = C73657 * C385;
    const double C73968 = C73657 * C384;
    const double C74308 = C73657 * C1688;
    const double C74306 = C73657 * C1687;
    const double C74296 = C73657 * C1214;
    const double C74294 = C73657 * C1213;
    const double C74284 = C73657 * C1690;
    const double C74282 = C73657 * C1689;
    const double C74272 = C73657 * C1212;
    const double C74270 = C73657 * C1211;
    const double C74550 = C73657 * C389;
    const double C74548 = C73657 * C388;
    const double C74765 = C73657 * C1216;
    const double C74763 = C73657 * C1215;
    const double C75088 = C73657 * C1696;
    const double C75086 = C73657 * C1695;
    const double C75076 = C73657 * C1698;
    const double C75074 = C73657 * C1697;
    const double C75870 = C73657 * C1514;
    const double C75868 = C73657 * C1513;
    const double C76181 = C73657 * C2238;
    const double C76179 = C73657 * C2237;
    const double C77244 = C73657 * C1704;
    const double C77242 = C73657 * C1703;
    const double C77459 = C73657 * C3176;
    const double C77457 = C73657 * C3175;
    const double C93523 = C73657 * C1692;
    const double C93521 = C73657 * C1691;
    const double C93511 = C73657 * C1210;
    const double C93509 = C73657 * C1209;
    const double C94231 = C73657 * C1700;
    const double C94229 = C73657 * C1699;
    const double C94822 = C73657 * C2236;
    const double C94820 = C73657 * C2235;
    const double C94810 = C73657 * C1702;
    const double C94808 = C73657 * C1701;
    const double C96142 = C73657 * C9662;
    const double C96140 = C73657 * C9661;
    const double C96130 = C73657 * C3174;
    const double C96128 = C73657 * C3173;
    const double C96850 = C73657 * C9660;
    const double C96848 = C73657 * C9659;
    const double C16177 = C2879 * C6301;
    const double C16170 = C2879 * C152089;
    const double C33659 = C2879 * C23381;
    const double C35212 = C2879 * C152523;
    const double C103121 = C2879 * C51197;
    const double C104667 = C2879 * C51196;
    const double C118691 = C2879 * C152084;
    const double C135459 = C2879 * C152436;
    const double C135456 = C2879 * C152089;
    const double C17295 = C2100 * C152089;
    const double C33662 = C2100 * C23381;
    const double C34158 = C2100 * C152523;
    const double C103124 = C2100 * C51197;
    const double C103613 = C2100 * C51196;
    const double C136514 = C2100 * C152089;
    const double C6677 = C6665 - C6634;
    const double C25593 = C25589 - C25581;
    const double C53409 = C53405 - C53397;
    const double C74029 = C74017 - C73986;
    const double C6979 = C6967 - C6936;
    const double C15193 = C15191 - C15185;
    const double C26981 = C26977 - C26969;
    const double C54797 = C54793 - C54785;
    const double C74331 = C74319 - C74288;
    const double C7750 = C7744 - C7728;
    const double C17001 = C16999 - C16996;
    const double C25911 = C25907 - C25899;
    const double C53727 = C53723 - C53715;
    const double C75102 = C75096 - C75080;
    const double C17499 = C134 * C8342;
    const double C42500 = C23384 * C8342;
    const double C67020 = C51200 * C8342;
    const double C67759 = C51198 * C8342;
    const double C94834 = C73657 * C8342;
    const double C94814 = C73659 * C8342;
    const double C111378 = C6305 * C8342;
    const double C111358 = C6307 * C8342;
    const double C144890 = C23382 * C8342;
    const double C43454 = C23384 * C8346;
    const double C67755 = C51200 * C8346;
    const double C94826 = C73659 * C8346;
    const double C95551 = C73657 * C8346;
    const double C111370 = C6307 * C8346;
    const double C112095 = C6305 * C8346;
    const double C43455 = C152376 * C8354;
    const double C67756 = C152376 * C8354;
    const double C94827 = C73652 * C8354;
    const double C95552 = C152540 * C8354;
    const double C111371 = C6300 * C8354;
    const double C112096 = C6299 * C8354;
    const double C17497 = C134 * C8341;
    const double C42498 = C23384 * C8341;
    const double C67018 = C51200 * C8341;
    const double C67757 = C51198 * C8341;
    const double C94832 = C73657 * C8341;
    const double C94812 = C73659 * C8341;
    const double C111376 = C6305 * C8341;
    const double C111356 = C6307 * C8341;
    const double C144888 = C23382 * C8341;
    const double C43452 = C23384 * C8345;
    const double C67753 = C51200 * C8345;
    const double C94824 = C73659 * C8345;
    const double C95549 = C73657 * C8345;
    const double C111368 = C6307 * C8345;
    const double C112093 = C6305 * C8345;
    const double C16756 = C16162 + C16192;
    const double C136021 = C135452 + C135451;
    const double C18818 = C16790 + C16755;
    const double C137963 = C136019 + C136020;
    const double C16787 = C16782 + C16765;
    const double C17506 = C17504 + C17495;
    const double C16789 = C16784 + C16774;
    const double C15447 = C717 * C152089;
    const double C15861 = C717 * C6301;
    const double C32407 = C717 * C152523;
    const double C32402 = C717 * C23381;
    const double C101869 = C717 * C51196;
    const double C101864 = C717 * C51197;
    const double C118488 = C717 * C152084;
    const double C134761 = C717 * C152089;
    const double C135157 = C717 * C152436;
    const double C15860 = C718 * C152089;
    const double C32405 = C718 * C23381;
    const double C32798 = C718 * C152523;
    const double C101867 = C718 * C51197;
    const double C102260 = C718 * C51196;
    const double C135156 = C718 * C152089;
    const double C16176 = C1254 * C152089;
    const double C33097 = C1254 * C152523;
    const double C33095 = C1254 * C23381;
    const double C102559 = C1254 * C51196;
    const double C102557 = C1254 * C51197;
    const double C135458 = C1254 * C152089;
    const double C18109 = C18106 * C6301;
    const double C119924 = C18106 * C152084;
    const double C137277 = C18106 * C152436;
    const double C442 = C152324 * C407;
    const double C6349 = C6300 * C407;
    const double C24266 = C152376 * C407;
    const double C52082 = C152376 * C407;
    const double C73701 = C73652 * C407;
    const double C863 = C152324 * C408;
    const double C23422 = C152376 * C408;
    const double C51238 = C152376 * C408;
    const double C695 = C152324 * C660;
    const double C1006 = C152324 * C661;
    const double C1243 = C152324 * C1225;
    const double C24475 = C152376 * C1225;
    const double C52291 = C152376 * C1225;
    const double C18105 = C18102 + C18093;
    const double C1518 =
        (3 * (C150837 + C150718 * C150941 + C150937 * ae) +
         C150718 * (2 * C150941 + C150718 * C151058 + C151049 * ae) +
         (2 * C150937 + C150718 * C151049) * ae) /
        C150608;
    const double C1708 =
        (C150837 + C150718 * C150941 + C150937 * ae + C151058 * C151060) /
        C150608;
    const double C2242 =
        (C150928 * (2 * C150941 + C150718 * C151058 + C151049 * ae)) / C150608;
    const double C1526 =
        (3 * (C150764 + ae * C150940 + be * C150941 + C150718 * C151052) +
         ae * (2 * C150940 + C150718 * C151057 + C151049 * be) +
         be * (2 * C150941 + C150718 * C151058 + C151049 * ae) +
         C150718 *
             (2 * C151052 + ae * C151057 + be * C151058 +
              C150718 *
                  (C150779 + ae * C151047 + be * C151050 +
                   C150718 *
                       (ae * C150900 + be * C150902 +
                        C150718 *
                            (2 * C150724 * C150775 +
                             C150724 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150736)))))) /
        C150616;
    const double C2246 =
        (2 * (ae * C150928 * C150864 + be * C150928 * C150866 +
              C150718 * C151088) +
         ae * C150928 * C151057 + be * C150928 * C151058 +
         C150718 *
             (C151088 + ae * C150928 * C151047 + be * C150928 * C151050 +
              C150718 * (ae * C150928 * C150900 + be * C150928 * C150902 +
                         C150718 * C150928 *
                             (2 * C150724 * C150775 +
                              C150724 * (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736))))) /
        C150616;
    const double C1517 =
        (3 * (C150836 + C150718 * C150940 + C150937 * be) +
         C150718 * (2 * C150940 + C150718 * C151057 + C151049 * be) +
         (2 * C150937 + C150718 * C151049) * be) /
        C150608;
    const double C1707 =
        (C150836 + C150718 * C150940 + C150937 * be + C151057 * C151060) /
        C150608;
    const double C2241 =
        (C150928 * (2 * C150940 + C150718 * C151057 + C151049 * be)) / C150608;
    const double C151404 = C151402 + C151391;
    const double C151403 = C151401 + C151388;
    const double C151310 = C150718 * C151308;
    const double C151309 = C150718 * C151307;
    const double C151547 = C151497 + C151545;
    const double C151546 = C151487 + C151544;
    const double C8104 =
        (4 * (2 * C150958 + C150718 * C151012 + C151003 * ae) +
         C150718 * (3 * C151012 + C150718 * C151144 + C151134 * ae) +
         (3 * C151003 + C150718 * C151134) * ae) /
        C150608;
    const double C8340 =
        (2 * C150958 + C150718 * C151012 + C151003 * ae + C151144 * C151060) /
        C150608;
    const double C8344 =
        (C150928 * (3 * C151012 + C150718 * C151144 + C151134 * ae)) / C150608;
    const double C10408 =
        (2 * C150928 * C151144 + C150928 * (C151144 + C151308 * C151060)) /
        C150608;
    const double C151246 = C151204 + C151244;
    const double C67024 = C51200 * C10406;
    const double C96846 = C73659 * C10406;
    const double C113390 = C6307 * C10406;
    const double C119540 = C134 * C10406;
    const double C144196 = C23384 * C10406;
    const double C204 = C198 - C191;
    const double C458 = C450 - C441;
    const double C6379 = C6367 - C6348;
    const double C24273 = C24271 - C24265;
    const double C52089 = C52087 - C52081;
    const double C73731 = C73719 - C73700;
    const double C865 = C864 - C862;
    const double C23445 = C23435 - C23421;
    const double C51261 = C51251 - C51237;
    const double C711 = C703 - C694;
    const double C1008 = C1007 - C1005;
    const double C1251 = C1247 - C1242;
    const double C24482 = C24480 - C24474;
    const double C52298 = C52296 - C52290;
    const double C1877 = C1874 - C1864;
    const double C7207 = C7204 - C7194;
    const double C23748 = C23736 - C23720;
    const double C51564 = C51552 - C51536;
    const double C74559 = C74556 - C74546;
    const double C2875 = C2872 - C2862;
    const double C24052 = C24040 - C24024;
    const double C51868 = C51856 - C51840;
    const double C2096 = C2093 - C2083;
    const double C7422 = C7419 - C7409;
    const double C24810 = C24804 - C24794;
    const double C52626 = C52620 - C52610;
    const double C74774 = C74771 - C74761;
    const double C15448 = C3037 * C152089;
    const double C35408 = C3037 * C23381;
    const double C104863 = C3037 * C51197;
    const double C118489 = C3037 * C152084;
    const double C134762 = C3037 * C152089;
    const double C6669 = C6648 - C6649;
    const double C25587 = C25571 - C25572;
    const double C53403 = C53387 - C53388;
    const double C74021 = C74000 - C74001;
    const double C6971 = C6950 - C6951;
    const double C15192 = C15187 - C15188;
    const double C26975 = C26959 - C26960;
    const double C54791 = C54775 - C54776;
    const double C74323 = C74302 - C74303;
    const double C7745 = C7730 - C7731;
    const double C25905 = C25889 - C25890;
    const double C33864 = C33860 - C33861;
    const double C53721 = C53705 - C53706;
    const double C75097 = C75082 - C75083;
    const double C18410 = C16190 * C152089;
    const double C35605 = C16190 * C23381;
    const double C105060 = C16190 * C51197;
    const double C118692 = C16190 * C152084;
    const double C137570 = C16190 * C152089;
    const double C8111 =
        (4 * (2 * C151006 + ae * C151011 + be * C151012 + C150718 * C151136) +
         ae * (3 * C151011 + C150718 * C151143 + C151134 * be) +
         be * (3 * C151012 + C150718 * C151144 + C151134 * ae) +
         C150718 *
             (3 * C151136 + ae * C151143 + be * C151144 +
              C150718 *
                  (2 * C151126 + ae * C151137 + be * C151138 +
                   C150718 * (C150767 + ae * C151120 + be * C151123 +
                              C150718 * (ae * C150875 + be * C150883 +
                                         C150718 * C150724 * C150775))))) /
        C150616;
    const double C8353 =
        (3 * (C151084 + ae * C150928 * C151001 + be * C150928 * C151004 +
              C150718 * C151329) +
         ae * C150928 * C151143 + be * C150928 * C151144 +
         C150718 *
             (2 * C151329 + ae * C150928 * C151137 + be * C150928 * C151138 +
              C150718 *
                  (C151324 + ae * C150928 * C151120 + be * C150928 * C151123 +
                   C150718 * (ae * C150928 * C150875 + be * C150928 * C150883 +
                              C150718 * C150928 * C151257)))) /
        C150616;
    const double C8356 =
        (3 * (C151317 + ae * (C151001 + C151120 * C151060) +
              be * (C151004 + C151123 * C151060) + C150718 * C151362) +
         ae * (C151143 + C151307 * C151060) +
         be * (C151144 + C151308 * C151060) +
         C150718 *
             (2 * C151362 + ae * (C151137 + C151296 * C151060) +
              be * (C151138 + C151299 * C151060) +
              C150718 * (C151357 + ae * (C151120 + C151280 * C151060) +
                         be * (C151123 + C151283 * C151060) +
                         C150718 * (ae * (C150875 + C151260 * C151060) +
                                    be * (C150883 + C151266 * C151060) +
                                    C150718 * (C151257 +
                                               C150724 *
                                                   (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                   C150607 * C151060))))) /
        C150616;
    const double C8103 =
        (4 * (2 * C150957 + C150718 * C151011 + C151003 * be) +
         C150718 * (3 * C151011 + C150718 * C151143 + C151134 * be) +
         (3 * C151003 + C150718 * C151134) * be) /
        C150608;
    const double C8339 =
        (2 * C150957 + C150718 * C151011 + C151003 * be + C151143 * C151060) /
        C150608;
    const double C8343 =
        (C150928 * (3 * C151011 + C150718 * C151143 + C151134 * be)) / C150608;
    const double C10407 =
        (2 * C150928 * C151143 + C150928 * (C151143 + C151307 * C151060)) /
        C150608;
    const double C151301 = C151277 + C151295;
    const double C10204 = C10201 - C10191;
    const double C16783 = C16778 - C16769;
    const double C44644 = C44642 - C44635;
    const double C68673 = C68671 - C68664;
    const double C77468 = C77465 - C77455;
    const double C151245 = C151196 + C151243;
    const double C151501 = C151475 + C151476;
    const double C67764 = C152376 * C8355;
    const double C94831 = C73652 * C8355;
    const double C111375 = C6300 * C8355;
    const double C144895 = C152376 * C8355;
    const double C67022 = C51200 * C10405;
    const double C96844 = C73659 * C10405;
    const double C113388 = C6307 * C10405;
    const double C119538 = C134 * C10405;
    const double C144194 = C23384 * C10405;
    const double C151539 = C150718 * C151533;
    const double C151603 = C151597 + C151602;
    const double C119077 = C119076 + C119074;
    const double C120396 = C120395 * C152084;
    const double C119932 = C119931 * C152084;
    const double C59734 =
        ((ae * -2 * C150659) / C150678 -
         (((C150606 * C150682) / C150616 + 2 * C150675) * be) / C150608) /
            C150660 +
        ((C150606 *
              (C150682 / C150678 -
               (((C150606 * C150685) / C150608 + 2 * C150671) * be) / C150608 -
               C150627 / C150618) +
          2 * (C150675 / C150660 -
               ((C150606 * C150671 + C152474) * be) / C150608 + C150672)) *
         ae) /
            C150608 +
        C150685 / C150618 - ((2 * C150672 - C150632 / C150618) * be) / C150608;
    const double C59736 =
        (C150682 / C150678 -
         (((C150606 * C150685) / C150608 + 2 * C150671) * be) / C150608 -
         C150627 / C150618) /
            C150660 +
        ((C150606 * (C150685 / C150618 -
                     ((2 * C150672 - C150632 / C150618) * be) / C150608) +
          2 * (C150671 / C150660 -
               ((C150606 * C150672 + C152376) * be) / C150608)) *
         ae) /
            C150608 +
        (-2 * C150627) / (C150608 * 4 * C150616);
    const double C59738 = (C150685 / C150618 -
                           ((2 * C150672 - C150632 / C150618) * be) / C150608) /
                              C150660 +
                          ((2 * (C150672 / C150660 - (0 * be) / C150608) -
                            C150632 / (C150608 * 4 * C150616)) *
                           ae) /
                              C150608;
    const double C73656 =
        C150682 / C150678 -
        (((C150606 * C150685) / C150608 + 2 * C150671) * be) / C150608 -
        C150627 / C150618;
    const double C73658 =
        C150685 / C150618 - ((2 * C150672 - C150632 / C150618) * be) / C150608;
    const double C6380 = C6368 - C6352;
    const double C6377 = C6365 - C6340;
    const double C6374 = C6362 - C6328;
    const double C6371 = C6359 - C6316;
    const double C6682 = C6670 - C6654;
    const double C6679 = C6667 - C6642;
    const double C6676 = C6664 - C6630;
    const double C6673 = C6661 - C6618;
    const double C6984 = C6972 - C6956;
    const double C6981 = C6969 - C6944;
    const double C6978 = C6966 - C6932;
    const double C6975 = C6963 - C6920;
    const double C7208 = C7205 - C7198;
    const double C7423 = C7420 - C7413;
    const double C7752 = C7746 - C7736;
    const double C7749 = C7743 - C7724;
    const double C8572 = C8569 - C8562;
    const double C8887 = C8884 - C8877;
    const double C9986 = C9983 - C9976;
    const double C10205 = C10202 - C10195;
    const double C110083 = C110077 - C110067;
    const double C110080 = C110074 - C110055;
    const double C110785 = C110782 - C110775;
    const double C111397 = C111388 - C111366;
    const double C111394 = C111385 - C111354;
    const double C112702 = C112696 - C112686;
    const double C112699 = C112693 - C112674;
    const double C113404 = C113401 - C113394;
    const double C23446 = C23436 - C23425;
    const double C23443 = C23433 - C23413;
    const double C23442 = C23432 - C23409;
    const double C23439 = C23429 - C23397;
    const double C23437 = C23427 - C23389;
    const double C23749 = C23737 - C23724;
    const double C23746 = C23734 - C23712;
    const double C23744 = C23732 - C23704;
    const double C23742 = C23730 - C23696;
    const double C23741 = C23729 - C23692;
    const double C23739 = C23727 - C23684;
    const double C24053 = C24041 - C24028;
    const double C24050 = C24038 - C24016;
    const double C24048 = C24036 - C24008;
    const double C24046 = C24034 - C24000;
    const double C24045 = C24033 - C23996;
    const double C24043 = C24031 - C23988;
    const double C24274 = C24272 - C24269;
    const double C24483 = C24481 - C24478;
    const double C24811 = C24805 - C24798;
    const double C24808 = C24802 - C24786;
    const double C24806 = C24800 - C24778;
    const double C25594 = C25590 - C25585;
    const double C25592 = C25588 - C25577;
    const double C25912 = C25908 - C25903;
    const double C25910 = C25906 - C25895;
    const double C26982 = C26978 - C26973;
    const double C26980 = C26976 - C26965;
    const double C27204 = C27200 - C27195;
    const double C27202 = C27198 - C27187;
    const double C40807 = C40803 - C40794;
    const double C40804 = C40800 - C40780;
    const double C41728 = C41726 - C41717;
    const double C42521 = C42513 - C42504;
    const double C42519 = C42511 - C42496;
    const double C42516 = C42508 - C42484;
    const double C42514 = C42506 - C42476;
    const double C42799 = C42797 - C42794;
    const double C43458 = C43456 - C43450;
    const double C44239 = C44233 - C44226;
    const double C44237 = C44231 - C44218;
    const double C44234 = C44228 - C44206;
    const double C44645 = C44643 - C44639;
    const double C45177 = C45175 - C45172;
    const double C144207 = C144205 - C144200;
    const double C145475 = C145473 - C145468;
    const double C146171 = C146169 - C146165;
    const double C51262 = C51252 - C51241;
    const double C51259 = C51249 - C51229;
    const double C51258 = C51248 - C51225;
    const double C51255 = C51245 - C51213;
    const double C51253 = C51243 - C51205;
    const double C51565 = C51553 - C51540;
    const double C51562 = C51550 - C51528;
    const double C51560 = C51548 - C51520;
    const double C51558 = C51546 - C51512;
    const double C51557 = C51545 - C51508;
    const double C51555 = C51543 - C51500;
    const double C51869 = C51857 - C51844;
    const double C51866 = C51854 - C51832;
    const double C51864 = C51852 - C51824;
    const double C51862 = C51850 - C51816;
    const double C51861 = C51849 - C51812;
    const double C51859 = C51847 - C51804;
    const double C52090 = C52088 - C52085;
    const double C52299 = C52297 - C52294;
    const double C52627 = C52621 - C52614;
    const double C52624 = C52618 - C52602;
    const double C52622 = C52616 - C52594;
    const double C53410 = C53406 - C53401;
    const double C53408 = C53404 - C53393;
    const double C53728 = C53724 - C53719;
    const double C53726 = C53722 - C53711;
    const double C54798 = C54794 - C54789;
    const double C54796 = C54792 - C54781;
    const double C55020 = C55016 - C55011;
    const double C55018 = C55014 - C55003;
    const double C65724 = C65717 - C65708;
    const double C65721 = C65714 - C65696;
    const double C65719 = C65712 - C65688;
    const double C66433 = C66429 - C66421;
    const double C66431 = C66427 - C66413;
    const double C67046 = C67038 - C67028;
    const double C67043 = C67035 - C67016;
    const double C67041 = C67033 - C67008;
    const double C67039 = C67030 - C66999;
    const double C67551 = C67549 - C67543;
    const double C67769 = C67765 - C67751;
    const double C68364 = C68360 - C68354;
    const double C68361 = C68357 - C68342;
    const double C68674 = C68672 - C68668;
    const double C68884 = C68882 - C68878;
    const double C69098 = C69096 - C69092;
    const double C84760 = C84758 - C84755;
    const double C6393 = C6381 + C6357;
    const double C6388 = C6376 + C6337;
    const double C6387 = C6375 + C6333;
    const double C6382 = C6370 + C6313;
    const double C6695 = C6683 + C6659;
    const double C6690 = C6678 + C6639;
    const double C6687 = C6675 + C6627;
    const double C6686 = C6674 + C6623;
    const double C6997 = C6985 + C6961;
    const double C6992 = C6980 + C6941;
    const double C6989 = C6977 + C6929;
    const double C6988 = C6976 + C6925;
    const double C7212 = C7209 + C7203;
    const double C7427 = C7424 + C7418;
    const double C7759 = C7753 + C7741;
    const double C7754 = C7748 + C7721;
    const double C8576 = C8573 + C8567;
    const double C8891 = C8888 + C8882;
    const double C9990 = C9987 + C9981;
    const double C10209 = C10206 + C10200;
    const double C110090 = C110084 + C110072;
    const double C110085 = C110079 + C110052;
    const double C110787 = C110784 + C110772;
    const double C111410 = C111401 + C111383;
    const double C111405 = C111396 + C111363;
    const double C111402 = C111393 + C111351;
    const double C112107 = C112104 + C112092;
    const double C112709 = C112703 + C112691;
    const double C112704 = C112698 + C112671;
    const double C113408 = C113405 + C113399;
    const double C6390 = C6378 + C6345;
    const double C6385 = C6373 + C6325;
    const double C6384 = C6372 + C6321;
    const double C6692 = C6680 + C6647;
    const double C6684 = C6672 + C6615;
    const double C6994 = C6982 + C6949;
    const double C6986 = C6974 + C6917;
    const double C110088 = C110082 + C110064;
    const double C110087 = C110081 + C110060;
    const double C110789 = C110786 + C110780;
    const double C112707 = C112701 + C112683;
    const double C112706 = C112700 + C112679;
    const double C23454 = C23444 + C23418;
    const double C23451 = C23441 + C23406;
    const double C23450 = C23440 + C23402;
    const double C23448 = C23438 + C23394;
    const double C23759 = C23747 + C23717;
    const double C23757 = C23745 + C23709;
    const double C23755 = C23743 + C23701;
    const double C23752 = C23740 + C23689;
    const double C23750 = C23738 + C23681;
    const double C24063 = C24051 + C24021;
    const double C24061 = C24049 + C24013;
    const double C24059 = C24047 + C24005;
    const double C24056 = C24044 + C23993;
    const double C24054 = C24042 + C23985;
    const double C24815 = C24809 + C24791;
    const double C24813 = C24807 + C24783;
    const double C27207 = C27203 + C27192;
    const double C27205 = C27201 + C27184;
    const double C40810 = C40806 + C40791;
    const double C40809 = C40805 + C40785;
    const double C41731 = C41729 + C41722;
    const double C42525 = C42517 + C42489;
    const double C42523 = C42515 + C42481;
    const double C44244 = C44238 + C44223;
    const double C44242 = C44236 + C44215;
    const double C44241 = C44235 + C44211;
    const double C45178 = C45176 + C45169;
    const double C145476 = C145474 + C145465;
    const double C146172 = C146170 + C146162;
    const double C51270 = C51260 + C51234;
    const double C51267 = C51257 + C51222;
    const double C51266 = C51256 + C51218;
    const double C51264 = C51254 + C51210;
    const double C51575 = C51563 + C51533;
    const double C51573 = C51561 + C51525;
    const double C51571 = C51559 + C51517;
    const double C51568 = C51556 + C51505;
    const double C51566 = C51554 + C51497;
    const double C51879 = C51867 + C51837;
    const double C51877 = C51865 + C51829;
    const double C51875 = C51863 + C51821;
    const double C51872 = C51860 + C51809;
    const double C51870 = C51858 + C51801;
    const double C52631 = C52625 + C52607;
    const double C52629 = C52623 + C52599;
    const double C55023 = C55019 + C55008;
    const double C55021 = C55017 + C55000;
    const double C65729 = C65723 + C65705;
    const double C65728 = C65722 + C65701;
    const double C65726 = C65720 + C65693;
    const double C66438 = C66434 + C66426;
    const double C66436 = C66432 + C66418;
    const double C67050 = C67042 + C67013;
    const double C67048 = C67040 + C67004;
    const double C68367 = C68363 + C68351;
    const double C68366 = C68362 + C68347;
    const double C68885 = C68883 + C68875;
    const double C69099 = C69097 + C69089;
    const double C73742 = C73730 + C73697;
    const double C73737 = C73725 + C73677;
    const double C73736 = C73724 + C73673;
    const double C74044 = C74032 + C73999;
    const double C74036 = C74024 + C73967;
    const double C74346 = C74334 + C74301;
    const double C74338 = C74326 + C74269;
    const double C93544 = C93538 + C93520;
    const double C93543 = C93537 + C93516;
    const double C94245 = C94242 + C94236;
    const double C96163 = C96157 + C96139;
    const double C96162 = C96156 + C96135;
    const double C18409 = C16169 + C16170;
    const double C137569 = C135455 + C135456;
    const double C6689 = C6677 + C6635;
    const double C25597 = C25593 + C25582;
    const double C53413 = C53409 + C53398;
    const double C74041 = C74029 + C73987;
    const double C6991 = C6979 + C6937;
    const double C15195 = C15193 + C15186;
    const double C26985 = C26981 + C26970;
    const double C54801 = C54797 + C54786;
    const double C74343 = C74331 + C74289;
    const double C7756 = C7750 + C7729;
    const double C17003 = C17001 + C16997;
    const double C25915 = C25911 + C25900;
    const double C53731 = C53727 + C53716;
    const double C75108 = C75102 + C75081;
    const double C17503 = C17497 - C17498;
    const double C42512 = C42498 - C42499;
    const double C67036 = C67018 - C67019;
    const double C67767 = C67757 - C67758;
    const double C94842 = C94812 - C94813;
    const double C111391 = C111376 - C111377;
    const double C111386 = C111356 - C111357;
    const double C144896 = C144888 - C144889;
    const double C43457 = C43452 - C43453;
    const double C67766 = C67753 - C67754;
    const double C94845 = C94824 - C94825;
    const double C111389 = C111368 - C111369;
    const double C112102 = C112093 - C112094;
    const double C16792 = C16787 * C6301;
    const double C33665 = C16787 * C152522;
    const double C103127 = C16787 * C51195;
    const double C119069 = C16787 * C152084;
    const double C136024 = C16787 * C152436;
    const double C17508 = C17506 * C6301;
    const double C34354 = C17506 * C152522;
    const double C103809 = C17506 * C51195;
    const double C119536 = C17506 * C152084;
    const double C136711 = C17506 * C152436;
    const double C16794 = C16789 * C6301;
    const double C119070 = C16789 * C152084;
    const double C136027 = C16789 * C152436;
    const double C15456 = C15446 + C15447;
    const double C134766 = C134760 + C134761;
    const double C18108 = C18105 * C152089;
    const double C120258 = C18105 * C152084;
    const double C137276 = C18105 * C152089;
    const double C8553 =
        (4 * (2 * C150949 + C150718 * C151035 + C151026 * ae) +
         C150718 * (3 * C151035 + C150718 * C151404 + C151394 * ae) +
         (3 * C151026 + C150718 * C151394) * ae) /
        C150608;
    const double C8868 =
        (C150928 * (3 * C151035 + C150718 * C151404 + C151394 * ae)) / C150608;
    const double C9967 =
        (2 * C150949 + C150718 * C151035 + C151026 * ae + C151404 * C151060) /
        C150608;
    const double C8554 =
        (4 * (2 * C151029 + ae * C151034 + be * C151035 + C150718 * C151396) +
         ae * (3 * C151034 + C150718 * C151403 + C151394 * be) +
         be * (3 * C151035 + C150718 * C151404 + C151394 * ae) +
         C150718 *
             (3 * C151396 + ae * C151403 + be * C151404 +
              C150718 *
                  (2 * C151386 + ae * C151397 + be * C151398 +
                   C150718 *
                       (C150777 + ae * C151380 + be * C151383 +
                        C150718 *
                            (ae * C150894 + be * C150896 +
                             C150718 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150736)))))) /
        C150616;
    const double C8869 =
        (3 * (C151086 + ae * C150928 * C151024 + be * C150928 * C151027 +
              C150718 * C151413) +
         ae * C150928 * C151403 + be * C150928 * C151404 +
         C150718 *
             (2 * C151413 + ae * C150928 * C151397 + be * C150928 * C151398 +
              C150718 *
                  (C151408 + ae * C150928 * C151380 + be * C150928 * C151383 +
                   C150718 * (ae * C150928 * C150894 + be * C150928 * C150896 +
                              C150718 * C150928 *
                                  (C150775 +
                                   (C150769 * C150770 +
                                    C150721 * bs[9] * std::pow(C150720, 9)) *
                                       C150607 * C150736))))) /
        C150616;
    const double C8552 =
        (4 * (2 * C150948 + C150718 * C151034 + C151026 * be) +
         C150718 * (3 * C151034 + C150718 * C151403 + C151394 * be) +
         (3 * C151026 + C150718 * C151394) * be) /
        C150608;
    const double C8867 =
        (C150928 * (3 * C151034 + C150718 * C151403 + C151394 * be)) / C150608;
    const double C9966 =
        (2 * C150948 + C150718 * C151034 + C151026 * be + C151403 * C151060) /
        C150608;
    const double C151312 = C151264 + C151310;
    const double C151311 = C151258 + C151309;
    const double C151549 = C151547 + C151528;
    const double C151548 = C151546 + C151525;
    const double C8558 = C6307 * C8104;
    const double C75866 = C73659 * C8104;
    const double C9972 = C6307 * C8340;
    const double C16992 = C134 * C8340;
    const double C42492 = C23384 * C8340;
    const double C67547 = C51200 * C8340;
    const double C77240 = C73659 * C8340;
    const double C8873 = C6307 * C8344;
    const double C42790 = C23384 * C8344;
    const double C76177 = C73659 * C8344;
    const double C84751 = C51200 * C8344;
    const double C151248 = C151246 + C151233;
    const double C210 = C204 + C192;
    const double C466 = C458 + C442;
    const double C6391 = C6379 + C6349;
    const double C24275 = C24273 + C24266;
    const double C52091 = C52089 + C52082;
    const double C73743 = C73731 + C73701;
    const double C866 = C865 + C863;
    const double C23455 = C23445 + C23422;
    const double C51271 = C51261 + C51238;
    const double C719 = C711 + C695;
    const double C1009 = C1008 + C1006;
    const double C1255 = C1251 + C1243;
    const double C24484 = C24482 + C24475;
    const double C52300 = C52298 + C52291;
    const double C1880 = C1877 + C1865;
    const double C7210 = C7207 + C7195;
    const double C23760 = C23748 + C23721;
    const double C51576 = C51564 + C51537;
    const double C74562 = C74559 + C74547;
    const double C2878 = C2875 + C2863;
    const double C24064 = C24052 + C24025;
    const double C51880 = C51868 + C51841;
    const double C2099 = C2096 + C2084;
    const double C7425 = C7422 + C7410;
    const double C24816 = C24810 + C24795;
    const double C52632 = C52626 + C52611;
    const double C74777 = C74774 + C74762;
    const double C6681 = C6669 - C6650;
    const double C25591 = C25587 - C25573;
    const double C53407 = C53403 - C53389;
    const double C74033 = C74021 - C74002;
    const double C6983 = C6971 - C6952;
    const double C15194 = C15192 - C15189;
    const double C26979 = C26975 - C26961;
    const double C54795 = C54791 - C54777;
    const double C74335 = C74323 - C74304;
    const double C7751 = C7745 - C7732;
    const double C25909 = C25905 - C25891;
    const double C33865 = C33864 - C33862;
    const double C53725 = C53721 - C53707;
    const double C75103 = C75097 - C75084;
    const double C8559 = C6300 * C8111;
    const double C75867 = C73652 * C8111;
    const double C8874 = C6300 * C8353;
    const double C42791 = C152376 * C8353;
    const double C76178 = C73652 * C8353;
    const double C84752 = C152376 * C8353;
    const double C8556 = C6307 * C8103;
    const double C75864 = C73659 * C8103;
    const double C9970 = C6307 * C8339;
    const double C16990 = C134 * C8339;
    const double C42490 = C23384 * C8339;
    const double C67545 = C51200 * C8339;
    const double C77238 = C73659 * C8339;
    const double C8871 = C6307 * C8343;
    const double C42788 = C23384 * C8343;
    const double C76175 = C73659 * C8343;
    const double C84749 = C51200 * C8343;
    const double C10207 = C10204 + C10192;
    const double C16788 = C16783 + C16770;
    const double C44646 = C44644 + C44636;
    const double C68675 = C68673 + C68665;
    const double C77471 = C77468 + C77456;
    const double C151247 = C151245 + C151230;
    const double C151510 = C151501 + C151477;
    const double C67037 = C67022 - C67023;
    const double C96856 = C96844 - C96845;
    const double C113400 = C113388 - C113389;
    const double C119542 = C119538 - C119539;
    const double C144204 = C144194 - C144195;
    const double C119078 = C119077 * C152084;
    const double C73707 = C73656 * C140;
    const double C73687 = C73656 * C139;
    const double C73683 = C73656 * C138;
    const double C73663 = C73656 * C137;
    const double C74009 = C73656 * C368;
    const double C73989 = C73656 * C363;
    const double C73977 = C73656 * C367;
    const double C73973 = C73656 * C364;
    const double C74311 = C73656 * C621;
    const double C74291 = C73656 * C616;
    const double C74279 = C73656 * C620;
    const double C74275 = C73656 * C617;
    const double C74553 = C73656 * C362;
    const double C74768 = C73656 * C615;
    const double C75091 = C73656 * C1205;
    const double C75071 = C73656 * C1204;
    const double C75873 = C73656 * C1497;
    const double C76184 = C73656 * C1679;
    const double C77247 = C73656 * C1675;
    const double C77462 = C73656 * C2631;
    const double C93526 = C73656 * C619;
    const double C93506 = C73656 * C618;
    const double C94226 = C73656 * C1203;
    const double C94837 = C73656 * C1681;
    const double C94817 = C73656 * C1680;
    const double C94805 = C73656 * C1676;
    const double C95546 = C73656 * C2231;
    const double C96145 = C73656 * C2633;
    const double C96125 = C73656 * C2632;
    const double C96853 = C73656 * C3169;
    const double C73703 = C73658 * C370;
    const double C73691 = C73658 * C362;
    const double C73679 = C73658 * C363;
    const double C73667 = C73658 * C364;
    const double C74005 = C73658 * C1496;
    const double C73993 = C73658 * C368;
    const double C73981 = C73658 * C1497;
    const double C73969 = C73658 * C367;
    const double C74307 = C73658 * C1674;
    const double C74295 = C73658 * C1205;
    const double C74283 = C73658 * C1675;
    const double C74271 = C73658 * C1204;
    const double C74549 = C73658 * C369;
    const double C74764 = C73658 * C1206;
    const double C75087 = C73658 * C1678;
    const double C75075 = C73658 * C1679;
    const double C75869 = C73658 * C1500;
    const double C76180 = C73658 * C2232;
    const double C77243 = C73658 * C1682;
    const double C77458 = C73658 * C3170;
    const double C93522 = C73658 * C1676;
    const double C93510 = C73658 * C1203;
    const double C94230 = C73658 * C1680;
    const double C94833 = C73658 * C8334;
    const double C94821 = C73658 * C2231;
    const double C94809 = C73658 * C1681;
    const double C95550 = C73658 * C8336;
    const double C96141 = C73658 * C9653;
    const double C96129 = C73658 * C3169;
    const double C96849 = C73658 * C9652;
    const double C6392 = C6380 + C6353;
    const double C6389 = C6377 + C6341;
    const double C6386 = C6374 + C6329;
    const double C6383 = C6371 + C6317;
    const double C6694 = C6682 + C6655;
    const double C6691 = C6679 + C6643;
    const double C6688 = C6676 + C6631;
    const double C6685 = C6673 + C6619;
    const double C6996 = C6984 + C6957;
    const double C6993 = C6981 + C6945;
    const double C6990 = C6978 + C6933;
    const double C6987 = C6975 + C6921;
    const double C7211 = C7208 + C7199;
    const double C7426 = C7423 + C7414;
    const double C7758 = C7752 + C7737;
    const double C7755 = C7749 + C7725;
    const double C8575 = C8572 + C8563;
    const double C8890 = C8887 + C8878;
    const double C9989 = C9986 + C9977;
    const double C10208 = C10205 + C10196;
    const double C110089 = C110083 + C110068;
    const double C110086 = C110080 + C110056;
    const double C110788 = C110785 + C110776;
    const double C111406 = C111397 + C111367;
    const double C111403 = C111394 + C111355;
    const double C112708 = C112702 + C112687;
    const double C112705 = C112699 + C112675;
    const double C113407 = C113404 + C113395;
    const double C23456 = C23446 + C23426;
    const double C23453 = C23443 + C23414;
    const double C23452 = C23442 + C23410;
    const double C23449 = C23439 + C23398;
    const double C23447 = C23437 + C23390;
    const double C23761 = C23749 + C23725;
    const double C23758 = C23746 + C23713;
    const double C23756 = C23744 + C23705;
    const double C23754 = C23742 + C23697;
    const double C23753 = C23741 + C23693;
    const double C23751 = C23739 + C23685;
    const double C24065 = C24053 + C24029;
    const double C24062 = C24050 + C24017;
    const double C24060 = C24048 + C24009;
    const double C24058 = C24046 + C24001;
    const double C24057 = C24045 + C23997;
    const double C24055 = C24043 + C23989;
    const double C24276 = C24274 + C24270;
    const double C24485 = C24483 + C24479;
    const double C24817 = C24811 + C24799;
    const double C24814 = C24808 + C24787;
    const double C24812 = C24806 + C24779;
    const double C25598 = C25594 + C25586;
    const double C25596 = C25592 + C25578;
    const double C25916 = C25912 + C25904;
    const double C25914 = C25910 + C25896;
    const double C26986 = C26982 + C26974;
    const double C26984 = C26980 + C26966;
    const double C27208 = C27204 + C27196;
    const double C27206 = C27202 + C27188;
    const double C40811 = C40807 + C40795;
    const double C40808 = C40804 + C40781;
    const double C41730 = C41728 + C41718;
    const double C42529 = C42521 + C42505;
    const double C42527 = C42519 + C42497;
    const double C42524 = C42516 + C42485;
    const double C42522 = C42514 + C42477;
    const double C42801 = C42799 + C42795;
    const double C43460 = C43458 + C43451;
    const double C44245 = C44239 + C44227;
    const double C44243 = C44237 + C44219;
    const double C44240 = C44234 + C44207;
    const double C44647 = C44645 + C44640;
    const double C45179 = C45177 + C45173;
    const double C144209 = C144207 + C144201;
    const double C145477 = C145475 + C145469;
    const double C146173 = C146171 + C146166;
    const double C51272 = C51262 + C51242;
    const double C51269 = C51259 + C51230;
    const double C51268 = C51258 + C51226;
    const double C51265 = C51255 + C51214;
    const double C51263 = C51253 + C51206;
    const double C51577 = C51565 + C51541;
    const double C51574 = C51562 + C51529;
    const double C51572 = C51560 + C51521;
    const double C51570 = C51558 + C51513;
    const double C51569 = C51557 + C51509;
    const double C51567 = C51555 + C51501;
    const double C51881 = C51869 + C51845;
    const double C51878 = C51866 + C51833;
    const double C51876 = C51864 + C51825;
    const double C51874 = C51862 + C51817;
    const double C51873 = C51861 + C51813;
    const double C51871 = C51859 + C51805;
    const double C52092 = C52090 + C52086;
    const double C52301 = C52299 + C52295;
    const double C52633 = C52627 + C52615;
    const double C52630 = C52624 + C52603;
    const double C52628 = C52622 + C52595;
    const double C53414 = C53410 + C53402;
    const double C53412 = C53408 + C53394;
    const double C53732 = C53728 + C53720;
    const double C53730 = C53726 + C53712;
    const double C54802 = C54798 + C54790;
    const double C54800 = C54796 + C54782;
    const double C55024 = C55020 + C55012;
    const double C55022 = C55018 + C55004;
    const double C65730 = C65724 + C65709;
    const double C65727 = C65721 + C65697;
    const double C65725 = C65719 + C65689;
    const double C66437 = C66433 + C66422;
    const double C66435 = C66431 + C66414;
    const double C67054 = C67046 + C67029;
    const double C67051 = C67043 + C67017;
    const double C67049 = C67041 + C67009;
    const double C67047 = C67039 + C67000;
    const double C67553 = C67551 + C67544;
    const double C67773 = C67769 + C67752;
    const double C68368 = C68364 + C68355;
    const double C68365 = C68361 + C68343;
    const double C68676 = C68674 + C68669;
    const double C68886 = C68884 + C68879;
    const double C69100 = C69098 + C69093;
    const double C84762 = C84760 + C84756;
    const double C16766 = C15195 * C152089;
    const double C17296 = C15195 * C6301;
    const double C33664 = C15195 * C152523;
    const double C103126 = C15195 * C51196;
    const double C119404 = C15195 * C152084;
    const double C136025 = C15195 * C152089;
    const double C136515 = C15195 * C152436;
    const double C17496 = C17003 * C152089;
    const double C34355 = C17003 * C152523;
    const double C103810 = C17003 * C51196;
    const double C136712 = C17003 * C152089;
    const double C17505 = C17503 - C17499;
    const double C42520 = C42512 - C42500;
    const double C67044 = C67036 - C67020;
    const double C67771 = C67767 - C67759;
    const double C94851 = C94842 - C94814;
    const double C111400 = C111391 - C111378;
    const double C111395 = C111386 - C111358;
    const double C144898 = C144896 - C144890;
    const double C43459 = C43457 - C43454;
    const double C67770 = C67766 - C67755;
    const double C94854 = C94845 - C94826;
    const double C111398 = C111389 - C111370;
    const double C112105 = C112102 - C112095;
    const double C151314 = C151312 + C151300;
    const double C151313 = C151311 + C151297;
    const double C151551 = C150718 * C151549;
    const double C151550 = C150718 * C151548;
    const double C8108 =
        (5 * (3 * C150989 + C150718 * C151186 + C151176 * ae) +
         C150718 * (4 * C151186 + C150718 * C151248 + C151236 * ae) +
         (4 * C151176 + C150718 * C151236) * ae) /
        C150608;
    const double C8348 =
        (3 * C150989 + C150718 * C151186 + C151176 * ae + C151248 * C151060) /
        C150608;
    const double C9088 =
        (C150928 * (4 * C151186 + C150718 * C151248 + C151236 * ae)) / C150608;
    const double C62161 =
        (2 * C150928 * C151248 + C150928 * (C151248 + C151549 * C151060)) /
        C150608;
    const double C15862 = C719 * C152089;
    const double C32406 = C719 * C23381;
    const double C101868 = C719 * C51197;
    const double C135158 = C719 * C152089;
    const double C32799 = C1009 * C23381;
    const double C102261 = C1009 * C51197;
    const double C33098 = C1255 * C23381;
    const double C102560 = C1255 * C51197;
    const double C16178 = C2878 * C152089;
    const double C35211 = C2878 * C23381;
    const double C104666 = C2878 * C51197;
    const double C135460 = C2878 * C152089;
    const double C34159 = C2099 * C23381;
    const double C103614 = C2099 * C51197;
    const double C6693 = C6681 + C6651;
    const double C25595 = C25591 + C25574;
    const double C53411 = C53407 + C53390;
    const double C74045 = C74033 + C74003;
    const double C6995 = C6983 + C6953;
    const double C15196 = C15194 + C15190;
    const double C26983 = C26979 + C26962;
    const double C54799 = C54795 + C54778;
    const double C74347 = C74335 + C74305;
    const double C7757 = C7751 + C7733;
    const double C25913 = C25909 + C25892;
    const double C33866 = C33865 + C33863;
    const double C53729 = C53725 + C53708;
    const double C75109 = C75103 + C75085;
    const double C8568 = C8556 - C8557;
    const double C75876 = C75864 - C75865;
    const double C9982 = C9970 - C9971;
    const double C16998 = C16990 - C16991;
    const double C42510 = C42490 - C42491;
    const double C67550 = C67545 - C67546;
    const double C77250 = C77238 - C77239;
    const double C8883 = C8871 - C8872;
    const double C42796 = C42788 - C42789;
    const double C76187 = C76175 - C76176;
    const double C84757 = C84749 - C84750;
    const double C16793 = C16788 * C152089;
    const double C119405 = C16788 * C152084;
    const double C136026 = C16788 * C152089;
    const double C8113 =
        (5 * (3 * C151178 + ae * C151185 + be * C151186 + C150718 * C151238) +
         ae * (4 * C151185 + C150718 * C151247 + C151236 * be) +
         be * (4 * C151186 + C150718 * C151248 + C151236 * ae) +
         C150718 *
             (4 * C151238 + ae * C151247 + be * C151248 +
              C150718 *
                  (3 * C151228 + ae * C151241 + be * C151242 +
                   C150718 *
                       (2 * C151218 + ae * C151229 + be * C151232 +
                        C150718 * (C150760 + ae * C151211 + be * C151214 +
                                   C150718 * (ae * C150850 + be * C150854 +
                                              C150718 * C150775)))))) /
        C150616;
    const double C9091 =
        (4 * (2 * C151338 + ae * C150928 * C151179 + be * C150928 * C151180 +
              C150718 * C151430) +
         ae * C150928 * C151247 + be * C150928 * C151248 +
         C150718 *
             (3 * C151430 + ae * C150928 * C151241 + be * C150928 * C151242 +
              C150718 *
                  (2 * C151428 + ae * C150928 * C151229 +
                   be * C150928 * C151232 +
                   C150718 * (C151419 + ae * C150928 * C151211 +
                              be * C150928 * C151214 +
                              C150718 * (ae * C150928 * C150850 +
                                         be * C150928 * C150854 +
                                         C150718 * C150928 * C150775))))) /
        C150616;
    const double C60868 =
        (4 * (2 * C151350 + ae * (C151179 + C151229 * C151060) +
              be * (C151180 + C151232 * C151060) + C150718 * C151577) +
         ae * (C151247 + C151548 * C151060) +
         be * (C151248 + C151549 * C151060) +
         C150718 *
             (3 * C151577 + ae * (C151241 + C151540 * C151060) +
              be * (C151242 + C151542 * C151060) +
              C150718 *
                  (2 * C151575 + ae * (C151229 + C151524 * C151060) +
                   be * (C151232 + C151527 * C151060) +
                   C150718 *
                       (C151566 + ae * (C151211 + C151505 * C151060) +
                        be * (C151214 + C151508 * C151060) +
                        C150718 *
                            (ae * (C150850 + C150886 * C151060) +
                             be * (C150854 + C150890 * C151060) +
                             C150718 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C151060)))))) /
        C150616;
    const double C8107 =
        (5 * (3 * C150988 + C150718 * C151185 + C151176 * be) +
         C150718 * (4 * C151185 + C150718 * C151247 + C151236 * be) +
         (4 * C151176 + C150718 * C151236) * be) /
        C150608;
    const double C8347 =
        (3 * C150988 + C150718 * C151185 + C151176 * be + C151247 * C151060) /
        C150608;
    const double C9087 =
        (C150928 * (4 * C151185 + C150718 * C151247 + C151236 * be)) / C150608;
    const double C62160 =
        (2 * C150928 * C151247 + C150928 * (C151247 + C151548 * C151060)) /
        C150608;
    const double C151543 = C151510 + C151539;
    const double C67045 = C67037 - C67024;
    const double C96859 = C96856 - C96846;
    const double C113403 = C113400 - C113390;
    const double C119543 = C119542 - C119540;
    const double C144206 = C144204 - C144196;
    const double C73721 = C73706 - C73707;
    const double C73716 = C73686 - C73687;
    const double C73715 = C73682 - C73683;
    const double C73710 = C73662 - C73663;
    const double C74023 = C74008 - C74009;
    const double C74018 = C73988 - C73989;
    const double C74015 = C73976 - C73977;
    const double C74014 = C73972 - C73973;
    const double C74325 = C74310 - C74311;
    const double C74320 = C74290 - C74291;
    const double C74317 = C74278 - C74279;
    const double C74316 = C74274 - C74275;
    const double C74558 = C74552 - C74553;
    const double C74773 = C74767 - C74768;
    const double C75099 = C75090 - C75091;
    const double C75094 = C75070 - C75071;
    const double C75878 = C75872 - C75873;
    const double C76189 = C76183 - C76184;
    const double C77252 = C77246 - C77247;
    const double C77467 = C77461 - C77462;
    const double C93534 = C93525 - C93526;
    const double C93529 = C93505 - C93506;
    const double C94237 = C94225 - C94226;
    const double C94848 = C94836 - C94837;
    const double C94843 = C94816 - C94817;
    const double C94840 = C94804 - C94805;
    const double C95557 = C95545 - C95546;
    const double C96153 = C96144 - C96145;
    const double C96148 = C96124 - C96125;
    const double C96858 = C96852 - C96853;
    const double C73720 = C73702 - C73703;
    const double C73717 = C73690 - C73691;
    const double C73714 = C73678 - C73679;
    const double C73711 = C73666 - C73667;
    const double C74022 = C74004 - C74005;
    const double C74019 = C73992 - C73993;
    const double C74016 = C73980 - C73981;
    const double C74013 = C73968 - C73969;
    const double C74324 = C74306 - C74307;
    const double C74321 = C74294 - C74295;
    const double C74318 = C74282 - C74283;
    const double C74315 = C74270 - C74271;
    const double C74557 = C74548 - C74549;
    const double C74772 = C74763 - C74764;
    const double C75098 = C75086 - C75087;
    const double C75095 = C75074 - C75075;
    const double C75877 = C75868 - C75869;
    const double C76188 = C76179 - C76180;
    const double C77251 = C77242 - C77243;
    const double C77466 = C77457 - C77458;
    const double C93533 = C93521 - C93522;
    const double C93530 = C93509 - C93510;
    const double C94238 = C94229 - C94230;
    const double C94847 = C94832 - C94833;
    const double C94844 = C94820 - C94821;
    const double C94841 = C94808 - C94809;
    const double C95558 = C95549 - C95550;
    const double C96152 = C96140 - C96141;
    const double C96149 = C96128 - C96129;
    const double C96857 = C96848 - C96849;
    const double C23459 = C23453 + C23454;
    const double C23458 = C23451 + C23452;
    const double C23457 = C23449 + C23450;
    const double C24262 = C23758 + C23759;
    const double C23763 = C23756 + C23757;
    const double C23762 = C23750 + C23751;
    const double C24471 = C24062 + C24063;
    const double C41328 = C24063 + C24062;
    const double C24067 = C24060 + C24061;
    const double C40799 = C24061 + C24060;
    const double C40797 = C24058 + C24059;
    const double C40787 = C24059 + C24058;
    const double C40796 = C24056 + C24057;
    const double C40786 = C24057 + C24056;
    const double C24066 = C24054 + C24055;
    const double C40798 = C24055 + C24054;
    const double C24818 = C24814 + C24815;
    const double C41725 = C24815 + C24814;
    const double C41724 = C24813 + C24812;
    const double C41723 = C24812 + C24813;
    const double C43189 = C25915 + C25916;
    const double C43188 = C25916 + C25915;
    const double C44641 = C26985 + C26986;
    const double C44632 = C26986 + C26985;
    const double C44907 = C27207 + C27208;
    const double C44906 = C27208 + C27207;
    const double C142952 = C40811 + C40810;
    const double C144192 = C42523 + C42522;
    const double C145461 = C44245 + C44244;
    const double C145460 = C44241 + C44240;
    const double C146158 = C45179 + C45178;
    const double C51275 = C51269 + C51270;
    const double C51274 = C51267 + C51268;
    const double C51273 = C51265 + C51266;
    const double C52078 = C51574 + C51575;
    const double C51579 = C51572 + C51573;
    const double C51578 = C51566 + C51567;
    const double C52287 = C51878 + C51879;
    const double C83359 = C51879 + C51878;
    const double C51883 = C51876 + C51877;
    const double C82842 = C51877 + C51876;
    const double C65710 = C51875 + C51874;
    const double C82840 = C51874 + C51875;
    const double C82839 = C51872 + C51873;
    const double C82838 = C51873 + C51872;
    const double C51882 = C51870 + C51871;
    const double C82841 = C51871 + C51870;
    const double C52634 = C52630 + C52631;
    const double C83748 = C52631 + C52630;
    const double C83747 = C52629 + C52628;
    const double C83746 = C52628 + C52629;
    const double C85150 = C53731 + C53732;
    const double C85149 = C53732 + C53731;
    const double C68661 = C54802 + C54801;
    const double C86537 = C54801 + C54802;
    const double C68871 = C55024 + C55023;
    const double C86796 = C55023 + C55024;
    const double C68339 = C65729 + C65730;
    const double C65731 = C65727 + C65728;
    const double C67005 = C66438 + C66437;
    const double C69085 = C67047 + C67048;
    const double C68369 = C68365 + C68366;
    const double C16795 = C16792 + C16766;
    const double C136028 = C136024 + C136025;
    const double C17507 = C17505 + C17500;
    const double C42528 = C42520 + C42501;
    const double C67052 = C67044 + C67021;
    const double C67775 = C67771 + C67760;
    const double C94860 = C94851 + C94815;
    const double C111409 = C111400 + C111379;
    const double C111404 = C111395 + C111359;
    const double C144900 = C144898 + C144891;
    const double C43461 = C43459 + C43455;
    const double C67774 = C67770 + C67756;
    const double C94863 = C94854 + C94827;
    const double C111407 = C111398 + C111371;
    const double C112108 = C112105 + C112096;
    const double C8110 =
        (5 * (3 * C151012 + C150718 * C151144 + C151134 * ae) +
         C150718 * (4 * C151144 + C150718 * C151314 + C151303 * ae) +
         (4 * C151134 + C150718 * C151303) * ae) /
        C150608;
    const double C8350 =
        (3 * C151012 + C150718 * C151144 + C151134 * ae + C151314 * C151060) /
        C150608;
    const double C9090 =
        (C150928 * (4 * C151144 + C150718 * C151314 + C151303 * ae)) / C150608;
    const double C8114 =
        (5 * (3 * C151136 + ae * C151143 + be * C151144 + C150718 * C151301) +
         ae * (4 * C151143 + C150718 * C151313 + C151303 * be) +
         be * (4 * C151144 + C150718 * C151314 + C151303 * ae) +
         C150718 *
             (4 * C151301 + ae * C151313 + be * C151314 +
              C150718 *
                  (3 * C151291 + ae * C151307 + be * C151308 +
                   C150718 *
                       (2 * C151279 + ae * C151296 + be * C151299 +
                        C150718 * (C151257 + ae * C151280 + be * C151283 +
                                   C150718 * (ae * C151260 + be * C151266 +
                                              C150718 * C150724 *
                                                  (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                  C150607)))))) /
        C150616;
    const double C9092 =
        (4 * (2 * C151329 + ae * C150928 * C151137 + be * C150928 * C151138 +
              C150718 * C151447) +
         ae * C150928 * C151313 + be * C150928 * C151314 +
         C150718 *
             (3 * C151447 + ae * C150928 * C151307 + be * C150928 * C151308 +
              C150718 * (2 * C151445 + ae * C150928 * C151296 +
                         be * C150928 * C151299 +
                         C150718 * (C151436 + ae * C150928 * C151280 +
                                    be * C150928 * C151283 +
                                    C150718 * (ae * C150928 * C151260 +
                                               be * C150928 * C151266 +
                                               C150718 * C150928 * C150724 *
                                                   (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                   C150607))))) /
        C150616;
    const double C8109 =
        (5 * (3 * C151011 + C150718 * C151143 + C151134 * be) +
         C150718 * (4 * C151143 + C150718 * C151313 + C151303 * be) +
         (4 * C151134 + C150718 * C151303) * be) /
        C150608;
    const double C8349 =
        (3 * C151011 + C150718 * C151143 + C151134 * be + C151313 * C151060) /
        C150608;
    const double C9089 =
        (C150928 * (4 * C151143 + C150718 * C151313 + C151303 * be)) / C150608;
    const double C151553 = C151496 + C151551;
    const double C151552 = C151486 + C151550;
    const double C67763 = C51200 * C8348;
    const double C94830 = C73659 * C8348;
    const double C111374 = C6307 * C8348;
    const double C144894 = C23384 * C8348;
    const double C95555 = C73659 * C9088;
    const double C112099 = C6307 * C9088;
    const double C17297 = C15196 * C152089;
    const double C33663 = C15196 * C23381;
    const double C103125 = C15196 * C51197;
    const double C136516 = C15196 * C152089;
    const double C34356 = C33866 * C23381;
    const double C103811 = C33866 * C51197;
    const double C8571 = C8568 - C8558;
    const double C75879 = C75876 - C75866;
    const double C9985 = C9982 - C9972;
    const double C17000 = C16998 - C16992;
    const double C42518 = C42510 - C42492;
    const double C67552 = C67550 - C67547;
    const double C77253 = C77250 - C77240;
    const double C8886 = C8883 - C8873;
    const double C42798 = C42796 - C42790;
    const double C76190 = C76187 - C76177;
    const double C84759 = C84757 - C84751;
    const double C95556 = C73652 * C9091;
    const double C112100 = C6300 * C9091;
    const double C67761 = C51200 * C8347;
    const double C94828 = C73659 * C8347;
    const double C111372 = C6307 * C8347;
    const double C144892 = C23384 * C8347;
    const double C95553 = C73659 * C9087;
    const double C112097 = C6307 * C9087;
    const double C67053 = C67045 + C67025;
    const double C96862 = C96859 + C96847;
    const double C113406 = C113403 + C113391;
    const double C119544 = C119543 + C119541;
    const double C144208 = C144206 + C144197;
    const double C73733 = C73721 - C73708;
    const double C73728 = C73716 - C73688;
    const double C73727 = C73715 - C73684;
    const double C73722 = C73710 - C73664;
    const double C74035 = C74023 - C74010;
    const double C74030 = C74018 - C73990;
    const double C74027 = C74015 - C73978;
    const double C74026 = C74014 - C73974;
    const double C74337 = C74325 - C74312;
    const double C74332 = C74320 - C74292;
    const double C74329 = C74317 - C74280;
    const double C74328 = C74316 - C74276;
    const double C74561 = C74558 - C74554;
    const double C74776 = C74773 - C74769;
    const double C75105 = C75099 - C75092;
    const double C75100 = C75094 - C75072;
    const double C75881 = C75878 - C75874;
    const double C76192 = C76189 - C76185;
    const double C77255 = C77252 - C77248;
    const double C77470 = C77467 - C77463;
    const double C93540 = C93534 - C93527;
    const double C93535 = C93529 - C93507;
    const double C94240 = C94237 - C94227;
    const double C94857 = C94848 - C94838;
    const double C94852 = C94843 - C94818;
    const double C94849 = C94840 - C94806;
    const double C95560 = C95557 - C95547;
    const double C96159 = C96153 - C96146;
    const double C96154 = C96148 - C96126;
    const double C96861 = C96858 - C96854;
    const double C73732 = C73720 - C73704;
    const double C73729 = C73717 - C73692;
    const double C73726 = C73714 - C73680;
    const double C73723 = C73711 - C73668;
    const double C74034 = C74022 - C74006;
    const double C74031 = C74019 - C73994;
    const double C74028 = C74016 - C73982;
    const double C74025 = C74013 - C73970;
    const double C74336 = C74324 - C74308;
    const double C74333 = C74321 - C74296;
    const double C74330 = C74318 - C74284;
    const double C74327 = C74315 - C74272;
    const double C74560 = C74557 - C74550;
    const double C74775 = C74772 - C74765;
    const double C75104 = C75098 - C75088;
    const double C75101 = C75095 - C75076;
    const double C75880 = C75877 - C75870;
    const double C76191 = C76188 - C76181;
    const double C77254 = C77251 - C77244;
    const double C77469 = C77466 - C77459;
    const double C93539 = C93533 - C93523;
    const double C93536 = C93530 - C93511;
    const double C94241 = C94238 - C94231;
    const double C94856 = C94847 - C94834;
    const double C94853 = C94844 - C94822;
    const double C94850 = C94841 - C94810;
    const double C95561 = C95558 - C95551;
    const double C96158 = C96152 - C96142;
    const double C96155 = C96149 - C96130;
    const double C96860 = C96857 - C96850;
    const double C142954 = C24067 * C152084;
    const double C142953 = C40787 * C152084;
    const double C145768 = C44632 * C152084;
    const double C145963 = C44906 * C152084;
    const double C142955 = C142952 * C152084;
    const double C144202 = C144192 * C152084;
    const double C145471 = C145461 * C152084;
    const double C145470 = C145460 * C152084;
    const double C146167 = C146158 * C152084;
    const double C65711 = C51883 * C152084;
    const double C65718 = C65710 * C152084;
    const double C68670 = C68661 * C152084;
    const double C68880 = C68871 * C152084;
    const double C68356 = C68339 * C152084;
    const double C65732 = C65731 * C152084;
    const double C67032 = C67005 * C152084;
    const double C69094 = C69085 * C152084;
    const double C68370 = C68369 * C152084;
    const double C17509 = C17507 * C6301;
    const double C119537 = C17507 * C152084;
    const double C136713 = C17507 * C152436;
    const double C144193 = C42529 + C42528;
    const double C67055 = C67051 + C67052;
    const double C151555 = C151553 + C151538;
    const double C151554 = C151552 + C151535;
    const double C8574 = C8571 + C8559;
    const double C75882 = C75879 + C75867;
    const double C9988 = C9985 + C9973;
    const double C17002 = C17000 + C16993;
    const double C42526 = C42518 + C42493;
    const double C67554 = C67552 + C67548;
    const double C77256 = C77253 + C77241;
    const double C8889 = C8886 + C8874;
    const double C42800 = C42798 + C42791;
    const double C76193 = C76190 + C76178;
    const double C84761 = C84759 + C84752;
    const double C67768 = C67761 - C67762;
    const double C94846 = C94828 - C94829;
    const double C111390 = C111372 - C111373;
    const double C144897 = C144892 - C144893;
    const double C95559 = C95553 - C95554;
    const double C112103 = C112097 - C112098;
    const double C119545 = C119544 * C152084;
    const double C73745 = C73733 + C73709;
    const double C73740 = C73728 + C73689;
    const double C73739 = C73727 + C73685;
    const double C73734 = C73722 + C73665;
    const double C74047 = C74035 + C74011;
    const double C74042 = C74030 + C73991;
    const double C74039 = C74027 + C73979;
    const double C74038 = C74026 + C73975;
    const double C74349 = C74337 + C74313;
    const double C74344 = C74332 + C74293;
    const double C74341 = C74329 + C74281;
    const double C74340 = C74328 + C74277;
    const double C74564 = C74561 + C74555;
    const double C74779 = C74776 + C74770;
    const double C75111 = C75105 + C75093;
    const double C75106 = C75100 + C75073;
    const double C75884 = C75881 + C75875;
    const double C76195 = C76192 + C76186;
    const double C77258 = C77255 + C77249;
    const double C77473 = C77470 + C77464;
    const double C93546 = C93540 + C93528;
    const double C93541 = C93535 + C93508;
    const double C94243 = C94240 + C94228;
    const double C94866 = C94857 + C94839;
    const double C94861 = C94852 + C94819;
    const double C94858 = C94849 + C94807;
    const double C95563 = C95560 + C95548;
    const double C96165 = C96159 + C96147;
    const double C96160 = C96154 + C96127;
    const double C96864 = C96861 + C96855;
    const double C73744 = C73732 + C73705;
    const double C73741 = C73729 + C73693;
    const double C73738 = C73726 + C73681;
    const double C73735 = C73723 + C73669;
    const double C74046 = C74034 + C74007;
    const double C74043 = C74031 + C73995;
    const double C74040 = C74028 + C73983;
    const double C74037 = C74025 + C73971;
    const double C74348 = C74336 + C74309;
    const double C74345 = C74333 + C74297;
    const double C74342 = C74330 + C74285;
    const double C74339 = C74327 + C74273;
    const double C74563 = C74560 + C74551;
    const double C74778 = C74775 + C74766;
    const double C75110 = C75104 + C75089;
    const double C75107 = C75101 + C75077;
    const double C75883 = C75880 + C75871;
    const double C76194 = C76191 + C76182;
    const double C77257 = C77254 + C77245;
    const double C77472 = C77469 + C77460;
    const double C93545 = C93539 + C93524;
    const double C93542 = C93536 + C93512;
    const double C94244 = C94241 + C94232;
    const double C94865 = C94856 + C94835;
    const double C94862 = C94853 + C94823;
    const double C94859 = C94850 + C94811;
    const double C95564 = C95561 + C95552;
    const double C96164 = C96158 + C96143;
    const double C96161 = C96155 + C96131;
    const double C96863 = C96860 + C96851;
    const double C144203 = C144193 * C152084;
    const double C67056 = C67055 * C152084;
    const double C60717 =
        (6 * (4 * C151186 + C150718 * C151248 + C151236 * ae) +
         C150718 * (5 * C151248 + C150718 * C151555 + C151541 * ae) +
         (5 * C151236 + C150718 * C151541) * ae) /
        C150608;
    const double C60867 =
        (4 * C151186 + C150718 * C151248 + C151236 * ae + C151555 * C151060) /
        C150608;
    const double C61325 =
        (C150928 * (5 * C151248 + C150718 * C151555 + C151541 * ae)) / C150608;
    const double C60718 =
        (6 * (4 * C151238 + ae * C151247 + be * C151248 + C150718 * C151543) +
         ae * (5 * C151247 + C150718 * C151554 + C151541 * be) +
         be * (5 * C151248 + C150718 * C151555 + C151541 * ae) +
         C150718 *
             (5 * C151543 + ae * C151554 + be * C151555 +
              C150718 *
                  (4 * C151533 + ae * C151548 + be * C151549 +
                   C150718 *
                       (3 * C151523 + ae * C151540 + be * C151542 +
                        C150718 *
                            (2 * C151513 + ae * C151524 + be * C151527 +
                             C150718 *
                                 (C150775 + ae * C151505 + be * C151508 +
                                  C150718 * (ae * C150886 + be * C150890 +
                                             C150718 *
                                                 (C150769 * C150770 +
                                                  C150721 * bs[9] *
                                                      std::pow(C150720, 9)) *
                                                 C150607))))))) /
        C150616;
    const double C61326 =
        (5 * (3 * C151430 + ae * C150928 * C151241 + be * C150928 * C151242 +
              C150718 * C151603) +
         ae * C150928 * C151554 + be * C150928 * C151555 +
         C150718 *
             (4 * C151603 + ae * C150928 * C151548 + be * C150928 * C151549 +
              C150718 *
                  (3 * C151601 + ae * C150928 * C151540 +
                   be * C150928 * C151542 +
                   C150718 *
                       (2 * C151599 + ae * C150928 * C151524 +
                        be * C150928 * C151527 +
                        C150718 * (C151586 + ae * C150928 * C151505 +
                                   be * C150928 * C151508 +
                                   C150718 * (ae * C150928 * C150886 +
                                              be * C150928 * C150890 +
                                              C150718 * C150928 *
                                                  (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                  C150607)))))) /
        C150616;
    const double C60716 =
        (6 * (4 * C151185 + C150718 * C151247 + C151236 * be) +
         C150718 * (5 * C151247 + C150718 * C151554 + C151541 * be) +
         (5 * C151236 + C150718 * C151541) * be) /
        C150608;
    const double C60866 =
        (4 * C151185 + C150718 * C151247 + C151236 * be + C151554 * C151060) /
        C150608;
    const double C61324 =
        (C150928 * (5 * C151247 + C150718 * C151554 + C151541 * be)) / C150608;
    const double C17501 = C17002 * C152089;
    const double C136714 = C17002 * C152089;
    const double C67772 = C67768 - C67763;
    const double C94855 = C94846 - C94830;
    const double C111399 = C111390 - C111374;
    const double C144899 = C144897 - C144894;
    const double C95562 = C95559 - C95555;
    const double C112106 = C112103 - C112099;
    const double C67776 = C67772 + C67764;
    const double C94864 = C94855 + C94831;
    const double C111408 = C111399 + C111375;
    const double C144901 = C144899 + C144895;
    const double C95565 = C95562 + C95556;
    const double C112109 = C112106 + C112100;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C152200 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C152207 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152159 * C3799) *
              C152118 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C152207 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C152200 -
           ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
            (C23755 + C23754) * C152522) *
               C152340 * C152159 * C3799) *
              C152127 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152159 * C152200 -
           ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
            C23762 * C152522) *
               C152340 * C152159 * C152207 +
           (C23763 * C152522 + (C23761 + C23760) * C152523 +
            (C23382 * C392 - C23383 * C371 - C23382 * C393 + C152474 * C407 +
             C23384 * C1858 - C23385 * C1857 - C23384 * C1859 +
             C152376 * C1860) *
                C23381) *
               C152340 * C152159 * C3799) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C152458 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152246) *
               C152200 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152246 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C152458) *
               C152207 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152522 +
             (C23754 + C23755) * C152523 + C23763 * C23381) *
                C152340 * C152458 -
            ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
             (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
              C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
              C23382 * C1700 + C152474 * C1716) *
                 C152522) *
                C152340 * C152246) *
               C3799) *
              C3455 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152246 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C152458) *
               C152200 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C152458 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152246) *
               C152207 +
           (((C25916 + C25915) * C152522 + (C25914 + C25913) * C152523 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C23381) *
                C152340 * C152246 -
            ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
             (C23755 + C23754) * C152522) *
                C152340 * C152458) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C152553 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C152549 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152159 * C152535 -
           ((C25595 + C25596) * C23381 + (C25597 + C25598) * C152523 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152522) *
               C152340 * C152159 * C152509) *
              C3455 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C152549 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C152553 -
           ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
            (C23755 + C23754) * C152522) *
               C152340 * C152159 * C152535 +
           ((C25598 + C25597) * C152522 + (C25596 + C25595) * C152523 +
            (C23382 * C1503 - C23383 * C1495 - C23382 * C1504 +
             C152474 * C1519 + C23384 * C1517 - C23385 * C1502 -
             C23384 * C1518 + C152376 * C1526) *
                C23381) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C3315 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C152204) *
              C152552 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C152204 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C3315) *
              C152545 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152159 * C3315 -
           ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
            C23762 * C152522) *
               C152340 * C152159 * C152204) *
              C152528 +
          ((C24262 * C152522 + (C24276 + C24275) * C152523 +
            (C23382 * C394 - C23383 * C372 - C23382 * C395 + C152474 * C408 +
             C23384 * C396 - C23385 * C373 - C23384 * C397 + C152376 * C409) *
                C23381) *
               C152340 * C152159 * C152204 -
           ((C23455 + C23456) * C23381 + (C23454 + C23453) * C152523 +
            C23458 * C152522) *
               C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C152547 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152532 +
            ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
              C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
              C152376 * C1712) *
                 C152522 +
             (C24058 + C24059) * C152523 + C24067 * C23381) *
                C152340 * C152502) *
               C3315 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152532 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C152547 -
            ((C26983 + C26984) * C23381 + (C26985 + C26986) * C152523 +
             (C23384 * C1701 - C23385 * C1681 - C23384 * C1702 +
              C152376 * C1717 + C23382 * C1691 - C23383 * C1676 -
              C23382 * C1692 + C152474 * C1712) *
                 C152522) *
                C152340 * C152502) *
               C152204) *
              C3455 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152532 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C152547 -
            ((C24064 + C24065) * C23381 + (C24061 + C24060) * C152523 +
             (C24059 + C24058) * C152522) *
                C152340 * C152502) *
               C3315 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C152547 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152532 +
            ((C26986 + C26985) * C152522 + (C26984 + C26983) * C152523 +
             (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
              C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
              C23384 * C1708 + C152376 * C1720) *
                 C23381) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C152458 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152246) *
               C3315 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152246 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C152458) *
               C152204) *
              C152118 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152246 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C152458) *
               C3315 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C152458 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          (((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
                C152340 * C152458 -
            ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
             C24066 * C152522) *
                C152340 * C152246) *
               C3315 +
           ((C24818 * C152522 + (C24817 + C24816) * C152523 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C23381) *
                C152340 * C152246 -
            ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
             C23762 * C152522) *
                C152340 * C152458) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C3315 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C152204) *
              C152552 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C152204 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C3315) *
              C152545 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152159 * C3315 -
           ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
            C23762 * C152522) *
               C152340 * C152159 * C152204) *
              C152528 +
          ((C24262 * C152522 + (C24276 + C24275) * C152523 +
            (C23382 * C394 - C23383 * C372 - C23382 * C395 + C152474 * C408 +
             C23384 * C396 - C23385 * C373 - C23384 * C397 + C152376 * C409) *
                C23381) *
               C152340 * C152159 * C152204 -
           ((C23455 + C23456) * C23381 + (C23454 + C23453) * C152523 +
            C23458 * C152522) *
               C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C152553 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C152549 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152159 * C152535 -
           ((C25595 + C25596) * C23381 + (C25597 + C25598) * C152523 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152522) *
               C152340 * C152159 * C152509) *
              C3455 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C152549 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C152553 -
           ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
            (C23755 + C23754) * C152522) *
               C152340 * C152159 * C152535 +
           ((C25598 + C25597) * C152522 + (C25596 + C25595) * C152523 +
            (C23382 * C1503 - C23383 * C1495 - C23382 * C1504 +
             C152474 * C1519 + C23384 * C1517 - C23385 * C1502 -
             C23384 * C1518 + C152376 * C1526) *
                C23381) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C4321 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152246) *
               C152200 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152246 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C4321) *
               C152207 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152522 +
             (C23754 + C23755) * C152523 + C23763 * C23381) *
                C152340 * C4321 -
            ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
             (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
              C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
              C23382 * C1700 + C152474 * C1716) *
                 C152522) *
                C152340 * C152246) *
               C3799) *
              C152443 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152246 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C4321) *
               C152200 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C4321 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152246) *
               C152207 +
           (((C25916 + C25915) * C152522 + (C25914 + C25913) * C152523 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C23381) *
                C152340 * C152246 -
            ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
             (C23755 + C23754) * C152522) *
                C152340 * C4321) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152242 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152249 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C4993) *
              C152200 +
          (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
             C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
             C23384 * C1700 + C152376 * C1716) *
                C152522 +
            (C24812 + C24813) * C152523 + C24818 * C23381) *
               C152340 * C152249 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152242 -
           ((C26983 + C26984) * C23381 + (C26985 + C26986) * C152523 +
            (C23384 * C1701 - C23385 * C1681 - C23384 * C1702 +
             C152376 * C1717 + C23382 * C1691 - C23383 * C1676 -
             C23382 * C1692 + C152474 * C1712) *
                C152522) *
               C152340 * C4993) *
              C152207 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152242 -
           ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
            (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
             C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
             C23382 * C1700 + C152474 * C1716) *
                C152522) *
               C152340 * C152249 +
           ((C23382 * C1701 - C23383 * C1681 - C23382 * C1702 +
             C152474 * C1717 + C23384 * C8341 - C23385 * C8334 -
             C23384 * C8342 + C152376 * C8352) *
                C152522 +
            (C23382 * C1703 - C23383 * C1682 - C23382 * C1704 +
             C152474 * C1718 + C23384 * C8339 - C23385 * C8333 -
             C23384 * C8340 + C152376 * C8351) *
                C152523 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C23381) *
               C152340 * C4993) *
              C3799) *
         C152113) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C4321 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152246) *
              C152553 +
          (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
             C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
             C23384 * C1700 + C152376 * C1716) *
                C152522 +
            (C24812 + C24813) * C152523 + C24818 * C23381) *
               C152340 * C152246 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C4321) *
              C152549 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C4321 -
           ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
            (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
             C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
             C23382 * C1700 + C152474 * C1716) *
                C152522) *
               C152340 * C152246) *
              C152535 +
          (((C23382 * C2235 - C23383 * C2231 - C23382 * C2236 +
             C152474 * C2243 + C23384 * C8345 - C23385 * C8336 -
             C23384 * C8346 + C152376 * C8354) *
                C152522 +
            (C23382 * C2237 - C23383 * C2232 - C23382 * C2238 +
             C152474 * C2244 + C23384 * C8343 - C23385 * C8335 -
             C23384 * C8344 + C152376 * C8353) *
                C152523 +
            (C23382 * C2239 - C23383 * C2233 - C23382 * C2240 +
             C152474 * C2245 + C23384 * C8867 - C23385 * C8866 -
             C23384 * C8868 + C152376 * C8869) *
                C23381) *
               C152340 * C152246 -
           ((C25595 + C25596) * C23381 + (C25597 + C25598) * C152523 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152522) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C4321 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152246) *
               C3315 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152246 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152246 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C4321) *
               C3315 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C4321 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          (((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
                C152340 * C4321 -
            ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
             C24066 * C152522) *
                C152340 * C152246) *
               C3315 +
           ((C24818 * C152522 + (C24817 + C24816) * C152523 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C23381) *
                C152340 * C152246 -
            ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
             C23762 * C152522) *
                C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152554 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152551 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C152538 -
           ((C27205 + C27206) * C23381 + (C27207 + C27208) * C152523 +
            (C23384 * C3173 - C23385 * C3169 - C23384 * C3174 +
             C152376 * C3181 + C23382 * C2643 - C23383 * C2632 -
             C23382 * C2644 + C152474 * C2656) *
                C152522) *
               C152340 * C152515) *
              C3315 +
          (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
             C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
             C23384 * C1700 + C152376 * C1716) *
                C152522 +
            (C24812 + C24813) * C152523 + C24818 * C23381) *
               C152340 * C152551 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152554 -
           ((C26983 + C26984) * C23381 + (C26985 + C26986) * C152523 +
            (C23384 * C1701 - C23385 * C1681 - C23384 * C1702 +
             C152376 * C1717 + C23382 * C1691 - C23383 * C1676 -
             C23382 * C1692 + C152474 * C1712) *
                C152522) *
               C152340 * C152538 +
           ((C23382 * C3173 - C23383 * C3169 - C23382 * C3174 +
             C152474 * C3181 + C23384 * C9659 - C23385 * C9652 -
             C23384 * C9660 + C152376 * C9670) *
                C152522 +
            (C23382 * C3175 - C23383 * C3170 - C23382 * C3176 +
             C152474 * C3182 + C23384 * C9657 - C23385 * C9651 -
             C23384 * C9658 + C152376 * C9669) *
                C152523 +
            (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
             C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
             C23384 * C10186 + C152376 * C10187) *
                C23381) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C152242 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152249 +
            ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
              C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
              C152376 * C1712) *
                 C152522 +
             (C24058 + C24059) * C152523 + C24067 * C23381) *
                C152340 * C4993) *
               C3315 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152249 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C152242 -
            ((C26983 + C26984) * C23381 + (C26985 + C26986) * C152523 +
             (C23384 * C1701 - C23385 * C1681 - C23384 * C1702 +
              C152376 * C1717 + C23382 * C1691 - C23383 * C1676 -
              C23382 * C1692 + C152474 * C1712) *
                 C152522) *
                C152340 * C4993) *
               C152204) *
              C152443 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152249 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C152242 -
            ((C24064 + C24065) * C23381 + (C24061 + C24060) * C152523 +
             (C24059 + C24058) * C152522) *
                C152340 * C4993) *
               C3315 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C152242 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152249 +
            ((C26986 + C26985) * C152522 + (C26984 + C26983) * C152523 +
             (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
              C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
              C23384 * C1708 + C152376 * C1720) *
                 C23381) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C4321 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152246) *
               C3315 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152246 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152246 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C4321) *
               C3315 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C4321 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          (((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
                C152340 * C4321 -
            ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
             C24066 * C152522) *
                C152340 * C152246) *
               C3315 +
           ((C24818 * C152522 + (C24817 + C24816) * C152523 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C23381) *
                C152340 * C152246 -
            ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
             C23762 * C152522) *
                C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C4321 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152246) *
              C152553 +
          (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
             C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
             C23384 * C1700 + C152376 * C1716) *
                C152522 +
            (C24812 + C24813) * C152523 + C24818 * C23381) *
               C152340 * C152246 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C4321) *
              C152549 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C4321 -
           ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
            (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
             C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
             C23382 * C1700 + C152474 * C1716) *
                C152522) *
               C152340 * C152246) *
              C152535 +
          (((C23382 * C2235 - C23383 * C2231 - C23382 * C2236 +
             C152474 * C2243 + C23384 * C8345 - C23385 * C8336 -
             C23384 * C8346 + C152376 * C8354) *
                C152522 +
            (C23382 * C2237 - C23383 * C2232 - C23382 * C2238 +
             C152474 * C2244 + C23384 * C8343 - C23385 * C8335 -
             C23384 * C8344 + C152376 * C8353) *
                C152523 +
            (C23382 * C2239 - C23383 * C2233 - C23382 * C2240 +
             C152474 * C2245 + C23384 * C8867 - C23385 * C8866 -
             C23384 * C8868 + C152376 * C8869) *
                C23381) *
               C152340 * C152246 -
           ((C25595 + C25596) * C23381 + (C25597 + C25598) * C152523 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152522) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C1851 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C1852 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152159 * C1853 -
           ((C25595 + C25596) * C23381 + (C25597 + C25598) * C152523 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152522) *
               C152340 * C152159 * C152509) *
              C152443 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C1852 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C1851 -
           ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
            (C23755 + C23754) * C152522) *
               C152340 * C152159 * C1853 +
           ((C25598 + C25597) * C152522 + (C25596 + C25595) * C152523 +
            (C23382 * C1503 - C23383 * C1495 - C23382 * C1504 +
             C152474 * C1519 + C23384 * C1517 - C23385 * C1502 -
             C23384 * C1518 + C152376 * C1526) *
                C23381) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C152457 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C152204) *
              C851 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C152204 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C152457) *
              C852 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152159 * C152457 -
           ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
            C23762 * C152522) *
               C152340 * C152159 * C152204) *
              C853 +
          ((C24262 * C152522 + (C24276 + C24275) * C152523 +
            (C23382 * C394 - C23383 * C372 - C23382 * C395 + C152474 * C408 +
             C23384 * C396 - C23385 * C373 - C23384 * C397 + C152376 * C409) *
                C23381) *
               C152340 * C152159 * C152204 -
           ((C23455 + C23456) * C23381 + (C23454 + C23453) * C152523 +
            C23458 * C152522) *
               C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C2393 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C2394 +
            ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
              C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
              C152376 * C1712) *
                 C152522 +
             (C24058 + C24059) * C152523 + C24067 * C23381) *
                C152340 * C152502) *
               C152457 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C2394 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C2393 -
            ((C26983 + C26984) * C23381 + (C26985 + C26986) * C152523 +
             (C23384 * C1701 - C23385 * C1681 - C23384 * C1702 +
              C152376 * C1717 + C23382 * C1691 - C23383 * C1676 -
              C23382 * C1692 + C152474 * C1712) *
                 C152522) *
                C152340 * C152502) *
               C152204) *
              C152443 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C2394 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C2393 -
            ((C24064 + C24065) * C23381 + (C24061 + C24060) * C152523 +
             (C24059 + C24058) * C152522) *
                C152340 * C152502) *
               C152457 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C2393 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C2394 +
            ((C26986 + C26985) * C152522 + (C26984 + C26983) * C152523 +
             (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
              C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
              C23384 * C1708 + C152376 * C1720) *
                 C23381) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152458 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152246) *
              C1851 +
          (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
             C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
             C23384 * C1700 + C152376 * C1716) *
                C152522 +
            (C24812 + C24813) * C152523 + C24818 * C23381) *
               C152340 * C152246 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152458) *
              C1852 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152458 -
           ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
            (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
             C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
             C23382 * C1700 + C152474 * C1716) *
                C152522) *
               C152340 * C152246) *
              C1853 +
          (((C23382 * C2235 - C23383 * C2231 - C23382 * C2236 +
             C152474 * C2243 + C23384 * C8345 - C23385 * C8336 -
             C23384 * C8346 + C152376 * C8354) *
                C152522 +
            (C23382 * C2237 - C23383 * C2232 - C23382 * C2238 +
             C152474 * C2244 + C23384 * C8343 - C23385 * C8335 -
             C23384 * C8344 + C152376 * C8353) *
                C152523 +
            (C23382 * C2239 - C23383 * C2233 - C23382 * C2240 +
             C152474 * C2245 + C23384 * C8867 - C23385 * C8866 -
             C23384 * C8868 + C152376 * C8869) *
                C23381) *
               C152340 * C152246 -
           ((C25595 + C25596) * C23381 + (C25597 + C25598) * C152523 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152522) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C152458 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152246) *
               C152457 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152246 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C152458) *
               C152204) *
              C359 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152246 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C152458) *
               C152457 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C152458 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152246) *
               C152204) *
              C360 +
          (((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
                C152340 * C152458 -
            ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
             C24066 * C152522) *
                C152340 * C152246) *
               C152457 +
           ((C24818 * C152522 + (C24817 + C24816) * C152523 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C23381) *
                C152340 * C152246 -
            ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
             C23762 * C152522) *
                C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C3010 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C3011 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C3012 -
           ((C27205 + C27206) * C23381 + (C27207 + C27208) * C152523 +
            (C23384 * C3173 - C23385 * C3169 - C23384 * C3174 +
             C152376 * C3181 + C23382 * C2643 - C23383 * C2632 -
             C23382 * C2644 + C152474 * C2656) *
                C152522) *
               C152340 * C152515) *
              C152457 +
          (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
             C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
             C23384 * C1700 + C152376 * C1716) *
                C152522 +
            (C24812 + C24813) * C152523 + C24818 * C23381) *
               C152340 * C3011 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C3010 -
           ((C26983 + C26984) * C23381 + (C26985 + C26986) * C152523 +
            (C23384 * C1701 - C23385 * C1681 - C23384 * C1702 +
             C152376 * C1717 + C23382 * C1691 - C23383 * C1676 -
             C23382 * C1692 + C152474 * C1712) *
                C152522) *
               C152340 * C3012 +
           ((C23382 * C3173 - C23383 * C3169 - C23382 * C3174 +
             C152474 * C3181 + C23384 * C9659 - C23385 * C9652 -
             C23384 * C9660 + C152376 * C9670) *
                C152522 +
            (C23382 * C3175 - C23383 * C3170 - C23382 * C3176 +
             C152474 * C3182 + C23384 * C9657 - C23385 * C9651 -
             C23384 * C9658 + C152376 * C9669) *
                C152523 +
            (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
             C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
             C23384 * C10186 + C152376 * C10187) *
                C23381) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
                C23384 * C380 - C23385 * C365 - C23384 * C381 +
                C152376 * C401) *
                   C152522 +
               (C23447 + C23448) * C152523 + C23457 * C23381) *
                  C152340 * C152159 * C152141 * C129 -
              (C23458 * C23381 + (C23450 + C23449) * C152523 +
               (C23448 + C23447) * C152522) *
                  C152340 * C152159 * C152141 * C130 +
              (C23457 * C152522 + (C23452 + C23451) * C152523 +
               C23459 * C23381) *
                  C152340 * C152159 * C152141 * C131 -
              ((C23455 + C23456) * C23381 + (C23454 + C23453) * C152523 +
               C23458 * C152522) *
                  C152340 * C152159 * C152141 * C132 +
              (C23459 * C152522 + (C23456 + C23455) * C152523 +
               (C23382 * C156 - C23383 * C142 - C23382 * C157 + C152474 * C166 +
                C23384 * C856 - C23385 * C855 - C23384 * C857 +
                C152376 * C858) *
                   C23381) *
                  C152340 * C152159 * C152141 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23382 * C144 - C23383 * C136 - C23382 * C145 +
                 C152474 * C160 + C23384 * C380 - C23385 * C365 -
                 C23384 * C381 + C152376 * C401) *
                    C152522 +
                (C23447 + C23448) * C152523 + C23457 * C23381) *
                   C152340 * C152159 * C152546 -
               (C23762 * C23381 + (C23752 + C23753) * C152523 +
                (C23384 * C382 - C23385 * C366 - C23384 * C383 +
                 C152376 * C402 + C23382 * C380 - C23383 * C365 -
                 C23382 * C381 + C152474 * C401) *
                    C152522) *
                   C152340 * C152159 * C152530 +
               ((C23382 * C382 - C23383 * C366 - C23382 * C383 +
                 C152474 * C402 + C23384 * C1509 - C23385 * C1498 -
                 C23384 * C1510 + C152376 * C1522) *
                    C152522 +
                (C23754 + C23755) * C152523 + C23763 * C23381) *
                   C152340 * C152159 * C152499) *
                  C359 +
              (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
                (C23758 + C23759) * C23381) *
                   C152340 * C152159 * C152530 -
               (C23458 * C23381 + (C23450 + C23449) * C152523 +
                (C23448 + C23447) * C152522) *
                   C152340 * C152159 * C152546 -
               ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
                (C23755 + C23754) * C152522) *
                   C152340 * C152159 * C152499) *
                  C360 +
              ((C23457 * C152522 + (C23452 + C23451) * C152523 +
                C23459 * C23381) *
                   C152340 * C152159 * C152546 -
               ((C23384 * C392 - C23385 * C371 - C23384 * C393 +
                 C152376 * C407 + C23382 * C390 - C23383 * C370 -
                 C23382 * C391 + C152474 * C406) *
                    C23381 +
                (C23759 + C23758) * C152523 + C23762 * C152522) *
                   C152340 * C152159 * C152530 +
               (C23763 * C152522 + (C23761 + C23760) * C152523 +
                (C23382 * C392 - C23383 * C371 - C23382 * C393 +
                 C152474 * C407 + C23384 * C1858 - C23385 * C1857 -
                 C23384 * C1859 + C152376 * C1860) *
                    C23381) *
                   C152340 * C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152547 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152532 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C152502) *
              C152141 * C359 +
          (((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
            (C24062 + C24063) * C23381) *
               C152340 * C152532 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152547 -
           ((C24064 + C24065) * C23381 + (C24061 + C24060) * C152523 +
            (C24059 + C24058) * C152522) *
               C152340 * C152502) *
              C152141 * C360 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152547 -
           ((C23384 * C1217 - C23385 * C1207 - C23384 * C1218 +
             C152376 * C1225 + C23382 * C643 - C23383 * C623 - C23382 * C644 +
             C152474 * C659) *
                C23381 +
            (C24063 + C24062) * C152523 + C24066 * C152522) *
               C152340 * C152532 +
           (C24067 * C152522 + (C24065 + C24064) * C152523 +
            (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
             C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
             C152376 * C2858) *
                C23381) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C1401 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C1402 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C1402 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C1401 -
           ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
            (C23755 + C23754) * C152522) *
               C152340 * C152159 * C152499) *
              C152526 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152159 * C1401 -
           ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
            C23762 * C152522) *
               C152340 * C152159 * C1402 +
           (C23763 * C152522 + (C23761 + C23760) * C152523 +
            (C23382 * C392 - C23383 * C371 - C23382 * C393 + C152474 * C407 +
             C23384 * C1858 - C23385 * C1857 - C23384 * C1859 +
             C152376 * C1860) *
                C23381) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152522 +
           (C23447 + C23448) * C152523 + C23457 * C23381) *
              C152340 * C152159 * C1489 -
          (C23762 * C23381 + (C23752 + C23753) * C152523 +
           (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
            C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
               C152522) *
              C152340 * C152159 * C1490 +
          ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
            C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
            C152376 * C1522) *
               C152522 +
           (C23754 + C23755) * C152523 + C23763 * C23381) *
              C152340 * C152159 * C1491 -
          ((C23384 * C1515 - C23385 * C1501 - C23384 * C1516 + C152376 * C1525 +
            C23382 * C1505 - C23383 * C1496 - C23382 * C1506 +
            C152474 * C1520) *
               C23381 +
           (C23384 * C1513 - C23385 * C1500 - C23384 * C1514 + C152376 * C1524 +
            C23382 * C1507 - C23383 * C1497 - C23382 * C1508 +
            C152474 * C1521) *
               C152523 +
           (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 + C152376 * C1523 +
            C23382 * C1509 - C23383 * C1498 - C23382 * C1510 +
            C152474 * C1522) *
               C152522) *
              C152340 * C152159 * C1492 +
          ((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 + C152474 * C1523 +
            C23384 * C8105 - C23385 * C8100 - C23384 * C8106 +
            C152376 * C8112) *
               C152522 +
           (C23382 * C1513 - C23383 * C1500 - C23382 * C1514 + C152474 * C1524 +
            C23384 * C8103 - C23385 * C8099 - C23384 * C8104 +
            C152376 * C8111) *
               C152523 +
           (C23382 * C1515 - C23383 * C1501 - C23382 * C1516 + C152474 * C1525 +
            C23384 * C8552 - C23385 * C8551 - C23384 * C8553 +
            C152376 * C8554) *
               C23381) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152547 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152532 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C152502) *
              C1401 +
          (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
             C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
             C23384 * C1700 + C152376 * C1716) *
                C152522 +
            (C24812 + C24813) * C152523 + C24818 * C23381) *
               C152340 * C152532 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152547 -
           ((C23384 * C1705 - C23385 * C1683 - C23384 * C1706 +
             C152376 * C1719 + C23382 * C1687 - C23383 * C1674 -
             C23382 * C1688 + C152474 * C1710) *
                C23381 +
            (C23384 * C1703 - C23385 * C1682 - C23384 * C1704 +
             C152376 * C1718 + C23382 * C1689 - C23383 * C1675 -
             C23382 * C1690 + C152474 * C1711) *
                C152523 +
            (C23384 * C1701 - C23385 * C1681 - C23384 * C1702 +
             C152376 * C1717 + C23382 * C1691 - C23383 * C1676 -
             C23382 * C1692 + C152474 * C1712) *
                C152522) *
               C152340 * C152502) *
              C1402 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152547 -
           ((C23384 * C2239 - C23385 * C2233 - C23384 * C2240 +
             C152376 * C2245 + C23382 * C1695 - C23383 * C1678 -
             C23382 * C1696 + C152474 * C1714) *
                C23381 +
            (C23384 * C2237 - C23385 * C2232 - C23384 * C2238 +
             C152376 * C2244 + C23382 * C1697 - C23383 * C1679 -
             C23382 * C1698 + C152474 * C1715) *
                C152523 +
            (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
             C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
             C23382 * C1700 + C152474 * C1716) *
                C152522) *
               C152340 * C152532 +
           ((C23382 * C1701 - C23383 * C1681 - C23382 * C1702 +
             C152474 * C1717 + C23384 * C8341 - C23385 * C8334 -
             C23384 * C8342 + C152376 * C8352) *
                C152522 +
            (C23382 * C1703 - C23383 * C1682 - C23382 * C1704 +
             C152474 * C1718 + C23384 * C8339 - C23385 * C8333 -
             C23384 * C8340 + C152376 * C8351) *
                C152523 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C23381) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C2393 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C2394 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C152502) *
              C152141 * C152543 +
          (((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
            C24471 * C23381) *
               C152340 * C2394 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C2393 -
           ((C24064 + C24065) * C23381 + (C24061 + C24060) * C152523 +
            (C24059 + C24058) * C152522) *
               C152340 * C152502) *
              C152141 * C152526 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C2393 -
           ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
            C24066 * C152522) *
               C152340 * C2394 +
           (C24067 * C152522 + (C24065 + C24064) * C152523 +
            (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
             C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
             C152376 * C2858) *
                C23381) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C2393 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C2394 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C152502) *
              C152546 +
          (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
             C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
             C23384 * C1700 + C152376 * C1716) *
                C152522 +
            (C24812 + C24813) * C152523 + C24818 * C23381) *
               C152340 * C2394 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C2393 -
           ((C23384 * C1705 - C23385 * C1683 - C23384 * C1706 +
             C152376 * C1719 + C23382 * C1687 - C23383 * C1674 -
             C23382 * C1688 + C152474 * C1710) *
                C23381 +
            (C23384 * C1703 - C23385 * C1682 - C23384 * C1704 +
             C152376 * C1718 + C23382 * C1689 - C23383 * C1675 -
             C23382 * C1690 + C152474 * C1711) *
                C152523 +
            (C23384 * C1701 - C23385 * C1681 - C23384 * C1702 +
             C152376 * C1717 + C23382 * C1691 - C23383 * C1676 -
             C23382 * C1692 + C152474 * C1712) *
                C152522) *
               C152340 * C152502) *
              C152530 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C2393 -
           ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
            (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
             C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
             C23382 * C1700 + C152474 * C1716) *
                C152522) *
               C152340 * C2394 +
           ((C23382 * C1701 - C23383 * C1681 - C23382 * C1702 +
             C152474 * C1717 + C23384 * C8341 - C23385 * C8334 -
             C23384 * C8342 + C152376 * C8352) *
                C152522 +
            (C23382 * C1703 - C23383 * C1682 - C23382 * C1704 +
             C152474 * C1718 + C23384 * C8339 - C23385 * C8333 -
             C23384 * C8340 + C152376 * C8351) *
                C152523 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C23381) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152522 +
           (C23447 + C23448) * C152523 + C23457 * C23381) *
              C152340 * C2624 -
          (C24066 * C23381 + (C24056 + C24057) * C152523 +
           (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 + C152376 * C1221 +
            C23382 * C633 - C23383 * C618 - C23382 * C634 + C152474 * C654) *
               C152522) *
              C152340 * C2625 +
          ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
            C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
            C152376 * C1712) *
               C152522 +
           (C24058 + C24059) * C152523 + C24067 * C23381) *
              C152340 * C2626 -
          ((C23384 * C3177 - C23385 * C3171 - C23384 * C3178 + C152376 * C3183 +
            C23382 * C2639 - C23383 * C2630 - C23382 * C2640 +
            C152474 * C2654) *
               C23381 +
           (C23384 * C3175 - C23385 * C3170 - C23384 * C3176 + C152376 * C3182 +
            C23382 * C2641 - C23383 * C2631 - C23382 * C2642 +
            C152474 * C2655) *
               C152523 +
           (C23384 * C3173 - C23385 * C3169 - C23384 * C3174 + C152376 * C3181 +
            C23382 * C2643 - C23383 * C2632 - C23382 * C2644 +
            C152474 * C2656) *
               C152522) *
              C152340 * C2627 +
          ((C23382 * C2645 - C23383 * C2633 - C23382 * C2646 + C152474 * C2657 +
            C23384 * C9661 - C23385 * C9653 - C23384 * C9662 +
            C152376 * C9671) *
               C152522 +
           (C23382 * C2647 - C23383 * C2634 - C23382 * C2648 + C152474 * C2658 +
            C23384 * C9665 - C23385 * C9655 - C23384 * C9666 +
            C152376 * C9673) *
               C152523 +
           (C23382 * C2649 - C23383 * C2635 - C23382 * C2650 + C152474 * C2659 +
            C23384 * C18401 - C23385 * C18400 - C23384 * C18402 +
            C152376 * C18403) *
               C23381) *
              C152340 * C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C152458 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152246) *
               C1401 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152246 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C152458) *
               C1402 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152522 +
             (C23754 + C23755) * C152523 + C23763 * C23381) *
                C152340 * C152458 -
            ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
             (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
              C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
              C23382 * C1700 + C152474 * C1716) *
                 C152522) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152246 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C152458) *
               C1401 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C152458 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152246) *
               C1402 +
           (((C25916 + C25915) * C152522 + (C25914 + C25913) * C152523 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C23381) *
                C152340 * C152246 -
            ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
             (C23755 + C23754) * C152522) *
                C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152458 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152246) *
              C152141 * C851 +
          (((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
            C24471 * C23381) *
               C152340 * C152246 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152458) *
              C152141 * C852 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152458 -
           ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
            C24066 * C152522) *
               C152340 * C152246) *
              C152141 * C853 +
          ((C24471 * C152522 + (C24485 + C24484) * C152523 +
            (C23382 * C647 - C23383 * C625 - C23382 * C648 + C152474 * C661 +
             C23384 * C1219 - C23385 * C1208 - C23384 * C1220 +
             C152376 * C1226) *
                C23381) *
               C152340 * C152246 -
           ((C23455 + C23456) * C23381 + (C23454 + C23453) * C152523 +
            C23458 * C152522) *
               C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C3010 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C3011 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C3012 -
           ((C27205 + C27206) * C23381 + (C27207 + C27208) * C152523 +
            (C23384 * C3173 - C23385 * C3169 - C23384 * C3174 +
             C152376 * C3181 + C23382 * C2643 - C23383 * C2632 -
             C23382 * C2644 + C152474 * C2656) *
                C152522) *
               C152340 * C152515) *
              C152141 * C152443 +
          (((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
            C24471 * C23381) *
               C152340 * C3011 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C3010 -
           ((C24064 + C24065) * C23381 + (C24061 + C24060) * C152523 +
            (C24059 + C24058) * C152522) *
               C152340 * C3012 +
           ((C27208 + C27207) * C152522 + (C27206 + C27205) * C152523 +
            (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
             C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
             C23384 * C3180 + C152376 * C3184) *
                C23381) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C152546 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C152530 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            (C23758 + C23759) * C23381) *
               C152340 * C152159 * C152530 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C152546 -
           ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
            (C23755 + C23754) * C152522) *
               C152340 * C152159 * C152499) *
              C360 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152159 * C152546 -
           ((C23384 * C392 - C23385 * C371 - C23384 * C393 + C152376 * C407 +
             C23382 * C390 - C23383 * C370 - C23382 * C391 + C152474 * C406) *
                C23381 +
            (C23759 + C23758) * C152523 + C23762 * C152522) *
               C152340 * C152159 * C152530 +
           (C23763 * C152522 + (C23761 + C23760) * C152523 +
            (C23382 * C392 - C23383 * C371 - C23382 * C393 + C152474 * C407 +
             C23384 * C1858 - C23385 * C1857 - C23384 * C1859 +
             C152376 * C1860) *
                C23381) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152522 +
           (C23447 + C23448) * C152523 + C23457 * C23381) *
              C152340 * C152159 * C152141 * C129 -
          (C23458 * C23381 + (C23450 + C23449) * C152523 +
           (C23448 + C23447) * C152522) *
              C152340 * C152159 * C152141 * C130 +
          (C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
              C152340 * C152159 * C152141 * C131 -
          ((C23455 + C23456) * C23381 + (C23454 + C23453) * C152523 +
           C23458 * C152522) *
              C152340 * C152159 * C152141 * C132 +
          (C23459 * C152522 + (C23456 + C23455) * C152523 +
           (C23382 * C156 - C23383 * C142 - C23382 * C157 + C152474 * C166 +
            C23384 * C856 - C23385 * C855 - C23384 * C857 + C152376 * C858) *
               C23381) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C1401 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C1402 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C1402 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C1401 -
           ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
            (C23755 + C23754) * C152522) *
               C152340 * C152159 * C152499) *
              C152526 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152159 * C1401 -
           ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
            C23762 * C152522) *
               C152340 * C152159 * C1402 +
           (C23763 * C152522 + (C23761 + C23760) * C152523 +
            (C23382 * C392 - C23383 * C371 - C23382 * C393 + C152474 * C407 +
             C23384 * C1858 - C23385 * C1857 - C23384 * C1859 +
             C152376 * C1860) *
                C23381) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152522 +
           (C23447 + C23448) * C152523 + C23457 * C23381) *
              C152340 * C152159 * C1489 -
          (C23762 * C23381 + (C23752 + C23753) * C152523 +
           (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
            C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
               C152522) *
              C152340 * C152159 * C1490 +
          ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
            C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
            C152376 * C1522) *
               C152522 +
           (C23754 + C23755) * C152523 + C23763 * C23381) *
              C152340 * C152159 * C1491 -
          ((C23384 * C1515 - C23385 * C1501 - C23384 * C1516 + C152376 * C1525 +
            C23382 * C1505 - C23383 * C1496 - C23382 * C1506 +
            C152474 * C1520) *
               C23381 +
           (C23384 * C1513 - C23385 * C1500 - C23384 * C1514 + C152376 * C1524 +
            C23382 * C1507 - C23383 * C1497 - C23382 * C1508 +
            C152474 * C1521) *
               C152523 +
           (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 + C152376 * C1523 +
            C23382 * C1509 - C23383 * C1498 - C23382 * C1510 +
            C152474 * C1522) *
               C152522) *
              C152340 * C152159 * C1492 +
          ((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 + C152474 * C1523 +
            C23384 * C8105 - C23385 * C8100 - C23384 * C8106 +
            C152376 * C8112) *
               C152522 +
           (C23382 * C1513 - C23383 * C1500 - C23382 * C1514 + C152474 * C1524 +
            C23384 * C8103 - C23385 * C8099 - C23384 * C8104 +
            C152376 * C8111) *
               C152523 +
           (C23382 * C1515 - C23383 * C1501 - C23382 * C1516 + C152474 * C1525 +
            C23384 * C8552 - C23385 * C8551 - C23384 * C8553 +
            C152376 * C8554) *
               C23381) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C2393 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C2394 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C152502) *
              C152141 * C152543 +
          (((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
            C24471 * C23381) *
               C152340 * C2394 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C2393 -
           ((C24064 + C24065) * C23381 + (C24061 + C24060) * C152523 +
            (C24059 + C24058) * C152522) *
               C152340 * C152502) *
              C152141 * C152526 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C2393 -
           ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
            C24066 * C152522) *
               C152340 * C2394 +
           (C24067 * C152522 + (C24065 + C24064) * C152523 +
            (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
             C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
             C152376 * C2858) *
                C23381) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C2393 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C2394 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C152502) *
              C152546 +
          (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
             C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
             C23384 * C1700 + C152376 * C1716) *
                C152522 +
            (C24812 + C24813) * C152523 + C24818 * C23381) *
               C152340 * C2394 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C2393 -
           ((C23384 * C1705 - C23385 * C1683 - C23384 * C1706 +
             C152376 * C1719 + C23382 * C1687 - C23383 * C1674 -
             C23382 * C1688 + C152474 * C1710) *
                C23381 +
            (C23384 * C1703 - C23385 * C1682 - C23384 * C1704 +
             C152376 * C1718 + C23382 * C1689 - C23383 * C1675 -
             C23382 * C1690 + C152474 * C1711) *
                C152523 +
            (C23384 * C1701 - C23385 * C1681 - C23384 * C1702 +
             C152376 * C1717 + C23382 * C1691 - C23383 * C1676 -
             C23382 * C1692 + C152474 * C1712) *
                C152522) *
               C152340 * C152502) *
              C152530 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C2393 -
           ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
            (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
             C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
             C23382 * C1700 + C152474 * C1716) *
                C152522) *
               C152340 * C2394 +
           ((C23382 * C1701 - C23383 * C1681 - C23382 * C1702 +
             C152474 * C1717 + C23384 * C8341 - C23385 * C8334 -
             C23384 * C8342 + C152376 * C8352) *
                C152522 +
            (C23382 * C1703 - C23383 * C1682 - C23382 * C1704 +
             C152474 * C1718 + C23384 * C8339 - C23385 * C8333 -
             C23384 * C8340 + C152376 * C8351) *
                C152523 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C23381) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C4321 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152246) *
               C152457 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152246 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C4321) *
               C152204) *
              C152118 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152246 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C4321) *
               C152457 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C4321 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          (((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
                C152340 * C4321 -
            ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
             C24066 * C152522) *
                C152340 * C152246) *
               C152457 +
           ((C24818 * C152522 + (C24817 + C24816) * C152523 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C23381) *
                C152340 * C152246 -
            ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
             C23762 * C152522) *
                C152340 * C4321) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C152242 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152249 +
            ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
              C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
              C152376 * C1712) *
                 C152522 +
             (C24058 + C24059) * C152523 + C24067 * C23381) *
                C152340 * C4993) *
               C152457 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152249 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C152242 -
            ((C26983 + C26984) * C23381 + (C26985 + C26986) * C152523 +
             (C23384 * C1701 - C23385 * C1681 - C23384 * C1702 +
              C152376 * C1717 + C23382 * C1691 - C23383 * C1676 -
              C23382 * C1692 + C152474 * C1712) *
                 C152522) *
                C152340 * C4993) *
               C152204) *
              C3455 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152249 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C152242 -
            ((C24064 + C24065) * C23381 + (C24061 + C24060) * C152523 +
             (C24059 + C24058) * C152522) *
                C152340 * C4993) *
               C152457 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C152242 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152249 +
            ((C26986 + C26985) * C152522 + (C26984 + C26983) * C152523 +
             (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
              C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
              C23384 * C1708 + C152376 * C1720) *
                 C23381) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C4321 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152246) *
               C152546 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152246 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C4321) *
               C152530 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152522 +
             (C23754 + C23755) * C152523 + C23763 * C23381) *
                C152340 * C4321 -
            ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
             (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
              C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
              C23382 * C1700 + C152474 * C1716) *
                 C152522) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152246 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C4321) *
               C152546 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C4321 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152246) *
               C152530 +
           (((C25916 + C25915) * C152522 + (C25914 + C25913) * C152523 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C23381) *
                C152340 * C152246 -
            ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
             (C23755 + C23754) * C152522) *
                C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C4321 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152246) *
              C152141 * C152552 +
          (((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
            C24471 * C23381) *
               C152340 * C152246 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C4321) *
              C152141 * C152545 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C4321 -
           ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
            C24066 * C152522) *
               C152340 * C152246) *
              C152141 * C152528 +
          ((C24471 * C152522 + (C24485 + C24484) * C152523 +
            (C23382 * C647 - C23383 * C625 - C23382 * C648 + C152474 * C661 +
             C23384 * C1219 - C23385 * C1208 - C23384 * C1220 +
             C152376 * C1226) *
                C23381) *
               C152340 * C152246 -
           ((C23455 + C23456) * C23381 + (C23454 + C23453) * C152523 +
            C23458 * C152522) *
               C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152554 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152551 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C152538 -
           ((C27205 + C27206) * C23381 + (C27207 + C27208) * C152523 +
            (C23384 * C3173 - C23385 * C3169 - C23384 * C3174 +
             C152376 * C3181 + C23382 * C2643 - C23383 * C2632 -
             C23382 * C2644 + C152474 * C2656) *
                C152522) *
               C152340 * C152515) *
              C152141 * C3455 +
          (((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
            C24471 * C23381) *
               C152340 * C152551 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152554 -
           ((C24064 + C24065) * C23381 + (C24061 + C24060) * C152523 +
            (C24059 + C24058) * C152522) *
               C152340 * C152538 +
           ((C27208 + C27207) * C152522 + (C27206 + C27205) * C152523 +
            (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
             C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
             C23384 * C3180 + C152376 * C3184) *
                C23381) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152242 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152249 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C4993) *
              C152141 * C152118 +
          (((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
            C24471 * C23381) *
               C152340 * C152249 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152242 -
           ((C24064 + C24065) * C23381 + (C24061 + C24060) * C152523 +
            (C24059 + C24058) * C152522) *
               C152340 * C4993) *
              C152141 * C152127 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152242 -
           ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
            C24066 * C152522) *
               C152340 * C152249 +
           (C24067 * C152522 + (C24065 + C24064) * C152523 +
            (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
             C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
             C152376 * C2858) *
                C23381) *
               C152340 * C4993) *
              C152141 * C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C4321 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152246) *
              C152141 * C152552 +
          (((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
            C24471 * C23381) *
               C152340 * C152246 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C4321) *
              C152141 * C152545 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C4321 -
           ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
            C24066 * C152522) *
               C152340 * C152246) *
              C152141 * C152528 +
          ((C24471 * C152522 + (C24485 + C24484) * C152523 +
            (C23382 * C647 - C23383 * C625 - C23382 * C648 + C152474 * C661 +
             C23384 * C1219 - C23385 * C1208 - C23384 * C1220 +
             C152376 * C1226) *
                C23381) *
               C152340 * C152246 -
           ((C23455 + C23456) * C23381 + (C23454 + C23453) * C152523 +
            C23458 * C152522) *
               C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C4321 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152246) *
               C152546 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152246 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C4321) *
               C152530 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152522 +
             (C23754 + C23755) * C152523 + C23763 * C23381) *
                C152340 * C4321 -
            ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
             (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
              C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
              C23382 * C1700 + C152474 * C1716) *
                 C152522) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152246 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C4321) *
               C152546 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C4321 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152246) *
               C152530 +
           (((C25916 + C25915) * C152522 + (C25914 + C25913) * C152523 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C23381) *
                C152340 * C152246 -
            ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
             (C23755 + C23754) * C152522) *
                C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C152457 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C152204) *
              C851 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C152204 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C152457) *
              C852 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152159 * C152457 -
           ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
            C23762 * C152522) *
               C152340 * C152159 * C152204) *
              C853 +
          ((C24262 * C152522 + (C24276 + C24275) * C152523 +
            (C23382 * C394 - C23383 * C372 - C23382 * C395 + C152474 * C408 +
             C23384 * C396 - C23385 * C373 - C23384 * C397 + C152376 * C409) *
                C23381) *
               C152340 * C152159 * C152204 -
           ((C23455 + C23456) * C23381 + (C23454 + C23453) * C152523 +
            C23458 * C152522) *
               C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C1851 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C1852 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152159 * C1853 -
           ((C25595 + C25596) * C23381 + (C25597 + C25598) * C152523 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152522) *
               C152340 * C152159 * C152509) *
              C152443 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C1852 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C1851 -
           ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
            (C23755 + C23754) * C152522) *
               C152340 * C152159 * C1853 +
           ((C25598 + C25597) * C152522 + (C25596 + C25595) * C152523 +
            (C23382 * C1503 - C23383 * C1495 - C23382 * C1504 +
             C152474 * C1519 + C23384 * C1517 - C23385 * C1502 -
             C23384 * C1518 + C152376 * C1526) *
                C23381) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C152458 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152246) *
               C152457 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152246 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C152458) *
               C152204) *
              C359 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152246 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C152458) *
               C152457 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C152458 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152246) *
               C152204) *
              C360 +
          (((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
                C152340 * C152458 -
            ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
             C24066 * C152522) *
                C152340 * C152246) *
               C152457 +
           ((C24818 * C152522 + (C24817 + C24816) * C152523 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C23381) *
                C152340 * C152246 -
            ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
             C23762 * C152522) *
                C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152458 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152246) *
              C1851 +
          (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
             C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
             C23384 * C1700 + C152376 * C1716) *
                C152522 +
            (C24812 + C24813) * C152523 + C24818 * C23381) *
               C152340 * C152246 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152458) *
              C1852 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152458 -
           ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
            (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
             C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
             C23382 * C1700 + C152474 * C1716) *
                C152522) *
               C152340 * C152246) *
              C1853 +
          (((C23382 * C2235 - C23383 * C2231 - C23382 * C2236 +
             C152474 * C2243 + C23384 * C8345 - C23385 * C8336 -
             C23384 * C8346 + C152376 * C8354) *
                C152522 +
            (C23382 * C2237 - C23383 * C2232 - C23382 * C2238 +
             C152474 * C2244 + C23384 * C8343 - C23385 * C8335 -
             C23384 * C8344 + C152376 * C8353) *
                C152523 +
            (C23382 * C2239 - C23383 * C2233 - C23382 * C2240 +
             C152474 * C2245 + C23384 * C8867 - C23385 * C8866 -
             C23384 * C8868 + C152376 * C8869) *
                C23381) *
               C152340 * C152246 -
           ((C25595 + C25596) * C23381 + (C25597 + C25598) * C152523 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152522) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C152546 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C152530 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            (C23758 + C23759) * C23381) *
               C152340 * C152159 * C152530 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C152546 -
           ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
            (C23755 + C23754) * C152522) *
               C152340 * C152159 * C152499) *
              C360 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152159 * C152546 -
           ((C23384 * C392 - C23385 * C371 - C23384 * C393 + C152376 * C407 +
             C23382 * C390 - C23383 * C370 - C23382 * C391 + C152474 * C406) *
                C23381 +
            (C23759 + C23758) * C152523 + C23762 * C152522) *
               C152340 * C152159 * C152530 +
           (C23763 * C152522 + (C23761 + C23760) * C152523 +
            (C23382 * C392 - C23383 * C371 - C23382 * C393 + C152474 * C407 +
             C23384 * C1858 - C23385 * C1857 - C23384 * C1859 +
             C152376 * C1860) *
                C23381) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152522 +
           (C23447 + C23448) * C152523 + C23457 * C23381) *
              C152340 * C152159 * C152141 * C129 -
          (C23458 * C23381 + (C23450 + C23449) * C152523 +
           (C23448 + C23447) * C152522) *
              C152340 * C152159 * C152141 * C130 +
          (C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
              C152340 * C152159 * C152141 * C131 -
          ((C23455 + C23456) * C23381 + (C23454 + C23453) * C152523 +
           C23458 * C152522) *
              C152340 * C152159 * C152141 * C132 +
          (C23459 * C152522 + (C23456 + C23455) * C152523 +
           (C23382 * C156 - C23383 * C142 - C23382 * C157 + C152474 * C166 +
            C23384 * C856 - C23385 * C855 - C23384 * C857 + C152376 * C858) *
               C23381) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152547 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152532 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C152502) *
              C152141 * C359 +
          (((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
            (C24062 + C24063) * C23381) *
               C152340 * C152532 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152547 -
           ((C24064 + C24065) * C23381 + (C24061 + C24060) * C152523 +
            (C24059 + C24058) * C152522) *
               C152340 * C152502) *
              C152141 * C360 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152547 -
           ((C23384 * C1217 - C23385 * C1207 - C23384 * C1218 +
             C152376 * C1225 + C23382 * C643 - C23383 * C623 - C23382 * C644 +
             C152474 * C659) *
                C23381 +
            (C24063 + C24062) * C152523 + C24066 * C152522) *
               C152340 * C152532 +
           (C24067 * C152522 + (C24065 + C24064) * C152523 +
            (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
             C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
             C152376 * C2858) *
                C23381) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C1401 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C1402 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C1402 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C1401 -
           ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
            (C23755 + C23754) * C152522) *
               C152340 * C152159 * C152499) *
              C152526 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152159 * C1401 -
           ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
            C23762 * C152522) *
               C152340 * C152159 * C1402 +
           (C23763 * C152522 + (C23761 + C23760) * C152523 +
            (C23382 * C392 - C23383 * C371 - C23382 * C393 + C152474 * C407 +
             C23384 * C1858 - C23385 * C1857 - C23384 * C1859 +
             C152376 * C1860) *
                C23381) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152522 +
           (C23447 + C23448) * C152523 + C23457 * C23381) *
              C152340 * C152159 * C1489 -
          (C23762 * C23381 + (C23752 + C23753) * C152523 +
           (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
            C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
               C152522) *
              C152340 * C152159 * C1490 +
          ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
            C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
            C152376 * C1522) *
               C152522 +
           (C23754 + C23755) * C152523 + C23763 * C23381) *
              C152340 * C152159 * C1491 -
          ((C23384 * C1515 - C23385 * C1501 - C23384 * C1516 + C152376 * C1525 +
            C23382 * C1505 - C23383 * C1496 - C23382 * C1506 +
            C152474 * C1520) *
               C23381 +
           (C23384 * C1513 - C23385 * C1500 - C23384 * C1514 + C152376 * C1524 +
            C23382 * C1507 - C23383 * C1497 - C23382 * C1508 +
            C152474 * C1521) *
               C152523 +
           (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 + C152376 * C1523 +
            C23382 * C1509 - C23383 * C1498 - C23382 * C1510 +
            C152474 * C1522) *
               C152522) *
              C152340 * C152159 * C1492 +
          ((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 + C152474 * C1523 +
            C23384 * C8105 - C23385 * C8100 - C23384 * C8106 +
            C152376 * C8112) *
               C152522 +
           (C23382 * C1513 - C23383 * C1500 - C23382 * C1514 + C152474 * C1524 +
            C23384 * C8103 - C23385 * C8099 - C23384 * C8104 +
            C152376 * C8111) *
               C152523 +
           (C23382 * C1515 - C23383 * C1501 - C23382 * C1516 + C152474 * C1525 +
            C23384 * C8552 - C23385 * C8551 - C23384 * C8553 +
            C152376 * C8554) *
               C23381) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152547 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152532 +
           ((C23382 * C635 - C23383 * C619 - C23382 * C636 + C152474 * C655 +
             C23384 * C1691 - C23385 * C1676 - C23384 * C1692 +
             C152376 * C1712) *
                C152522 +
            (C24058 + C24059) * C152523 + C24067 * C23381) *
               C152340 * C152502) *
              C1401 +
          (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
             C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
             C23384 * C1700 + C152376 * C1716) *
                C152522 +
            (C24812 + C24813) * C152523 + C24818 * C23381) *
               C152340 * C152532 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152547 -
           ((C23384 * C1705 - C23385 * C1683 - C23384 * C1706 +
             C152376 * C1719 + C23382 * C1687 - C23383 * C1674 -
             C23382 * C1688 + C152474 * C1710) *
                C23381 +
            (C23384 * C1703 - C23385 * C1682 - C23384 * C1704 +
             C152376 * C1718 + C23382 * C1689 - C23383 * C1675 -
             C23382 * C1690 + C152474 * C1711) *
                C152523 +
            (C23384 * C1701 - C23385 * C1681 - C23384 * C1702 +
             C152376 * C1717 + C23382 * C1691 - C23383 * C1676 -
             C23382 * C1692 + C152474 * C1712) *
                C152522) *
               C152340 * C152502) *
              C1402 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152547 -
           ((C23384 * C2239 - C23385 * C2233 - C23384 * C2240 +
             C152376 * C2245 + C23382 * C1695 - C23383 * C1678 -
             C23382 * C1696 + C152474 * C1714) *
                C23381 +
            (C23384 * C2237 - C23385 * C2232 - C23384 * C2238 +
             C152376 * C2244 + C23382 * C1697 - C23383 * C1679 -
             C23382 * C1698 + C152474 * C1715) *
                C152523 +
            (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
             C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
             C23382 * C1700 + C152474 * C1716) *
                C152522) *
               C152340 * C152532 +
           ((C23382 * C1701 - C23383 * C1681 - C23382 * C1702 +
             C152474 * C1717 + C23384 * C8341 - C23385 * C8334 -
             C23384 * C8342 + C152376 * C8352) *
                C152522 +
            (C23382 * C1703 - C23383 * C1682 - C23382 * C1704 +
             C152474 * C1718 + C23384 * C8339 - C23385 * C8333 -
             C23384 * C8340 + C152376 * C8351) *
                C152523 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C23381) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152458 -
           (C24066 * C23381 + (C24056 + C24057) * C152523 +
            (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
             C152474 * C654) *
                C152522) *
               C152340 * C152246) *
              C152141 * C851 +
          (((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
            C24471 * C23381) *
               C152340 * C152246 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152458) *
              C152141 * C852 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152458 -
           ((C24484 + C24485) * C23381 + (C24063 + C24062) * C152523 +
            C24066 * C152522) *
               C152340 * C152246) *
              C152141 * C853 +
          ((C24471 * C152522 + (C24485 + C24484) * C152523 +
            (C23382 * C647 - C23383 * C625 - C23382 * C648 + C152474 * C661 +
             C23384 * C1219 - C23385 * C1208 - C23384 * C1220 +
             C152376 * C1226) *
                C23381) *
               C152340 * C152246 -
           ((C23455 + C23456) * C23381 + (C23454 + C23453) * C152523 +
            C23458 * C152522) *
               C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152522 +
             (C23447 + C23448) * C152523 + C23457 * C23381) *
                C152340 * C152458 -
            (C24066 * C23381 + (C24056 + C24057) * C152523 +
             (C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221 + C23382 * C633 - C23383 * C618 - C23382 * C634 +
              C152474 * C654) *
                 C152522) *
                C152340 * C152246) *
               C1401 +
           (((C23382 * C1209 - C23383 * C1203 - C23382 * C1210 +
              C152474 * C1221 + C23384 * C1699 - C23385 * C1680 -
              C23384 * C1700 + C152376 * C1716) *
                 C152522 +
             (C24812 + C24813) * C152523 + C24818 * C23381) *
                C152340 * C152246 -
            (C23762 * C23381 + (C23752 + C23753) * C152523 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152522) *
                C152340 * C152458) *
               C1402 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152522 +
             (C23754 + C23755) * C152523 + C23763 * C23381) *
                C152340 * C152458 -
            ((C25913 + C25914) * C23381 + (C25915 + C25916) * C152523 +
             (C23384 * C2235 - C23385 * C2231 - C23384 * C2236 +
              C152376 * C2243 + C23382 * C1699 - C23383 * C1680 -
              C23382 * C1700 + C152474 * C1716) *
                 C152522) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          ((((C24057 + C24056) * C152522 + (C24055 + C24054) * C152523 +
             C24471 * C23381) *
                C152340 * C152246 -
            (C23458 * C23381 + (C23450 + C23449) * C152523 +
             (C23448 + C23447) * C152522) *
                C152340 * C152458) *
               C1401 +
           (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
             C24262 * C23381) *
                C152340 * C152458 -
            ((C24816 + C24817) * C23381 + (C24815 + C24814) * C152523 +
             (C24813 + C24812) * C152522) *
                C152340 * C152246) *
               C1402 +
           (((C25916 + C25915) * C152522 + (C25914 + C25913) * C152523 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C23381) *
                C152340 * C152246 -
            ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
             (C23755 + C23754) * C152522) *
                C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152522 +
           (C23447 + C23448) * C152523 + C23457 * C23381) *
              C152340 * C152159 * C152141 * C129 -
          (C23458 * C23381 + (C23450 + C23449) * C152523 +
           (C23448 + C23447) * C152522) *
              C152340 * C152159 * C152141 * C130 +
          (C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
              C152340 * C152159 * C152141 * C131 -
          ((C23455 + C23456) * C23381 + (C23454 + C23453) * C152523 +
           C23458 * C152522) *
              C152340 * C152159 * C152141 * C132 +
          (C23459 * C152522 + (C23456 + C23455) * C152523 +
           (C23382 * C156 - C23383 * C142 - C23382 * C157 + C152474 * C166 +
            C23384 * C856 - C23385 * C855 - C23384 * C857 + C152376 * C858) *
               C23381) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C152546 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C152530 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            (C23758 + C23759) * C23381) *
               C152340 * C152159 * C152530 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C152546 -
           ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
            (C23755 + C23754) * C152522) *
               C152340 * C152159 * C152499) *
              C360 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152159 * C152546 -
           ((C23384 * C392 - C23385 * C371 - C23384 * C393 + C152376 * C407 +
             C23382 * C390 - C23383 * C370 - C23382 * C391 + C152474 * C406) *
                C23381 +
            (C23759 + C23758) * C152523 + C23762 * C152522) *
               C152340 * C152159 * C152530 +
           (C23763 * C152522 + (C23761 + C23760) * C152523 +
            (C23382 * C392 - C23383 * C371 - C23382 * C393 + C152474 * C407 +
             C23384 * C1858 - C23385 * C1857 - C23384 * C1859 +
             C152376 * C1860) *
                C23381) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152522 +
            (C23447 + C23448) * C152523 + C23457 * C23381) *
               C152340 * C152159 * C1401 -
           (C23762 * C23381 + (C23752 + C23753) * C152523 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152522) *
               C152340 * C152159 * C1402 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152522 +
            (C23754 + C23755) * C152523 + C23763 * C23381) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C23753 + C23752) * C152522 + (C23751 + C23750) * C152523 +
            C24262 * C23381) *
               C152340 * C152159 * C1402 -
           (C23458 * C23381 + (C23450 + C23449) * C152523 +
            (C23448 + C23447) * C152522) *
               C152340 * C152159 * C1401 -
           ((C23760 + C23761) * C23381 + (C23757 + C23756) * C152523 +
            (C23755 + C23754) * C152522) *
               C152340 * C152159 * C152499) *
              C152526 +
          ((C23457 * C152522 + (C23452 + C23451) * C152523 + C23459 * C23381) *
               C152340 * C152159 * C1401 -
           ((C24275 + C24276) * C23381 + (C23759 + C23758) * C152523 +
            C23762 * C152522) *
               C152340 * C152159 * C1402 +
           (C23763 * C152522 + (C23761 + C23760) * C152523 +
            (C23382 * C392 - C23383 * C371 - C23382 * C393 + C152474 * C407 +
             C23384 * C1858 - C23385 * C1857 - C23384 * C1859 +
             C152376 * C1860) *
                C23381) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152522 +
           (C23447 + C23448) * C152523 + C23457 * C23381) *
              C152340 * C152159 * C1489 -
          (C23762 * C23381 + (C23752 + C23753) * C152523 +
           (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
            C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
               C152522) *
              C152340 * C152159 * C1490 +
          ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
            C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
            C152376 * C1522) *
               C152522 +
           (C23754 + C23755) * C152523 + C23763 * C23381) *
              C152340 * C152159 * C1491 -
          ((C23384 * C1515 - C23385 * C1501 - C23384 * C1516 + C152376 * C1525 +
            C23382 * C1505 - C23383 * C1496 - C23382 * C1506 +
            C152474 * C1520) *
               C23381 +
           (C23384 * C1513 - C23385 * C1500 - C23384 * C1514 + C152376 * C1524 +
            C23382 * C1507 - C23383 * C1497 - C23382 * C1508 +
            C152474 * C1521) *
               C152523 +
           (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 + C152376 * C1523 +
            C23382 * C1509 - C23383 * C1498 - C23382 * C1510 +
            C152474 * C1522) *
               C152522) *
              C152340 * C152159 * C1492 +
          ((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 + C152474 * C1523 +
            C23384 * C8105 - C23385 * C8100 - C23384 * C8106 +
            C152376 * C8112) *
               C152522 +
           (C23382 * C1513 - C23383 * C1500 - C23382 * C1514 + C152474 * C1524 +
            C23384 * C8103 - C23385 * C8099 - C23384 * C8104 +
            C152376 * C8111) *
               C152523 +
           (C23382 * C1515 - C23383 * C1501 - C23382 * C1516 + C152474 * C1525 +
            C23384 * C8552 - C23385 * C8551 - C23384 * C8553 +
            C152376 * C8554) *
               C23381) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C152200 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C152207 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
               C152159 * C3799) *
              C152118 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            (C41723 * C6301 + C24818 * C152089) * C152404) *
               C152159 * C152207 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C152200 -
           (((C25913 + C25914) * C152089 + C43189 * C6301) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                C152475) *
               C152159 * C3799) *
              C152127 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152159 * C152200 -
           (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
               C152159 * C152207 +
           ((C23763 * C6301 + (C23761 + C23760) * C152089) * C152475 +
            ((C25914 + C25913) * C6301 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C3799) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C152458 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152246) *
               C152200 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C152458) *
               C152207 +
           ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
               C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
               C152376 * C1522) *
                  C6301 +
              (C23754 + C23755) * C152089) *
                 C152475 +
             ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
                C152458 -
            (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                 C152404 +
             (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
                C152246) *
               C3799) *
              C3455 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C152458) *
               C152200 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C152458 -
            (((C26983 + C26984) * C152089 + C44641 * C6301) * C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152246) *
               C152207 +
           (((C43188 * C6301 + (C25914 + C25913) * C152089) * C152475 +
             ((C42527 + C42526) * C6301 +
              (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
               C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
               C23384 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C25913 + C25914) * C152089 + C43189 * C6301) * C152404 +
             ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                 C152475) *
                C152458) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C152553 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C152549 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
               C152159 * C152535 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C6301) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C6301) *
                C152475) *
               C152159 * C152509) *
              C3455 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            (C41723 * C6301 + C24818 * C152089) * C152404) *
               C152159 * C152549 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C152553 -
           (((C25913 + C25914) * C152089 + C43189 * C6301) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                C152475) *
               C152159 * C152535 +
           (((C25598 + C25597) * C6301 + (C25596 + C25595) * C152089) *
                C152475 +
            ((C42801 + C42800) * C6301 +
             (C23382 * C2239 - C23383 * C2233 - C23382 * C2240 +
              C152474 * C2245 + C23384 * C8867 - C23385 * C8866 -
              C23384 * C8868 + C152376 * C8869) *
                 C152089) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C3315 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C152204) *
              C152552 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            (C41723 * C6301 + C24818 * C152089) * C152404) *
               C152159 * C152204 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C3315) *
              C152545 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152159 * C3315 -
           (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
               C152159 * C152204) *
              C152528 +
          (((C24262 * C6301 + (C24276 + C24275) * C152089) * C152475 +
            ((C24817 + C24816) * C6301 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C152089) *
                C152404) *
               C152159 * C152204 -
           (((C24484 + C24485) * C152089 + C41328 * C6301) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C6301) * C152475) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C152547 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152532 +
            (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
             ((C44240 + C44241) * C6301 + C44906 * C152089) * C152404) *
                C152502) *
               C3315 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
                C152532 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C152547 -
            (((C44646 + C44647) * C152089 + (C45178 + C45179) * C6301) *
                 C152404 +
             (C44641 * C152089 + (C42523 + C42522) * C6301) * C152475) *
                C152502) *
               C152204) *
              C3455 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152532 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C152547 -
            (((C27205 + C27206) * C152089 + C44907 * C6301) * C152404 +
             (C40799 * C152089 + C40787 * C6301) * C152475) *
                C152502) *
               C3315 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C152547 -
            (((C26983 + C26984) * C152089 + C44641 * C6301) * C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152532 +
            ((C44632 * C6301 + (C26984 + C26983) * C152089) * C152475 +
             ((C44647 + C44646) * C6301 +
              (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
               C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
               C23384 * C10186 + C152376 * C10187) *
                  C152089) *
                 C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C152458 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152246) *
               C3315 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C152458) *
               C152204) *
              C152118 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C152458) *
               C3315 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C152458 -
            (((C26983 + C26984) * C152089 + C44641 * C6301) * C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152246) *
               C152204) *
              C152127 +
          ((((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
             (C40798 * C6301 + C24471 * C152089) * C152404) *
                C152458 -
            (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
             (C41328 * C152089 + C24066 * C6301) * C152475) *
                C152246) *
               C3315 +
           (((C24818 * C6301 + (C24817 + C24816) * C152089) * C152475 +
             ((C26984 + C26983) * C6301 +
              (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
               C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
               C23384 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
             ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
                C152458) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C3315 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C152204) *
              C152552 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            (C41723 * C6301 + C24818 * C152089) * C152404) *
               C152159 * C152204 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C3315) *
              C152545 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152159 * C3315 -
           (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
               C152159 * C152204) *
              C152528 +
          (((C24262 * C6301 + (C24276 + C24275) * C152089) * C152475 +
            ((C24817 + C24816) * C6301 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C152089) *
                C152404) *
               C152159 * C152204 -
           (((C24484 + C24485) * C152089 + C41328 * C6301) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C6301) * C152475) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C152553 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C152549 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
               C152159 * C152535 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C6301) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C6301) *
                C152475) *
               C152159 * C152509) *
              C3455 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            (C41723 * C6301 + C24818 * C152089) * C152404) *
               C152159 * C152549 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C152553 -
           (((C25913 + C25914) * C152089 + C43189 * C6301) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                C152475) *
               C152159 * C152535 +
           (((C25598 + C25597) * C6301 + (C25596 + C25595) * C152089) *
                C152475 +
            ((C42801 + C42800) * C6301 +
             (C23382 * C2239 - C23383 * C2233 - C23382 * C2240 +
              C152474 * C2245 + C23384 * C8867 - C23385 * C8866 -
              C23384 * C8868 + C152376 * C8869) *
                 C152089) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C4321 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152246) *
               C152200 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C4321) *
               C152207 +
           ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
               C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
               C152376 * C1522) *
                  C6301 +
              (C23754 + C23755) * C152089) *
                 C152475 +
             ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
                C4321 -
            (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                 C152404 +
             (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
                C152246) *
               C3799) *
              C152443 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C4321) *
               C152200 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C4321 -
            (((C26983 + C26984) * C152089 + C44641 * C6301) * C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152246) *
               C152207 +
           (((C43188 * C6301 + (C25914 + C25913) * C152089) * C152475 +
             ((C42527 + C42526) * C6301 +
              (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
               C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
               C23384 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C25913 + C25914) * C152089 + C43189 * C6301) * C152404 +
             ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                 C152475) *
                C4321) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152242 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152249 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C44240 + C44241) * C6301 + C44906 * C152089) * C152404) *
               C4993) *
              C152200 +
          ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
            ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
               C152249 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152242 -
           (((C44646 + C44647) * C152089 + (C45178 + C45179) * C6301) *
                C152404 +
            (C44641 * C152089 + (C42523 + C42522) * C6301) * C152475) *
               C4993) *
              C152207 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
               C152242 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
               C152249 +
           (((C42529 + C42528) * C6301 + (C42527 + C42526) * C152089) *
                C152475 +
            ((C23382 * C9659 - C23383 * C9652 - C23382 * C9660 +
              C152474 * C9670 + C23384 * C10405 - C23385 * C10403 -
              C23384 * C10406 + C152376 * C10409) *
                 C6301 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C4993) *
              C3799) *
         C152113) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C4321 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152246) *
              C152553 +
          ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
            ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
               C152246 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C4321) *
              C152549 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
               C4321 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
               C152246) *
              C152535 +
          ((((C43460 + C43461) * C6301 + (C42801 + C42800) * C152089) *
                C152475 +
            ((C23382 * C8341 - C23383 * C8334 - C23382 * C8342 +
              C152474 * C8352 + C23384 * C8347 - C23385 * C8337 -
              C23384 * C8348 + C152376 * C8355) *
                 C6301 +
             (C23382 * C8339 - C23383 * C8333 - C23382 * C8340 +
              C152474 * C8351 + C23384 * C8349 - C23385 * C8338 -
              C23384 * C8350 + C152376 * C8356) *
                 C152089) *
                C152404) *
               C152246 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C6301) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C6301) *
                C152475) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C4321 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152246) *
               C3315 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C4321) *
               C152204) *
              C152543 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C4321) *
               C3315 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C4321 -
            (((C26983 + C26984) * C152089 + C44641 * C6301) * C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152246) *
               C152204) *
              C152526 +
          ((((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
             (C40798 * C6301 + C24471 * C152089) * C152404) *
                C4321 -
            (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
             (C41328 * C152089 + C24066 * C6301) * C152475) *
                C152246) *
               C3315 +
           (((C24818 * C6301 + (C24817 + C24816) * C152089) * C152475 +
             ((C26984 + C26983) * C6301 +
              (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
               C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
               C23384 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
             ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152554 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152551 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C44240 + C44241) * C6301 + C44906 * C152089) * C152404) *
               C152538 -
           (((C44242 + C44243) * C152089 + (C44244 + C44245) * C6301) *
                C152404 +
            (C44907 * C152089 + (C44241 + C44240) * C6301) * C152475) *
               C152515) *
              C3315 +
          ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
            ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
               C152551 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152554 -
           (((C44646 + C44647) * C152089 + (C45178 + C45179) * C6301) *
                C152404 +
            (C44641 * C152089 + (C42523 + C42522) * C6301) * C152475) *
               C152538 +
           (((C45179 + C45178) * C6301 + (C44647 + C44646) * C152089) *
                C152475 +
            ((C23382 * C9661 - C23383 * C9653 - C23382 * C9662 +
              C152474 * C9671 + C23384 * C9663 - C23385 * C9654 -
              C23384 * C9664 + C152376 * C9672) *
                 C6301 +
             (C23382 * C9665 - C23383 * C9655 - C23382 * C9666 +
              C152474 * C9673 + C23384 * C9667 - C23385 * C9656 -
              C23384 * C9668 + C152376 * C9674) *
                 C152089) *
                C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C152242 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152249 +
            (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
             ((C44240 + C44241) * C6301 + C44906 * C152089) * C152404) *
                C4993) *
               C3315 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
                C152249 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C152242 -
            (((C44646 + C44647) * C152089 + (C45178 + C45179) * C6301) *
                 C152404 +
             (C44641 * C152089 + (C42523 + C42522) * C6301) * C152475) *
                C4993) *
               C152204) *
              C152443 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152249 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C152242 -
            (((C27205 + C27206) * C152089 + C44907 * C6301) * C152404 +
             (C40799 * C152089 + C40787 * C6301) * C152475) *
                C4993) *
               C3315 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C152242 -
            (((C26983 + C26984) * C152089 + C44641 * C6301) * C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152249 +
            ((C44632 * C6301 + (C26984 + C26983) * C152089) * C152475 +
             ((C44647 + C44646) * C6301 +
              (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
               C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
               C23384 * C10186 + C152376 * C10187) *
                  C152089) *
                 C152404) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C4321 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152246) *
               C3315 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C4321) *
               C152204) *
              C152543 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C4321) *
               C3315 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C4321 -
            (((C26983 + C26984) * C152089 + C44641 * C6301) * C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152246) *
               C152204) *
              C152526 +
          ((((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
             (C40798 * C6301 + C24471 * C152089) * C152404) *
                C4321 -
            (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
             (C41328 * C152089 + C24066 * C6301) * C152475) *
                C152246) *
               C3315 +
           (((C24818 * C6301 + (C24817 + C24816) * C152089) * C152475 +
             ((C26984 + C26983) * C6301 +
              (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
               C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
               C23384 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
             ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C4321 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152246) *
              C152553 +
          ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
            ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
               C152246 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C4321) *
              C152549 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
               C4321 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
               C152246) *
              C152535 +
          ((((C43460 + C43461) * C6301 + (C42801 + C42800) * C152089) *
                C152475 +
            ((C23382 * C8341 - C23383 * C8334 - C23382 * C8342 +
              C152474 * C8352 + C23384 * C8347 - C23385 * C8337 -
              C23384 * C8348 + C152376 * C8355) *
                 C6301 +
             (C23382 * C8339 - C23383 * C8333 - C23382 * C8340 +
              C152474 * C8351 + C23384 * C8349 - C23385 * C8338 -
              C23384 * C8350 + C152376 * C8356) *
                 C152089) *
                C152404) *
               C152246 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C6301) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C6301) *
                C152475) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C1851 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C1852 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + (C25916 + C25915) * C152089) *
                C152404) *
               C152159 * C1853 -
           (((C42800 + C42801) * C152089 +
             (C23384 * C8345 - C23385 * C8336 - C23384 * C8346 +
              C152376 * C8354 + C23382 * C2235 - C23383 * C2231 -
              C23382 * C2236 + C152474 * C2243) *
                 C6301) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C6301) *
                C152475) *
               C152159 * C152509) *
              C152443 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            (C41723 * C6301 + C24818 * C152089) * C152404) *
               C152159 * C1852 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C1851 -
           (((C25913 + C25914) * C152089 + (C25915 + C25916) * C6301) *
                C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                C152475) *
               C152159 * C1853 +
           (((C25598 + C25597) * C6301 + (C25596 + C25595) * C152089) *
                C152475 +
            ((C42801 + C42800) * C6301 +
             (C23382 * C2239 - C23383 * C2233 - C23382 * C2240 +
              C152474 * C2245 + C23384 * C8867 - C23385 * C8866 -
              C23384 * C8868 + C152376 * C8869) *
                 C152089) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C152457 -
           (((C24813 + C24812) * C152089 +
             (C23384 * C1699 - C23385 * C1680 - C23384 * C1700 +
              C152376 * C1716 + C23382 * C1209 - C23383 * C1203 -
              C23382 * C1210 + C152474 * C1221) *
                 C6301) *
                C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C152204) *
              C851 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            ((C24812 + C24813) * C6301 + C24818 * C152089) * C152404) *
               C152159 * C152204 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C152457) *
              C852 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152159 * C152457 -
           (((C24816 + C24817) * C152089 + (C24815 + C24814) * C6301) *
                C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
               C152159 * C152204) *
              C853 +
          (((C24262 * C6301 + (C24276 + C24275) * C152089) * C152475 +
            ((C24817 + C24816) * C6301 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C152089) *
                C152404) *
               C152159 * C152204 -
           (((C24484 + C24485) * C152089 + (C24063 + C24062) * C6301) *
                C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C6301) * C152475) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C2393 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C2394 +
            (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
             ((C44240 + C44241) * C6301 + (C27208 + C27207) * C152089) *
                 C152404) *
                C152502) *
               C152457 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
                C2394 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C2393 -
            (((C44646 + C44647) * C152089 +
              (C23384 * C9659 - C23385 * C9652 - C23384 * C9660 +
               C152376 * C9670 + C23382 * C3173 - C23383 * C3169 -
               C23382 * C3174 + C152474 * C3181) *
                  C6301) *
                 C152404 +
             (C44641 * C152089 + (C42523 + C42522) * C6301) * C152475) *
                C152502) *
               C152204) *
              C152443 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C2394 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C2393 -
            (((C27205 + C27206) * C152089 + (C27207 + C27208) * C6301) *
                 C152404 +
             (C40799 * C152089 + C40787 * C6301) * C152475) *
                C152502) *
               C152457 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C2393 -
            (((C26983 + C26984) * C152089 + C44641 * C6301) * C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C2394 +
            ((C44632 * C6301 + (C26984 + C26983) * C152089) * C152475 +
             ((C44647 + C44646) * C6301 +
              (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
               C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
               C23384 * C10186 + C152376 * C10187) *
                  C152089) *
                 C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152458 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152246) *
              C1851 +
          ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
            ((C42522 + C42523) * C6301 + (C26986 + C26985) * C152089) *
                C152404) *
               C152246 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152458) *
              C1852 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
               C152458 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
               C152246) *
              C1853 +
          ((((C43460 + C43461) * C6301 + (C42801 + C42800) * C152089) *
                C152475 +
            ((C23382 * C8341 - C23383 * C8334 - C23382 * C8342 +
              C152474 * C8352 + C23384 * C8347 - C23385 * C8337 -
              C23384 * C8348 + C152376 * C8355) *
                 C6301 +
             (C23382 * C8339 - C23383 * C8333 - C23382 * C8340 +
              C152474 * C8351 + C23384 * C8349 - C23385 * C8338 -
              C23384 * C8350 + C152376 * C8356) *
                 C152089) *
                C152404) *
               C152246 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C6301) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C6301) *
                C152475) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C152458 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152246) *
               C152457 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C23382 * C1691 - C23383 * C1676 - C23382 * C1692 +
               C152474 * C1712 + C23384 * C1701 - C23385 * C1681 -
               C23384 * C1702 + C152376 * C1717) *
                  C6301 +
              (C26986 + C26985) * C152089) *
                 C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C152458) *
               C152204) *
              C359 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C152458) *
               C152457 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C152458 -
            (((C26983 + C26984) * C152089 + (C26985 + C26986) * C6301) *
                 C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152246) *
               C152204) *
              C360 +
          ((((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
             (C40798 * C6301 + C24471 * C152089) * C152404) *
                C152458 -
            (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
             (C41328 * C152089 + C24066 * C6301) * C152475) *
                C152246) *
               C152457 +
           (((C24818 * C6301 + (C24817 + C24816) * C152089) * C152475 +
             ((C26984 + C26983) * C6301 +
              (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
               C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
               C23384 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
             ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C3010 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C3011 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C44240 + C44241) * C6301 + C44906 * C152089) * C152404) *
               C3012 -
           (((C44242 + C44243) * C152089 + (C44244 + C44245) * C6301) *
                C152404 +
            (C44907 * C152089 + (C44241 + C44240) * C6301) * C152475) *
               C152515) *
              C152457 +
          ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
            ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
               C3011 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C3010 -
           (((C44646 + C44647) * C152089 + (C45178 + C45179) * C6301) *
                C152404 +
            (C44641 * C152089 + (C42523 + C42522) * C6301) * C152475) *
               C3012 +
           (((C45179 + C45178) * C6301 + (C44647 + C44646) * C152089) *
                C152475 +
            ((C23382 * C9661 - C23383 * C9653 - C23382 * C9662 +
              C152474 * C9671 + C23384 * C9663 - C23385 * C9654 -
              C23384 * C9664 + C152376 * C9672) *
                 C6301 +
             (C23382 * C9665 - C23383 * C9655 - C23382 * C9666 +
              C152474 * C9673 + C23384 * C9667 - C23385 * C9656 -
              C23384 * C9668 + C152376 * C9674) *
                 C152089) *
                C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23382 * C144 - C23383 * C136 - C23382 * C145 +
                 C152474 * C160 + C23384 * C380 - C23385 * C365 -
                 C23384 * C381 + C152376 * C401) *
                    C6301 +
                (C23447 + C23448) * C152089) *
                   C152475 +
               ((C23382 * C633 - C23383 * C618 - C23382 * C634 +
                 C152474 * C654 + C23384 * C1209 - C23385 * C1203 -
                 C23384 * C1210 + C152376 * C1221) *
                    C6301 +
                (C24057 + C24056) * C152089) *
                   C152404) *
                  C152159 * C152141 * C129 -
              ((C24066 * C152089 + (C24056 + C24057) * C6301) * C152404 +
               ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                   C152475) *
                  C152159 * C152141 * C130 +
              ((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
               ((C24055 + C24054) * C6301 + C24471 * C152089) * C152404) *
                  C152159 * C152141 * C131 -
              (((C24484 + C24485) * C152089 + (C24063 + C24062) * C6301) *
                   C152404 +
               ((C23454 + C23453) * C152089 + C23458 * C6301) * C152475) *
                  C152159 * C152141 * C132 +
              ((C23459 * C6301 + (C23456 + C23455) * C152089) * C152475 +
               ((C24485 + C24484) * C6301 +
                (C23382 * C647 - C23383 * C625 - C23382 * C648 +
                 C152474 * C661 + C23384 * C1219 - C23385 * C1208 -
                 C23384 * C1220 + C152376 * C1226) *
                    C152089) *
                   C152404) *
                  C152159 * C152141 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23382 * C144 - C23383 * C136 - C23382 * C145 +
                  C152474 * C160 + C23384 * C380 - C23385 * C365 -
                  C23384 * C381 + C152376 * C401) *
                     C6301 +
                 (C23447 + C23448) * C152089) *
                    C152475 +
                ((C23382 * C633 - C23383 * C618 - C23382 * C634 +
                  C152474 * C654 + C23384 * C1209 - C23385 * C1203 -
                  C23384 * C1210 + C152376 * C1221) *
                     C6301 +
                 (C24057 + C24056) * C152089) *
                    C152404) *
                   C152159 * C152546 -
               (((C24813 + C24812) * C152089 +
                 (C23384 * C1699 - C23385 * C1680 - C23384 * C1700 +
                  C152376 * C1716 + C23382 * C1209 - C23383 * C1203 -
                  C23382 * C1210 + C152474 * C1221) *
                     C6301) *
                    C152404 +
                ((C23752 + C23753) * C152089 +
                 (C23384 * C382 - C23385 * C366 - C23384 * C383 +
                  C152376 * C402 + C23382 * C380 - C23383 * C365 -
                  C23382 * C381 + C152474 * C401) *
                     C6301) *
                    C152475) *
                   C152159 * C152530 +
               (((C23382 * C382 - C23383 * C366 - C23382 * C383 +
                  C152474 * C402 + C23384 * C1509 - C23385 * C1498 -
                  C23384 * C1510 + C152376 * C1522) *
                     C6301 +
                 (C23754 + C23755) * C152089) *
                    C152475 +
                ((C23382 * C1699 - C23383 * C1680 - C23382 * C1700 +
                  C152474 * C1716 + C23384 * C2235 - C23385 * C2231 -
                  C23384 * C2236 + C152376 * C2243) *
                     C6301 +
                 (C25916 + C25915) * C152089) *
                    C152404) *
                   C152159 * C152499) *
                  C359 +
              ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                    C152475 +
                ((C24812 + C24813) * C6301 + C24818 * C152089) * C152404) *
                   C152159 * C152530 -
               ((C24066 * C152089 + (C24056 + C24057) * C6301) * C152404 +
                ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                    C152475) *
                   C152159 * C152546 -
               (((C25913 + C25914) * C152089 + (C25915 + C25916) * C6301) *
                    C152404 +
                ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                    C152475) *
                   C152159 * C152499) *
                  C360 +
              (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
                ((C24055 + C24054) * C6301 + C24471 * C152089) * C152404) *
                   C152159 * C152546 -
               (((C24816 + C24817) * C152089 + (C24815 + C24814) * C6301) *
                    C152404 +
                ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
                   C152159 * C152530 +
               ((C23763 * C6301 + (C23761 + C23760) * C152089) * C152475 +
                ((C25914 + C25913) * C6301 +
                 (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
                  C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
                  C23384 * C2242 + C152376 * C2246) *
                     C152089) *
                    C152404) *
                   C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152547 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152532 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C23382 * C2643 - C23383 * C2632 - C23382 * C2644 +
              C152474 * C2656 + C23384 * C3173 - C23385 * C3169 -
              C23384 * C3174 + C152376 * C3181) *
                 C6301 +
             (C27208 + C27207) * C152089) *
                C152404) *
               C152502) *
              C152141 * C359 +
          (((C40786 * C6301 + C40798 * C152089) * C152475 +
            (C40797 * C6301 + C24067 * C152089) * C152404) *
               C152532 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152547 -
           (((C27205 + C27206) * C152089 + (C27207 + C27208) * C6301) *
                C152404 +
            (C40799 * C152089 + C40787 * C6301) * C152475) *
               C152502) *
              C152141 * C360 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152547 -
           (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
            ((C24063 + C24062) * C152089 + C24066 * C6301) * C152475) *
               C152532 +
           ((C24067 * C6301 + (C24065 + C24064) * C152089) * C152475 +
            ((C27206 + C27205) * C6301 +
             (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
              C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
              C23384 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C1401 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C1402 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C23382 * C1699 - C23383 * C1680 - C23382 * C1700 +
              C152474 * C1716 + C23384 * C2235 - C23385 * C2231 -
              C23384 * C2236 + C152376 * C2243) *
                 C6301 +
             (C25916 + C25915) * C152089) *
                C152404) *
               C152159 * C152499) *
              C152543 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            (C41723 * C6301 + C24818 * C152089) * C152404) *
               C152159 * C1402 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C1401 -
           (((C25913 + C25914) * C152089 + (C25915 + C25916) * C6301) *
                C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                C152475) *
               C152159 * C152499) *
              C152526 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152159 * C1401 -
           (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
               C152159 * C1402 +
           ((C23763 * C6301 + (C23761 + C23760) * C152089) * C152475 +
            ((C25914 + C25913) * C6301 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C6301 +
            (C23447 + C23448) * C152089) *
               C152475 +
           ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
              C152159 * C1489 -
          ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
           ((C23752 + C23753) * C152089 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C6301) *
               C152475) *
              C152159 * C1490 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C6301 +
            (C23754 + C23755) * C152089) *
               C152475 +
           ((C23382 * C1699 - C23383 * C1680 - C23382 * C1700 +
             C152474 * C1716 + C23384 * C2235 - C23385 * C2231 -
             C23384 * C2236 + C152376 * C2243) *
                C6301 +
            (C25916 + C25915) * C152089) *
               C152404) *
              C152159 * C1491 -
          (((C23384 * C8343 - C23385 * C8335 - C23384 * C8344 +
             C152376 * C8353 + C23382 * C2237 - C23383 * C2232 -
             C23382 * C2238 + C152474 * C2244) *
                C152089 +
            (C23384 * C8345 - C23385 * C8336 - C23384 * C8346 +
             C152376 * C8354 + C23382 * C2235 - C23383 * C2231 -
             C23382 * C2236 + C152474 * C2243) *
                C6301) *
               C152404 +
           ((C25597 + C25598) * C152089 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C6301) *
               C152475) *
              C152159 * C1492 +
          (((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 +
             C152474 * C1523 + C23384 * C8105 - C23385 * C8100 -
             C23384 * C8106 + C152376 * C8112) *
                C6301 +
            (C23382 * C1513 - C23383 * C1500 - C23382 * C1514 +
             C152474 * C1524 + C23384 * C8103 - C23385 * C8099 -
             C23384 * C8104 + C152376 * C8111) *
                C152089) *
               C152475 +
           ((C23382 * C8345 - C23383 * C8336 - C23382 * C8346 +
             C152474 * C8354 + C23384 * C9087 - C23385 * C9085 -
             C23384 * C9088 + C152376 * C9091) *
                C6301 +
            (C23382 * C8343 - C23383 * C8335 - C23382 * C8344 +
             C152474 * C8353 + C23384 * C9089 - C23385 * C9086 -
             C23384 * C9090 + C152376 * C9092) *
                C152089) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152547 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152532 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C23382 * C2643 - C23383 * C2632 - C23382 * C2644 +
              C152474 * C2656 + C23384 * C3173 - C23385 * C3169 -
              C23384 * C3174 + C152376 * C3181) *
                 C6301 +
             (C27208 + C27207) * C152089) *
                C152404) *
               C152502) *
              C1401 +
          ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
            ((C42522 + C42523) * C6301 + (C26986 + C26985) * C152089) *
                C152404) *
               C152532 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152547 -
           (((C23384 * C9657 - C23385 * C9651 - C23384 * C9658 +
              C152376 * C9669 + C23382 * C3175 - C23383 * C3170 -
              C23382 * C3176 + C152474 * C3182) *
                 C152089 +
             (C23384 * C9659 - C23385 * C9652 - C23384 * C9660 +
              C152376 * C9670 + C23382 * C3173 - C23383 * C3169 -
              C23382 * C3174 + C152474 * C3181) *
                 C6301) *
                C152404 +
            ((C26985 + C26986) * C152089 + (C42523 + C42522) * C6301) *
                C152475) *
               C152502) *
              C1402 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + (C25916 + C25915) * C152089) *
                C152404) *
               C152547 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                C152404 +
            ((C25915 + C25916) * C152089 + (C42525 + C42524) * C6301) *
                C152475) *
               C152532 +
           (((C42529 + C42528) * C6301 + (C42527 + C42526) * C152089) *
                C152475 +
            ((C23382 * C9659 - C23383 * C9652 - C23382 * C9660 +
              C152474 * C9670 + C23384 * C10405 - C23385 * C10403 -
              C23384 * C10406 + C152376 * C10409) *
                 C6301 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C2393 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C2394 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C23382 * C2643 - C23383 * C2632 - C23382 * C2644 +
              C152474 * C2656 + C23384 * C3173 - C23385 * C3169 -
              C23384 * C3174 + C152376 * C3181) *
                 C6301 +
             (C27208 + C27207) * C152089) *
                C152404) *
               C152502) *
              C152141 * C152543 +
          (((C40786 * C6301 + C40798 * C152089) * C152475 +
            (C40797 * C6301 + C24067 * C152089) * C152404) *
               C2394 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C2393 -
           (((C27205 + C27206) * C152089 + (C27207 + C27208) * C6301) *
                C152404 +
            (C40799 * C152089 + C40787 * C6301) * C152475) *
               C152502) *
              C152141 * C152526 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C2393 -
           (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
            (C41328 * C152089 + C24066 * C6301) * C152475) *
               C2394 +
           ((C24067 * C6301 + (C24065 + C24064) * C152089) * C152475 +
            ((C27206 + C27205) * C6301 +
             (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
              C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
              C23384 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C2393 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C2394 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C23382 * C2643 - C23383 * C2632 - C23382 * C2644 +
              C152474 * C2656 + C23384 * C3173 - C23385 * C3169 -
              C23384 * C3174 + C152376 * C3181) *
                 C6301 +
             (C27208 + C27207) * C152089) *
                C152404) *
               C152502) *
              C152546 +
          ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
            ((C42522 + C42523) * C6301 + (C26986 + C26985) * C152089) *
                C152404) *
               C2394 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C2393 -
           (((C23384 * C9657 - C23385 * C9651 - C23384 * C9658 +
              C152376 * C9669 + C23382 * C3175 - C23383 * C3170 -
              C23382 * C3176 + C152474 * C3182) *
                 C152089 +
             (C23384 * C9659 - C23385 * C9652 - C23384 * C9660 +
              C152376 * C9670 + C23382 * C3173 - C23383 * C3169 -
              C23382 * C3174 + C152474 * C3181) *
                 C6301) *
                C152404 +
            ((C26985 + C26986) * C152089 + (C42523 + C42522) * C6301) *
                C152475) *
               C152502) *
              C152530 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
               C2393 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
               C2394 +
           (((C42529 + C42528) * C6301 + (C42527 + C42526) * C152089) *
                C152475 +
            ((C23382 * C9659 - C23383 * C9652 - C23382 * C9660 +
              C152474 * C9670 + C23384 * C10405 - C23385 * C10403 -
              C23384 * C10406 + C152376 * C10409) *
                 C6301 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C6301 +
            (C23447 + C23448) * C152089) *
               C152475 +
           ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
              C2624 -
          ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
           (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
              C2625 +
          (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
           ((C44240 + C44241) * C6301 + (C27208 + C27207) * C152089) *
               C152404) *
              C2626 -
          (((C44242 + C44243) * C152089 + (C44244 + C44245) * C6301) * C152404 +
           ((C27207 + C27208) * C152089 + (C44241 + C44240) * C6301) *
               C152475) *
              C2627 +
          (((C44245 + C44244) * C6301 + (C44243 + C44242) * C152089) * C152475 +
           ((C23382 * C18073 - C23383 * C18068 - C23382 * C18074 +
             C152474 * C18080 + C23384 * C18811 - C23385 * C18809 -
             C23384 * C18812 + C152376 * C18815) *
                C6301 +
            (C23382 * C18071 - C23383 * C18067 - C23382 * C18072 +
             C152474 * C18079 + C23384 * C18813 - C23385 * C18810 -
             C23384 * C18814 + C152376 * C18816) *
                C152089) *
               C152404) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C152458 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152246) *
               C1401 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + (C26986 + C26985) * C152089) *
                 C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C152458) *
               C1402 +
           ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
               C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
               C152376 * C1522) *
                  C6301 +
              (C23754 + C23755) * C152089) *
                 C152475 +
             ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
                C152458 -
            (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                 C152404 +
             (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
                C152246) *
               C152499) *
              C152443 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C152458) *
               C1401 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C152458 -
            (((C26983 + C26984) * C152089 + (C26985 + C26986) * C6301) *
                 C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152246) *
               C1402 +
           (((C43188 * C6301 + (C25914 + C25913) * C152089) * C152475 +
             ((C42527 + C42526) * C6301 +
              (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
               C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
               C23384 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C25913 + C25914) * C152089 + C43189 * C6301) * C152404 +
             ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                 C152475) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152458 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152246) *
              C152141 * C851 +
          (((C40786 * C6301 + C40798 * C152089) * C152475 +
            (C40797 * C6301 + C24067 * C152089) * C152404) *
               C152246 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152458) *
              C152141 * C852 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152458 -
           (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
            (C41328 * C152089 + C24066 * C6301) * C152475) *
               C152246) *
              C152141 * C853 +
          (((C24471 * C6301 + (C24485 + C24484) * C152089) * C152475 +
            ((C24065 + C24064) * C6301 +
             (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
              C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
              C152376 * C2858) *
                 C152089) *
                C152404) *
               C152246 -
           (((C24484 + C24485) * C152089 + C41328 * C6301) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C6301) * C152475) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C3010 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C3011 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C44240 + C44241) * C6301 + C44906 * C152089) * C152404) *
               C3012 -
           (((C44242 + C44243) * C152089 + (C44244 + C44245) * C6301) *
                C152404 +
            (C44907 * C152089 + (C44241 + C44240) * C6301) * C152475) *
               C152515) *
              C152141 * C152443 +
          (((C40786 * C6301 + C40798 * C152089) * C152475 +
            (C40797 * C6301 + C24067 * C152089) * C152404) *
               C3011 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C3010 -
           (((C27205 + C27206) * C152089 + C44907 * C6301) * C152404 +
            (C40799 * C152089 + C40787 * C6301) * C152475) *
               C3012 +
           ((C44906 * C6301 + (C27206 + C27205) * C152089) * C152475 +
            ((C44243 + C44242) * C6301 +
             (C23382 * C2649 - C23383 * C2635 - C23382 * C2650 +
              C152474 * C2659 + C23384 * C18401 - C23385 * C18400 -
              C23384 * C18402 + C152376 * C18403) *
                 C152089) *
                C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C23382 * C633 - C23383 * C618 - C23382 * C634 + C152474 * C654 +
              C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221) *
                 C6301 +
             (C24057 + C24056) * C152089) *
                C152404) *
               C152159 * C152546 -
           (((C24813 + C24812) * C152089 +
             (C23384 * C1699 - C23385 * C1680 - C23384 * C1700 +
              C152376 * C1716 + C23382 * C1209 - C23383 * C1203 -
              C23382 * C1210 + C152474 * C1221) *
                 C6301) *
                C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C152530 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C23382 * C1699 - C23383 * C1680 - C23382 * C1700 +
              C152474 * C1716 + C23384 * C2235 - C23385 * C2231 -
              C23384 * C2236 + C152376 * C2243) *
                 C6301 +
             (C25916 + C25915) * C152089) *
                C152404) *
               C152159 * C152499) *
              C359 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            ((C24812 + C24813) * C6301 + C24818 * C152089) * C152404) *
               C152159 * C152530 -
           ((C24066 * C152089 + (C24056 + C24057) * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C152546 -
           (((C25913 + C25914) * C152089 + (C25915 + C25916) * C6301) *
                C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                C152475) *
               C152159 * C152499) *
              C360 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            ((C24055 + C24054) * C6301 + C24471 * C152089) * C152404) *
               C152159 * C152546 -
           (((C24816 + C24817) * C152089 + (C24815 + C24814) * C6301) *
                C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
               C152159 * C152530 +
           ((C23763 * C6301 + (C23761 + C23760) * C152089) * C152475 +
            ((C25914 + C25913) * C6301 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C6301 +
            (C23447 + C23448) * C152089) *
               C152475 +
           ((C23382 * C633 - C23383 * C618 - C23382 * C634 + C152474 * C654 +
             C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221) *
                C6301 +
            (C24057 + C24056) * C152089) *
               C152404) *
              C152159 * C152141 * C129 -
          ((C24066 * C152089 + (C24056 + C24057) * C6301) * C152404 +
           ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
               C152475) *
              C152159 * C152141 * C130 +
          ((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
           ((C24055 + C24054) * C6301 + C24471 * C152089) * C152404) *
              C152159 * C152141 * C131 -
          (((C24484 + C24485) * C152089 + (C24063 + C24062) * C6301) * C152404 +
           ((C23454 + C23453) * C152089 + C23458 * C6301) * C152475) *
              C152159 * C152141 * C132 +
          ((C23459 * C6301 + (C23456 + C23455) * C152089) * C152475 +
           ((C24485 + C24484) * C6301 +
            (C23382 * C647 - C23383 * C625 - C23382 * C648 + C152474 * C661 +
             C23384 * C1219 - C23385 * C1208 - C23384 * C1220 +
             C152376 * C1226) *
                C152089) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C1401 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C1402 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C23382 * C1699 - C23383 * C1680 - C23382 * C1700 +
              C152474 * C1716 + C23384 * C2235 - C23385 * C2231 -
              C23384 * C2236 + C152376 * C2243) *
                 C6301 +
             (C25916 + C25915) * C152089) *
                C152404) *
               C152159 * C152499) *
              C152543 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            (C41723 * C6301 + C24818 * C152089) * C152404) *
               C152159 * C1402 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C1401 -
           (((C25913 + C25914) * C152089 + (C25915 + C25916) * C6301) *
                C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                C152475) *
               C152159 * C152499) *
              C152526 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152159 * C1401 -
           (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
               C152159 * C1402 +
           ((C23763 * C6301 + (C23761 + C23760) * C152089) * C152475 +
            ((C25914 + C25913) * C6301 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C6301 +
            (C23447 + C23448) * C152089) *
               C152475 +
           ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
              C152159 * C1489 -
          ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
           ((C23752 + C23753) * C152089 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C6301) *
               C152475) *
              C152159 * C1490 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C6301 +
            (C23754 + C23755) * C152089) *
               C152475 +
           ((C23382 * C1699 - C23383 * C1680 - C23382 * C1700 +
             C152474 * C1716 + C23384 * C2235 - C23385 * C2231 -
             C23384 * C2236 + C152376 * C2243) *
                C6301 +
            (C25916 + C25915) * C152089) *
               C152404) *
              C152159 * C1491 -
          (((C23384 * C8343 - C23385 * C8335 - C23384 * C8344 +
             C152376 * C8353 + C23382 * C2237 - C23383 * C2232 -
             C23382 * C2238 + C152474 * C2244) *
                C152089 +
            (C23384 * C8345 - C23385 * C8336 - C23384 * C8346 +
             C152376 * C8354 + C23382 * C2235 - C23383 * C2231 -
             C23382 * C2236 + C152474 * C2243) *
                C6301) *
               C152404 +
           ((C25597 + C25598) * C152089 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C6301) *
               C152475) *
              C152159 * C1492 +
          (((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 +
             C152474 * C1523 + C23384 * C8105 - C23385 * C8100 -
             C23384 * C8106 + C152376 * C8112) *
                C6301 +
            (C23382 * C1513 - C23383 * C1500 - C23382 * C1514 +
             C152474 * C1524 + C23384 * C8103 - C23385 * C8099 -
             C23384 * C8104 + C152376 * C8111) *
                C152089) *
               C152475 +
           ((C23382 * C8345 - C23383 * C8336 - C23382 * C8346 +
             C152474 * C8354 + C23384 * C9087 - C23385 * C9085 -
             C23384 * C9088 + C152376 * C9091) *
                C6301 +
            (C23382 * C8343 - C23383 * C8335 - C23382 * C8344 +
             C152474 * C8353 + C23384 * C9089 - C23385 * C9086 -
             C23384 * C9090 + C152376 * C9092) *
                C152089) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C2393 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C2394 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C23382 * C2643 - C23383 * C2632 - C23382 * C2644 +
              C152474 * C2656 + C23384 * C3173 - C23385 * C3169 -
              C23384 * C3174 + C152376 * C3181) *
                 C6301 +
             (C27208 + C27207) * C152089) *
                C152404) *
               C152502) *
              C152141 * C152543 +
          (((C40786 * C6301 + C40798 * C152089) * C152475 +
            (C40797 * C6301 + C24067 * C152089) * C152404) *
               C2394 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C2393 -
           (((C27205 + C27206) * C152089 + (C27207 + C27208) * C6301) *
                C152404 +
            (C40799 * C152089 + C40787 * C6301) * C152475) *
               C152502) *
              C152141 * C152526 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C2393 -
           (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
            (C41328 * C152089 + C24066 * C6301) * C152475) *
               C2394 +
           ((C24067 * C6301 + (C24065 + C24064) * C152089) * C152475 +
            ((C27206 + C27205) * C6301 +
             (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
              C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
              C23384 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C2393 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C2394 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C23382 * C2643 - C23383 * C2632 - C23382 * C2644 +
              C152474 * C2656 + C23384 * C3173 - C23385 * C3169 -
              C23384 * C3174 + C152376 * C3181) *
                 C6301 +
             (C27208 + C27207) * C152089) *
                C152404) *
               C152502) *
              C152546 +
          ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
            ((C42522 + C42523) * C6301 + (C26986 + C26985) * C152089) *
                C152404) *
               C2394 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C2393 -
           (((C23384 * C9657 - C23385 * C9651 - C23384 * C9658 +
              C152376 * C9669 + C23382 * C3175 - C23383 * C3170 -
              C23382 * C3176 + C152474 * C3182) *
                 C152089 +
             (C23384 * C9659 - C23385 * C9652 - C23384 * C9660 +
              C152376 * C9670 + C23382 * C3173 - C23383 * C3169 -
              C23382 * C3174 + C152474 * C3181) *
                 C6301) *
                C152404 +
            ((C26985 + C26986) * C152089 + (C42523 + C42522) * C6301) *
                C152475) *
               C152502) *
              C152530 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
               C2393 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
               C2394 +
           (((C42529 + C42528) * C6301 + (C42527 + C42526) * C152089) *
                C152475 +
            ((C23382 * C9659 - C23383 * C9652 - C23382 * C9660 +
              C152474 * C9670 + C23384 * C10405 - C23385 * C10403 -
              C23384 * C10406 + C152376 * C10409) *
                 C6301 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C4321 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152246) *
               C152457 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C4321) *
               C152204) *
              C152118 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C4321) *
               C152457 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C4321 -
            (((C26983 + C26984) * C152089 + C44641 * C6301) * C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152246) *
               C152204) *
              C152127 +
          ((((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
             (C40798 * C6301 + C24471 * C152089) * C152404) *
                C4321 -
            (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
             (C41328 * C152089 + C24066 * C6301) * C152475) *
                C152246) *
               C152457 +
           (((C24818 * C6301 + (C24817 + C24816) * C152089) * C152475 +
             ((C26984 + C26983) * C6301 +
              (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
               C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
               C23384 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
             ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
                C4321) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C152242 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152249 +
            (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
             ((C44240 + C44241) * C6301 + C44906 * C152089) * C152404) *
                C4993) *
               C152457 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
                C152249 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C152242 -
            (((C44646 + C44647) * C152089 + (C45178 + C45179) * C6301) *
                 C152404 +
             (C44641 * C152089 + (C42523 + C42522) * C6301) * C152475) *
                C4993) *
               C152204) *
              C3455 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152249 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C152242 -
            (((C27205 + C27206) * C152089 + C44907 * C6301) * C152404 +
             (C40799 * C152089 + C40787 * C6301) * C152475) *
                C4993) *
               C152457 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C152242 -
            (((C26983 + C26984) * C152089 + C44641 * C6301) * C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152249 +
            ((C44632 * C6301 + (C26984 + C26983) * C152089) * C152475 +
             ((C44647 + C44646) * C6301 +
              (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
               C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
               C23384 * C10186 + C152376 * C10187) *
                  C152089) *
                 C152404) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C4321 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152246) *
               C152546 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C4321) *
               C152530 +
           ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
               C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
               C152376 * C1522) *
                  C6301 +
              (C23754 + C23755) * C152089) *
                 C152475 +
             ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
                C4321 -
            (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                 C152404 +
             (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
                C152246) *
               C152499) *
              C3455 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C4321) *
               C152546 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C4321 -
            (((C26983 + C26984) * C152089 + C44641 * C6301) * C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152246) *
               C152530 +
           (((C43188 * C6301 + (C25914 + C25913) * C152089) * C152475 +
             ((C42527 + C42526) * C6301 +
              (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
               C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
               C23384 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C25913 + C25914) * C152089 + C43189 * C6301) * C152404 +
             ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                 C152475) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C4321 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152246) *
              C152141 * C152552 +
          (((C40786 * C6301 + C40798 * C152089) * C152475 +
            (C40797 * C6301 + C24067 * C152089) * C152404) *
               C152246 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C4321) *
              C152141 * C152545 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C4321 -
           (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
            (C41328 * C152089 + C24066 * C6301) * C152475) *
               C152246) *
              C152141 * C152528 +
          (((C24471 * C6301 + (C24485 + C24484) * C152089) * C152475 +
            ((C24065 + C24064) * C6301 +
             (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
              C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
              C152376 * C2858) *
                 C152089) *
                C152404) *
               C152246 -
           (((C24484 + C24485) * C152089 + C41328 * C6301) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C6301) * C152475) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152554 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152551 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C44240 + C44241) * C6301 + C44906 * C152089) * C152404) *
               C152538 -
           (((C44242 + C44243) * C152089 + (C44244 + C44245) * C6301) *
                C152404 +
            (C44907 * C152089 + (C44241 + C44240) * C6301) * C152475) *
               C152515) *
              C152141 * C3455 +
          (((C40786 * C6301 + C40798 * C152089) * C152475 +
            (C40797 * C6301 + C24067 * C152089) * C152404) *
               C152551 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152554 -
           (((C27205 + C27206) * C152089 + C44907 * C6301) * C152404 +
            (C40799 * C152089 + C40787 * C6301) * C152475) *
               C152538 +
           ((C44906 * C6301 + (C27206 + C27205) * C152089) * C152475 +
            ((C44243 + C44242) * C6301 +
             (C23382 * C2649 - C23383 * C2635 - C23382 * C2650 +
              C152474 * C2659 + C23384 * C18401 - C23385 * C18400 -
              C23384 * C18402 + C152376 * C18403) *
                 C152089) *
                C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152242 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152249 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C44240 + C44241) * C6301 + C44906 * C152089) * C152404) *
               C4993) *
              C152141 * C152118 +
          (((C40786 * C6301 + C40798 * C152089) * C152475 +
            (C40797 * C6301 + C24067 * C152089) * C152404) *
               C152249 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152242 -
           (((C27205 + C27206) * C152089 + C44907 * C6301) * C152404 +
            (C40799 * C152089 + C40787 * C6301) * C152475) *
               C4993) *
              C152141 * C152127 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152242 -
           (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
            (C41328 * C152089 + C24066 * C6301) * C152475) *
               C152249 +
           ((C24067 * C6301 + (C24065 + C24064) * C152089) * C152475 +
            ((C27206 + C27205) * C6301 +
             (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
              C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
              C23384 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C4993) *
              C152141 * C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C4321 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152246) *
              C152141 * C152552 +
          (((C40786 * C6301 + C40798 * C152089) * C152475 +
            (C40797 * C6301 + C24067 * C152089) * C152404) *
               C152246 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C4321) *
              C152141 * C152545 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C4321 -
           (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
            (C41328 * C152089 + C24066 * C6301) * C152475) *
               C152246) *
              C152141 * C152528 +
          (((C24471 * C6301 + (C24485 + C24484) * C152089) * C152475 +
            ((C24065 + C24064) * C6301 +
             (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
              C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
              C152376 * C2858) *
                 C152089) *
                C152404) *
               C152246 -
           (((C24484 + C24485) * C152089 + C41328 * C6301) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C6301) * C152475) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C4321 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152246) *
               C152546 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C4321) *
               C152530 +
           ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
               C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
               C152376 * C1522) *
                  C6301 +
              (C23754 + C23755) * C152089) *
                 C152475 +
             ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
                C4321 -
            (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                 C152404 +
             (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
                C152246) *
               C152499) *
              C3455 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C4321) *
               C152546 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C4321 -
            (((C26983 + C26984) * C152089 + C44641 * C6301) * C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152246) *
               C152530 +
           (((C43188 * C6301 + (C25914 + C25913) * C152089) * C152475 +
             ((C42527 + C42526) * C6301 +
              (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
               C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
               C23384 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C25913 + C25914) * C152089 + C43189 * C6301) * C152404 +
             ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                 C152475) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C152457 -
           (((C24813 + C24812) * C152089 +
             (C23384 * C1699 - C23385 * C1680 - C23384 * C1700 +
              C152376 * C1716 + C23382 * C1209 - C23383 * C1203 -
              C23382 * C1210 + C152474 * C1221) *
                 C6301) *
                C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C152204) *
              C851 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            ((C24812 + C24813) * C6301 + C24818 * C152089) * C152404) *
               C152159 * C152204 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C152457) *
              C852 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152159 * C152457 -
           (((C24816 + C24817) * C152089 + (C24815 + C24814) * C6301) *
                C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
               C152159 * C152204) *
              C853 +
          (((C24262 * C6301 + (C24276 + C24275) * C152089) * C152475 +
            ((C24817 + C24816) * C6301 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C152089) *
                C152404) *
               C152159 * C152204 -
           (((C24484 + C24485) * C152089 + (C24063 + C24062) * C6301) *
                C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C6301) * C152475) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C1851 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C1852 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + (C25916 + C25915) * C152089) *
                C152404) *
               C152159 * C1853 -
           (((C42800 + C42801) * C152089 +
             (C23384 * C8345 - C23385 * C8336 - C23384 * C8346 +
              C152376 * C8354 + C23382 * C2235 - C23383 * C2231 -
              C23382 * C2236 + C152474 * C2243) *
                 C6301) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C6301) *
                C152475) *
               C152159 * C152509) *
              C152443 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            (C41723 * C6301 + C24818 * C152089) * C152404) *
               C152159 * C1852 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C1851 -
           (((C25913 + C25914) * C152089 + (C25915 + C25916) * C6301) *
                C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                C152475) *
               C152159 * C1853 +
           (((C25598 + C25597) * C6301 + (C25596 + C25595) * C152089) *
                C152475 +
            ((C42801 + C42800) * C6301 +
             (C23382 * C2239 - C23383 * C2233 - C23382 * C2240 +
              C152474 * C2245 + C23384 * C8867 - C23385 * C8866 -
              C23384 * C8868 + C152376 * C8869) *
                 C152089) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C152458 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152246) *
               C152457 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C23382 * C1691 - C23383 * C1676 - C23382 * C1692 +
               C152474 * C1712 + C23384 * C1701 - C23385 * C1681 -
               C23384 * C1702 + C152376 * C1717) *
                  C6301 +
              (C26986 + C26985) * C152089) *
                 C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C152458) *
               C152204) *
              C359 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C152458) *
               C152457 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C152458 -
            (((C26983 + C26984) * C152089 + (C26985 + C26986) * C6301) *
                 C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152246) *
               C152204) *
              C360 +
          ((((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
             (C40798 * C6301 + C24471 * C152089) * C152404) *
                C152458 -
            (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
             (C41328 * C152089 + C24066 * C6301) * C152475) *
                C152246) *
               C152457 +
           (((C24818 * C6301 + (C24817 + C24816) * C152089) * C152475 +
             ((C26984 + C26983) * C6301 +
              (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
               C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
               C23384 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
             ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152458 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152246) *
              C1851 +
          ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
            ((C42522 + C42523) * C6301 + (C26986 + C26985) * C152089) *
                C152404) *
               C152246 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152458) *
              C1852 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
               C152458 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
               C152246) *
              C1853 +
          ((((C43460 + C43461) * C6301 + (C42801 + C42800) * C152089) *
                C152475 +
            ((C23382 * C8341 - C23383 * C8334 - C23382 * C8342 +
              C152474 * C8352 + C23384 * C8347 - C23385 * C8337 -
              C23384 * C8348 + C152376 * C8355) *
                 C6301 +
             (C23382 * C8339 - C23383 * C8333 - C23382 * C8340 +
              C152474 * C8351 + C23384 * C8349 - C23385 * C8338 -
              C23384 * C8350 + C152376 * C8356) *
                 C152089) *
                C152404) *
               C152246 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C6301) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C6301) *
                C152475) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C23382 * C633 - C23383 * C618 - C23382 * C634 + C152474 * C654 +
              C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221) *
                 C6301 +
             (C24057 + C24056) * C152089) *
                C152404) *
               C152159 * C152546 -
           (((C24813 + C24812) * C152089 +
             (C23384 * C1699 - C23385 * C1680 - C23384 * C1700 +
              C152376 * C1716 + C23382 * C1209 - C23383 * C1203 -
              C23382 * C1210 + C152474 * C1221) *
                 C6301) *
                C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C152530 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C23382 * C1699 - C23383 * C1680 - C23382 * C1700 +
              C152474 * C1716 + C23384 * C2235 - C23385 * C2231 -
              C23384 * C2236 + C152376 * C2243) *
                 C6301 +
             (C25916 + C25915) * C152089) *
                C152404) *
               C152159 * C152499) *
              C359 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            ((C24812 + C24813) * C6301 + C24818 * C152089) * C152404) *
               C152159 * C152530 -
           ((C24066 * C152089 + (C24056 + C24057) * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C152546 -
           (((C25913 + C25914) * C152089 + (C25915 + C25916) * C6301) *
                C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                C152475) *
               C152159 * C152499) *
              C360 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            ((C24055 + C24054) * C6301 + C24471 * C152089) * C152404) *
               C152159 * C152546 -
           (((C24816 + C24817) * C152089 + (C24815 + C24814) * C6301) *
                C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
               C152159 * C152530 +
           ((C23763 * C6301 + (C23761 + C23760) * C152089) * C152475 +
            ((C25914 + C25913) * C6301 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C6301 +
            (C23447 + C23448) * C152089) *
               C152475 +
           ((C23382 * C633 - C23383 * C618 - C23382 * C634 + C152474 * C654 +
             C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221) *
                C6301 +
            (C24057 + C24056) * C152089) *
               C152404) *
              C152159 * C152141 * C129 -
          ((C24066 * C152089 + (C24056 + C24057) * C6301) * C152404 +
           ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
               C152475) *
              C152159 * C152141 * C130 +
          ((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
           ((C24055 + C24054) * C6301 + C24471 * C152089) * C152404) *
              C152159 * C152141 * C131 -
          (((C24484 + C24485) * C152089 + (C24063 + C24062) * C6301) * C152404 +
           ((C23454 + C23453) * C152089 + C23458 * C6301) * C152475) *
              C152159 * C152141 * C132 +
          ((C23459 * C6301 + (C23456 + C23455) * C152089) * C152475 +
           ((C24485 + C24484) * C6301 +
            (C23382 * C647 - C23383 * C625 - C23382 * C648 + C152474 * C661 +
             C23384 * C1219 - C23385 * C1208 - C23384 * C1220 +
             C152376 * C1226) *
                C152089) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152547 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152532 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C23382 * C2643 - C23383 * C2632 - C23382 * C2644 +
              C152474 * C2656 + C23384 * C3173 - C23385 * C3169 -
              C23384 * C3174 + C152376 * C3181) *
                 C6301 +
             (C27208 + C27207) * C152089) *
                C152404) *
               C152502) *
              C152141 * C359 +
          (((C40786 * C6301 + C40798 * C152089) * C152475 +
            (C40797 * C6301 + C24067 * C152089) * C152404) *
               C152532 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152547 -
           (((C27205 + C27206) * C152089 + (C27207 + C27208) * C6301) *
                C152404 +
            (C40799 * C152089 + C40787 * C6301) * C152475) *
               C152502) *
              C152141 * C360 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152547 -
           (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
            ((C24063 + C24062) * C152089 + C24066 * C6301) * C152475) *
               C152532 +
           ((C24067 * C6301 + (C24065 + C24064) * C152089) * C152475 +
            ((C27206 + C27205) * C6301 +
             (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
              C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
              C23384 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C1401 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C1402 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C23382 * C1699 - C23383 * C1680 - C23382 * C1700 +
              C152474 * C1716 + C23384 * C2235 - C23385 * C2231 -
              C23384 * C2236 + C152376 * C2243) *
                 C6301 +
             (C25916 + C25915) * C152089) *
                C152404) *
               C152159 * C152499) *
              C152543 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            (C41723 * C6301 + C24818 * C152089) * C152404) *
               C152159 * C1402 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C1401 -
           (((C25913 + C25914) * C152089 + (C25915 + C25916) * C6301) *
                C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                C152475) *
               C152159 * C152499) *
              C152526 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152159 * C1401 -
           (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
               C152159 * C1402 +
           ((C23763 * C6301 + (C23761 + C23760) * C152089) * C152475 +
            ((C25914 + C25913) * C6301 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C6301 +
            (C23447 + C23448) * C152089) *
               C152475 +
           ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
              C152159 * C1489 -
          ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
           ((C23752 + C23753) * C152089 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C6301) *
               C152475) *
              C152159 * C1490 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C6301 +
            (C23754 + C23755) * C152089) *
               C152475 +
           ((C23382 * C1699 - C23383 * C1680 - C23382 * C1700 +
             C152474 * C1716 + C23384 * C2235 - C23385 * C2231 -
             C23384 * C2236 + C152376 * C2243) *
                C6301 +
            (C25916 + C25915) * C152089) *
               C152404) *
              C152159 * C1491 -
          (((C23384 * C8343 - C23385 * C8335 - C23384 * C8344 +
             C152376 * C8353 + C23382 * C2237 - C23383 * C2232 -
             C23382 * C2238 + C152474 * C2244) *
                C152089 +
            (C23384 * C8345 - C23385 * C8336 - C23384 * C8346 +
             C152376 * C8354 + C23382 * C2235 - C23383 * C2231 -
             C23382 * C2236 + C152474 * C2243) *
                C6301) *
               C152404 +
           ((C25597 + C25598) * C152089 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C6301) *
               C152475) *
              C152159 * C1492 +
          (((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 +
             C152474 * C1523 + C23384 * C8105 - C23385 * C8100 -
             C23384 * C8106 + C152376 * C8112) *
                C6301 +
            (C23382 * C1513 - C23383 * C1500 - C23382 * C1514 +
             C152474 * C1524 + C23384 * C8103 - C23385 * C8099 -
             C23384 * C8104 + C152376 * C8111) *
                C152089) *
               C152475 +
           ((C23382 * C8345 - C23383 * C8336 - C23382 * C8346 +
             C152474 * C8354 + C23384 * C9087 - C23385 * C9085 -
             C23384 * C9088 + C152376 * C9091) *
                C6301 +
            (C23382 * C8343 - C23383 * C8335 - C23382 * C8344 +
             C152474 * C8353 + C23384 * C9089 - C23385 * C9086 -
             C23384 * C9090 + C152376 * C9092) *
                C152089) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152547 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152532 +
           (((C40811 + C40810) * C6301 + C40797 * C152089) * C152475 +
            ((C23382 * C2643 - C23383 * C2632 - C23382 * C2644 +
              C152474 * C2656 + C23384 * C3173 - C23385 * C3169 -
              C23384 * C3174 + C152376 * C3181) *
                 C6301 +
             (C27208 + C27207) * C152089) *
                C152404) *
               C152502) *
              C1401 +
          ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
            ((C42522 + C42523) * C6301 + (C26986 + C26985) * C152089) *
                C152404) *
               C152532 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152547 -
           (((C23384 * C9657 - C23385 * C9651 - C23384 * C9658 +
              C152376 * C9669 + C23382 * C3175 - C23383 * C3170 -
              C23382 * C3176 + C152474 * C3182) *
                 C152089 +
             (C23384 * C9659 - C23385 * C9652 - C23384 * C9660 +
              C152376 * C9670 + C23382 * C3173 - C23383 * C3169 -
              C23382 * C3174 + C152474 * C3181) *
                 C6301) *
                C152404 +
            ((C26985 + C26986) * C152089 + (C42523 + C42522) * C6301) *
                C152475) *
               C152502) *
              C1402 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C42524 + C42525) * C6301 + (C25916 + C25915) * C152089) *
                C152404) *
               C152547 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                C152404 +
            ((C25915 + C25916) * C152089 + (C42525 + C42524) * C6301) *
                C152475) *
               C152532 +
           (((C42529 + C42528) * C6301 + (C42527 + C42526) * C152089) *
                C152475 +
            ((C23382 * C9659 - C23383 * C9652 - C23382 * C9660 +
              C152474 * C9670 + C23384 * C10405 - C23385 * C10403 -
              C23384 * C10406 + C152376 * C10409) *
                 C6301 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152458 -
           ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
               C152246) *
              C152141 * C851 +
          (((C40786 * C6301 + C40798 * C152089) * C152475 +
            (C40797 * C6301 + C24067 * C152089) * C152404) *
               C152246 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152458) *
              C152141 * C852 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152458 -
           (((C24064 + C24065) * C152089 + C40799 * C6301) * C152404 +
            (C41328 * C152089 + C24066 * C6301) * C152475) *
               C152246) *
              C152141 * C853 +
          (((C24471 * C6301 + (C24485 + C24484) * C152089) * C152475 +
            ((C24065 + C24064) * C6301 +
             (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
              C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
              C152376 * C2858) *
                 C152089) *
                C152404) *
               C152246 -
           (((C24484 + C24485) * C152089 + C41328 * C6301) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C6301) * C152475) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C6301 +
              (C23447 + C23448) * C152089) *
                 C152475 +
             ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
                C152458 -
            ((C40787 * C152089 + (C40810 + C40811) * C6301) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C6301) * C152475) *
                C152246) *
               C1401 +
           ((((C41730 + C41731) * C6301 + C41723 * C152089) * C152475 +
             ((C42522 + C42523) * C6301 + (C26986 + C26985) * C152089) *
                 C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C6301) *
                 C152475) *
                C152458) *
               C1402 +
           ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
               C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
               C152376 * C1522) *
                  C6301 +
              (C23754 + C23755) * C152089) *
                 C152475 +
             ((C42524 + C42525) * C6301 + C43188 * C152089) * C152404) *
                C152458 -
            (((C42526 + C42527) * C152089 + (C42528 + C42529) * C6301) *
                 C152404 +
             (C43189 * C152089 + (C42525 + C42524) * C6301) * C152475) *
                C152246) *
               C152499) *
              C152443 +
          ((((C40786 * C6301 + C40798 * C152089) * C152475 +
             (C40797 * C6301 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C6301) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                 C152475) *
                C152458) *
               C1401 +
           ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                 C152475 +
             (C41723 * C6301 + C24818 * C152089) * C152404) *
                C152458 -
            (((C26983 + C26984) * C152089 + (C26985 + C26986) * C6301) *
                 C152404 +
             (C41725 * C152089 + C41724 * C6301) * C152475) *
                C152246) *
               C1402 +
           (((C43188 * C6301 + (C25914 + C25913) * C152089) * C152475 +
             ((C42527 + C42526) * C6301 +
              (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
               C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
               C23384 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C25913 + C25914) * C152089 + C43189 * C6301) * C152404 +
             ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                 C152475) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C6301 +
            (C23447 + C23448) * C152089) *
               C152475 +
           ((C23382 * C633 - C23383 * C618 - C23382 * C634 + C152474 * C654 +
             C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
             C152376 * C1221) *
                C6301 +
            (C24057 + C24056) * C152089) *
               C152404) *
              C152159 * C152141 * C129 -
          ((C24066 * C152089 + (C24056 + C24057) * C6301) * C152404 +
           ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
               C152475) *
              C152159 * C152141 * C130 +
          ((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
           ((C24055 + C24054) * C6301 + C24471 * C152089) * C152404) *
              C152159 * C152141 * C131 -
          (((C24484 + C24485) * C152089 + (C24063 + C24062) * C6301) * C152404 +
           ((C23454 + C23453) * C152089 + C23458 * C6301) * C152475) *
              C152159 * C152141 * C132 +
          ((C23459 * C6301 + (C23456 + C23455) * C152089) * C152475 +
           ((C24485 + C24484) * C6301 +
            (C23382 * C647 - C23383 * C625 - C23382 * C648 + C152474 * C661 +
             C23384 * C1219 - C23385 * C1208 - C23384 * C1220 +
             C152376 * C1226) *
                C152089) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C23382 * C633 - C23383 * C618 - C23382 * C634 + C152474 * C654 +
              C23384 * C1209 - C23385 * C1203 - C23384 * C1210 +
              C152376 * C1221) *
                 C6301 +
             (C24057 + C24056) * C152089) *
                C152404) *
               C152159 * C152546 -
           (((C24813 + C24812) * C152089 +
             (C23384 * C1699 - C23385 * C1680 - C23384 * C1700 +
              C152376 * C1716 + C23382 * C1209 - C23383 * C1203 -
              C23382 * C1210 + C152474 * C1221) *
                 C6301) *
                C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C152530 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C23382 * C1699 - C23383 * C1680 - C23382 * C1700 +
              C152474 * C1716 + C23384 * C2235 - C23385 * C2231 -
              C23384 * C2236 + C152376 * C2243) *
                 C6301 +
             (C25916 + C25915) * C152089) *
                C152404) *
               C152159 * C152499) *
              C359 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            ((C24812 + C24813) * C6301 + C24818 * C152089) * C152404) *
               C152159 * C152530 -
           ((C24066 * C152089 + (C24056 + C24057) * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C152546 -
           (((C25913 + C25914) * C152089 + (C25915 + C25916) * C6301) *
                C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                C152475) *
               C152159 * C152499) *
              C360 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            ((C24055 + C24054) * C6301 + C24471 * C152089) * C152404) *
               C152159 * C152546 -
           (((C24816 + C24817) * C152089 + (C24815 + C24814) * C6301) *
                C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
               C152159 * C152530 +
           ((C23763 * C6301 + (C23761 + C23760) * C152089) * C152475 +
            ((C25914 + C25913) * C6301 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C6301 +
             (C23447 + C23448) * C152089) *
                C152475 +
            ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
               C152159 * C1401 -
           ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C6301) *
                C152475) *
               C152159 * C1402 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C6301 +
             (C23754 + C23755) * C152089) *
                C152475 +
            ((C23382 * C1699 - C23383 * C1680 - C23382 * C1700 +
              C152474 * C1716 + C23384 * C2235 - C23385 * C2231 -
              C23384 * C2236 + C152376 * C2243) *
                 C6301 +
             (C25916 + C25915) * C152089) *
                C152404) *
               C152159 * C152499) *
              C152543 +
          ((((C23753 + C23752) * C6301 + (C23751 + C23750) * C152089) *
                C152475 +
            (C41723 * C6301 + C24818 * C152089) * C152404) *
               C152159 * C1402 -
           ((C24066 * C152089 + C40796 * C6301) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C6301) *
                C152475) *
               C152159 * C1401 -
           (((C25913 + C25914) * C152089 + (C25915 + C25916) * C6301) *
                C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C6301) *
                C152475) *
               C152159 * C152499) *
              C152526 +
          (((C23457 * C6301 + (C23452 + C23451) * C152089) * C152475 +
            (C40798 * C6301 + C24471 * C152089) * C152404) *
               C152159 * C1401 -
           (((C24816 + C24817) * C152089 + C41725 * C6301) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C6301) * C152475) *
               C152159 * C1402 +
           ((C23763 * C6301 + (C23761 + C23760) * C152089) * C152475 +
            ((C25914 + C25913) * C6301 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C6301 +
            (C23447 + C23448) * C152089) *
               C152475 +
           ((C40808 + C40809) * C6301 + C40786 * C152089) * C152404) *
              C152159 * C1489 -
          ((C41724 * C152089 + (C41731 + C41730) * C6301) * C152404 +
           ((C23752 + C23753) * C152089 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C6301) *
               C152475) *
              C152159 * C1490 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C6301 +
            (C23754 + C23755) * C152089) *
               C152475 +
           ((C23382 * C1699 - C23383 * C1680 - C23382 * C1700 +
             C152474 * C1716 + C23384 * C2235 - C23385 * C2231 -
             C23384 * C2236 + C152376 * C2243) *
                C6301 +
            (C25916 + C25915) * C152089) *
               C152404) *
              C152159 * C1491 -
          (((C23384 * C8343 - C23385 * C8335 - C23384 * C8344 +
             C152376 * C8353 + C23382 * C2237 - C23383 * C2232 -
             C23382 * C2238 + C152474 * C2244) *
                C152089 +
            (C23384 * C8345 - C23385 * C8336 - C23384 * C8346 +
             C152376 * C8354 + C23382 * C2235 - C23383 * C2231 -
             C23382 * C2236 + C152474 * C2243) *
                C6301) *
               C152404 +
           ((C25597 + C25598) * C152089 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C6301) *
               C152475) *
              C152159 * C1492 +
          (((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 +
             C152474 * C1523 + C23384 * C8105 - C23385 * C8100 -
             C23384 * C8106 + C152376 * C8112) *
                C6301 +
            (C23382 * C1513 - C23383 * C1500 - C23382 * C1514 +
             C152474 * C1524 + C23384 * C8103 - C23385 * C8099 -
             C23384 * C8104 + C152376 * C8111) *
                C152089) *
               C152475 +
           ((C23382 * C8345 - C23383 * C8336 - C23382 * C8346 +
             C152474 * C8354 + C23384 * C9087 - C23385 * C9085 -
             C23384 * C9088 + C152376 * C9091) *
                C6301 +
            (C23382 * C8343 - C23383 * C8335 - C23382 * C8344 +
             C152474 * C8353 + C23384 * C9089 - C23385 * C9086 -
             C23384 * C9090 + C152376 * C9092) *
                C152089) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152200 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152207 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C3799) *
              C152118 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152207 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152200 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C3799) *
              C152127 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152200 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152207 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152200 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152207 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C3799) *
              C152118 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152207 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152200 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C3799) *
              C152127 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C152200 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C152207 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C152200 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C152207 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C152159 * C3799) *
              C152118 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C16167 + C16168) * C14962 + C18409 * C14963) *
               C152159 * C152207 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C152200 -
           ((C17297 + C17296) * C14963 + (C17295 + C17294) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C3799) *
              C152127 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152159 * C152200 -
           ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C152207 +
           ((C463 * C6301 + C464 * C152089) * C14961 +
            (C2100 * C6301 + C2099 * C152089) * C14962 +
            (C15196 * C6301 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C14963) *
               C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152458 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152200 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152458) *
               C152207 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C6301 +
             (C6687 + C6688 + C6689) * C152089) *
                C152340 * C152458 -
            ((C8889 + C8890 + C8891) * C152089 +
             (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
              C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
              C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                 C6301) *
                C152340 * C152246) *
               C3799) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152458) *
               C152200 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152458 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152207 +
           (((C8891 + C8890 + C8889) * C6301 +
             (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
              C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
              C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C6693 + C6694 + C6695) * C152089 +
             (C6689 + C6688 + C6687) * C6301) *
                C152340 * C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152458 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C152200 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152458) *
               C152207 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
             C462 * C123 + C463 * C124 + C464 * C125) *
                C152340 * C152458 -
            (C2099 * C125 + C2100 * C124 + C2101 * C123 +
             (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C122) *
                C152340 * C152246) *
               C3799) *
              C3455 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152458) *
               C152200 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152458 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152207 +
           ((C2101 * C122 + C2100 * C123 + C2099 * C124 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C125) *
                C152340 * C152246 -
            (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
                C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C152458 -
            (C18084 * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152246) *
               C152200 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             C18818 * C14963) *
                C152246 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C152458) *
               C152207 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C6301 +
              C462 * C152089) *
                 C14961 +
             (C16791 + C16761) * C14962 + C16795 * C14963) *
                C152458 -
            ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
             (C16761 + C16791) * C14961) *
                C152246) *
               C3799) *
              C3455 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             C18613 * C14963) *
                C152246 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C152458) *
               C152200 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + C18409 * C14963) *
                C152458 -
            ((C18410 + C18411) * C14963 + (C16170 + C16169) * C14962 +
             (C16168 + C16167) * C14961) *
                C152246) *
               C152207 +
           (((C17294 + C17295) * C14961 + (C17296 + C17297) * C14962 +
             (C16788 * C6301 + (C134 * C10185 - C135 * C10184 - C134 * C10186 +
                                C152324 * C10187) *
                                   C152089) *
                 C14963) *
                C152246 -
            ((C17297 + C17296) * C14963 + (C17295 + C17294) * C14962 +
             (C463 * C152089 + C462 * C6301) * C14961) *
                C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C152159 * C3315 -
               (C459 * C125 + C460 * C124 + C461 * C123 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C122) *
                   C152340 * C152159 * C152204) *
                  C152552 +
              ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) *
                   C152340 * C152159 * C152204 -
               (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                   C152340 * C152159 * C3315) *
                  C152545 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                   C152340 * C152159 * C3315 -
               (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) *
                   C152340 * C152159 * C152204) *
                  C152528 +
              ((C459 * C122 + C465 * C123 + C866 * C124 +
                (C134 * C856 - C135 * C855 - C134 * C857 + C152324 * C858) *
                    C125) *
                   C152340 * C152159 * C152204 -
               (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
                   C152340 * C152159 * C3315) *
                  C152503) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C152159 * C152553 -
               (C459 * C125 + C460 * C124 + C461 * C123 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C122) *
                   C152340 * C152159 * C152549 +
               ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                    C122 +
                C462 * C123 + C463 * C124 + C464 * C125) *
                   C152340 * C152159 * C152535 -
               (C1880 * C125 + C1881 * C124 + C1882 * C123 +
                (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                    C122) *
                   C152340 * C152159 * C152509) *
                  C3455 +
              ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) *
                   C152340 * C152159 * C152549 -
               (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                   C152340 * C152159 * C152553 -
               (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) *
                   C152340 * C152159 * C152535 +
               (C1882 * C122 + C1881 * C123 + C1880 * C124 +
                (C134 * C1858 - C135 * C1857 - C134 * C1859 + C152324 * C1860) *
                    C125) *
                   C152340 * C152159 * C152509) *
                  C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152547 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152532 +
            ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
             C715 * C123 + C716 * C124 + C717 * C125) *
                C152340 * C152502) *
               C3315 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152532 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152547 -
            (C2878 * C125 + C2879 * C124 + C2880 * C123 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C122) *
                C152340 * C152502) *
               C152204) *
              C3455 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152532 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152547 -
            (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
                C152502) *
               C3315 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152547 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152532 +
            (C2880 * C122 + C2879 * C123 + C2878 * C124 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C125) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C3315 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152204) *
              C152552 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152204 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C3315) *
              C152545 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C3315 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152204) *
              C152528 +
          (((C7212 + C7211 + C7210) * C6301 +
            (C6303 * C390 - C6304 * C370 - C6303 * C391 + C6298 * C406 +
             C6305 * C392 - C6306 * C371 - C6305 * C393 + C6299 * C407 +
             C6307 * C1858 - C6308 * C1857 - C6307 * C1859 + C6300 * C1860) *
                C152089) *
               C152340 * C152159 * C152204 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152553 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152549 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152535 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C152159 * C152509) *
              C3455 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152549 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152553 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152535 +
           ((C8576 + C8575 + C8574) * C6301 +
            (C6303 * C1505 - C6304 * C1496 - C6303 * C1506 + C6298 * C1520 +
             C6305 * C1515 - C6306 * C1501 - C6305 * C1516 + C6299 * C1525 +
             C6307 * C8552 - C6308 * C8551 - C6307 * C8553 + C6300 * C8554) *
                C152089) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152547 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152532 +
            ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
              C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
              C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                 C6301 +
             (C6989 + C6990 + C6991) * C152089) *
                C152340 * C152502) *
               C3315 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152532 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152547 -
            ((C9988 + C9989 + C9990) * C152089 +
             (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
              C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
              C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                 C6301) *
                C152340 * C152502) *
               C152204) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152532 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152547 -
            ((C6995 + C6996 + C6997) * C152089 +
             (C6991 + C6990 + C6989) * C6301) *
                C152340 * C152502) *
               C3315 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152547 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152532 +
            ((C9990 + C9989 + C9988) * C6301 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152089) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C3315 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C152204) *
              C152552 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C16167 + C16168) * C14962 + C18409 * C14963) *
               C152159 * C152204 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C3315) *
              C152545 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152159 * C3315 -
           ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C152204) *
              C152528 +
          (((C459 * C6301 + C465 * C152089) * C14961 +
            (C1254 * C6301 + C1255 * C152089) * C14962 +
            (C2878 * C6301 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C152089) *
                C14963) *
               C152159 * C152204 -
           ((C15862 + C15861) * C14963 + (C15860 + C15859) * C14962 +
            (C208 * C152089 + C207 * C6301) * C14961) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C152553 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C152549 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C152159 * C152535 -
           ((C17501 + C17509) * C14963 + (C17496 + C17508) * C14962 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C6301) *
                C14961) *
               C152159 * C152509) *
              C3455 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C16167 + C16168) * C14962 + C18409 * C14963) *
               C152159 * C152549 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C152553 -
           ((C17297 + C17296) * C14963 + (C17295 + C17294) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C152535 +
           ((C1882 * C6301 + C1881 * C152089) * C14961 +
            (C17003 * C6301 +
             (C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                 C152089) *
                C14962 +
            (C17002 * C6301 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C152089) *
                C14963) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C152547 -
            (C18084 * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152532 +
            (C15470 * C14961 + (C15469 + C15425) * C14962 + C18110 * C14963) *
                C152502) *
               C3315 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             C18818 * C14963) *
                C152532 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C152547 -
            ((C18819 + C18827) * C14963 + (C16755 + C16790) * C14962 +
             C16756 * C14961) *
                C152502) *
               C152204) *
              C3455 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             C18613 * C14963) *
                C152532 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C152547 -
            ((C18614 + C18615) * C14963 + (C15439 + C15438) * C14962 +
             C15454 * C14961) *
                C152502) *
               C3315 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + C18409 * C14963) *
                C152547 -
            ((C18410 + C18411) * C14963 + (C16170 + C16169) * C14962 +
             (C16168 + C16167) * C14961) *
                C152532 +
            (C18409 * C14961 + (C18411 + C18410) * C14962 +
             (C18414 * C6301 + (C134 * C18401 - C135 * C18400 - C134 * C18402 +
                                C152324 * C18403) *
                                   C152089) *
                 C14963) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152458 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C3315 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152458) *
               C152204) *
              C152118 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152458) *
               C3315 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152458 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          ((((C6387 + C6386 + C6385) * C6301 +
             (C6388 + C6389 + C6390) * C152089) *
                C152340 * C152458 -
            ((C7425 + C7426 + C7427) * C152089 +
             (C6994 + C6993 + C6992) * C6301) *
                C152340 * C152246) *
               C3315 +
           (((C7759 + C7758 + C7757) * C6301 +
             (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
              C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
              C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C7210 + C7211 + C7212) * C152089 +
             (C6692 + C6691 + C6690) * C6301) *
                C152340 * C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152458 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C3315 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152458) *
               C152204) *
              C152118 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152458) *
               C3315 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152458 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          (((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
                C152458 -
            (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
                C152246) *
               C3315 +
           ((C1253 * C122 + C1254 * C123 + C1255 * C124 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C125) *
                C152340 * C152246 -
            (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
                C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C152458 -
            (C18084 * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152246) *
               C3315 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             C18818 * C14963) *
                C152246 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C152458) *
               C152204) *
              C152118 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             C18613 * C14963) *
                C152246 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C152458) *
               C3315 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + C18409 * C14963) *
                C152458 -
            ((C18410 + C18411) * C14963 + (C16170 + C16169) * C14962 +
             (C16168 + C16167) * C14961) *
                C152246) *
               C152204) *
              C152127 +
          ((((C206 * C6301 + C207 * C152089) * C14961 +
             (C15444 + C15445) * C14962 + C15456 * C14963) *
                C152458 -
            ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
             (C15445 + C15444) * C14961) *
                C152246) *
               C3315 +
           (((C16175 + C16176) * C14961 + (C16177 + C16178) * C14962 +
             (C16190 * C6301 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C152089) *
                 C14963) *
                C152246 -
            ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
             (C459 * C152089 + C460 * C6301) * C14961) *
                C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152553 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152549 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152535 -
           (C1880 * C125 + C1881 * C124 + C1882 * C123 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C122) *
               C152340 * C152159 * C152509) *
              C3455 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152549 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152553 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152535 +
           (C1882 * C122 + C1881 * C123 + C1880 * C124 +
            (C134 * C1858 - C135 * C1857 - C134 * C1859 + C152324 * C1860) *
                C125) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C3315 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152204) *
              C152552 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152204 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C3315) *
              C152545 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C3315 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C152204) *
              C152528 +
          ((C459 * C122 + C465 * C123 + C866 * C124 +
            (C134 * C856 - C135 * C855 - C134 * C857 + C152324 * C858) * C125) *
               C152340 * C152159 * C152204 -
           (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C3315 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152204) *
              C152552 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152204 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C3315) *
              C152545 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C3315 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152204) *
              C152528 +
          (((C7212 + C7211 + C7210) * C6301 +
            (C6303 * C390 - C6304 * C370 - C6303 * C391 + C6298 * C406 +
             C6305 * C392 - C6306 * C371 - C6305 * C393 + C6299 * C407 +
             C6307 * C1858 - C6308 * C1857 - C6307 * C1859 + C6300 * C1860) *
                C152089) *
               C152340 * C152159 * C152204 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152553 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152549 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152535 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C152159 * C152509) *
              C3455 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152549 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152553 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152535 +
           ((C8576 + C8575 + C8574) * C6301 +
            (C6303 * C1505 - C6304 * C1496 - C6303 * C1506 + C6298 * C1520 +
             C6305 * C1515 - C6306 * C1501 - C6305 * C1516 + C6299 * C1525 +
             C6307 * C8552 - C6308 * C8551 - C6307 * C8553 + C6300 * C8554) *
                C152089) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C3315 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C152204) *
              C152552 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C16167 + C16168) * C14962 + C18409 * C14963) *
               C152159 * C152204 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C3315) *
              C152545 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152159 * C3315 -
           ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C152204) *
              C152528 +
          (((C459 * C6301 + C465 * C152089) * C14961 +
            (C1254 * C6301 + C1255 * C152089) * C14962 +
            (C2878 * C6301 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C152089) *
                C14963) *
               C152159 * C152204 -
           ((C15862 + C15861) * C14963 + (C15860 + C15859) * C14962 +
            (C208 * C152089 + C207 * C6301) * C14961) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C152553 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C152549 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C152159 * C152535 -
           ((C17501 + C17509) * C14963 + (C17496 + C17508) * C14962 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C6301) *
                C14961) *
               C152159 * C152509) *
              C3455 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C16167 + C16168) * C14962 + C18409 * C14963) *
               C152159 * C152549 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C152553 -
           ((C17297 + C17296) * C14963 + (C17295 + C17294) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C152535 +
           ((C1882 * C6301 + C1881 * C152089) * C14961 +
            (C17003 * C6301 +
             (C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                 C152089) *
                C14962 +
            (C17002 * C6301 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C152089) *
                C14963) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C4321 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152200 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C4321) *
               C152207 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C6301 +
             (C6687 + C6688 + C6689) * C152089) *
                C152340 * C4321 -
            ((C8889 + C8890 + C8891) * C152089 +
             (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
              C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
              C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                 C6301) *
                C152340 * C152246) *
               C3799) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C4321) *
               C152200 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C4321 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152207 +
           (((C8891 + C8890 + C8889) * C6301 +
             (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
              C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
              C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C6693 + C6694 + C6695) * C152089 +
             (C6689 + C6688 + C6687) * C6301) *
                C152340 * C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C4321 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C152200 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C4321) *
               C152207 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
             C462 * C123 + C463 * C124 + C464 * C125) *
                C152340 * C4321 -
            (C2099 * C125 + C2100 * C124 + C2101 * C123 +
             (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C122) *
                C152340 * C152246) *
               C3799) *
              C152443 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C4321) *
               C152200 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C4321 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152207 +
           ((C2101 * C122 + C2100 * C123 + C2099 * C124 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C125) *
                C152340 * C152246 -
            (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
                C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C4321 -
            (C18084 * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152246) *
               C152200 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             C18818 * C14963) *
                C152246 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C4321) *
               C152207 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C6301 +
              C462 * C152089) *
                 C14961 +
             (C16791 + C16761) * C14962 + C16795 * C14963) *
                C4321 -
            ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
             (C16761 + C16791) * C14961) *
                C152246) *
               C3799) *
              C152443 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             C18613 * C14963) *
                C152246 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C4321) *
               C152200 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + C18409 * C14963) *
                C4321 -
            ((C18410 + C18411) * C14963 + (C16170 + C16169) * C14962 +
             (C16168 + C16167) * C14961) *
                C152246) *
               C152207 +
           (((C17294 + C17295) * C14961 + (C17296 + C17297) * C14962 +
             (C16788 * C6301 + (C134 * C10185 - C135 * C10184 - C134 * C10186 +
                                C152324 * C10187) *
                                   C152089) *
                 C14963) *
                C152246 -
            ((C17297 + C17296) * C14963 + (C17295 + C17294) * C14962 +
             (C463 * C152089 + C462 * C6301) * C14961) *
                C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152242 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152249 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C4993) *
              C152200 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152249 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152242 -
           ((C9988 + C9989 + C9990) * C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C4993) *
              C152207 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152242 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152249 +
           ((C6303 * C1701 - C6304 * C1681 - C6303 * C1702 + C6298 * C1717 +
             C6305 * C8341 - C6306 * C8334 - C6305 * C8342 + C6299 * C8352 +
             C6307 * C8347 - C6308 * C8337 - C6307 * C8348 + C6300 * C8355) *
                C6301 +
            (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
             C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
             C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                C152089) *
               C152340 * C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152242 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152249 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C4993) *
              C152200 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152249 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152242 -
           (C2878 * C125 + C2879 * C124 + C2880 * C123 +
            (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                C122) *
               C152340 * C4993) *
              C152207 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152242 -
           (C2099 * C125 + C2100 * C124 + C2101 * C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C152249 +
           ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                C122 +
            (C134 * C1703 - C135 * C1682 - C134 * C1704 + C152324 * C1718) *
                C123 +
            (C134 * C1705 - C135 * C1683 - C134 * C1706 + C152324 * C1719) *
                C124 +
            (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                C125) *
               C152340 * C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152242 -
           (C18084 * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152249 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 + C18110 * C14963) *
               C4993) *
              C152200 +
          (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
            C18818 * C14963) *
               C152249 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152242 -
           ((C18819 + C18827) * C14963 + (C16755 + C16790) * C14962 +
            C16756 * C14961) *
               C4993) *
              C152207 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C152242 -
           ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
            (C16761 + C16791) * C14961) *
               C152249 +
           (C16795 * C14961 + (C16794 + C16793) * C14962 +
            ((C134 * C9663 - C135 * C9654 - C134 * C9664 + C152324 * C9672) *
                 C6301 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152089) *
                C14963) *
               C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C122 +
                 C205 * C123 + C206 * C124 + C207 * C125) *
                    C152340 * C4321 -
                (C712 * C125 + C713 * C124 + C714 * C123 +
                 (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                     C122) *
                    C152340 * C152246) *
                   C3315 +
               (((C134 * C1209 - C135 * C1203 - C134 * C1210 +
                  C152324 * C1221) *
                     C122 +
                 C1252 * C123 + C1253 * C124 + C1254 * C125) *
                    C152340 * C152246 -
                (C459 * C125 + C460 * C124 + C461 * C123 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C122) *
                    C152340 * C4321) *
                   C152204) *
                  C152543 +
              (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) *
                    C152340 * C152246 -
                (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                    C152340 * C4321) *
                   C3315 +
               ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) *
                    C152340 * C4321 -
                (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                    C152340 * C152246) *
                   C152204) *
                  C152526 +
              (((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                    C152340 * C4321 -
                (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) *
                    C152340 * C152246) *
                   C3315 +
               ((C1253 * C122 + C1254 * C123 + C1255 * C124 +
                 (C134 * C1219 - C135 * C1208 - C134 * C1220 +
                  C152324 * C1226) *
                     C125) *
                    C152340 * C152246 -
                (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) *
                    C152340 * C4321) *
                   C152204) *
                  C152493) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C4321 -
               (C712 * C125 + C713 * C124 + C714 * C123 +
                (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                    C122) *
                   C152340 * C152246) *
                  C152553 +
              (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                    C122 +
                C1252 * C123 + C1253 * C124 + C1254 * C125) *
                   C152340 * C152246 -
               (C459 * C125 + C460 * C124 + C461 * C123 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C122) *
                   C152340 * C4321) *
                  C152549 +
              (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                    C122 +
                C462 * C123 + C463 * C124 + C464 * C125) *
                   C152340 * C4321 -
               (C2099 * C125 + C2100 * C124 + C2101 * C123 +
                (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                    C122) *
                   C152340 * C152246) *
                  C152535 +
              (((C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                    C122 +
                (C134 * C2237 - C135 * C2232 - C134 * C2238 + C152324 * C2244) *
                    C123 +
                (C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                    C124 +
                (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                    C125) *
                   C152340 * C152246 -
               (C1880 * C125 + C1881 * C124 + C1882 * C123 +
                (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                    C122) *
                   C152340 * C4321) *
                  C152509) *
             C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152554 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152551 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152538 -
           (C3037 * C125 + C3038 * C124 + C3039 * C123 +
            (C134 * C2643 - C135 * C2632 - C134 * C2644 + C152324 * C2656) *
                C122) *
               C152340 * C152515) *
              C3315 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152551 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152554 -
           (C2878 * C125 + C2879 * C124 + C2880 * C123 +
            (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                C122) *
               C152340 * C152538 +
           ((C134 * C3173 - C135 * C3169 - C134 * C3174 + C152324 * C3181) *
                C122 +
            (C134 * C3175 - C135 * C3170 - C134 * C3176 + C152324 * C3182) *
                C123 +
            (C134 * C3177 - C135 * C3171 - C134 * C3178 + C152324 * C3183) *
                C124 +
            (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                C125) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C4321 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C3315 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C4321) *
               C3315 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C4321 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          ((((C6387 + C6386 + C6385) * C6301 +
             (C6388 + C6389 + C6390) * C152089) *
                C152340 * C4321 -
            ((C7425 + C7426 + C7427) * C152089 +
             (C6994 + C6993 + C6992) * C6301) *
                C152340 * C152246) *
               C3315 +
           (((C7759 + C7758 + C7757) * C6301 +
             (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
              C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
              C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C7210 + C7211 + C7212) * C152089 +
             (C6692 + C6691 + C6690) * C6301) *
                C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C4321 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C152553 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152246 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C4321) *
              C152549 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C4321 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152246) *
              C152535 +
          (((C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243 +
             C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
             C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091) *
                C6301 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152089) *
               C152340 * C152246 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152554 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152551 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152538 -
           ((C10207 + C10208 + C10209) * C152089 +
            (C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656) *
                C6301) *
               C152340 * C152515) *
              C3315 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152551 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152554 -
           ((C9988 + C9989 + C9990) * C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C152538 +
           ((C6303 * C3173 - C6304 * C3169 - C6303 * C3174 + C6298 * C3181 +
             C6305 * C9659 - C6306 * C9652 - C6305 * C9660 + C6299 * C9670 +
             C6307 * C10405 - C6308 * C10403 - C6307 * C10406 +
             C6300 * C10409) *
                C6301 +
            (C6303 * C3175 - C6304 * C3170 - C6303 * C3176 + C6298 * C3182 +
             C6305 * C9657 - C6306 * C9651 - C6305 * C9658 + C6299 * C9669 +
             C6307 * C10407 - C6308 * C10404 - C6307 * C10408 +
             C6300 * C10410) *
                C152089) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C4321 -
            (C18084 * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152246) *
               C3315 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             C18818 * C14963) *
                C152246 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C4321) *
               C152204) *
              C152543 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             C18613 * C14963) *
                C152246 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C4321) *
               C3315 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + C18409 * C14963) *
                C4321 -
            ((C18410 + C18411) * C14963 + (C16170 + C16169) * C14962 +
             (C16168 + C16167) * C14961) *
                C152246) *
               C152204) *
              C152526 +
          ((((C206 * C6301 + C207 * C152089) * C14961 +
             (C15444 + C15445) * C14962 + C15456 * C14963) *
                C4321 -
            ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
             (C15445 + C15444) * C14961) *
                C152246) *
               C3315 +
           (((C16175 + C16176) * C14961 + (C16177 + C16178) * C14962 +
             (C16190 * C6301 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C152089) *
                 C14963) *
                C152246 -
            ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
             (C459 * C152089 + C460 * C6301) * C14961) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C4321 -
           (C18084 * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152246) *
              C152553 +
          (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
            C18818 * C14963) *
               C152246 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C4321) *
              C152549 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C4321 -
           ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
            (C16761 + C16791) * C14961) *
               C152246) *
              C152535 +
          (((C17508 + C17496) * C14961 + (C17509 + C17501) * C14962 +
            ((C134 * C10405 - C135 * C10403 - C134 * C10406 +
              C152324 * C10409) *
                 C6301 +
             (C134 * C10407 - C135 * C10404 - C134 * C10408 +
              C152324 * C10410) *
                 C152089) *
                C14963) *
               C152246 -
           ((C17501 + C17509) * C14963 + (C17496 + C17508) * C14962 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C6301) *
                C14961) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152554 -
           (C18084 * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152551 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 + C18110 * C14963) *
               C152538 -
           ((C18108 + C18109) * C14963 + (C18089 + C18107) * C14962 +
            C18084 * C14961) *
               C152515) *
              C3315 +
          (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
            C18818 * C14963) *
               C152551 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152554 -
           ((C18819 + C18827) * C14963 + (C16755 + C16790) * C14962 +
            C16756 * C14961) *
               C152538 +
           (C18818 * C14961 + (C18827 + C18819) * C14962 +
            ((C134 * C18811 - C135 * C18809 - C134 * C18812 +
              C152324 * C18815) *
                 C6301 +
             (C134 * C18813 - C135 * C18810 - C134 * C18814 +
              C152324 * C18816) *
                 C152089) *
                C14963) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152242 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152249 +
            ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
              C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
              C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                 C6301 +
             (C6989 + C6990 + C6991) * C152089) *
                C152340 * C4993) *
               C3315 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152249 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152242 -
            ((C9988 + C9989 + C9990) * C152089 +
             (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
              C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
              C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                 C6301) *
                C152340 * C4993) *
               C152204) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152249 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152242 -
            ((C6995 + C6996 + C6997) * C152089 +
             (C6991 + C6990 + C6989) * C6301) *
                C152340 * C4993) *
               C3315 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152242 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152249 +
            ((C9990 + C9989 + C9988) * C6301 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152089) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152242 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152249 +
            ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
             C715 * C123 + C716 * C124 + C717 * C125) *
                C152340 * C4993) *
               C3315 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152249 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152242 -
            (C2878 * C125 + C2879 * C124 + C2880 * C123 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C122) *
                C152340 * C4993) *
               C152204) *
              C152443 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152249 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152242 -
            (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
                C4993) *
               C3315 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152242 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152249 +
            (C2880 * C122 + C2879 * C123 + C2878 * C124 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C125) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C152242 -
            (C18084 * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152249 +
            (C15470 * C14961 + (C15469 + C15425) * C14962 + C18110 * C14963) *
                C4993) *
               C3315 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             C18818 * C14963) *
                C152249 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C152242 -
            ((C18819 + C18827) * C14963 + (C16755 + C16790) * C14962 +
             C16756 * C14961) *
                C4993) *
               C152204) *
              C152443 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             C18613 * C14963) *
                C152249 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C152242 -
            ((C18614 + C18615) * C14963 + (C15439 + C15438) * C14962 +
             C15454 * C14961) *
                C4993) *
               C3315 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + C18409 * C14963) *
                C152242 -
            ((C18410 + C18411) * C14963 + (C16170 + C16169) * C14962 +
             (C16168 + C16167) * C14961) *
                C152249 +
            (C18409 * C14961 + (C18411 + C18410) * C14962 +
             (C18414 * C6301 + (C134 * C18401 - C135 * C18400 - C134 * C18402 +
                                C152324 * C18403) *
                                   C152089) *
                 C14963) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C4321 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152246) *
              C152553 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152246 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C4321) *
              C152549 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C4321 -
           (C2099 * C125 + C2100 * C124 + C2101 * C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C152246) *
              C152535 +
          (((C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                C122 +
            (C134 * C2237 - C135 * C2232 - C134 * C2238 + C152324 * C2244) *
                C123 +
            (C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                C124 +
            (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                C125) *
               C152340 * C152246 -
           (C1880 * C125 + C1881 * C124 + C1882 * C123 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C122) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C4321 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C3315 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C4321) *
               C3315 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C4321 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          (((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
                C4321 -
            (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
                C152246) *
               C3315 +
           ((C1253 * C122 + C1254 * C123 + C1255 * C124 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C125) *
                C152340 * C152246 -
            (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C4321 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C3315 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C4321) *
               C3315 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C4321 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          ((((C6387 + C6386 + C6385) * C6301 +
             (C6388 + C6389 + C6390) * C152089) *
                C152340 * C4321 -
            ((C7425 + C7426 + C7427) * C152089 +
             (C6994 + C6993 + C6992) * C6301) *
                C152340 * C152246) *
               C3315 +
           (((C7759 + C7758 + C7757) * C6301 +
             (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
              C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
              C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C7210 + C7211 + C7212) * C152089 +
             (C6692 + C6691 + C6690) * C6301) *
                C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C4321 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C152553 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152246 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C4321) *
              C152549 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C4321 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152246) *
              C152535 +
          (((C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243 +
             C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
             C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091) *
                C6301 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152089) *
               C152340 * C152246 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C4321 -
            (C18084 * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152246) *
               C3315 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             C18818 * C14963) *
                C152246 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C4321) *
               C152204) *
              C152543 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             C18613 * C14963) *
                C152246 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C4321) *
               C3315 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + C18409 * C14963) *
                C4321 -
            ((C18410 + C18411) * C14963 + (C16170 + C16169) * C14962 +
             (C16168 + C16167) * C14961) *
                C152246) *
               C152204) *
              C152526 +
          ((((C206 * C6301 + C207 * C152089) * C14961 +
             (C15444 + C15445) * C14962 + C15456 * C14963) *
                C4321 -
            ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
             (C15445 + C15444) * C14961) *
                C152246) *
               C3315 +
           (((C16175 + C16176) * C14961 + (C16177 + C16178) * C14962 +
             (C16190 * C6301 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C152089) *
                 C14963) *
                C152246 -
            ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
             (C459 * C152089 + C460 * C6301) * C14961) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C4321 -
           (C18084 * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152246) *
              C152553 +
          (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
            C18818 * C14963) *
               C152246 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C4321) *
              C152549 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C4321 -
           ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
            (C16761 + C16791) * C14961) *
               C152246) *
              C152535 +
          (((C17508 + C17496) * C14961 + (C17509 + C17501) * C14962 +
            ((C134 * C10405 - C135 * C10403 - C134 * C10406 +
              C152324 * C10409) *
                 C6301 +
             (C134 * C10407 - C135 * C10404 - C134 * C10408 +
              C152324 * C10410) *
                 C152089) *
                C14963) *
               C152246 -
           ((C17501 + C17509) * C14963 + (C17496 + C17508) * C14962 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C6301) *
                C14961) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C152159 * C152457 -
               (C459 * C125 + C460 * C124 + C461 * C123 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C122) *
                   C152340 * C152159 * C152204) *
                  C851 +
              ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) *
                   C152340 * C152159 * C152204 -
               (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                   C152340 * C152159 * C152457) *
                  C852 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                   C152340 * C152159 * C152457 -
               (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) *
                   C152340 * C152159 * C152204) *
                  C853 +
              ((C459 * C122 + C465 * C123 + C866 * C124 +
                (C134 * C856 - C135 * C855 - C134 * C857 + C152324 * C858) *
                    C125) *
                   C152340 * C152159 * C152204 -
               (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
                   C152340 * C152159 * C152457) *
                  C152503) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C152159 * C1851 -
               (C459 * C125 + C460 * C124 + C461 * C123 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C122) *
                   C152340 * C152159 * C1852 +
               ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                    C122 +
                C462 * C123 + C463 * C124 + C464 * C125) *
                   C152340 * C152159 * C1853 -
               (C1880 * C125 + C1881 * C124 + C1882 * C123 +
                (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                    C122) *
                   C152340 * C152159 * C152509) *
                  C152443 +
              ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) *
                   C152340 * C152159 * C1852 -
               (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                   C152340 * C152159 * C1851 -
               (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) *
                   C152340 * C152159 * C1853 +
               (C1882 * C122 + C1881 * C123 + C1880 * C124 +
                (C134 * C1858 - C135 * C1857 - C134 * C1859 + C152324 * C1860) *
                    C125) *
                   C152340 * C152159 * C152509) *
                  C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C2393 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C2394 +
            ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
             C715 * C123 + C716 * C124 + C717 * C125) *
                C152340 * C152502) *
               C152457 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C2394 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C2393 -
            (C2878 * C125 + C2879 * C124 + C2880 * C123 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C122) *
                C152340 * C152502) *
               C152204) *
              C152443 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C2394 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C2393 -
            (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
                C152502) *
               C152457 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C2393 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C2394 +
            (C2880 * C122 + C2879 * C123 + C2878 * C124 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C125) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152457 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152204) *
              C851 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152204 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152457) *
              C852 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152457 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152204) *
              C853 +
          (((C7212 + C7211 + C7210) * C6301 +
            (C6303 * C390 - C6304 * C370 - C6303 * C391 + C6298 * C406 +
             C6305 * C392 - C6306 * C371 - C6305 * C393 + C6299 * C407 +
             C6307 * C1858 - C6308 * C1857 - C6307 * C1859 + C6300 * C1860) *
                C152089) *
               C152340 * C152159 * C152204 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C1851 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C1852 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C1853 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C152159 * C152509) *
              C152443 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C1852 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C1851 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C1853 +
           ((C8576 + C8575 + C8574) * C6301 +
            (C6303 * C1505 - C6304 * C1496 - C6303 * C1506 + C6298 * C1520 +
             C6305 * C1515 - C6306 * C1501 - C6305 * C1516 + C6299 * C1525 +
             C6307 * C8552 - C6308 * C8551 - C6307 * C8553 + C6300 * C8554) *
                C152089) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C2393 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C2394 +
            ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
              C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
              C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                 C6301 +
             (C6989 + C6990 + C6991) * C152089) *
                C152340 * C152502) *
               C152457 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C2394 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C2393 -
            ((C9988 + C9989 + C9990) * C152089 +
             (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
              C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
              C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                 C6301) *
                C152340 * C152502) *
               C152204) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C2394 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C2393 -
            ((C6995 + C6996 + C6997) * C152089 +
             (C6991 + C6990 + C6989) * C6301) *
                C152340 * C152502) *
               C152457 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C2393 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C2394 +
            ((C9990 + C9989 + C9988) * C6301 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152089) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C152457 -
           ((C2880 * C152089 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C6301) *
                C14963 +
            (C1252 * C152089 +
             (C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C6301) *
                C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C152204) *
              C851 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C1252 * C6301 + C1253 * C152089) * C14962 +
            (C2880 * C6301 + C2879 * C152089) * C14963) *
               C152159 * C152204 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C152457) *
              C852 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152159 * C152457 -
           ((C2878 * C152089 + C2879 * C6301) * C14963 +
            (C1254 * C152089 + C1253 * C6301) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C152204) *
              C853 +
          (((C459 * C6301 + C465 * C152089) * C14961 +
            (C1254 * C6301 + C1255 * C152089) * C14962 +
            (C2878 * C6301 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C152089) *
                C14963) *
               C152159 * C152204 -
           ((C719 * C152089 + C717 * C6301) * C14963 +
            (C718 * C152089 + C712 * C6301) * C14962 +
            (C208 * C152089 + C207 * C6301) * C14961) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C1851 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C1852 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C152159 * C1853 -
           ((C17002 * C152089 +
             (C134 * C8341 - C135 * C8334 - C134 * C8342 + C152324 * C8352) *
                 C6301) *
                C14963 +
            (C17003 * C152089 +
             (C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                 C6301) *
                C14962 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C6301) *
                C14961) *
               C152159 * C152509) *
              C152443 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C16167 + C16168) * C14962 + (C16169 + C16170) * C14963) *
               C152159 * C1852 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C1851 -
           ((C15196 * C152089 + C15195 * C6301) * C14963 +
            (C2100 * C152089 + C2101 * C6301) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C1853 +
           ((C1882 * C6301 + C1881 * C152089) * C14961 +
            (C17003 * C6301 +
             (C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                 C152089) *
                C14962 +
            (C17002 * C6301 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C152089) *
                C14963) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C2393 -
            (C18084 * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C2394 +
            (C15470 * C14961 + (C15469 + C15425) * C14962 + C18110 * C14963) *
                C152502) *
               C152457 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             (C16790 + C16755) * C14963) *
                C2394 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C2393 -
            ((C18414 * C152089 +
              (C134 * C9661 - C135 * C9653 - C134 * C9662 + C152324 * C9671) *
                  C6301) *
                 C14963 +
             (C16755 + C16790) * C14962 + C16756 * C14961) *
                C152502) *
               C152204) *
              C152443 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             (C15438 + C15439) * C14963) *
                C2394 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C2393 -
            ((C15466 * C152089 + C15465 * C6301) * C14963 +
             (C15439 + C15438) * C14962 + C15454 * C14961) *
                C152502) *
               C152457 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + C18409 * C14963) *
                C2393 -
            ((C18410 + C18411) * C14963 + (C16170 + C16169) * C14962 +
             (C16168 + C16167) * C14961) *
                C2394 +
            (C18409 * C14961 + (C18411 + C18410) * C14962 +
             (C18414 * C6301 + (C134 * C18401 - C135 * C18400 - C134 * C18402 +
                                C152324 * C18403) *
                                   C152089) *
                 C14963) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C122 +
                 C205 * C123 + C206 * C124 + C207 * C125) *
                    C152340 * C152458 -
                (C712 * C125 + C713 * C124 + C714 * C123 +
                 (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                     C122) *
                    C152340 * C152246) *
                   C152457 +
               (((C134 * C1209 - C135 * C1203 - C134 * C1210 +
                  C152324 * C1221) *
                     C122 +
                 C1252 * C123 + C1253 * C124 + C1254 * C125) *
                    C152340 * C152246 -
                (C459 * C125 + C460 * C124 + C461 * C123 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C122) *
                    C152340 * C152458) *
                   C152204) *
                  C359 +
              (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) *
                    C152340 * C152246 -
                (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                    C152340 * C152458) *
                   C152457 +
               ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) *
                    C152340 * C152458 -
                (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                    C152340 * C152246) *
                   C152204) *
                  C360 +
              (((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                    C152340 * C152458 -
                (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) *
                    C152340 * C152246) *
                   C152457 +
               ((C1253 * C122 + C1254 * C123 + C1255 * C124 +
                 (C134 * C1219 - C135 * C1208 - C134 * C1220 +
                  C152324 * C1226) *
                     C125) *
                    C152340 * C152246 -
                (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) *
                    C152340 * C152458) *
                   C152204) *
                  C152493) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C152458 -
               (C712 * C125 + C713 * C124 + C714 * C123 +
                (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                    C122) *
                   C152340 * C152246) *
                  C1851 +
              (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                    C122 +
                C1252 * C123 + C1253 * C124 + C1254 * C125) *
                   C152340 * C152246 -
               (C459 * C125 + C460 * C124 + C461 * C123 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C122) *
                   C152340 * C152458) *
                  C1852 +
              (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                    C122 +
                C462 * C123 + C463 * C124 + C464 * C125) *
                   C152340 * C152458 -
               (C2099 * C125 + C2100 * C124 + C2101 * C123 +
                (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                    C122) *
                   C152340 * C152246) *
                  C1853 +
              (((C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                    C122 +
                (C134 * C2237 - C135 * C2232 - C134 * C2238 + C152324 * C2244) *
                    C123 +
                (C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                    C124 +
                (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                    C125) *
                   C152340 * C152246 -
               (C1880 * C125 + C1881 * C124 + C1882 * C123 +
                (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                    C122) *
                   C152340 * C152458) *
                  C152509) *
             C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C3010 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C3011 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C3012 -
           (C3037 * C125 + C3038 * C124 + C3039 * C123 +
            (C134 * C2643 - C135 * C2632 - C134 * C2644 + C152324 * C2656) *
                C122) *
               C152340 * C152515) *
              C152457 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C3011 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C3010 -
           (C2878 * C125 + C2879 * C124 + C2880 * C123 +
            (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                C122) *
               C152340 * C3012 +
           ((C134 * C3173 - C135 * C3169 - C134 * C3174 + C152324 * C3181) *
                C122 +
            (C134 * C3175 - C135 * C3170 - C134 * C3176 + C152324 * C3182) *
                C123 +
            (C134 * C3177 - C135 * C3171 - C134 * C3178 + C152324 * C3183) *
                C124 +
            (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                C125) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152458 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152457 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152458) *
               C152204) *
              C359 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152458) *
               C152457 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152458 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152204) *
              C360 +
          ((((C6387 + C6386 + C6385) * C6301 +
             (C6388 + C6389 + C6390) * C152089) *
                C152340 * C152458 -
            ((C7425 + C7426 + C7427) * C152089 +
             (C6994 + C6993 + C6992) * C6301) *
                C152340 * C152246) *
               C152457 +
           (((C7759 + C7758 + C7757) * C6301 +
             (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
              C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
              C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C7210 + C7211 + C7212) * C152089 +
             (C6692 + C6691 + C6690) * C6301) *
                C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152458 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C1851 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152246 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152458) *
              C1852 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152458 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152246) *
              C1853 +
          (((C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243 +
             C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
             C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091) *
                C6301 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152089) *
               C152340 * C152246 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C3010 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C3011 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C3012 -
           ((C10207 + C10208 + C10209) * C152089 +
            (C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656) *
                C6301) *
               C152340 * C152515) *
              C152457 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C3011 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C3010 -
           ((C9988 + C9989 + C9990) * C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C3012 +
           ((C6303 * C3173 - C6304 * C3169 - C6303 * C3174 + C6298 * C3181 +
             C6305 * C9659 - C6306 * C9652 - C6305 * C9660 + C6299 * C9670 +
             C6307 * C10405 - C6308 * C10403 - C6307 * C10406 +
             C6300 * C10409) *
                C6301 +
            (C6303 * C3175 - C6304 * C3170 - C6303 * C3176 + C6298 * C3182 +
             C6305 * C9657 - C6306 * C9651 - C6305 * C9658 + C6299 * C9669 +
             C6307 * C10407 - C6308 * C10404 - C6307 * C10408 +
             C6300 * C10410) *
                C152089) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C152458 -
            ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152246) *
               C152457 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             ((C134 * C3173 - C135 * C3169 - C134 * C3174 + C152324 * C3181) *
                  C6301 +
              C16189 * C152089) *
                 C14963) *
                C152246 -
            ((C16162 + C16192) * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C152458) *
               C152204) *
              C359 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             (C15438 + C15439) * C14963) *
                C152246 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C152458) *
               C152457 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + (C16169 + C16170) * C14963) *
                C152458 -
            ((C16190 * C152089 + C16189 * C6301) * C14963 +
             (C16170 + C16169) * C14962 + (C16168 + C16167) * C14961) *
                C152246) *
               C152204) *
              C360 +
          ((((C206 * C6301 + C207 * C152089) * C14961 +
             (C15444 + C15445) * C14962 + C15456 * C14963) *
                C152458 -
            ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
             (C15445 + C15444) * C14961) *
                C152246) *
               C152457 +
           (((C16175 + C16176) * C14961 + (C16177 + C16178) * C14962 +
             (C16190 * C6301 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C152089) *
                 C14963) *
                C152246 -
            ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
             (C459 * C152089 + C460 * C6301) * C14961) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152458 -
           ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152246) *
              C1851 +
          (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
            (C16790 + C16755) * C14963) *
               C152246 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152458) *
              C1852 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C152458 -
           ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
            (C16761 + C16791) * C14961) *
               C152246) *
              C1853 +
          (((C17508 + C17496) * C14961 + (C17509 + C17501) * C14962 +
            ((C134 * C10405 - C135 * C10403 - C134 * C10406 +
              C152324 * C10409) *
                 C6301 +
             (C134 * C10407 - C135 * C10404 - C134 * C10408 +
              C152324 * C10410) *
                 C152089) *
                C14963) *
               C152246 -
           ((C17501 + C17509) * C14963 + (C17496 + C17508) * C14962 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C6301) *
                C14961) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C3010 -
           (C18084 * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C3011 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 + C18110 * C14963) *
               C3012 -
           ((C18108 + C18109) * C14963 + (C18089 + C18107) * C14962 +
            C18084 * C14961) *
               C152515) *
              C152457 +
          (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
            C18818 * C14963) *
               C3011 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C3010 -
           ((C18819 + C18827) * C14963 + (C16755 + C16790) * C14962 +
            C16756 * C14961) *
               C3012 +
           (C18818 * C14961 + (C18827 + C18819) * C14962 +
            ((C134 * C18811 - C135 * C18809 - C134 * C18812 +
              C152324 * C18815) *
                 C6301 +
             (C134 * C18813 - C135 * C18810 - C134 * C18814 +
              C152324 * C18816) *
                 C152089) *
                C14963) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                   C122 +
               C205 * C123 + C206 * C124 + C207 * C125) *
                  C152340 * C152159 * C152141 * C129 -
              (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                  C152340 * C152159 * C152141 * C130 +
              (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                  C152340 * C152159 * C152141 * C131 -
              (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
                  C152340 * C152159 * C152141 * C132 +
              (C208 * C122 + C209 * C123 + C210 * C124 +
               (C134 * C158 - C135 * C143 - C134 * C159 + C152324 * C167) *
                   C125) *
                  C152340 * C152159 * C152141 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C152159 * C152546 -
               (C459 * C125 + C460 * C124 + C461 * C123 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C122) *
                   C152340 * C152159 * C152530 +
               ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                    C122 +
                C462 * C123 + C463 * C124 + C464 * C125) *
                   C152340 * C152159 * C152499) *
                  C359 +
              ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) *
                   C152340 * C152159 * C152530 -
               (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                   C152340 * C152159 * C152546 -
               (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) *
                   C152340 * C152159 * C152499) *
                  C360 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                   C152340 * C152159 * C152546 -
               ((C134 * C394 - C135 * C372 - C134 * C395 + C152324 * C408) *
                    C125 +
                C465 * C124 + C459 * C123 + C460 * C122) *
                   C152340 * C152159 * C152530 +
               (C463 * C122 + C464 * C123 + C466 * C124 +
                (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) *
                    C125) *
                   C152340 * C152159 * C152499) *
                  C152493) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C152547 -
               (C712 * C125 + C713 * C124 + C714 * C123 +
                (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                    C122) *
                   C152340 * C152532 +
               ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) *
                    C122 +
                C715 * C123 + C716 * C124 + C717 * C125) *
                   C152340 * C152502) *
                  C152141 * C359 +
              ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) *
                   C152340 * C152532 -
               (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                   C152340 * C152547 -
               (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) *
                   C152340 * C152502) *
                  C152141 * C360 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                   C152340 * C152547 -
               ((C134 * C647 - C135 * C625 - C134 * C648 + C152324 * C661) *
                    C125 +
                C718 * C124 + C712 * C123 + C713 * C122) *
                   C152340 * C152532 +
               (C716 * C122 + C717 * C123 + C719 * C124 +
                (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                    C125) *
                   C152340 * C152502) *
                  C152141 * C152493) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C152159 * C1401 -
               (C459 * C125 + C460 * C124 + C461 * C123 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C122) *
                   C152340 * C152159 * C1402 +
               ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                    C122 +
                C462 * C123 + C463 * C124 + C464 * C125) *
                   C152340 * C152159 * C152499) *
                  C152543 +
              ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) *
                   C152340 * C152159 * C1402 -
               (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                   C152340 * C152159 * C1401 -
               (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) *
                   C152340 * C152159 * C152499) *
                  C152526 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                   C152340 * C152159 * C1401 -
               (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) *
                   C152340 * C152159 * C1402 +
               (C463 * C122 + C464 * C123 + C466 * C124 +
                (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) *
                    C125) *
                   C152340 * C152159 * C152499) *
                  C152493) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                   C122 +
               C205 * C123 + C206 * C124 + C207 * C125) *
                  C152340 * C152159 * C1489 -
              (C459 * C125 + C460 * C124 + C461 * C123 +
               (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                   C122) *
                  C152340 * C152159 * C1490 +
              ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                   C122 +
               C462 * C123 + C463 * C124 + C464 * C125) *
                  C152340 * C152159 * C1491 -
              ((C134 * C1503 - C135 * C1495 - C134 * C1504 + C152324 * C1519) *
                   C125 +
               (C134 * C1505 - C135 * C1496 - C134 * C1506 + C152324 * C1520) *
                   C124 +
               (C134 * C1507 - C135 * C1497 - C134 * C1508 + C152324 * C1521) *
                   C123 +
               (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                   C122) *
                  C152340 * C152159 * C1492 +
              ((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                   C122 +
               (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                   C123 +
               (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                   C124 +
               (C134 * C1517 - C135 * C1502 - C134 * C1518 + C152324 * C1526) *
                   C125) *
                  C152340 * C152159 * C1493) *
             C152113 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C152547 -
               (C712 * C125 + C713 * C124 + C714 * C123 +
                (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                    C122) *
                   C152340 * C152532 +
               ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) *
                    C122 +
                C715 * C123 + C716 * C124 + C717 * C125) *
                   C152340 * C152502) *
                  C1401 +
              (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                    C122 +
                C1252 * C123 + C1253 * C124 + C1254 * C125) *
                   C152340 * C152532 -
               (C459 * C125 + C460 * C124 + C461 * C123 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C122) *
                   C152340 * C152547 -
               ((C134 * C1685 - C135 * C1673 - C134 * C1686 + C152324 * C1709) *
                    C125 +
                (C134 * C1687 - C135 * C1674 - C134 * C1688 + C152324 * C1710) *
                    C124 +
                (C134 * C1689 - C135 * C1675 - C134 * C1690 + C152324 * C1711) *
                    C123 +
                (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                    C122) *
                   C152340 * C152502) *
                  C1402 +
              (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                    C122 +
                C462 * C123 + C463 * C124 + C464 * C125) *
                   C152340 * C152547 -
               ((C134 * C1693 - C135 * C1677 - C134 * C1694 + C152324 * C1713) *
                    C125 +
                (C134 * C1695 - C135 * C1678 - C134 * C1696 + C152324 * C1714) *
                    C124 +
                (C134 * C1697 - C135 * C1679 - C134 * C1698 + C152324 * C1715) *
                    C123 +
                (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                    C122) *
                   C152340 * C152532 +
               ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                    C122 +
                (C134 * C1703 - C135 * C1682 - C134 * C1704 + C152324 * C1718) *
                    C123 +
                (C134 * C1705 - C135 * C1683 - C134 * C1706 + C152324 * C1719) *
                    C124 +
                (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                    C125) *
                   C152340 * C152502) *
                  C152499) *
             C152113 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C2393 -
               (C712 * C125 + C713 * C124 + C714 * C123 +
                (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                    C122) *
                   C152340 * C2394 +
               ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) *
                    C122 +
                C715 * C123 + C716 * C124 + C717 * C125) *
                   C152340 * C152502) *
                  C152141 * C152543 +
              ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) *
                   C152340 * C2394 -
               (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                   C152340 * C2393 -
               (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) *
                   C152340 * C152502) *
                  C152141 * C152526 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                   C152340 * C2393 -
               (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) *
                   C152340 * C2394 +
               (C716 * C122 + C717 * C123 + C719 * C124 +
                (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                    C125) *
                   C152340 * C152502) *
                  C152141 * C152493) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C2393 -
               (C712 * C125 + C713 * C124 + C714 * C123 +
                (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                    C122) *
                   C152340 * C2394 +
               ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) *
                    C122 +
                C715 * C123 + C716 * C124 + C717 * C125) *
                   C152340 * C152502) *
                  C152546 +
              (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                    C122 +
                C1252 * C123 + C1253 * C124 + C1254 * C125) *
                   C152340 * C2394 -
               (C459 * C125 + C460 * C124 + C461 * C123 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C122) *
                   C152340 * C2393 -
               ((C134 * C1685 - C135 * C1673 - C134 * C1686 + C152324 * C1709) *
                    C125 +
                (C134 * C1687 - C135 * C1674 - C134 * C1688 + C152324 * C1710) *
                    C124 +
                (C134 * C1689 - C135 * C1675 - C134 * C1690 + C152324 * C1711) *
                    C123 +
                (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                    C122) *
                   C152340 * C152502) *
                  C152530 +
              (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                    C122 +
                C462 * C123 + C463 * C124 + C464 * C125) *
                   C152340 * C2393 -
               (C2099 * C125 + C2100 * C124 + C2101 * C123 +
                (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                    C122) *
                   C152340 * C2394 +
               ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                    C122 +
                (C134 * C1703 - C135 * C1682 - C134 * C1704 + C152324 * C1718) *
                    C123 +
                (C134 * C1705 - C135 * C1683 - C134 * C1706 + C152324 * C1719) *
                    C124 +
                (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                    C125) *
                   C152340 * C152502) *
                  C152499) *
             C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C2624 -
          (C712 * C125 + C713 * C124 + C714 * C123 +
           (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
              C152340 * C2625 +
          ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
           C715 * C123 + C716 * C124 + C717 * C125) *
              C152340 * C2626 -
          ((C134 * C2637 - C135 * C2629 - C134 * C2638 + C152324 * C2653) *
               C125 +
           (C134 * C2639 - C135 * C2630 - C134 * C2640 + C152324 * C2654) *
               C124 +
           (C134 * C2641 - C135 * C2631 - C134 * C2642 + C152324 * C2655) *
               C123 +
           (C134 * C2643 - C135 * C2632 - C134 * C2644 + C152324 * C2656) *
               C122) *
              C152340 * C2627 +
          ((C134 * C2645 - C135 * C2633 - C134 * C2646 + C152324 * C2657) *
               C122 +
           (C134 * C2647 - C135 * C2634 - C134 * C2648 + C152324 * C2658) *
               C123 +
           (C134 * C2649 - C135 * C2635 - C134 * C2650 + C152324 * C2659) *
               C124 +
           (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
               C125) *
              C152340 * C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C152141 * C129 -
          ((C6385 + C6386 + C6387) * C152089 +
           (C6384 + C6383 + C6382) * C6301) *
              C152340 * C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C6301 +
           (C6388 + C6389 + C6390) * C152089) *
              C152340 * C152159 * C152141 * C131 -
          ((C6391 + C6392 + C6393) * C152089 +
           (C6390 + C6389 + C6388) * C6301) *
              C152340 * C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C6301 +
           (C6303 * C154 - C6304 * C141 - C6303 * C155 + C6298 * C165 +
            C6305 * C394 - C6306 * C372 - C6305 * C395 + C6299 * C408 +
            C6307 * C396 - C6308 * C373 - C6307 * C397 + C6300 * C409) *
               C152089) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152530 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152546 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6307 * C1503 - C6308 * C1495 - C6307 * C1504 + C6300 * C1519 +
             C6305 * C388 - C6306 * C369 - C6305 * C389 + C6299 * C405 +
             C6303 * C374 - C6304 * C362 - C6303 * C375 + C6298 * C398) *
                C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152547 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152532 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C152141 * C359 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152532 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152547 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C152502) *
              C152141 * C360 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152547 -
           ((C6307 * C1693 - C6308 * C1677 - C6307 * C1694 + C6300 * C1713 +
             C6305 * C1215 - C6306 * C1206 - C6305 * C1216 + C6299 * C1224 +
             C6303 * C627 - C6304 * C615 - C6303 * C628 + C6298 * C651) *
                C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152532 +
           ((C6997 + C6996 + C6995) * C6301 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152089) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C1401 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C1402 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C1401 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C1401 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C1489 -
          ((C6684 + C6685 + C6686) * C152089 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C6301) *
              C152340 * C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C6301 +
           (C6687 + C6688 + C6689) * C152089) *
              C152340 * C152159 * C1491 -
          ((C6307 * C8103 - C6308 * C8099 - C6307 * C8104 + C6300 * C8111 +
            C6305 * C1513 - C6306 * C1500 - C6305 * C1514 + C6299 * C1524 +
            C6303 * C1507 - C6304 * C1497 - C6303 * C1508 + C6298 * C1521) *
               C152089 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C6301) *
              C152340 * C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C6301 +
           (C6303 * C1513 - C6304 * C1500 - C6303 * C1514 + C6298 * C1524 +
            C6305 * C8103 - C6306 * C8099 - C6305 * C8104 + C6299 * C8111 +
            C6307 * C8109 - C6308 * C8102 - C6307 * C8110 + C6300 * C8114) *
               C152089) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152547 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152532 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C1401 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152532 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152547 -
           ((C6307 * C8339 - C6308 * C8333 - C6307 * C8340 + C6300 * C8351 +
             C6305 * C1703 - C6306 * C1682 - C6305 * C1704 + C6299 * C1718 +
             C6303 * C1689 - C6304 * C1675 - C6303 * C1690 + C6298 * C1711) *
                C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C152502) *
              C1402 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152547 -
           ((C6307 * C8343 - C6308 * C8335 - C6307 * C8344 + C6300 * C8353 +
             C6305 * C2237 - C6306 * C2232 - C6305 * C2238 + C6299 * C2244 +
             C6303 * C1697 - C6304 * C1679 - C6303 * C1698 + C6298 * C1715) *
                C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152532 +
           ((C6303 * C1701 - C6304 * C1681 - C6303 * C1702 + C6298 * C1717 +
             C6305 * C8341 - C6306 * C8334 - C6305 * C8342 + C6299 * C8352 +
             C6307 * C8347 - C6308 * C8337 - C6307 * C8348 + C6300 * C8355) *
                C6301 +
            (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
             C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
             C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                C152089) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C2393 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C2394 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C152141 * C152543 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C2394 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C2393 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C152502) *
              C152141 * C152526 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C2393 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C2394 +
           ((C6997 + C6996 + C6995) * C6301 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152089) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C2393 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C2394 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C152546 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C2394 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C2393 -
           ((C6307 * C8339 - C6308 * C8333 - C6307 * C8340 + C6300 * C8351 +
             C6305 * C1703 - C6306 * C1682 - C6305 * C1704 + C6299 * C1718 +
             C6303 * C1689 - C6304 * C1675 - C6303 * C1690 + C6298 * C1711) *
                C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C152502) *
              C152530 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C2393 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C2394 +
           ((C6303 * C1701 - C6304 * C1681 - C6303 * C1702 + C6298 * C1717 +
             C6305 * C8341 - C6306 * C8334 - C6305 * C8342 + C6299 * C8352 +
             C6307 * C8347 - C6308 * C8337 - C6307 * C8348 + C6300 * C8355) *
                C6301 +
            (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
             C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
             C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                C152089) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C2624 -
          ((C6986 + C6987 + C6988) * C152089 +
           (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
            C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
            C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
               C6301) *
              C152340 * C2625 +
          ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
            C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
            C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
               C6301 +
           (C6989 + C6990 + C6991) * C152089) *
              C152340 * C2626 -
          ((C6307 * C9657 - C6308 * C9651 - C6307 * C9658 + C6300 * C9669 +
            C6305 * C3175 - C6306 * C3170 - C6305 * C3176 + C6299 * C3182 +
            C6303 * C2641 - C6304 * C2631 - C6303 * C2642 + C6298 * C2655) *
               C152089 +
           (C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670 +
            C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
            C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656) *
               C6301) *
              C152340 * C2627 +
          ((C6303 * C2645 - C6304 * C2633 - C6303 * C2646 + C6298 * C2657 +
            C6305 * C9661 - C6306 * C9653 - C6305 * C9662 + C6299 * C9671 +
            C6307 * C9663 - C6308 * C9654 - C6307 * C9664 + C6300 * C9672) *
               C6301 +
           (C6303 * C2647 - C6304 * C2634 - C6303 * C2648 + C6298 * C2658 +
            C6305 * C9665 - C6306 * C9655 - C6305 * C9666 + C6299 * C9673 +
            C6307 * C9667 - C6308 * C9656 - C6307 * C9668 + C6300 * C9674) *
               C152089) *
              C152340 * C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C6301 +
            C205 * C152089) *
               C14961 +
           ((C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C6301 +
            C714 * C152089) *
               C14962 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C6301 +
            C715 * C152089) *
               C14963) *
              C152159 * C152141 * C129 -
          ((C716 * C152089 + C715 * C6301) * C14963 +
           (C713 * C152089 + C714 * C6301) * C14962 +
           (C206 * C152089 + C205 * C6301) * C14961) *
              C152159 * C152141 * C130 +
          ((C206 * C6301 + C207 * C152089) * C14961 +
           (C713 * C6301 + C712 * C152089) * C14962 +
           (C716 * C6301 + C717 * C152089) * C14963) *
              C152159 * C152141 * C131 -
          ((C719 * C152089 + C717 * C6301) * C14963 +
           (C718 * C152089 + C712 * C6301) * C14962 +
           (C208 * C152089 + C207 * C6301) * C14961) *
              C152159 * C152141 * C132 +
          ((C208 * C6301 + C209 * C152089) * C14961 +
           (C718 * C6301 + C1009 * C152089) * C14962 +
           (C719 * C6301 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                C152089) *
               C14963) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            ((C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C6301 +
             C714 * C152089) *
                C14962 +
            ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) *
                 C6301 +
             C715 * C152089) *
                C14963) *
               C152159 * C152546 -
           ((C2880 * C152089 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C6301) *
                C14963 +
            (C1252 * C152089 +
             (C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C6301) *
                C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            ((C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C6301 +
             C2101 * C152089) *
                C14962 +
            ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                 C6301 +
             C15195 * C152089) *
                C14963) *
               C152159 * C152499) *
              C359 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C1252 * C6301 + C1253 * C152089) * C14962 +
            (C2880 * C6301 + C2879 * C152089) * C14963) *
               C152159 * C152530 -
           ((C716 * C152089 + C715 * C6301) * C14963 +
            (C713 * C152089 + C714 * C6301) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C152546 -
           ((C15196 * C152089 + C15195 * C6301) * C14963 +
            (C2100 * C152089 + C2101 * C6301) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C152499) *
              C360 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C713 * C6301 + C712 * C152089) * C14962 +
            (C716 * C6301 + C717 * C152089) * C14963) *
               C152159 * C152546 -
           ((C2878 * C152089 + C2879 * C6301) * C14963 +
            (C1254 * C152089 + C1253 * C6301) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C152530 +
           ((C463 * C6301 + C464 * C152089) * C14961 +
            (C2100 * C6301 + C2099 * C152089) * C14962 +
            (C15196 * C6301 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152547 -
           ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152532 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 +
            ((C134 * C2645 - C135 * C2633 - C134 * C2646 + C152324 * C2657) *
                 C6301 +
             C15465 * C152089) *
                C14963) *
               C152502) *
              C152141 * C359 +
          (((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
            (C15438 + C15439) * C14963) *
               C152532 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152547 -
           ((C15466 * C152089 + C15465 * C6301) * C14963 +
            (C15439 + C15438) * C14962 + C15454 * C14961) *
               C152502) *
              C152141 * C360 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152547 -
           ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
            (C15445 + C15444) * C14961) *
               C152532 +
           (C15456 * C14961 + (C15449 + C15448) * C14962 +
            (C15466 * C6301 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C152089) *
                C14963) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C1401 -
           ((C16162 + C16192) * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            ((C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C6301 +
             C2101 * C152089) *
                C14962 +
            ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                 C6301 +
             C15195 * C152089) *
                C14963) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C16167 + C16168) * C14962 + (C16169 + C16170) * C14963) *
               C152159 * C1402 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C1401 -
           ((C15196 * C152089 + C15195 * C6301) * C14963 +
            (C2100 * C152089 + C2101 * C6301) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152159 * C1401 -
           ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C1402 +
           ((C463 * C6301 + C464 * C152089) * C14961 +
            (C2100 * C6301 + C2099 * C152089) * C14962 +
            (C15196 * C6301 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C6301 +
            C205 * C152089) *
               C14961 +
           (C15467 + C15419) * C14962 + C15470 * C14963) *
              C152159 * C1489 -
          ((C16162 + C16192) * C14963 + (C16157 + C16191) * C14962 +
           (C461 * C152089 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C6301) *
               C14961) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C6301 +
            C462 * C152089) *
               C14961 +
           ((C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C6301 +
            C2101 * C152089) *
               C14962 +
           ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                C6301 +
            C15195 * C152089) *
               C14963) *
              C152159 * C1491 -
          (((C134 * C8339 - C135 * C8333 - C134 * C8340 + C152324 * C8351) *
                C152089 +
            (C134 * C8341 - C135 * C8334 - C134 * C8342 + C152324 * C8352) *
                C6301) *
               C14963 +
           ((C134 * C2237 - C135 * C2232 - C134 * C2238 + C152324 * C2244) *
                C152089 +
            (C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                C6301) *
               C14962 +
           (C1882 * C152089 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C6301) *
               C14961) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C6301 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C152089) *
               C14961 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C6301 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C152089) *
               C14962 +
           ((C134 * C8347 - C135 * C8337 - C134 * C8348 + C152324 * C8355) *
                C6301 +
            (C134 * C8349 - C135 * C8338 - C134 * C8350 + C152324 * C8356) *
                C152089) *
               C14963) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152547 -
           ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152532 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 +
            ((C134 * C2645 - C135 * C2633 - C134 * C2646 + C152324 * C2657) *
                 C6301 +
             C15465 * C152089) *
                C14963) *
               C152502) *
              C1401 +
          (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
            (C16790 + C16755) * C14963) *
               C152532 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152547 -
           (((C134 * C9665 - C135 * C9655 - C134 * C9666 + C152324 * C9673) *
                 C152089 +
             (C134 * C9661 - C135 * C9653 - C134 * C9662 + C152324 * C9671) *
                 C6301) *
                C14963 +
            (C16755 + C16790) * C14962 + C16756 * C14961) *
               C152502) *
              C1402 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C152547 -
           ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
            (C16761 + C16791) * C14961) *
               C152532 +
           (C16795 * C14961 + (C16794 + C16793) * C14962 +
            ((C134 * C9663 - C135 * C9654 - C134 * C9664 + C152324 * C9672) *
                 C6301 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152089) *
                C14963) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C2393 -
           ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C2394 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 +
            ((C134 * C2645 - C135 * C2633 - C134 * C2646 + C152324 * C2657) *
                 C6301 +
             C15465 * C152089) *
                C14963) *
               C152502) *
              C152141 * C152543 +
          (((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
            (C15438 + C15439) * C14963) *
               C2394 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C2393 -
           ((C15466 * C152089 + C15465 * C6301) * C14963 +
            (C15439 + C15438) * C14962 + C15454 * C14961) *
               C152502) *
              C152141 * C152526 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C2393 -
           ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
            (C15445 + C15444) * C14961) *
               C2394 +
           (C15456 * C14961 + (C15449 + C15448) * C14962 +
            (C15466 * C6301 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C152089) *
                C14963) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C2393 -
           ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C2394 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 +
            ((C134 * C2645 - C135 * C2633 - C134 * C2646 + C152324 * C2657) *
                 C6301 +
             C15465 * C152089) *
                C14963) *
               C152502) *
              C152546 +
          (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
            (C16790 + C16755) * C14963) *
               C2394 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C2393 -
           (((C134 * C9665 - C135 * C9655 - C134 * C9666 + C152324 * C9673) *
                 C152089 +
             (C134 * C9661 - C135 * C9653 - C134 * C9662 + C152324 * C9671) *
                 C6301) *
                C14963 +
            (C16755 + C16790) * C14962 + C16756 * C14961) *
               C152502) *
              C152530 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C2393 -
           ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
            (C16761 + C16791) * C14961) *
               C2394 +
           (C16795 * C14961 + (C16794 + C16793) * C14962 +
            ((C134 * C9663 - C135 * C9654 - C134 * C9664 + C152324 * C9672) *
                 C6301 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152089) *
                C14963) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C6301 +
            C205 * C152089) *
               C14961 +
           (C15467 + C15419) * C14962 + C15470 * C14963) *
              C2624 -
          (C18084 * C14963 + (C15424 + C15468) * C14962 +
           (C15419 + C15467) * C14961) *
              C2625 +
          (C15470 * C14961 + (C15469 + C15425) * C14962 + C18110 * C14963) *
              C2626 -
          ((C18108 + C18109) * C14963 + (C18089 + C18107) * C14962 +
           C18084 * C14961) *
              C2627 +
          (C18110 * C14961 + (C18109 + C18108) * C14962 +
           ((C134 * C18075 - C135 * C18069 - C134 * C18076 + C152324 * C18081) *
                C6301 +
            (C134 * C18077 - C135 * C18070 - C134 * C18078 + C152324 * C18082) *
                C152089) *
               C14963) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C152458 -
               (C712 * C125 + C713 * C124 + C714 * C123 +
                (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                    C122) *
                   C152340 * C152246) *
                  C152141 * C851 +
              ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) *
                   C152340 * C152246 -
               (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                   C152340 * C152458) *
                  C152141 * C852 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                   C152340 * C152458 -
               (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) *
                   C152340 * C152246) *
                  C152141 * C853 +
              ((C712 * C122 + C718 * C123 + C1009 * C124 +
                (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                    C125) *
                   C152340 * C152246 -
               (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
                   C152340 * C152458) *
                  C152141 * C152503) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C122 +
                 C205 * C123 + C206 * C124 + C207 * C125) *
                    C152340 * C152458 -
                (C712 * C125 + C713 * C124 + C714 * C123 +
                 (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                     C122) *
                    C152340 * C152246) *
                   C1401 +
               (((C134 * C1209 - C135 * C1203 - C134 * C1210 +
                  C152324 * C1221) *
                     C122 +
                 C1252 * C123 + C1253 * C124 + C1254 * C125) *
                    C152340 * C152246 -
                (C459 * C125 + C460 * C124 + C461 * C123 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C122) *
                    C152340 * C152458) *
                   C1402 +
               (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C122 +
                 C462 * C123 + C463 * C124 + C464 * C125) *
                    C152340 * C152458 -
                (C2099 * C125 + C2100 * C124 + C2101 * C123 +
                 (C134 * C1699 - C135 * C1680 - C134 * C1700 +
                  C152324 * C1716) *
                     C122) *
                    C152340 * C152246) *
                   C152499) *
                  C152443 +
              (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) *
                    C152340 * C152246 -
                (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                    C152340 * C152458) *
                   C1401 +
               ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) *
                    C152340 * C152458 -
                (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                    C152340 * C152246) *
                   C1402 +
               ((C2101 * C122 + C2100 * C123 + C2099 * C124 +
                 (C134 * C2077 - C135 * C2076 - C134 * C2078 +
                  C152324 * C2079) *
                     C125) *
                    C152340 * C152246 -
                (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) *
                    C152340 * C152458) *
                   C152499) *
                  C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C3010 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C3011 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C3012 -
           (C3037 * C125 + C3038 * C124 + C3039 * C123 +
            (C134 * C2643 - C135 * C2632 - C134 * C2644 + C152324 * C2656) *
                C122) *
               C152340 * C152515) *
              C152141 * C152443 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C3011 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C3010 -
           (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
               C3012 +
           (C3039 * C122 + C3038 * C123 + C3037 * C124 +
            (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                C125) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152458 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C152141 * C851 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152246 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152458) *
              C152141 * C852 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152458 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152246) *
              C152141 * C853 +
          (((C7427 + C7426 + C7425) * C6301 +
            (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
             C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
             C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
                C152089) *
               C152340 * C152246 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152458 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C1401 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152458) *
               C1402 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C6301 +
             (C6687 + C6688 + C6689) * C152089) *
                C152340 * C152458 -
            ((C8889 + C8890 + C8891) * C152089 +
             (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
              C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
              C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                 C6301) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152458) *
               C1401 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152458 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C1402 +
           (((C8891 + C8890 + C8889) * C6301 +
             (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
              C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
              C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C6693 + C6694 + C6695) * C152089 +
             (C6689 + C6688 + C6687) * C6301) *
                C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C3010 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C3011 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C3012 -
           ((C10207 + C10208 + C10209) * C152089 +
            (C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656) *
                C6301) *
               C152340 * C152515) *
              C152141 * C152443 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C3011 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C3010 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C3012 +
           ((C10209 + C10208 + C10207) * C6301 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152089) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152458 -
           ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152246) *
              C152141 * C851 +
          (((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
            (C15438 + C15439) * C14963) *
               C152246 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152458) *
              C152141 * C852 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152458 -
           ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
            (C15445 + C15444) * C14961) *
               C152246) *
              C152141 * C853 +
          (((C15859 + C15860) * C14961 + (C15861 + C15862) * C14962 +
            (C3037 * C6301 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C152089) *
                C14963) *
               C152246 -
           ((C15862 + C15861) * C14963 + (C15860 + C15859) * C14962 +
            (C208 * C152089 + C207 * C6301) * C14961) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C152458 -
            ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152246) *
               C1401 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             (C16790 + C16755) * C14963) *
                C152246 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C152458) *
               C1402 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C6301 +
              C462 * C152089) *
                 C14961 +
             (C16791 + C16761) * C14962 + C16795 * C14963) *
                C152458 -
            ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
             (C16761 + C16791) * C14961) *
                C152246) *
               C152499) *
              C152443 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             (C15438 + C15439) * C14963) *
                C152246 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C152458) *
               C1401 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + (C16169 + C16170) * C14963) *
                C152458 -
            ((C16190 * C152089 + C16189 * C6301) * C14963 +
             (C16170 + C16169) * C14962 + (C16168 + C16167) * C14961) *
                C152246) *
               C1402 +
           (((C17294 + C17295) * C14961 + (C17296 + C17297) * C14962 +
             (C16788 * C6301 + (C134 * C10185 - C135 * C10184 - C134 * C10186 +
                                C152324 * C10187) *
                                   C152089) *
                 C14963) *
                C152246 -
            ((C17297 + C17296) * C14963 + (C17295 + C17294) * C14962 +
             (C463 * C152089 + C462 * C6301) * C14961) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C3010 -
           (C18084 * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C3011 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 + C18110 * C14963) *
               C3012 -
           ((C18108 + C18109) * C14963 + (C18089 + C18107) * C14962 +
            C18084 * C14961) *
               C152515) *
              C152141 * C152443 +
          (((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
            C18613 * C14963) *
               C3011 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C3010 -
           ((C18614 + C18615) * C14963 + (C15439 + C15438) * C14962 +
            C15454 * C14961) *
               C3012 +
           (C18613 * C14961 + (C18615 + C18614) * C14962 +
            (C18105 * C6301 + (C134 * C18609 - C135 * C18608 - C134 * C18610 +
                               C152324 * C18611) *
                                  C152089) *
                C14963) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C152159 * C152141 * C129 -
          (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
              C152159 * C152141 * C130 +
          (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
              C152159 * C152141 * C131 -
          (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
              C152159 * C152141 * C132 +
          (C208 * C122 + C209 * C123 + C210 * C124 +
           (C134 * C158 - C135 * C143 - C134 * C159 + C152324 * C167) * C125) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152546 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152530 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152499) *
              C359 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152530 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152546 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152499) *
              C360 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C152546 -
           ((C134 * C394 - C135 * C372 - C134 * C395 + C152324 * C408) * C125 +
            C465 * C124 + C459 * C123 + C460 * C122) *
               C152340 * C152159 * C152530 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C1401 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C1402 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152499) *
              C152543 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C1402 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C1401 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152499) *
              C152526 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C1401 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C1402 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C152159 * C1489 -
          (C459 * C125 + C460 * C124 + C461 * C123 +
           (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
              C152340 * C152159 * C1490 +
          ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
           C462 * C123 + C463 * C124 + C464 * C125) *
              C152340 * C152159 * C1491 -
          ((C134 * C1503 - C135 * C1495 - C134 * C1504 + C152324 * C1519) *
               C125 +
           (C134 * C1505 - C135 * C1496 - C134 * C1506 + C152324 * C1520) *
               C124 +
           (C134 * C1507 - C135 * C1497 - C134 * C1508 + C152324 * C1521) *
               C123 +
           (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
               C122) *
              C152340 * C152159 * C1492 +
          ((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
               C122 +
           (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
               C123 +
           (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
               C124 +
           (C134 * C1517 - C135 * C1502 - C134 * C1518 + C152324 * C1526) *
               C125) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C2393 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C2394 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152502) *
              C152141 * C152543 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C2394 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C2393 -
           (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
               C152502) *
              C152141 * C152526 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C2393 -
           (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
               C2394 +
           (C716 * C122 + C717 * C123 + C719 * C124 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) * C125) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C2393 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C2394 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152502) *
              C152546 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C2394 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C2393 -
           ((C134 * C1685 - C135 * C1673 - C134 * C1686 + C152324 * C1709) *
                C125 +
            (C134 * C1687 - C135 * C1674 - C134 * C1688 + C152324 * C1710) *
                C124 +
            (C134 * C1689 - C135 * C1675 - C134 * C1690 + C152324 * C1711) *
                C123 +
            (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                C122) *
               C152340 * C152502) *
              C152530 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C2393 -
           (C2099 * C125 + C2100 * C124 + C2101 * C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C2394 +
           ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                C122 +
            (C134 * C1703 - C135 * C1682 - C134 * C1704 + C152324 * C1718) *
                C123 +
            (C134 * C1705 - C135 * C1683 - C134 * C1706 + C152324 * C1719) *
                C124 +
            (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                C125) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C152141 * C129 -
          ((C6385 + C6386 + C6387) * C152089 +
           (C6384 + C6383 + C6382) * C6301) *
              C152340 * C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C6301 +
           (C6388 + C6389 + C6390) * C152089) *
              C152340 * C152159 * C152141 * C131 -
          ((C6391 + C6392 + C6393) * C152089 +
           (C6390 + C6389 + C6388) * C6301) *
              C152340 * C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C6301 +
           (C6303 * C154 - C6304 * C141 - C6303 * C155 + C6298 * C165 +
            C6305 * C394 - C6306 * C372 - C6305 * C395 + C6299 * C408 +
            C6307 * C396 - C6308 * C373 - C6307 * C397 + C6300 * C409) *
               C152089) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152530 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152546 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6307 * C1503 - C6308 * C1495 - C6307 * C1504 + C6300 * C1519 +
             C6305 * C388 - C6306 * C369 - C6305 * C389 + C6299 * C405 +
             C6303 * C374 - C6304 * C362 - C6303 * C375 + C6298 * C398) *
                C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C1401 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C1402 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C1401 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C1401 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C1489 -
          ((C6684 + C6685 + C6686) * C152089 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C6301) *
              C152340 * C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C6301 +
           (C6687 + C6688 + C6689) * C152089) *
              C152340 * C152159 * C1491 -
          ((C6307 * C8103 - C6308 * C8099 - C6307 * C8104 + C6300 * C8111 +
            C6305 * C1513 - C6306 * C1500 - C6305 * C1514 + C6299 * C1524 +
            C6303 * C1507 - C6304 * C1497 - C6303 * C1508 + C6298 * C1521) *
               C152089 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C6301) *
              C152340 * C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C6301 +
           (C6303 * C1513 - C6304 * C1500 - C6303 * C1514 + C6298 * C1524 +
            C6305 * C8103 - C6306 * C8099 - C6305 * C8104 + C6299 * C8111 +
            C6307 * C8109 - C6308 * C8102 - C6307 * C8110 + C6300 * C8114) *
               C152089) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C2393 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C2394 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C152141 * C152543 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C2394 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C2393 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C152502) *
              C152141 * C152526 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C2393 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C2394 +
           ((C6997 + C6996 + C6995) * C6301 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152089) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C2393 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C2394 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C152546 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C2394 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C2393 -
           ((C6307 * C8339 - C6308 * C8333 - C6307 * C8340 + C6300 * C8351 +
             C6305 * C1703 - C6306 * C1682 - C6305 * C1704 + C6299 * C1718 +
             C6303 * C1689 - C6304 * C1675 - C6303 * C1690 + C6298 * C1711) *
                C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C152502) *
              C152530 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C2393 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C2394 +
           ((C6303 * C1701 - C6304 * C1681 - C6303 * C1702 + C6298 * C1717 +
             C6305 * C8341 - C6306 * C8334 - C6305 * C8342 + C6299 * C8352 +
             C6307 * C8347 - C6308 * C8337 - C6307 * C8348 + C6300 * C8355) *
                C6301 +
            (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
             C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
             C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                C152089) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C6301 +
            C205 * C152089) *
               C14961 +
           ((C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C6301 +
            C714 * C152089) *
               C14962 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C6301 +
            C715 * C152089) *
               C14963) *
              C152159 * C152141 * C129 -
          ((C716 * C152089 + C715 * C6301) * C14963 +
           (C713 * C152089 + C714 * C6301) * C14962 +
           (C206 * C152089 + C205 * C6301) * C14961) *
              C152159 * C152141 * C130 +
          ((C206 * C6301 + C207 * C152089) * C14961 +
           (C713 * C6301 + C712 * C152089) * C14962 +
           (C716 * C6301 + C717 * C152089) * C14963) *
              C152159 * C152141 * C131 -
          ((C719 * C152089 + C717 * C6301) * C14963 +
           (C718 * C152089 + C712 * C6301) * C14962 +
           (C208 * C152089 + C207 * C6301) * C14961) *
              C152159 * C152141 * C132 +
          ((C208 * C6301 + C209 * C152089) * C14961 +
           (C718 * C6301 + C1009 * C152089) * C14962 +
           (C719 * C6301 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                C152089) *
               C14963) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            ((C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C6301 +
             C714 * C152089) *
                C14962 +
            ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) *
                 C6301 +
             C715 * C152089) *
                C14963) *
               C152159 * C152546 -
           ((C2880 * C152089 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C6301) *
                C14963 +
            (C1252 * C152089 +
             (C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C6301) *
                C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            ((C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C6301 +
             C2101 * C152089) *
                C14962 +
            ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                 C6301 +
             C15195 * C152089) *
                C14963) *
               C152159 * C152499) *
              C359 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C1252 * C6301 + C1253 * C152089) * C14962 +
            (C2880 * C6301 + C2879 * C152089) * C14963) *
               C152159 * C152530 -
           ((C716 * C152089 + C715 * C6301) * C14963 +
            (C713 * C152089 + C714 * C6301) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C152546 -
           ((C15196 * C152089 + C15195 * C6301) * C14963 +
            (C2100 * C152089 + C2101 * C6301) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C152499) *
              C360 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C713 * C6301 + C712 * C152089) * C14962 +
            (C716 * C6301 + C717 * C152089) * C14963) *
               C152159 * C152546 -
           ((C2878 * C152089 + C2879 * C6301) * C14963 +
            (C1254 * C152089 + C1253 * C6301) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C152530 +
           ((C463 * C6301 + C464 * C152089) * C14961 +
            (C2100 * C6301 + C2099 * C152089) * C14962 +
            (C15196 * C6301 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C1401 -
           ((C16162 + C16192) * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            ((C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C6301 +
             C2101 * C152089) *
                C14962 +
            ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                 C6301 +
             C15195 * C152089) *
                C14963) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C16167 + C16168) * C14962 + (C16169 + C16170) * C14963) *
               C152159 * C1402 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C1401 -
           ((C15196 * C152089 + C15195 * C6301) * C14963 +
            (C2100 * C152089 + C2101 * C6301) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152159 * C1401 -
           ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C1402 +
           ((C463 * C6301 + C464 * C152089) * C14961 +
            (C2100 * C6301 + C2099 * C152089) * C14962 +
            (C15196 * C6301 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C6301 +
            C205 * C152089) *
               C14961 +
           (C15467 + C15419) * C14962 + C15470 * C14963) *
              C152159 * C1489 -
          ((C16162 + C16192) * C14963 + (C16157 + C16191) * C14962 +
           (C461 * C152089 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C6301) *
               C14961) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C6301 +
            C462 * C152089) *
               C14961 +
           ((C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C6301 +
            C2101 * C152089) *
               C14962 +
           ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                C6301 +
            C15195 * C152089) *
               C14963) *
              C152159 * C1491 -
          (((C134 * C8339 - C135 * C8333 - C134 * C8340 + C152324 * C8351) *
                C152089 +
            (C134 * C8341 - C135 * C8334 - C134 * C8342 + C152324 * C8352) *
                C6301) *
               C14963 +
           ((C134 * C2237 - C135 * C2232 - C134 * C2238 + C152324 * C2244) *
                C152089 +
            (C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                C6301) *
               C14962 +
           (C1882 * C152089 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C6301) *
               C14961) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C6301 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C152089) *
               C14961 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C6301 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C152089) *
               C14962 +
           ((C134 * C8347 - C135 * C8337 - C134 * C8348 + C152324 * C8355) *
                C6301 +
            (C134 * C8349 - C135 * C8338 - C134 * C8350 + C152324 * C8356) *
                C152089) *
               C14963) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C2393 -
           ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C2394 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 +
            ((C134 * C2645 - C135 * C2633 - C134 * C2646 + C152324 * C2657) *
                 C6301 +
             C15465 * C152089) *
                C14963) *
               C152502) *
              C152141 * C152543 +
          (((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
            (C15438 + C15439) * C14963) *
               C2394 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C2393 -
           ((C15466 * C152089 + C15465 * C6301) * C14963 +
            (C15439 + C15438) * C14962 + C15454 * C14961) *
               C152502) *
              C152141 * C152526 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C2393 -
           ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
            (C15445 + C15444) * C14961) *
               C2394 +
           (C15456 * C14961 + (C15449 + C15448) * C14962 +
            (C15466 * C6301 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C152089) *
                C14963) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C2393 -
           ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C2394 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 +
            ((C134 * C2645 - C135 * C2633 - C134 * C2646 + C152324 * C2657) *
                 C6301 +
             C15465 * C152089) *
                C14963) *
               C152502) *
              C152546 +
          (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
            (C16790 + C16755) * C14963) *
               C2394 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C2393 -
           (((C134 * C9665 - C135 * C9655 - C134 * C9666 + C152324 * C9673) *
                 C152089 +
             (C134 * C9661 - C135 * C9653 - C134 * C9662 + C152324 * C9671) *
                 C6301) *
                C14963 +
            (C16755 + C16790) * C14962 + C16756 * C14961) *
               C152502) *
              C152530 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C2393 -
           ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
            (C16761 + C16791) * C14961) *
               C2394 +
           (C16795 * C14961 + (C16794 + C16793) * C14962 +
            ((C134 * C9663 - C135 * C9654 - C134 * C9664 + C152324 * C9672) *
                 C6301 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152089) *
                C14963) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C4321 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152457 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C4321) *
               C152204) *
              C152118 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C4321) *
               C152457 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C4321 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          ((((C6387 + C6386 + C6385) * C6301 +
             (C6388 + C6389 + C6390) * C152089) *
                C152340 * C4321 -
            ((C7425 + C7426 + C7427) * C152089 +
             (C6994 + C6993 + C6992) * C6301) *
                C152340 * C152246) *
               C152457 +
           (((C7759 + C7758 + C7757) * C6301 +
             (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
              C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
              C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C7210 + C7211 + C7212) * C152089 +
             (C6692 + C6691 + C6690) * C6301) *
                C152340 * C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C4321 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C152457 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C4321) *
               C152204) *
              C152118 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C4321) *
               C152457 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C4321 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          (((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
                C4321 -
            (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
                C152246) *
               C152457 +
           ((C1253 * C122 + C1254 * C123 + C1255 * C124 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C125) *
                C152340 * C152246 -
            (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
                C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C4321 -
            (C18084 * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152246) *
               C152457 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             C18818 * C14963) *
                C152246 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C4321) *
               C152204) *
              C152118 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             C18613 * C14963) *
                C152246 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C4321) *
               C152457 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + C18409 * C14963) *
                C4321 -
            ((C18410 + C18411) * C14963 + (C16170 + C16169) * C14962 +
             (C16168 + C16167) * C14961) *
                C152246) *
               C152204) *
              C152127 +
          ((((C206 * C6301 + C207 * C152089) * C14961 +
             (C15444 + C15445) * C14962 + C15456 * C14963) *
                C4321 -
            ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
             (C15445 + C15444) * C14961) *
                C152246) *
               C152457 +
           (((C16175 + C16176) * C14961 + (C16177 + C16178) * C14962 +
             (C16190 * C6301 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C152089) *
                 C14963) *
                C152246 -
            ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
             (C459 * C152089 + C460 * C6301) * C14961) *
                C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152242 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152249 +
            ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
              C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
              C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                 C6301 +
             (C6989 + C6990 + C6991) * C152089) *
                C152340 * C4993) *
               C152457 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152249 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152242 -
            ((C9988 + C9989 + C9990) * C152089 +
             (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
              C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
              C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                 C6301) *
                C152340 * C4993) *
               C152204) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152249 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152242 -
            ((C6995 + C6996 + C6997) * C152089 +
             (C6991 + C6990 + C6989) * C6301) *
                C152340 * C4993) *
               C152457 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152242 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152249 +
            ((C9990 + C9989 + C9988) * C6301 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152089) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152242 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152249 +
            ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
             C715 * C123 + C716 * C124 + C717 * C125) *
                C152340 * C4993) *
               C152457 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152249 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152242 -
            (C2878 * C125 + C2879 * C124 + C2880 * C123 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C122) *
                C152340 * C4993) *
               C152204) *
              C3455 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152249 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152242 -
            (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
                C4993) *
               C152457 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152242 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152249 +
            (C2880 * C122 + C2879 * C123 + C2878 * C124 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C125) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C152242 -
            (C18084 * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152249 +
            (C15470 * C14961 + (C15469 + C15425) * C14962 + C18110 * C14963) *
                C4993) *
               C152457 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             C18818 * C14963) *
                C152249 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C152242 -
            ((C18819 + C18827) * C14963 + (C16755 + C16790) * C14962 +
             C16756 * C14961) *
                C4993) *
               C152204) *
              C3455 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             C18613 * C14963) *
                C152249 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C152242 -
            ((C18614 + C18615) * C14963 + (C15439 + C15438) * C14962 +
             C15454 * C14961) *
                C4993) *
               C152457 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + C18409 * C14963) *
                C152242 -
            ((C18410 + C18411) * C14963 + (C16170 + C16169) * C14962 +
             (C16168 + C16167) * C14961) *
                C152249 +
            (C18409 * C14961 + (C18411 + C18410) * C14962 +
             (C18414 * C6301 + (C134 * C18401 - C135 * C18400 - C134 * C18402 +
                                C152324 * C18403) *
                                   C152089) *
                 C14963) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C4321 -
               (C712 * C125 + C713 * C124 + C714 * C123 +
                (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                    C122) *
                   C152340 * C152246) *
                  C152141 * C152552 +
              ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) *
                   C152340 * C152246 -
               (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                   C152340 * C4321) *
                  C152141 * C152545 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                   C152340 * C4321 -
               (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) *
                   C152340 * C152246) *
                  C152141 * C152528 +
              ((C712 * C122 + C718 * C123 + C1009 * C124 +
                (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                    C125) *
                   C152340 * C152246 -
               (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
                   C152340 * C4321) *
                  C152141 * C152503) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C122 +
                 C205 * C123 + C206 * C124 + C207 * C125) *
                    C152340 * C4321 -
                (C712 * C125 + C713 * C124 + C714 * C123 +
                 (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                     C122) *
                    C152340 * C152246) *
                   C152546 +
               (((C134 * C1209 - C135 * C1203 - C134 * C1210 +
                  C152324 * C1221) *
                     C122 +
                 C1252 * C123 + C1253 * C124 + C1254 * C125) *
                    C152340 * C152246 -
                (C459 * C125 + C460 * C124 + C461 * C123 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C122) *
                    C152340 * C4321) *
                   C152530 +
               (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C122 +
                 C462 * C123 + C463 * C124 + C464 * C125) *
                    C152340 * C4321 -
                (C2099 * C125 + C2100 * C124 + C2101 * C123 +
                 (C134 * C1699 - C135 * C1680 - C134 * C1700 +
                  C152324 * C1716) *
                     C122) *
                    C152340 * C152246) *
                   C152499) *
                  C3455 +
              (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) *
                    C152340 * C152246 -
                (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                    C152340 * C4321) *
                   C152546 +
               ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) *
                    C152340 * C4321 -
                (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                    C152340 * C152246) *
                   C152530 +
               ((C2101 * C122 + C2100 * C123 + C2099 * C124 +
                 (C134 * C2077 - C135 * C2076 - C134 * C2078 +
                  C152324 * C2079) *
                     C125) *
                    C152340 * C152246 -
                (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) *
                    C152340 * C4321) *
                   C152499) *
                  C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152554 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152551 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152538 -
           (C3037 * C125 + C3038 * C124 + C3039 * C123 +
            (C134 * C2643 - C135 * C2632 - C134 * C2644 + C152324 * C2656) *
                C122) *
               C152340 * C152515) *
              C152141 * C3455 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152551 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152554 -
           (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
               C152538 +
           (C3039 * C122 + C3038 * C123 + C3037 * C124 +
            (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                C125) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C4321 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C152141 * C152552 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152246 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C4321) *
              C152141 * C152545 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C4321 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152246) *
              C152141 * C152528 +
          (((C7427 + C7426 + C7425) * C6301 +
            (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
             C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
             C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
                C152089) *
               C152340 * C152246 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C4321 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152546 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C4321) *
               C152530 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C6301 +
             (C6687 + C6688 + C6689) * C152089) *
                C152340 * C4321 -
            ((C8889 + C8890 + C8891) * C152089 +
             (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
              C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
              C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                 C6301) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C4321) *
               C152546 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C4321 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152530 +
           (((C8891 + C8890 + C8889) * C6301 +
             (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
              C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
              C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C6693 + C6694 + C6695) * C152089 +
             (C6689 + C6688 + C6687) * C6301) *
                C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152554 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152551 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152538 -
           ((C10207 + C10208 + C10209) * C152089 +
            (C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656) *
                C6301) *
               C152340 * C152515) *
              C152141 * C3455 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152551 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152554 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C152538 +
           ((C10209 + C10208 + C10207) * C6301 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152089) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C4321 -
           (C18084 * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152246) *
              C152141 * C152552 +
          (((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
            C18613 * C14963) *
               C152246 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C4321) *
              C152141 * C152545 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C4321 -
           ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
            (C15445 + C15444) * C14961) *
               C152246) *
              C152141 * C152528 +
          (((C15859 + C15860) * C14961 + (C15861 + C15862) * C14962 +
            (C3037 * C6301 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C152089) *
                C14963) *
               C152246 -
           ((C15862 + C15861) * C14963 + (C15860 + C15859) * C14962 +
            (C208 * C152089 + C207 * C6301) * C14961) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C4321 -
            (C18084 * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152246) *
               C152546 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             C18818 * C14963) *
                C152246 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C4321) *
               C152530 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C6301 +
              C462 * C152089) *
                 C14961 +
             (C16791 + C16761) * C14962 + C16795 * C14963) *
                C4321 -
            ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
             (C16761 + C16791) * C14961) *
                C152246) *
               C152499) *
              C3455 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             C18613 * C14963) *
                C152246 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C4321) *
               C152546 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + C18409 * C14963) *
                C4321 -
            ((C18410 + C18411) * C14963 + (C16170 + C16169) * C14962 +
             (C16168 + C16167) * C14961) *
                C152246) *
               C152530 +
           (((C17294 + C17295) * C14961 + (C17296 + C17297) * C14962 +
             (C16788 * C6301 + (C134 * C10185 - C135 * C10184 - C134 * C10186 +
                                C152324 * C10187) *
                                   C152089) *
                 C14963) *
                C152246 -
            ((C17297 + C17296) * C14963 + (C17295 + C17294) * C14962 +
             (C463 * C152089 + C462 * C6301) * C14961) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152554 -
           (C18084 * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152551 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 + C18110 * C14963) *
               C152538 -
           ((C18108 + C18109) * C14963 + (C18089 + C18107) * C14962 +
            C18084 * C14961) *
               C152515) *
              C152141 * C3455 +
          (((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
            C18613 * C14963) *
               C152551 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152554 -
           ((C18614 + C18615) * C14963 + (C15439 + C15438) * C14962 +
            C15454 * C14961) *
               C152538 +
           (C18613 * C14961 + (C18615 + C18614) * C14962 +
            (C18105 * C6301 + (C134 * C18609 - C135 * C18608 - C134 * C18610 +
                               C152324 * C18611) *
                                  C152089) *
                C14963) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152242 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152249 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C4993) *
              C152141 * C152118 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152249 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152242 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C4993) *
              C152141 * C152127 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152242 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152249 +
           ((C6997 + C6996 + C6995) * C6301 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152089) *
               C152340 * C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152242 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152249 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C4993) *
              C152141 * C152118 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152249 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152242 -
           (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
               C4993) *
              C152141 * C152127 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152242 -
           (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
               C152249 +
           (C716 * C122 + C717 * C123 + C719 * C124 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) * C125) *
               C152340 * C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152242 -
           (C18084 * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152249 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 + C18110 * C14963) *
               C4993) *
              C152141 * C152118 +
          (((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
            C18613 * C14963) *
               C152249 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152242 -
           ((C18614 + C18615) * C14963 + (C15439 + C15438) * C14962 +
            C15454 * C14961) *
               C4993) *
              C152141 * C152127 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152242 -
           ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
            (C15445 + C15444) * C14961) *
               C152249 +
           (C15456 * C14961 + (C15449 + C15448) * C14962 +
            (C15466 * C6301 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C152089) *
                C14963) *
               C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C4321 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C152546 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C4321) *
               C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
             C462 * C123 + C463 * C124 + C464 * C125) *
                C152340 * C4321 -
            (C2099 * C125 + C2100 * C124 + C2101 * C123 +
             (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C122) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C4321) *
               C152546 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C4321 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152530 +
           ((C2101 * C122 + C2100 * C123 + C2099 * C124 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C125) *
                C152340 * C152246 -
            (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C4321 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152246) *
              C152141 * C152552 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152246 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C4321) *
              C152141 * C152545 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C4321 -
           (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
               C152246) *
              C152141 * C152528 +
          ((C712 * C122 + C718 * C123 + C1009 * C124 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C125) *
               C152340 * C152246 -
           (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C4321 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C152141 * C152552 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152246 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C4321) *
              C152141 * C152545 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C4321 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152246) *
              C152141 * C152528 +
          (((C7427 + C7426 + C7425) * C6301 +
            (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
             C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
             C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
                C152089) *
               C152340 * C152246 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C4321 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152546 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C4321) *
               C152530 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C6301 +
             (C6687 + C6688 + C6689) * C152089) *
                C152340 * C4321 -
            ((C8889 + C8890 + C8891) * C152089 +
             (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
              C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
              C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                 C6301) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C4321) *
               C152546 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C4321 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152530 +
           (((C8891 + C8890 + C8889) * C6301 +
             (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
              C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
              C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C6693 + C6694 + C6695) * C152089 +
             (C6689 + C6688 + C6687) * C6301) *
                C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C4321 -
           (C18084 * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152246) *
              C152141 * C152552 +
          (((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
            C18613 * C14963) *
               C152246 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C4321) *
              C152141 * C152545 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C4321 -
           ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
            (C15445 + C15444) * C14961) *
               C152246) *
              C152141 * C152528 +
          (((C15859 + C15860) * C14961 + (C15861 + C15862) * C14962 +
            (C3037 * C6301 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C152089) *
                C14963) *
               C152246 -
           ((C15862 + C15861) * C14963 + (C15860 + C15859) * C14962 +
            (C208 * C152089 + C207 * C6301) * C14961) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C4321 -
            (C18084 * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152246) *
               C152546 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             C18818 * C14963) *
                C152246 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C4321) *
               C152530 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C6301 +
              C462 * C152089) *
                 C14961 +
             (C16791 + C16761) * C14962 + C16795 * C14963) *
                C4321 -
            ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
             (C16761 + C16791) * C14961) *
                C152246) *
               C152499) *
              C3455 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             C18613 * C14963) *
                C152246 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C4321) *
               C152546 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + C18409 * C14963) *
                C4321 -
            ((C18410 + C18411) * C14963 + (C16170 + C16169) * C14962 +
             (C16168 + C16167) * C14961) *
                C152246) *
               C152530 +
           (((C17294 + C17295) * C14961 + (C17296 + C17297) * C14962 +
             (C16788 * C6301 + (C134 * C10185 - C135 * C10184 - C134 * C10186 +
                                C152324 * C10187) *
                                   C152089) *
                 C14963) *
                C152246 -
            ((C17297 + C17296) * C14963 + (C17295 + C17294) * C14962 +
             (C463 * C152089 + C462 * C6301) * C14961) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C1851 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C1852 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C1853 -
           (C1880 * C125 + C1881 * C124 + C1882 * C123 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C122) *
               C152340 * C152159 * C152509) *
              C152443 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C1852 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C1851 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C1853 +
           (C1882 * C122 + C1881 * C123 + C1880 * C124 +
            (C134 * C1858 - C135 * C1857 - C134 * C1859 + C152324 * C1860) *
                C125) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152457 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152204) *
              C851 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152204 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152457) *
              C852 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C152457 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C152204) *
              C853 +
          ((C459 * C122 + C465 * C123 + C866 * C124 +
            (C134 * C856 - C135 * C855 - C134 * C857 + C152324 * C858) * C125) *
               C152340 * C152159 * C152204 -
           (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152457 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152204) *
              C851 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152204 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152457) *
              C852 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152457 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152204) *
              C853 +
          (((C7212 + C7211 + C7210) * C6301 +
            (C6303 * C390 - C6304 * C370 - C6303 * C391 + C6298 * C406 +
             C6305 * C392 - C6306 * C371 - C6305 * C393 + C6299 * C407 +
             C6307 * C1858 - C6308 * C1857 - C6307 * C1859 + C6300 * C1860) *
                C152089) *
               C152340 * C152159 * C152204 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C1851 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C1852 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C1853 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C152159 * C152509) *
              C152443 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C1852 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C1851 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C1853 +
           ((C8576 + C8575 + C8574) * C6301 +
            (C6303 * C1505 - C6304 * C1496 - C6303 * C1506 + C6298 * C1520 +
             C6305 * C1515 - C6306 * C1501 - C6305 * C1516 + C6299 * C1525 +
             C6307 * C8552 - C6308 * C8551 - C6307 * C8553 + C6300 * C8554) *
                C152089) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C152457 -
           ((C2880 * C152089 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C6301) *
                C14963 +
            (C1252 * C152089 +
             (C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C6301) *
                C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C152204) *
              C851 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C1252 * C6301 + C1253 * C152089) * C14962 +
            (C2880 * C6301 + C2879 * C152089) * C14963) *
               C152159 * C152204 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C152457) *
              C852 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152159 * C152457 -
           ((C2878 * C152089 + C2879 * C6301) * C14963 +
            (C1254 * C152089 + C1253 * C6301) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C152204) *
              C853 +
          (((C459 * C6301 + C465 * C152089) * C14961 +
            (C1254 * C6301 + C1255 * C152089) * C14962 +
            (C2878 * C6301 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C152089) *
                C14963) *
               C152159 * C152204 -
           ((C719 * C152089 + C717 * C6301) * C14963 +
            (C718 * C152089 + C712 * C6301) * C14962 +
            (C208 * C152089 + C207 * C6301) * C14961) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C1851 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C1852 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C152159 * C1853 -
           ((C17002 * C152089 +
             (C134 * C8341 - C135 * C8334 - C134 * C8342 + C152324 * C8352) *
                 C6301) *
                C14963 +
            (C17003 * C152089 +
             (C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                 C6301) *
                C14962 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C6301) *
                C14961) *
               C152159 * C152509) *
              C152443 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C16167 + C16168) * C14962 + (C16169 + C16170) * C14963) *
               C152159 * C1852 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C1851 -
           ((C15196 * C152089 + C15195 * C6301) * C14963 +
            (C2100 * C152089 + C2101 * C6301) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C1853 +
           ((C1882 * C6301 + C1881 * C152089) * C14961 +
            (C17003 * C6301 +
             (C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                 C152089) *
                C14962 +
            (C17002 * C6301 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C152089) *
                C14963) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152458 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152246) *
              C1851 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152246 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152458) *
              C1852 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152458 -
           (C2099 * C125 + C2100 * C124 + C2101 * C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C152246) *
              C1853 +
          (((C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                C122 +
            (C134 * C2237 - C135 * C2232 - C134 * C2238 + C152324 * C2244) *
                C123 +
            (C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                C124 +
            (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                C125) *
               C152340 * C152246 -
           (C1880 * C125 + C1881 * C124 + C1882 * C123 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C122) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152458 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C152457 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152458) *
               C152204) *
              C359 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152458) *
               C152457 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152458 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152204) *
              C360 +
          (((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
                C152458 -
            (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
                C152246) *
               C152457 +
           ((C1253 * C122 + C1254 * C123 + C1255 * C124 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C125) *
                C152340 * C152246 -
            (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152458 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152457 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152458) *
               C152204) *
              C359 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152458) *
               C152457 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152458 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152204) *
              C360 +
          ((((C6387 + C6386 + C6385) * C6301 +
             (C6388 + C6389 + C6390) * C152089) *
                C152340 * C152458 -
            ((C7425 + C7426 + C7427) * C152089 +
             (C6994 + C6993 + C6992) * C6301) *
                C152340 * C152246) *
               C152457 +
           (((C7759 + C7758 + C7757) * C6301 +
             (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
              C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
              C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C7210 + C7211 + C7212) * C152089 +
             (C6692 + C6691 + C6690) * C6301) *
                C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152458 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C1851 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152246 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152458) *
              C1852 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152458 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152246) *
              C1853 +
          (((C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243 +
             C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
             C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091) *
                C6301 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152089) *
               C152340 * C152246 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C152458 -
            ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152246) *
               C152457 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             ((C134 * C3173 - C135 * C3169 - C134 * C3174 + C152324 * C3181) *
                  C6301 +
              C16189 * C152089) *
                 C14963) *
                C152246 -
            ((C16162 + C16192) * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C152458) *
               C152204) *
              C359 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             (C15438 + C15439) * C14963) *
                C152246 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C152458) *
               C152457 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + (C16169 + C16170) * C14963) *
                C152458 -
            ((C16190 * C152089 + C16189 * C6301) * C14963 +
             (C16170 + C16169) * C14962 + (C16168 + C16167) * C14961) *
                C152246) *
               C152204) *
              C360 +
          ((((C206 * C6301 + C207 * C152089) * C14961 +
             (C15444 + C15445) * C14962 + C15456 * C14963) *
                C152458 -
            ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
             (C15445 + C15444) * C14961) *
                C152246) *
               C152457 +
           (((C16175 + C16176) * C14961 + (C16177 + C16178) * C14962 +
             (C16190 * C6301 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C152089) *
                 C14963) *
                C152246 -
            ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
             (C459 * C152089 + C460 * C6301) * C14961) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152458 -
           ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152246) *
              C1851 +
          (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
            (C16790 + C16755) * C14963) *
               C152246 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152458) *
              C1852 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C152458 -
           ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
            (C16761 + C16791) * C14961) *
               C152246) *
              C1853 +
          (((C17508 + C17496) * C14961 + (C17509 + C17501) * C14962 +
            ((C134 * C10405 - C135 * C10403 - C134 * C10406 +
              C152324 * C10409) *
                 C6301 +
             (C134 * C10407 - C135 * C10404 - C134 * C10408 +
              C152324 * C10410) *
                 C152089) *
                C14963) *
               C152246 -
           ((C17501 + C17509) * C14963 + (C17496 + C17508) * C14962 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C6301) *
                C14961) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                   C122 +
               C205 * C123 + C206 * C124 + C207 * C125) *
                  C152340 * C152159 * C152141 * C129 -
              (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                  C152340 * C152159 * C152141 * C130 +
              (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                  C152340 * C152159 * C152141 * C131 -
              (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
                  C152340 * C152159 * C152141 * C132 +
              (C208 * C122 + C209 * C123 + C210 * C124 +
               (C134 * C158 - C135 * C143 - C134 * C159 + C152324 * C167) *
                   C125) *
                  C152340 * C152159 * C152141 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C152159 * C152546 -
               (C459 * C125 + C460 * C124 + C461 * C123 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C122) *
                   C152340 * C152159 * C152530 +
               ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                    C122 +
                C462 * C123 + C463 * C124 + C464 * C125) *
                   C152340 * C152159 * C152499) *
                  C359 +
              ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) *
                   C152340 * C152159 * C152530 -
               (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                   C152340 * C152159 * C152546 -
               (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) *
                   C152340 * C152159 * C152499) *
                  C360 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                   C152340 * C152159 * C152546 -
               ((C134 * C394 - C135 * C372 - C134 * C395 + C152324 * C408) *
                    C125 +
                C465 * C124 + C459 * C123 + C460 * C122) *
                   C152340 * C152159 * C152530 +
               (C463 * C122 + C464 * C123 + C466 * C124 +
                (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) *
                    C125) *
                   C152340 * C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152547 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152532 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152502) *
              C152141 * C359 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152532 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152547 -
           (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
               C152502) *
              C152141 * C360 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152547 -
           ((C134 * C647 - C135 * C625 - C134 * C648 + C152324 * C661) * C125 +
            C718 * C124 + C712 * C123 + C713 * C122) *
               C152340 * C152532 +
           (C716 * C122 + C717 * C123 + C719 * C124 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) * C125) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C1401 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C1402 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152499) *
              C152543 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C1402 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C1401 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152499) *
              C152526 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C1401 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C1402 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C152159 * C1489 -
          (C459 * C125 + C460 * C124 + C461 * C123 +
           (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
              C152340 * C152159 * C1490 +
          ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
           C462 * C123 + C463 * C124 + C464 * C125) *
              C152340 * C152159 * C1491 -
          ((C134 * C1503 - C135 * C1495 - C134 * C1504 + C152324 * C1519) *
               C125 +
           (C134 * C1505 - C135 * C1496 - C134 * C1506 + C152324 * C1520) *
               C124 +
           (C134 * C1507 - C135 * C1497 - C134 * C1508 + C152324 * C1521) *
               C123 +
           (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
               C122) *
              C152340 * C152159 * C1492 +
          ((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
               C122 +
           (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
               C123 +
           (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
               C124 +
           (C134 * C1517 - C135 * C1502 - C134 * C1518 + C152324 * C1526) *
               C125) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152547 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152532 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152502) *
              C1401 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152532 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152547 -
           ((C134 * C1685 - C135 * C1673 - C134 * C1686 + C152324 * C1709) *
                C125 +
            (C134 * C1687 - C135 * C1674 - C134 * C1688 + C152324 * C1710) *
                C124 +
            (C134 * C1689 - C135 * C1675 - C134 * C1690 + C152324 * C1711) *
                C123 +
            (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                C122) *
               C152340 * C152502) *
              C1402 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152547 -
           ((C134 * C1693 - C135 * C1677 - C134 * C1694 + C152324 * C1713) *
                C125 +
            (C134 * C1695 - C135 * C1678 - C134 * C1696 + C152324 * C1714) *
                C124 +
            (C134 * C1697 - C135 * C1679 - C134 * C1698 + C152324 * C1715) *
                C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C152532 +
           ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                C122 +
            (C134 * C1703 - C135 * C1682 - C134 * C1704 + C152324 * C1718) *
                C123 +
            (C134 * C1705 - C135 * C1683 - C134 * C1706 + C152324 * C1719) *
                C124 +
            (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                C125) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C152141 * C129 -
          ((C6385 + C6386 + C6387) * C152089 +
           (C6384 + C6383 + C6382) * C6301) *
              C152340 * C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C6301 +
           (C6388 + C6389 + C6390) * C152089) *
              C152340 * C152159 * C152141 * C131 -
          ((C6391 + C6392 + C6393) * C152089 +
           (C6390 + C6389 + C6388) * C6301) *
              C152340 * C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C6301 +
           (C6303 * C154 - C6304 * C141 - C6303 * C155 + C6298 * C165 +
            C6305 * C394 - C6306 * C372 - C6305 * C395 + C6299 * C408 +
            C6307 * C396 - C6308 * C373 - C6307 * C397 + C6300 * C409) *
               C152089) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152530 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152546 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6307 * C1503 - C6308 * C1495 - C6307 * C1504 + C6300 * C1519 +
             C6305 * C388 - C6306 * C369 - C6305 * C389 + C6299 * C405 +
             C6303 * C374 - C6304 * C362 - C6303 * C375 + C6298 * C398) *
                C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152547 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152532 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C152141 * C359 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152532 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152547 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C152502) *
              C152141 * C360 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152547 -
           ((C6307 * C1693 - C6308 * C1677 - C6307 * C1694 + C6300 * C1713 +
             C6305 * C1215 - C6306 * C1206 - C6305 * C1216 + C6299 * C1224 +
             C6303 * C627 - C6304 * C615 - C6303 * C628 + C6298 * C651) *
                C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152532 +
           ((C6997 + C6996 + C6995) * C6301 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152089) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C1401 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C1402 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C1401 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C1401 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C1489 -
          ((C6684 + C6685 + C6686) * C152089 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C6301) *
              C152340 * C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C6301 +
           (C6687 + C6688 + C6689) * C152089) *
              C152340 * C152159 * C1491 -
          ((C6307 * C8103 - C6308 * C8099 - C6307 * C8104 + C6300 * C8111 +
            C6305 * C1513 - C6306 * C1500 - C6305 * C1514 + C6299 * C1524 +
            C6303 * C1507 - C6304 * C1497 - C6303 * C1508 + C6298 * C1521) *
               C152089 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C6301) *
              C152340 * C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C6301 +
           (C6303 * C1513 - C6304 * C1500 - C6303 * C1514 + C6298 * C1524 +
            C6305 * C8103 - C6306 * C8099 - C6305 * C8104 + C6299 * C8111 +
            C6307 * C8109 - C6308 * C8102 - C6307 * C8110 + C6300 * C8114) *
               C152089) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152547 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152532 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C1401 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152532 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152547 -
           ((C6307 * C8339 - C6308 * C8333 - C6307 * C8340 + C6300 * C8351 +
             C6305 * C1703 - C6306 * C1682 - C6305 * C1704 + C6299 * C1718 +
             C6303 * C1689 - C6304 * C1675 - C6303 * C1690 + C6298 * C1711) *
                C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C152502) *
              C1402 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152547 -
           ((C6307 * C8343 - C6308 * C8335 - C6307 * C8344 + C6300 * C8353 +
             C6305 * C2237 - C6306 * C2232 - C6305 * C2238 + C6299 * C2244 +
             C6303 * C1697 - C6304 * C1679 - C6303 * C1698 + C6298 * C1715) *
                C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152532 +
           ((C6303 * C1701 - C6304 * C1681 - C6303 * C1702 + C6298 * C1717 +
             C6305 * C8341 - C6306 * C8334 - C6305 * C8342 + C6299 * C8352 +
             C6307 * C8347 - C6308 * C8337 - C6307 * C8348 + C6300 * C8355) *
                C6301 +
            (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
             C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
             C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                C152089) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C6301 +
            C205 * C152089) *
               C14961 +
           ((C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C6301 +
            C714 * C152089) *
               C14962 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C6301 +
            C715 * C152089) *
               C14963) *
              C152159 * C152141 * C129 -
          ((C716 * C152089 + C715 * C6301) * C14963 +
           (C713 * C152089 + C714 * C6301) * C14962 +
           (C206 * C152089 + C205 * C6301) * C14961) *
              C152159 * C152141 * C130 +
          ((C206 * C6301 + C207 * C152089) * C14961 +
           (C713 * C6301 + C712 * C152089) * C14962 +
           (C716 * C6301 + C717 * C152089) * C14963) *
              C152159 * C152141 * C131 -
          ((C719 * C152089 + C717 * C6301) * C14963 +
           (C718 * C152089 + C712 * C6301) * C14962 +
           (C208 * C152089 + C207 * C6301) * C14961) *
              C152159 * C152141 * C132 +
          ((C208 * C6301 + C209 * C152089) * C14961 +
           (C718 * C6301 + C1009 * C152089) * C14962 +
           (C719 * C6301 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                C152089) *
               C14963) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            ((C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C6301 +
             C714 * C152089) *
                C14962 +
            ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) *
                 C6301 +
             C715 * C152089) *
                C14963) *
               C152159 * C152546 -
           ((C2880 * C152089 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C6301) *
                C14963 +
            (C1252 * C152089 +
             (C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C6301) *
                C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            ((C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C6301 +
             C2101 * C152089) *
                C14962 +
            ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                 C6301 +
             C15195 * C152089) *
                C14963) *
               C152159 * C152499) *
              C359 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C1252 * C6301 + C1253 * C152089) * C14962 +
            (C2880 * C6301 + C2879 * C152089) * C14963) *
               C152159 * C152530 -
           ((C716 * C152089 + C715 * C6301) * C14963 +
            (C713 * C152089 + C714 * C6301) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C152546 -
           ((C15196 * C152089 + C15195 * C6301) * C14963 +
            (C2100 * C152089 + C2101 * C6301) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C152499) *
              C360 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C713 * C6301 + C712 * C152089) * C14962 +
            (C716 * C6301 + C717 * C152089) * C14963) *
               C152159 * C152546 -
           ((C2878 * C152089 + C2879 * C6301) * C14963 +
            (C1254 * C152089 + C1253 * C6301) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C152530 +
           ((C463 * C6301 + C464 * C152089) * C14961 +
            (C2100 * C6301 + C2099 * C152089) * C14962 +
            (C15196 * C6301 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152547 -
           ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152532 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 +
            ((C134 * C2645 - C135 * C2633 - C134 * C2646 + C152324 * C2657) *
                 C6301 +
             C15465 * C152089) *
                C14963) *
               C152502) *
              C152141 * C359 +
          (((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
            (C15438 + C15439) * C14963) *
               C152532 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152547 -
           ((C15466 * C152089 + C15465 * C6301) * C14963 +
            (C15439 + C15438) * C14962 + C15454 * C14961) *
               C152502) *
              C152141 * C360 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152547 -
           ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
            (C15445 + C15444) * C14961) *
               C152532 +
           (C15456 * C14961 + (C15449 + C15448) * C14962 +
            (C15466 * C6301 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C152089) *
                C14963) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C1401 -
           ((C16162 + C16192) * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            ((C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C6301 +
             C2101 * C152089) *
                C14962 +
            ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                 C6301 +
             C15195 * C152089) *
                C14963) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C16167 + C16168) * C14962 + (C16169 + C16170) * C14963) *
               C152159 * C1402 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C1401 -
           ((C15196 * C152089 + C15195 * C6301) * C14963 +
            (C2100 * C152089 + C2101 * C6301) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152159 * C1401 -
           ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C1402 +
           ((C463 * C6301 + C464 * C152089) * C14961 +
            (C2100 * C6301 + C2099 * C152089) * C14962 +
            (C15196 * C6301 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C6301 +
            C205 * C152089) *
               C14961 +
           (C15467 + C15419) * C14962 + C15470 * C14963) *
              C152159 * C1489 -
          ((C16162 + C16192) * C14963 + (C16157 + C16191) * C14962 +
           (C461 * C152089 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C6301) *
               C14961) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C6301 +
            C462 * C152089) *
               C14961 +
           ((C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C6301 +
            C2101 * C152089) *
               C14962 +
           ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                C6301 +
            C15195 * C152089) *
               C14963) *
              C152159 * C1491 -
          (((C134 * C8339 - C135 * C8333 - C134 * C8340 + C152324 * C8351) *
                C152089 +
            (C134 * C8341 - C135 * C8334 - C134 * C8342 + C152324 * C8352) *
                C6301) *
               C14963 +
           ((C134 * C2237 - C135 * C2232 - C134 * C2238 + C152324 * C2244) *
                C152089 +
            (C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                C6301) *
               C14962 +
           (C1882 * C152089 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C6301) *
               C14961) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C6301 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C152089) *
               C14961 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C6301 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C152089) *
               C14962 +
           ((C134 * C8347 - C135 * C8337 - C134 * C8348 + C152324 * C8355) *
                C6301 +
            (C134 * C8349 - C135 * C8338 - C134 * C8350 + C152324 * C8356) *
                C152089) *
               C14963) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152547 -
           ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152532 +
           (C15470 * C14961 + (C15469 + C15425) * C14962 +
            ((C134 * C2645 - C135 * C2633 - C134 * C2646 + C152324 * C2657) *
                 C6301 +
             C15465 * C152089) *
                C14963) *
               C152502) *
              C1401 +
          (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
            (C16790 + C16755) * C14963) *
               C152532 -
           (C16756 * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152547 -
           (((C134 * C9665 - C135 * C9655 - C134 * C9666 + C152324 * C9673) *
                 C152089 +
             (C134 * C9661 - C135 * C9653 - C134 * C9662 + C152324 * C9671) *
                 C6301) *
                C14963 +
            (C16755 + C16790) * C14962 + C16756 * C14961) *
               C152502) *
              C1402 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            (C16791 + C16761) * C14962 + C16795 * C14963) *
               C152547 -
           ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
            (C16761 + C16791) * C14961) *
               C152532 +
           (C16795 * C14961 + (C16794 + C16793) * C14962 +
            ((C134 * C9663 - C135 * C9654 - C134 * C9664 + C152324 * C9672) *
                 C6301 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152089) *
                C14963) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152458 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C1401 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152458) *
               C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
             C462 * C123 + C463 * C124 + C464 * C125) *
                C152340 * C152458 -
            (C2099 * C125 + C2100 * C124 + C2101 * C123 +
             (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C122) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152458) *
               C1401 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152458 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C1402 +
           ((C2101 * C122 + C2100 * C123 + C2099 * C124 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C125) *
                C152340 * C152246 -
            (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152458 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152246) *
              C152141 * C851 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152246 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152458) *
              C152141 * C852 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152458 -
           (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
               C152246) *
              C152141 * C853 +
          ((C712 * C122 + C718 * C123 + C1009 * C124 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C125) *
               C152340 * C152246 -
           (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152458 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C152141 * C851 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152246 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152458) *
              C152141 * C852 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152458 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152246) *
              C152141 * C853 +
          (((C7427 + C7426 + C7425) * C6301 +
            (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
             C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
             C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
                C152089) *
               C152340 * C152246 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152458 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C1401 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152458) *
               C1402 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C6301 +
             (C6687 + C6688 + C6689) * C152089) *
                C152340 * C152458 -
            ((C8889 + C8890 + C8891) * C152089 +
             (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
              C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
              C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                 C6301) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152458) *
               C1401 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152458 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C1402 +
           (((C8891 + C8890 + C8889) * C6301 +
             (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
              C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
              C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C6693 + C6694 + C6695) * C152089 +
             (C6689 + C6688 + C6687) * C6301) *
                C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152458 -
           ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
            (C15419 + C15467) * C14961) *
               C152246) *
              C152141 * C851 +
          (((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
            (C15438 + C15439) * C14963) *
               C152246 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152458) *
              C152141 * C852 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152458 -
           ((C15448 + C15449) * C14963 + (C15447 + C15446) * C14962 +
            (C15445 + C15444) * C14961) *
               C152246) *
              C152141 * C853 +
          (((C15859 + C15860) * C14961 + (C15861 + C15862) * C14962 +
            (C3037 * C6301 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C152089) *
                C14963) *
               C152246 -
           ((C15862 + C15861) * C14963 + (C15860 + C15859) * C14962 +
            (C208 * C152089 + C207 * C6301) * C14961) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C6301 +
              C205 * C152089) *
                 C14961 +
             (C15467 + C15419) * C14962 + C15470 * C14963) *
                C152458 -
            ((C15425 + C15469) * C14963 + (C15424 + C15468) * C14962 +
             (C15419 + C15467) * C14961) *
                C152246) *
               C1401 +
           (((C16191 + C16157) * C14961 + (C16192 + C16162) * C14962 +
             (C16790 + C16755) * C14963) *
                C152246 -
            (C16756 * C14963 + (C16157 + C16191) * C14962 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C6301) *
                 C14961) *
                C152458) *
               C1402 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C6301 +
              C462 * C152089) *
                 C14961 +
             (C16791 + C16761) * C14962 + C16795 * C14963) *
                C152458 -
            ((C16793 + C16794) * C14963 + (C16766 + C16792) * C14962 +
             (C16761 + C16791) * C14961) *
                C152246) *
               C152499) *
              C152443 +
          ((((C15434 + C15435) * C14961 + (C15436 + C15437) * C14962 +
             (C15438 + C15439) * C14963) *
                C152246 -
            (C15454 * C14963 + (C15435 + C15434) * C14962 +
             (C206 * C152089 + C205 * C6301) * C14961) *
                C152458) *
               C1401 +
           (((C461 * C6301 + C460 * C152089) * C14961 +
             (C16167 + C16168) * C14962 + (C16169 + C16170) * C14963) *
                C152458 -
            ((C16190 * C152089 + C16189 * C6301) * C14963 +
             (C16170 + C16169) * C14962 + (C16168 + C16167) * C14961) *
                C152246) *
               C1402 +
           (((C17294 + C17295) * C14961 + (C17296 + C17297) * C14962 +
             (C16788 * C6301 + (C134 * C10185 - C135 * C10184 - C134 * C10186 +
                                C152324 * C10187) *
                                   C152089) *
                 C14963) *
                C152246 -
            ((C17297 + C17296) * C14963 + (C17295 + C17294) * C14962 +
             (C463 * C152089 + C462 * C6301) * C14961) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152546 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152530 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152499) *
              C359 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152530 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152546 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152499) *
              C360 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C152546 -
           ((C134 * C394 - C135 * C372 - C134 * C395 + C152324 * C408) * C125 +
            C465 * C124 + C459 * C123 + C460 * C122) *
               C152340 * C152159 * C152530 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C152159 * C152141 * C129 -
          (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
              C152159 * C152141 * C130 +
          (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
              C152159 * C152141 * C131 -
          (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
              C152159 * C152141 * C132 +
          (C208 * C122 + C209 * C123 + C210 * C124 +
           (C134 * C158 - C135 * C143 - C134 * C159 + C152324 * C167) * C125) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C1401 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C1402 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152499) *
              C152543 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C1402 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C1401 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152499) *
              C152526 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C1401 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C1402 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C152159 * C1489 -
          (C459 * C125 + C460 * C124 + C461 * C123 +
           (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
              C152340 * C152159 * C1490 +
          ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
           C462 * C123 + C463 * C124 + C464 * C125) *
              C152340 * C152159 * C1491 -
          ((C134 * C1503 - C135 * C1495 - C134 * C1504 + C152324 * C1519) *
               C125 +
           (C134 * C1505 - C135 * C1496 - C134 * C1506 + C152324 * C1520) *
               C124 +
           (C134 * C1507 - C135 * C1497 - C134 * C1508 + C152324 * C1521) *
               C123 +
           (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
               C122) *
              C152340 * C152159 * C1492 +
          ((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
               C122 +
           (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
               C123 +
           (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
               C124 +
           (C134 * C1517 - C135 * C1502 - C134 * C1518 + C152324 * C1526) *
               C125) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C152141 * C129 -
          ((C6385 + C6386 + C6387) * C152089 +
           (C6384 + C6383 + C6382) * C6301) *
              C152340 * C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C6301 +
           (C6388 + C6389 + C6390) * C152089) *
              C152340 * C152159 * C152141 * C131 -
          ((C6391 + C6392 + C6393) * C152089 +
           (C6390 + C6389 + C6388) * C6301) *
              C152340 * C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C6301 +
           (C6303 * C154 - C6304 * C141 - C6303 * C155 + C6298 * C165 +
            C6305 * C394 - C6306 * C372 - C6305 * C395 + C6299 * C408 +
            C6307 * C396 - C6308 * C373 - C6307 * C397 + C6300 * C409) *
               C152089) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152530 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152546 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6307 * C1503 - C6308 * C1495 - C6307 * C1504 + C6300 * C1519 +
             C6305 * C388 - C6306 * C369 - C6305 * C389 + C6299 * C405 +
             C6303 * C374 - C6304 * C362 - C6303 * C375 + C6298 * C398) *
                C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C1401 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C1402 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C1401 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C1401 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C1489 -
          ((C6684 + C6685 + C6686) * C152089 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C6301) *
              C152340 * C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C6301 +
           (C6687 + C6688 + C6689) * C152089) *
              C152340 * C152159 * C1491 -
          ((C6307 * C8103 - C6308 * C8099 - C6307 * C8104 + C6300 * C8111 +
            C6305 * C1513 - C6306 * C1500 - C6305 * C1514 + C6299 * C1524 +
            C6303 * C1507 - C6304 * C1497 - C6303 * C1508 + C6298 * C1521) *
               C152089 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C6301) *
              C152340 * C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C6301 +
           (C6303 * C1513 - C6304 * C1500 - C6303 * C1514 + C6298 * C1524 +
            C6305 * C8103 - C6306 * C8099 - C6305 * C8104 + C6299 * C8111 +
            C6307 * C8109 - C6308 * C8102 - C6307 * C8110 + C6300 * C8114) *
               C152089) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C6301 +
            C205 * C152089) *
               C14961 +
           ((C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C6301 +
            C714 * C152089) *
               C14962 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C6301 +
            C715 * C152089) *
               C14963) *
              C152159 * C152141 * C129 -
          ((C716 * C152089 + C715 * C6301) * C14963 +
           (C713 * C152089 + C714 * C6301) * C14962 +
           (C206 * C152089 + C205 * C6301) * C14961) *
              C152159 * C152141 * C130 +
          ((C206 * C6301 + C207 * C152089) * C14961 +
           (C713 * C6301 + C712 * C152089) * C14962 +
           (C716 * C6301 + C717 * C152089) * C14963) *
              C152159 * C152141 * C131 -
          ((C719 * C152089 + C717 * C6301) * C14963 +
           (C718 * C152089 + C712 * C6301) * C14962 +
           (C208 * C152089 + C207 * C6301) * C14961) *
              C152159 * C152141 * C132 +
          ((C208 * C6301 + C209 * C152089) * C14961 +
           (C718 * C6301 + C1009 * C152089) * C14962 +
           (C719 * C6301 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                C152089) *
               C14963) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            ((C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C6301 +
             C714 * C152089) *
                C14962 +
            ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) *
                 C6301 +
             C715 * C152089) *
                C14963) *
               C152159 * C152546 -
           ((C2880 * C152089 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C6301) *
                C14963 +
            (C1252 * C152089 +
             (C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C6301) *
                C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            ((C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C6301 +
             C2101 * C152089) *
                C14962 +
            ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                 C6301 +
             C15195 * C152089) *
                C14963) *
               C152159 * C152499) *
              C359 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C1252 * C6301 + C1253 * C152089) * C14962 +
            (C2880 * C6301 + C2879 * C152089) * C14963) *
               C152159 * C152530 -
           ((C716 * C152089 + C715 * C6301) * C14963 +
            (C713 * C152089 + C714 * C6301) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C152546 -
           ((C15196 * C152089 + C15195 * C6301) * C14963 +
            (C2100 * C152089 + C2101 * C6301) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C152499) *
              C360 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C713 * C6301 + C712 * C152089) * C14962 +
            (C716 * C6301 + C717 * C152089) * C14963) *
               C152159 * C152546 -
           ((C2878 * C152089 + C2879 * C6301) * C14963 +
            (C1254 * C152089 + C1253 * C6301) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C152530 +
           ((C463 * C6301 + C464 * C152089) * C14961 +
            (C2100 * C6301 + C2099 * C152089) * C14962 +
            (C15196 * C6301 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C6301 +
             C205 * C152089) *
                C14961 +
            (C15467 + C15419) * C14962 + C15470 * C14963) *
               C152159 * C1401 -
           ((C16162 + C16192) * C14963 + (C16157 + C16191) * C14962 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C6301) *
                C14961) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C6301 +
             C462 * C152089) *
                C14961 +
            ((C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C6301 +
             C2101 * C152089) *
                C14962 +
            ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                 C6301 +
             C15195 * C152089) *
                C14963) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C6301 + C460 * C152089) * C14961 +
            (C16167 + C16168) * C14962 + (C16169 + C16170) * C14963) *
               C152159 * C1402 -
           (C15454 * C14963 + (C15435 + C15434) * C14962 +
            (C206 * C152089 + C205 * C6301) * C14961) *
               C152159 * C1401 -
           ((C15196 * C152089 + C15195 * C6301) * C14963 +
            (C2100 * C152089 + C2101 * C6301) * C14962 +
            (C463 * C152089 + C462 * C6301) * C14961) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C6301 + C207 * C152089) * C14961 +
            (C15444 + C15445) * C14962 + C15456 * C14963) *
               C152159 * C1401 -
           ((C16178 + C16177) * C14963 + (C16176 + C16175) * C14962 +
            (C459 * C152089 + C460 * C6301) * C14961) *
               C152159 * C1402 +
           ((C463 * C6301 + C464 * C152089) * C14961 +
            (C2100 * C6301 + C2099 * C152089) * C14962 +
            (C15196 * C6301 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C6301 +
            C205 * C152089) *
               C14961 +
           (C15467 + C15419) * C14962 + C15470 * C14963) *
              C152159 * C1489 -
          ((C16162 + C16192) * C14963 + (C16157 + C16191) * C14962 +
           (C461 * C152089 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C6301) *
               C14961) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C6301 +
            C462 * C152089) *
               C14961 +
           ((C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C6301 +
            C2101 * C152089) *
               C14962 +
           ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                C6301 +
            C15195 * C152089) *
               C14963) *
              C152159 * C1491 -
          (((C134 * C8339 - C135 * C8333 - C134 * C8340 + C152324 * C8351) *
                C152089 +
            (C134 * C8341 - C135 * C8334 - C134 * C8342 + C152324 * C8352) *
                C6301) *
               C14963 +
           ((C134 * C2237 - C135 * C2232 - C134 * C2238 + C152324 * C2244) *
                C152089 +
            (C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                C6301) *
               C14962 +
           (C1882 * C152089 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C6301) *
               C14961) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C6301 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C152089) *
               C14961 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C6301 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C152089) *
               C14962 +
           ((C134 * C8347 - C135 * C8337 - C134 * C8348 + C152324 * C8355) *
                C6301 +
            (C134 * C8349 - C135 * C8338 - C134 * C8350 + C152324 * C8356) *
                C152089) *
               C14963) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C152200 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C152207 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C152159 * C3799) *
              C152118 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C33093 + C33094 + C33095) * C152404) *
               C152159 * C152207 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C152200 -
           ((C34159 + C34158 + C34157) * C152404 +
            (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
               C152159 * C3799) *
              C152127 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152159 * C152200 -
           ((C33098 + C33097 + C33096) * C152404 +
            (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
               C152159 * C152207 +
           ((C463 * C152522 + C464 * C152523 + C466 * C23381) * C152475 +
            (C2100 * C152522 + C2099 * C152523 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C23381) *
                C152404) *
               C152159 * C3799) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C152458 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152246) *
               C152200 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152246 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C152458) *
               C152207 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C152522 +
              C462 * C152523 + C463 * C23381) *
                 C152475 +
             (C33660 + C33661 + C33662) * C152404) *
                C152458 -
            ((C33663 + C33664 + C33665) * C152404 +
             (C33662 + C33661 + C33660) * C152475) *
                C152246) *
               C3799) *
              C3455 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152246 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C152458) *
               C152200 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C152458 -
            ((C35211 + C35212 + C35213) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152246) *
               C152207 +
           (((C34157 + C34158 + C34159) * C152475 +
             (C15195 * C152522 + C15196 * C152523 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C23381) *
                 C152404) *
                C152246 -
            ((C34159 + C34158 + C34157) * C152404 +
             (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
                C152458) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C152553 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C152549 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C152159 * C152535 -
           ((C34356 + C34355 + C34354) * C152404 +
            (C1881 * C23381 + C1882 * C152523 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152522) *
                C152475) *
               C152159 * C152509) *
              C3455 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C33093 + C33094 + C33095) * C152404) *
               C152159 * C152549 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C152553 -
           ((C34159 + C34158 + C34157) * C152404 +
            (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
               C152159 * C152535 +
           ((C1882 * C152522 + C1881 * C152523 + C1880 * C23381) * C152475 +
            (C17003 * C152522 + C33866 * C152523 +
             (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                 C23381) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C3315 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C152204) *
              C152552 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C33093 + C33094 + C33095) * C152404) *
               C152159 * C152204 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C3315) *
              C152545 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152159 * C3315 -
           ((C33098 + C33097 + C33096) * C152404 +
            (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
               C152159 * C152204) *
              C152528 +
          (((C459 * C152522 + C465 * C152523 + C866 * C23381) * C152475 +
            (C1254 * C152522 + C1255 * C152523 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C23381) *
                C152404) *
               C152159 * C152204 -
           ((C32799 + C32798 + C32797) * C152404 +
            (C209 * C23381 + C208 * C152523 + C207 * C152522) * C152475) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C152547 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152532 +
            ((C32396 + C32395 + C32394) * C152475 +
             (C34915 + C34916 + C34917) * C152404) *
                C152502) *
               C3315 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152532 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C152547 -
            ((C35605 + C35606 + C35607) * C152404 +
             (C33659 + C33658 + C33657) * C152475) *
                C152502) *
               C152204) *
              C3455 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152532 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C152547 -
            ((C35408 + C35409 + C35410) * C152404 +
             (C32402 + C32401 + C32400) * C152475) *
                C152502) *
               C3315 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C152547 -
            ((C35211 + C35212 + C35213) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152532 +
            ((C35213 + C35212 + C35211) * C152475 +
             (C16189 * C152522 + C16190 * C152523 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C23381) *
                 C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C152458 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152246) *
               C3315 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152246 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C152458) *
               C152204) *
              C152118 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152246 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C152458) *
               C3315 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C152458 -
            ((C35211 + C35212 + C35213) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152246) *
               C152204) *
              C152127 +
          ((((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
             (C32403 + C32404 + C32405) * C152404) *
                C152458 -
            ((C32406 + C32407 + C32408) * C152404 +
             (C32405 + C32404 + C32403) * C152475) *
                C152246) *
               C3315 +
           (((C33096 + C33097 + C33098) * C152475 +
             (C2879 * C152522 + C2878 * C152523 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C23381) *
                 C152404) *
                C152246 -
            ((C33098 + C33097 + C33096) * C152404 +
             (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
                C152458) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C3315 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C152204) *
              C152552 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C33093 + C33094 + C33095) * C152404) *
               C152159 * C152204 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C3315) *
              C152545 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152159 * C3315 -
           ((C33098 + C33097 + C33096) * C152404 +
            (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
               C152159 * C152204) *
              C152528 +
          (((C459 * C152522 + C465 * C152523 + C866 * C23381) * C152475 +
            (C1254 * C152522 + C1255 * C152523 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C23381) *
                C152404) *
               C152159 * C152204 -
           ((C32799 + C32798 + C32797) * C152404 +
            (C209 * C23381 + C208 * C152523 + C207 * C152522) * C152475) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C152553 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C152549 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C152159 * C152535 -
           ((C34356 + C34355 + C34354) * C152404 +
            (C1881 * C23381 + C1882 * C152523 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152522) *
                C152475) *
               C152159 * C152509) *
              C3455 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C33093 + C33094 + C33095) * C152404) *
               C152159 * C152549 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C152553 -
           ((C34159 + C34158 + C34157) * C152404 +
            (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
               C152159 * C152535 +
           ((C1882 * C152522 + C1881 * C152523 + C1880 * C23381) * C152475 +
            (C17003 * C152522 + C33866 * C152523 +
             (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                 C23381) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C4321 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152246) *
               C152200 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152246 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C4321) *
               C152207 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C152522 +
              C462 * C152523 + C463 * C23381) *
                 C152475 +
             (C33660 + C33661 + C33662) * C152404) *
                C4321 -
            ((C33663 + C33664 + C33665) * C152404 +
             (C33662 + C33661 + C33660) * C152475) *
                C152246) *
               C3799) *
              C152443 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152246 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C4321) *
               C152200 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C4321 -
            ((C35211 + C35212 + C35213) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152246) *
               C152207 +
           (((C34157 + C34158 + C34159) * C152475 +
             (C15195 * C152522 + C15196 * C152523 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C23381) *
                 C152404) *
                C152246 -
            ((C34159 + C34158 + C34157) * C152404 +
             (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
                C4321) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152242 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152249 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C34915 + C34916 + C34917) * C152404) *
               C4993) *
              C152200 +
          (((C33090 + C33091 + C33092) * C152475 +
            (C33657 + C33658 + C33659) * C152404) *
               C152249 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152242 -
           ((C35605 + C35606 + C35607) * C152404 +
            (C33659 + C33658 + C33657) * C152475) *
               C4993) *
              C152207 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C152242 -
           ((C33663 + C33664 + C33665) * C152404 +
            (C33662 + C33661 + C33660) * C152475) *
               C152249 +
           ((C33665 + C33664 + C33663) * C152475 +
            (C16789 * C152522 + C16788 * C152523 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C23381) *
                C152404) *
               C4993) *
              C3799) *
         C152113) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C4321 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152246) *
              C152553 +
          (((C33090 + C33091 + C33092) * C152475 +
            (C33657 + C33658 + C33659) * C152404) *
               C152246 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C4321) *
              C152549 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C4321 -
           ((C33663 + C33664 + C33665) * C152404 +
            (C33662 + C33661 + C33660) * C152475) *
               C152246) *
              C152535 +
          (((C34354 + C34355 + C34356) * C152475 +
            (C17507 * C152522 + C17002 * C152523 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C23381) *
                C152404) *
               C152246 -
           ((C34356 + C34355 + C34354) * C152404 +
            (C1881 * C23381 + C1882 * C152523 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152522) *
                C152475) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C4321 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152246) *
               C3315 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152246 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C4321) *
               C152204) *
              C152543 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152246 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C4321) *
               C3315 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C4321 -
            ((C35211 + C35212 + C35213) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152246) *
               C152204) *
              C152526 +
          ((((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
             (C32403 + C32404 + C32405) * C152404) *
                C4321 -
            ((C32406 + C32407 + C32408) * C152404 +
             (C32405 + C32404 + C32403) * C152475) *
                C152246) *
               C3315 +
           (((C33096 + C33097 + C33098) * C152475 +
             (C2879 * C152522 + C2878 * C152523 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C23381) *
                 C152404) *
                C152246 -
            ((C33098 + C33097 + C33096) * C152404 +
             (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152554 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152551 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C34915 + C34916 + C34917) * C152404) *
               C152538 -
           ((C34918 + C34919 + C34920) * C152404 +
            (C34917 + C34916 + C34915) * C152475) *
               C152515) *
              C3315 +
          (((C33090 + C33091 + C33092) * C152475 +
            (C33657 + C33658 + C33659) * C152404) *
               C152551 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152554 -
           ((C35605 + C35606 + C35607) * C152404 +
            (C33659 + C33658 + C33657) * C152475) *
               C152538 +
           ((C35607 + C35606 + C35605) * C152475 +
            (C18826 * C152522 + C18414 * C152523 +
             (C134 * C18401 - C135 * C18400 - C134 * C18402 +
              C152324 * C18403) *
                 C23381) *
                C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C152242 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152249 +
            ((C32396 + C32395 + C32394) * C152475 +
             (C34915 + C34916 + C34917) * C152404) *
                C4993) *
               C3315 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152249 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C152242 -
            ((C35605 + C35606 + C35607) * C152404 +
             (C33659 + C33658 + C33657) * C152475) *
                C4993) *
               C152204) *
              C152443 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152249 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C152242 -
            ((C35408 + C35409 + C35410) * C152404 +
             (C32402 + C32401 + C32400) * C152475) *
                C4993) *
               C3315 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C152242 -
            ((C35211 + C35212 + C35213) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152249 +
            ((C35213 + C35212 + C35211) * C152475 +
             (C16189 * C152522 + C16190 * C152523 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C23381) *
                 C152404) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C4321 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152246) *
               C3315 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152246 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C4321) *
               C152204) *
              C152543 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152246 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C4321) *
               C3315 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C4321 -
            ((C35211 + C35212 + C35213) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152246) *
               C152204) *
              C152526 +
          ((((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
             (C32403 + C32404 + C32405) * C152404) *
                C4321 -
            ((C32406 + C32407 + C32408) * C152404 +
             (C32405 + C32404 + C32403) * C152475) *
                C152246) *
               C3315 +
           (((C33096 + C33097 + C33098) * C152475 +
             (C2879 * C152522 + C2878 * C152523 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C23381) *
                 C152404) *
                C152246 -
            ((C33098 + C33097 + C33096) * C152404 +
             (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C4321 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152246) *
              C152553 +
          (((C33090 + C33091 + C33092) * C152475 +
            (C33657 + C33658 + C33659) * C152404) *
               C152246 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C4321) *
              C152549 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C4321 -
           ((C33663 + C33664 + C33665) * C152404 +
            (C33662 + C33661 + C33660) * C152475) *
               C152246) *
              C152535 +
          (((C34354 + C34355 + C34356) * C152475 +
            (C17507 * C152522 + C17002 * C152523 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C23381) *
                C152404) *
               C152246 -
           ((C34356 + C34355 + C34354) * C152404 +
            (C1881 * C23381 + C1882 * C152523 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152522) *
                C152475) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C1851 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C1852 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C152159 * C1853 -
           ((C33866 * C23381 + C17003 * C152523 + C17506 * C152522) * C152404 +
            (C1881 * C23381 + C1882 * C152523 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152522) *
                C152475) *
               C152159 * C152509) *
              C152443 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C33093 + C33094 + C33095) * C152404) *
               C152159 * C1852 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C1851 -
           ((C2099 * C23381 + C2100 * C152523 + C2101 * C152522) * C152404 +
            (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
               C152159 * C1853 +
           ((C1882 * C152522 + C1881 * C152523 + C1880 * C23381) * C152475 +
            (C17003 * C152522 + C33866 * C152523 +
             (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                 C23381) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C152457 -
           ((C1253 * C23381 + C1252 * C152523 + C16187 * C152522) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C152204) *
              C851 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C1252 * C152522 + C1253 * C152523 + C1254 * C23381) * C152404) *
               C152159 * C152204 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C152457) *
              C852 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152159 * C152457 -
           ((C1255 * C23381 + C1254 * C152523 + C1253 * C152522) * C152404 +
            (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
               C152159 * C152204) *
              C853 +
          (((C459 * C152522 + C465 * C152523 + C866 * C23381) * C152475 +
            (C1254 * C152522 + C1255 * C152523 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C23381) *
                C152404) *
               C152159 * C152204 -
           ((C1009 * C23381 + C718 * C152523 + C712 * C152522) * C152404 +
            (C209 * C23381 + C208 * C152523 + C207 * C152522) * C152475) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C2393 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C2394 +
            ((C32396 + C32395 + C32394) * C152475 +
             (C34915 + C34916 + C34917) * C152404) *
                C152502) *
               C152457 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C2394 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C2393 -
            ((C16190 * C23381 + C16189 * C152523 + C16785 * C152522) * C152404 +
             (C33659 + C33658 + C33657) * C152475) *
                C152502) *
               C152204) *
              C152443 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C2394 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C2393 -
            ((C3037 * C23381 + C3038 * C152523 + C3039 * C152522) * C152404 +
             (C32402 + C32401 + C32400) * C152475) *
                C152502) *
               C152457 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C2393 -
            ((C35211 + C35212 + C35213) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C2394 +
            ((C35213 + C35212 + C35211) * C152475 +
             (C16189 * C152522 + C16190 * C152523 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C23381) *
                 C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152458 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152246) *
              C1851 +
          (((C33090 + C33091 + C33092) * C152475 +
            (C33657 + C33658 + C33659) * C152404) *
               C152246 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152458) *
              C1852 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C152458 -
           ((C33663 + C33664 + C33665) * C152404 +
            (C33662 + C33661 + C33660) * C152475) *
               C152246) *
              C1853 +
          (((C34354 + C34355 + C34356) * C152475 +
            (C17507 * C152522 + C17002 * C152523 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C23381) *
                C152404) *
               C152246 -
           ((C34356 + C34355 + C34354) * C152404 +
            (C1881 * C23381 + C1882 * C152523 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152522) *
                C152475) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C152458 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152246) *
               C152457 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C16188 * C152522 + C2880 * C152523 + C2879 * C23381) * C152404) *
                C152246 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C152458) *
               C152204) *
              C359 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152246 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C152458) *
               C152457 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C152458 -
            ((C2878 * C23381 + C2879 * C152523 + C2880 * C152522) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152246) *
               C152204) *
              C360 +
          ((((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
             (C32403 + C32404 + C32405) * C152404) *
                C152458 -
            ((C32406 + C32407 + C32408) * C152404 +
             (C32405 + C32404 + C32403) * C152475) *
                C152246) *
               C152457 +
           (((C33096 + C33097 + C33098) * C152475 +
             (C2879 * C152522 + C2878 * C152523 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C23381) *
                 C152404) *
                C152246 -
            ((C33098 + C33097 + C33096) * C152404 +
             (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C3010 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C3011 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C34915 + C34916 + C34917) * C152404) *
               C3012 -
           ((C34918 + C34919 + C34920) * C152404 +
            (C34917 + C34916 + C34915) * C152475) *
               C152515) *
              C152457 +
          (((C33090 + C33091 + C33092) * C152475 +
            (C33657 + C33658 + C33659) * C152404) *
               C3011 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C3010 -
           ((C35605 + C35606 + C35607) * C152404 +
            (C33659 + C33658 + C33657) * C152475) *
               C3012 +
           ((C35607 + C35606 + C35605) * C152475 +
            (C18826 * C152522 + C18414 * C152523 +
             (C134 * C18401 - C135 * C18400 - C134 * C18402 +
              C152324 * C18403) *
                 C23381) *
                C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C152522 +
                C205 * C152523 + C206 * C23381) *
                   C152475 +
               (C15462 * C152522 + C714 * C152523 + C713 * C23381) * C152404) *
                  C152159 * C152141 * C129 -
              ((C712 * C23381 + C713 * C152523 + C714 * C152522) * C152404 +
               (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                  C152159 * C152141 * C130 +
              ((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
               (C713 * C152522 + C712 * C152523 + C718 * C23381) * C152404) *
                  C152159 * C152141 * C131 -
              ((C1009 * C23381 + C718 * C152523 + C712 * C152522) * C152404 +
               (C209 * C23381 + C208 * C152523 + C207 * C152522) * C152475) *
                  C152159 * C152141 * C132 +
              ((C208 * C152522 + C209 * C152523 + C210 * C23381) * C152475 +
               (C718 * C152522 + C1009 * C152523 +
                (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                    C23381) *
                   C152404) *
                  C152159 * C152141 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C152522 +
                 C205 * C152523 + C206 * C23381) *
                    C152475 +
                (C15462 * C152522 + C714 * C152523 + C713 * C23381) * C152404) *
                   C152159 * C152546 -
               ((C1253 * C23381 + C1252 * C152523 + C16187 * C152522) *
                    C152404 +
                (C460 * C23381 + C461 * C152523 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C152522) *
                    C152475) *
                   C152159 * C152530 +
               (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C152522 +
                 C462 * C152523 + C463 * C23381) *
                    C152475 +
                (C16786 * C152522 + C2101 * C152523 + C2100 * C23381) *
                    C152404) *
                   C152159 * C152499) *
                  C359 +
              (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
                (C1252 * C152522 + C1253 * C152523 + C1254 * C23381) *
                    C152404) *
                   C152159 * C152530 -
               ((C712 * C23381 + C713 * C152523 + C714 * C152522) * C152404 +
                (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                   C152159 * C152546 -
               ((C2099 * C23381 + C2100 * C152523 + C2101 * C152522) * C152404 +
                (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
                   C152159 * C152499) *
                  C360 +
              (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
                (C713 * C152522 + C712 * C152523 + C718 * C23381) * C152404) *
                   C152159 * C152546 -
               ((C1255 * C23381 + C1254 * C152523 + C1253 * C152522) * C152404 +
                (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
                   C152159 * C152530 +
               ((C463 * C152522 + C464 * C152523 + C466 * C23381) * C152475 +
                (C2100 * C152522 + C2099 * C152523 +
                 (C134 * C2077 - C135 * C2076 - C134 * C2078 +
                  C152324 * C2079) *
                     C23381) *
                    C152404) *
                   C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152547 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152532 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C15464 * C152522 + C3039 * C152523 + C3038 * C23381) * C152404) *
               C152502) *
              C152141 * C359 +
          (((C32397 + C32398 + C32399) * C152475 +
            (C32400 + C32401 + C32402) * C152404) *
               C152532 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152547 -
           ((C3037 * C23381 + C3038 * C152523 + C3039 * C152522) * C152404 +
            (C32402 + C32401 + C32400) * C152475) *
               C152502) *
              C152141 * C360 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152547 -
           ((C32406 + C32407 + C32408) * C152404 +
            (C32405 + C32404 + C32403) * C152475) *
               C152532 +
           ((C32408 + C32407 + C32406) * C152475 +
            (C3038 * C152522 + C3037 * C152523 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C23381) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C1401 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C16786 * C152522 + C2101 * C152523 + C2100 * C23381) * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C33093 + C33094 + C33095) * C152404) *
               C152159 * C1402 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C1401 -
           ((C2099 * C23381 + C2100 * C152523 + C2101 * C152522) * C152404 +
            (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152159 * C1401 -
           ((C33098 + C33097 + C33096) * C152404 +
            (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
               C152159 * C1402 +
           ((C463 * C152522 + C464 * C152523 + C466 * C23381) * C152475 +
            (C2100 * C152522 + C2099 * C152523 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C23381) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152522 +
            C205 * C152523 + C206 * C23381) *
               C152475 +
           (C32391 + C32392 + C32393) * C152404) *
              C152159 * C1489 -
          ((C33092 + C33091 + C33090) * C152404 +
           (C460 * C23381 + C461 * C152523 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152522) *
               C152475) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152522 +
            C462 * C152523 + C463 * C23381) *
               C152475 +
           (C16786 * C152522 + C2101 * C152523 + C2100 * C23381) * C152404) *
              C152159 * C1491 -
          (((C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                C23381 +
            C17003 * C152523 + C17506 * C152522) *
               C152404 +
           (C1881 * C23381 + C1882 * C152523 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152522) *
               C152475) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C152522 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C152523 +
            (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                C23381) *
               C152475 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C152522 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C152523 +
            (C134 * C8867 - C135 * C8866 - C134 * C8868 + C152324 * C8869) *
                C23381) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152547 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152532 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C15464 * C152522 + C3039 * C152523 + C3038 * C23381) * C152404) *
               C152502) *
              C1401 +
          (((C33090 + C33091 + C33092) * C152475 +
            (C33657 + C33658 + C33659) * C152404) *
               C152532 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152547 -
           ((C16190 * C23381 + C16189 * C152523 + C16785 * C152522) * C152404 +
            (C33659 + C33658 + C33657) * C152475) *
               C152502) *
              C1402 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C152547 -
           ((C33663 + C33664 + C33665) * C152404 +
            (C33662 + C33661 + C33660) * C152475) *
               C152532 +
           ((C33665 + C33664 + C33663) * C152475 +
            (C16789 * C152522 + C16788 * C152523 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C23381) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C2393 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C2394 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C15464 * C152522 + C3039 * C152523 + C3038 * C23381) * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C32397 + C32398 + C32399) * C152475 +
            (C32400 + C32401 + C32402) * C152404) *
               C2394 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C2393 -
           ((C3037 * C23381 + C3038 * C152523 + C3039 * C152522) * C152404 +
            (C32402 + C32401 + C32400) * C152475) *
               C152502) *
              C152141 * C152526 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C2393 -
           ((C32406 + C32407 + C32408) * C152404 +
            (C32405 + C32404 + C32403) * C152475) *
               C2394 +
           ((C32408 + C32407 + C32406) * C152475 +
            (C3038 * C152522 + C3037 * C152523 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C23381) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C2393 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C2394 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C15464 * C152522 + C3039 * C152523 + C3038 * C23381) * C152404) *
               C152502) *
              C152546 +
          (((C33090 + C33091 + C33092) * C152475 +
            (C33657 + C33658 + C33659) * C152404) *
               C2394 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C2393 -
           ((C16190 * C23381 + C16189 * C152523 + C16785 * C152522) * C152404 +
            (C33659 + C33658 + C33657) * C152475) *
               C152502) *
              C152530 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C2393 -
           ((C33663 + C33664 + C33665) * C152404 +
            (C33662 + C33661 + C33660) * C152475) *
               C2394 +
           ((C33665 + C33664 + C33663) * C152475 +
            (C16789 * C152522 + C16788 * C152523 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C23381) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152522 +
            C205 * C152523 + C206 * C23381) *
               C152475 +
           (C32391 + C32392 + C32393) * C152404) *
              C2624 -
          ((C32394 + C32395 + C32396) * C152404 +
           (C32393 + C32392 + C32391) * C152475) *
              C2625 +
          ((C32396 + C32395 + C32394) * C152475 +
           (C34915 + C34916 + C34917) * C152404) *
              C2626 -
          ((C34918 + C34919 + C34920) * C152404 +
           (C34917 + C34916 + C34915) * C152475) *
              C2627 +
          ((C34920 + C34919 + C34918) * C152475 +
           (C18106 * C152522 + C18105 * C152523 +
            (C134 * C18609 - C135 * C18608 - C134 * C18610 + C152324 * C18611) *
                C23381) *
               C152404) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C152458 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152246) *
               C1401 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152246 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C152458) *
               C1402 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C152522 +
              C462 * C152523 + C463 * C23381) *
                 C152475 +
             (C33660 + C33661 + C33662) * C152404) *
                C152458 -
            ((C33663 + C33664 + C33665) * C152404 +
             (C33662 + C33661 + C33660) * C152475) *
                C152246) *
               C152499) *
              C152443 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152246 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C152458) *
               C1401 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C152458 -
            ((C2878 * C23381 + C2879 * C152523 + C2880 * C152522) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152246) *
               C1402 +
           (((C34157 + C34158 + C34159) * C152475 +
             (C15195 * C152522 + C15196 * C152523 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C23381) *
                 C152404) *
                C152246 -
            ((C34159 + C34158 + C34157) * C152404 +
             (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152458 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152246) *
              C152141 * C851 +
          (((C32397 + C32398 + C32399) * C152475 +
            (C32400 + C32401 + C32402) * C152404) *
               C152246 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152458) *
              C152141 * C852 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152458 -
           ((C32406 + C32407 + C32408) * C152404 +
            (C32405 + C32404 + C32403) * C152475) *
               C152246) *
              C152141 * C853 +
          (((C32797 + C32798 + C32799) * C152475 +
            (C717 * C152522 + C719 * C152523 +
             (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                 C23381) *
                C152404) *
               C152246 -
           ((C32799 + C32798 + C32797) * C152404 +
            (C209 * C23381 + C208 * C152523 + C207 * C152522) * C152475) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C3010 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C3011 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C34915 + C34916 + C34917) * C152404) *
               C3012 -
           ((C34918 + C34919 + C34920) * C152404 +
            (C34917 + C34916 + C34915) * C152475) *
               C152515) *
              C152141 * C152443 +
          (((C32397 + C32398 + C32399) * C152475 +
            (C32400 + C32401 + C32402) * C152404) *
               C3011 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C3010 -
           ((C35408 + C35409 + C35410) * C152404 +
            (C32402 + C32401 + C32400) * C152475) *
               C3012 +
           ((C35410 + C35409 + C35408) * C152475 +
            (C15465 * C152522 + C15466 * C152523 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C23381) *
                C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C15462 * C152522 + C714 * C152523 + C713 * C23381) * C152404) *
               C152159 * C152546 -
           ((C1253 * C23381 + C1252 * C152523 + C16187 * C152522) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C16786 * C152522 + C2101 * C152523 + C2100 * C23381) * C152404) *
               C152159 * C152499) *
              C359 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C1252 * C152522 + C1253 * C152523 + C1254 * C23381) * C152404) *
               C152159 * C152530 -
           ((C712 * C23381 + C713 * C152523 + C714 * C152522) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C152546 -
           ((C2099 * C23381 + C2100 * C152523 + C2101 * C152522) * C152404 +
            (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
               C152159 * C152499) *
              C360 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C713 * C152522 + C712 * C152523 + C718 * C23381) * C152404) *
               C152159 * C152546 -
           ((C1255 * C23381 + C1254 * C152523 + C1253 * C152522) * C152404 +
            (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
               C152159 * C152530 +
           ((C463 * C152522 + C464 * C152523 + C466 * C23381) * C152475 +
            (C2100 * C152522 + C2099 * C152523 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C23381) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152522 +
            C205 * C152523 + C206 * C23381) *
               C152475 +
           (C15462 * C152522 + C714 * C152523 + C713 * C23381) * C152404) *
              C152159 * C152141 * C129 -
          ((C712 * C23381 + C713 * C152523 + C714 * C152522) * C152404 +
           (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
              C152159 * C152141 * C130 +
          ((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
           (C713 * C152522 + C712 * C152523 + C718 * C23381) * C152404) *
              C152159 * C152141 * C131 -
          ((C1009 * C23381 + C718 * C152523 + C712 * C152522) * C152404 +
           (C209 * C23381 + C208 * C152523 + C207 * C152522) * C152475) *
              C152159 * C152141 * C132 +
          ((C208 * C152522 + C209 * C152523 + C210 * C23381) * C152475 +
           (C718 * C152522 + C1009 * C152523 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C23381) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C1401 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C16786 * C152522 + C2101 * C152523 + C2100 * C23381) * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C33093 + C33094 + C33095) * C152404) *
               C152159 * C1402 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C1401 -
           ((C2099 * C23381 + C2100 * C152523 + C2101 * C152522) * C152404 +
            (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152159 * C1401 -
           ((C33098 + C33097 + C33096) * C152404 +
            (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
               C152159 * C1402 +
           ((C463 * C152522 + C464 * C152523 + C466 * C23381) * C152475 +
            (C2100 * C152522 + C2099 * C152523 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C23381) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152522 +
            C205 * C152523 + C206 * C23381) *
               C152475 +
           (C32391 + C32392 + C32393) * C152404) *
              C152159 * C1489 -
          ((C33092 + C33091 + C33090) * C152404 +
           (C460 * C23381 + C461 * C152523 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152522) *
               C152475) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152522 +
            C462 * C152523 + C463 * C23381) *
               C152475 +
           (C16786 * C152522 + C2101 * C152523 + C2100 * C23381) * C152404) *
              C152159 * C1491 -
          (((C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                C23381 +
            C17003 * C152523 + C17506 * C152522) *
               C152404 +
           (C1881 * C23381 + C1882 * C152523 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152522) *
               C152475) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C152522 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C152523 +
            (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                C23381) *
               C152475 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C152522 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C152523 +
            (C134 * C8867 - C135 * C8866 - C134 * C8868 + C152324 * C8869) *
                C23381) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C2393 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C2394 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C15464 * C152522 + C3039 * C152523 + C3038 * C23381) * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C32397 + C32398 + C32399) * C152475 +
            (C32400 + C32401 + C32402) * C152404) *
               C2394 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C2393 -
           ((C3037 * C23381 + C3038 * C152523 + C3039 * C152522) * C152404 +
            (C32402 + C32401 + C32400) * C152475) *
               C152502) *
              C152141 * C152526 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C2393 -
           ((C32406 + C32407 + C32408) * C152404 +
            (C32405 + C32404 + C32403) * C152475) *
               C2394 +
           ((C32408 + C32407 + C32406) * C152475 +
            (C3038 * C152522 + C3037 * C152523 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C23381) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C2393 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C2394 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C15464 * C152522 + C3039 * C152523 + C3038 * C23381) * C152404) *
               C152502) *
              C152546 +
          (((C33090 + C33091 + C33092) * C152475 +
            (C33657 + C33658 + C33659) * C152404) *
               C2394 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C2393 -
           ((C16190 * C23381 + C16189 * C152523 + C16785 * C152522) * C152404 +
            (C33659 + C33658 + C33657) * C152475) *
               C152502) *
              C152530 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C2393 -
           ((C33663 + C33664 + C33665) * C152404 +
            (C33662 + C33661 + C33660) * C152475) *
               C2394 +
           ((C33665 + C33664 + C33663) * C152475 +
            (C16789 * C152522 + C16788 * C152523 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C23381) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C4321 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152246) *
               C152457 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152246 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C4321) *
               C152204) *
              C152118 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152246 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C4321) *
               C152457 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C4321 -
            ((C35211 + C35212 + C35213) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152246) *
               C152204) *
              C152127 +
          ((((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
             (C32403 + C32404 + C32405) * C152404) *
                C4321 -
            ((C32406 + C32407 + C32408) * C152404 +
             (C32405 + C32404 + C32403) * C152475) *
                C152246) *
               C152457 +
           (((C33096 + C33097 + C33098) * C152475 +
             (C2879 * C152522 + C2878 * C152523 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C23381) *
                 C152404) *
                C152246 -
            ((C33098 + C33097 + C33096) * C152404 +
             (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
                C4321) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C152242 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152249 +
            ((C32396 + C32395 + C32394) * C152475 +
             (C34915 + C34916 + C34917) * C152404) *
                C4993) *
               C152457 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152249 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C152242 -
            ((C35605 + C35606 + C35607) * C152404 +
             (C33659 + C33658 + C33657) * C152475) *
                C4993) *
               C152204) *
              C3455 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152249 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C152242 -
            ((C35408 + C35409 + C35410) * C152404 +
             (C32402 + C32401 + C32400) * C152475) *
                C4993) *
               C152457 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C152242 -
            ((C35211 + C35212 + C35213) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152249 +
            ((C35213 + C35212 + C35211) * C152475 +
             (C16189 * C152522 + C16190 * C152523 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C23381) *
                 C152404) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C4321 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152246) *
               C152546 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152246 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C4321) *
               C152530 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C152522 +
              C462 * C152523 + C463 * C23381) *
                 C152475 +
             (C33660 + C33661 + C33662) * C152404) *
                C4321 -
            ((C33663 + C33664 + C33665) * C152404 +
             (C33662 + C33661 + C33660) * C152475) *
                C152246) *
               C152499) *
              C3455 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152246 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C4321) *
               C152546 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C4321 -
            ((C35211 + C35212 + C35213) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152246) *
               C152530 +
           (((C34157 + C34158 + C34159) * C152475 +
             (C15195 * C152522 + C15196 * C152523 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C23381) *
                 C152404) *
                C152246 -
            ((C34159 + C34158 + C34157) * C152404 +
             (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C4321 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152246) *
              C152141 * C152552 +
          (((C32397 + C32398 + C32399) * C152475 +
            (C32400 + C32401 + C32402) * C152404) *
               C152246 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C4321) *
              C152141 * C152545 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C4321 -
           ((C32406 + C32407 + C32408) * C152404 +
            (C32405 + C32404 + C32403) * C152475) *
               C152246) *
              C152141 * C152528 +
          (((C32797 + C32798 + C32799) * C152475 +
            (C717 * C152522 + C719 * C152523 +
             (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                 C23381) *
                C152404) *
               C152246 -
           ((C32799 + C32798 + C32797) * C152404 +
            (C209 * C23381 + C208 * C152523 + C207 * C152522) * C152475) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152554 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152551 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C34915 + C34916 + C34917) * C152404) *
               C152538 -
           ((C34918 + C34919 + C34920) * C152404 +
            (C34917 + C34916 + C34915) * C152475) *
               C152515) *
              C152141 * C3455 +
          (((C32397 + C32398 + C32399) * C152475 +
            (C32400 + C32401 + C32402) * C152404) *
               C152551 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152554 -
           ((C35408 + C35409 + C35410) * C152404 +
            (C32402 + C32401 + C32400) * C152475) *
               C152538 +
           ((C35410 + C35409 + C35408) * C152475 +
            (C15465 * C152522 + C15466 * C152523 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C23381) *
                C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152242 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152249 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C34915 + C34916 + C34917) * C152404) *
               C4993) *
              C152141 * C152118 +
          (((C32397 + C32398 + C32399) * C152475 +
            (C32400 + C32401 + C32402) * C152404) *
               C152249 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152242 -
           ((C35408 + C35409 + C35410) * C152404 +
            (C32402 + C32401 + C32400) * C152475) *
               C4993) *
              C152141 * C152127 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152242 -
           ((C32406 + C32407 + C32408) * C152404 +
            (C32405 + C32404 + C32403) * C152475) *
               C152249 +
           ((C32408 + C32407 + C32406) * C152475 +
            (C3038 * C152522 + C3037 * C152523 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C23381) *
                C152404) *
               C4993) *
              C152141 * C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C4321 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152246) *
              C152141 * C152552 +
          (((C32397 + C32398 + C32399) * C152475 +
            (C32400 + C32401 + C32402) * C152404) *
               C152246 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C4321) *
              C152141 * C152545 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C4321 -
           ((C32406 + C32407 + C32408) * C152404 +
            (C32405 + C32404 + C32403) * C152475) *
               C152246) *
              C152141 * C152528 +
          (((C32797 + C32798 + C32799) * C152475 +
            (C717 * C152522 + C719 * C152523 +
             (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                 C23381) *
                C152404) *
               C152246 -
           ((C32799 + C32798 + C32797) * C152404 +
            (C209 * C23381 + C208 * C152523 + C207 * C152522) * C152475) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C4321 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152246) *
               C152546 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152246 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C4321) *
               C152530 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C152522 +
              C462 * C152523 + C463 * C23381) *
                 C152475 +
             (C33660 + C33661 + C33662) * C152404) *
                C4321 -
            ((C33663 + C33664 + C33665) * C152404 +
             (C33662 + C33661 + C33660) * C152475) *
                C152246) *
               C152499) *
              C3455 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152246 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C4321) *
               C152546 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C4321 -
            ((C35211 + C35212 + C35213) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152246) *
               C152530 +
           (((C34157 + C34158 + C34159) * C152475 +
             (C15195 * C152522 + C15196 * C152523 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C23381) *
                 C152404) *
                C152246 -
            ((C34159 + C34158 + C34157) * C152404 +
             (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C152457 -
           ((C1253 * C23381 + C1252 * C152523 + C16187 * C152522) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C152204) *
              C851 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C1252 * C152522 + C1253 * C152523 + C1254 * C23381) * C152404) *
               C152159 * C152204 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C152457) *
              C852 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152159 * C152457 -
           ((C1255 * C23381 + C1254 * C152523 + C1253 * C152522) * C152404 +
            (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
               C152159 * C152204) *
              C853 +
          (((C459 * C152522 + C465 * C152523 + C866 * C23381) * C152475 +
            (C1254 * C152522 + C1255 * C152523 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C23381) *
                C152404) *
               C152159 * C152204 -
           ((C1009 * C23381 + C718 * C152523 + C712 * C152522) * C152404 +
            (C209 * C23381 + C208 * C152523 + C207 * C152522) * C152475) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C1851 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C1852 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C152159 * C1853 -
           ((C33866 * C23381 + C17003 * C152523 + C17506 * C152522) * C152404 +
            (C1881 * C23381 + C1882 * C152523 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152522) *
                C152475) *
               C152159 * C152509) *
              C152443 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C33093 + C33094 + C33095) * C152404) *
               C152159 * C1852 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C1851 -
           ((C2099 * C23381 + C2100 * C152523 + C2101 * C152522) * C152404 +
            (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
               C152159 * C1853 +
           ((C1882 * C152522 + C1881 * C152523 + C1880 * C23381) * C152475 +
            (C17003 * C152522 + C33866 * C152523 +
             (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                 C23381) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C152458 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152246) *
               C152457 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C16188 * C152522 + C2880 * C152523 + C2879 * C23381) * C152404) *
                C152246 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C152458) *
               C152204) *
              C359 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152246 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C152458) *
               C152457 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C152458 -
            ((C2878 * C23381 + C2879 * C152523 + C2880 * C152522) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152246) *
               C152204) *
              C360 +
          ((((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
             (C32403 + C32404 + C32405) * C152404) *
                C152458 -
            ((C32406 + C32407 + C32408) * C152404 +
             (C32405 + C32404 + C32403) * C152475) *
                C152246) *
               C152457 +
           (((C33096 + C33097 + C33098) * C152475 +
             (C2879 * C152522 + C2878 * C152523 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C23381) *
                 C152404) *
                C152246 -
            ((C33098 + C33097 + C33096) * C152404 +
             (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152458 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152246) *
              C1851 +
          (((C33090 + C33091 + C33092) * C152475 +
            (C33657 + C33658 + C33659) * C152404) *
               C152246 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152458) *
              C1852 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C152458 -
           ((C33663 + C33664 + C33665) * C152404 +
            (C33662 + C33661 + C33660) * C152475) *
               C152246) *
              C1853 +
          (((C34354 + C34355 + C34356) * C152475 +
            (C17507 * C152522 + C17002 * C152523 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C23381) *
                C152404) *
               C152246 -
           ((C34356 + C34355 + C34354) * C152404 +
            (C1881 * C23381 + C1882 * C152523 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152522) *
                C152475) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C15462 * C152522 + C714 * C152523 + C713 * C23381) * C152404) *
               C152159 * C152546 -
           ((C1253 * C23381 + C1252 * C152523 + C16187 * C152522) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C16786 * C152522 + C2101 * C152523 + C2100 * C23381) * C152404) *
               C152159 * C152499) *
              C359 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C1252 * C152522 + C1253 * C152523 + C1254 * C23381) * C152404) *
               C152159 * C152530 -
           ((C712 * C23381 + C713 * C152523 + C714 * C152522) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C152546 -
           ((C2099 * C23381 + C2100 * C152523 + C2101 * C152522) * C152404 +
            (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
               C152159 * C152499) *
              C360 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C713 * C152522 + C712 * C152523 + C718 * C23381) * C152404) *
               C152159 * C152546 -
           ((C1255 * C23381 + C1254 * C152523 + C1253 * C152522) * C152404 +
            (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
               C152159 * C152530 +
           ((C463 * C152522 + C464 * C152523 + C466 * C23381) * C152475 +
            (C2100 * C152522 + C2099 * C152523 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C23381) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152522 +
            C205 * C152523 + C206 * C23381) *
               C152475 +
           (C15462 * C152522 + C714 * C152523 + C713 * C23381) * C152404) *
              C152159 * C152141 * C129 -
          ((C712 * C23381 + C713 * C152523 + C714 * C152522) * C152404 +
           (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
              C152159 * C152141 * C130 +
          ((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
           (C713 * C152522 + C712 * C152523 + C718 * C23381) * C152404) *
              C152159 * C152141 * C131 -
          ((C1009 * C23381 + C718 * C152523 + C712 * C152522) * C152404 +
           (C209 * C23381 + C208 * C152523 + C207 * C152522) * C152475) *
              C152159 * C152141 * C132 +
          ((C208 * C152522 + C209 * C152523 + C210 * C23381) * C152475 +
           (C718 * C152522 + C1009 * C152523 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C23381) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152547 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152532 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C15464 * C152522 + C3039 * C152523 + C3038 * C23381) * C152404) *
               C152502) *
              C152141 * C359 +
          (((C32397 + C32398 + C32399) * C152475 +
            (C32400 + C32401 + C32402) * C152404) *
               C152532 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152547 -
           ((C3037 * C23381 + C3038 * C152523 + C3039 * C152522) * C152404 +
            (C32402 + C32401 + C32400) * C152475) *
               C152502) *
              C152141 * C360 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152547 -
           ((C32406 + C32407 + C32408) * C152404 +
            (C32405 + C32404 + C32403) * C152475) *
               C152532 +
           ((C32408 + C32407 + C32406) * C152475 +
            (C3038 * C152522 + C3037 * C152523 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C23381) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C1401 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C16786 * C152522 + C2101 * C152523 + C2100 * C23381) * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C33093 + C33094 + C33095) * C152404) *
               C152159 * C1402 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C1401 -
           ((C2099 * C23381 + C2100 * C152523 + C2101 * C152522) * C152404 +
            (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152159 * C1401 -
           ((C33098 + C33097 + C33096) * C152404 +
            (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
               C152159 * C1402 +
           ((C463 * C152522 + C464 * C152523 + C466 * C23381) * C152475 +
            (C2100 * C152522 + C2099 * C152523 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C23381) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152522 +
            C205 * C152523 + C206 * C23381) *
               C152475 +
           (C32391 + C32392 + C32393) * C152404) *
              C152159 * C1489 -
          ((C33092 + C33091 + C33090) * C152404 +
           (C460 * C23381 + C461 * C152523 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152522) *
               C152475) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152522 +
            C462 * C152523 + C463 * C23381) *
               C152475 +
           (C16786 * C152522 + C2101 * C152523 + C2100 * C23381) * C152404) *
              C152159 * C1491 -
          (((C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                C23381 +
            C17003 * C152523 + C17506 * C152522) *
               C152404 +
           (C1881 * C23381 + C1882 * C152523 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152522) *
               C152475) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C152522 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C152523 +
            (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                C23381) *
               C152475 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C152522 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C152523 +
            (C134 * C8867 - C135 * C8866 - C134 * C8868 + C152324 * C8869) *
                C23381) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152547 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152532 +
           ((C32396 + C32395 + C32394) * C152475 +
            (C15464 * C152522 + C3039 * C152523 + C3038 * C23381) * C152404) *
               C152502) *
              C1401 +
          (((C33090 + C33091 + C33092) * C152475 +
            (C33657 + C33658 + C33659) * C152404) *
               C152532 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152547 -
           ((C16190 * C23381 + C16189 * C152523 + C16785 * C152522) * C152404 +
            (C33659 + C33658 + C33657) * C152475) *
               C152502) *
              C1402 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C33660 + C33661 + C33662) * C152404) *
               C152547 -
           ((C33663 + C33664 + C33665) * C152404 +
            (C33662 + C33661 + C33660) * C152475) *
               C152532 +
           ((C33665 + C33664 + C33663) * C152475 +
            (C16789 * C152522 + C16788 * C152523 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C23381) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152458 -
           ((C32394 + C32395 + C32396) * C152404 +
            (C32393 + C32392 + C32391) * C152475) *
               C152246) *
              C152141 * C851 +
          (((C32397 + C32398 + C32399) * C152475 +
            (C32400 + C32401 + C32402) * C152404) *
               C152246 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152458) *
              C152141 * C852 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152458 -
           ((C32406 + C32407 + C32408) * C152404 +
            (C32405 + C32404 + C32403) * C152475) *
               C152246) *
              C152141 * C853 +
          (((C32797 + C32798 + C32799) * C152475 +
            (C717 * C152522 + C719 * C152523 +
             (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                 C23381) *
                C152404) *
               C152246 -
           ((C32799 + C32798 + C32797) * C152404 +
            (C209 * C23381 + C208 * C152523 + C207 * C152522) * C152475) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152522 +
              C205 * C152523 + C206 * C23381) *
                 C152475 +
             (C32391 + C32392 + C32393) * C152404) *
                C152458 -
            ((C32394 + C32395 + C32396) * C152404 +
             (C32393 + C32392 + C32391) * C152475) *
                C152246) *
               C1401 +
           (((C33090 + C33091 + C33092) * C152475 +
             (C33657 + C33658 + C33659) * C152404) *
                C152246 -
            ((C33092 + C33091 + C33090) * C152404 +
             (C460 * C23381 + C461 * C152523 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152522) *
                 C152475) *
                C152458) *
               C1402 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C152522 +
              C462 * C152523 + C463 * C23381) *
                 C152475 +
             (C33660 + C33661 + C33662) * C152404) *
                C152458 -
            ((C33663 + C33664 + C33665) * C152404 +
             (C33662 + C33661 + C33660) * C152475) *
                C152246) *
               C152499) *
              C152443 +
          ((((C32397 + C32398 + C32399) * C152475 +
             (C32400 + C32401 + C32402) * C152404) *
                C152246 -
            ((C32399 + C32398 + C32397) * C152404 +
             (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
                C152458) *
               C1401 +
           (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
             (C33093 + C33094 + C33095) * C152404) *
                C152458 -
            ((C2878 * C23381 + C2879 * C152523 + C2880 * C152522) * C152404 +
             (C33095 + C33094 + C33093) * C152475) *
                C152246) *
               C1402 +
           (((C34157 + C34158 + C34159) * C152475 +
             (C15195 * C152522 + C15196 * C152523 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C23381) *
                 C152404) *
                C152246 -
            ((C34159 + C34158 + C34157) * C152404 +
             (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152522 +
            C205 * C152523 + C206 * C23381) *
               C152475 +
           (C15462 * C152522 + C714 * C152523 + C713 * C23381) * C152404) *
              C152159 * C152141 * C129 -
          ((C712 * C23381 + C713 * C152523 + C714 * C152522) * C152404 +
           (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
              C152159 * C152141 * C130 +
          ((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
           (C713 * C152522 + C712 * C152523 + C718 * C23381) * C152404) *
              C152159 * C152141 * C131 -
          ((C1009 * C23381 + C718 * C152523 + C712 * C152522) * C152404 +
           (C209 * C23381 + C208 * C152523 + C207 * C152522) * C152475) *
              C152159 * C152141 * C132 +
          ((C208 * C152522 + C209 * C152523 + C210 * C23381) * C152475 +
           (C718 * C152522 + C1009 * C152523 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C23381) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C15462 * C152522 + C714 * C152523 + C713 * C23381) * C152404) *
               C152159 * C152546 -
           ((C1253 * C23381 + C1252 * C152523 + C16187 * C152522) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C16786 * C152522 + C2101 * C152523 + C2100 * C23381) * C152404) *
               C152159 * C152499) *
              C359 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C1252 * C152522 + C1253 * C152523 + C1254 * C23381) * C152404) *
               C152159 * C152530 -
           ((C712 * C23381 + C713 * C152523 + C714 * C152522) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C152546 -
           ((C2099 * C23381 + C2100 * C152523 + C2101 * C152522) * C152404 +
            (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
               C152159 * C152499) *
              C360 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C713 * C152522 + C712 * C152523 + C718 * C23381) * C152404) *
               C152159 * C152546 -
           ((C1255 * C23381 + C1254 * C152523 + C1253 * C152522) * C152404 +
            (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
               C152159 * C152530 +
           ((C463 * C152522 + C464 * C152523 + C466 * C23381) * C152475 +
            (C2100 * C152522 + C2099 * C152523 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C23381) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152522 +
             C205 * C152523 + C206 * C23381) *
                C152475 +
            (C32391 + C32392 + C32393) * C152404) *
               C152159 * C1401 -
           ((C33092 + C33091 + C33090) * C152404 +
            (C460 * C23381 + C461 * C152523 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152522) *
                C152475) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152522 +
             C462 * C152523 + C463 * C23381) *
                C152475 +
            (C16786 * C152522 + C2101 * C152523 + C2100 * C23381) * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C152522 + C460 * C152523 + C459 * C23381) * C152475 +
            (C33093 + C33094 + C33095) * C152404) *
               C152159 * C1402 -
           ((C32399 + C32398 + C32397) * C152404 +
            (C207 * C23381 + C206 * C152523 + C205 * C152522) * C152475) *
               C152159 * C1401 -
           ((C2099 * C23381 + C2100 * C152523 + C2101 * C152522) * C152404 +
            (C464 * C23381 + C463 * C152523 + C462 * C152522) * C152475) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C152522 + C207 * C152523 + C208 * C23381) * C152475 +
            (C32403 + C32404 + C32405) * C152404) *
               C152159 * C1401 -
           ((C33098 + C33097 + C33096) * C152404 +
            (C465 * C23381 + C459 * C152523 + C460 * C152522) * C152475) *
               C152159 * C1402 +
           ((C463 * C152522 + C464 * C152523 + C466 * C23381) * C152475 +
            (C2100 * C152522 + C2099 * C152523 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C23381) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152522 +
            C205 * C152523 + C206 * C23381) *
               C152475 +
           (C32391 + C32392 + C32393) * C152404) *
              C152159 * C1489 -
          ((C33092 + C33091 + C33090) * C152404 +
           (C460 * C23381 + C461 * C152523 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152522) *
               C152475) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152522 +
            C462 * C152523 + C463 * C23381) *
               C152475 +
           (C16786 * C152522 + C2101 * C152523 + C2100 * C23381) * C152404) *
              C152159 * C1491 -
          (((C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                C23381 +
            C17003 * C152523 + C17506 * C152522) *
               C152404 +
           (C1881 * C23381 + C1882 * C152523 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152522) *
               C152475) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C152522 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C152523 +
            (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                C23381) *
               C152475 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C152522 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C152523 +
            (C134 * C8867 - C135 * C8866 - C134 * C8868 + C152324 * C8869) *
                C23381) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152200 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152207 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C3799) *
              C152118 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152207 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152200 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C3799) *
              C152127 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C152200 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C152207 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152200 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152207 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C3799) *
              C152118 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152207 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152200 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C3799) *
              C152127 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152200 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152207 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152458 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C152200 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152458) *
               C152207 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
             C462 * C123 + C463 * C124 + C464 * C125) *
                C152340 * C152458 -
            (C2099 * C125 + C2100 * C124 + C2101 * C123 +
             (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C122) *
                C152340 * C152246) *
               C3799) *
              C3455 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152458) *
               C152200 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152458 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152207 +
           ((C2101 * C122 + C2100 * C123 + C2099 * C124 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C125) *
                C152340 * C152246 -
            (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
                C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152458 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152200 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152458) *
               C152207 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C6301 +
             (C6687 + C6688 + C6689) * C152089) *
                C152340 * C152458 -
            ((C8889 + C8890 + C8891) * C152089 +
             (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
              C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
              C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                 C6301) *
                C152340 * C152246) *
               C3799) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152458) *
               C152200 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152458 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152207 +
           (((C8891 + C8890 + C8889) * C6301 +
             (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
              C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
              C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C6693 + C6694 + C6695) * C152089 +
             (C6689 + C6688 + C6687) * C6301) *
                C152340 * C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152553 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152549 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152535 -
           (C1880 * C125 + C1881 * C124 + C1882 * C123 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C122) *
               C152340 * C152159 * C152509) *
              C3455 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152549 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152553 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152535 +
           (C1882 * C122 + C1881 * C123 + C1880 * C124 +
            (C134 * C1858 - C135 * C1857 - C134 * C1859 + C152324 * C1860) *
                C125) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C3315 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152204) *
              C152552 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152204 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C3315) *
              C152545 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C3315 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C152204) *
              C152528 +
          ((C459 * C122 + C465 * C123 + C866 * C124 +
            (C134 * C856 - C135 * C855 - C134 * C857 + C152324 * C858) * C125) *
               C152340 * C152159 * C152204 -
           (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152547 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152532 +
            ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
             C715 * C123 + C716 * C124 + C717 * C125) *
                C152340 * C152502) *
               C3315 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152532 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152547 -
            (C2878 * C125 + C2879 * C124 + C2880 * C123 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C122) *
                C152340 * C152502) *
               C152204) *
              C3455 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152532 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152547 -
            (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
                C152502) *
               C3315 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152547 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152532 +
            (C2880 * C122 + C2879 * C123 + C2878 * C124 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C125) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C3315 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152204) *
              C152552 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152204 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C3315) *
              C152545 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C3315 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152204) *
              C152528 +
          (((C7212 + C7211 + C7210) * C6301 +
            (C6303 * C390 - C6304 * C370 - C6303 * C391 + C6298 * C406 +
             C6305 * C392 - C6306 * C371 - C6305 * C393 + C6299 * C407 +
             C6307 * C1858 - C6308 * C1857 - C6307 * C1859 + C6300 * C1860) *
                C152089) *
               C152340 * C152159 * C152204 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152553 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152549 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152535 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C152159 * C152509) *
              C3455 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152549 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152553 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152535 +
           ((C8576 + C8575 + C8574) * C6301 +
            (C6303 * C1505 - C6304 * C1496 - C6303 * C1506 + C6298 * C1520 +
             C6305 * C1515 - C6306 * C1501 - C6305 * C1516 + C6299 * C1525 +
             C6307 * C8552 - C6308 * C8551 - C6307 * C8553 + C6300 * C8554) *
                C152089) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152547 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152532 +
            ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
              C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
              C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                 C6301 +
             (C6989 + C6990 + C6991) * C152089) *
                C152340 * C152502) *
               C3315 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152532 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152547 -
            ((C9988 + C9989 + C9990) * C152089 +
             (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
              C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
              C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                 C6301) *
                C152340 * C152502) *
               C152204) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152532 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152547 -
            ((C6995 + C6996 + C6997) * C152089 +
             (C6991 + C6990 + C6989) * C6301) *
                C152340 * C152502) *
               C3315 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152547 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152532 +
            ((C9990 + C9989 + C9988) * C6301 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152089) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152458 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C3315 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152458) *
               C152204) *
              C152118 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152458) *
               C3315 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152458 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          (((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
                C152458 -
            (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
                C152246) *
               C3315 +
           ((C1253 * C122 + C1254 * C123 + C1255 * C124 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C125) *
                C152340 * C152246 -
            (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
                C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152458 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C3315 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152458) *
               C152204) *
              C152118 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152458) *
               C3315 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152458 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          ((((C6387 + C6386 + C6385) * C6301 +
             (C6388 + C6389 + C6390) * C152089) *
                C152340 * C152458 -
            ((C7425 + C7426 + C7427) * C152089 +
             (C6994 + C6993 + C6992) * C6301) *
                C152340 * C152246) *
               C3315 +
           (((C7759 + C7758 + C7757) * C6301 +
             (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
              C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
              C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C7210 + C7211 + C7212) * C152089 +
             (C6692 + C6691 + C6690) * C6301) *
                C152340 * C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C3315 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152204) *
              C152552 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152204 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C3315) *
              C152545 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C3315 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C152204) *
              C152528 +
          ((C459 * C122 + C465 * C123 + C866 * C124 +
            (C134 * C856 - C135 * C855 - C134 * C857 + C152324 * C858) * C125) *
               C152340 * C152159 * C152204 -
           (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152553 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152549 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152535 -
           (C1880 * C125 + C1881 * C124 + C1882 * C123 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C122) *
               C152340 * C152159 * C152509) *
              C3455 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152549 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152553 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152535 +
           (C1882 * C122 + C1881 * C123 + C1880 * C124 +
            (C134 * C1858 - C135 * C1857 - C134 * C1859 + C152324 * C1860) *
                C125) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C3315 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152204) *
              C152552 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152204 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C3315) *
              C152545 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C3315 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152204) *
              C152528 +
          (((C7212 + C7211 + C7210) * C6301 +
            (C6303 * C390 - C6304 * C370 - C6303 * C391 + C6298 * C406 +
             C6305 * C392 - C6306 * C371 - C6305 * C393 + C6299 * C407 +
             C6307 * C1858 - C6308 * C1857 - C6307 * C1859 + C6300 * C1860) *
                C152089) *
               C152340 * C152159 * C152204 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152553 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152549 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152535 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C152159 * C152509) *
              C3455 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152549 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152553 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152535 +
           ((C8576 + C8575 + C8574) * C6301 +
            (C6303 * C1505 - C6304 * C1496 - C6303 * C1506 + C6298 * C1520 +
             C6305 * C1515 - C6306 * C1501 - C6305 * C1516 + C6299 * C1525 +
             C6307 * C8552 - C6308 * C8551 - C6307 * C8553 + C6300 * C8554) *
                C152089) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C4321 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C152200 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C4321) *
               C152207 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
             C462 * C123 + C463 * C124 + C464 * C125) *
                C152340 * C4321 -
            (C2099 * C125 + C2100 * C124 + C2101 * C123 +
             (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C122) *
                C152340 * C152246) *
               C3799) *
              C152443 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C4321) *
               C152200 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C4321 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152207 +
           ((C2101 * C122 + C2100 * C123 + C2099 * C124 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C125) *
                C152340 * C152246 -
            (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
                C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C4321 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152200 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C4321) *
               C152207 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C6301 +
             (C6687 + C6688 + C6689) * C152089) *
                C152340 * C4321 -
            ((C8889 + C8890 + C8891) * C152089 +
             (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
              C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
              C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                 C6301) *
                C152340 * C152246) *
               C3799) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C4321) *
               C152200 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C4321 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152207 +
           (((C8891 + C8890 + C8889) * C6301 +
             (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
              C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
              C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C6693 + C6694 + C6695) * C152089 +
             (C6689 + C6688 + C6687) * C6301) *
                C152340 * C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152242 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152249 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C4993) *
              C152200 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152249 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152242 -
           (C2878 * C125 + C2879 * C124 + C2880 * C123 +
            (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                C122) *
               C152340 * C4993) *
              C152207 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152242 -
           (C2099 * C125 + C2100 * C124 + C2101 * C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C152249 +
           ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                C122 +
            (C134 * C1703 - C135 * C1682 - C134 * C1704 + C152324 * C1718) *
                C123 +
            (C134 * C1705 - C135 * C1683 - C134 * C1706 + C152324 * C1719) *
                C124 +
            (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                C125) *
               C152340 * C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152242 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152249 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C4993) *
              C152200 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152249 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152242 -
           ((C9988 + C9989 + C9990) * C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C4993) *
              C152207 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152242 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152249 +
           ((C6303 * C1701 - C6304 * C1681 - C6303 * C1702 + C6298 * C1717 +
             C6305 * C8341 - C6306 * C8334 - C6305 * C8342 + C6299 * C8352 +
             C6307 * C8347 - C6308 * C8337 - C6307 * C8348 + C6300 * C8355) *
                C6301 +
            (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
             C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
             C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                C152089) *
               C152340 * C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C4321 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152246) *
              C152553 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152246 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C4321) *
              C152549 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C4321 -
           (C2099 * C125 + C2100 * C124 + C2101 * C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C152246) *
              C152535 +
          (((C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                C122 +
            (C134 * C2237 - C135 * C2232 - C134 * C2238 + C152324 * C2244) *
                C123 +
            (C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                C124 +
            (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                C125) *
               C152340 * C152246 -
           (C1880 * C125 + C1881 * C124 + C1882 * C123 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C122) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C4321 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C3315 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C4321) *
               C3315 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C4321 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          (((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
                C4321 -
            (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
                C152246) *
               C3315 +
           ((C1253 * C122 + C1254 * C123 + C1255 * C124 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C125) *
                C152340 * C152246 -
            (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152554 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152551 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152538 -
           (C3037 * C125 + C3038 * C124 + C3039 * C123 +
            (C134 * C2643 - C135 * C2632 - C134 * C2644 + C152324 * C2656) *
                C122) *
               C152340 * C152515) *
              C3315 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152551 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152554 -
           (C2878 * C125 + C2879 * C124 + C2880 * C123 +
            (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                C122) *
               C152340 * C152538 +
           ((C134 * C3173 - C135 * C3169 - C134 * C3174 + C152324 * C3181) *
                C122 +
            (C134 * C3175 - C135 * C3170 - C134 * C3176 + C152324 * C3182) *
                C123 +
            (C134 * C3177 - C135 * C3171 - C134 * C3178 + C152324 * C3183) *
                C124 +
            (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                C125) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C4321 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C3315 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C4321) *
               C3315 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C4321 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          ((((C6387 + C6386 + C6385) * C6301 +
             (C6388 + C6389 + C6390) * C152089) *
                C152340 * C4321 -
            ((C7425 + C7426 + C7427) * C152089 +
             (C6994 + C6993 + C6992) * C6301) *
                C152340 * C152246) *
               C3315 +
           (((C7759 + C7758 + C7757) * C6301 +
             (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
              C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
              C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C7210 + C7211 + C7212) * C152089 +
             (C6692 + C6691 + C6690) * C6301) *
                C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C4321 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C152553 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152246 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C4321) *
              C152549 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C4321 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152246) *
              C152535 +
          (((C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243 +
             C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
             C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091) *
                C6301 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152089) *
               C152340 * C152246 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152554 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152551 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152538 -
           ((C10207 + C10208 + C10209) * C152089 +
            (C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656) *
                C6301) *
               C152340 * C152515) *
              C3315 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152551 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152554 -
           ((C9988 + C9989 + C9990) * C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C152538 +
           ((C6303 * C3173 - C6304 * C3169 - C6303 * C3174 + C6298 * C3181 +
             C6305 * C9659 - C6306 * C9652 - C6305 * C9660 + C6299 * C9670 +
             C6307 * C10405 - C6308 * C10403 - C6307 * C10406 +
             C6300 * C10409) *
                C6301 +
            (C6303 * C3175 - C6304 * C3170 - C6303 * C3176 + C6298 * C3182 +
             C6305 * C9657 - C6306 * C9651 - C6305 * C9658 + C6299 * C9669 +
             C6307 * C10407 - C6308 * C10404 - C6307 * C10408 +
             C6300 * C10410) *
                C152089) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152242 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152249 +
            ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
             C715 * C123 + C716 * C124 + C717 * C125) *
                C152340 * C4993) *
               C3315 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152249 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152242 -
            (C2878 * C125 + C2879 * C124 + C2880 * C123 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C122) *
                C152340 * C4993) *
               C152204) *
              C152443 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152249 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152242 -
            (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
                C4993) *
               C3315 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152242 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152249 +
            (C2880 * C122 + C2879 * C123 + C2878 * C124 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C125) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152242 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152249 +
            ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
              C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
              C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                 C6301 +
             (C6989 + C6990 + C6991) * C152089) *
                C152340 * C4993) *
               C3315 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152249 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152242 -
            ((C9988 + C9989 + C9990) * C152089 +
             (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
              C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
              C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                 C6301) *
                C152340 * C4993) *
               C152204) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152249 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152242 -
            ((C6995 + C6996 + C6997) * C152089 +
             (C6991 + C6990 + C6989) * C6301) *
                C152340 * C4993) *
               C3315 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152242 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152249 +
            ((C9990 + C9989 + C9988) * C6301 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152089) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C4321 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C3315 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C4321) *
               C3315 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C4321 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          (((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
                C4321 -
            (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
                C152246) *
               C3315 +
           ((C1253 * C122 + C1254 * C123 + C1255 * C124 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C125) *
                C152340 * C152246 -
            (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C4321 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152246) *
              C152553 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152246 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C4321) *
              C152549 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C4321 -
           (C2099 * C125 + C2100 * C124 + C2101 * C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C152246) *
              C152535 +
          (((C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                C122 +
            (C134 * C2237 - C135 * C2232 - C134 * C2238 + C152324 * C2244) *
                C123 +
            (C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                C124 +
            (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                C125) *
               C152340 * C152246 -
           (C1880 * C125 + C1881 * C124 + C1882 * C123 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C122) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C4321 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C3315 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C4321) *
               C3315 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C4321 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          ((((C6387 + C6386 + C6385) * C6301 +
             (C6388 + C6389 + C6390) * C152089) *
                C152340 * C4321 -
            ((C7425 + C7426 + C7427) * C152089 +
             (C6994 + C6993 + C6992) * C6301) *
                C152340 * C152246) *
               C3315 +
           (((C7759 + C7758 + C7757) * C6301 +
             (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
              C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
              C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C7210 + C7211 + C7212) * C152089 +
             (C6692 + C6691 + C6690) * C6301) *
                C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C4321 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C152553 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152246 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C4321) *
              C152549 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C4321 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152246) *
              C152535 +
          (((C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243 +
             C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
             C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091) *
                C6301 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152089) *
               C152340 * C152246 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C1851 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C1852 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C1853 -
           (C1880 * C125 + C1881 * C124 + C1882 * C123 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C122) *
               C152340 * C152159 * C152509) *
              C152443 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C1852 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C1851 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C1853 +
           (C1882 * C122 + C1881 * C123 + C1880 * C124 +
            (C134 * C1858 - C135 * C1857 - C134 * C1859 + C152324 * C1860) *
                C125) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152457 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152204) *
              C851 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152204 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152457) *
              C852 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C152457 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C152204) *
              C853 +
          ((C459 * C122 + C465 * C123 + C866 * C124 +
            (C134 * C856 - C135 * C855 - C134 * C857 + C152324 * C858) * C125) *
               C152340 * C152159 * C152204 -
           (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C2393 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C2394 +
            ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
             C715 * C123 + C716 * C124 + C717 * C125) *
                C152340 * C152502) *
               C152457 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C2394 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C2393 -
            (C2878 * C125 + C2879 * C124 + C2880 * C123 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C122) *
                C152340 * C152502) *
               C152204) *
              C152443 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C2394 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C2393 -
            (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
                C152502) *
               C152457 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C2393 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C2394 +
            (C2880 * C122 + C2879 * C123 + C2878 * C124 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C125) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152457 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152204) *
              C851 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152204 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152457) *
              C852 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152457 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152204) *
              C853 +
          (((C7212 + C7211 + C7210) * C6301 +
            (C6303 * C390 - C6304 * C370 - C6303 * C391 + C6298 * C406 +
             C6305 * C392 - C6306 * C371 - C6305 * C393 + C6299 * C407 +
             C6307 * C1858 - C6308 * C1857 - C6307 * C1859 + C6300 * C1860) *
                C152089) *
               C152340 * C152159 * C152204 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C1851 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C1852 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C1853 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C152159 * C152509) *
              C152443 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C1852 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C1851 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C1853 +
           ((C8576 + C8575 + C8574) * C6301 +
            (C6303 * C1505 - C6304 * C1496 - C6303 * C1506 + C6298 * C1520 +
             C6305 * C1515 - C6306 * C1501 - C6305 * C1516 + C6299 * C1525 +
             C6307 * C8552 - C6308 * C8551 - C6307 * C8553 + C6300 * C8554) *
                C152089) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C2393 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C2394 +
            ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
              C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
              C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                 C6301 +
             (C6989 + C6990 + C6991) * C152089) *
                C152340 * C152502) *
               C152457 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C2394 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C2393 -
            ((C9988 + C9989 + C9990) * C152089 +
             (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
              C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
              C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                 C6301) *
                C152340 * C152502) *
               C152204) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C2394 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C2393 -
            ((C6995 + C6996 + C6997) * C152089 +
             (C6991 + C6990 + C6989) * C6301) *
                C152340 * C152502) *
               C152457 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C2393 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C2394 +
            ((C9990 + C9989 + C9988) * C6301 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152089) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152458 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152246) *
              C1851 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152246 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152458) *
              C1852 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152458 -
           (C2099 * C125 + C2100 * C124 + C2101 * C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C152246) *
              C1853 +
          (((C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                C122 +
            (C134 * C2237 - C135 * C2232 - C134 * C2238 + C152324 * C2244) *
                C123 +
            (C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                C124 +
            (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                C125) *
               C152340 * C152246 -
           (C1880 * C125 + C1881 * C124 + C1882 * C123 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C122) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152458 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C152457 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152458) *
               C152204) *
              C359 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152458) *
               C152457 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152458 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152204) *
              C360 +
          (((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
                C152458 -
            (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
                C152246) *
               C152457 +
           ((C1253 * C122 + C1254 * C123 + C1255 * C124 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C125) *
                C152340 * C152246 -
            (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C3010 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C3011 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C3012 -
           (C3037 * C125 + C3038 * C124 + C3039 * C123 +
            (C134 * C2643 - C135 * C2632 - C134 * C2644 + C152324 * C2656) *
                C122) *
               C152340 * C152515) *
              C152457 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C3011 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C3010 -
           (C2878 * C125 + C2879 * C124 + C2880 * C123 +
            (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                C122) *
               C152340 * C3012 +
           ((C134 * C3173 - C135 * C3169 - C134 * C3174 + C152324 * C3181) *
                C122 +
            (C134 * C3175 - C135 * C3170 - C134 * C3176 + C152324 * C3182) *
                C123 +
            (C134 * C3177 - C135 * C3171 - C134 * C3178 + C152324 * C3183) *
                C124 +
            (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                C125) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152458 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152457 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152458) *
               C152204) *
              C359 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152458) *
               C152457 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152458 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152204) *
              C360 +
          ((((C6387 + C6386 + C6385) * C6301 +
             (C6388 + C6389 + C6390) * C152089) *
                C152340 * C152458 -
            ((C7425 + C7426 + C7427) * C152089 +
             (C6994 + C6993 + C6992) * C6301) *
                C152340 * C152246) *
               C152457 +
           (((C7759 + C7758 + C7757) * C6301 +
             (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
              C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
              C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C7210 + C7211 + C7212) * C152089 +
             (C6692 + C6691 + C6690) * C6301) *
                C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152458 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C1851 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152246 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152458) *
              C1852 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152458 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152246) *
              C1853 +
          (((C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243 +
             C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
             C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091) *
                C6301 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152089) *
               C152340 * C152246 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C3010 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C3011 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C3012 -
           ((C10207 + C10208 + C10209) * C152089 +
            (C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656) *
                C6301) *
               C152340 * C152515) *
              C152457 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C3011 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C3010 -
           ((C9988 + C9989 + C9990) * C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C3012 +
           ((C6303 * C3173 - C6304 * C3169 - C6303 * C3174 + C6298 * C3181 +
             C6305 * C9659 - C6306 * C9652 - C6305 * C9660 + C6299 * C9670 +
             C6307 * C10405 - C6308 * C10403 - C6307 * C10406 +
             C6300 * C10409) *
                C6301 +
            (C6303 * C3175 - C6304 * C3170 - C6303 * C3176 + C6298 * C3182 +
             C6305 * C9657 - C6306 * C9651 - C6305 * C9658 + C6299 * C9669 +
             C6307 * C10407 - C6308 * C10404 - C6307 * C10408 +
             C6300 * C10410) *
                C152089) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                   C122 +
               C205 * C123 + C206 * C124 + C207 * C125) *
                  C152340 * C152159 * C152141 * C129 -
              (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                  C152340 * C152159 * C152141 * C130 +
              (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                  C152340 * C152159 * C152141 * C131 -
              (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) *
                  C152340 * C152159 * C152141 * C132 +
              (C208 * C122 + C209 * C123 + C210 * C124 +
               (C134 * C158 - C135 * C143 - C134 * C159 + C152324 * C167) *
                   C125) *
                  C152340 * C152159 * C152141 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C122 +
                C205 * C123 + C206 * C124 + C207 * C125) *
                   C152340 * C152159 * C152546 -
               (C459 * C125 + C460 * C124 + C461 * C123 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C122) *
                   C152340 * C152159 * C152530 +
               ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                    C122 +
                C462 * C123 + C463 * C124 + C464 * C125) *
                   C152340 * C152159 * C152499) *
                  C359 +
              ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) *
                   C152340 * C152159 * C152530 -
               (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) *
                   C152340 * C152159 * C152546 -
               (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) *
                   C152340 * C152159 * C152499) *
                  C360 +
              ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) *
                   C152340 * C152159 * C152546 -
               ((C134 * C394 - C135 * C372 - C134 * C395 + C152324 * C408) *
                    C125 +
                C465 * C124 + C459 * C123 + C460 * C122) *
                   C152340 * C152159 * C152530 +
               (C463 * C122 + C464 * C123 + C466 * C124 +
                (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) *
                    C125) *
                   C152340 * C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152547 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152532 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152502) *
              C152141 * C359 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152532 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152547 -
           (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
               C152502) *
              C152141 * C360 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152547 -
           ((C134 * C647 - C135 * C625 - C134 * C648 + C152324 * C661) * C125 +
            C718 * C124 + C712 * C123 + C713 * C122) *
               C152340 * C152532 +
           (C716 * C122 + C717 * C123 + C719 * C124 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) * C125) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C1401 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C1402 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152499) *
              C152543 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C1402 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C1401 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152499) *
              C152526 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C1401 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C1402 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C152159 * C1489 -
          (C459 * C125 + C460 * C124 + C461 * C123 +
           (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
              C152340 * C152159 * C1490 +
          ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
           C462 * C123 + C463 * C124 + C464 * C125) *
              C152340 * C152159 * C1491 -
          ((C134 * C1503 - C135 * C1495 - C134 * C1504 + C152324 * C1519) *
               C125 +
           (C134 * C1505 - C135 * C1496 - C134 * C1506 + C152324 * C1520) *
               C124 +
           (C134 * C1507 - C135 * C1497 - C134 * C1508 + C152324 * C1521) *
               C123 +
           (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
               C122) *
              C152340 * C152159 * C1492 +
          ((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
               C122 +
           (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
               C123 +
           (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
               C124 +
           (C134 * C1517 - C135 * C1502 - C134 * C1518 + C152324 * C1526) *
               C125) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152547 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152532 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152502) *
              C1401 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152532 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152547 -
           ((C134 * C1685 - C135 * C1673 - C134 * C1686 + C152324 * C1709) *
                C125 +
            (C134 * C1687 - C135 * C1674 - C134 * C1688 + C152324 * C1710) *
                C124 +
            (C134 * C1689 - C135 * C1675 - C134 * C1690 + C152324 * C1711) *
                C123 +
            (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                C122) *
               C152340 * C152502) *
              C1402 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152547 -
           ((C134 * C1693 - C135 * C1677 - C134 * C1694 + C152324 * C1713) *
                C125 +
            (C134 * C1695 - C135 * C1678 - C134 * C1696 + C152324 * C1714) *
                C124 +
            (C134 * C1697 - C135 * C1679 - C134 * C1698 + C152324 * C1715) *
                C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C152532 +
           ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                C122 +
            (C134 * C1703 - C135 * C1682 - C134 * C1704 + C152324 * C1718) *
                C123 +
            (C134 * C1705 - C135 * C1683 - C134 * C1706 + C152324 * C1719) *
                C124 +
            (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                C125) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C2393 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C2394 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152502) *
              C152141 * C152543 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C2394 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C2393 -
           (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
               C152502) *
              C152141 * C152526 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C2393 -
           (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
               C2394 +
           (C716 * C122 + C717 * C123 + C719 * C124 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) * C125) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C2393 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C2394 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152502) *
              C152546 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C2394 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C2393 -
           ((C134 * C1685 - C135 * C1673 - C134 * C1686 + C152324 * C1709) *
                C125 +
            (C134 * C1687 - C135 * C1674 - C134 * C1688 + C152324 * C1710) *
                C124 +
            (C134 * C1689 - C135 * C1675 - C134 * C1690 + C152324 * C1711) *
                C123 +
            (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                C122) *
               C152340 * C152502) *
              C152530 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C2393 -
           (C2099 * C125 + C2100 * C124 + C2101 * C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C2394 +
           ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                C122 +
            (C134 * C1703 - C135 * C1682 - C134 * C1704 + C152324 * C1718) *
                C123 +
            (C134 * C1705 - C135 * C1683 - C134 * C1706 + C152324 * C1719) *
                C124 +
            (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                C125) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C2624 -
          (C712 * C125 + C713 * C124 + C714 * C123 +
           (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
              C152340 * C2625 +
          ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
           C715 * C123 + C716 * C124 + C717 * C125) *
              C152340 * C2626 -
          ((C134 * C2637 - C135 * C2629 - C134 * C2638 + C152324 * C2653) *
               C125 +
           (C134 * C2639 - C135 * C2630 - C134 * C2640 + C152324 * C2654) *
               C124 +
           (C134 * C2641 - C135 * C2631 - C134 * C2642 + C152324 * C2655) *
               C123 +
           (C134 * C2643 - C135 * C2632 - C134 * C2644 + C152324 * C2656) *
               C122) *
              C152340 * C2627 +
          ((C134 * C2645 - C135 * C2633 - C134 * C2646 + C152324 * C2657) *
               C122 +
           (C134 * C2647 - C135 * C2634 - C134 * C2648 + C152324 * C2658) *
               C123 +
           (C134 * C2649 - C135 * C2635 - C134 * C2650 + C152324 * C2659) *
               C124 +
           (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
               C125) *
              C152340 * C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C152141 * C129 -
          ((C6385 + C6386 + C6387) * C152089 +
           (C6384 + C6383 + C6382) * C6301) *
              C152340 * C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C6301 +
           (C6388 + C6389 + C6390) * C152089) *
              C152340 * C152159 * C152141 * C131 -
          ((C6391 + C6392 + C6393) * C152089 +
           (C6390 + C6389 + C6388) * C6301) *
              C152340 * C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C6301 +
           (C6303 * C154 - C6304 * C141 - C6303 * C155 + C6298 * C165 +
            C6305 * C394 - C6306 * C372 - C6305 * C395 + C6299 * C408 +
            C6307 * C396 - C6308 * C373 - C6307 * C397 + C6300 * C409) *
               C152089) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152530 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152546 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6307 * C1503 - C6308 * C1495 - C6307 * C1504 + C6300 * C1519 +
             C6305 * C388 - C6306 * C369 - C6305 * C389 + C6299 * C405 +
             C6303 * C374 - C6304 * C362 - C6303 * C375 + C6298 * C398) *
                C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152547 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152532 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C152141 * C359 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152532 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152547 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C152502) *
              C152141 * C360 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152547 -
           ((C6307 * C1693 - C6308 * C1677 - C6307 * C1694 + C6300 * C1713 +
             C6305 * C1215 - C6306 * C1206 - C6305 * C1216 + C6299 * C1224 +
             C6303 * C627 - C6304 * C615 - C6303 * C628 + C6298 * C651) *
                C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152532 +
           ((C6997 + C6996 + C6995) * C6301 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152089) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C1401 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C1402 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C1401 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C1401 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C1489 -
          ((C6684 + C6685 + C6686) * C152089 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C6301) *
              C152340 * C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C6301 +
           (C6687 + C6688 + C6689) * C152089) *
              C152340 * C152159 * C1491 -
          ((C6307 * C8103 - C6308 * C8099 - C6307 * C8104 + C6300 * C8111 +
            C6305 * C1513 - C6306 * C1500 - C6305 * C1514 + C6299 * C1524 +
            C6303 * C1507 - C6304 * C1497 - C6303 * C1508 + C6298 * C1521) *
               C152089 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C6301) *
              C152340 * C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C6301 +
           (C6303 * C1513 - C6304 * C1500 - C6303 * C1514 + C6298 * C1524 +
            C6305 * C8103 - C6306 * C8099 - C6305 * C8104 + C6299 * C8111 +
            C6307 * C8109 - C6308 * C8102 - C6307 * C8110 + C6300 * C8114) *
               C152089) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152547 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152532 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C1401 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152532 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152547 -
           ((C6307 * C8339 - C6308 * C8333 - C6307 * C8340 + C6300 * C8351 +
             C6305 * C1703 - C6306 * C1682 - C6305 * C1704 + C6299 * C1718 +
             C6303 * C1689 - C6304 * C1675 - C6303 * C1690 + C6298 * C1711) *
                C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C152502) *
              C1402 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152547 -
           ((C6307 * C8343 - C6308 * C8335 - C6307 * C8344 + C6300 * C8353 +
             C6305 * C2237 - C6306 * C2232 - C6305 * C2238 + C6299 * C2244 +
             C6303 * C1697 - C6304 * C1679 - C6303 * C1698 + C6298 * C1715) *
                C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152532 +
           ((C6303 * C1701 - C6304 * C1681 - C6303 * C1702 + C6298 * C1717 +
             C6305 * C8341 - C6306 * C8334 - C6305 * C8342 + C6299 * C8352 +
             C6307 * C8347 - C6308 * C8337 - C6307 * C8348 + C6300 * C8355) *
                C6301 +
            (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
             C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
             C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                C152089) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C2393 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C2394 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C152141 * C152543 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C2394 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C2393 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C152502) *
              C152141 * C152526 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C2393 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C2394 +
           ((C6997 + C6996 + C6995) * C6301 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152089) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C2393 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C2394 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C152546 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C2394 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C2393 -
           ((C6307 * C8339 - C6308 * C8333 - C6307 * C8340 + C6300 * C8351 +
             C6305 * C1703 - C6306 * C1682 - C6305 * C1704 + C6299 * C1718 +
             C6303 * C1689 - C6304 * C1675 - C6303 * C1690 + C6298 * C1711) *
                C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C152502) *
              C152530 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C2393 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C2394 +
           ((C6303 * C1701 - C6304 * C1681 - C6303 * C1702 + C6298 * C1717 +
             C6305 * C8341 - C6306 * C8334 - C6305 * C8342 + C6299 * C8352 +
             C6307 * C8347 - C6308 * C8337 - C6307 * C8348 + C6300 * C8355) *
                C6301 +
            (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
             C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
             C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                C152089) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C2624 -
          ((C6986 + C6987 + C6988) * C152089 +
           (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
            C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
            C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
               C6301) *
              C152340 * C2625 +
          ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
            C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
            C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
               C6301 +
           (C6989 + C6990 + C6991) * C152089) *
              C152340 * C2626 -
          ((C6307 * C9657 - C6308 * C9651 - C6307 * C9658 + C6300 * C9669 +
            C6305 * C3175 - C6306 * C3170 - C6305 * C3176 + C6299 * C3182 +
            C6303 * C2641 - C6304 * C2631 - C6303 * C2642 + C6298 * C2655) *
               C152089 +
           (C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670 +
            C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
            C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656) *
               C6301) *
              C152340 * C2627 +
          ((C6303 * C2645 - C6304 * C2633 - C6303 * C2646 + C6298 * C2657 +
            C6305 * C9661 - C6306 * C9653 - C6305 * C9662 + C6299 * C9671 +
            C6307 * C9663 - C6308 * C9654 - C6307 * C9664 + C6300 * C9672) *
               C6301 +
           (C6303 * C2647 - C6304 * C2634 - C6303 * C2648 + C6298 * C2658 +
            C6305 * C9665 - C6306 * C9655 - C6305 * C9666 + C6299 * C9673 +
            C6307 * C9667 - C6308 * C9656 - C6307 * C9668 + C6300 * C9674) *
               C152089) *
              C152340 * C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152458 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C1401 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152458) *
               C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
             C462 * C123 + C463 * C124 + C464 * C125) *
                C152340 * C152458 -
            (C2099 * C125 + C2100 * C124 + C2101 * C123 +
             (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C122) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152458) *
               C1401 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152458 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C1402 +
           ((C2101 * C122 + C2100 * C123 + C2099 * C124 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C125) *
                C152340 * C152246 -
            (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152458 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152246) *
              C152141 * C851 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152246 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152458) *
              C152141 * C852 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152458 -
           (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
               C152246) *
              C152141 * C853 +
          ((C712 * C122 + C718 * C123 + C1009 * C124 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C125) *
               C152340 * C152246 -
           (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C3010 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C3011 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C3012 -
           (C3037 * C125 + C3038 * C124 + C3039 * C123 +
            (C134 * C2643 - C135 * C2632 - C134 * C2644 + C152324 * C2656) *
                C122) *
               C152340 * C152515) *
              C152141 * C152443 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C3011 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C3010 -
           (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
               C3012 +
           (C3039 * C122 + C3038 * C123 + C3037 * C124 +
            (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                C125) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152458 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C152141 * C851 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152246 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152458) *
              C152141 * C852 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152458 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152246) *
              C152141 * C853 +
          (((C7427 + C7426 + C7425) * C6301 +
            (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
             C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
             C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
                C152089) *
               C152340 * C152246 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152458 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C1401 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152458) *
               C1402 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C6301 +
             (C6687 + C6688 + C6689) * C152089) *
                C152340 * C152458 -
            ((C8889 + C8890 + C8891) * C152089 +
             (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
              C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
              C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                 C6301) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152458) *
               C1401 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152458 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C1402 +
           (((C8891 + C8890 + C8889) * C6301 +
             (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
              C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
              C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C6693 + C6694 + C6695) * C152089 +
             (C6689 + C6688 + C6687) * C6301) *
                C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C3010 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C3011 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C3012 -
           ((C10207 + C10208 + C10209) * C152089 +
            (C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656) *
                C6301) *
               C152340 * C152515) *
              C152141 * C152443 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C3011 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C3010 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C3012 +
           ((C10209 + C10208 + C10207) * C6301 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152089) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152546 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152530 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152499) *
              C359 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152530 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152546 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152499) *
              C360 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C152546 -
           ((C134 * C394 - C135 * C372 - C134 * C395 + C152324 * C408) * C125 +
            C465 * C124 + C459 * C123 + C460 * C122) *
               C152340 * C152159 * C152530 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C152159 * C152141 * C129 -
          (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
              C152159 * C152141 * C130 +
          (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
              C152159 * C152141 * C131 -
          (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
              C152159 * C152141 * C132 +
          (C208 * C122 + C209 * C123 + C210 * C124 +
           (C134 * C158 - C135 * C143 - C134 * C159 + C152324 * C167) * C125) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C1401 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C1402 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152499) *
              C152543 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C1402 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C1401 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152499) *
              C152526 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C1401 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C1402 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C152159 * C1489 -
          (C459 * C125 + C460 * C124 + C461 * C123 +
           (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
              C152340 * C152159 * C1490 +
          ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
           C462 * C123 + C463 * C124 + C464 * C125) *
              C152340 * C152159 * C1491 -
          ((C134 * C1503 - C135 * C1495 - C134 * C1504 + C152324 * C1519) *
               C125 +
           (C134 * C1505 - C135 * C1496 - C134 * C1506 + C152324 * C1520) *
               C124 +
           (C134 * C1507 - C135 * C1497 - C134 * C1508 + C152324 * C1521) *
               C123 +
           (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
               C122) *
              C152340 * C152159 * C1492 +
          ((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
               C122 +
           (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
               C123 +
           (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
               C124 +
           (C134 * C1517 - C135 * C1502 - C134 * C1518 + C152324 * C1526) *
               C125) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C2393 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C2394 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152502) *
              C152141 * C152543 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C2394 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C2393 -
           (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
               C152502) *
              C152141 * C152526 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C2393 -
           (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
               C2394 +
           (C716 * C122 + C717 * C123 + C719 * C124 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) * C125) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C2393 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C2394 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152502) *
              C152546 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C2394 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C2393 -
           ((C134 * C1685 - C135 * C1673 - C134 * C1686 + C152324 * C1709) *
                C125 +
            (C134 * C1687 - C135 * C1674 - C134 * C1688 + C152324 * C1710) *
                C124 +
            (C134 * C1689 - C135 * C1675 - C134 * C1690 + C152324 * C1711) *
                C123 +
            (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                C122) *
               C152340 * C152502) *
              C152530 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C2393 -
           (C2099 * C125 + C2100 * C124 + C2101 * C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C2394 +
           ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                C122 +
            (C134 * C1703 - C135 * C1682 - C134 * C1704 + C152324 * C1718) *
                C123 +
            (C134 * C1705 - C135 * C1683 - C134 * C1706 + C152324 * C1719) *
                C124 +
            (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                C125) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C152141 * C129 -
          ((C6385 + C6386 + C6387) * C152089 +
           (C6384 + C6383 + C6382) * C6301) *
              C152340 * C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C6301 +
           (C6388 + C6389 + C6390) * C152089) *
              C152340 * C152159 * C152141 * C131 -
          ((C6391 + C6392 + C6393) * C152089 +
           (C6390 + C6389 + C6388) * C6301) *
              C152340 * C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C6301 +
           (C6303 * C154 - C6304 * C141 - C6303 * C155 + C6298 * C165 +
            C6305 * C394 - C6306 * C372 - C6305 * C395 + C6299 * C408 +
            C6307 * C396 - C6308 * C373 - C6307 * C397 + C6300 * C409) *
               C152089) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152530 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152546 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6307 * C1503 - C6308 * C1495 - C6307 * C1504 + C6300 * C1519 +
             C6305 * C388 - C6306 * C369 - C6305 * C389 + C6299 * C405 +
             C6303 * C374 - C6304 * C362 - C6303 * C375 + C6298 * C398) *
                C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C1401 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C1402 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C1401 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C1401 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C1489 -
          ((C6684 + C6685 + C6686) * C152089 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C6301) *
              C152340 * C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C6301 +
           (C6687 + C6688 + C6689) * C152089) *
              C152340 * C152159 * C1491 -
          ((C6307 * C8103 - C6308 * C8099 - C6307 * C8104 + C6300 * C8111 +
            C6305 * C1513 - C6306 * C1500 - C6305 * C1514 + C6299 * C1524 +
            C6303 * C1507 - C6304 * C1497 - C6303 * C1508 + C6298 * C1521) *
               C152089 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C6301) *
              C152340 * C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C6301 +
           (C6303 * C1513 - C6304 * C1500 - C6303 * C1514 + C6298 * C1524 +
            C6305 * C8103 - C6306 * C8099 - C6305 * C8104 + C6299 * C8111 +
            C6307 * C8109 - C6308 * C8102 - C6307 * C8110 + C6300 * C8114) *
               C152089) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C2393 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C2394 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C152141 * C152543 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C2394 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C2393 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C152502) *
              C152141 * C152526 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C2393 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C2394 +
           ((C6997 + C6996 + C6995) * C6301 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152089) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C2393 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C2394 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C152546 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C2394 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C2393 -
           ((C6307 * C8339 - C6308 * C8333 - C6307 * C8340 + C6300 * C8351 +
             C6305 * C1703 - C6306 * C1682 - C6305 * C1704 + C6299 * C1718 +
             C6303 * C1689 - C6304 * C1675 - C6303 * C1690 + C6298 * C1711) *
                C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C152502) *
              C152530 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C2393 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C2394 +
           ((C6303 * C1701 - C6304 * C1681 - C6303 * C1702 + C6298 * C1717 +
             C6305 * C8341 - C6306 * C8334 - C6305 * C8342 + C6299 * C8352 +
             C6307 * C8347 - C6308 * C8337 - C6307 * C8348 + C6300 * C8355) *
                C6301 +
            (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
             C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
             C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                C152089) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C4321 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C152457 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C4321) *
               C152204) *
              C152118 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C4321) *
               C152457 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C4321 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          (((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
                C4321 -
            (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
                C152246) *
               C152457 +
           ((C1253 * C122 + C1254 * C123 + C1255 * C124 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C125) *
                C152340 * C152246 -
            (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
                C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C4321 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152457 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C4321) *
               C152204) *
              C152118 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C4321) *
               C152457 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C4321 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          ((((C6387 + C6386 + C6385) * C6301 +
             (C6388 + C6389 + C6390) * C152089) *
                C152340 * C4321 -
            ((C7425 + C7426 + C7427) * C152089 +
             (C6994 + C6993 + C6992) * C6301) *
                C152340 * C152246) *
               C152457 +
           (((C7759 + C7758 + C7757) * C6301 +
             (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
              C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
              C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C7210 + C7211 + C7212) * C152089 +
             (C6692 + C6691 + C6690) * C6301) *
                C152340 * C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152242 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152249 +
            ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
             C715 * C123 + C716 * C124 + C717 * C125) *
                C152340 * C4993) *
               C152457 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152249 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152242 -
            (C2878 * C125 + C2879 * C124 + C2880 * C123 +
             (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                 C122) *
                C152340 * C4993) *
               C152204) *
              C3455 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152249 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152242 -
            (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
                C4993) *
               C152457 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152242 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152249 +
            (C2880 * C122 + C2879 * C123 + C2878 * C124 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C125) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152242 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152249 +
            ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
              C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
              C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                 C6301 +
             (C6989 + C6990 + C6991) * C152089) *
                C152340 * C4993) *
               C152457 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152249 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152242 -
            ((C9988 + C9989 + C9990) * C152089 +
             (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
              C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
              C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                 C6301) *
                C152340 * C4993) *
               C152204) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152249 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152242 -
            ((C6995 + C6996 + C6997) * C152089 +
             (C6991 + C6990 + C6989) * C6301) *
                C152340 * C4993) *
               C152457 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152242 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152249 +
            ((C9990 + C9989 + C9988) * C6301 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152089) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C4321 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C152546 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C4321) *
               C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
             C462 * C123 + C463 * C124 + C464 * C125) *
                C152340 * C4321 -
            (C2099 * C125 + C2100 * C124 + C2101 * C123 +
             (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C122) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C4321) *
               C152546 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C4321 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152530 +
           ((C2101 * C122 + C2100 * C123 + C2099 * C124 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C125) *
                C152340 * C152246 -
            (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C4321 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152246) *
              C152141 * C152552 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152246 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C4321) *
              C152141 * C152545 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C4321 -
           (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
               C152246) *
              C152141 * C152528 +
          ((C712 * C122 + C718 * C123 + C1009 * C124 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C125) *
               C152340 * C152246 -
           (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152554 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152551 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152538 -
           (C3037 * C125 + C3038 * C124 + C3039 * C123 +
            (C134 * C2643 - C135 * C2632 - C134 * C2644 + C152324 * C2656) *
                C122) *
               C152340 * C152515) *
              C152141 * C3455 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152551 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152554 -
           (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
               C152538 +
           (C3039 * C122 + C3038 * C123 + C3037 * C124 +
            (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                C125) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C4321 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C152141 * C152552 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152246 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C4321) *
              C152141 * C152545 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C4321 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152246) *
              C152141 * C152528 +
          (((C7427 + C7426 + C7425) * C6301 +
            (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
             C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
             C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
                C152089) *
               C152340 * C152246 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C4321 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152546 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C4321) *
               C152530 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C6301 +
             (C6687 + C6688 + C6689) * C152089) *
                C152340 * C4321 -
            ((C8889 + C8890 + C8891) * C152089 +
             (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
              C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
              C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                 C6301) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C4321) *
               C152546 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C4321 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152530 +
           (((C8891 + C8890 + C8889) * C6301 +
             (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
              C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
              C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C6693 + C6694 + C6695) * C152089 +
             (C6689 + C6688 + C6687) * C6301) *
                C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152554 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152551 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152538 -
           ((C10207 + C10208 + C10209) * C152089 +
            (C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656) *
                C6301) *
               C152340 * C152515) *
              C152141 * C3455 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152551 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152554 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C152538 +
           ((C10209 + C10208 + C10207) * C6301 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152089) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152242 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152249 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C4993) *
              C152141 * C152118 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152249 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152242 -
           (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
               C4993) *
              C152141 * C152127 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152242 -
           (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
               C152249 +
           (C716 * C122 + C717 * C123 + C719 * C124 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) * C125) *
               C152340 * C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152242 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152249 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C4993) *
              C152141 * C152118 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152249 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152242 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C4993) *
              C152141 * C152127 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152242 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152249 +
           ((C6997 + C6996 + C6995) * C6301 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152089) *
               C152340 * C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C4321 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152246) *
              C152141 * C152552 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152246 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C4321) *
              C152141 * C152545 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C4321 -
           (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
               C152246) *
              C152141 * C152528 +
          ((C712 * C122 + C718 * C123 + C1009 * C124 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C125) *
               C152340 * C152246 -
           (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C4321 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C152546 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C4321) *
               C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
             C462 * C123 + C463 * C124 + C464 * C125) *
                C152340 * C4321 -
            (C2099 * C125 + C2100 * C124 + C2101 * C123 +
             (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C122) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C4321) *
               C152546 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C4321 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152530 +
           ((C2101 * C122 + C2100 * C123 + C2099 * C124 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C125) *
                C152340 * C152246 -
            (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C4321 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C152141 * C152552 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152246 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C4321) *
              C152141 * C152545 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C4321 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152246) *
              C152141 * C152528 +
          (((C7427 + C7426 + C7425) * C6301 +
            (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
             C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
             C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
                C152089) *
               C152340 * C152246 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C4321 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152546 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C4321) *
               C152530 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C6301 +
             (C6687 + C6688 + C6689) * C152089) *
                C152340 * C4321 -
            ((C8889 + C8890 + C8891) * C152089 +
             (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
              C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
              C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                 C6301) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C4321) *
               C152546 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C4321 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152530 +
           (((C8891 + C8890 + C8889) * C6301 +
             (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
              C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
              C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C6693 + C6694 + C6695) * C152089 +
             (C6689 + C6688 + C6687) * C6301) *
                C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152457 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152204) *
              C851 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152204 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152457) *
              C852 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C152457 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C152204) *
              C853 +
          ((C459 * C122 + C465 * C123 + C866 * C124 +
            (C134 * C856 - C135 * C855 - C134 * C857 + C152324 * C858) * C125) *
               C152340 * C152159 * C152204 -
           (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C1851 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C1852 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C1853 -
           (C1880 * C125 + C1881 * C124 + C1882 * C123 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C122) *
               C152340 * C152159 * C152509) *
              C152443 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C1852 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C1851 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C1853 +
           (C1882 * C122 + C1881 * C123 + C1880 * C124 +
            (C134 * C1858 - C135 * C1857 - C134 * C1859 + C152324 * C1860) *
                C125) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152457 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152204) *
              C851 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152204 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152457) *
              C852 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152457 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152204) *
              C853 +
          (((C7212 + C7211 + C7210) * C6301 +
            (C6303 * C390 - C6304 * C370 - C6303 * C391 + C6298 * C406 +
             C6305 * C392 - C6306 * C371 - C6305 * C393 + C6299 * C407 +
             C6307 * C1858 - C6308 * C1857 - C6307 * C1859 + C6300 * C1860) *
                C152089) *
               C152340 * C152159 * C152204 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C1851 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C1852 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C1853 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C152159 * C152509) *
              C152443 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C1852 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C1851 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C1853 +
           ((C8576 + C8575 + C8574) * C6301 +
            (C6303 * C1505 - C6304 * C1496 - C6303 * C1506 + C6298 * C1520 +
             C6305 * C1515 - C6306 * C1501 - C6305 * C1516 + C6299 * C1525 +
             C6307 * C8552 - C6308 * C8551 - C6307 * C8553 + C6300 * C8554) *
                C152089) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152458 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C152457 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152458) *
               C152204) *
              C359 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152458) *
               C152457 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152458 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C152204) *
              C360 +
          (((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
                C152458 -
            (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
                C152246) *
               C152457 +
           ((C1253 * C122 + C1254 * C123 + C1255 * C124 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C125) *
                C152340 * C152246 -
            (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152458 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152246) *
              C1851 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152246 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152458) *
              C1852 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152458 -
           (C2099 * C125 + C2100 * C124 + C2101 * C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C152246) *
              C1853 +
          (((C134 * C2235 - C135 * C2231 - C134 * C2236 + C152324 * C2243) *
                C122 +
            (C134 * C2237 - C135 * C2232 - C134 * C2238 + C152324 * C2244) *
                C123 +
            (C134 * C2239 - C135 * C2233 - C134 * C2240 + C152324 * C2245) *
                C124 +
            (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                C125) *
               C152340 * C152246 -
           (C1880 * C125 + C1881 * C124 + C1882 * C123 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C122) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152458 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C152457 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152458) *
               C152204) *
              C359 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152458) *
               C152457 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152458 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C152204) *
              C360 +
          ((((C6387 + C6386 + C6385) * C6301 +
             (C6388 + C6389 + C6390) * C152089) *
                C152340 * C152458 -
            ((C7425 + C7426 + C7427) * C152089 +
             (C6994 + C6993 + C6992) * C6301) *
                C152340 * C152246) *
               C152457 +
           (((C7759 + C7758 + C7757) * C6301 +
             (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
              C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
              C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C7210 + C7211 + C7212) * C152089 +
             (C6692 + C6691 + C6690) * C6301) *
                C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152458 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C1851 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152246 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152458) *
              C1852 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152458 -
           ((C8889 + C8890 + C8891) * C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152246) *
              C1853 +
          (((C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243 +
             C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
             C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091) *
                C6301 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152089) *
               C152340 * C152246 -
           ((C8574 + C8575 + C8576) * C152089 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C6301) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152546 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152530 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152499) *
              C359 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152530 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152546 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152499) *
              C360 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C152546 -
           ((C134 * C394 - C135 * C372 - C134 * C395 + C152324 * C408) * C125 +
            C465 * C124 + C459 * C123 + C460 * C122) *
               C152340 * C152159 * C152530 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C152159 * C152141 * C129 -
          (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
              C152159 * C152141 * C130 +
          (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
              C152159 * C152141 * C131 -
          (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
              C152159 * C152141 * C132 +
          (C208 * C122 + C209 * C123 + C210 * C124 +
           (C134 * C158 - C135 * C143 - C134 * C159 + C152324 * C167) * C125) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152547 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152532 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152502) *
              C152141 * C359 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152532 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152547 -
           (C719 * C125 + C717 * C124 + C716 * C123 + C715 * C122) * C152340 *
               C152502) *
              C152141 * C360 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152547 -
           ((C134 * C647 - C135 * C625 - C134 * C648 + C152324 * C661) * C125 +
            C718 * C124 + C712 * C123 + C713 * C122) *
               C152340 * C152532 +
           (C716 * C122 + C717 * C123 + C719 * C124 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) * C125) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C1401 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C1402 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152499) *
              C152543 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C1402 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C1401 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152499) *
              C152526 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C1401 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C1402 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C152159 * C1489 -
          (C459 * C125 + C460 * C124 + C461 * C123 +
           (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
              C152340 * C152159 * C1490 +
          ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
           C462 * C123 + C463 * C124 + C464 * C125) *
              C152340 * C152159 * C1491 -
          ((C134 * C1503 - C135 * C1495 - C134 * C1504 + C152324 * C1519) *
               C125 +
           (C134 * C1505 - C135 * C1496 - C134 * C1506 + C152324 * C1520) *
               C124 +
           (C134 * C1507 - C135 * C1497 - C134 * C1508 + C152324 * C1521) *
               C123 +
           (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
               C122) *
              C152340 * C152159 * C1492 +
          ((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
               C122 +
           (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
               C123 +
           (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
               C124 +
           (C134 * C1517 - C135 * C1502 - C134 * C1518 + C152324 * C1526) *
               C125) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152547 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152532 +
           ((C134 * C635 - C135 * C619 - C134 * C636 + C152324 * C655) * C122 +
            C715 * C123 + C716 * C124 + C717 * C125) *
               C152340 * C152502) *
              C1401 +
          (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                C122 +
            C1252 * C123 + C1253 * C124 + C1254 * C125) *
               C152340 * C152532 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152547 -
           ((C134 * C1685 - C135 * C1673 - C134 * C1686 + C152324 * C1709) *
                C125 +
            (C134 * C1687 - C135 * C1674 - C134 * C1688 + C152324 * C1710) *
                C124 +
            (C134 * C1689 - C135 * C1675 - C134 * C1690 + C152324 * C1711) *
                C123 +
            (C134 * C1691 - C135 * C1676 - C134 * C1692 + C152324 * C1712) *
                C122) *
               C152340 * C152502) *
              C1402 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152547 -
           ((C134 * C1693 - C135 * C1677 - C134 * C1694 + C152324 * C1713) *
                C125 +
            (C134 * C1695 - C135 * C1678 - C134 * C1696 + C152324 * C1714) *
                C124 +
            (C134 * C1697 - C135 * C1679 - C134 * C1698 + C152324 * C1715) *
                C123 +
            (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                C122) *
               C152340 * C152532 +
           ((C134 * C1701 - C135 * C1681 - C134 * C1702 + C152324 * C1717) *
                C122 +
            (C134 * C1703 - C135 * C1682 - C134 * C1704 + C152324 * C1718) *
                C123 +
            (C134 * C1705 - C135 * C1683 - C134 * C1706 + C152324 * C1719) *
                C124 +
            (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                C125) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C152141 * C129 -
          ((C6385 + C6386 + C6387) * C152089 +
           (C6384 + C6383 + C6382) * C6301) *
              C152340 * C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C6301 +
           (C6388 + C6389 + C6390) * C152089) *
              C152340 * C152159 * C152141 * C131 -
          ((C6391 + C6392 + C6393) * C152089 +
           (C6390 + C6389 + C6388) * C6301) *
              C152340 * C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C6301 +
           (C6303 * C154 - C6304 * C141 - C6303 * C155 + C6298 * C165 +
            C6305 * C394 - C6306 * C372 - C6305 * C395 + C6299 * C408 +
            C6307 * C396 - C6308 * C373 - C6307 * C397 + C6300 * C409) *
               C152089) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152530 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152546 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6307 * C1503 - C6308 * C1495 - C6307 * C1504 + C6300 * C1519 +
             C6305 * C388 - C6306 * C369 - C6305 * C389 + C6299 * C405 +
             C6303 * C374 - C6304 * C362 - C6303 * C375 + C6298 * C398) *
                C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152547 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152532 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C152141 * C359 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152532 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152547 -
           ((C6995 + C6996 + C6997) * C152089 +
            (C6991 + C6990 + C6989) * C6301) *
               C152340 * C152502) *
              C152141 * C360 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152547 -
           ((C6307 * C1693 - C6308 * C1677 - C6307 * C1694 + C6300 * C1713 +
             C6305 * C1215 - C6306 * C1206 - C6305 * C1216 + C6299 * C1224 +
             C6303 * C627 - C6304 * C615 - C6303 * C628 + C6298 * C651) *
                C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152532 +
           ((C6997 + C6996 + C6995) * C6301 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152089) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C1401 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C1402 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C1401 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C1401 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C1489 -
          ((C6684 + C6685 + C6686) * C152089 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C6301) *
              C152340 * C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C6301 +
           (C6687 + C6688 + C6689) * C152089) *
              C152340 * C152159 * C1491 -
          ((C6307 * C8103 - C6308 * C8099 - C6307 * C8104 + C6300 * C8111 +
            C6305 * C1513 - C6306 * C1500 - C6305 * C1514 + C6299 * C1524 +
            C6303 * C1507 - C6304 * C1497 - C6303 * C1508 + C6298 * C1521) *
               C152089 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C6301) *
              C152340 * C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C6301 +
           (C6303 * C1513 - C6304 * C1500 - C6303 * C1514 + C6298 * C1524 +
            C6305 * C8103 - C6306 * C8099 - C6305 * C8104 + C6299 * C8111 +
            C6307 * C8109 - C6308 * C8102 - C6307 * C8110 + C6300 * C8114) *
               C152089) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152547 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152532 +
           ((C6303 * C635 - C6304 * C619 - C6303 * C636 + C6298 * C655 +
             C6305 * C1691 - C6306 * C1676 - C6305 * C1692 + C6299 * C1712 +
             C6307 * C1701 - C6308 * C1681 - C6307 * C1702 + C6300 * C1717) *
                C6301 +
            (C6989 + C6990 + C6991) * C152089) *
               C152340 * C152502) *
              C1401 +
          (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                C6301 +
            (C7754 + C7755 + C7756) * C152089) *
               C152340 * C152532 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152547 -
           ((C6307 * C8339 - C6308 * C8333 - C6307 * C8340 + C6300 * C8351 +
             C6305 * C1703 - C6306 * C1682 - C6305 * C1704 + C6299 * C1718 +
             C6303 * C1689 - C6304 * C1675 - C6303 * C1690 + C6298 * C1711) *
                C152089 +
            (C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352 +
             C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
             C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712) *
                C6301) *
               C152340 * C152502) *
              C1402 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152547 -
           ((C6307 * C8343 - C6308 * C8335 - C6307 * C8344 + C6300 * C8353 +
             C6305 * C2237 - C6306 * C2232 - C6305 * C2238 + C6299 * C2244 +
             C6303 * C1697 - C6304 * C1679 - C6303 * C1698 + C6298 * C1715) *
                C152089 +
            (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                C6301) *
               C152340 * C152532 +
           ((C6303 * C1701 - C6304 * C1681 - C6303 * C1702 + C6298 * C1717 +
             C6305 * C8341 - C6306 * C8334 - C6305 * C8342 + C6299 * C8352 +
             C6307 * C8347 - C6308 * C8337 - C6307 * C8348 + C6300 * C8355) *
                C6301 +
            (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
             C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
             C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                C152089) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152458 -
           (C712 * C125 + C713 * C124 + C714 * C123 +
            (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) * C122) *
               C152340 * C152246) *
              C152141 * C851 +
          ((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
               C152246 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152458) *
              C152141 * C852 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152458 -
           (C1009 * C125 + C718 * C124 + C712 * C123 + C713 * C122) * C152340 *
               C152246) *
              C152141 * C853 +
          ((C712 * C122 + C718 * C123 + C1009 * C124 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C125) *
               C152340 * C152246 -
           (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
             C205 * C123 + C206 * C124 + C207 * C125) *
                C152340 * C152458 -
            (C712 * C125 + C713 * C124 + C714 * C123 +
             (C134 * C633 - C135 * C618 - C134 * C634 + C152324 * C654) *
                 C122) *
                C152340 * C152246) *
               C1401 +
           (((C134 * C1209 - C135 * C1203 - C134 * C1210 + C152324 * C1221) *
                 C122 +
             C1252 * C123 + C1253 * C124 + C1254 * C125) *
                C152340 * C152246 -
            (C459 * C125 + C460 * C124 + C461 * C123 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C122) *
                C152340 * C152458) *
               C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
             C462 * C123 + C463 * C124 + C464 * C125) *
                C152340 * C152458 -
            (C2099 * C125 + C2100 * C124 + C2101 * C123 +
             (C134 * C1699 - C135 * C1680 - C134 * C1700 + C152324 * C1716) *
                 C122) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          (((C714 * C122 + C713 * C123 + C712 * C124 + C718 * C125) * C152340 *
                C152246 -
            (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
                C152458) *
               C1401 +
           ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
                C152458 -
            (C1255 * C125 + C1254 * C124 + C1253 * C123 + C1252 * C122) *
                C152340 * C152246) *
               C1402 +
           ((C2101 * C122 + C2100 * C123 + C2099 * C124 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C125) *
                C152340 * C152246 -
            (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152458 -
           ((C6986 + C6987 + C6988) * C152089 +
            (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                C6301) *
               C152340 * C152246) *
              C152141 * C851 +
          (((C6988 + C6987 + C6986) * C6301 +
            (C6992 + C6993 + C6994) * C152089) *
               C152340 * C152246 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152458) *
              C152141 * C852 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152458 -
           ((C7425 + C7426 + C7427) * C152089 +
            (C6994 + C6993 + C6992) * C6301) *
               C152340 * C152246) *
              C152141 * C853 +
          (((C7427 + C7426 + C7425) * C6301 +
            (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
             C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
             C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
                C152089) *
               C152340 * C152246 -
           ((C6391 + C6392 + C6393) * C152089 +
            (C6390 + C6389 + C6388) * C6301) *
               C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C6301 +
             (C6382 + C6383 + C6384) * C152089) *
                C152340 * C152458 -
            ((C6986 + C6987 + C6988) * C152089 +
             (C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716 +
              C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
              C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654) *
                 C6301) *
                C152340 * C152246) *
               C1401 +
           (((C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221 +
              C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
              C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243) *
                 C6301 +
             (C7754 + C7755 + C7756) * C152089) *
                C152340 * C152246 -
            ((C6684 + C6685 + C6686) * C152089 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C6301) *
                C152340 * C152458) *
               C1402 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C6301 +
             (C6687 + C6688 + C6689) * C152089) *
                C152340 * C152458 -
            ((C8889 + C8890 + C8891) * C152089 +
             (C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354 +
              C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
              C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716) *
                 C6301) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C6301 +
             (C6992 + C6993 + C6994) * C152089) *
                C152340 * C152246 -
            ((C6385 + C6386 + C6387) * C152089 +
             (C6384 + C6383 + C6382) * C6301) *
                C152340 * C152458) *
               C1401 +
           (((C6686 + C6685 + C6684) * C6301 +
             (C6690 + C6691 + C6692) * C152089) *
                C152340 * C152458 -
            ((C7757 + C7758 + C7759) * C152089 +
             (C7756 + C7755 + C7754) * C6301) *
                C152340 * C152246) *
               C1402 +
           (((C8891 + C8890 + C8889) * C6301 +
             (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
              C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
              C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C6693 + C6694 + C6695) * C152089 +
             (C6689 + C6688 + C6687) * C6301) *
                C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C152159 * C152141 * C129 -
          (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
              C152159 * C152141 * C130 +
          (C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
              C152159 * C152141 * C131 -
          (C210 * C125 + C209 * C124 + C208 * C123 + C207 * C122) * C152340 *
              C152159 * C152141 * C132 +
          (C208 * C122 + C209 * C123 + C210 * C124 +
           (C134 * C158 - C135 * C143 - C134 * C159 + C152324 * C167) * C125) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C152546 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C152530 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152499) *
              C359 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C152530 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C152546 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152499) *
              C360 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C152546 -
           ((C134 * C394 - C135 * C372 - C134 * C395 + C152324 * C408) * C125 +
            C465 * C124 + C459 * C123 + C460 * C122) *
               C152340 * C152159 * C152530 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
            C205 * C123 + C206 * C124 + C207 * C125) *
               C152340 * C152159 * C1401 -
           (C459 * C125 + C460 * C124 + C461 * C123 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
               C152340 * C152159 * C1402 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
            C462 * C123 + C463 * C124 + C464 * C125) *
               C152340 * C152159 * C152499) *
              C152543 +
          ((C461 * C122 + C460 * C123 + C459 * C124 + C465 * C125) * C152340 *
               C152159 * C1402 -
           (C208 * C125 + C207 * C124 + C206 * C123 + C205 * C122) * C152340 *
               C152159 * C1401 -
           (C466 * C125 + C464 * C124 + C463 * C123 + C462 * C122) * C152340 *
               C152159 * C152499) *
              C152526 +
          ((C206 * C122 + C207 * C123 + C208 * C124 + C209 * C125) * C152340 *
               C152159 * C1401 -
           (C866 * C125 + C465 * C124 + C459 * C123 + C460 * C122) * C152340 *
               C152159 * C1402 +
           (C463 * C122 + C464 * C123 + C466 * C124 +
            (C134 * C396 - C135 * C373 - C134 * C397 + C152324 * C409) * C125) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) * C122 +
           C205 * C123 + C206 * C124 + C207 * C125) *
              C152340 * C152159 * C1489 -
          (C459 * C125 + C460 * C124 + C461 * C123 +
           (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) * C122) *
              C152340 * C152159 * C1490 +
          ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) * C122 +
           C462 * C123 + C463 * C124 + C464 * C125) *
              C152340 * C152159 * C1491 -
          ((C134 * C1503 - C135 * C1495 - C134 * C1504 + C152324 * C1519) *
               C125 +
           (C134 * C1505 - C135 * C1496 - C134 * C1506 + C152324 * C1520) *
               C124 +
           (C134 * C1507 - C135 * C1497 - C134 * C1508 + C152324 * C1521) *
               C123 +
           (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
               C122) *
              C152340 * C152159 * C1492 +
          ((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
               C122 +
           (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
               C123 +
           (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
               C124 +
           (C134 * C1517 - C135 * C1502 - C134 * C1518 + C152324 * C1526) *
               C125) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C152141 * C129 -
          ((C6385 + C6386 + C6387) * C152089 +
           (C6384 + C6383 + C6382) * C6301) *
              C152340 * C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C6301 +
           (C6388 + C6389 + C6390) * C152089) *
              C152340 * C152159 * C152141 * C131 -
          ((C6391 + C6392 + C6393) * C152089 +
           (C6390 + C6389 + C6388) * C6301) *
              C152340 * C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C6301 +
           (C6303 * C154 - C6304 * C141 - C6303 * C155 + C6298 * C165 +
            C6305 * C394 - C6306 * C372 - C6305 * C395 + C6299 * C408 +
            C6307 * C396 - C6308 * C373 - C6307 * C397 + C6300 * C409) *
               C152089) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C152530 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C152546 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C152546 -
           ((C6307 * C1503 - C6308 * C1495 - C6307 * C1504 + C6300 * C1519 +
             C6305 * C388 - C6306 * C369 - C6305 * C389 + C6299 * C405 +
             C6303 * C374 - C6304 * C362 - C6303 * C375 + C6298 * C398) *
                C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C6301 +
            (C6382 + C6383 + C6384) * C152089) *
               C152340 * C152159 * C1401 -
           ((C6684 + C6685 + C6686) * C152089 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C6301) *
               C152340 * C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C6301 +
            (C6687 + C6688 + C6689) * C152089) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C6301 +
            (C6690 + C6691 + C6692) * C152089) *
               C152340 * C152159 * C1402 -
           ((C6385 + C6386 + C6387) * C152089 +
            (C6384 + C6383 + C6382) * C6301) *
               C152340 * C152159 * C1401 -
           ((C6693 + C6694 + C6695) * C152089 +
            (C6689 + C6688 + C6687) * C6301) *
               C152340 * C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C6301 +
            (C6388 + C6389 + C6390) * C152089) *
               C152340 * C152159 * C1401 -
           ((C7210 + C7211 + C7212) * C152089 +
            (C6692 + C6691 + C6690) * C6301) *
               C152340 * C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C6301 +
            (C6303 * C388 - C6304 * C369 - C6303 * C389 + C6298 * C405 +
             C6305 * C1503 - C6306 * C1495 - C6305 * C1504 + C6299 * C1519 +
             C6307 * C1517 - C6308 * C1502 - C6307 * C1518 + C6300 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C6301 +
           (C6382 + C6383 + C6384) * C152089) *
              C152340 * C152159 * C1489 -
          ((C6684 + C6685 + C6686) * C152089 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C6301) *
              C152340 * C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C6301 +
           (C6687 + C6688 + C6689) * C152089) *
              C152340 * C152159 * C1491 -
          ((C6307 * C8103 - C6308 * C8099 - C6307 * C8104 + C6300 * C8111 +
            C6305 * C1513 - C6306 * C1500 - C6305 * C1514 + C6299 * C1524 +
            C6303 * C1507 - C6304 * C1497 - C6303 * C1508 + C6298 * C1521) *
               C152089 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C6301) *
              C152340 * C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C6301 +
           (C6303 * C1513 - C6304 * C1500 - C6303 * C1514 + C6298 * C1524 +
            C6305 * C8103 - C6306 * C8099 - C6305 * C8104 + C6299 * C8111 +
            C6307 * C8109 - C6308 * C8102 - C6307 * C8110 + C6300 * C8114) *
               C152089) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C152200 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C152207 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152159 * C3799) *
              C152118 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C152207 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C152200 -
           ((C74045 + C74046 + C74047) * C152089 +
            (C74041 + C74040 + C74039) * C152436) *
               C152340 * C152159 * C3799) *
              C152127 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152159 * C152200 -
           ((C74562 + C74563 + C74564) * C152089 +
            (C74044 + C74043 + C74042) * C152436) *
               C152340 * C152159 * C152207 +
           ((C74047 + C74046 + C74045) * C152436 +
            (C73655 * C388 - C73656 * C369 - C73655 * C389 + C152539 * C405 +
             C73657 * C1503 - C73658 * C1495 - C73657 * C1504 +
             C152540 * C1519 + C73659 * C1517 - C73660 * C1502 -
             C73659 * C1518 + C73652 * C1526) *
                C152089) *
               C152340 * C152159 * C3799) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C152458 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152246) *
               C152200 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152246 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C152458) *
               C152207 +
           (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
              C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
              C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
              C73659 * C1512 + C73652 * C1523) *
                 C152436 +
             (C74039 + C74040 + C74041) * C152089) *
                C152340 * C152458 -
            ((C76193 + C76194 + C76195) * C152089 +
             (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 +
              C73652 * C8354 + C73657 * C2235 - C73658 * C2231 -
              C73657 * C2236 + C152540 * C2243 + C73655 * C1699 -
              C73656 * C1680 - C73655 * C1700 + C152539 * C1716) *
                 C152436) *
                C152340 * C152246) *
               C3799) *
              C3455 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152246 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C152458) *
               C152200 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C152458 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152246) *
               C152207 +
           (((C76195 + C76194 + C76193) * C152436 +
             (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
              C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
              C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
              C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C74045 + C74046 + C74047) * C152089 +
             (C74041 + C74040 + C74039) * C152436) *
                C152340 * C152458) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C152553 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C152549 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152159 * C152535 -
           ((C75882 + C75883 + C75884) * C152089 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152436) *
               C152340 * C152159 * C152509) *
              C3455 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C152549 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C152553 -
           ((C74045 + C74046 + C74047) * C152089 +
            (C74041 + C74040 + C74039) * C152436) *
               C152340 * C152159 * C152535 +
           ((C75884 + C75883 + C75882) * C152436 +
            (C73655 * C1505 - C73656 * C1496 - C73655 * C1506 +
             C152539 * C1520 + C73657 * C1515 - C73658 * C1501 -
             C73657 * C1516 + C152540 * C1525 + C73659 * C8552 -
             C73660 * C8551 - C73659 * C8553 + C73652 * C8554) *
                C152089) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C3315 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C152204) *
              C152552 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C152204 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C3315) *
              C152545 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152159 * C3315 -
           ((C74562 + C74563 + C74564) * C152089 +
            (C74044 + C74043 + C74042) * C152436) *
               C152340 * C152159 * C152204) *
              C152528 +
          (((C74564 + C74563 + C74562) * C152436 +
            (C73655 * C390 - C73656 * C370 - C73655 * C391 + C152539 * C406 +
             C73657 * C392 - C73658 * C371 - C73657 * C393 + C152540 * C407 +
             C73659 * C1858 - C73660 * C1857 - C73659 * C1859 +
             C73652 * C1860) *
                C152089) *
               C152340 * C152159 * C152204 -
           ((C73743 + C73744 + C73745) * C152089 +
            (C73742 + C73741 + C73740) * C152436) *
               C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C152547 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152532 +
            ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
              C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
              C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
              C73659 * C1702 + C73652 * C1717) *
                 C152436 +
             (C74341 + C74342 + C74343) * C152089) *
                C152340 * C152502) *
               C3315 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152532 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C152547 -
            ((C77256 + C77257 + C77258) * C152089 +
             (C73659 * C8341 - C73660 * C8334 - C73659 * C8342 +
              C73652 * C8352 + C73657 * C1701 - C73658 * C1681 -
              C73657 * C1702 + C152540 * C1717 + C73655 * C1691 -
              C73656 * C1676 - C73655 * C1692 + C152539 * C1712) *
                 C152436) *
                C152340 * C152502) *
               C152204) *
              C3455 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152532 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C152547 -
            ((C74347 + C74348 + C74349) * C152089 +
             (C74343 + C74342 + C74341) * C152436) *
                C152340 * C152502) *
               C3315 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C152547 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152532 +
            ((C77258 + C77257 + C77256) * C152436 +
             (C73655 * C1687 - C73656 * C1674 - C73655 * C1688 +
              C152539 * C1710 + C73657 * C1705 - C73658 * C1683 -
              C73657 * C1706 + C152540 * C1719 + C73659 * C9966 -
              C73660 * C9965 - C73659 * C9967 + C73652 * C9968) *
                 C152089) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C152458 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152246) *
               C3315 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152246 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C152458) *
               C152204) *
              C152118 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152246 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C152458) *
               C3315 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C152458 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          ((((C73739 + C73738 + C73737) * C152436 +
             (C73740 + C73741 + C73742) * C152089) *
                C152340 * C152458 -
            ((C74777 + C74778 + C74779) * C152089 +
             (C74346 + C74345 + C74344) * C152436) *
                C152340 * C152246) *
               C3315 +
           (((C75111 + C75110 + C75109) * C152436 +
             (C73655 * C1215 - C73656 * C1206 - C73655 * C1216 +
              C152539 * C1224 + C73657 * C1693 - C73658 * C1677 -
              C73657 * C1694 + C152540 * C1713 + C73659 * C2241 -
              C73660 * C2234 - C73659 * C2242 + C73652 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C74562 + C74563 + C74564) * C152089 +
             (C74044 + C74043 + C74042) * C152436) *
                C152340 * C152458) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C3315 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C152204) *
              C152552 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C152204 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C3315) *
              C152545 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152159 * C3315 -
           ((C74562 + C74563 + C74564) * C152089 +
            (C74044 + C74043 + C74042) * C152436) *
               C152340 * C152159 * C152204) *
              C152528 +
          (((C74564 + C74563 + C74562) * C152436 +
            (C73655 * C390 - C73656 * C370 - C73655 * C391 + C152539 * C406 +
             C73657 * C392 - C73658 * C371 - C73657 * C393 + C152540 * C407 +
             C73659 * C1858 - C73660 * C1857 - C73659 * C1859 +
             C73652 * C1860) *
                C152089) *
               C152340 * C152159 * C152204 -
           ((C73743 + C73744 + C73745) * C152089 +
            (C73742 + C73741 + C73740) * C152436) *
               C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C152553 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C152549 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152159 * C152535 -
           ((C75882 + C75883 + C75884) * C152089 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152436) *
               C152340 * C152159 * C152509) *
              C3455 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C152549 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C152553 -
           ((C74045 + C74046 + C74047) * C152089 +
            (C74041 + C74040 + C74039) * C152436) *
               C152340 * C152159 * C152535 +
           ((C75884 + C75883 + C75882) * C152436 +
            (C73655 * C1505 - C73656 * C1496 - C73655 * C1506 +
             C152539 * C1520 + C73657 * C1515 - C73658 * C1501 -
             C73657 * C1516 + C152540 * C1525 + C73659 * C8552 -
             C73660 * C8551 - C73659 * C8553 + C73652 * C8554) *
                C152089) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C4321 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152246) *
               C152200 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152246 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C4321) *
               C152207 +
           (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
              C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
              C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
              C73659 * C1512 + C73652 * C1523) *
                 C152436 +
             (C74039 + C74040 + C74041) * C152089) *
                C152340 * C4321 -
            ((C76193 + C76194 + C76195) * C152089 +
             (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 +
              C73652 * C8354 + C73657 * C2235 - C73658 * C2231 -
              C73657 * C2236 + C152540 * C2243 + C73655 * C1699 -
              C73656 * C1680 - C73655 * C1700 + C152539 * C1716) *
                 C152436) *
                C152340 * C152246) *
               C3799) *
              C152443 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152246 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C4321) *
               C152200 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C4321 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152246) *
               C152207 +
           (((C76195 + C76194 + C76193) * C152436 +
             (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
              C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
              C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
              C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C74045 + C74046 + C74047) * C152089 +
             (C74041 + C74040 + C74039) * C152436) *
                C152340 * C4321) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152242 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152249 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C4993) *
              C152200 +
          (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
             C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
             C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
             C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                C152436 +
            (C75106 + C75107 + C75108) * C152089) *
               C152340 * C152249 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152242 -
           ((C77256 + C77257 + C77258) * C152089 +
            (C73659 * C8341 - C73660 * C8334 - C73659 * C8342 + C73652 * C8352 +
             C73657 * C1701 - C73658 * C1681 - C73657 * C1702 +
             C152540 * C1717 + C73655 * C1691 - C73656 * C1676 -
             C73655 * C1692 + C152539 * C1712) *
                C152436) *
               C152340 * C4993) *
              C152207 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152242 -
           ((C76193 + C76194 + C76195) * C152089 +
            (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354 +
             C73657 * C2235 - C73658 * C2231 - C73657 * C2236 +
             C152540 * C2243 + C73655 * C1699 - C73656 * C1680 -
             C73655 * C1700 + C152539 * C1716) *
                C152436) *
               C152340 * C152249 +
           ((C73655 * C1701 - C73656 * C1681 - C73655 * C1702 +
             C152539 * C1717 + C73657 * C8341 - C73658 * C8334 -
             C73657 * C8342 + C152540 * C8352 + C73659 * C8347 -
             C73660 * C8337 - C73659 * C8348 + C73652 * C8355) *
                C152436 +
            (C73655 * C1703 - C73656 * C1682 - C73655 * C1704 +
             C152539 * C1718 + C73657 * C8339 - C73658 * C8333 -
             C73657 * C8340 + C152540 * C8351 + C73659 * C8349 -
             C73660 * C8338 - C73659 * C8350 + C73652 * C8356) *
                C152089) *
               C152340 * C4993) *
              C3799) *
         C152113) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C4321 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152246) *
              C152553 +
          (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
             C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
             C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
             C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                C152436 +
            (C75106 + C75107 + C75108) * C152089) *
               C152340 * C152246 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C4321) *
              C152549 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C4321 -
           ((C76193 + C76194 + C76195) * C152089 +
            (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354 +
             C73657 * C2235 - C73658 * C2231 - C73657 * C2236 +
             C152540 * C2243 + C73655 * C1699 - C73656 * C1680 -
             C73655 * C1700 + C152539 * C1716) *
                C152436) *
               C152340 * C152246) *
              C152535 +
          (((C73655 * C2235 - C73656 * C2231 - C73655 * C2236 +
             C152539 * C2243 + C73657 * C8345 - C73658 * C8336 -
             C73657 * C8346 + C152540 * C8354 + C73659 * C9087 -
             C73660 * C9085 - C73659 * C9088 + C73652 * C9091) *
                C152436 +
            (C73655 * C2237 - C73656 * C2232 - C73655 * C2238 +
             C152539 * C2244 + C73657 * C8343 - C73658 * C8335 -
             C73657 * C8344 + C152540 * C8353 + C73659 * C9089 -
             C73660 * C9086 - C73659 * C9090 + C73652 * C9092) *
                C152089) *
               C152340 * C152246 -
           ((C75882 + C75883 + C75884) * C152089 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152436) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C4321 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152246) *
               C3315 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152246 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152246 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C4321) *
               C3315 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C4321 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          ((((C73739 + C73738 + C73737) * C152436 +
             (C73740 + C73741 + C73742) * C152089) *
                C152340 * C4321 -
            ((C74777 + C74778 + C74779) * C152089 +
             (C74346 + C74345 + C74344) * C152436) *
                C152340 * C152246) *
               C3315 +
           (((C75111 + C75110 + C75109) * C152436 +
             (C73655 * C1215 - C73656 * C1206 - C73655 * C1216 +
              C152539 * C1224 + C73657 * C1693 - C73658 * C1677 -
              C73657 * C1694 + C152540 * C1713 + C73659 * C2241 -
              C73660 * C2234 - C73659 * C2242 + C73652 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C74562 + C74563 + C74564) * C152089 +
             (C74044 + C74043 + C74042) * C152436) *
                C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152554 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152551 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C152538 -
           ((C77471 + C77472 + C77473) * C152089 +
            (C73659 * C9659 - C73660 * C9652 - C73659 * C9660 + C73652 * C9670 +
             C73657 * C3173 - C73658 * C3169 - C73657 * C3174 +
             C152540 * C3181 + C73655 * C2643 - C73656 * C2632 -
             C73655 * C2644 + C152539 * C2656) *
                C152436) *
               C152340 * C152515) *
              C3315 +
          (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
             C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
             C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
             C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                C152436 +
            (C75106 + C75107 + C75108) * C152089) *
               C152340 * C152551 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152554 -
           ((C77256 + C77257 + C77258) * C152089 +
            (C73659 * C8341 - C73660 * C8334 - C73659 * C8342 + C73652 * C8352 +
             C73657 * C1701 - C73658 * C1681 - C73657 * C1702 +
             C152540 * C1717 + C73655 * C1691 - C73656 * C1676 -
             C73655 * C1692 + C152539 * C1712) *
                C152436) *
               C152340 * C152538 +
           ((C73655 * C3173 - C73656 * C3169 - C73655 * C3174 +
             C152539 * C3181 + C73657 * C9659 - C73658 * C9652 -
             C73657 * C9660 + C152540 * C9670 + C73659 * C10405 -
             C73660 * C10403 - C73659 * C10406 + C73652 * C10409) *
                C152436 +
            (C73655 * C3175 - C73656 * C3170 - C73655 * C3176 +
             C152539 * C3182 + C73657 * C9657 - C73658 * C9651 -
             C73657 * C9658 + C152540 * C9669 + C73659 * C10407 -
             C73660 * C10404 - C73659 * C10408 + C73652 * C10410) *
                C152089) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C152242 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152249 +
            ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
              C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
              C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
              C73659 * C1702 + C73652 * C1717) *
                 C152436 +
             (C74341 + C74342 + C74343) * C152089) *
                C152340 * C4993) *
               C3315 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152249 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C152242 -
            ((C77256 + C77257 + C77258) * C152089 +
             (C73659 * C8341 - C73660 * C8334 - C73659 * C8342 +
              C73652 * C8352 + C73657 * C1701 - C73658 * C1681 -
              C73657 * C1702 + C152540 * C1717 + C73655 * C1691 -
              C73656 * C1676 - C73655 * C1692 + C152539 * C1712) *
                 C152436) *
                C152340 * C4993) *
               C152204) *
              C152443 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152249 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C152242 -
            ((C74347 + C74348 + C74349) * C152089 +
             (C74343 + C74342 + C74341) * C152436) *
                C152340 * C4993) *
               C3315 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C152242 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152249 +
            ((C77258 + C77257 + C77256) * C152436 +
             (C73655 * C1687 - C73656 * C1674 - C73655 * C1688 +
              C152539 * C1710 + C73657 * C1705 - C73658 * C1683 -
              C73657 * C1706 + C152540 * C1719 + C73659 * C9966 -
              C73660 * C9965 - C73659 * C9967 + C73652 * C9968) *
                 C152089) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C4321 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152246) *
               C3315 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152246 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152246 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C4321) *
               C3315 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C4321 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          ((((C73739 + C73738 + C73737) * C152436 +
             (C73740 + C73741 + C73742) * C152089) *
                C152340 * C4321 -
            ((C74777 + C74778 + C74779) * C152089 +
             (C74346 + C74345 + C74344) * C152436) *
                C152340 * C152246) *
               C3315 +
           (((C75111 + C75110 + C75109) * C152436 +
             (C73655 * C1215 - C73656 * C1206 - C73655 * C1216 +
              C152539 * C1224 + C73657 * C1693 - C73658 * C1677 -
              C73657 * C1694 + C152540 * C1713 + C73659 * C2241 -
              C73660 * C2234 - C73659 * C2242 + C73652 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C74562 + C74563 + C74564) * C152089 +
             (C74044 + C74043 + C74042) * C152436) *
                C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C4321 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152246) *
              C152553 +
          (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
             C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
             C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
             C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                C152436 +
            (C75106 + C75107 + C75108) * C152089) *
               C152340 * C152246 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C4321) *
              C152549 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C4321 -
           ((C76193 + C76194 + C76195) * C152089 +
            (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354 +
             C73657 * C2235 - C73658 * C2231 - C73657 * C2236 +
             C152540 * C2243 + C73655 * C1699 - C73656 * C1680 -
             C73655 * C1700 + C152539 * C1716) *
                C152436) *
               C152340 * C152246) *
              C152535 +
          (((C73655 * C2235 - C73656 * C2231 - C73655 * C2236 +
             C152539 * C2243 + C73657 * C8345 - C73658 * C8336 -
             C73657 * C8346 + C152540 * C8354 + C73659 * C9087 -
             C73660 * C9085 - C73659 * C9088 + C73652 * C9091) *
                C152436 +
            (C73655 * C2237 - C73656 * C2232 - C73655 * C2238 +
             C152539 * C2244 + C73657 * C8343 - C73658 * C8335 -
             C73657 * C8344 + C152540 * C8353 + C73659 * C9089 -
             C73660 * C9086 - C73659 * C9090 + C73652 * C9092) *
                C152089) *
               C152340 * C152246 -
           ((C75882 + C75883 + C75884) * C152089 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152436) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C1851 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C1852 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152159 * C1853 -
           ((C75882 + C75883 + C75884) * C152089 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152436) *
               C152340 * C152159 * C152509) *
              C152443 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C1852 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C1851 -
           ((C74045 + C74046 + C74047) * C152089 +
            (C74041 + C74040 + C74039) * C152436) *
               C152340 * C152159 * C1853 +
           ((C75884 + C75883 + C75882) * C152436 +
            (C73655 * C1505 - C73656 * C1496 - C73655 * C1506 +
             C152539 * C1520 + C73657 * C1515 - C73658 * C1501 -
             C73657 * C1516 + C152540 * C1525 + C73659 * C8552 -
             C73660 * C8551 - C73659 * C8553 + C73652 * C8554) *
                C152089) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C152457 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C152204) *
              C851 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C152204 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C152457) *
              C852 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152159 * C152457 -
           ((C74562 + C74563 + C74564) * C152089 +
            (C74044 + C74043 + C74042) * C152436) *
               C152340 * C152159 * C152204) *
              C853 +
          (((C74564 + C74563 + C74562) * C152436 +
            (C73655 * C390 - C73656 * C370 - C73655 * C391 + C152539 * C406 +
             C73657 * C392 - C73658 * C371 - C73657 * C393 + C152540 * C407 +
             C73659 * C1858 - C73660 * C1857 - C73659 * C1859 +
             C73652 * C1860) *
                C152089) *
               C152340 * C152159 * C152204 -
           ((C73743 + C73744 + C73745) * C152089 +
            (C73742 + C73741 + C73740) * C152436) *
               C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C2393 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C2394 +
            ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
              C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
              C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
              C73659 * C1702 + C73652 * C1717) *
                 C152436 +
             (C74341 + C74342 + C74343) * C152089) *
                C152340 * C152502) *
               C152457 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C2394 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C2393 -
            ((C77256 + C77257 + C77258) * C152089 +
             (C73659 * C8341 - C73660 * C8334 - C73659 * C8342 +
              C73652 * C8352 + C73657 * C1701 - C73658 * C1681 -
              C73657 * C1702 + C152540 * C1717 + C73655 * C1691 -
              C73656 * C1676 - C73655 * C1692 + C152539 * C1712) *
                 C152436) *
                C152340 * C152502) *
               C152204) *
              C152443 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C2394 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C2393 -
            ((C74347 + C74348 + C74349) * C152089 +
             (C74343 + C74342 + C74341) * C152436) *
                C152340 * C152502) *
               C152457 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C2393 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C2394 +
            ((C77258 + C77257 + C77256) * C152436 +
             (C73655 * C1687 - C73656 * C1674 - C73655 * C1688 +
              C152539 * C1710 + C73657 * C1705 - C73658 * C1683 -
              C73657 * C1706 + C152540 * C1719 + C73659 * C9966 -
              C73660 * C9965 - C73659 * C9967 + C73652 * C9968) *
                 C152089) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152458 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152246) *
              C1851 +
          (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
             C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
             C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
             C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                C152436 +
            (C75106 + C75107 + C75108) * C152089) *
               C152340 * C152246 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152458) *
              C1852 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152458 -
           ((C76193 + C76194 + C76195) * C152089 +
            (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354 +
             C73657 * C2235 - C73658 * C2231 - C73657 * C2236 +
             C152540 * C2243 + C73655 * C1699 - C73656 * C1680 -
             C73655 * C1700 + C152539 * C1716) *
                C152436) *
               C152340 * C152246) *
              C1853 +
          (((C73655 * C2235 - C73656 * C2231 - C73655 * C2236 +
             C152539 * C2243 + C73657 * C8345 - C73658 * C8336 -
             C73657 * C8346 + C152540 * C8354 + C73659 * C9087 -
             C73660 * C9085 - C73659 * C9088 + C73652 * C9091) *
                C152436 +
            (C73655 * C2237 - C73656 * C2232 - C73655 * C2238 +
             C152539 * C2244 + C73657 * C8343 - C73658 * C8335 -
             C73657 * C8344 + C152540 * C8353 + C73659 * C9089 -
             C73660 * C9086 - C73659 * C9090 + C73652 * C9092) *
                C152089) *
               C152340 * C152246 -
           ((C75882 + C75883 + C75884) * C152089 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152436) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C152458 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152246) *
               C152457 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152246 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C152458) *
               C152204) *
              C359 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152246 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C152458) *
               C152457 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C152458 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152246) *
               C152204) *
              C360 +
          ((((C73739 + C73738 + C73737) * C152436 +
             (C73740 + C73741 + C73742) * C152089) *
                C152340 * C152458 -
            ((C74777 + C74778 + C74779) * C152089 +
             (C74346 + C74345 + C74344) * C152436) *
                C152340 * C152246) *
               C152457 +
           (((C75111 + C75110 + C75109) * C152436 +
             (C73655 * C1215 - C73656 * C1206 - C73655 * C1216 +
              C152539 * C1224 + C73657 * C1693 - C73658 * C1677 -
              C73657 * C1694 + C152540 * C1713 + C73659 * C2241 -
              C73660 * C2234 - C73659 * C2242 + C73652 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C74562 + C74563 + C74564) * C152089 +
             (C74044 + C74043 + C74042) * C152436) *
                C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C3010 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C3011 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C3012 -
           ((C77471 + C77472 + C77473) * C152089 +
            (C73659 * C9659 - C73660 * C9652 - C73659 * C9660 + C73652 * C9670 +
             C73657 * C3173 - C73658 * C3169 - C73657 * C3174 +
             C152540 * C3181 + C73655 * C2643 - C73656 * C2632 -
             C73655 * C2644 + C152539 * C2656) *
                C152436) *
               C152340 * C152515) *
              C152457 +
          (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
             C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
             C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
             C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                C152436 +
            (C75106 + C75107 + C75108) * C152089) *
               C152340 * C3011 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C3010 -
           ((C77256 + C77257 + C77258) * C152089 +
            (C73659 * C8341 - C73660 * C8334 - C73659 * C8342 + C73652 * C8352 +
             C73657 * C1701 - C73658 * C1681 - C73657 * C1702 +
             C152540 * C1717 + C73655 * C1691 - C73656 * C1676 -
             C73655 * C1692 + C152539 * C1712) *
                C152436) *
               C152340 * C3012 +
           ((C73655 * C3173 - C73656 * C3169 - C73655 * C3174 +
             C152539 * C3181 + C73657 * C9659 - C73658 * C9652 -
             C73657 * C9660 + C152540 * C9670 + C73659 * C10405 -
             C73660 * C10403 - C73659 * C10406 + C73652 * C10409) *
                C152436 +
            (C73655 * C3175 - C73656 * C3170 - C73655 * C3176 +
             C152539 * C3182 + C73657 * C9657 - C73658 * C9651 -
             C73657 * C9658 + C152540 * C9669 + C73659 * C10407 -
             C73660 * C10404 - C73659 * C10408 + C73652 * C10410) *
                C152089) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
                C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
                C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                   C152436 +
               (C73734 + C73735 + C73736) * C152089) *
                  C152340 * C152159 * C152141 * C129 -
              ((C73737 + C73738 + C73739) * C152089 +
               (C73736 + C73735 + C73734) * C152436) *
                  C152340 * C152159 * C152141 * C130 +
              ((C73739 + C73738 + C73737) * C152436 +
               (C73740 + C73741 + C73742) * C152089) *
                  C152340 * C152159 * C152141 * C131 -
              ((C73743 + C73744 + C73745) * C152089 +
               (C73742 + C73741 + C73740) * C152436) *
                  C152340 * C152159 * C152141 * C132 +
              ((C73745 + C73744 + C73743) * C152436 +
               (C73655 * C154 - C73656 * C141 - C73655 * C155 + C152539 * C165 +
                C73657 * C394 - C73658 * C372 - C73657 * C395 + C152540 * C408 +
                C73659 * C396 - C73660 * C373 - C73659 * C397 + C73652 * C409) *
                   C152089) *
                  C152340 * C152159 * C152141 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C73655 * C144 - C73656 * C136 - C73655 * C145 +
                 C152539 * C160 + C73657 * C380 - C73658 * C365 -
                 C73657 * C381 + C152540 * C401 + C73659 * C382 -
                 C73660 * C366 - C73659 * C383 + C73652 * C402) *
                    C152436 +
                (C73734 + C73735 + C73736) * C152089) *
                   C152340 * C152159 * C152546 -
               ((C74036 + C74037 + C74038) * C152089 +
                (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
                 C73652 * C1522 + C73657 * C382 - C73658 * C366 -
                 C73657 * C383 + C152540 * C402 + C73655 * C380 -
                 C73656 * C365 - C73655 * C381 + C152539 * C401) *
                    C152436) *
                   C152340 * C152159 * C152530 +
               ((C73655 * C382 - C73656 * C366 - C73655 * C383 +
                 C152539 * C402 + C73657 * C1509 - C73658 * C1498 -
                 C73657 * C1510 + C152540 * C1522 + C73659 * C1511 -
                 C73660 * C1499 - C73659 * C1512 + C73652 * C1523) *
                    C152436 +
                (C74039 + C74040 + C74041) * C152089) *
                   C152340 * C152159 * C152499) *
                  C359 +
              (((C74038 + C74037 + C74036) * C152436 +
                (C74042 + C74043 + C74044) * C152089) *
                   C152340 * C152159 * C152530 -
               ((C73737 + C73738 + C73739) * C152089 +
                (C73736 + C73735 + C73734) * C152436) *
                   C152340 * C152159 * C152546 -
               ((C74045 + C74046 + C74047) * C152089 +
                (C74041 + C74040 + C74039) * C152436) *
                   C152340 * C152159 * C152499) *
                  C360 +
              (((C73739 + C73738 + C73737) * C152436 +
                (C73740 + C73741 + C73742) * C152089) *
                   C152340 * C152159 * C152546 -
               ((C73659 * C1503 - C73660 * C1495 - C73659 * C1504 +
                 C73652 * C1519 + C73657 * C388 - C73658 * C369 -
                 C73657 * C389 + C152540 * C405 + C73655 * C374 -
                 C73656 * C362 - C73655 * C375 + C152539 * C398) *
                    C152089 +
                (C74044 + C74043 + C74042) * C152436) *
                   C152340 * C152159 * C152530 +
               ((C74047 + C74046 + C74045) * C152436 +
                (C73655 * C388 - C73656 * C369 - C73655 * C389 +
                 C152539 * C405 + C73657 * C1503 - C73658 * C1495 -
                 C73657 * C1504 + C152540 * C1519 + C73659 * C1517 -
                 C73660 * C1502 - C73659 * C1518 + C73652 * C1526) *
                    C152089) *
                   C152340 * C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152547 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152532 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C152502) *
              C152141 * C359 +
          (((C74340 + C74339 + C74338) * C152436 +
            (C74344 + C74345 + C74346) * C152089) *
               C152340 * C152532 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152547 -
           ((C74347 + C74348 + C74349) * C152089 +
            (C74343 + C74342 + C74341) * C152436) *
               C152340 * C152502) *
              C152141 * C360 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152547 -
           ((C73659 * C1693 - C73660 * C1677 - C73659 * C1694 + C73652 * C1713 +
             C73657 * C1215 - C73658 * C1206 - C73657 * C1216 +
             C152540 * C1224 + C73655 * C627 - C73656 * C615 - C73655 * C628 +
             C152539 * C651) *
                C152089 +
            (C74346 + C74345 + C74344) * C152436) *
               C152340 * C152532 +
           ((C74349 + C74348 + C74347) * C152436 +
            (C73655 * C641 - C73656 * C622 - C73655 * C642 + C152539 * C658 +
             C73657 * C1685 - C73658 * C1673 - C73657 * C1686 +
             C152540 * C1709 + C73659 * C1707 - C73660 * C1684 -
             C73659 * C1708 + C73652 * C1720) *
                C152089) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C1401 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C1402 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C1402 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C1401 -
           ((C74045 + C74046 + C74047) * C152089 +
            (C74041 + C74040 + C74039) * C152436) *
               C152340 * C152159 * C152499) *
              C152526 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152159 * C1401 -
           ((C74562 + C74563 + C74564) * C152089 +
            (C74044 + C74043 + C74042) * C152436) *
               C152340 * C152159 * C1402 +
           ((C74047 + C74046 + C74045) * C152436 +
            (C73655 * C388 - C73656 * C369 - C73655 * C389 + C152539 * C405 +
             C73657 * C1503 - C73658 * C1495 - C73657 * C1504 +
             C152540 * C1519 + C73659 * C1517 - C73660 * C1502 -
             C73659 * C1518 + C73652 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152436 +
           (C73734 + C73735 + C73736) * C152089) *
              C152340 * C152159 * C1489 -
          ((C74036 + C74037 + C74038) * C152089 +
           (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
            C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
            C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
               C152436) *
              C152340 * C152159 * C1490 +
          ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
            C73657 * C1509 - C73658 * C1498 - C73657 * C1510 + C152540 * C1522 +
            C73659 * C1511 - C73660 * C1499 - C73659 * C1512 + C73652 * C1523) *
               C152436 +
           (C74039 + C74040 + C74041) * C152089) *
              C152340 * C152159 * C1491 -
          ((C73659 * C8103 - C73660 * C8099 - C73659 * C8104 + C73652 * C8111 +
            C73657 * C1513 - C73658 * C1500 - C73657 * C1514 + C152540 * C1524 +
            C73655 * C1507 - C73656 * C1497 - C73655 * C1508 +
            C152539 * C1521) *
               C152089 +
           (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
            C73657 * C1511 - C73658 * C1499 - C73657 * C1512 + C152540 * C1523 +
            C73655 * C1509 - C73656 * C1498 - C73655 * C1510 +
            C152539 * C1522) *
               C152436) *
              C152340 * C152159 * C1492 +
          ((C73655 * C1511 - C73656 * C1499 - C73655 * C1512 + C152539 * C1523 +
            C73657 * C8105 - C73658 * C8100 - C73657 * C8106 + C152540 * C8112 +
            C73659 * C8107 - C73660 * C8101 - C73659 * C8108 + C73652 * C8113) *
               C152436 +
           (C73655 * C1513 - C73656 * C1500 - C73655 * C1514 + C152539 * C1524 +
            C73657 * C8103 - C73658 * C8099 - C73657 * C8104 + C152540 * C8111 +
            C73659 * C8109 - C73660 * C8102 - C73659 * C8110 + C73652 * C8114) *
               C152089) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152547 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152532 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C152502) *
              C1401 +
          (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
             C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
             C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
             C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                C152436 +
            (C75106 + C75107 + C75108) * C152089) *
               C152340 * C152532 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152547 -
           ((C73659 * C8339 - C73660 * C8333 - C73659 * C8340 + C73652 * C8351 +
             C73657 * C1703 - C73658 * C1682 - C73657 * C1704 +
             C152540 * C1718 + C73655 * C1689 - C73656 * C1675 -
             C73655 * C1690 + C152539 * C1711) *
                C152089 +
            (C73659 * C8341 - C73660 * C8334 - C73659 * C8342 + C73652 * C8352 +
             C73657 * C1701 - C73658 * C1681 - C73657 * C1702 +
             C152540 * C1717 + C73655 * C1691 - C73656 * C1676 -
             C73655 * C1692 + C152539 * C1712) *
                C152436) *
               C152340 * C152502) *
              C1402 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152547 -
           ((C73659 * C8343 - C73660 * C8335 - C73659 * C8344 + C73652 * C8353 +
             C73657 * C2237 - C73658 * C2232 - C73657 * C2238 +
             C152540 * C2244 + C73655 * C1697 - C73656 * C1679 -
             C73655 * C1698 + C152539 * C1715) *
                C152089 +
            (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354 +
             C73657 * C2235 - C73658 * C2231 - C73657 * C2236 +
             C152540 * C2243 + C73655 * C1699 - C73656 * C1680 -
             C73655 * C1700 + C152539 * C1716) *
                C152436) *
               C152340 * C152532 +
           ((C73655 * C1701 - C73656 * C1681 - C73655 * C1702 +
             C152539 * C1717 + C73657 * C8341 - C73658 * C8334 -
             C73657 * C8342 + C152540 * C8352 + C73659 * C8347 -
             C73660 * C8337 - C73659 * C8348 + C73652 * C8355) *
                C152436 +
            (C73655 * C1703 - C73656 * C1682 - C73655 * C1704 +
             C152539 * C1718 + C73657 * C8339 - C73658 * C8333 -
             C73657 * C8340 + C152540 * C8351 + C73659 * C8349 -
             C73660 * C8338 - C73659 * C8350 + C73652 * C8356) *
                C152089) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C2393 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C2394 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C152502) *
              C152141 * C152543 +
          (((C74340 + C74339 + C74338) * C152436 +
            (C74344 + C74345 + C74346) * C152089) *
               C152340 * C2394 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C2393 -
           ((C74347 + C74348 + C74349) * C152089 +
            (C74343 + C74342 + C74341) * C152436) *
               C152340 * C152502) *
              C152141 * C152526 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C2393 -
           ((C74777 + C74778 + C74779) * C152089 +
            (C74346 + C74345 + C74344) * C152436) *
               C152340 * C2394 +
           ((C74349 + C74348 + C74347) * C152436 +
            (C73655 * C641 - C73656 * C622 - C73655 * C642 + C152539 * C658 +
             C73657 * C1685 - C73658 * C1673 - C73657 * C1686 +
             C152540 * C1709 + C73659 * C1707 - C73660 * C1684 -
             C73659 * C1708 + C73652 * C1720) *
                C152089) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C2393 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C2394 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C152502) *
              C152546 +
          (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
             C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
             C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
             C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                C152436 +
            (C75106 + C75107 + C75108) * C152089) *
               C152340 * C2394 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C2393 -
           ((C73659 * C8339 - C73660 * C8333 - C73659 * C8340 + C73652 * C8351 +
             C73657 * C1703 - C73658 * C1682 - C73657 * C1704 +
             C152540 * C1718 + C73655 * C1689 - C73656 * C1675 -
             C73655 * C1690 + C152539 * C1711) *
                C152089 +
            (C73659 * C8341 - C73660 * C8334 - C73659 * C8342 + C73652 * C8352 +
             C73657 * C1701 - C73658 * C1681 - C73657 * C1702 +
             C152540 * C1717 + C73655 * C1691 - C73656 * C1676 -
             C73655 * C1692 + C152539 * C1712) *
                C152436) *
               C152340 * C152502) *
              C152530 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C2393 -
           ((C76193 + C76194 + C76195) * C152089 +
            (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354 +
             C73657 * C2235 - C73658 * C2231 - C73657 * C2236 +
             C152540 * C2243 + C73655 * C1699 - C73656 * C1680 -
             C73655 * C1700 + C152539 * C1716) *
                C152436) *
               C152340 * C2394 +
           ((C73655 * C1701 - C73656 * C1681 - C73655 * C1702 +
             C152539 * C1717 + C73657 * C8341 - C73658 * C8334 -
             C73657 * C8342 + C152540 * C8352 + C73659 * C8347 -
             C73660 * C8337 - C73659 * C8348 + C73652 * C8355) *
                C152436 +
            (C73655 * C1703 - C73656 * C1682 - C73655 * C1704 +
             C152539 * C1718 + C73657 * C8339 - C73658 * C8333 -
             C73657 * C8340 + C152540 * C8351 + C73659 * C8349 -
             C73660 * C8338 - C73659 * C8350 + C73652 * C8356) *
                C152089) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152436 +
           (C73734 + C73735 + C73736) * C152089) *
              C152340 * C2624 -
          ((C74338 + C74339 + C74340) * C152089 +
           (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
            C73657 * C1209 - C73658 * C1203 - C73657 * C1210 + C152540 * C1221 +
            C73655 * C633 - C73656 * C618 - C73655 * C634 + C152539 * C654) *
               C152436) *
              C152340 * C2625 +
          ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
            C73657 * C1691 - C73658 * C1676 - C73657 * C1692 + C152540 * C1712 +
            C73659 * C1701 - C73660 * C1681 - C73659 * C1702 + C73652 * C1717) *
               C152436 +
           (C74341 + C74342 + C74343) * C152089) *
              C152340 * C2626 -
          ((C73659 * C9657 - C73660 * C9651 - C73659 * C9658 + C73652 * C9669 +
            C73657 * C3175 - C73658 * C3170 - C73657 * C3176 + C152540 * C3182 +
            C73655 * C2641 - C73656 * C2631 - C73655 * C2642 +
            C152539 * C2655) *
               C152089 +
           (C73659 * C9659 - C73660 * C9652 - C73659 * C9660 + C73652 * C9670 +
            C73657 * C3173 - C73658 * C3169 - C73657 * C3174 + C152540 * C3181 +
            C73655 * C2643 - C73656 * C2632 - C73655 * C2644 +
            C152539 * C2656) *
               C152436) *
              C152340 * C2627 +
          ((C73655 * C2645 - C73656 * C2633 - C73655 * C2646 + C152539 * C2657 +
            C73657 * C9661 - C73658 * C9653 - C73657 * C9662 + C152540 * C9671 +
            C73659 * C9663 - C73660 * C9654 - C73659 * C9664 + C73652 * C9672) *
               C152436 +
           (C73655 * C2647 - C73656 * C2634 - C73655 * C2648 + C152539 * C2658 +
            C73657 * C9665 - C73658 * C9655 - C73657 * C9666 + C152540 * C9673 +
            C73659 * C9667 - C73660 * C9656 - C73659 * C9668 + C73652 * C9674) *
               C152089) *
              C152340 * C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C152458 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152246) *
               C1401 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152246 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C152458) *
               C1402 +
           (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
              C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
              C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
              C73659 * C1512 + C73652 * C1523) *
                 C152436 +
             (C74039 + C74040 + C74041) * C152089) *
                C152340 * C152458 -
            ((C76193 + C76194 + C76195) * C152089 +
             (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 +
              C73652 * C8354 + C73657 * C2235 - C73658 * C2231 -
              C73657 * C2236 + C152540 * C2243 + C73655 * C1699 -
              C73656 * C1680 - C73655 * C1700 + C152539 * C1716) *
                 C152436) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152246 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C152458) *
               C1401 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C152458 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152246) *
               C1402 +
           (((C76195 + C76194 + C76193) * C152436 +
             (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
              C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
              C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
              C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C74045 + C74046 + C74047) * C152089 +
             (C74041 + C74040 + C74039) * C152436) *
                C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152458 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152246) *
              C152141 * C851 +
          (((C74340 + C74339 + C74338) * C152436 +
            (C74344 + C74345 + C74346) * C152089) *
               C152340 * C152246 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152458) *
              C152141 * C852 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152458 -
           ((C74777 + C74778 + C74779) * C152089 +
            (C74346 + C74345 + C74344) * C152436) *
               C152340 * C152246) *
              C152141 * C853 +
          (((C74779 + C74778 + C74777) * C152436 +
            (C73655 * C643 - C73656 * C623 - C73655 * C644 + C152539 * C659 +
             C73657 * C1217 - C73658 * C1207 - C73657 * C1218 +
             C152540 * C1225 + C73659 * C2077 - C73660 * C2076 -
             C73659 * C2078 + C73652 * C2079) *
                C152089) *
               C152340 * C152246 -
           ((C73743 + C73744 + C73745) * C152089 +
            (C73742 + C73741 + C73740) * C152436) *
               C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C3010 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C3011 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C3012 -
           ((C77471 + C77472 + C77473) * C152089 +
            (C73659 * C9659 - C73660 * C9652 - C73659 * C9660 + C73652 * C9670 +
             C73657 * C3173 - C73658 * C3169 - C73657 * C3174 +
             C152540 * C3181 + C73655 * C2643 - C73656 * C2632 -
             C73655 * C2644 + C152539 * C2656) *
                C152436) *
               C152340 * C152515) *
              C152141 * C152443 +
          (((C74340 + C74339 + C74338) * C152436 +
            (C74344 + C74345 + C74346) * C152089) *
               C152340 * C3011 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C3010 -
           ((C74347 + C74348 + C74349) * C152089 +
            (C74343 + C74342 + C74341) * C152436) *
               C152340 * C3012 +
           ((C77473 + C77472 + C77471) * C152436 +
            (C73655 * C2639 - C73656 * C2630 - C73655 * C2640 +
             C152539 * C2654 + C73657 * C3177 - C73658 * C3171 -
             C73657 * C3178 + C152540 * C3183 + C73659 * C10185 -
             C73660 * C10184 - C73659 * C10186 + C73652 * C10187) *
                C152089) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C152546 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C152530 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C152530 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C152546 -
           ((C74045 + C74046 + C74047) * C152089 +
            (C74041 + C74040 + C74039) * C152436) *
               C152340 * C152159 * C152499) *
              C360 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152159 * C152546 -
           ((C73659 * C1503 - C73660 * C1495 - C73659 * C1504 + C73652 * C1519 +
             C73657 * C388 - C73658 * C369 - C73657 * C389 + C152540 * C405 +
             C73655 * C374 - C73656 * C362 - C73655 * C375 + C152539 * C398) *
                C152089 +
            (C74044 + C74043 + C74042) * C152436) *
               C152340 * C152159 * C152530 +
           ((C74047 + C74046 + C74045) * C152436 +
            (C73655 * C388 - C73656 * C369 - C73655 * C389 + C152539 * C405 +
             C73657 * C1503 - C73658 * C1495 - C73657 * C1504 +
             C152540 * C1519 + C73659 * C1517 - C73660 * C1502 -
             C73659 * C1518 + C73652 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152436 +
           (C73734 + C73735 + C73736) * C152089) *
              C152340 * C152159 * C152141 * C129 -
          ((C73737 + C73738 + C73739) * C152089 +
           (C73736 + C73735 + C73734) * C152436) *
              C152340 * C152159 * C152141 * C130 +
          ((C73739 + C73738 + C73737) * C152436 +
           (C73740 + C73741 + C73742) * C152089) *
              C152340 * C152159 * C152141 * C131 -
          ((C73743 + C73744 + C73745) * C152089 +
           (C73742 + C73741 + C73740) * C152436) *
              C152340 * C152159 * C152141 * C132 +
          ((C73745 + C73744 + C73743) * C152436 +
           (C73655 * C154 - C73656 * C141 - C73655 * C155 + C152539 * C165 +
            C73657 * C394 - C73658 * C372 - C73657 * C395 + C152540 * C408 +
            C73659 * C396 - C73660 * C373 - C73659 * C397 + C73652 * C409) *
               C152089) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C1401 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C1402 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C1402 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C1401 -
           ((C74045 + C74046 + C74047) * C152089 +
            (C74041 + C74040 + C74039) * C152436) *
               C152340 * C152159 * C152499) *
              C152526 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152159 * C1401 -
           ((C74562 + C74563 + C74564) * C152089 +
            (C74044 + C74043 + C74042) * C152436) *
               C152340 * C152159 * C1402 +
           ((C74047 + C74046 + C74045) * C152436 +
            (C73655 * C388 - C73656 * C369 - C73655 * C389 + C152539 * C405 +
             C73657 * C1503 - C73658 * C1495 - C73657 * C1504 +
             C152540 * C1519 + C73659 * C1517 - C73660 * C1502 -
             C73659 * C1518 + C73652 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152436 +
           (C73734 + C73735 + C73736) * C152089) *
              C152340 * C152159 * C1489 -
          ((C74036 + C74037 + C74038) * C152089 +
           (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
            C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
            C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
               C152436) *
              C152340 * C152159 * C1490 +
          ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
            C73657 * C1509 - C73658 * C1498 - C73657 * C1510 + C152540 * C1522 +
            C73659 * C1511 - C73660 * C1499 - C73659 * C1512 + C73652 * C1523) *
               C152436 +
           (C74039 + C74040 + C74041) * C152089) *
              C152340 * C152159 * C1491 -
          ((C73659 * C8103 - C73660 * C8099 - C73659 * C8104 + C73652 * C8111 +
            C73657 * C1513 - C73658 * C1500 - C73657 * C1514 + C152540 * C1524 +
            C73655 * C1507 - C73656 * C1497 - C73655 * C1508 +
            C152539 * C1521) *
               C152089 +
           (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
            C73657 * C1511 - C73658 * C1499 - C73657 * C1512 + C152540 * C1523 +
            C73655 * C1509 - C73656 * C1498 - C73655 * C1510 +
            C152539 * C1522) *
               C152436) *
              C152340 * C152159 * C1492 +
          ((C73655 * C1511 - C73656 * C1499 - C73655 * C1512 + C152539 * C1523 +
            C73657 * C8105 - C73658 * C8100 - C73657 * C8106 + C152540 * C8112 +
            C73659 * C8107 - C73660 * C8101 - C73659 * C8108 + C73652 * C8113) *
               C152436 +
           (C73655 * C1513 - C73656 * C1500 - C73655 * C1514 + C152539 * C1524 +
            C73657 * C8103 - C73658 * C8099 - C73657 * C8104 + C152540 * C8111 +
            C73659 * C8109 - C73660 * C8102 - C73659 * C8110 + C73652 * C8114) *
               C152089) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C2393 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C2394 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C152502) *
              C152141 * C152543 +
          (((C74340 + C74339 + C74338) * C152436 +
            (C74344 + C74345 + C74346) * C152089) *
               C152340 * C2394 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C2393 -
           ((C74347 + C74348 + C74349) * C152089 +
            (C74343 + C74342 + C74341) * C152436) *
               C152340 * C152502) *
              C152141 * C152526 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C2393 -
           ((C74777 + C74778 + C74779) * C152089 +
            (C74346 + C74345 + C74344) * C152436) *
               C152340 * C2394 +
           ((C74349 + C74348 + C74347) * C152436 +
            (C73655 * C641 - C73656 * C622 - C73655 * C642 + C152539 * C658 +
             C73657 * C1685 - C73658 * C1673 - C73657 * C1686 +
             C152540 * C1709 + C73659 * C1707 - C73660 * C1684 -
             C73659 * C1708 + C73652 * C1720) *
                C152089) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C2393 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C2394 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C152502) *
              C152546 +
          (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
             C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
             C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
             C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                C152436 +
            (C75106 + C75107 + C75108) * C152089) *
               C152340 * C2394 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C2393 -
           ((C73659 * C8339 - C73660 * C8333 - C73659 * C8340 + C73652 * C8351 +
             C73657 * C1703 - C73658 * C1682 - C73657 * C1704 +
             C152540 * C1718 + C73655 * C1689 - C73656 * C1675 -
             C73655 * C1690 + C152539 * C1711) *
                C152089 +
            (C73659 * C8341 - C73660 * C8334 - C73659 * C8342 + C73652 * C8352 +
             C73657 * C1701 - C73658 * C1681 - C73657 * C1702 +
             C152540 * C1717 + C73655 * C1691 - C73656 * C1676 -
             C73655 * C1692 + C152539 * C1712) *
                C152436) *
               C152340 * C152502) *
              C152530 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C2393 -
           ((C76193 + C76194 + C76195) * C152089 +
            (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354 +
             C73657 * C2235 - C73658 * C2231 - C73657 * C2236 +
             C152540 * C2243 + C73655 * C1699 - C73656 * C1680 -
             C73655 * C1700 + C152539 * C1716) *
                C152436) *
               C152340 * C2394 +
           ((C73655 * C1701 - C73656 * C1681 - C73655 * C1702 +
             C152539 * C1717 + C73657 * C8341 - C73658 * C8334 -
             C73657 * C8342 + C152540 * C8352 + C73659 * C8347 -
             C73660 * C8337 - C73659 * C8348 + C73652 * C8355) *
                C152436 +
            (C73655 * C1703 - C73656 * C1682 - C73655 * C1704 +
             C152539 * C1718 + C73657 * C8339 - C73658 * C8333 -
             C73657 * C8340 + C152540 * C8351 + C73659 * C8349 -
             C73660 * C8338 - C73659 * C8350 + C73652 * C8356) *
                C152089) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C4321 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152246) *
               C152457 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152246 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C4321) *
               C152204) *
              C152118 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152246 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C4321) *
               C152457 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C4321 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          ((((C73739 + C73738 + C73737) * C152436 +
             (C73740 + C73741 + C73742) * C152089) *
                C152340 * C4321 -
            ((C74777 + C74778 + C74779) * C152089 +
             (C74346 + C74345 + C74344) * C152436) *
                C152340 * C152246) *
               C152457 +
           (((C75111 + C75110 + C75109) * C152436 +
             (C73655 * C1215 - C73656 * C1206 - C73655 * C1216 +
              C152539 * C1224 + C73657 * C1693 - C73658 * C1677 -
              C73657 * C1694 + C152540 * C1713 + C73659 * C2241 -
              C73660 * C2234 - C73659 * C2242 + C73652 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C74562 + C74563 + C74564) * C152089 +
             (C74044 + C74043 + C74042) * C152436) *
                C152340 * C4321) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C152242 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152249 +
            ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
              C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
              C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
              C73659 * C1702 + C73652 * C1717) *
                 C152436 +
             (C74341 + C74342 + C74343) * C152089) *
                C152340 * C4993) *
               C152457 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152249 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C152242 -
            ((C77256 + C77257 + C77258) * C152089 +
             (C73659 * C8341 - C73660 * C8334 - C73659 * C8342 +
              C73652 * C8352 + C73657 * C1701 - C73658 * C1681 -
              C73657 * C1702 + C152540 * C1717 + C73655 * C1691 -
              C73656 * C1676 - C73655 * C1692 + C152539 * C1712) *
                 C152436) *
                C152340 * C4993) *
               C152204) *
              C3455 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152249 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C152242 -
            ((C74347 + C74348 + C74349) * C152089 +
             (C74343 + C74342 + C74341) * C152436) *
                C152340 * C4993) *
               C152457 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C152242 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152249 +
            ((C77258 + C77257 + C77256) * C152436 +
             (C73655 * C1687 - C73656 * C1674 - C73655 * C1688 +
              C152539 * C1710 + C73657 * C1705 - C73658 * C1683 -
              C73657 * C1706 + C152540 * C1719 + C73659 * C9966 -
              C73660 * C9965 - C73659 * C9967 + C73652 * C9968) *
                 C152089) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C4321 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152246) *
               C152546 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152246 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C4321) *
               C152530 +
           (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
              C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
              C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
              C73659 * C1512 + C73652 * C1523) *
                 C152436 +
             (C74039 + C74040 + C74041) * C152089) *
                C152340 * C4321 -
            ((C76193 + C76194 + C76195) * C152089 +
             (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 +
              C73652 * C8354 + C73657 * C2235 - C73658 * C2231 -
              C73657 * C2236 + C152540 * C2243 + C73655 * C1699 -
              C73656 * C1680 - C73655 * C1700 + C152539 * C1716) *
                 C152436) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152246 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C4321) *
               C152546 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C4321 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152246) *
               C152530 +
           (((C76195 + C76194 + C76193) * C152436 +
             (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
              C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
              C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
              C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C74045 + C74046 + C74047) * C152089 +
             (C74041 + C74040 + C74039) * C152436) *
                C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C4321 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152246) *
              C152141 * C152552 +
          (((C74340 + C74339 + C74338) * C152436 +
            (C74344 + C74345 + C74346) * C152089) *
               C152340 * C152246 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C4321) *
              C152141 * C152545 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C4321 -
           ((C74777 + C74778 + C74779) * C152089 +
            (C74346 + C74345 + C74344) * C152436) *
               C152340 * C152246) *
              C152141 * C152528 +
          (((C74779 + C74778 + C74777) * C152436 +
            (C73655 * C643 - C73656 * C623 - C73655 * C644 + C152539 * C659 +
             C73657 * C1217 - C73658 * C1207 - C73657 * C1218 +
             C152540 * C1225 + C73659 * C2077 - C73660 * C2076 -
             C73659 * C2078 + C73652 * C2079) *
                C152089) *
               C152340 * C152246 -
           ((C73743 + C73744 + C73745) * C152089 +
            (C73742 + C73741 + C73740) * C152436) *
               C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152554 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152551 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C152538 -
           ((C77471 + C77472 + C77473) * C152089 +
            (C73659 * C9659 - C73660 * C9652 - C73659 * C9660 + C73652 * C9670 +
             C73657 * C3173 - C73658 * C3169 - C73657 * C3174 +
             C152540 * C3181 + C73655 * C2643 - C73656 * C2632 -
             C73655 * C2644 + C152539 * C2656) *
                C152436) *
               C152340 * C152515) *
              C152141 * C3455 +
          (((C74340 + C74339 + C74338) * C152436 +
            (C74344 + C74345 + C74346) * C152089) *
               C152340 * C152551 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152554 -
           ((C74347 + C74348 + C74349) * C152089 +
            (C74343 + C74342 + C74341) * C152436) *
               C152340 * C152538 +
           ((C77473 + C77472 + C77471) * C152436 +
            (C73655 * C2639 - C73656 * C2630 - C73655 * C2640 +
             C152539 * C2654 + C73657 * C3177 - C73658 * C3171 -
             C73657 * C3178 + C152540 * C3183 + C73659 * C10185 -
             C73660 * C10184 - C73659 * C10186 + C73652 * C10187) *
                C152089) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152242 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152249 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C4993) *
              C152141 * C152118 +
          (((C74340 + C74339 + C74338) * C152436 +
            (C74344 + C74345 + C74346) * C152089) *
               C152340 * C152249 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152242 -
           ((C74347 + C74348 + C74349) * C152089 +
            (C74343 + C74342 + C74341) * C152436) *
               C152340 * C4993) *
              C152141 * C152127 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152242 -
           ((C74777 + C74778 + C74779) * C152089 +
            (C74346 + C74345 + C74344) * C152436) *
               C152340 * C152249 +
           ((C74349 + C74348 + C74347) * C152436 +
            (C73655 * C641 - C73656 * C622 - C73655 * C642 + C152539 * C658 +
             C73657 * C1685 - C73658 * C1673 - C73657 * C1686 +
             C152540 * C1709 + C73659 * C1707 - C73660 * C1684 -
             C73659 * C1708 + C73652 * C1720) *
                C152089) *
               C152340 * C4993) *
              C152141 * C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C4321 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152246) *
              C152141 * C152552 +
          (((C74340 + C74339 + C74338) * C152436 +
            (C74344 + C74345 + C74346) * C152089) *
               C152340 * C152246 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C4321) *
              C152141 * C152545 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C4321 -
           ((C74777 + C74778 + C74779) * C152089 +
            (C74346 + C74345 + C74344) * C152436) *
               C152340 * C152246) *
              C152141 * C152528 +
          (((C74779 + C74778 + C74777) * C152436 +
            (C73655 * C643 - C73656 * C623 - C73655 * C644 + C152539 * C659 +
             C73657 * C1217 - C73658 * C1207 - C73657 * C1218 +
             C152540 * C1225 + C73659 * C2077 - C73660 * C2076 -
             C73659 * C2078 + C73652 * C2079) *
                C152089) *
               C152340 * C152246 -
           ((C73743 + C73744 + C73745) * C152089 +
            (C73742 + C73741 + C73740) * C152436) *
               C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C4321 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152246) *
               C152546 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152246 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C4321) *
               C152530 +
           (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
              C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
              C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
              C73659 * C1512 + C73652 * C1523) *
                 C152436 +
             (C74039 + C74040 + C74041) * C152089) *
                C152340 * C4321 -
            ((C76193 + C76194 + C76195) * C152089 +
             (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 +
              C73652 * C8354 + C73657 * C2235 - C73658 * C2231 -
              C73657 * C2236 + C152540 * C2243 + C73655 * C1699 -
              C73656 * C1680 - C73655 * C1700 + C152539 * C1716) *
                 C152436) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152246 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C4321) *
               C152546 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C4321 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152246) *
               C152530 +
           (((C76195 + C76194 + C76193) * C152436 +
             (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
              C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
              C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
              C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C74045 + C74046 + C74047) * C152089 +
             (C74041 + C74040 + C74039) * C152436) *
                C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C152457 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C152204) *
              C851 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C152204 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C152457) *
              C852 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152159 * C152457 -
           ((C74562 + C74563 + C74564) * C152089 +
            (C74044 + C74043 + C74042) * C152436) *
               C152340 * C152159 * C152204) *
              C853 +
          (((C74564 + C74563 + C74562) * C152436 +
            (C73655 * C390 - C73656 * C370 - C73655 * C391 + C152539 * C406 +
             C73657 * C392 - C73658 * C371 - C73657 * C393 + C152540 * C407 +
             C73659 * C1858 - C73660 * C1857 - C73659 * C1859 +
             C73652 * C1860) *
                C152089) *
               C152340 * C152159 * C152204 -
           ((C73743 + C73744 + C73745) * C152089 +
            (C73742 + C73741 + C73740) * C152436) *
               C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C1851 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C1852 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152159 * C1853 -
           ((C75882 + C75883 + C75884) * C152089 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152436) *
               C152340 * C152159 * C152509) *
              C152443 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C1852 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C1851 -
           ((C74045 + C74046 + C74047) * C152089 +
            (C74041 + C74040 + C74039) * C152436) *
               C152340 * C152159 * C1853 +
           ((C75884 + C75883 + C75882) * C152436 +
            (C73655 * C1505 - C73656 * C1496 - C73655 * C1506 +
             C152539 * C1520 + C73657 * C1515 - C73658 * C1501 -
             C73657 * C1516 + C152540 * C1525 + C73659 * C8552 -
             C73660 * C8551 - C73659 * C8553 + C73652 * C8554) *
                C152089) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C152458 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152246) *
               C152457 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152246 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C152458) *
               C152204) *
              C359 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152246 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C152458) *
               C152457 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C152458 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152246) *
               C152204) *
              C360 +
          ((((C73739 + C73738 + C73737) * C152436 +
             (C73740 + C73741 + C73742) * C152089) *
                C152340 * C152458 -
            ((C74777 + C74778 + C74779) * C152089 +
             (C74346 + C74345 + C74344) * C152436) *
                C152340 * C152246) *
               C152457 +
           (((C75111 + C75110 + C75109) * C152436 +
             (C73655 * C1215 - C73656 * C1206 - C73655 * C1216 +
              C152539 * C1224 + C73657 * C1693 - C73658 * C1677 -
              C73657 * C1694 + C152540 * C1713 + C73659 * C2241 -
              C73660 * C2234 - C73659 * C2242 + C73652 * C2246) *
                 C152089) *
                C152340 * C152246 -
            ((C74562 + C74563 + C74564) * C152089 +
             (C74044 + C74043 + C74042) * C152436) *
                C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152458 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152246) *
              C1851 +
          (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
             C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
             C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
             C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                C152436 +
            (C75106 + C75107 + C75108) * C152089) *
               C152340 * C152246 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152458) *
              C1852 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152458 -
           ((C76193 + C76194 + C76195) * C152089 +
            (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354 +
             C73657 * C2235 - C73658 * C2231 - C73657 * C2236 +
             C152540 * C2243 + C73655 * C1699 - C73656 * C1680 -
             C73655 * C1700 + C152539 * C1716) *
                C152436) *
               C152340 * C152246) *
              C1853 +
          (((C73655 * C2235 - C73656 * C2231 - C73655 * C2236 +
             C152539 * C2243 + C73657 * C8345 - C73658 * C8336 -
             C73657 * C8346 + C152540 * C8354 + C73659 * C9087 -
             C73660 * C9085 - C73659 * C9088 + C73652 * C9091) *
                C152436 +
            (C73655 * C2237 - C73656 * C2232 - C73655 * C2238 +
             C152539 * C2244 + C73657 * C8343 - C73658 * C8335 -
             C73657 * C8344 + C152540 * C8353 + C73659 * C9089 -
             C73660 * C9086 - C73659 * C9090 + C73652 * C9092) *
                C152089) *
               C152340 * C152246 -
           ((C75882 + C75883 + C75884) * C152089 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152436) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C152546 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C152530 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C152530 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C152546 -
           ((C74045 + C74046 + C74047) * C152089 +
            (C74041 + C74040 + C74039) * C152436) *
               C152340 * C152159 * C152499) *
              C360 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152159 * C152546 -
           ((C73659 * C1503 - C73660 * C1495 - C73659 * C1504 + C73652 * C1519 +
             C73657 * C388 - C73658 * C369 - C73657 * C389 + C152540 * C405 +
             C73655 * C374 - C73656 * C362 - C73655 * C375 + C152539 * C398) *
                C152089 +
            (C74044 + C74043 + C74042) * C152436) *
               C152340 * C152159 * C152530 +
           ((C74047 + C74046 + C74045) * C152436 +
            (C73655 * C388 - C73656 * C369 - C73655 * C389 + C152539 * C405 +
             C73657 * C1503 - C73658 * C1495 - C73657 * C1504 +
             C152540 * C1519 + C73659 * C1517 - C73660 * C1502 -
             C73659 * C1518 + C73652 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152436 +
           (C73734 + C73735 + C73736) * C152089) *
              C152340 * C152159 * C152141 * C129 -
          ((C73737 + C73738 + C73739) * C152089 +
           (C73736 + C73735 + C73734) * C152436) *
              C152340 * C152159 * C152141 * C130 +
          ((C73739 + C73738 + C73737) * C152436 +
           (C73740 + C73741 + C73742) * C152089) *
              C152340 * C152159 * C152141 * C131 -
          ((C73743 + C73744 + C73745) * C152089 +
           (C73742 + C73741 + C73740) * C152436) *
              C152340 * C152159 * C152141 * C132 +
          ((C73745 + C73744 + C73743) * C152436 +
           (C73655 * C154 - C73656 * C141 - C73655 * C155 + C152539 * C165 +
            C73657 * C394 - C73658 * C372 - C73657 * C395 + C152540 * C408 +
            C73659 * C396 - C73660 * C373 - C73659 * C397 + C73652 * C409) *
               C152089) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152547 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152532 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C152502) *
              C152141 * C359 +
          (((C74340 + C74339 + C74338) * C152436 +
            (C74344 + C74345 + C74346) * C152089) *
               C152340 * C152532 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152547 -
           ((C74347 + C74348 + C74349) * C152089 +
            (C74343 + C74342 + C74341) * C152436) *
               C152340 * C152502) *
              C152141 * C360 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152547 -
           ((C73659 * C1693 - C73660 * C1677 - C73659 * C1694 + C73652 * C1713 +
             C73657 * C1215 - C73658 * C1206 - C73657 * C1216 +
             C152540 * C1224 + C73655 * C627 - C73656 * C615 - C73655 * C628 +
             C152539 * C651) *
                C152089 +
            (C74346 + C74345 + C74344) * C152436) *
               C152340 * C152532 +
           ((C74349 + C74348 + C74347) * C152436 +
            (C73655 * C641 - C73656 * C622 - C73655 * C642 + C152539 * C658 +
             C73657 * C1685 - C73658 * C1673 - C73657 * C1686 +
             C152540 * C1709 + C73659 * C1707 - C73660 * C1684 -
             C73659 * C1708 + C73652 * C1720) *
                C152089) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C1401 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C1402 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C1402 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C1401 -
           ((C74045 + C74046 + C74047) * C152089 +
            (C74041 + C74040 + C74039) * C152436) *
               C152340 * C152159 * C152499) *
              C152526 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152159 * C1401 -
           ((C74562 + C74563 + C74564) * C152089 +
            (C74044 + C74043 + C74042) * C152436) *
               C152340 * C152159 * C1402 +
           ((C74047 + C74046 + C74045) * C152436 +
            (C73655 * C388 - C73656 * C369 - C73655 * C389 + C152539 * C405 +
             C73657 * C1503 - C73658 * C1495 - C73657 * C1504 +
             C152540 * C1519 + C73659 * C1517 - C73660 * C1502 -
             C73659 * C1518 + C73652 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152436 +
           (C73734 + C73735 + C73736) * C152089) *
              C152340 * C152159 * C1489 -
          ((C74036 + C74037 + C74038) * C152089 +
           (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
            C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
            C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
               C152436) *
              C152340 * C152159 * C1490 +
          ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
            C73657 * C1509 - C73658 * C1498 - C73657 * C1510 + C152540 * C1522 +
            C73659 * C1511 - C73660 * C1499 - C73659 * C1512 + C73652 * C1523) *
               C152436 +
           (C74039 + C74040 + C74041) * C152089) *
              C152340 * C152159 * C1491 -
          ((C73659 * C8103 - C73660 * C8099 - C73659 * C8104 + C73652 * C8111 +
            C73657 * C1513 - C73658 * C1500 - C73657 * C1514 + C152540 * C1524 +
            C73655 * C1507 - C73656 * C1497 - C73655 * C1508 +
            C152539 * C1521) *
               C152089 +
           (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
            C73657 * C1511 - C73658 * C1499 - C73657 * C1512 + C152540 * C1523 +
            C73655 * C1509 - C73656 * C1498 - C73655 * C1510 +
            C152539 * C1522) *
               C152436) *
              C152340 * C152159 * C1492 +
          ((C73655 * C1511 - C73656 * C1499 - C73655 * C1512 + C152539 * C1523 +
            C73657 * C8105 - C73658 * C8100 - C73657 * C8106 + C152540 * C8112 +
            C73659 * C8107 - C73660 * C8101 - C73659 * C8108 + C73652 * C8113) *
               C152436 +
           (C73655 * C1513 - C73656 * C1500 - C73655 * C1514 + C152539 * C1524 +
            C73657 * C8103 - C73658 * C8099 - C73657 * C8104 + C152540 * C8111 +
            C73659 * C8109 - C73660 * C8102 - C73659 * C8110 + C73652 * C8114) *
               C152089) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152547 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152532 +
           ((C73655 * C635 - C73656 * C619 - C73655 * C636 + C152539 * C655 +
             C73657 * C1691 - C73658 * C1676 - C73657 * C1692 +
             C152540 * C1712 + C73659 * C1701 - C73660 * C1681 -
             C73659 * C1702 + C73652 * C1717) *
                C152436 +
            (C74341 + C74342 + C74343) * C152089) *
               C152340 * C152502) *
              C1401 +
          (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
             C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
             C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
             C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                C152436 +
            (C75106 + C75107 + C75108) * C152089) *
               C152340 * C152532 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152547 -
           ((C73659 * C8339 - C73660 * C8333 - C73659 * C8340 + C73652 * C8351 +
             C73657 * C1703 - C73658 * C1682 - C73657 * C1704 +
             C152540 * C1718 + C73655 * C1689 - C73656 * C1675 -
             C73655 * C1690 + C152539 * C1711) *
                C152089 +
            (C73659 * C8341 - C73660 * C8334 - C73659 * C8342 + C73652 * C8352 +
             C73657 * C1701 - C73658 * C1681 - C73657 * C1702 +
             C152540 * C1717 + C73655 * C1691 - C73656 * C1676 -
             C73655 * C1692 + C152539 * C1712) *
                C152436) *
               C152340 * C152502) *
              C1402 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152547 -
           ((C73659 * C8343 - C73660 * C8335 - C73659 * C8344 + C73652 * C8353 +
             C73657 * C2237 - C73658 * C2232 - C73657 * C2238 +
             C152540 * C2244 + C73655 * C1697 - C73656 * C1679 -
             C73655 * C1698 + C152539 * C1715) *
                C152089 +
            (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354 +
             C73657 * C2235 - C73658 * C2231 - C73657 * C2236 +
             C152540 * C2243 + C73655 * C1699 - C73656 * C1680 -
             C73655 * C1700 + C152539 * C1716) *
                C152436) *
               C152340 * C152532 +
           ((C73655 * C1701 - C73656 * C1681 - C73655 * C1702 +
             C152539 * C1717 + C73657 * C8341 - C73658 * C8334 -
             C73657 * C8342 + C152540 * C8352 + C73659 * C8347 -
             C73660 * C8337 - C73659 * C8348 + C73652 * C8355) *
                C152436 +
            (C73655 * C1703 - C73656 * C1682 - C73655 * C1704 +
             C152539 * C1718 + C73657 * C8339 - C73658 * C8333 -
             C73657 * C8340 + C152540 * C8351 + C73659 * C8349 -
             C73660 * C8338 - C73659 * C8350 + C73652 * C8356) *
                C152089) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152458 -
           ((C74338 + C74339 + C74340) * C152089 +
            (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73655 * C633 - C73656 * C618 - C73655 * C634 +
             C152539 * C654) *
                C152436) *
               C152340 * C152246) *
              C152141 * C851 +
          (((C74340 + C74339 + C74338) * C152436 +
            (C74344 + C74345 + C74346) * C152089) *
               C152340 * C152246 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152458) *
              C152141 * C852 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152458 -
           ((C74777 + C74778 + C74779) * C152089 +
            (C74346 + C74345 + C74344) * C152436) *
               C152340 * C152246) *
              C152141 * C853 +
          (((C74779 + C74778 + C74777) * C152436 +
            (C73655 * C643 - C73656 * C623 - C73655 * C644 + C152539 * C659 +
             C73657 * C1217 - C73658 * C1207 - C73657 * C1218 +
             C152540 * C1225 + C73659 * C2077 - C73660 * C2076 -
             C73659 * C2078 + C73652 * C2079) *
                C152089) *
               C152340 * C152246 -
           ((C73743 + C73744 + C73745) * C152089 +
            (C73742 + C73741 + C73740) * C152436) *
               C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152436 +
             (C73734 + C73735 + C73736) * C152089) *
                C152340 * C152458 -
            ((C74338 + C74339 + C74340) * C152089 +
             (C73659 * C1699 - C73660 * C1680 - C73659 * C1700 +
              C73652 * C1716 + C73657 * C1209 - C73658 * C1203 -
              C73657 * C1210 + C152540 * C1221 + C73655 * C633 - C73656 * C618 -
              C73655 * C634 + C152539 * C654) *
                 C152436) *
                C152340 * C152246) *
               C1401 +
           (((C73655 * C1209 - C73656 * C1203 - C73655 * C1210 +
              C152539 * C1221 + C73657 * C1699 - C73658 * C1680 -
              C73657 * C1700 + C152540 * C1716 + C73659 * C2235 -
              C73660 * C2231 - C73659 * C2236 + C73652 * C2243) *
                 C152436 +
             (C75106 + C75107 + C75108) * C152089) *
                C152340 * C152246 -
            ((C74036 + C74037 + C74038) * C152089 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152436) *
                C152340 * C152458) *
               C1402 +
           (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
              C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
              C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
              C73659 * C1512 + C73652 * C1523) *
                 C152436 +
             (C74039 + C74040 + C74041) * C152089) *
                C152340 * C152458 -
            ((C76193 + C76194 + C76195) * C152089 +
             (C73659 * C8345 - C73660 * C8336 - C73659 * C8346 +
              C73652 * C8354 + C73657 * C2235 - C73658 * C2231 -
              C73657 * C2236 + C152540 * C2243 + C73655 * C1699 -
              C73656 * C1680 - C73655 * C1700 + C152539 * C1716) *
                 C152436) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          ((((C74340 + C74339 + C74338) * C152436 +
             (C74344 + C74345 + C74346) * C152089) *
                C152340 * C152246 -
            ((C73737 + C73738 + C73739) * C152089 +
             (C73736 + C73735 + C73734) * C152436) *
                C152340 * C152458) *
               C1401 +
           (((C74038 + C74037 + C74036) * C152436 +
             (C74042 + C74043 + C74044) * C152089) *
                C152340 * C152458 -
            ((C75109 + C75110 + C75111) * C152089 +
             (C75108 + C75107 + C75106) * C152436) *
                C152340 * C152246) *
               C1402 +
           (((C76195 + C76194 + C76193) * C152436 +
             (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
              C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
              C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
              C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                 C152089) *
                C152340 * C152246 -
            ((C74045 + C74046 + C74047) * C152089 +
             (C74041 + C74040 + C74039) * C152436) *
                C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152436 +
           (C73734 + C73735 + C73736) * C152089) *
              C152340 * C152159 * C152141 * C129 -
          ((C73737 + C73738 + C73739) * C152089 +
           (C73736 + C73735 + C73734) * C152436) *
              C152340 * C152159 * C152141 * C130 +
          ((C73739 + C73738 + C73737) * C152436 +
           (C73740 + C73741 + C73742) * C152089) *
              C152340 * C152159 * C152141 * C131 -
          ((C73743 + C73744 + C73745) * C152089 +
           (C73742 + C73741 + C73740) * C152436) *
              C152340 * C152159 * C152141 * C132 +
          ((C73745 + C73744 + C73743) * C152436 +
           (C73655 * C154 - C73656 * C141 - C73655 * C155 + C152539 * C165 +
            C73657 * C394 - C73658 * C372 - C73657 * C395 + C152540 * C408 +
            C73659 * C396 - C73660 * C373 - C73659 * C397 + C73652 * C409) *
               C152089) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C152546 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C152530 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C152530 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C152546 -
           ((C74045 + C74046 + C74047) * C152089 +
            (C74041 + C74040 + C74039) * C152436) *
               C152340 * C152159 * C152499) *
              C360 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152159 * C152546 -
           ((C73659 * C1503 - C73660 * C1495 - C73659 * C1504 + C73652 * C1519 +
             C73657 * C388 - C73658 * C369 - C73657 * C389 + C152540 * C405 +
             C73655 * C374 - C73656 * C362 - C73655 * C375 + C152539 * C398) *
                C152089 +
            (C74044 + C74043 + C74042) * C152436) *
               C152340 * C152159 * C152530 +
           ((C74047 + C74046 + C74045) * C152436 +
            (C73655 * C388 - C73656 * C369 - C73655 * C389 + C152539 * C405 +
             C73657 * C1503 - C73658 * C1495 - C73657 * C1504 +
             C152540 * C1519 + C73659 * C1517 - C73660 * C1502 -
             C73659 * C1518 + C73652 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152436 +
            (C73734 + C73735 + C73736) * C152089) *
               C152340 * C152159 * C1401 -
           ((C74036 + C74037 + C74038) * C152089 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152436) *
               C152340 * C152159 * C1402 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152436 +
            (C74039 + C74040 + C74041) * C152089) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C74038 + C74037 + C74036) * C152436 +
            (C74042 + C74043 + C74044) * C152089) *
               C152340 * C152159 * C1402 -
           ((C73737 + C73738 + C73739) * C152089 +
            (C73736 + C73735 + C73734) * C152436) *
               C152340 * C152159 * C1401 -
           ((C74045 + C74046 + C74047) * C152089 +
            (C74041 + C74040 + C74039) * C152436) *
               C152340 * C152159 * C152499) *
              C152526 +
          (((C73739 + C73738 + C73737) * C152436 +
            (C73740 + C73741 + C73742) * C152089) *
               C152340 * C152159 * C1401 -
           ((C74562 + C74563 + C74564) * C152089 +
            (C74044 + C74043 + C74042) * C152436) *
               C152340 * C152159 * C1402 +
           ((C74047 + C74046 + C74045) * C152436 +
            (C73655 * C388 - C73656 * C369 - C73655 * C389 + C152539 * C405 +
             C73657 * C1503 - C73658 * C1495 - C73657 * C1504 +
             C152540 * C1519 + C73659 * C1517 - C73660 * C1502 -
             C73659 * C1518 + C73652 * C1526) *
                C152089) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152436 +
           (C73734 + C73735 + C73736) * C152089) *
              C152340 * C152159 * C1489 -
          ((C74036 + C74037 + C74038) * C152089 +
           (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
            C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
            C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
               C152436) *
              C152340 * C152159 * C1490 +
          ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
            C73657 * C1509 - C73658 * C1498 - C73657 * C1510 + C152540 * C1522 +
            C73659 * C1511 - C73660 * C1499 - C73659 * C1512 + C73652 * C1523) *
               C152436 +
           (C74039 + C74040 + C74041) * C152089) *
              C152340 * C152159 * C1491 -
          ((C73659 * C8103 - C73660 * C8099 - C73659 * C8104 + C73652 * C8111 +
            C73657 * C1513 - C73658 * C1500 - C73657 * C1514 + C152540 * C1524 +
            C73655 * C1507 - C73656 * C1497 - C73655 * C1508 +
            C152539 * C1521) *
               C152089 +
           (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
            C73657 * C1511 - C73658 * C1499 - C73657 * C1512 + C152540 * C1523 +
            C73655 * C1509 - C73656 * C1498 - C73655 * C1510 +
            C152539 * C1522) *
               C152436) *
              C152340 * C152159 * C1492 +
          ((C73655 * C1511 - C73656 * C1499 - C73655 * C1512 + C152539 * C1523 +
            C73657 * C8105 - C73658 * C8100 - C73657 * C8106 + C152540 * C8112 +
            C73659 * C8107 - C73660 * C8101 - C73659 * C8108 + C73652 * C8113) *
               C152436 +
           (C73655 * C1513 - C73656 * C1500 - C73655 * C1514 + C152539 * C1524 +
            C73657 * C8103 - C73658 * C8099 - C73657 * C8104 + C152540 * C8111 +
            C73659 * C8109 - C73660 * C8102 - C73659 * C8110 + C73652 * C8114) *
               C152089) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C152200 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C152207 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C152159 * C3799) *
              C152118 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C152207 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C152200 -
           ((C76193 + C76194 + C76195) * C152084 * C152404 +
            (C74041 + C74040 + C74039) * C152084 * C152475) *
               C152159 * C3799) *
              C152127 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152159 * C152200 -
           ((C75109 + C75110 + C75111) * C152084 * C152404 +
            (C74044 + C74043 + C74042) * C152084 * C152475) *
               C152159 * C152207 +
           ((C74047 + C74046 + C74045) * C152084 * C152475 +
            (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
             C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
             C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
             C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                C152084 * C152404) *
               C152159 * C3799) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C152458 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152246) *
               C152200 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152246 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C152458) *
               C152207 +
           (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
              C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
              C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
              C73659 * C1512 + C73652 * C1523) *
                 C152084 * C152475 +
             (C94861 + C94862 + C94863) * C152084 * C152404) *
                C152458 -
            ((C94864 + C94865 + C94866) * C152084 * C152404 +
             (C94863 + C94862 + C94861) * C152084 * C152475) *
                C152246) *
               C3799) *
              C3455 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152246 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C152458) *
               C152200 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C152458 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152246) *
               C152207 +
           (((C76195 + C76194 + C76193) * C152084 * C152475 +
             (C73655 * C1703 - C73656 * C1682 - C73655 * C1704 +
              C152539 * C1718 + C73657 * C8339 - C73658 * C8333 -
              C73657 * C8340 + C152540 * C8351 + C73659 * C8349 -
              C73660 * C8338 - C73659 * C8350 + C73652 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C76193 + C76194 + C76195) * C152084 * C152404 +
             (C74041 + C74040 + C74039) * C152084 * C152475) *
                C152458) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C152553 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C152549 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C152159 * C152535 -
           ((C95565 + C95564 + C95563) * C152084 * C152404 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152084 * C152475) *
               C152159 * C152509) *
              C3455 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C152549 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C152553 -
           ((C76193 + C76194 + C76195) * C152084 * C152404 +
            (C74041 + C74040 + C74039) * C152084 * C152475) *
               C152159 * C152535 +
           ((C75884 + C75883 + C75882) * C152084 * C152475 +
            (C73655 * C2237 - C73656 * C2232 - C73655 * C2238 +
             C152539 * C2244 + C73657 * C8343 - C73658 * C8335 -
             C73657 * C8344 + C152540 * C8353 + C73659 * C9089 -
             C73660 * C9086 - C73659 * C9090 + C73652 * C9092) *
                C152084 * C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C3315 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C152204) *
              C152552 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C152204 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C3315) *
              C152545 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152159 * C3315 -
           ((C75109 + C75110 + C75111) * C152084 * C152404 +
            (C74044 + C74043 + C74042) * C152084 * C152475) *
               C152159 * C152204) *
              C152528 +
          (((C74564 + C74563 + C74562) * C152084 * C152475 +
            (C73655 * C1215 - C73656 * C1206 - C73655 * C1216 +
             C152539 * C1224 + C73657 * C1693 - C73658 * C1677 -
             C73657 * C1694 + C152540 * C1713 + C73659 * C2241 -
             C73660 * C2234 - C73659 * C2242 + C73652 * C2246) *
                C152084 * C152404) *
               C152159 * C152204 -
           ((C74777 + C74778 + C74779) * C152084 * C152404 +
            (C73742 + C73741 + C73740) * C152084 * C152475) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C152547 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152532 +
            ((C93546 + C93545 + C93544) * C152084 * C152475 +
             (C96160 + C96161 + C96162) * C152084 * C152404) *
                C152502) *
               C3315 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152532 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C152547 -
            ((C96862 + C96863 + C96864) * C152084 * C152404 +
             (C94860 + C94859 + C94858) * C152084 * C152475) *
                C152502) *
               C152204) *
              C3455 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152532 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C152547 -
            ((C77471 + C77472 + C77473) * C152084 * C152404 +
             (C74343 + C74342 + C74341) * C152084 * C152475) *
                C152502) *
               C3315 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C152547 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152532 +
            ((C77258 + C77257 + C77256) * C152084 * C152475 +
             (C73655 * C3175 - C73656 * C3170 - C73655 * C3176 +
              C152539 * C3182 + C73657 * C9657 - C73658 * C9651 -
              C73657 * C9658 + C152540 * C9669 + C73659 * C10407 -
              C73660 * C10404 - C73659 * C10408 + C73652 * C10410) *
                 C152084 * C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C152458 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152246) *
               C3315 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152246 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C152458) *
               C152204) *
              C152118 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152246 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C152458) *
               C3315 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C152458 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152246) *
               C152204) *
              C152127 +
          ((((C73739 + C73738 + C73737) * C152084 * C152475 +
             (C74344 + C74345 + C74346) * C152084 * C152404) *
                C152458 -
            ((C74347 + C74348 + C74349) * C152084 * C152404 +
             (C74346 + C74345 + C74344) * C152084 * C152475) *
                C152246) *
               C3315 +
           (((C75111 + C75110 + C75109) * C152084 * C152475 +
             (C73655 * C1687 - C73656 * C1674 - C73655 * C1688 +
              C152539 * C1710 + C73657 * C1705 - C73658 * C1683 -
              C73657 * C1706 + C152540 * C1719 + C73659 * C9966 -
              C73660 * C9965 - C73659 * C9967 + C73652 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C75109 + C75110 + C75111) * C152084 * C152404 +
             (C74044 + C74043 + C74042) * C152084 * C152475) *
                C152458) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C3315 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C152204) *
              C152552 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C152204 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C3315) *
              C152545 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152159 * C3315 -
           ((C75109 + C75110 + C75111) * C152084 * C152404 +
            (C74044 + C74043 + C74042) * C152084 * C152475) *
               C152159 * C152204) *
              C152528 +
          (((C74564 + C74563 + C74562) * C152084 * C152475 +
            (C73655 * C1215 - C73656 * C1206 - C73655 * C1216 +
             C152539 * C1224 + C73657 * C1693 - C73658 * C1677 -
             C73657 * C1694 + C152540 * C1713 + C73659 * C2241 -
             C73660 * C2234 - C73659 * C2242 + C73652 * C2246) *
                C152084 * C152404) *
               C152159 * C152204 -
           ((C74777 + C74778 + C74779) * C152084 * C152404 +
            (C73742 + C73741 + C73740) * C152084 * C152475) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C152553 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C152549 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C152159 * C152535 -
           ((C95565 + C95564 + C95563) * C152084 * C152404 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152084 * C152475) *
               C152159 * C152509) *
              C3455 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C152549 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C152553 -
           ((C76193 + C76194 + C76195) * C152084 * C152404 +
            (C74041 + C74040 + C74039) * C152084 * C152475) *
               C152159 * C152535 +
           ((C75884 + C75883 + C75882) * C152084 * C152475 +
            (C73655 * C2237 - C73656 * C2232 - C73655 * C2238 +
             C152539 * C2244 + C73657 * C8343 - C73658 * C8335 -
             C73657 * C8344 + C152540 * C8353 + C73659 * C9089 -
             C73660 * C9086 - C73659 * C9090 + C73652 * C9092) *
                C152084 * C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C4321 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152246) *
               C152200 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152246 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C4321) *
               C152207 +
           (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
              C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
              C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
              C73659 * C1512 + C73652 * C1523) *
                 C152084 * C152475 +
             (C94861 + C94862 + C94863) * C152084 * C152404) *
                C4321 -
            ((C94864 + C94865 + C94866) * C152084 * C152404 +
             (C94863 + C94862 + C94861) * C152084 * C152475) *
                C152246) *
               C3799) *
              C152443 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152246 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C4321) *
               C152200 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C4321 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152246) *
               C152207 +
           (((C76195 + C76194 + C76193) * C152084 * C152475 +
             (C73655 * C1703 - C73656 * C1682 - C73655 * C1704 +
              C152539 * C1718 + C73657 * C8339 - C73658 * C8333 -
              C73657 * C8340 + C152540 * C8351 + C73659 * C8349 -
              C73660 * C8338 - C73659 * C8350 + C73652 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C76193 + C76194 + C76195) * C152084 * C152404 +
             (C74041 + C74040 + C74039) * C152084 * C152475) *
                C4321) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152242 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152249 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C96160 + C96161 + C96162) * C152084 * C152404) *
               C4993) *
              C152200 +
          (((C94243 + C94244 + C94245) * C152084 * C152475 +
            (C94858 + C94859 + C94860) * C152084 * C152404) *
               C152249 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152242 -
           ((C96862 + C96863 + C96864) * C152084 * C152404 +
            (C94860 + C94859 + C94858) * C152084 * C152475) *
               C4993) *
              C152207 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C152242 -
           ((C94864 + C94865 + C94866) * C152084 * C152404 +
            (C94863 + C94862 + C94861) * C152084 * C152475) *
               C152249 +
           ((C94866 + C94865 + C94864) * C152084 * C152475 +
            (C73655 * C9659 - C73656 * C9652 - C73655 * C9660 +
             C152539 * C9670 + C73657 * C10405 - C73658 * C10403 -
             C73657 * C10406 + C152540 * C10409 + C73659 * C62160 -
             C73660 * C62159 - C73659 * C62161 + C73652 * C62162) *
                C152084 * C152404) *
               C4993) *
              C3799) *
         C152113) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C4321 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152246) *
              C152553 +
          (((C94243 + C94244 + C94245) * C152084 * C152475 +
            (C94858 + C94859 + C94860) * C152084 * C152404) *
               C152246 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C4321) *
              C152549 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C4321 -
           ((C94864 + C94865 + C94866) * C152084 * C152404 +
            (C94863 + C94862 + C94861) * C152084 * C152475) *
               C152246) *
              C152535 +
          (((C95563 + C95564 + C95565) * C152084 * C152475 +
            (C73655 * C8341 - C73656 * C8334 - C73655 * C8342 +
             C152539 * C8352 + C73657 * C8347 - C73658 * C8337 -
             C73657 * C8348 + C152540 * C8355 + C73659 * C60866 -
             C73660 * C60865 - C73659 * C60867 + C73652 * C60868) *
                C152084 * C152404) *
               C152246 -
           ((C95565 + C95564 + C95563) * C152084 * C152404 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152084 * C152475) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C4321 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152246) *
               C3315 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152246 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C4321) *
               C152204) *
              C152543 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152246 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C4321) *
               C3315 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C4321 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152246) *
               C152204) *
              C152526 +
          ((((C73739 + C73738 + C73737) * C152084 * C152475 +
             (C74344 + C74345 + C74346) * C152084 * C152404) *
                C4321 -
            ((C74347 + C74348 + C74349) * C152084 * C152404 +
             (C74346 + C74345 + C74344) * C152084 * C152475) *
                C152246) *
               C3315 +
           (((C75111 + C75110 + C75109) * C152084 * C152475 +
             (C73655 * C1687 - C73656 * C1674 - C73655 * C1688 +
              C152539 * C1710 + C73657 * C1705 - C73658 * C1683 -
              C73657 * C1706 + C152540 * C1719 + C73659 * C9966 -
              C73660 * C9965 - C73659 * C9967 + C73652 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C75109 + C75110 + C75111) * C152084 * C152404 +
             (C74044 + C74043 + C74042) * C152084 * C152475) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152554 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152551 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C96160 + C96161 + C96162) * C152084 * C152404) *
               C152538 -
           ((C96163 + C96164 + C96165) * C152084 * C152404 +
            (C96162 + C96161 + C96160) * C152084 * C152475) *
               C152515) *
              C3315 +
          (((C94243 + C94244 + C94245) * C152084 * C152475 +
            (C94858 + C94859 + C94860) * C152084 * C152404) *
               C152551 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152554 -
           ((C96862 + C96863 + C96864) * C152084 * C152404 +
            (C94860 + C94859 + C94858) * C152084 * C152475) *
               C152538 +
           ((C96864 + C96863 + C96862) * C152084 * C152475 +
            (C73655 * C9661 - C73656 * C9653 - C73655 * C9662 +
             C152539 * C9671 + C73657 * C9663 - C73658 * C9654 -
             C73657 * C9664 + C152540 * C9672 + C73659 * C61702 -
             C73660 * C61701 - C73659 * C61703 + C73652 * C61704) *
                C152084 * C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C152242 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152249 +
            ((C93546 + C93545 + C93544) * C152084 * C152475 +
             (C96160 + C96161 + C96162) * C152084 * C152404) *
                C4993) *
               C3315 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152249 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C152242 -
            ((C96862 + C96863 + C96864) * C152084 * C152404 +
             (C94860 + C94859 + C94858) * C152084 * C152475) *
                C4993) *
               C152204) *
              C152443 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152249 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C152242 -
            ((C77471 + C77472 + C77473) * C152084 * C152404 +
             (C74343 + C74342 + C74341) * C152084 * C152475) *
                C4993) *
               C3315 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C152242 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152249 +
            ((C77258 + C77257 + C77256) * C152084 * C152475 +
             (C73655 * C3175 - C73656 * C3170 - C73655 * C3176 +
              C152539 * C3182 + C73657 * C9657 - C73658 * C9651 -
              C73657 * C9658 + C152540 * C9669 + C73659 * C10407 -
              C73660 * C10404 - C73659 * C10408 + C73652 * C10410) *
                 C152084 * C152404) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C4321 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152246) *
               C3315 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152246 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C4321) *
               C152204) *
              C152543 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152246 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C4321) *
               C3315 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C4321 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152246) *
               C152204) *
              C152526 +
          ((((C73739 + C73738 + C73737) * C152084 * C152475 +
             (C74344 + C74345 + C74346) * C152084 * C152404) *
                C4321 -
            ((C74347 + C74348 + C74349) * C152084 * C152404 +
             (C74346 + C74345 + C74344) * C152084 * C152475) *
                C152246) *
               C3315 +
           (((C75111 + C75110 + C75109) * C152084 * C152475 +
             (C73655 * C1687 - C73656 * C1674 - C73655 * C1688 +
              C152539 * C1710 + C73657 * C1705 - C73658 * C1683 -
              C73657 * C1706 + C152540 * C1719 + C73659 * C9966 -
              C73660 * C9965 - C73659 * C9967 + C73652 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C75109 + C75110 + C75111) * C152084 * C152404 +
             (C74044 + C74043 + C74042) * C152084 * C152475) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C4321 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152246) *
              C152553 +
          (((C94243 + C94244 + C94245) * C152084 * C152475 +
            (C94858 + C94859 + C94860) * C152084 * C152404) *
               C152246 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C4321) *
              C152549 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C4321 -
           ((C94864 + C94865 + C94866) * C152084 * C152404 +
            (C94863 + C94862 + C94861) * C152084 * C152475) *
               C152246) *
              C152535 +
          (((C95563 + C95564 + C95565) * C152084 * C152475 +
            (C73655 * C8341 - C73656 * C8334 - C73655 * C8342 +
             C152539 * C8352 + C73657 * C8347 - C73658 * C8337 -
             C73657 * C8348 + C152540 * C8355 + C73659 * C60866 -
             C73660 * C60865 - C73659 * C60867 + C73652 * C60868) *
                C152084 * C152404) *
               C152246 -
           ((C95565 + C95564 + C95563) * C152084 * C152404 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152084 * C152475) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C1851 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C1852 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C152159 * C1853 -
           ((C73659 * C9087 - C73660 * C9085 - C73659 * C9088 + C73652 * C9091 +
             C73657 * C8345 - C73658 * C8336 - C73657 * C8346 +
             C152540 * C8354 + C73655 * C2235 - C73656 * C2231 -
             C73655 * C2236 + C152539 * C2243) *
                C152084 * C152404 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152084 * C152475) *
               C152159 * C152509) *
              C152443 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C1852 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C1851 -
           ((C76193 + C76194 + C76195) * C152084 * C152404 +
            (C74041 + C74040 + C74039) * C152084 * C152475) *
               C152159 * C1853 +
           ((C75884 + C75883 + C75882) * C152084 * C152475 +
            (C73655 * C2237 - C73656 * C2232 - C73655 * C2238 +
             C152539 * C2244 + C73657 * C8343 - C73658 * C8335 -
             C73657 * C8344 + C152540 * C8353 + C73659 * C9089 -
             C73660 * C9086 - C73659 * C9090 + C73652 * C9092) *
                C152084 * C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C152457 -
           ((C73659 * C2235 - C73660 * C2231 - C73659 * C2236 + C73652 * C2243 +
             C73657 * C1699 - C73658 * C1680 - C73657 * C1700 +
             C152540 * C1716 + C73655 * C1209 - C73656 * C1203 -
             C73655 * C1210 + C152539 * C1221) *
                C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C152204) *
              C851 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C152204 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C152457) *
              C852 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152159 * C152457 -
           ((C75109 + C75110 + C75111) * C152084 * C152404 +
            (C74044 + C74043 + C74042) * C152084 * C152475) *
               C152159 * C152204) *
              C853 +
          (((C74564 + C74563 + C74562) * C152084 * C152475 +
            (C73655 * C1215 - C73656 * C1206 - C73655 * C1216 +
             C152539 * C1224 + C73657 * C1693 - C73658 * C1677 -
             C73657 * C1694 + C152540 * C1713 + C73659 * C2241 -
             C73660 * C2234 - C73659 * C2242 + C73652 * C2246) *
                C152084 * C152404) *
               C152159 * C152204 -
           ((C74777 + C74778 + C74779) * C152084 * C152404 +
            (C73742 + C73741 + C73740) * C152084 * C152475) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C2393 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C2394 +
            ((C93546 + C93545 + C93544) * C152084 * C152475 +
             (C96160 + C96161 + C96162) * C152084 * C152404) *
                C152502) *
               C152457 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C2394 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C2393 -
            ((C73659 * C10405 - C73660 * C10403 - C73659 * C10406 +
              C73652 * C10409 + C73657 * C9659 - C73658 * C9652 -
              C73657 * C9660 + C152540 * C9670 + C73655 * C3173 -
              C73656 * C3169 - C73655 * C3174 + C152539 * C3181) *
                 C152084 * C152404 +
             (C94860 + C94859 + C94858) * C152084 * C152475) *
                C152502) *
               C152204) *
              C152443 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C2394 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C2393 -
            ((C77471 + C77472 + C77473) * C152084 * C152404 +
             (C74343 + C74342 + C74341) * C152084 * C152475) *
                C152502) *
               C152457 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C2393 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C2394 +
            ((C77258 + C77257 + C77256) * C152084 * C152475 +
             (C73655 * C3175 - C73656 * C3170 - C73655 * C3176 +
              C152539 * C3182 + C73657 * C9657 - C73658 * C9651 -
              C73657 * C9658 + C152540 * C9669 + C73659 * C10407 -
              C73660 * C10404 - C73659 * C10408 + C73652 * C10410) *
                 C152084 * C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152458 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152246) *
              C1851 +
          (((C94243 + C94244 + C94245) * C152084 * C152475 +
            (C94858 + C94859 + C94860) * C152084 * C152404) *
               C152246 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152458) *
              C1852 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C152458 -
           ((C94864 + C94865 + C94866) * C152084 * C152404 +
            (C94863 + C94862 + C94861) * C152084 * C152475) *
               C152246) *
              C1853 +
          (((C95563 + C95564 + C95565) * C152084 * C152475 +
            (C73655 * C8341 - C73656 * C8334 - C73655 * C8342 +
             C152539 * C8352 + C73657 * C8347 - C73658 * C8337 -
             C73657 * C8348 + C152540 * C8355 + C73659 * C60866 -
             C73660 * C60865 - C73659 * C60867 + C73652 * C60868) *
                C152084 * C152404) *
               C152246 -
           ((C95565 + C95564 + C95563) * C152084 * C152404 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152084 * C152475) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C152458 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152246) *
               C152457 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C73655 * C1691 - C73656 * C1676 - C73655 * C1692 +
              C152539 * C1712 + C73657 * C1701 - C73658 * C1681 -
              C73657 * C1702 + C152540 * C1717 + C73659 * C8341 -
              C73660 * C8334 - C73659 * C8342 + C73652 * C8352) *
                 C152084 * C152404) *
                C152246 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C152458) *
               C152204) *
              C359 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152246 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C152458) *
               C152457 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C152458 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152246) *
               C152204) *
              C360 +
          ((((C73739 + C73738 + C73737) * C152084 * C152475 +
             (C74344 + C74345 + C74346) * C152084 * C152404) *
                C152458 -
            ((C74347 + C74348 + C74349) * C152084 * C152404 +
             (C74346 + C74345 + C74344) * C152084 * C152475) *
                C152246) *
               C152457 +
           (((C75111 + C75110 + C75109) * C152084 * C152475 +
             (C73655 * C1687 - C73656 * C1674 - C73655 * C1688 +
              C152539 * C1710 + C73657 * C1705 - C73658 * C1683 -
              C73657 * C1706 + C152540 * C1719 + C73659 * C9966 -
              C73660 * C9965 - C73659 * C9967 + C73652 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C75109 + C75110 + C75111) * C152084 * C152404 +
             (C74044 + C74043 + C74042) * C152084 * C152475) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C3010 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C3011 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C96160 + C96161 + C96162) * C152084 * C152404) *
               C3012 -
           ((C96163 + C96164 + C96165) * C152084 * C152404 +
            (C96162 + C96161 + C96160) * C152084 * C152475) *
               C152515) *
              C152457 +
          (((C94243 + C94244 + C94245) * C152084 * C152475 +
            (C94858 + C94859 + C94860) * C152084 * C152404) *
               C3011 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C3010 -
           ((C96862 + C96863 + C96864) * C152084 * C152404 +
            (C94860 + C94859 + C94858) * C152084 * C152475) *
               C3012 +
           ((C96864 + C96863 + C96862) * C152084 * C152475 +
            (C73655 * C9661 - C73656 * C9653 - C73655 * C9662 +
             C152539 * C9671 + C73657 * C9663 - C73658 * C9654 -
             C73657 * C9664 + C152540 * C9672 + C73659 * C61702 -
             C73660 * C61701 - C73659 * C61703 + C73652 * C61704) *
                C152084 * C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
                C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
                C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                   C152084 * C152475 +
               (C73655 * C633 - C73656 * C618 - C73655 * C634 + C152539 * C654 +
                C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
                C152540 * C1221 + C73659 * C1699 - C73660 * C1680 -
                C73659 * C1700 + C73652 * C1716) *
                   C152084 * C152404) *
                  C152159 * C152141 * C129 -
              ((C74338 + C74339 + C74340) * C152084 * C152404 +
               (C73736 + C73735 + C73734) * C152084 * C152475) *
                  C152159 * C152141 * C130 +
              ((C73739 + C73738 + C73737) * C152084 * C152475 +
               (C74344 + C74345 + C74346) * C152084 * C152404) *
                  C152159 * C152141 * C131 -
              ((C74777 + C74778 + C74779) * C152084 * C152404 +
               (C73742 + C73741 + C73740) * C152084 * C152475) *
                  C152159 * C152141 * C132 +
              ((C73745 + C73744 + C73743) * C152084 * C152475 +
               (C73655 * C643 - C73656 * C623 - C73655 * C644 + C152539 * C659 +
                C73657 * C1217 - C73658 * C1207 - C73657 * C1218 +
                C152540 * C1225 + C73659 * C2077 - C73660 * C2076 -
                C73659 * C2078 + C73652 * C2079) *
                   C152084 * C152404) *
                  C152159 * C152141 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C73655 * C144 - C73656 * C136 - C73655 * C145 +
                 C152539 * C160 + C73657 * C380 - C73658 * C365 -
                 C73657 * C381 + C152540 * C401 + C73659 * C382 -
                 C73660 * C366 - C73659 * C383 + C73652 * C402) *
                    C152084 * C152475 +
                (C73655 * C633 - C73656 * C618 - C73655 * C634 +
                 C152539 * C654 + C73657 * C1209 - C73658 * C1203 -
                 C73657 * C1210 + C152540 * C1221 + C73659 * C1699 -
                 C73660 * C1680 - C73659 * C1700 + C73652 * C1716) *
                    C152084 * C152404) *
                   C152159 * C152546 -
               ((C73659 * C2235 - C73660 * C2231 - C73659 * C2236 +
                 C73652 * C2243 + C73657 * C1699 - C73658 * C1680 -
                 C73657 * C1700 + C152540 * C1716 + C73655 * C1209 -
                 C73656 * C1203 - C73655 * C1210 + C152539 * C1221) *
                    C152084 * C152404 +
                (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
                 C73652 * C1522 + C73657 * C382 - C73658 * C366 -
                 C73657 * C383 + C152540 * C402 + C73655 * C380 -
                 C73656 * C365 - C73655 * C381 + C152539 * C401) *
                    C152084 * C152475) *
                   C152159 * C152530 +
               ((C73655 * C382 - C73656 * C366 - C73655 * C383 +
                 C152539 * C402 + C73657 * C1509 - C73658 * C1498 -
                 C73657 * C1510 + C152540 * C1522 + C73659 * C1511 -
                 C73660 * C1499 - C73659 * C1512 + C73652 * C1523) *
                    C152084 * C152475 +
                (C73655 * C1699 - C73656 * C1680 - C73655 * C1700 +
                 C152539 * C1716 + C73657 * C2235 - C73658 * C2231 -
                 C73657 * C2236 + C152540 * C2243 + C73659 * C8345 -
                 C73660 * C8336 - C73659 * C8346 + C73652 * C8354) *
                    C152084 * C152404) *
                   C152159 * C152499) *
                  C359 +
              (((C74038 + C74037 + C74036) * C152084 * C152475 +
                (C75106 + C75107 + C75108) * C152084 * C152404) *
                   C152159 * C152530 -
               ((C74338 + C74339 + C74340) * C152084 * C152404 +
                (C73736 + C73735 + C73734) * C152084 * C152475) *
                   C152159 * C152546 -
               ((C76193 + C76194 + C76195) * C152084 * C152404 +
                (C74041 + C74040 + C74039) * C152084 * C152475) *
                   C152159 * C152499) *
                  C360 +
              (((C73739 + C73738 + C73737) * C152084 * C152475 +
                (C74344 + C74345 + C74346) * C152084 * C152404) *
                   C152159 * C152546 -
               ((C75109 + C75110 + C75111) * C152084 * C152404 +
                (C74044 + C74043 + C74042) * C152084 * C152475) *
                   C152159 * C152530 +
               ((C74047 + C74046 + C74045) * C152084 * C152475 +
                (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
                 C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
                 C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
                 C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                    C152084 * C152404) *
                   C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152547 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152532 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C73655 * C2643 - C73656 * C2632 - C73655 * C2644 +
             C152539 * C2656 + C73657 * C3173 - C73658 * C3169 -
             C73657 * C3174 + C152540 * C3181 + C73659 * C9659 -
             C73660 * C9652 - C73659 * C9660 + C73652 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152141 * C359 +
          (((C74340 + C74339 + C74338) * C152084 * C152475 +
            (C74341 + C74342 + C74343) * C152084 * C152404) *
               C152532 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152547 -
           ((C77471 + C77472 + C77473) * C152084 * C152404 +
            (C74343 + C74342 + C74341) * C152084 * C152475) *
               C152502) *
              C152141 * C360 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152547 -
           ((C74347 + C74348 + C74349) * C152084 * C152404 +
            (C74346 + C74345 + C74344) * C152084 * C152475) *
               C152532 +
           ((C74349 + C74348 + C74347) * C152084 * C152475 +
            (C73655 * C2639 - C73656 * C2630 - C73655 * C2640 +
             C152539 * C2654 + C73657 * C3177 - C73658 * C3171 -
             C73657 * C3178 + C152540 * C3183 + C73659 * C10185 -
             C73660 * C10184 - C73659 * C10186 + C73652 * C10187) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C1401 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C1402 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C73655 * C1699 - C73656 * C1680 - C73655 * C1700 +
             C152539 * C1716 + C73657 * C2235 - C73658 * C2231 -
             C73657 * C2236 + C152540 * C2243 + C73659 * C8345 -
             C73660 * C8336 - C73659 * C8346 + C73652 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C1402 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C1401 -
           ((C76193 + C76194 + C76195) * C152084 * C152404 +
            (C74041 + C74040 + C74039) * C152084 * C152475) *
               C152159 * C152499) *
              C152526 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152159 * C1401 -
           ((C75109 + C75110 + C75111) * C152084 * C152404 +
            (C74044 + C74043 + C74042) * C152084 * C152475) *
               C152159 * C1402 +
           ((C74047 + C74046 + C74045) * C152084 * C152475 +
            (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
             C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
             C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
             C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152084 * C152475 +
           (C93541 + C93542 + C93543) * C152084 * C152404) *
              C152159 * C1489 -
          ((C94245 + C94244 + C94243) * C152084 * C152404 +
           (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
            C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
            C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
               C152084 * C152475) *
              C152159 * C1490 +
          ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
            C73657 * C1509 - C73658 * C1498 - C73657 * C1510 + C152540 * C1522 +
            C73659 * C1511 - C73660 * C1499 - C73659 * C1512 + C73652 * C1523) *
               C152084 * C152475 +
           (C73655 * C1699 - C73656 * C1680 - C73655 * C1700 + C152539 * C1716 +
            C73657 * C2235 - C73658 * C2231 - C73657 * C2236 + C152540 * C2243 +
            C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354) *
               C152084 * C152404) *
              C152159 * C1491 -
          ((C73659 * C9087 - C73660 * C9085 - C73659 * C9088 + C73652 * C9091 +
            C73657 * C8345 - C73658 * C8336 - C73657 * C8346 + C152540 * C8354 +
            C73655 * C2235 - C73656 * C2231 - C73655 * C2236 +
            C152539 * C2243) *
               C152084 * C152404 +
           (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
            C73657 * C1511 - C73658 * C1499 - C73657 * C1512 + C152540 * C1523 +
            C73655 * C1509 - C73656 * C1498 - C73655 * C1510 +
            C152539 * C1522) *
               C152084 * C152475) *
              C152159 * C1492 +
          ((C73655 * C1511 - C73656 * C1499 - C73655 * C1512 + C152539 * C1523 +
            C73657 * C8105 - C73658 * C8100 - C73657 * C8106 + C152540 * C8112 +
            C73659 * C8107 - C73660 * C8101 - C73659 * C8108 + C73652 * C8113) *
               C152084 * C152475 +
           (C73655 * C8345 - C73656 * C8336 - C73655 * C8346 + C152539 * C8354 +
            C73657 * C9087 - C73658 * C9085 - C73657 * C9088 + C152540 * C9091 +
            C73659 * C61324 - C73660 * C61323 - C73659 * C61325 +
            C73652 * C61326) *
               C152084 * C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152547 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152532 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C73655 * C2643 - C73656 * C2632 - C73655 * C2644 +
             C152539 * C2656 + C73657 * C3173 - C73658 * C3169 -
             C73657 * C3174 + C152540 * C3181 + C73659 * C9659 -
             C73660 * C9652 - C73659 * C9660 + C73652 * C9670) *
                C152084 * C152404) *
               C152502) *
              C1401 +
          (((C94243 + C94244 + C94245) * C152084 * C152475 +
            (C94858 + C94859 + C94860) * C152084 * C152404) *
               C152532 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152547 -
           ((C73659 * C10405 - C73660 * C10403 - C73659 * C10406 +
             C73652 * C10409 + C73657 * C9659 - C73658 * C9652 -
             C73657 * C9660 + C152540 * C9670 + C73655 * C3173 -
             C73656 * C3169 - C73655 * C3174 + C152539 * C3181) *
                C152084 * C152404 +
            (C94860 + C94859 + C94858) * C152084 * C152475) *
               C152502) *
              C1402 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C152547 -
           ((C94864 + C94865 + C94866) * C152084 * C152404 +
            (C94863 + C94862 + C94861) * C152084 * C152475) *
               C152532 +
           ((C94866 + C94865 + C94864) * C152084 * C152475 +
            (C73655 * C9659 - C73656 * C9652 - C73655 * C9660 +
             C152539 * C9670 + C73657 * C10405 - C73658 * C10403 -
             C73657 * C10406 + C152540 * C10409 + C73659 * C62160 -
             C73660 * C62159 - C73659 * C62161 + C73652 * C62162) *
                C152084 * C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C2393 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C2394 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C73655 * C2643 - C73656 * C2632 - C73655 * C2644 +
             C152539 * C2656 + C73657 * C3173 - C73658 * C3169 -
             C73657 * C3174 + C152540 * C3181 + C73659 * C9659 -
             C73660 * C9652 - C73659 * C9660 + C73652 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C74340 + C74339 + C74338) * C152084 * C152475 +
            (C74341 + C74342 + C74343) * C152084 * C152404) *
               C2394 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C2393 -
           ((C77471 + C77472 + C77473) * C152084 * C152404 +
            (C74343 + C74342 + C74341) * C152084 * C152475) *
               C152502) *
              C152141 * C152526 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C2393 -
           ((C74347 + C74348 + C74349) * C152084 * C152404 +
            (C74346 + C74345 + C74344) * C152084 * C152475) *
               C2394 +
           ((C74349 + C74348 + C74347) * C152084 * C152475 +
            (C73655 * C2639 - C73656 * C2630 - C73655 * C2640 +
             C152539 * C2654 + C73657 * C3177 - C73658 * C3171 -
             C73657 * C3178 + C152540 * C3183 + C73659 * C10185 -
             C73660 * C10184 - C73659 * C10186 + C73652 * C10187) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C2393 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C2394 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C73655 * C2643 - C73656 * C2632 - C73655 * C2644 +
             C152539 * C2656 + C73657 * C3173 - C73658 * C3169 -
             C73657 * C3174 + C152540 * C3181 + C73659 * C9659 -
             C73660 * C9652 - C73659 * C9660 + C73652 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152546 +
          (((C94243 + C94244 + C94245) * C152084 * C152475 +
            (C94858 + C94859 + C94860) * C152084 * C152404) *
               C2394 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C2393 -
           ((C73659 * C10405 - C73660 * C10403 - C73659 * C10406 +
             C73652 * C10409 + C73657 * C9659 - C73658 * C9652 -
             C73657 * C9660 + C152540 * C9670 + C73655 * C3173 -
             C73656 * C3169 - C73655 * C3174 + C152539 * C3181) *
                C152084 * C152404 +
            (C94860 + C94859 + C94858) * C152084 * C152475) *
               C152502) *
              C152530 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C2393 -
           ((C94864 + C94865 + C94866) * C152084 * C152404 +
            (C94863 + C94862 + C94861) * C152084 * C152475) *
               C2394 +
           ((C94866 + C94865 + C94864) * C152084 * C152475 +
            (C73655 * C9659 - C73656 * C9652 - C73655 * C9660 +
             C152539 * C9670 + C73657 * C10405 - C73658 * C10403 -
             C73657 * C10406 + C152540 * C10409 + C73659 * C62160 -
             C73660 * C62159 - C73659 * C62161 + C73652 * C62162) *
                C152084 * C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152084 * C152475 +
           (C93541 + C93542 + C93543) * C152084 * C152404) *
              C2624 -
          ((C93544 + C93545 + C93546) * C152084 * C152404 +
           (C93543 + C93542 + C93541) * C152084 * C152475) *
              C2625 +
          ((C93546 + C93545 + C93544) * C152084 * C152475 +
           (C96160 + C96161 + C96162) * C152084 * C152404) *
              C2626 -
          ((C96163 + C96164 + C96165) * C152084 * C152404 +
           (C96162 + C96161 + C96160) * C152084 * C152475) *
              C2627 +
          ((C96165 + C96164 + C96163) * C152084 * C152475 +
           (C73655 * C18073 - C73656 * C18068 - C73655 * C18074 +
            C152539 * C18080 + C73657 * C18811 - C73658 * C18809 -
            C73657 * C18812 + C152540 * C18815 + C73659 * C69081 -
            C73660 * C69080 - C73659 * C69082 + C73652 * C69083) *
               C152084 * C152404) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C152458 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152246) *
               C1401 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152246 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C152458) *
               C1402 +
           (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
              C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
              C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
              C73659 * C1512 + C73652 * C1523) *
                 C152084 * C152475 +
             (C94861 + C94862 + C94863) * C152084 * C152404) *
                C152458 -
            ((C94864 + C94865 + C94866) * C152084 * C152404 +
             (C94863 + C94862 + C94861) * C152084 * C152475) *
                C152246) *
               C152499) *
              C152443 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152246 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C152458) *
               C1401 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C152458 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152246) *
               C1402 +
           (((C76195 + C76194 + C76193) * C152084 * C152475 +
             (C73655 * C1703 - C73656 * C1682 - C73655 * C1704 +
              C152539 * C1718 + C73657 * C8339 - C73658 * C8333 -
              C73657 * C8340 + C152540 * C8351 + C73659 * C8349 -
              C73660 * C8338 - C73659 * C8350 + C73652 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C76193 + C76194 + C76195) * C152084 * C152404 +
             (C74041 + C74040 + C74039) * C152084 * C152475) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152458 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152246) *
              C152141 * C851 +
          (((C74340 + C74339 + C74338) * C152084 * C152475 +
            (C74341 + C74342 + C74343) * C152084 * C152404) *
               C152246 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152458) *
              C152141 * C852 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152458 -
           ((C74347 + C74348 + C74349) * C152084 * C152404 +
            (C74346 + C74345 + C74344) * C152084 * C152475) *
               C152246) *
              C152141 * C853 +
          (((C74779 + C74778 + C74777) * C152084 * C152475 +
            (C73655 * C641 - C73656 * C622 - C73655 * C642 + C152539 * C658 +
             C73657 * C1685 - C73658 * C1673 - C73657 * C1686 +
             C152540 * C1709 + C73659 * C1707 - C73660 * C1684 -
             C73659 * C1708 + C73652 * C1720) *
                C152084 * C152404) *
               C152246 -
           ((C74777 + C74778 + C74779) * C152084 * C152404 +
            (C73742 + C73741 + C73740) * C152084 * C152475) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C3010 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C3011 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C96160 + C96161 + C96162) * C152084 * C152404) *
               C3012 -
           ((C96163 + C96164 + C96165) * C152084 * C152404 +
            (C96162 + C96161 + C96160) * C152084 * C152475) *
               C152515) *
              C152141 * C152443 +
          (((C74340 + C74339 + C74338) * C152084 * C152475 +
            (C74341 + C74342 + C74343) * C152084 * C152404) *
               C3011 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C3010 -
           ((C77471 + C77472 + C77473) * C152084 * C152404 +
            (C74343 + C74342 + C74341) * C152084 * C152475) *
               C3012 +
           ((C77473 + C77472 + C77471) * C152084 * C152475 +
            (C73655 * C2647 - C73656 * C2634 - C73655 * C2648 +
             C152539 * C2658 + C73657 * C9665 - C73658 * C9655 -
             C73657 * C9666 + C152540 * C9673 + C73659 * C9667 -
             C73660 * C9656 - C73659 * C9668 + C73652 * C9674) *
                C152084 * C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C73655 * C633 - C73656 * C618 - C73655 * C634 + C152539 * C654 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73659 * C1699 - C73660 * C1680 -
             C73659 * C1700 + C73652 * C1716) *
                C152084 * C152404) *
               C152159 * C152546 -
           ((C73659 * C2235 - C73660 * C2231 - C73659 * C2236 + C73652 * C2243 +
             C73657 * C1699 - C73658 * C1680 - C73657 * C1700 +
             C152540 * C1716 + C73655 * C1209 - C73656 * C1203 -
             C73655 * C1210 + C152539 * C1221) *
                C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C152530 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C73655 * C1699 - C73656 * C1680 - C73655 * C1700 +
             C152539 * C1716 + C73657 * C2235 - C73658 * C2231 -
             C73657 * C2236 + C152540 * C2243 + C73659 * C8345 -
             C73660 * C8336 - C73659 * C8346 + C73652 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C359 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C152530 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C152546 -
           ((C76193 + C76194 + C76195) * C152084 * C152404 +
            (C74041 + C74040 + C74039) * C152084 * C152475) *
               C152159 * C152499) *
              C360 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152159 * C152546 -
           ((C75109 + C75110 + C75111) * C152084 * C152404 +
            (C74044 + C74043 + C74042) * C152084 * C152475) *
               C152159 * C152530 +
           ((C74047 + C74046 + C74045) * C152084 * C152475 +
            (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
             C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
             C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
             C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152084 * C152475 +
           (C73655 * C633 - C73656 * C618 - C73655 * C634 + C152539 * C654 +
            C73657 * C1209 - C73658 * C1203 - C73657 * C1210 + C152540 * C1221 +
            C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716) *
               C152084 * C152404) *
              C152159 * C152141 * C129 -
          ((C74338 + C74339 + C74340) * C152084 * C152404 +
           (C73736 + C73735 + C73734) * C152084 * C152475) *
              C152159 * C152141 * C130 +
          ((C73739 + C73738 + C73737) * C152084 * C152475 +
           (C74344 + C74345 + C74346) * C152084 * C152404) *
              C152159 * C152141 * C131 -
          ((C74777 + C74778 + C74779) * C152084 * C152404 +
           (C73742 + C73741 + C73740) * C152084 * C152475) *
              C152159 * C152141 * C132 +
          ((C73745 + C73744 + C73743) * C152084 * C152475 +
           (C73655 * C643 - C73656 * C623 - C73655 * C644 + C152539 * C659 +
            C73657 * C1217 - C73658 * C1207 - C73657 * C1218 + C152540 * C1225 +
            C73659 * C2077 - C73660 * C2076 - C73659 * C2078 + C73652 * C2079) *
               C152084 * C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C1401 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C1402 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C73655 * C1699 - C73656 * C1680 - C73655 * C1700 +
             C152539 * C1716 + C73657 * C2235 - C73658 * C2231 -
             C73657 * C2236 + C152540 * C2243 + C73659 * C8345 -
             C73660 * C8336 - C73659 * C8346 + C73652 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C1402 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C1401 -
           ((C76193 + C76194 + C76195) * C152084 * C152404 +
            (C74041 + C74040 + C74039) * C152084 * C152475) *
               C152159 * C152499) *
              C152526 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152159 * C1401 -
           ((C75109 + C75110 + C75111) * C152084 * C152404 +
            (C74044 + C74043 + C74042) * C152084 * C152475) *
               C152159 * C1402 +
           ((C74047 + C74046 + C74045) * C152084 * C152475 +
            (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
             C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
             C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
             C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152084 * C152475 +
           (C93541 + C93542 + C93543) * C152084 * C152404) *
              C152159 * C1489 -
          ((C94245 + C94244 + C94243) * C152084 * C152404 +
           (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
            C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
            C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
               C152084 * C152475) *
              C152159 * C1490 +
          ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
            C73657 * C1509 - C73658 * C1498 - C73657 * C1510 + C152540 * C1522 +
            C73659 * C1511 - C73660 * C1499 - C73659 * C1512 + C73652 * C1523) *
               C152084 * C152475 +
           (C73655 * C1699 - C73656 * C1680 - C73655 * C1700 + C152539 * C1716 +
            C73657 * C2235 - C73658 * C2231 - C73657 * C2236 + C152540 * C2243 +
            C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354) *
               C152084 * C152404) *
              C152159 * C1491 -
          ((C73659 * C9087 - C73660 * C9085 - C73659 * C9088 + C73652 * C9091 +
            C73657 * C8345 - C73658 * C8336 - C73657 * C8346 + C152540 * C8354 +
            C73655 * C2235 - C73656 * C2231 - C73655 * C2236 +
            C152539 * C2243) *
               C152084 * C152404 +
           (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
            C73657 * C1511 - C73658 * C1499 - C73657 * C1512 + C152540 * C1523 +
            C73655 * C1509 - C73656 * C1498 - C73655 * C1510 +
            C152539 * C1522) *
               C152084 * C152475) *
              C152159 * C1492 +
          ((C73655 * C1511 - C73656 * C1499 - C73655 * C1512 + C152539 * C1523 +
            C73657 * C8105 - C73658 * C8100 - C73657 * C8106 + C152540 * C8112 +
            C73659 * C8107 - C73660 * C8101 - C73659 * C8108 + C73652 * C8113) *
               C152084 * C152475 +
           (C73655 * C8345 - C73656 * C8336 - C73655 * C8346 + C152539 * C8354 +
            C73657 * C9087 - C73658 * C9085 - C73657 * C9088 + C152540 * C9091 +
            C73659 * C61324 - C73660 * C61323 - C73659 * C61325 +
            C73652 * C61326) *
               C152084 * C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C2393 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C2394 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C73655 * C2643 - C73656 * C2632 - C73655 * C2644 +
             C152539 * C2656 + C73657 * C3173 - C73658 * C3169 -
             C73657 * C3174 + C152540 * C3181 + C73659 * C9659 -
             C73660 * C9652 - C73659 * C9660 + C73652 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C74340 + C74339 + C74338) * C152084 * C152475 +
            (C74341 + C74342 + C74343) * C152084 * C152404) *
               C2394 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C2393 -
           ((C77471 + C77472 + C77473) * C152084 * C152404 +
            (C74343 + C74342 + C74341) * C152084 * C152475) *
               C152502) *
              C152141 * C152526 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C2393 -
           ((C74347 + C74348 + C74349) * C152084 * C152404 +
            (C74346 + C74345 + C74344) * C152084 * C152475) *
               C2394 +
           ((C74349 + C74348 + C74347) * C152084 * C152475 +
            (C73655 * C2639 - C73656 * C2630 - C73655 * C2640 +
             C152539 * C2654 + C73657 * C3177 - C73658 * C3171 -
             C73657 * C3178 + C152540 * C3183 + C73659 * C10185 -
             C73660 * C10184 - C73659 * C10186 + C73652 * C10187) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C2393 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C2394 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C73655 * C2643 - C73656 * C2632 - C73655 * C2644 +
             C152539 * C2656 + C73657 * C3173 - C73658 * C3169 -
             C73657 * C3174 + C152540 * C3181 + C73659 * C9659 -
             C73660 * C9652 - C73659 * C9660 + C73652 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152546 +
          (((C94243 + C94244 + C94245) * C152084 * C152475 +
            (C94858 + C94859 + C94860) * C152084 * C152404) *
               C2394 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C2393 -
           ((C73659 * C10405 - C73660 * C10403 - C73659 * C10406 +
             C73652 * C10409 + C73657 * C9659 - C73658 * C9652 -
             C73657 * C9660 + C152540 * C9670 + C73655 * C3173 -
             C73656 * C3169 - C73655 * C3174 + C152539 * C3181) *
                C152084 * C152404 +
            (C94860 + C94859 + C94858) * C152084 * C152475) *
               C152502) *
              C152530 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C2393 -
           ((C94864 + C94865 + C94866) * C152084 * C152404 +
            (C94863 + C94862 + C94861) * C152084 * C152475) *
               C2394 +
           ((C94866 + C94865 + C94864) * C152084 * C152475 +
            (C73655 * C9659 - C73656 * C9652 - C73655 * C9660 +
             C152539 * C9670 + C73657 * C10405 - C73658 * C10403 -
             C73657 * C10406 + C152540 * C10409 + C73659 * C62160 -
             C73660 * C62159 - C73659 * C62161 + C73652 * C62162) *
                C152084 * C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C4321 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152246) *
               C152457 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152246 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C4321) *
               C152204) *
              C152118 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152246 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C4321) *
               C152457 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C4321 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152246) *
               C152204) *
              C152127 +
          ((((C73739 + C73738 + C73737) * C152084 * C152475 +
             (C74344 + C74345 + C74346) * C152084 * C152404) *
                C4321 -
            ((C74347 + C74348 + C74349) * C152084 * C152404 +
             (C74346 + C74345 + C74344) * C152084 * C152475) *
                C152246) *
               C152457 +
           (((C75111 + C75110 + C75109) * C152084 * C152475 +
             (C73655 * C1687 - C73656 * C1674 - C73655 * C1688 +
              C152539 * C1710 + C73657 * C1705 - C73658 * C1683 -
              C73657 * C1706 + C152540 * C1719 + C73659 * C9966 -
              C73660 * C9965 - C73659 * C9967 + C73652 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C75109 + C75110 + C75111) * C152084 * C152404 +
             (C74044 + C74043 + C74042) * C152084 * C152475) *
                C4321) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C152242 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152249 +
            ((C93546 + C93545 + C93544) * C152084 * C152475 +
             (C96160 + C96161 + C96162) * C152084 * C152404) *
                C4993) *
               C152457 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152249 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C152242 -
            ((C96862 + C96863 + C96864) * C152084 * C152404 +
             (C94860 + C94859 + C94858) * C152084 * C152475) *
                C4993) *
               C152204) *
              C3455 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152249 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C152242 -
            ((C77471 + C77472 + C77473) * C152084 * C152404 +
             (C74343 + C74342 + C74341) * C152084 * C152475) *
                C4993) *
               C152457 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C152242 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152249 +
            ((C77258 + C77257 + C77256) * C152084 * C152475 +
             (C73655 * C3175 - C73656 * C3170 - C73655 * C3176 +
              C152539 * C3182 + C73657 * C9657 - C73658 * C9651 -
              C73657 * C9658 + C152540 * C9669 + C73659 * C10407 -
              C73660 * C10404 - C73659 * C10408 + C73652 * C10410) *
                 C152084 * C152404) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C4321 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152246) *
               C152546 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152246 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C4321) *
               C152530 +
           (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
              C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
              C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
              C73659 * C1512 + C73652 * C1523) *
                 C152084 * C152475 +
             (C94861 + C94862 + C94863) * C152084 * C152404) *
                C4321 -
            ((C94864 + C94865 + C94866) * C152084 * C152404 +
             (C94863 + C94862 + C94861) * C152084 * C152475) *
                C152246) *
               C152499) *
              C3455 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152246 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C4321) *
               C152546 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C4321 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152246) *
               C152530 +
           (((C76195 + C76194 + C76193) * C152084 * C152475 +
             (C73655 * C1703 - C73656 * C1682 - C73655 * C1704 +
              C152539 * C1718 + C73657 * C8339 - C73658 * C8333 -
              C73657 * C8340 + C152540 * C8351 + C73659 * C8349 -
              C73660 * C8338 - C73659 * C8350 + C73652 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C76193 + C76194 + C76195) * C152084 * C152404 +
             (C74041 + C74040 + C74039) * C152084 * C152475) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C4321 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152246) *
              C152141 * C152552 +
          (((C74340 + C74339 + C74338) * C152084 * C152475 +
            (C74341 + C74342 + C74343) * C152084 * C152404) *
               C152246 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C4321) *
              C152141 * C152545 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C4321 -
           ((C74347 + C74348 + C74349) * C152084 * C152404 +
            (C74346 + C74345 + C74344) * C152084 * C152475) *
               C152246) *
              C152141 * C152528 +
          (((C74779 + C74778 + C74777) * C152084 * C152475 +
            (C73655 * C641 - C73656 * C622 - C73655 * C642 + C152539 * C658 +
             C73657 * C1685 - C73658 * C1673 - C73657 * C1686 +
             C152540 * C1709 + C73659 * C1707 - C73660 * C1684 -
             C73659 * C1708 + C73652 * C1720) *
                C152084 * C152404) *
               C152246 -
           ((C74777 + C74778 + C74779) * C152084 * C152404 +
            (C73742 + C73741 + C73740) * C152084 * C152475) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152554 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152551 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C96160 + C96161 + C96162) * C152084 * C152404) *
               C152538 -
           ((C96163 + C96164 + C96165) * C152084 * C152404 +
            (C96162 + C96161 + C96160) * C152084 * C152475) *
               C152515) *
              C152141 * C3455 +
          (((C74340 + C74339 + C74338) * C152084 * C152475 +
            (C74341 + C74342 + C74343) * C152084 * C152404) *
               C152551 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152554 -
           ((C77471 + C77472 + C77473) * C152084 * C152404 +
            (C74343 + C74342 + C74341) * C152084 * C152475) *
               C152538 +
           ((C77473 + C77472 + C77471) * C152084 * C152475 +
            (C73655 * C2647 - C73656 * C2634 - C73655 * C2648 +
             C152539 * C2658 + C73657 * C9665 - C73658 * C9655 -
             C73657 * C9666 + C152540 * C9673 + C73659 * C9667 -
             C73660 * C9656 - C73659 * C9668 + C73652 * C9674) *
                C152084 * C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152242 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152249 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C96160 + C96161 + C96162) * C152084 * C152404) *
               C4993) *
              C152141 * C152118 +
          (((C74340 + C74339 + C74338) * C152084 * C152475 +
            (C74341 + C74342 + C74343) * C152084 * C152404) *
               C152249 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152242 -
           ((C77471 + C77472 + C77473) * C152084 * C152404 +
            (C74343 + C74342 + C74341) * C152084 * C152475) *
               C4993) *
              C152141 * C152127 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152242 -
           ((C74347 + C74348 + C74349) * C152084 * C152404 +
            (C74346 + C74345 + C74344) * C152084 * C152475) *
               C152249 +
           ((C74349 + C74348 + C74347) * C152084 * C152475 +
            (C73655 * C2639 - C73656 * C2630 - C73655 * C2640 +
             C152539 * C2654 + C73657 * C3177 - C73658 * C3171 -
             C73657 * C3178 + C152540 * C3183 + C73659 * C10185 -
             C73660 * C10184 - C73659 * C10186 + C73652 * C10187) *
                C152084 * C152404) *
               C4993) *
              C152141 * C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C4321 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152246) *
              C152141 * C152552 +
          (((C74340 + C74339 + C74338) * C152084 * C152475 +
            (C74341 + C74342 + C74343) * C152084 * C152404) *
               C152246 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C4321) *
              C152141 * C152545 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C4321 -
           ((C74347 + C74348 + C74349) * C152084 * C152404 +
            (C74346 + C74345 + C74344) * C152084 * C152475) *
               C152246) *
              C152141 * C152528 +
          (((C74779 + C74778 + C74777) * C152084 * C152475 +
            (C73655 * C641 - C73656 * C622 - C73655 * C642 + C152539 * C658 +
             C73657 * C1685 - C73658 * C1673 - C73657 * C1686 +
             C152540 * C1709 + C73659 * C1707 - C73660 * C1684 -
             C73659 * C1708 + C73652 * C1720) *
                C152084 * C152404) *
               C152246 -
           ((C74777 + C74778 + C74779) * C152084 * C152404 +
            (C73742 + C73741 + C73740) * C152084 * C152475) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C4321 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152246) *
               C152546 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152246 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C4321) *
               C152530 +
           (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
              C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
              C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
              C73659 * C1512 + C73652 * C1523) *
                 C152084 * C152475 +
             (C94861 + C94862 + C94863) * C152084 * C152404) *
                C4321 -
            ((C94864 + C94865 + C94866) * C152084 * C152404 +
             (C94863 + C94862 + C94861) * C152084 * C152475) *
                C152246) *
               C152499) *
              C3455 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152246 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C4321) *
               C152546 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C4321 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152246) *
               C152530 +
           (((C76195 + C76194 + C76193) * C152084 * C152475 +
             (C73655 * C1703 - C73656 * C1682 - C73655 * C1704 +
              C152539 * C1718 + C73657 * C8339 - C73658 * C8333 -
              C73657 * C8340 + C152540 * C8351 + C73659 * C8349 -
              C73660 * C8338 - C73659 * C8350 + C73652 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C76193 + C76194 + C76195) * C152084 * C152404 +
             (C74041 + C74040 + C74039) * C152084 * C152475) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C152457 -
           ((C73659 * C2235 - C73660 * C2231 - C73659 * C2236 + C73652 * C2243 +
             C73657 * C1699 - C73658 * C1680 - C73657 * C1700 +
             C152540 * C1716 + C73655 * C1209 - C73656 * C1203 -
             C73655 * C1210 + C152539 * C1221) *
                C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C152204) *
              C851 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C152204 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C152457) *
              C852 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152159 * C152457 -
           ((C75109 + C75110 + C75111) * C152084 * C152404 +
            (C74044 + C74043 + C74042) * C152084 * C152475) *
               C152159 * C152204) *
              C853 +
          (((C74564 + C74563 + C74562) * C152084 * C152475 +
            (C73655 * C1215 - C73656 * C1206 - C73655 * C1216 +
             C152539 * C1224 + C73657 * C1693 - C73658 * C1677 -
             C73657 * C1694 + C152540 * C1713 + C73659 * C2241 -
             C73660 * C2234 - C73659 * C2242 + C73652 * C2246) *
                C152084 * C152404) *
               C152159 * C152204 -
           ((C74777 + C74778 + C74779) * C152084 * C152404 +
            (C73742 + C73741 + C73740) * C152084 * C152475) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C1851 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C1852 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C152159 * C1853 -
           ((C73659 * C9087 - C73660 * C9085 - C73659 * C9088 + C73652 * C9091 +
             C73657 * C8345 - C73658 * C8336 - C73657 * C8346 +
             C152540 * C8354 + C73655 * C2235 - C73656 * C2231 -
             C73655 * C2236 + C152539 * C2243) *
                C152084 * C152404 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152084 * C152475) *
               C152159 * C152509) *
              C152443 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C1852 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C1851 -
           ((C76193 + C76194 + C76195) * C152084 * C152404 +
            (C74041 + C74040 + C74039) * C152084 * C152475) *
               C152159 * C1853 +
           ((C75884 + C75883 + C75882) * C152084 * C152475 +
            (C73655 * C2237 - C73656 * C2232 - C73655 * C2238 +
             C152539 * C2244 + C73657 * C8343 - C73658 * C8335 -
             C73657 * C8344 + C152540 * C8353 + C73659 * C9089 -
             C73660 * C9086 - C73659 * C9090 + C73652 * C9092) *
                C152084 * C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C152458 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152246) *
               C152457 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C73655 * C1691 - C73656 * C1676 - C73655 * C1692 +
              C152539 * C1712 + C73657 * C1701 - C73658 * C1681 -
              C73657 * C1702 + C152540 * C1717 + C73659 * C8341 -
              C73660 * C8334 - C73659 * C8342 + C73652 * C8352) *
                 C152084 * C152404) *
                C152246 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C152458) *
               C152204) *
              C359 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152246 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C152458) *
               C152457 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C152458 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152246) *
               C152204) *
              C360 +
          ((((C73739 + C73738 + C73737) * C152084 * C152475 +
             (C74344 + C74345 + C74346) * C152084 * C152404) *
                C152458 -
            ((C74347 + C74348 + C74349) * C152084 * C152404 +
             (C74346 + C74345 + C74344) * C152084 * C152475) *
                C152246) *
               C152457 +
           (((C75111 + C75110 + C75109) * C152084 * C152475 +
             (C73655 * C1687 - C73656 * C1674 - C73655 * C1688 +
              C152539 * C1710 + C73657 * C1705 - C73658 * C1683 -
              C73657 * C1706 + C152540 * C1719 + C73659 * C9966 -
              C73660 * C9965 - C73659 * C9967 + C73652 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C75109 + C75110 + C75111) * C152084 * C152404 +
             (C74044 + C74043 + C74042) * C152084 * C152475) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152458 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152246) *
              C1851 +
          (((C94243 + C94244 + C94245) * C152084 * C152475 +
            (C94858 + C94859 + C94860) * C152084 * C152404) *
               C152246 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152458) *
              C1852 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C152458 -
           ((C94864 + C94865 + C94866) * C152084 * C152404 +
            (C94863 + C94862 + C94861) * C152084 * C152475) *
               C152246) *
              C1853 +
          (((C95563 + C95564 + C95565) * C152084 * C152475 +
            (C73655 * C8341 - C73656 * C8334 - C73655 * C8342 +
             C152539 * C8352 + C73657 * C8347 - C73658 * C8337 -
             C73657 * C8348 + C152540 * C8355 + C73659 * C60866 -
             C73660 * C60865 - C73659 * C60867 + C73652 * C60868) *
                C152084 * C152404) *
               C152246 -
           ((C95565 + C95564 + C95563) * C152084 * C152404 +
            (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
             C73657 * C1511 - C73658 * C1499 - C73657 * C1512 +
             C152540 * C1523 + C73655 * C1509 - C73656 * C1498 -
             C73655 * C1510 + C152539 * C1522) *
                C152084 * C152475) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C73655 * C633 - C73656 * C618 - C73655 * C634 + C152539 * C654 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73659 * C1699 - C73660 * C1680 -
             C73659 * C1700 + C73652 * C1716) *
                C152084 * C152404) *
               C152159 * C152546 -
           ((C73659 * C2235 - C73660 * C2231 - C73659 * C2236 + C73652 * C2243 +
             C73657 * C1699 - C73658 * C1680 - C73657 * C1700 +
             C152540 * C1716 + C73655 * C1209 - C73656 * C1203 -
             C73655 * C1210 + C152539 * C1221) *
                C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C152530 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C73655 * C1699 - C73656 * C1680 - C73655 * C1700 +
             C152539 * C1716 + C73657 * C2235 - C73658 * C2231 -
             C73657 * C2236 + C152540 * C2243 + C73659 * C8345 -
             C73660 * C8336 - C73659 * C8346 + C73652 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C359 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C152530 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C152546 -
           ((C76193 + C76194 + C76195) * C152084 * C152404 +
            (C74041 + C74040 + C74039) * C152084 * C152475) *
               C152159 * C152499) *
              C360 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152159 * C152546 -
           ((C75109 + C75110 + C75111) * C152084 * C152404 +
            (C74044 + C74043 + C74042) * C152084 * C152475) *
               C152159 * C152530 +
           ((C74047 + C74046 + C74045) * C152084 * C152475 +
            (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
             C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
             C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
             C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152084 * C152475 +
           (C73655 * C633 - C73656 * C618 - C73655 * C634 + C152539 * C654 +
            C73657 * C1209 - C73658 * C1203 - C73657 * C1210 + C152540 * C1221 +
            C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716) *
               C152084 * C152404) *
              C152159 * C152141 * C129 -
          ((C74338 + C74339 + C74340) * C152084 * C152404 +
           (C73736 + C73735 + C73734) * C152084 * C152475) *
              C152159 * C152141 * C130 +
          ((C73739 + C73738 + C73737) * C152084 * C152475 +
           (C74344 + C74345 + C74346) * C152084 * C152404) *
              C152159 * C152141 * C131 -
          ((C74777 + C74778 + C74779) * C152084 * C152404 +
           (C73742 + C73741 + C73740) * C152084 * C152475) *
              C152159 * C152141 * C132 +
          ((C73745 + C73744 + C73743) * C152084 * C152475 +
           (C73655 * C643 - C73656 * C623 - C73655 * C644 + C152539 * C659 +
            C73657 * C1217 - C73658 * C1207 - C73657 * C1218 + C152540 * C1225 +
            C73659 * C2077 - C73660 * C2076 - C73659 * C2078 + C73652 * C2079) *
               C152084 * C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152547 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152532 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C73655 * C2643 - C73656 * C2632 - C73655 * C2644 +
             C152539 * C2656 + C73657 * C3173 - C73658 * C3169 -
             C73657 * C3174 + C152540 * C3181 + C73659 * C9659 -
             C73660 * C9652 - C73659 * C9660 + C73652 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152141 * C359 +
          (((C74340 + C74339 + C74338) * C152084 * C152475 +
            (C74341 + C74342 + C74343) * C152084 * C152404) *
               C152532 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152547 -
           ((C77471 + C77472 + C77473) * C152084 * C152404 +
            (C74343 + C74342 + C74341) * C152084 * C152475) *
               C152502) *
              C152141 * C360 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152547 -
           ((C74347 + C74348 + C74349) * C152084 * C152404 +
            (C74346 + C74345 + C74344) * C152084 * C152475) *
               C152532 +
           ((C74349 + C74348 + C74347) * C152084 * C152475 +
            (C73655 * C2639 - C73656 * C2630 - C73655 * C2640 +
             C152539 * C2654 + C73657 * C3177 - C73658 * C3171 -
             C73657 * C3178 + C152540 * C3183 + C73659 * C10185 -
             C73660 * C10184 - C73659 * C10186 + C73652 * C10187) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C1401 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C1402 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C73655 * C1699 - C73656 * C1680 - C73655 * C1700 +
             C152539 * C1716 + C73657 * C2235 - C73658 * C2231 -
             C73657 * C2236 + C152540 * C2243 + C73659 * C8345 -
             C73660 * C8336 - C73659 * C8346 + C73652 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C1402 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C1401 -
           ((C76193 + C76194 + C76195) * C152084 * C152404 +
            (C74041 + C74040 + C74039) * C152084 * C152475) *
               C152159 * C152499) *
              C152526 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152159 * C1401 -
           ((C75109 + C75110 + C75111) * C152084 * C152404 +
            (C74044 + C74043 + C74042) * C152084 * C152475) *
               C152159 * C1402 +
           ((C74047 + C74046 + C74045) * C152084 * C152475 +
            (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
             C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
             C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
             C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152084 * C152475 +
           (C93541 + C93542 + C93543) * C152084 * C152404) *
              C152159 * C1489 -
          ((C94245 + C94244 + C94243) * C152084 * C152404 +
           (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
            C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
            C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
               C152084 * C152475) *
              C152159 * C1490 +
          ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
            C73657 * C1509 - C73658 * C1498 - C73657 * C1510 + C152540 * C1522 +
            C73659 * C1511 - C73660 * C1499 - C73659 * C1512 + C73652 * C1523) *
               C152084 * C152475 +
           (C73655 * C1699 - C73656 * C1680 - C73655 * C1700 + C152539 * C1716 +
            C73657 * C2235 - C73658 * C2231 - C73657 * C2236 + C152540 * C2243 +
            C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354) *
               C152084 * C152404) *
              C152159 * C1491 -
          ((C73659 * C9087 - C73660 * C9085 - C73659 * C9088 + C73652 * C9091 +
            C73657 * C8345 - C73658 * C8336 - C73657 * C8346 + C152540 * C8354 +
            C73655 * C2235 - C73656 * C2231 - C73655 * C2236 +
            C152539 * C2243) *
               C152084 * C152404 +
           (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
            C73657 * C1511 - C73658 * C1499 - C73657 * C1512 + C152540 * C1523 +
            C73655 * C1509 - C73656 * C1498 - C73655 * C1510 +
            C152539 * C1522) *
               C152084 * C152475) *
              C152159 * C1492 +
          ((C73655 * C1511 - C73656 * C1499 - C73655 * C1512 + C152539 * C1523 +
            C73657 * C8105 - C73658 * C8100 - C73657 * C8106 + C152540 * C8112 +
            C73659 * C8107 - C73660 * C8101 - C73659 * C8108 + C73652 * C8113) *
               C152084 * C152475 +
           (C73655 * C8345 - C73656 * C8336 - C73655 * C8346 + C152539 * C8354 +
            C73657 * C9087 - C73658 * C9085 - C73657 * C9088 + C152540 * C9091 +
            C73659 * C61324 - C73660 * C61323 - C73659 * C61325 +
            C73652 * C61326) *
               C152084 * C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152547 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152532 +
           ((C93546 + C93545 + C93544) * C152084 * C152475 +
            (C73655 * C2643 - C73656 * C2632 - C73655 * C2644 +
             C152539 * C2656 + C73657 * C3173 - C73658 * C3169 -
             C73657 * C3174 + C152540 * C3181 + C73659 * C9659 -
             C73660 * C9652 - C73659 * C9660 + C73652 * C9670) *
                C152084 * C152404) *
               C152502) *
              C1401 +
          (((C94243 + C94244 + C94245) * C152084 * C152475 +
            (C94858 + C94859 + C94860) * C152084 * C152404) *
               C152532 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152547 -
           ((C73659 * C10405 - C73660 * C10403 - C73659 * C10406 +
             C73652 * C10409 + C73657 * C9659 - C73658 * C9652 -
             C73657 * C9660 + C152540 * C9670 + C73655 * C3173 -
             C73656 * C3169 - C73655 * C3174 + C152539 * C3181) *
                C152084 * C152404 +
            (C94860 + C94859 + C94858) * C152084 * C152475) *
               C152502) *
              C1402 +
          (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C94861 + C94862 + C94863) * C152084 * C152404) *
               C152547 -
           ((C94864 + C94865 + C94866) * C152084 * C152404 +
            (C94863 + C94862 + C94861) * C152084 * C152475) *
               C152532 +
           ((C94866 + C94865 + C94864) * C152084 * C152475 +
            (C73655 * C9659 - C73656 * C9652 - C73655 * C9660 +
             C152539 * C9670 + C73657 * C10405 - C73658 * C10403 -
             C73657 * C10406 + C152540 * C10409 + C73659 * C62160 -
             C73660 * C62159 - C73659 * C62161 + C73652 * C62162) *
                C152084 * C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152458 -
           ((C93544 + C93545 + C93546) * C152084 * C152404 +
            (C93543 + C93542 + C93541) * C152084 * C152475) *
               C152246) *
              C152141 * C851 +
          (((C74340 + C74339 + C74338) * C152084 * C152475 +
            (C74341 + C74342 + C74343) * C152084 * C152404) *
               C152246 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152458) *
              C152141 * C852 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152458 -
           ((C74347 + C74348 + C74349) * C152084 * C152404 +
            (C74346 + C74345 + C74344) * C152084 * C152475) *
               C152246) *
              C152141 * C853 +
          (((C74779 + C74778 + C74777) * C152084 * C152475 +
            (C73655 * C641 - C73656 * C622 - C73655 * C642 + C152539 * C658 +
             C73657 * C1685 - C73658 * C1673 - C73657 * C1686 +
             C152540 * C1709 + C73659 * C1707 - C73660 * C1684 -
             C73659 * C1708 + C73652 * C1720) *
                C152084 * C152404) *
               C152246 -
           ((C74777 + C74778 + C74779) * C152084 * C152404 +
            (C73742 + C73741 + C73740) * C152084 * C152475) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
              C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
              C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                 C152084 * C152475 +
             (C93541 + C93542 + C93543) * C152084 * C152404) *
                C152458 -
            ((C93544 + C93545 + C93546) * C152084 * C152404 +
             (C93543 + C93542 + C93541) * C152084 * C152475) *
                C152246) *
               C1401 +
           (((C94243 + C94244 + C94245) * C152084 * C152475 +
             (C94858 + C94859 + C94860) * C152084 * C152404) *
                C152246 -
            ((C94245 + C94244 + C94243) * C152084 * C152404 +
             (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 +
              C73652 * C1522 + C73657 * C382 - C73658 * C366 - C73657 * C383 +
              C152540 * C402 + C73655 * C380 - C73656 * C365 - C73655 * C381 +
              C152539 * C401) *
                 C152084 * C152475) *
                C152458) *
               C1402 +
           (((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
              C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
              C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
              C73659 * C1512 + C73652 * C1523) *
                 C152084 * C152475 +
             (C94861 + C94862 + C94863) * C152084 * C152404) *
                C152458 -
            ((C94864 + C94865 + C94866) * C152084 * C152404 +
             (C94863 + C94862 + C94861) * C152084 * C152475) *
                C152246) *
               C152499) *
              C152443 +
          ((((C74340 + C74339 + C74338) * C152084 * C152475 +
             (C74341 + C74342 + C74343) * C152084 * C152404) *
                C152246 -
            ((C74338 + C74339 + C74340) * C152084 * C152404 +
             (C73736 + C73735 + C73734) * C152084 * C152475) *
                C152458) *
               C1401 +
           (((C74038 + C74037 + C74036) * C152084 * C152475 +
             (C75106 + C75107 + C75108) * C152084 * C152404) *
                C152458 -
            ((C77256 + C77257 + C77258) * C152084 * C152404 +
             (C75108 + C75107 + C75106) * C152084 * C152475) *
                C152246) *
               C1402 +
           (((C76195 + C76194 + C76193) * C152084 * C152475 +
             (C73655 * C1703 - C73656 * C1682 - C73655 * C1704 +
              C152539 * C1718 + C73657 * C8339 - C73658 * C8333 -
              C73657 * C8340 + C152540 * C8351 + C73659 * C8349 -
              C73660 * C8338 - C73659 * C8350 + C73652 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C76193 + C76194 + C76195) * C152084 * C152404 +
             (C74041 + C74040 + C74039) * C152084 * C152475) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152084 * C152475 +
           (C73655 * C633 - C73656 * C618 - C73655 * C634 + C152539 * C654 +
            C73657 * C1209 - C73658 * C1203 - C73657 * C1210 + C152540 * C1221 +
            C73659 * C1699 - C73660 * C1680 - C73659 * C1700 + C73652 * C1716) *
               C152084 * C152404) *
              C152159 * C152141 * C129 -
          ((C74338 + C74339 + C74340) * C152084 * C152404 +
           (C73736 + C73735 + C73734) * C152084 * C152475) *
              C152159 * C152141 * C130 +
          ((C73739 + C73738 + C73737) * C152084 * C152475 +
           (C74344 + C74345 + C74346) * C152084 * C152404) *
              C152159 * C152141 * C131 -
          ((C74777 + C74778 + C74779) * C152084 * C152404 +
           (C73742 + C73741 + C73740) * C152084 * C152475) *
              C152159 * C152141 * C132 +
          ((C73745 + C73744 + C73743) * C152084 * C152475 +
           (C73655 * C643 - C73656 * C623 - C73655 * C644 + C152539 * C659 +
            C73657 * C1217 - C73658 * C1207 - C73657 * C1218 + C152540 * C1225 +
            C73659 * C2077 - C73660 * C2076 - C73659 * C2078 + C73652 * C2079) *
               C152084 * C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C73655 * C633 - C73656 * C618 - C73655 * C634 + C152539 * C654 +
             C73657 * C1209 - C73658 * C1203 - C73657 * C1210 +
             C152540 * C1221 + C73659 * C1699 - C73660 * C1680 -
             C73659 * C1700 + C73652 * C1716) *
                C152084 * C152404) *
               C152159 * C152546 -
           ((C73659 * C2235 - C73660 * C2231 - C73659 * C2236 + C73652 * C2243 +
             C73657 * C1699 - C73658 * C1680 - C73657 * C1700 +
             C152540 * C1716 + C73655 * C1209 - C73656 * C1203 -
             C73655 * C1210 + C152539 * C1221) *
                C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C152530 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C73655 * C1699 - C73656 * C1680 - C73655 * C1700 +
             C152539 * C1716 + C73657 * C2235 - C73658 * C2231 -
             C73657 * C2236 + C152540 * C2243 + C73659 * C8345 -
             C73660 * C8336 - C73659 * C8346 + C73652 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C359 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C152530 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C152546 -
           ((C76193 + C76194 + C76195) * C152084 * C152404 +
            (C74041 + C74040 + C74039) * C152084 * C152475) *
               C152159 * C152499) *
              C360 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152159 * C152546 -
           ((C75109 + C75110 + C75111) * C152084 * C152404 +
            (C74044 + C74043 + C74042) * C152084 * C152475) *
               C152159 * C152530 +
           ((C74047 + C74046 + C74045) * C152084 * C152475 +
            (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
             C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
             C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
             C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
             C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
             C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
                C152084 * C152475 +
            (C93541 + C93542 + C93543) * C152084 * C152404) *
               C152159 * C1401 -
           ((C94245 + C94244 + C94243) * C152084 * C152404 +
            (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
             C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
             C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
                C152084 * C152475) *
               C152159 * C1402 +
           ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
             C73657 * C1509 - C73658 * C1498 - C73657 * C1510 +
             C152540 * C1522 + C73659 * C1511 - C73660 * C1499 -
             C73659 * C1512 + C73652 * C1523) *
                C152084 * C152475 +
            (C73655 * C1699 - C73656 * C1680 - C73655 * C1700 +
             C152539 * C1716 + C73657 * C2235 - C73658 * C2231 -
             C73657 * C2236 + C152540 * C2243 + C73659 * C8345 -
             C73660 * C8336 - C73659 * C8346 + C73652 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C74038 + C74037 + C74036) * C152084 * C152475 +
            (C75106 + C75107 + C75108) * C152084 * C152404) *
               C152159 * C1402 -
           ((C74338 + C74339 + C74340) * C152084 * C152404 +
            (C73736 + C73735 + C73734) * C152084 * C152475) *
               C152159 * C1401 -
           ((C76193 + C76194 + C76195) * C152084 * C152404 +
            (C74041 + C74040 + C74039) * C152084 * C152475) *
               C152159 * C152499) *
              C152526 +
          (((C73739 + C73738 + C73737) * C152084 * C152475 +
            (C74344 + C74345 + C74346) * C152084 * C152404) *
               C152159 * C1401 -
           ((C75109 + C75110 + C75111) * C152084 * C152404 +
            (C74044 + C74043 + C74042) * C152084 * C152475) *
               C152159 * C1402 +
           ((C74047 + C74046 + C74045) * C152084 * C152475 +
            (C73655 * C1695 - C73656 * C1678 - C73655 * C1696 +
             C152539 * C1714 + C73657 * C2239 - C73658 * C2233 -
             C73657 * C2240 + C152540 * C2245 + C73659 * C8867 -
             C73660 * C8866 - C73659 * C8868 + C73652 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C73655 * C144 - C73656 * C136 - C73655 * C145 + C152539 * C160 +
            C73657 * C380 - C73658 * C365 - C73657 * C381 + C152540 * C401 +
            C73659 * C382 - C73660 * C366 - C73659 * C383 + C73652 * C402) *
               C152084 * C152475 +
           (C93541 + C93542 + C93543) * C152084 * C152404) *
              C152159 * C1489 -
          ((C94245 + C94244 + C94243) * C152084 * C152404 +
           (C73659 * C1509 - C73660 * C1498 - C73659 * C1510 + C73652 * C1522 +
            C73657 * C382 - C73658 * C366 - C73657 * C383 + C152540 * C402 +
            C73655 * C380 - C73656 * C365 - C73655 * C381 + C152539 * C401) *
               C152084 * C152475) *
              C152159 * C1490 +
          ((C73655 * C382 - C73656 * C366 - C73655 * C383 + C152539 * C402 +
            C73657 * C1509 - C73658 * C1498 - C73657 * C1510 + C152540 * C1522 +
            C73659 * C1511 - C73660 * C1499 - C73659 * C1512 + C73652 * C1523) *
               C152084 * C152475 +
           (C73655 * C1699 - C73656 * C1680 - C73655 * C1700 + C152539 * C1716 +
            C73657 * C2235 - C73658 * C2231 - C73657 * C2236 + C152540 * C2243 +
            C73659 * C8345 - C73660 * C8336 - C73659 * C8346 + C73652 * C8354) *
               C152084 * C152404) *
              C152159 * C1491 -
          ((C73659 * C9087 - C73660 * C9085 - C73659 * C9088 + C73652 * C9091 +
            C73657 * C8345 - C73658 * C8336 - C73657 * C8346 + C152540 * C8354 +
            C73655 * C2235 - C73656 * C2231 - C73655 * C2236 +
            C152539 * C2243) *
               C152084 * C152404 +
           (C73659 * C8105 - C73660 * C8100 - C73659 * C8106 + C73652 * C8112 +
            C73657 * C1511 - C73658 * C1499 - C73657 * C1512 + C152540 * C1523 +
            C73655 * C1509 - C73656 * C1498 - C73655 * C1510 +
            C152539 * C1522) *
               C152084 * C152475) *
              C152159 * C1492 +
          ((C73655 * C1511 - C73656 * C1499 - C73655 * C1512 + C152539 * C1523 +
            C73657 * C8105 - C73658 * C8100 - C73657 * C8106 + C152540 * C8112 +
            C73659 * C8107 - C73660 * C8101 - C73659 * C8108 + C73652 * C8113) *
               C152084 * C152475 +
           (C73655 * C8345 - C73656 * C8336 - C73655 * C8346 + C152539 * C8354 +
            C73657 * C9087 - C73658 * C9085 - C73657 * C9088 + C152540 * C9091 +
            C73659 * C61324 - C73660 * C61323 - C73659 * C61325 +
            C73652 * C61326) *
               C152084 * C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152200 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152207 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C3799) *
              C152118 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152207 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152200 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C3799) *
              C152127 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152200 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152207 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152200 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152207 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C3799) *
              C152118 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C152207 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152200 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C3799) *
              C152127 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C152200 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C152207 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C152200 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C152207 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C152159 * C3799) *
              C152118 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
               C152159 * C152207 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C152200 -
           ((C67554 + C67553) * C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C3799) *
              C152127 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152159 * C152200 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C152207 +
           (C51579 * C152084 * C14961 + (C53730 + C53729) * C152084 * C14962 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C152084 * C14963) *
               C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152458 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152200 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152458) *
               C152207 +
           ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
             C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
             C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
             C59739 * C8105 - C59740 * C8100 - C59739 * C8106 +
             C59731 * C8112) *
                C152084 * C152340 * C152458 -
            (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
             C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
             C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
             C59733 * C1699 - C59734 * C1680 - C59733 * C1700 +
             C59728 * C1716) *
                C152084 * C152340 * C152246) *
               C3799) *
              C3455 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152458) *
               C152200 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152458 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152207 +
           ((C59733 * C1697 - C59734 * C1679 - C59733 * C1698 + C59728 * C1715 +
             C59735 * C2237 - C59736 * C2232 - C59735 * C2238 + C59729 * C2244 +
             C59737 * C8343 - C59738 * C8335 - C59737 * C8344 + C59730 * C8353 +
             C59739 * C9089 - C59740 * C9086 - C59739 * C9090 +
             C59731 * C9092) *
                C152084 * C152340 * C152246 -
            (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
             C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
             C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
             C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
                C152084 * C152340 * C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152458 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C152200 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152458) *
               C152207 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C51195 +
             (C51570 + C51571) * C51196 + C51579 * C51197) *
                C152340 * C152458 -
            ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
             (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
              C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
              C51198 * C1700 + C51193 * C1716) *
                 C51195) *
                C152340 * C152246) *
               C3799) *
              C3455 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152458) *
               C152200 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152458 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152207 +
           (((C53732 + C53731) * C51195 + (C53730 + C53729) * C51196 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C51197) *
                C152340 * C152246 -
            ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
             (C51571 + C51570) * C51195) *
                C152340 * C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C152458 -
            (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152246) *
               C152200 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
                C152246 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C152458) *
               C152207 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152084 * C14961 +
             (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
                C152458 -
            ((C67053 + C67054) * C152084 * C14963 +
             (C67052 + C67051) * C152084 * C14962 +
             (C67050 + C67049) * C152084 * C14961) *
                C152246) *
               C3799) *
              C3455 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
                C152246 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C152458) *
               C152200 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
                C152458 -
            ((C68675 + C68676) * C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152246) *
               C152207 +
           (((C53732 + C53731) * C152084 * C14961 +
             (C67553 + C67554) * C152084 * C14962 +
             (C51198 * C9657 - C51199 * C9651 - C51198 * C9658 +
              C51193 * C9669 + C51200 * C10407 - C51201 * C10404 -
              C51200 * C10408 + C152376 * C10410) *
                 C152084 * C14963) *
                C152246 -
            ((C67554 + C67553) * C152084 * C14963 +
             (C53731 + C53732) * C152084 * C14962 +
             (C51571 + C51570) * C152084 * C14961) *
                C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C152159 * C3315 -
               (C51578 * C51197 + (C51568 + C51569) * C51196 +
                (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                 C152376 * C402 + C51198 * C380 - C51199 * C365 -
                 C51198 * C381 + C51193 * C401) *
                    C51195) *
                   C152340 * C152159 * C152204) *
                  C152552 +
              (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
                C52078 * C51197) *
                   C152340 * C152159 * C152204 -
               (C51274 * C51197 + (C51266 + C51265) * C51196 +
                (C51264 + C51263) * C51195) *
                   C152340 * C152159 * C3315) *
                  C152545 +
              ((C51273 * C51195 + (C51268 + C51267) * C51196 +
                C51275 * C51197) *
                   C152340 * C152159 * C3315 -
               ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
                C51578 * C51195) *
                   C152340 * C152159 * C152204) *
                  C152528 +
              ((C52078 * C51195 + (C52092 + C52091) * C51196 +
                (C51198 * C394 - C51199 * C372 - C51198 * C395 + C51193 * C408 +
                 C51200 * C396 - C51201 * C373 - C51200 * C397 +
                 C152376 * C409) *
                    C51197) *
                   C152340 * C152159 * C152204 -
               ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
                C51274 * C51195) *
                   C152340 * C152159 * C3315) *
                  C152503) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C152159 * C152553 -
               (C51578 * C51197 + (C51568 + C51569) * C51196 +
                (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                 C152376 * C402 + C51198 * C380 - C51199 * C365 -
                 C51198 * C381 + C51193 * C401) *
                    C51195) *
                   C152340 * C152159 * C152549 +
               ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
                 C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
                 C152376 * C1522) *
                    C51195 +
                (C51570 + C51571) * C51196 + C51579 * C51197) *
                   C152340 * C152159 * C152535 -
               ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
                (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
                 C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
                 C51198 * C1510 + C51193 * C1522) *
                    C51195) *
                   C152340 * C152159 * C152509) *
                  C3455 +
              (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
                C52078 * C51197) *
                   C152340 * C152159 * C152549 -
               (C51274 * C51197 + (C51266 + C51265) * C51196 +
                (C51264 + C51263) * C51195) *
                   C152340 * C152159 * C152553 -
               ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
                (C51571 + C51570) * C51195) *
                   C152340 * C152159 * C152535 +
               ((C53414 + C53413) * C51195 + (C53412 + C53411) * C51196 +
                (C51198 * C1503 - C51199 * C1495 - C51198 * C1504 +
                 C51193 * C1519 + C51200 * C1517 - C51201 * C1502 -
                 C51200 * C1518 + C152376 * C1526) *
                    C51197) *
                   C152340 * C152159 * C152509) *
                  C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152547 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152532 +
            ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
              C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
              C152376 * C1712) *
                 C51195 +
             (C51874 + C51875) * C51196 + C51883 * C51197) *
                C152340 * C152502) *
               C3315 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152532 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152547 -
            ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
             (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
              C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
              C51198 * C1692 + C51193 * C1712) *
                 C51195) *
                C152340 * C152502) *
               C152204) *
              C3455 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152532 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152547 -
            ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
             (C51875 + C51874) * C51195) *
                C152340 * C152502) *
               C3315 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152547 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152532 +
            ((C54802 + C54801) * C51195 + (C54800 + C54799) * C51196 +
             (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
              C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
              C51200 * C1708 + C152376 * C1720) *
                 C51197) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C3315 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152204) *
              C152552 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C3315) *
              C152545 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C3315 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152204) *
              C152528 +
          ((C59733 * C374 - C59734 * C362 - C59733 * C375 + C59728 * C398 +
            C59735 * C388 - C59736 * C369 - C59735 * C389 + C59729 * C405 +
            C59737 * C1503 - C59738 * C1495 - C59737 * C1504 + C59730 * C1519 +
            C59739 * C1517 - C59740 * C1502 - C59739 * C1518 + C59731 * C1526) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152553 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152549 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152535 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C152159 * C152509) *
              C3455 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152549 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152553 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152535 +
           (C59733 * C1507 - C59734 * C1497 - C59733 * C1508 + C59728 * C1521 +
            C59735 * C1513 - C59736 * C1500 - C59735 * C1514 + C59729 * C1524 +
            C59737 * C8103 - C59738 * C8099 - C59737 * C8104 + C59730 * C8111 +
            C59739 * C8109 - C59740 * C8102 - C59739 * C8110 + C59731 * C8114) *
               C152084 * C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152547 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152532 +
            (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
             C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
             C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
             C59739 * C8341 - C59740 * C8334 - C59739 * C8342 +
             C59731 * C8352) *
                C152084 * C152340 * C152502) *
               C3315 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152532 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152547 -
            (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
             C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
             C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
             C59733 * C1691 - C59734 * C1676 - C59733 * C1692 +
             C59728 * C1712) *
                C152084 * C152340 * C152502) *
               C152204) *
              C3455 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152532 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152547 -
            (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
             C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
             C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
             C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
                C152084 * C152340 * C152502) *
               C3315 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152547 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152532 +
            (C59733 * C1689 - C59734 * C1675 - C59733 * C1690 + C59728 * C1711 +
             C59735 * C1703 - C59736 * C1682 - C59735 * C1704 + C59729 * C1718 +
             C59737 * C8339 - C59738 * C8333 - C59737 * C8340 + C59730 * C8351 +
             C59739 * C8349 - C59740 * C8338 - C59739 * C8350 +
             C59731 * C8356) *
                C152084 * C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C3315 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C152204) *
              C152552 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
               C152159 * C152204 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C3315) *
              C152545 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152159 * C3315 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C152204) *
              C152528 +
          ((C52078 * C152084 * C14961 + (C52633 + C52632) * C152084 * C14962 +
            (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 + C51193 * C1709 +
             C51200 * C1707 - C51201 * C1684 - C51200 * C1708 +
             C152376 * C1720) *
                C152084 * C14963) *
               C152159 * C152204 -
           ((C51880 + C51881) * C152084 * C14963 +
            (C51879 + C51878) * C152084 * C14962 + C51274 * C152084 * C14961) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C152553 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C152549 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C152159 * C152535 -
           ((C67776 + C67775) * C152084 * C14963 +
            (C67774 + C67773) * C152084 * C14962 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C152084 * C14961) *
               C152159 * C152509) *
              C3455 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
               C152159 * C152549 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C152553 -
           ((C67554 + C67553) * C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C152535 +
           ((C53414 + C53413) * C152084 * C14961 +
            (C51198 * C2237 - C51199 * C2232 - C51198 * C2238 + C51193 * C2244 +
             C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353) *
                C152084 * C14962 +
            (C51198 * C8339 - C51199 * C8333 - C51198 * C8340 + C51193 * C8351 +
             C51200 * C8349 - C51201 * C8338 - C51200 * C8350 +
             C152376 * C8356) *
                C152084 * C14963) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C152547 -
            (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152532 +
            (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
             C68370 * C14963) *
                C152502) *
               C3315 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
                C152532 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C152547 -
            ((C69099 + C69100) * C152084 * C14963 +
             (C67048 + C67047) * C152084 * C14962 + C67032 * C14961) *
                C152502) *
               C152204) *
              C3455 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
                C152532 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C152547 -
            ((C68885 + C68886) * C152084 * C14963 +
             (C55023 + C55024) * C152084 * C14962 + C65718 * C14961) *
                C152502) *
               C3315 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
                C152547 -
            ((C68675 + C68676) * C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152532 +
            (C68670 * C14961 + (C68676 + C68675) * C152084 * C14962 +
             (C51198 * C9665 - C51199 * C9655 - C51198 * C9666 +
              C51193 * C9673 + C51200 * C9667 - C51201 * C9656 -
              C51200 * C9668 + C152376 * C9674) *
                 C152084 * C14963) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152458 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C3315 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152458) *
               C152204) *
              C152118 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152458) *
               C3315 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152458 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152204) *
              C152127 +
          (((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
             C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
             C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
             C59739 * C1505 - C59740 * C1496 - C59739 * C1506 +
             C59731 * C1520) *
                C152084 * C152340 * C152458 -
            (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
             C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
             C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
             C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
                C152084 * C152340 * C152246) *
               C3315 +
           ((C59733 * C1213 - C59734 * C1205 - C59733 * C1214 + C59728 * C1223 +
             C59735 * C1695 - C59736 * C1678 - C59735 * C1696 + C59729 * C1714 +
             C59737 * C2239 - C59738 * C2233 - C59737 * C2240 + C59730 * C2245 +
             C59739 * C8867 - C59740 * C8866 - C59739 * C8868 +
             C59731 * C8869) *
                C152084 * C152340 * C152246 -
            (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
             C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
             C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
             C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
                C152084 * C152340 * C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152458 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C3315 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152458) *
               C152204) *
              C152118 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152458) *
               C3315 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152458 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          (((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                C152340 * C152458 -
            ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
             C51882 * C51195) *
                C152340 * C152246) *
               C3315 +
           ((C52634 * C51195 + (C52633 + C52632) * C51196 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C51197) *
                C152340 * C152246 -
            ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
             C51578 * C51195) *
                C152340 * C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C152458 -
            (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152246) *
               C3315 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
                C152246 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C152458) *
               C152204) *
              C152118 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
                C152246 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C152458) *
               C3315 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
                C152458 -
            ((C68675 + C68676) * C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152246) *
               C152204) *
              C152127 +
          (((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
             C65711 * C14963) *
                C152458 -
            ((C55021 + C55022) * C152084 * C14963 +
             (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
                C152246) *
               C3315 +
           ((C52634 * C152084 * C14961 + (C54800 + C54799) * C152084 * C14962 +
             (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 +
              C51193 * C3183 + C51200 * C10185 - C51201 * C10184 -
              C51200 * C10186 + C152376 * C10187) *
                 C152084 * C14963) *
                C152246 -
            ((C54799 + C54800) * C152084 * C14963 +
             (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
                C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152553 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152549 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152535 -
           ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C51195) *
               C152340 * C152159 * C152509) *
              C3455 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C152549 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152553 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152535 +
           ((C53414 + C53413) * C51195 + (C53412 + C53411) * C51196 +
            (C51198 * C1503 - C51199 * C1495 - C51198 * C1504 + C51193 * C1519 +
             C51200 * C1517 - C51201 * C1502 - C51200 * C1518 +
             C152376 * C1526) *
                C51197) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C3315 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152204) *
              C152552 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C152204 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C3315) *
              C152545 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C3315 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C152204) *
              C152528 +
          ((C52078 * C51195 + (C52092 + C52091) * C51196 +
            (C51198 * C394 - C51199 * C372 - C51198 * C395 + C51193 * C408 +
             C51200 * C396 - C51201 * C373 - C51200 * C397 + C152376 * C409) *
                C51197) *
               C152340 * C152159 * C152204 -
           ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
            C51274 * C51195) *
               C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C3315 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152204) *
              C152552 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C3315) *
              C152545 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C3315 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152204) *
              C152528 +
          ((C59733 * C374 - C59734 * C362 - C59733 * C375 + C59728 * C398 +
            C59735 * C388 - C59736 * C369 - C59735 * C389 + C59729 * C405 +
            C59737 * C1503 - C59738 * C1495 - C59737 * C1504 + C59730 * C1519 +
            C59739 * C1517 - C59740 * C1502 - C59739 * C1518 + C59731 * C1526) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152553 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152549 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152535 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C152159 * C152509) *
              C3455 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152549 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152553 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152535 +
           (C59733 * C1507 - C59734 * C1497 - C59733 * C1508 + C59728 * C1521 +
            C59735 * C1513 - C59736 * C1500 - C59735 * C1514 + C59729 * C1524 +
            C59737 * C8103 - C59738 * C8099 - C59737 * C8104 + C59730 * C8111 +
            C59739 * C8109 - C59740 * C8102 - C59739 * C8110 + C59731 * C8114) *
               C152084 * C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C3315 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C152204) *
              C152552 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
               C152159 * C152204 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C3315) *
              C152545 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152159 * C3315 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C152204) *
              C152528 +
          ((C52078 * C152084 * C14961 + (C52633 + C52632) * C152084 * C14962 +
            (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 + C51193 * C1709 +
             C51200 * C1707 - C51201 * C1684 - C51200 * C1708 +
             C152376 * C1720) *
                C152084 * C14963) *
               C152159 * C152204 -
           ((C51880 + C51881) * C152084 * C14963 +
            (C51879 + C51878) * C152084 * C14962 + C51274 * C152084 * C14961) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C152553 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C152549 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C152159 * C152535 -
           ((C67776 + C67775) * C152084 * C14963 +
            (C67774 + C67773) * C152084 * C14962 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C152084 * C14961) *
               C152159 * C152509) *
              C3455 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
               C152159 * C152549 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C152553 -
           ((C67554 + C67553) * C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C152535 +
           ((C53414 + C53413) * C152084 * C14961 +
            (C51198 * C2237 - C51199 * C2232 - C51198 * C2238 + C51193 * C2244 +
             C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353) *
                C152084 * C14962 +
            (C51198 * C8339 - C51199 * C8333 - C51198 * C8340 + C51193 * C8351 +
             C51200 * C8349 - C51201 * C8338 - C51200 * C8350 +
             C152376 * C8356) *
                C152084 * C14963) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C4321 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152200 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C4321) *
               C152207 +
           ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
             C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
             C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
             C59739 * C8105 - C59740 * C8100 - C59739 * C8106 +
             C59731 * C8112) *
                C152084 * C152340 * C4321 -
            (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
             C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
             C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
             C59733 * C1699 - C59734 * C1680 - C59733 * C1700 +
             C59728 * C1716) *
                C152084 * C152340 * C152246) *
               C3799) *
              C152443 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C4321) *
               C152200 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C4321 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152207 +
           ((C59733 * C1697 - C59734 * C1679 - C59733 * C1698 + C59728 * C1715 +
             C59735 * C2237 - C59736 * C2232 - C59735 * C2238 + C59729 * C2244 +
             C59737 * C8343 - C59738 * C8335 - C59737 * C8344 + C59730 * C8353 +
             C59739 * C9089 - C59740 * C9086 - C59739 * C9090 +
             C59731 * C9092) *
                C152084 * C152340 * C152246 -
            (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
             C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
             C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
             C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
                C152084 * C152340 * C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C4321 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C152200 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C4321) *
               C152207 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C51195 +
             (C51570 + C51571) * C51196 + C51579 * C51197) *
                C152340 * C4321 -
            ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
             (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
              C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
              C51198 * C1700 + C51193 * C1716) *
                 C51195) *
                C152340 * C152246) *
               C3799) *
              C152443 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C4321) *
               C152200 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C4321 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152207 +
           (((C53732 + C53731) * C51195 + (C53730 + C53729) * C51196 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C51197) *
                C152340 * C152246 -
            ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
             (C51571 + C51570) * C51195) *
                C152340 * C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C4321 -
            (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152246) *
               C152200 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
                C152246 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C4321) *
               C152207 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152084 * C14961 +
             (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
                C4321 -
            ((C67053 + C67054) * C152084 * C14963 +
             (C67052 + C67051) * C152084 * C14962 +
             (C67050 + C67049) * C152084 * C14961) *
                C152246) *
               C3799) *
              C152443 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
                C152246 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C4321) *
               C152200 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
                C4321 -
            ((C68675 + C68676) * C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152246) *
               C152207 +
           (((C53732 + C53731) * C152084 * C14961 +
             (C67553 + C67554) * C152084 * C14962 +
             (C51198 * C9657 - C51199 * C9651 - C51198 * C9658 +
              C51193 * C9669 + C51200 * C10407 - C51201 * C10404 -
              C51200 * C10408 + C152376 * C10410) *
                 C152084 * C14963) *
                C152246 -
            ((C67554 + C67553) * C152084 * C14963 +
             (C53731 + C53732) * C152084 * C14962 +
             (C51571 + C51570) * C152084 * C14961) *
                C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152242 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152249 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C4993) *
              C152200 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152249 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152242 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C4993) *
              C152207 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152242 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152249 +
           (C59733 * C1701 - C59734 * C1681 - C59733 * C1702 + C59728 * C1717 +
            C59735 * C8341 - C59736 * C8334 - C59735 * C8342 + C59729 * C8352 +
            C59737 * C8347 - C59738 * C8337 - C59737 * C8348 + C59730 * C8355 +
            C59739 * C60866 - C59740 * C60865 - C59739 * C60867 +
            C59731 * C60868) *
               C152084 * C152340 * C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152242 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152249 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C4993) *
              C152200 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152249 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152242 -
           ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
            (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C51195) *
               C152340 * C4993) *
              C152207 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152242 -
           ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C152249 +
           ((C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C51195 +
            (C51198 * C1703 - C51199 * C1682 - C51198 * C1704 + C51193 * C1718 +
             C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351) *
                C51196 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C51197) *
               C152340 * C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152242 -
           (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152249 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            C68370 * C14963) *
               C4993) *
              C152200 +
          (((C66435 + C66436) * C152084 * C14961 +
            (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
               C152249 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152242 -
           ((C69099 + C69100) * C152084 * C14963 +
            (C67048 + C67047) * C152084 * C14962 + C67032 * C14961) *
               C4993) *
              C152207 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C152242 -
           ((C67053 + C67054) * C152084 * C14963 +
            (C67052 + C67051) * C152084 * C14962 +
            (C67050 + C67049) * C152084 * C14961) *
               C152249 +
           (C67056 * C14961 + (C67054 + C67053) * C152084 * C14962 +
            (C51198 * C9663 - C51199 * C9654 - C51198 * C9664 + C51193 * C9672 +
             C51200 * C61702 - C51201 * C61701 - C51200 * C61703 +
             C152376 * C61704) *
                C152084 * C14963) *
               C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C51198 * C144 - C51199 * C136 - C51198 * C145 +
                  C51193 * C160 + C51200 * C380 - C51201 * C365 -
                  C51200 * C381 + C152376 * C401) *
                     C51195 +
                 (C51263 + C51264) * C51196 + C51273 * C51197) *
                    C152340 * C4321 -
                (C51882 * C51197 + (C51872 + C51873) * C51196 +
                 (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
                  C152376 * C1221 + C51198 * C633 - C51199 * C618 -
                  C51198 * C634 + C51193 * C654) *
                     C51195) *
                    C152340 * C152246) *
                   C3315 +
               (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
                  C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
                  C51200 * C1700 + C152376 * C1716) *
                     C51195 +
                 (C52628 + C52629) * C51196 + C52634 * C51197) *
                    C152340 * C152246 -
                (C51578 * C51197 + (C51568 + C51569) * C51196 +
                 (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                  C152376 * C402 + C51198 * C380 - C51199 * C365 -
                  C51198 * C381 + C51193 * C401) *
                     C51195) *
                    C152340 * C4321) *
                   C152204) *
                  C152543 +
              ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
                 C52287 * C51197) *
                    C152340 * C152246 -
                (C51274 * C51197 + (C51266 + C51265) * C51196 +
                 (C51264 + C51263) * C51195) *
                    C152340 * C4321) *
                   C3315 +
               (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
                 C52078 * C51197) *
                    C152340 * C4321 -
                ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
                 (C52629 + C52628) * C51195) *
                    C152340 * C152246) *
                   C152204) *
                  C152526 +
              (((C51273 * C51195 + (C51268 + C51267) * C51196 +
                 C51275 * C51197) *
                    C152340 * C4321 -
                ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
                 C51882 * C51195) *
                    C152340 * C152246) *
                   C3315 +
               ((C52634 * C51195 + (C52633 + C52632) * C51196 +
                 (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
                  C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
                  C51200 * C2078 + C152376 * C2079) *
                     C51197) *
                    C152340 * C152246 -
                ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
                 C51578 * C51195) *
                    C152340 * C4321) *
                   C152204) *
                  C152493) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C4321 -
               (C51882 * C51197 + (C51872 + C51873) * C51196 +
                (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
                 C152376 * C1221 + C51198 * C633 - C51199 * C618 -
                 C51198 * C634 + C51193 * C654) *
                    C51195) *
                   C152340 * C152246) *
                  C152553 +
              (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
                 C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
                 C51200 * C1700 + C152376 * C1716) *
                    C51195 +
                (C52628 + C52629) * C51196 + C52634 * C51197) *
                   C152340 * C152246 -
               (C51578 * C51197 + (C51568 + C51569) * C51196 +
                (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                 C152376 * C402 + C51198 * C380 - C51199 * C365 -
                 C51198 * C381 + C51193 * C401) *
                    C51195) *
                   C152340 * C4321) *
                  C152549 +
              (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
                 C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
                 C152376 * C1522) *
                    C51195 +
                (C51570 + C51571) * C51196 + C51579 * C51197) *
                   C152340 * C4321 -
               ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
                (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
                 C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
                 C51198 * C1700 + C51193 * C1716) *
                    C51195) *
                   C152340 * C152246) *
                  C152535 +
              (((C51198 * C2235 - C51199 * C2231 - C51198 * C2236 +
                 C51193 * C2243 + C51200 * C8345 - C51201 * C8336 -
                 C51200 * C8346 + C152376 * C8354) *
                    C51195 +
                (C51198 * C2237 - C51199 * C2232 - C51198 * C2238 +
                 C51193 * C2244 + C51200 * C8343 - C51201 * C8335 -
                 C51200 * C8344 + C152376 * C8353) *
                    C51196 +
                (C51198 * C2239 - C51199 * C2233 - C51198 * C2240 +
                 C51193 * C2245 + C51200 * C8867 - C51201 * C8866 -
                 C51200 * C8868 + C152376 * C8869) *
                    C51197) *
                   C152340 * C152246 -
               ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
                (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
                 C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
                 C51198 * C1510 + C51193 * C1522) *
                    C51195) *
                   C152340 * C4321) *
                  C152509) *
             C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152554 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152551 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152538 -
           ((C55021 + C55022) * C51197 + (C55023 + C55024) * C51196 +
            (C51200 * C3173 - C51201 * C3169 - C51200 * C3174 +
             C152376 * C3181 + C51198 * C2643 - C51199 * C2632 -
             C51198 * C2644 + C51193 * C2656) *
                C51195) *
               C152340 * C152515) *
              C3315 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152551 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152554 -
           ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
            (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C51195) *
               C152340 * C152538 +
           ((C51198 * C3173 - C51199 * C3169 - C51198 * C3174 + C51193 * C3181 +
             C51200 * C9659 - C51201 * C9652 - C51200 * C9660 +
             C152376 * C9670) *
                C51195 +
            (C51198 * C3175 - C51199 * C3170 - C51198 * C3176 + C51193 * C3182 +
             C51200 * C9657 - C51201 * C9651 - C51200 * C9658 +
             C152376 * C9669) *
                C51196 +
            (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 + C51193 * C3183 +
             C51200 * C10185 - C51201 * C10184 - C51200 * C10186 +
             C152376 * C10187) *
                C51197) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C4321 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C3315 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C4321) *
               C152204) *
              C152543 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C4321) *
               C3315 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C4321 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152204) *
              C152526 +
          (((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
             C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
             C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
             C59739 * C1505 - C59740 * C1496 - C59739 * C1506 +
             C59731 * C1520) *
                C152084 * C152340 * C4321 -
            (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
             C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
             C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
             C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
                C152084 * C152340 * C152246) *
               C3315 +
           ((C59733 * C1213 - C59734 * C1205 - C59733 * C1214 + C59728 * C1223 +
             C59735 * C1695 - C59736 * C1678 - C59735 * C1696 + C59729 * C1714 +
             C59737 * C2239 - C59738 * C2233 - C59737 * C2240 + C59730 * C2245 +
             C59739 * C8867 - C59740 * C8866 - C59739 * C8868 +
             C59731 * C8869) *
                C152084 * C152340 * C152246 -
            (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
             C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
             C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
             C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
                C152084 * C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C4321 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C152553 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152246 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C4321) *
              C152549 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C4321 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152246) *
              C152535 +
          ((C59733 * C2235 - C59734 * C2231 - C59733 * C2236 + C59728 * C2243 +
            C59735 * C8345 - C59736 * C8336 - C59735 * C8346 + C59729 * C8354 +
            C59737 * C9087 - C59738 * C9085 - C59737 * C9088 + C59730 * C9091 +
            C59739 * C61324 - C59740 * C61323 - C59739 * C61325 +
            C59731 * C61326) *
               C152084 * C152340 * C152246 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152554 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152551 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152538 -
           (C59739 * C10405 - C59740 * C10403 - C59739 * C10406 +
            C59731 * C10409 + C59737 * C9659 - C59738 * C9652 - C59737 * C9660 +
            C59730 * C9670 + C59735 * C3173 - C59736 * C3169 - C59735 * C3174 +
            C59729 * C3181 + C59733 * C2643 - C59734 * C2632 - C59733 * C2644 +
            C59728 * C2656) *
               C152084 * C152340 * C152515) *
              C3315 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152551 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152554 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C152538 +
           (C59733 * C3173 - C59734 * C3169 - C59733 * C3174 + C59728 * C3181 +
            C59735 * C9659 - C59736 * C9652 - C59735 * C9660 + C59729 * C9670 +
            C59737 * C10405 - C59738 * C10403 - C59737 * C10406 +
            C59730 * C10409 + C59739 * C62160 - C59740 * C62159 -
            C59739 * C62161 + C59731 * C62162) *
               C152084 * C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C4321 -
            (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152246) *
               C3315 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
                C152246 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C4321) *
               C152204) *
              C152543 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
                C152246 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C4321) *
               C3315 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
                C4321 -
            ((C68675 + C68676) * C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152246) *
               C152204) *
              C152526 +
          (((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
             C65711 * C14963) *
                C4321 -
            ((C55021 + C55022) * C152084 * C14963 +
             (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
                C152246) *
               C3315 +
           ((C52634 * C152084 * C14961 + (C54800 + C54799) * C152084 * C14962 +
             (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 +
              C51193 * C3183 + C51200 * C10185 - C51201 * C10184 -
              C51200 * C10186 + C152376 * C10187) *
                 C152084 * C14963) *
                C152246 -
            ((C54799 + C54800) * C152084 * C14963 +
             (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C4321 -
           (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152246) *
              C152553 +
          (((C66435 + C66436) * C152084 * C14961 +
            (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
               C152246 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C4321) *
              C152549 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C4321 -
           ((C67053 + C67054) * C152084 * C14963 +
            (C67052 + C67051) * C152084 * C14962 +
            (C67050 + C67049) * C152084 * C14961) *
               C152246) *
              C152535 +
          (((C67773 + C67774) * C152084 * C14961 +
            (C67775 + C67776) * C152084 * C14962 +
            (C51198 * C10405 - C51199 * C10403 - C51198 * C10406 +
             C51193 * C10409 + C51200 * C62160 - C51201 * C62159 -
             C51200 * C62161 + C152376 * C62162) *
                C152084 * C14963) *
               C152246 -
           ((C67776 + C67775) * C152084 * C14963 +
            (C67774 + C67773) * C152084 * C14962 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C152084 * C14961) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152554 -
           (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152551 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            C68370 * C14963) *
               C152538 -
           ((C68367 + C68368) * C152084 * C14963 +
            (C68366 + C68365) * C152084 * C14962 + C68356 * C14961) *
               C152515) *
              C3315 +
          (((C66435 + C66436) * C152084 * C14961 +
            (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
               C152551 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152554 -
           ((C69099 + C69100) * C152084 * C14963 +
            (C67048 + C67047) * C152084 * C14962 + C67032 * C14961) *
               C152538 +
           (C69094 * C14961 + (C69100 + C69099) * C152084 * C14962 +
            (C51198 * C18811 - C51199 * C18809 - C51198 * C18812 +
             C51193 * C18815 + C51200 * C69081 - C51201 * C69080 -
             C51200 * C69082 + C152376 * C69083) *
                C152084 * C14963) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152242 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152249 +
            (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
             C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
             C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
             C59739 * C8341 - C59740 * C8334 - C59739 * C8342 +
             C59731 * C8352) *
                C152084 * C152340 * C4993) *
               C3315 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152249 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152242 -
            (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
             C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
             C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
             C59733 * C1691 - C59734 * C1676 - C59733 * C1692 +
             C59728 * C1712) *
                C152084 * C152340 * C4993) *
               C152204) *
              C152443 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152249 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152242 -
            (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
             C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
             C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
             C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
                C152084 * C152340 * C4993) *
               C3315 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152242 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152249 +
            (C59733 * C1689 - C59734 * C1675 - C59733 * C1690 + C59728 * C1711 +
             C59735 * C1703 - C59736 * C1682 - C59735 * C1704 + C59729 * C1718 +
             C59737 * C8339 - C59738 * C8333 - C59737 * C8340 + C59730 * C8351 +
             C59739 * C8349 - C59740 * C8338 - C59739 * C8350 +
             C59731 * C8356) *
                C152084 * C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152242 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152249 +
            ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
              C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
              C152376 * C1712) *
                 C51195 +
             (C51874 + C51875) * C51196 + C51883 * C51197) *
                C152340 * C4993) *
               C3315 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152249 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152242 -
            ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
             (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
              C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
              C51198 * C1692 + C51193 * C1712) *
                 C51195) *
                C152340 * C4993) *
               C152204) *
              C152443 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152249 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152242 -
            ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
             (C51875 + C51874) * C51195) *
                C152340 * C4993) *
               C3315 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152242 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152249 +
            ((C54802 + C54801) * C51195 + (C54800 + C54799) * C51196 +
             (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
              C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
              C51200 * C1708 + C152376 * C1720) *
                 C51197) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C152242 -
            (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152249 +
            (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
             C68370 * C14963) *
                C4993) *
               C3315 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
                C152249 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C152242 -
            ((C69099 + C69100) * C152084 * C14963 +
             (C67048 + C67047) * C152084 * C14962 + C67032 * C14961) *
                C4993) *
               C152204) *
              C152443 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
                C152249 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C152242 -
            ((C68885 + C68886) * C152084 * C14963 +
             (C55023 + C55024) * C152084 * C14962 + C65718 * C14961) *
                C4993) *
               C3315 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
                C152242 -
            ((C68675 + C68676) * C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152249 +
            (C68670 * C14961 + (C68676 + C68675) * C152084 * C14962 +
             (C51198 * C9665 - C51199 * C9655 - C51198 * C9666 +
              C51193 * C9673 + C51200 * C9667 - C51201 * C9656 -
              C51200 * C9668 + C152376 * C9674) *
                 C152084 * C14963) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C4321 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152246) *
              C152553 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152246 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C4321) *
              C152549 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C4321 -
           ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C152246) *
              C152535 +
          (((C51198 * C2235 - C51199 * C2231 - C51198 * C2236 + C51193 * C2243 +
             C51200 * C8345 - C51201 * C8336 - C51200 * C8346 +
             C152376 * C8354) *
                C51195 +
            (C51198 * C2237 - C51199 * C2232 - C51198 * C2238 + C51193 * C2244 +
             C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353) *
                C51196 +
            (C51198 * C2239 - C51199 * C2233 - C51198 * C2240 + C51193 * C2245 +
             C51200 * C8867 - C51201 * C8866 - C51200 * C8868 +
             C152376 * C8869) *
                C51197) *
               C152340 * C152246 -
           ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C51195) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C4321 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C3315 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C4321) *
               C3315 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C4321 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          (((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                C152340 * C4321 -
            ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
             C51882 * C51195) *
                C152340 * C152246) *
               C3315 +
           ((C52634 * C51195 + (C52633 + C52632) * C51196 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C51197) *
                C152340 * C152246 -
            ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
             C51578 * C51195) *
                C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C4321 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C3315 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C4321) *
               C152204) *
              C152543 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C4321) *
               C3315 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C4321 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152204) *
              C152526 +
          (((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
             C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
             C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
             C59739 * C1505 - C59740 * C1496 - C59739 * C1506 +
             C59731 * C1520) *
                C152084 * C152340 * C4321 -
            (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
             C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
             C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
             C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
                C152084 * C152340 * C152246) *
               C3315 +
           ((C59733 * C1213 - C59734 * C1205 - C59733 * C1214 + C59728 * C1223 +
             C59735 * C1695 - C59736 * C1678 - C59735 * C1696 + C59729 * C1714 +
             C59737 * C2239 - C59738 * C2233 - C59737 * C2240 + C59730 * C2245 +
             C59739 * C8867 - C59740 * C8866 - C59739 * C8868 +
             C59731 * C8869) *
                C152084 * C152340 * C152246 -
            (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
             C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
             C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
             C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
                C152084 * C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C4321 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C152553 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152246 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C4321) *
              C152549 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C4321 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152246) *
              C152535 +
          ((C59733 * C2235 - C59734 * C2231 - C59733 * C2236 + C59728 * C2243 +
            C59735 * C8345 - C59736 * C8336 - C59735 * C8346 + C59729 * C8354 +
            C59737 * C9087 - C59738 * C9085 - C59737 * C9088 + C59730 * C9091 +
            C59739 * C61324 - C59740 * C61323 - C59739 * C61325 +
            C59731 * C61326) *
               C152084 * C152340 * C152246 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C4321 -
            (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152246) *
               C3315 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
                C152246 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C4321) *
               C152204) *
              C152543 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
                C152246 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C4321) *
               C3315 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
                C4321 -
            ((C68675 + C68676) * C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152246) *
               C152204) *
              C152526 +
          (((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
             C65711 * C14963) *
                C4321 -
            ((C55021 + C55022) * C152084 * C14963 +
             (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
                C152246) *
               C3315 +
           ((C52634 * C152084 * C14961 + (C54800 + C54799) * C152084 * C14962 +
             (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 +
              C51193 * C3183 + C51200 * C10185 - C51201 * C10184 -
              C51200 * C10186 + C152376 * C10187) *
                 C152084 * C14963) *
                C152246 -
            ((C54799 + C54800) * C152084 * C14963 +
             (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C4321 -
           (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152246) *
              C152553 +
          (((C66435 + C66436) * C152084 * C14961 +
            (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
               C152246 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C4321) *
              C152549 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C4321 -
           ((C67053 + C67054) * C152084 * C14963 +
            (C67052 + C67051) * C152084 * C14962 +
            (C67050 + C67049) * C152084 * C14961) *
               C152246) *
              C152535 +
          (((C67773 + C67774) * C152084 * C14961 +
            (C67775 + C67776) * C152084 * C14962 +
            (C51198 * C10405 - C51199 * C10403 - C51198 * C10406 +
             C51193 * C10409 + C51200 * C62160 - C51201 * C62159 -
             C51200 * C62161 + C152376 * C62162) *
                C152084 * C14963) *
               C152246 -
           ((C67776 + C67775) * C152084 * C14963 +
            (C67774 + C67773) * C152084 * C14962 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C152084 * C14961) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C152159 * C152457 -
               (C51578 * C51197 + (C51568 + C51569) * C51196 +
                (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                 C152376 * C402 + C51198 * C380 - C51199 * C365 -
                 C51198 * C381 + C51193 * C401) *
                    C51195) *
                   C152340 * C152159 * C152204) *
                  C851 +
              (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
                C52078 * C51197) *
                   C152340 * C152159 * C152204 -
               (C51274 * C51197 + (C51266 + C51265) * C51196 +
                (C51264 + C51263) * C51195) *
                   C152340 * C152159 * C152457) *
                  C852 +
              ((C51273 * C51195 + (C51268 + C51267) * C51196 +
                C51275 * C51197) *
                   C152340 * C152159 * C152457 -
               ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
                C51578 * C51195) *
                   C152340 * C152159 * C152204) *
                  C853 +
              ((C52078 * C51195 + (C52092 + C52091) * C51196 +
                (C51198 * C394 - C51199 * C372 - C51198 * C395 + C51193 * C408 +
                 C51200 * C396 - C51201 * C373 - C51200 * C397 +
                 C152376 * C409) *
                    C51197) *
                   C152340 * C152159 * C152204 -
               ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
                C51274 * C51195) *
                   C152340 * C152159 * C152457) *
                  C152503) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C152159 * C1851 -
               (C51578 * C51197 + (C51568 + C51569) * C51196 +
                (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                 C152376 * C402 + C51198 * C380 - C51199 * C365 -
                 C51198 * C381 + C51193 * C401) *
                    C51195) *
                   C152340 * C152159 * C1852 +
               ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
                 C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
                 C152376 * C1522) *
                    C51195 +
                (C51570 + C51571) * C51196 + C51579 * C51197) *
                   C152340 * C152159 * C1853 -
               ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
                (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
                 C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
                 C51198 * C1510 + C51193 * C1522) *
                    C51195) *
                   C152340 * C152159 * C152509) *
                  C152443 +
              (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
                C52078 * C51197) *
                   C152340 * C152159 * C1852 -
               (C51274 * C51197 + (C51266 + C51265) * C51196 +
                (C51264 + C51263) * C51195) *
                   C152340 * C152159 * C1851 -
               ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
                (C51571 + C51570) * C51195) *
                   C152340 * C152159 * C1853 +
               ((C53414 + C53413) * C51195 + (C53412 + C53411) * C51196 +
                (C51198 * C1503 - C51199 * C1495 - C51198 * C1504 +
                 C51193 * C1519 + C51200 * C1517 - C51201 * C1502 -
                 C51200 * C1518 + C152376 * C1526) *
                    C51197) *
                   C152340 * C152159 * C152509) *
                  C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C2393 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C2394 +
            ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
              C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
              C152376 * C1712) *
                 C51195 +
             (C51874 + C51875) * C51196 + C51883 * C51197) *
                C152340 * C152502) *
               C152457 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C2394 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C2393 -
            ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
             (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
              C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
              C51198 * C1692 + C51193 * C1712) *
                 C51195) *
                C152340 * C152502) *
               C152204) *
              C152443 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C2394 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C2393 -
            ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
             (C51875 + C51874) * C51195) *
                C152340 * C152502) *
               C152457 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C2393 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C2394 +
            ((C54802 + C54801) * C51195 + (C54800 + C54799) * C51196 +
             (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
              C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
              C51200 * C1708 + C152376 * C1720) *
                 C51197) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152457 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152204) *
              C851 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152457) *
              C852 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152457 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152204) *
              C853 +
          ((C59733 * C374 - C59734 * C362 - C59733 * C375 + C59728 * C398 +
            C59735 * C388 - C59736 * C369 - C59735 * C389 + C59729 * C405 +
            C59737 * C1503 - C59738 * C1495 - C59737 * C1504 + C59730 * C1519 +
            C59739 * C1517 - C59740 * C1502 - C59739 * C1518 + C59731 * C1526) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C1851 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C1852 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C1853 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C152159 * C152509) *
              C152443 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C1852 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C1851 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C1853 +
           (C59733 * C1507 - C59734 * C1497 - C59733 * C1508 + C59728 * C1521 +
            C59735 * C1513 - C59736 * C1500 - C59735 * C1514 + C59729 * C1524 +
            C59737 * C8103 - C59738 * C8099 - C59737 * C8104 + C59730 * C8111 +
            C59739 * C8109 - C59740 * C8102 - C59739 * C8110 + C59731 * C8114) *
               C152084 * C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C2393 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C2394 +
            (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
             C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
             C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
             C59739 * C8341 - C59740 * C8334 - C59739 * C8342 +
             C59731 * C8352) *
                C152084 * C152340 * C152502) *
               C152457 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C2394 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C2393 -
            (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
             C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
             C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
             C59733 * C1691 - C59734 * C1676 - C59733 * C1692 +
             C59728 * C1712) *
                C152084 * C152340 * C152502) *
               C152204) *
              C152443 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C2394 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C2393 -
            (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
             C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
             C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
             C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
                C152084 * C152340 * C152502) *
               C152457 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C2393 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C2394 +
            (C59733 * C1689 - C59734 * C1675 - C59733 * C1690 + C59728 * C1711 +
             C59735 * C1703 - C59736 * C1682 - C59735 * C1704 + C59729 * C1718 +
             C59737 * C8339 - C59738 * C8333 - C59737 * C8340 + C59730 * C8351 +
             C59739 * C8349 - C59740 * C8338 - C59739 * C8350 +
             C59731 * C8356) *
                C152084 * C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C152457 -
           ((C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C152084 * C14963 +
            (C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716 + C51198 * C1209 - C51199 * C1203 -
             C51198 * C1210 + C51193 * C1221) *
                C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C152204) *
              C851 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 +
            (C54802 + C54801) * C152084 * C14963) *
               C152159 * C152204 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C152457) *
              C852 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152159 * C152457 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C152204) *
              C853 +
          ((C52078 * C152084 * C14961 + (C52633 + C52632) * C152084 * C14962 +
            (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 + C51193 * C1709 +
             C51200 * C1707 - C51201 * C1684 - C51200 * C1708 +
             C152376 * C1720) *
                C152084 * C14963) *
               C152159 * C152204 -
           ((C51880 + C51881) * C152084 * C14963 +
            (C51879 + C51878) * C152084 * C14962 + C51274 * C152084 * C14961) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C1851 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C1852 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C152159 * C1853 -
           ((C51200 * C8347 - C51201 * C8337 - C51200 * C8348 +
             C152376 * C8355 + C51198 * C8341 - C51199 * C8334 -
             C51198 * C8342 + C51193 * C8352) *
                C152084 * C14963 +
            (C51200 * C8345 - C51201 * C8336 - C51200 * C8346 +
             C152376 * C8354 + C51198 * C2235 - C51199 * C2231 -
             C51198 * C2236 + C51193 * C2243) *
                C152084 * C14962 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C152084 * C14961) *
               C152159 * C152509) *
              C152443 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 +
            (C54802 + C54801) * C152084 * C14963) *
               C152159 * C1852 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C1851 -
           ((C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351 + C51198 * C1703 - C51199 * C1682 -
             C51198 * C1704 + C51193 * C1718) *
                C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C1853 +
           ((C53414 + C53413) * C152084 * C14961 +
            (C51198 * C2237 - C51199 * C2232 - C51198 * C2238 + C51193 * C2244 +
             C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353) *
                C152084 * C14962 +
            (C51198 * C8339 - C51199 * C8333 - C51198 * C8340 + C51193 * C8351 +
             C51200 * C8349 - C51201 * C8338 - C51200 * C8350 +
             C152376 * C8356) *
                C152084 * C14963) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C2393 -
            (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C2394 +
            (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
             C68370 * C14963) *
                C152502) *
               C152457 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 +
             (C67047 + C67048) * C152084 * C14963) *
                C2394 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C2393 -
            ((C51200 * C9663 - C51201 * C9654 - C51200 * C9664 +
              C152376 * C9672 + C51198 * C9661 - C51199 * C9653 -
              C51198 * C9662 + C51193 * C9671) *
                 C152084 * C14963 +
             (C67048 + C67047) * C152084 * C14962 + C67032 * C14961) *
                C152502) *
               C152204) *
              C152443 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 +
             (C55024 + C55023) * C152084 * C14963) *
                C2394 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C2393 -
            ((C51200 * C9665 - C51201 * C9655 - C51200 * C9666 +
              C152376 * C9673 + C51198 * C2647 - C51199 * C2634 -
              C51198 * C2648 + C51193 * C2658) *
                 C152084 * C14963 +
             (C55023 + C55024) * C152084 * C14962 + C65718 * C14961) *
                C152502) *
               C152457 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
                C2393 -
            ((C68675 + C68676) * C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C2394 +
            (C68670 * C14961 + (C68676 + C68675) * C152084 * C14962 +
             (C51198 * C9665 - C51199 * C9655 - C51198 * C9666 +
              C51193 * C9673 + C51200 * C9667 - C51201 * C9656 -
              C51200 * C9668 + C152376 * C9674) *
                 C152084 * C14963) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C51198 * C144 - C51199 * C136 - C51198 * C145 +
                  C51193 * C160 + C51200 * C380 - C51201 * C365 -
                  C51200 * C381 + C152376 * C401) *
                     C51195 +
                 (C51263 + C51264) * C51196 + C51273 * C51197) *
                    C152340 * C152458 -
                (C51882 * C51197 + (C51872 + C51873) * C51196 +
                 (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
                  C152376 * C1221 + C51198 * C633 - C51199 * C618 -
                  C51198 * C634 + C51193 * C654) *
                     C51195) *
                    C152340 * C152246) *
                   C152457 +
               (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
                  C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
                  C51200 * C1700 + C152376 * C1716) *
                     C51195 +
                 (C52628 + C52629) * C51196 + C52634 * C51197) *
                    C152340 * C152246 -
                (C51578 * C51197 + (C51568 + C51569) * C51196 +
                 (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                  C152376 * C402 + C51198 * C380 - C51199 * C365 -
                  C51198 * C381 + C51193 * C401) *
                     C51195) *
                    C152340 * C152458) *
                   C152204) *
                  C359 +
              ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
                 C52287 * C51197) *
                    C152340 * C152246 -
                (C51274 * C51197 + (C51266 + C51265) * C51196 +
                 (C51264 + C51263) * C51195) *
                    C152340 * C152458) *
                   C152457 +
               (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
                 C52078 * C51197) *
                    C152340 * C152458 -
                ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
                 (C52629 + C52628) * C51195) *
                    C152340 * C152246) *
                   C152204) *
                  C360 +
              (((C51273 * C51195 + (C51268 + C51267) * C51196 +
                 C51275 * C51197) *
                    C152340 * C152458 -
                ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
                 C51882 * C51195) *
                    C152340 * C152246) *
                   C152457 +
               ((C52634 * C51195 + (C52633 + C52632) * C51196 +
                 (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
                  C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
                  C51200 * C2078 + C152376 * C2079) *
                     C51197) *
                    C152340 * C152246 -
                ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
                 C51578 * C51195) *
                    C152340 * C152458) *
                   C152204) *
                  C152493) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C152458 -
               (C51882 * C51197 + (C51872 + C51873) * C51196 +
                (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
                 C152376 * C1221 + C51198 * C633 - C51199 * C618 -
                 C51198 * C634 + C51193 * C654) *
                    C51195) *
                   C152340 * C152246) *
                  C1851 +
              (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
                 C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
                 C51200 * C1700 + C152376 * C1716) *
                    C51195 +
                (C52628 + C52629) * C51196 + C52634 * C51197) *
                   C152340 * C152246 -
               (C51578 * C51197 + (C51568 + C51569) * C51196 +
                (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                 C152376 * C402 + C51198 * C380 - C51199 * C365 -
                 C51198 * C381 + C51193 * C401) *
                    C51195) *
                   C152340 * C152458) *
                  C1852 +
              (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
                 C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
                 C152376 * C1522) *
                    C51195 +
                (C51570 + C51571) * C51196 + C51579 * C51197) *
                   C152340 * C152458 -
               ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
                (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
                 C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
                 C51198 * C1700 + C51193 * C1716) *
                    C51195) *
                   C152340 * C152246) *
                  C1853 +
              (((C51198 * C2235 - C51199 * C2231 - C51198 * C2236 +
                 C51193 * C2243 + C51200 * C8345 - C51201 * C8336 -
                 C51200 * C8346 + C152376 * C8354) *
                    C51195 +
                (C51198 * C2237 - C51199 * C2232 - C51198 * C2238 +
                 C51193 * C2244 + C51200 * C8343 - C51201 * C8335 -
                 C51200 * C8344 + C152376 * C8353) *
                    C51196 +
                (C51198 * C2239 - C51199 * C2233 - C51198 * C2240 +
                 C51193 * C2245 + C51200 * C8867 - C51201 * C8866 -
                 C51200 * C8868 + C152376 * C8869) *
                    C51197) *
                   C152340 * C152246 -
               ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
                (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
                 C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
                 C51198 * C1510 + C51193 * C1522) *
                    C51195) *
                   C152340 * C152458) *
                  C152509) *
             C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C3010 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C3011 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C3012 -
           ((C55021 + C55022) * C51197 + (C55023 + C55024) * C51196 +
            (C51200 * C3173 - C51201 * C3169 - C51200 * C3174 +
             C152376 * C3181 + C51198 * C2643 - C51199 * C2632 -
             C51198 * C2644 + C51193 * C2656) *
                C51195) *
               C152340 * C152515) *
              C152457 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C3011 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C3010 -
           ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
            (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C51195) *
               C152340 * C3012 +
           ((C51198 * C3173 - C51199 * C3169 - C51198 * C3174 + C51193 * C3181 +
             C51200 * C9659 - C51201 * C9652 - C51200 * C9660 +
             C152376 * C9670) *
                C51195 +
            (C51198 * C3175 - C51199 * C3170 - C51198 * C3176 + C51193 * C3182 +
             C51200 * C9657 - C51201 * C9651 - C51200 * C9658 +
             C152376 * C9669) *
                C51196 +
            (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 + C51193 * C3183 +
             C51200 * C10185 - C51201 * C10184 - C51200 * C10186 +
             C152376 * C10187) *
                C51197) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152458 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152457 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152458) *
               C152204) *
              C359 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152458) *
               C152457 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152458 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152204) *
              C360 +
          (((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
             C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
             C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
             C59739 * C1505 - C59740 * C1496 - C59739 * C1506 +
             C59731 * C1520) *
                C152084 * C152340 * C152458 -
            (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
             C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
             C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
             C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
                C152084 * C152340 * C152246) *
               C152457 +
           ((C59733 * C1213 - C59734 * C1205 - C59733 * C1214 + C59728 * C1223 +
             C59735 * C1695 - C59736 * C1678 - C59735 * C1696 + C59729 * C1714 +
             C59737 * C2239 - C59738 * C2233 - C59737 * C2240 + C59730 * C2245 +
             C59739 * C8867 - C59740 * C8866 - C59739 * C8868 +
             C59731 * C8869) *
                C152084 * C152340 * C152246 -
            (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
             C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
             C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
             C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
                C152084 * C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152458 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C1851 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152246 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152458) *
              C1852 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152458 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152246) *
              C1853 +
          ((C59733 * C2235 - C59734 * C2231 - C59733 * C2236 + C59728 * C2243 +
            C59735 * C8345 - C59736 * C8336 - C59735 * C8346 + C59729 * C8354 +
            C59737 * C9087 - C59738 * C9085 - C59737 * C9088 + C59730 * C9091 +
            C59739 * C61324 - C59740 * C61323 - C59739 * C61325 +
            C59731 * C61326) *
               C152084 * C152340 * C152246 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C3010 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C3011 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C3012 -
           (C59739 * C10405 - C59740 * C10403 - C59739 * C10406 +
            C59731 * C10409 + C59737 * C9659 - C59738 * C9652 - C59737 * C9660 +
            C59730 * C9670 + C59735 * C3173 - C59736 * C3169 - C59735 * C3174 +
            C59729 * C3181 + C59733 * C2643 - C59734 * C2632 - C59733 * C2644 +
            C59728 * C2656) *
               C152084 * C152340 * C152515) *
              C152457 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C3011 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C3010 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C3012 +
           (C59733 * C3173 - C59734 * C3169 - C59733 * C3174 + C59728 * C3181 +
            C59735 * C9659 - C59736 * C9652 - C59735 * C9660 + C59729 * C9670 +
            C59737 * C10405 - C59738 * C10403 - C59737 * C10406 +
            C59730 * C10409 + C59739 * C62160 - C59740 * C62159 -
            C59739 * C62161 + C59731 * C62162) *
               C152084 * C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C152458 -
            ((C65729 + C65730) * C152084 * C14963 +
             (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152246) *
               C152457 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 +
             (C51198 * C3173 - C51199 * C3169 - C51198 * C3174 +
              C51193 * C3181 + C51200 * C9659 - C51201 * C9652 -
              C51200 * C9660 + C152376 * C9670) *
                 C152084 * C14963) *
                C152246 -
            ((C66438 + C66437) * C152084 * C14963 +
             (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C152458) *
               C152204) *
              C359 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 +
             (C55024 + C55023) * C152084 * C14963) *
                C152246 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C152458) *
               C152457 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 +
             (C54802 + C54801) * C152084 * C14963) *
                C152458 -
            ((C51200 * C9657 - C51201 * C9651 - C51200 * C9658 +
              C152376 * C9669 + C51198 * C3175 - C51199 * C3170 -
              C51198 * C3176 + C51193 * C3182) *
                 C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152246) *
               C152204) *
              C360 +
          (((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
             C65711 * C14963) *
                C152458 -
            ((C55021 + C55022) * C152084 * C14963 +
             (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
                C152246) *
               C152457 +
           ((C52634 * C152084 * C14961 + (C54800 + C54799) * C152084 * C14962 +
             (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 +
              C51193 * C3183 + C51200 * C10185 - C51201 * C10184 -
              C51200 * C10186 + C152376 * C10187) *
                 C152084 * C14963) *
                C152246 -
            ((C54799 + C54800) * C152084 * C14963 +
             (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152458 -
           ((C65729 + C65730) * C152084 * C14963 +
            (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152246) *
              C1851 +
          (((C66435 + C66436) * C152084 * C14961 +
            (C66437 + C66438) * C152084 * C14962 +
            (C67047 + C67048) * C152084 * C14963) *
               C152246 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152458) *
              C1852 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C152458 -
           ((C67053 + C67054) * C152084 * C14963 +
            (C67052 + C67051) * C152084 * C14962 +
            (C67050 + C67049) * C152084 * C14961) *
               C152246) *
              C1853 +
          (((C67773 + C67774) * C152084 * C14961 +
            (C67775 + C67776) * C152084 * C14962 +
            (C51198 * C10405 - C51199 * C10403 - C51198 * C10406 +
             C51193 * C10409 + C51200 * C62160 - C51201 * C62159 -
             C51200 * C62161 + C152376 * C62162) *
                C152084 * C14963) *
               C152246 -
           ((C67776 + C67775) * C152084 * C14963 +
            (C67774 + C67773) * C152084 * C14962 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C152084 * C14961) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C3010 -
           (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C3011 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            C68370 * C14963) *
               C3012 -
           ((C68367 + C68368) * C152084 * C14963 +
            (C68366 + C68365) * C152084 * C14962 + C68356 * C14961) *
               C152515) *
              C152457 +
          (((C66435 + C66436) * C152084 * C14961 +
            (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
               C3011 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C3010 -
           ((C69099 + C69100) * C152084 * C14963 +
            (C67048 + C67047) * C152084 * C14962 + C67032 * C14961) *
               C3012 +
           (C69094 * C14961 + (C69100 + C69099) * C152084 * C14962 +
            (C51198 * C18811 - C51199 * C18809 - C51198 * C18812 +
             C51193 * C18815 + C51200 * C69081 - C51201 * C69080 -
             C51200 * C69082 + C152376 * C69083) *
                C152084 * C14963) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                C51200 * C380 - C51201 * C365 - C51200 * C381 +
                C152376 * C401) *
                   C51195 +
               (C51263 + C51264) * C51196 + C51273 * C51197) *
                  C152340 * C152159 * C152141 * C129 -
              (C51274 * C51197 + (C51266 + C51265) * C51196 +
               (C51264 + C51263) * C51195) *
                  C152340 * C152159 * C152141 * C130 +
              (C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                  C152340 * C152159 * C152141 * C131 -
              ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
               C51274 * C51195) *
                  C152340 * C152159 * C152141 * C132 +
              (C51275 * C51195 + (C51272 + C51271) * C51196 +
               (C51198 * C156 - C51199 * C142 - C51198 * C157 + C51193 * C166 +
                C51200 * C856 - C51201 * C855 - C51200 * C857 +
                C152376 * C858) *
                   C51197) *
                  C152340 * C152159 * C152141 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C152159 * C152546 -
               (C51578 * C51197 + (C51568 + C51569) * C51196 +
                (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                 C152376 * C402 + C51198 * C380 - C51199 * C365 -
                 C51198 * C381 + C51193 * C401) *
                    C51195) *
                   C152340 * C152159 * C152530 +
               ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
                 C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
                 C152376 * C1522) *
                    C51195 +
                (C51570 + C51571) * C51196 + C51579 * C51197) *
                   C152340 * C152159 * C152499) *
                  C359 +
              (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
                (C51574 + C51575) * C51197) *
                   C152340 * C152159 * C152530 -
               (C51274 * C51197 + (C51266 + C51265) * C51196 +
                (C51264 + C51263) * C51195) *
                   C152340 * C152159 * C152546 -
               ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
                (C51571 + C51570) * C51195) *
                   C152340 * C152159 * C152499) *
                  C360 +
              ((C51273 * C51195 + (C51268 + C51267) * C51196 +
                C51275 * C51197) *
                   C152340 * C152159 * C152546 -
               ((C51200 * C392 - C51201 * C371 - C51200 * C393 +
                 C152376 * C407 + C51198 * C390 - C51199 * C370 -
                 C51198 * C391 + C51193 * C406) *
                    C51197 +
                (C51575 + C51574) * C51196 + C51578 * C51195) *
                   C152340 * C152159 * C152530 +
               (C51579 * C51195 + (C51577 + C51576) * C51196 +
                (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
                 C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
                 C152376 * C1860) *
                    C51197) *
                   C152340 * C152159 * C152499) *
                  C152493) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C152547 -
               (C51882 * C51197 + (C51872 + C51873) * C51196 +
                (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
                 C152376 * C1221 + C51198 * C633 - C51199 * C618 -
                 C51198 * C634 + C51193 * C654) *
                    C51195) *
                   C152340 * C152532 +
               ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
                 C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
                 C152376 * C1712) *
                    C51195 +
                (C51874 + C51875) * C51196 + C51883 * C51197) *
                   C152340 * C152502) *
                  C152141 * C359 +
              (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
                (C51878 + C51879) * C51197) *
                   C152340 * C152532 -
               (C51274 * C51197 + (C51266 + C51265) * C51196 +
                (C51264 + C51263) * C51195) *
                   C152340 * C152547 -
               ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
                (C51875 + C51874) * C51195) *
                   C152340 * C152502) *
                  C152141 * C360 +
              ((C51273 * C51195 + (C51268 + C51267) * C51196 +
                C51275 * C51197) *
                   C152340 * C152547 -
               ((C51200 * C1217 - C51201 * C1207 - C51200 * C1218 +
                 C152376 * C1225 + C51198 * C643 - C51199 * C623 -
                 C51198 * C644 + C51193 * C659) *
                    C51197 +
                (C51879 + C51878) * C51196 + C51882 * C51195) *
                   C152340 * C152532 +
               (C51883 * C51195 + (C51881 + C51880) * C51196 +
                (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
                 C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
                 C152376 * C2858) *
                    C51197) *
                   C152340 * C152502) *
                  C152141 * C152493) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C152159 * C1401 -
               (C51578 * C51197 + (C51568 + C51569) * C51196 +
                (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                 C152376 * C402 + C51198 * C380 - C51199 * C365 -
                 C51198 * C381 + C51193 * C401) *
                    C51195) *
                   C152340 * C152159 * C1402 +
               ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
                 C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
                 C152376 * C1522) *
                    C51195 +
                (C51570 + C51571) * C51196 + C51579 * C51197) *
                   C152340 * C152159 * C152499) *
                  C152543 +
              (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
                C52078 * C51197) *
                   C152340 * C152159 * C1402 -
               (C51274 * C51197 + (C51266 + C51265) * C51196 +
                (C51264 + C51263) * C51195) *
                   C152340 * C152159 * C1401 -
               ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
                (C51571 + C51570) * C51195) *
                   C152340 * C152159 * C152499) *
                  C152526 +
              ((C51273 * C51195 + (C51268 + C51267) * C51196 +
                C51275 * C51197) *
                   C152340 * C152159 * C1401 -
               ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
                C51578 * C51195) *
                   C152340 * C152159 * C1402 +
               (C51579 * C51195 + (C51577 + C51576) * C51196 +
                (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
                 C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
                 C152376 * C1860) *
                    C51197) *
                   C152340 * C152159 * C152499) *
                  C152493) -
         0.25 * std::pow(Pi, 2.5) *
             (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                C51200 * C380 - C51201 * C365 - C51200 * C381 +
                C152376 * C401) *
                   C51195 +
               (C51263 + C51264) * C51196 + C51273 * C51197) *
                  C152340 * C152159 * C1489 -
              (C51578 * C51197 + (C51568 + C51569) * C51196 +
               (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
                C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                   C51195) *
                  C152340 * C152159 * C1490 +
              ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
                C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
                C152376 * C1522) *
                   C51195 +
               (C51570 + C51571) * C51196 + C51579 * C51197) *
                  C152340 * C152159 * C1491 -
              ((C51200 * C1515 - C51201 * C1501 - C51200 * C1516 +
                C152376 * C1525 + C51198 * C1505 - C51199 * C1496 -
                C51198 * C1506 + C51193 * C1520) *
                   C51197 +
               (C51200 * C1513 - C51201 * C1500 - C51200 * C1514 +
                C152376 * C1524 + C51198 * C1507 - C51199 * C1497 -
                C51198 * C1508 + C51193 * C1521) *
                   C51196 +
               (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
                C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
                C51198 * C1510 + C51193 * C1522) *
                   C51195) *
                  C152340 * C152159 * C1492 +
              ((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 +
                C51193 * C1523 + C51200 * C8105 - C51201 * C8100 -
                C51200 * C8106 + C152376 * C8112) *
                   C51195 +
               (C51198 * C1513 - C51199 * C1500 - C51198 * C1514 +
                C51193 * C1524 + C51200 * C8103 - C51201 * C8099 -
                C51200 * C8104 + C152376 * C8111) *
                   C51196 +
               (C51198 * C1515 - C51199 * C1501 - C51198 * C1516 +
                C51193 * C1525 + C51200 * C8552 - C51201 * C8551 -
                C51200 * C8553 + C152376 * C8554) *
                   C51197) *
                  C152340 * C152159 * C1493) *
             C152113 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C152547 -
               (C51882 * C51197 + (C51872 + C51873) * C51196 +
                (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
                 C152376 * C1221 + C51198 * C633 - C51199 * C618 -
                 C51198 * C634 + C51193 * C654) *
                    C51195) *
                   C152340 * C152532 +
               ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
                 C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
                 C152376 * C1712) *
                    C51195 +
                (C51874 + C51875) * C51196 + C51883 * C51197) *
                   C152340 * C152502) *
                  C1401 +
              (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
                 C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
                 C51200 * C1700 + C152376 * C1716) *
                    C51195 +
                (C52628 + C52629) * C51196 + C52634 * C51197) *
                   C152340 * C152532 -
               (C51578 * C51197 + (C51568 + C51569) * C51196 +
                (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                 C152376 * C402 + C51198 * C380 - C51199 * C365 -
                 C51198 * C381 + C51193 * C401) *
                    C51195) *
                   C152340 * C152547 -
               ((C51200 * C1705 - C51201 * C1683 - C51200 * C1706 +
                 C152376 * C1719 + C51198 * C1687 - C51199 * C1674 -
                 C51198 * C1688 + C51193 * C1710) *
                    C51197 +
                (C51200 * C1703 - C51201 * C1682 - C51200 * C1704 +
                 C152376 * C1718 + C51198 * C1689 - C51199 * C1675 -
                 C51198 * C1690 + C51193 * C1711) *
                    C51196 +
                (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
                 C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
                 C51198 * C1692 + C51193 * C1712) *
                    C51195) *
                   C152340 * C152502) *
                  C1402 +
              (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
                 C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
                 C152376 * C1522) *
                    C51195 +
                (C51570 + C51571) * C51196 + C51579 * C51197) *
                   C152340 * C152547 -
               ((C51200 * C2239 - C51201 * C2233 - C51200 * C2240 +
                 C152376 * C2245 + C51198 * C1695 - C51199 * C1678 -
                 C51198 * C1696 + C51193 * C1714) *
                    C51197 +
                (C51200 * C2237 - C51201 * C2232 - C51200 * C2238 +
                 C152376 * C2244 + C51198 * C1697 - C51199 * C1679 -
                 C51198 * C1698 + C51193 * C1715) *
                    C51196 +
                (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
                 C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
                 C51198 * C1700 + C51193 * C1716) *
                    C51195) *
                   C152340 * C152532 +
               ((C51198 * C1701 - C51199 * C1681 - C51198 * C1702 +
                 C51193 * C1717 + C51200 * C8341 - C51201 * C8334 -
                 C51200 * C8342 + C152376 * C8352) *
                    C51195 +
                (C51198 * C1703 - C51199 * C1682 - C51198 * C1704 +
                 C51193 * C1718 + C51200 * C8339 - C51201 * C8333 -
                 C51200 * C8340 + C152376 * C8351) *
                    C51196 +
                (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 +
                 C51193 * C1719 + C51200 * C9966 - C51201 * C9965 -
                 C51200 * C9967 + C152376 * C9968) *
                    C51197) *
                   C152340 * C152502) *
                  C152499) *
             C152113 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C2393 -
               (C51882 * C51197 + (C51872 + C51873) * C51196 +
                (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
                 C152376 * C1221 + C51198 * C633 - C51199 * C618 -
                 C51198 * C634 + C51193 * C654) *
                    C51195) *
                   C152340 * C2394 +
               ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
                 C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
                 C152376 * C1712) *
                    C51195 +
                (C51874 + C51875) * C51196 + C51883 * C51197) *
                   C152340 * C152502) *
                  C152141 * C152543 +
              (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
                C52287 * C51197) *
                   C152340 * C2394 -
               (C51274 * C51197 + (C51266 + C51265) * C51196 +
                (C51264 + C51263) * C51195) *
                   C152340 * C2393 -
               ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
                (C51875 + C51874) * C51195) *
                   C152340 * C152502) *
                  C152141 * C152526 +
              ((C51273 * C51195 + (C51268 + C51267) * C51196 +
                C51275 * C51197) *
                   C152340 * C2393 -
               ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
                C51882 * C51195) *
                   C152340 * C2394 +
               (C51883 * C51195 + (C51881 + C51880) * C51196 +
                (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
                 C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
                 C152376 * C2858) *
                    C51197) *
                   C152340 * C152502) *
                  C152141 * C152493) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C2393 -
               (C51882 * C51197 + (C51872 + C51873) * C51196 +
                (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
                 C152376 * C1221 + C51198 * C633 - C51199 * C618 -
                 C51198 * C634 + C51193 * C654) *
                    C51195) *
                   C152340 * C2394 +
               ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
                 C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
                 C152376 * C1712) *
                    C51195 +
                (C51874 + C51875) * C51196 + C51883 * C51197) *
                   C152340 * C152502) *
                  C152546 +
              (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
                 C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
                 C51200 * C1700 + C152376 * C1716) *
                    C51195 +
                (C52628 + C52629) * C51196 + C52634 * C51197) *
                   C152340 * C2394 -
               (C51578 * C51197 + (C51568 + C51569) * C51196 +
                (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                 C152376 * C402 + C51198 * C380 - C51199 * C365 -
                 C51198 * C381 + C51193 * C401) *
                    C51195) *
                   C152340 * C2393 -
               ((C51200 * C1705 - C51201 * C1683 - C51200 * C1706 +
                 C152376 * C1719 + C51198 * C1687 - C51199 * C1674 -
                 C51198 * C1688 + C51193 * C1710) *
                    C51197 +
                (C51200 * C1703 - C51201 * C1682 - C51200 * C1704 +
                 C152376 * C1718 + C51198 * C1689 - C51199 * C1675 -
                 C51198 * C1690 + C51193 * C1711) *
                    C51196 +
                (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
                 C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
                 C51198 * C1692 + C51193 * C1712) *
                    C51195) *
                   C152340 * C152502) *
                  C152530 +
              (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
                 C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
                 C152376 * C1522) *
                    C51195 +
                (C51570 + C51571) * C51196 + C51579 * C51197) *
                   C152340 * C2393 -
               ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
                (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
                 C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
                 C51198 * C1700 + C51193 * C1716) *
                    C51195) *
                   C152340 * C2394 +
               ((C51198 * C1701 - C51199 * C1681 - C51198 * C1702 +
                 C51193 * C1717 + C51200 * C8341 - C51201 * C8334 -
                 C51200 * C8342 + C152376 * C8352) *
                    C51195 +
                (C51198 * C1703 - C51199 * C1682 - C51198 * C1704 +
                 C51193 * C1718 + C51200 * C8339 - C51201 * C8333 -
                 C51200 * C8340 + C152376 * C8351) *
                    C51196 +
                (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 +
                 C51193 * C1719 + C51200 * C9966 - C51201 * C9965 -
                 C51200 * C9967 + C152376 * C9968) *
                    C51197) *
                   C152340 * C152502) *
                  C152499) *
             C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C2624 -
          (C51882 * C51197 + (C51872 + C51873) * C51196 +
           (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 + C152376 * C1221 +
            C51198 * C633 - C51199 * C618 - C51198 * C634 + C51193 * C654) *
               C51195) *
              C152340 * C2625 +
          ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
            C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
            C152376 * C1712) *
               C51195 +
           (C51874 + C51875) * C51196 + C51883 * C51197) *
              C152340 * C2626 -
          ((C51200 * C3177 - C51201 * C3171 - C51200 * C3178 + C152376 * C3183 +
            C51198 * C2639 - C51199 * C2630 - C51198 * C2640 + C51193 * C2654) *
               C51197 +
           (C51200 * C3175 - C51201 * C3170 - C51200 * C3176 + C152376 * C3182 +
            C51198 * C2641 - C51199 * C2631 - C51198 * C2642 + C51193 * C2655) *
               C51196 +
           (C51200 * C3173 - C51201 * C3169 - C51200 * C3174 + C152376 * C3181 +
            C51198 * C2643 - C51199 * C2632 - C51198 * C2644 + C51193 * C2656) *
               C51195) *
              C152340 * C2627 +
          ((C51198 * C2645 - C51199 * C2633 - C51198 * C2646 + C51193 * C2657 +
            C51200 * C9661 - C51201 * C9653 - C51200 * C9662 +
            C152376 * C9671) *
               C51195 +
           (C51198 * C2647 - C51199 * C2634 - C51198 * C2648 + C51193 * C2658 +
            C51200 * C9665 - C51201 * C9655 - C51200 * C9666 +
            C152376 * C9673) *
               C51196 +
           (C51198 * C2649 - C51199 * C2635 - C51198 * C2650 + C51193 * C2659 +
            C51200 * C18401 - C51201 * C18400 - C51200 * C18402 +
            C152376 * C18403) *
               C51197) *
              C152340 * C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C152141 * C129 -
          (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
           C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
           C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
           C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
              C152084 * C152340 * C152159 * C152141 * C130 +
          (C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
           C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
           C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
           C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
              C152084 * C152340 * C152159 * C152141 * C131 -
          (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
           C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
           C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
           C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
              C152084 * C152340 * C152159 * C152141 * C132 +
          (C59733 * C152 - C59734 * C140 - C59733 * C153 + C59728 * C164 +
           C59735 * C390 - C59736 * C370 - C59735 * C391 + C59729 * C406 +
           C59737 * C392 - C59738 * C371 - C59737 * C393 + C59730 * C407 +
           C59739 * C1858 - C59740 * C1857 - C59739 * C1859 + C59731 * C1860) *
              C152084 * C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C359 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152530 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C360 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152547 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152532 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C152141 * C359 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152532 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152547 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C152502) *
              C152141 * C360 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152547 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152532 +
           (C59733 * C639 - C59734 * C621 - C59733 * C640 + C59728 * C657 +
            C59735 * C1687 - C59736 * C1674 - C59735 * C1688 + C59729 * C1710 +
            C59737 * C1705 - C59738 * C1683 - C59737 * C1706 + C59730 * C1719 +
            C59739 * C9966 - C59740 * C9965 - C59739 * C9967 + C59731 * C9968) *
               C152084 * C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C152543 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C1402 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C152526 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C1489 -
          (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
           C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
           C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
           C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
              C152084 * C152340 * C152159 * C1490 +
          (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
           C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
           C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
           C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
              C152084 * C152340 * C152159 * C1491 -
          (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
           C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
           C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
           C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
              C152084 * C152340 * C152159 * C1492 +
          (C59733 * C1511 - C59734 * C1499 - C59733 * C1512 + C59728 * C1523 +
           C59735 * C8105 - C59736 * C8100 - C59735 * C8106 + C59729 * C8112 +
           C59737 * C8107 - C59738 * C8101 - C59737 * C8108 + C59730 * C8113 +
           C59739 * C60716 - C59740 * C60715 - C59739 * C60717 +
           C59731 * C60718) *
              C152084 * C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152547 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152532 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C1401 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152532 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152547 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C152502) *
              C1402 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152547 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152532 +
           (C59733 * C1701 - C59734 * C1681 - C59733 * C1702 + C59728 * C1717 +
            C59735 * C8341 - C59736 * C8334 - C59735 * C8342 + C59729 * C8352 +
            C59737 * C8347 - C59738 * C8337 - C59737 * C8348 + C59730 * C8355 +
            C59739 * C60866 - C59740 * C60865 - C59739 * C60867 +
            C59731 * C60868) *
               C152084 * C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C2393 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C2394 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C152141 * C152543 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C2394 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C2393 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C152502) *
              C152141 * C152526 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C2393 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C2394 +
           (C59733 * C639 - C59734 * C621 - C59733 * C640 + C59728 * C657 +
            C59735 * C1687 - C59736 * C1674 - C59735 * C1688 + C59729 * C1710 +
            C59737 * C1705 - C59738 * C1683 - C59737 * C1706 + C59730 * C1719 +
            C59739 * C9966 - C59740 * C9965 - C59739 * C9967 + C59731 * C9968) *
               C152084 * C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C2393 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C2394 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C152546 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C2394 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C2393 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C152502) *
              C152530 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C2393 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C2394 +
           (C59733 * C1701 - C59734 * C1681 - C59733 * C1702 + C59728 * C1717 +
            C59735 * C8341 - C59736 * C8334 - C59735 * C8342 + C59729 * C8352 +
            C59737 * C8347 - C59738 * C8337 - C59737 * C8348 + C59730 * C8355 +
            C59739 * C60866 - C59740 * C60865 - C59739 * C60867 +
            C59731 * C60868) *
               C152084 * C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C2624 -
          (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
           C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
           C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
           C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
              C152084 * C152340 * C2625 +
          (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
           C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
           C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
           C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
              C152084 * C152340 * C2626 -
          (C59739 * C10405 - C59740 * C10403 - C59739 * C10406 +
           C59731 * C10409 + C59737 * C9659 - C59738 * C9652 - C59737 * C9660 +
           C59730 * C9670 + C59735 * C3173 - C59736 * C3169 - C59735 * C3174 +
           C59729 * C3181 + C59733 * C2643 - C59734 * C2632 - C59733 * C2644 +
           C59728 * C2656) *
              C152084 * C152340 * C2627 +
          (C59733 * C2645 - C59734 * C2633 - C59733 * C2646 + C59728 * C2657 +
           C59735 * C9661 - C59736 * C9653 - C59735 * C9662 + C59729 * C9671 +
           C59737 * C9663 - C59738 * C9654 - C59737 * C9664 + C59730 * C9672 +
           C59739 * C61702 - C59740 * C61701 - C59739 * C61703 +
           C59731 * C61704) *
              C152084 * C152340 * C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C152084 * C14961 +
           (C51198 * C633 - C51199 * C618 - C51198 * C634 + C51193 * C654 +
            C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
            C152376 * C1221) *
               C152084 * C14962 +
           (C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
            C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
            C152376 * C1712) *
               C152084 * C14963) *
              C152159 * C152141 * C129 -
          ((C51875 + C51874) * C152084 * C14963 +
           (C51872 + C51873) * C152084 * C14962 +
           (C51264 + C51263) * C152084 * C14961) *
              C152159 * C152141 * C130 +
          (C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
           C51883 * C152084 * C14963) *
              C152159 * C152141 * C131 -
          ((C51880 + C51881) * C152084 * C14963 +
           (C51879 + C51878) * C152084 * C14962 + C51274 * C152084 * C14961) *
              C152159 * C152141 * C132 +
          (C51275 * C152084 * C14961 + (C52301 + C52300) * C152084 * C14962 +
           (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
            C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
            C152376 * C2858) *
               C152084 * C14963) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C51198 * C633 - C51199 * C618 - C51198 * C634 + C51193 * C654 +
             C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221) *
                C152084 * C14962 +
            (C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C152084 * C14963) *
               C152159 * C152546 -
           ((C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C152084 * C14963 +
            (C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716 + C51198 * C1209 - C51199 * C1203 -
             C51198 * C1210 + C51193 * C1221) *
                C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C152530 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C51198 * C1699 - C51199 * C1680 - C51198 * C1700 + C51193 * C1716 +
             C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243) *
                C152084 * C14962 +
            (C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C152084 * C14963) *
               C152159 * C152499) *
              C359 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 +
            (C54802 + C54801) * C152084 * C14963) *
               C152159 * C152530 -
           ((C51875 + C51874) * C152084 * C14963 +
            (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C152546 -
           ((C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351 + C51198 * C1703 - C51199 * C1682 -
             C51198 * C1704 + C51193 * C1718) *
                C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C152499) *
              C360 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C51883 * C152084 * C14963) *
               C152159 * C152546 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C152530 +
           (C51579 * C152084 * C14961 + (C53730 + C53729) * C152084 * C14962 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C152084 * C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152547 -
           ((C65729 + C65730) * C152084 * C14963 +
            (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152532 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            (C51198 * C2645 - C51199 * C2633 - C51198 * C2646 + C51193 * C2657 +
             C51200 * C9661 - C51201 * C9653 - C51200 * C9662 +
             C152376 * C9671) *
                C152084 * C14963) *
               C152502) *
              C152141 * C359 +
          (((C51873 + C51872) * C152084 * C14961 +
            (C51874 + C51875) * C152084 * C14962 +
            (C55024 + C55023) * C152084 * C14963) *
               C152532 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152547 -
           ((C51200 * C9665 - C51201 * C9655 - C51200 * C9666 +
             C152376 * C9673 + C51198 * C2647 - C51199 * C2634 -
             C51198 * C2648 + C51193 * C2658) *
                C152084 * C14963 +
            (C55023 + C55024) * C152084 * C14962 + C65718 * C14961) *
               C152502) *
              C152141 * C360 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152547 -
           ((C55021 + C55022) * C152084 * C14963 +
            (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
               C152532 +
           (C65711 * C14961 + (C55022 + C55021) * C152084 * C14962 +
            (C51198 * C2649 - C51199 * C2635 - C51198 * C2650 + C51193 * C2659 +
             C51200 * C18401 - C51201 * C18400 - C51200 * C18402 +
             C152376 * C18403) *
                C152084 * C14963) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C1401 -
           ((C66438 + C66437) * C152084 * C14963 +
            (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C1402 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C51198 * C1699 - C51199 * C1680 - C51198 * C1700 + C51193 * C1716 +
             C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243) *
                C152084 * C14962 +
            (C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C152084 * C14963) *
               C152159 * C152499) *
              C152543 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 +
            (C54802 + C54801) * C152084 * C14963) *
               C152159 * C1402 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C1401 -
           ((C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351 + C51198 * C1703 - C51199 * C1682 -
             C51198 * C1704 + C51193 * C1718) *
                C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C152499) *
              C152526 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152159 * C1401 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C1402 +
           (C51579 * C152084 * C14961 + (C53730 + C53729) * C152084 * C14962 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C152084 * C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C152084 * C14961 +
           (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
              C152159 * C1489 -
          ((C66438 + C66437) * C152084 * C14963 +
           (C66436 + C66435) * C152084 * C14962 +
           (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
            C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
               C152084 * C14961) *
              C152159 * C1490 +
          ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
            C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
            C152376 * C1522) *
               C152084 * C14961 +
           (C51198 * C1699 - C51199 * C1680 - C51198 * C1700 + C51193 * C1716 +
            C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
            C152376 * C2243) *
               C152084 * C14962 +
           (C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
            C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
            C152376 * C8352) *
               C152084 * C14963) *
              C152159 * C1491 -
          ((C51200 * C8347 - C51201 * C8337 - C51200 * C8348 + C152376 * C8355 +
            C51198 * C8341 - C51199 * C8334 - C51198 * C8342 + C51193 * C8352) *
               C152084 * C14963 +
           (C51200 * C8345 - C51201 * C8336 - C51200 * C8346 + C152376 * C8354 +
            C51198 * C2235 - C51199 * C2231 - C51198 * C2236 + C51193 * C2243) *
               C152084 * C14962 +
           (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 + C152376 * C1523 +
            C51198 * C1509 - C51199 * C1498 - C51198 * C1510 + C51193 * C1522) *
               C152084 * C14961) *
              C152159 * C1492 +
          ((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
            C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
            C152376 * C8112) *
               C152084 * C14961 +
           (C51198 * C8345 - C51199 * C8336 - C51198 * C8346 + C51193 * C8354 +
            C51200 * C9087 - C51201 * C9085 - C51200 * C9088 +
            C152376 * C9091) *
               C152084 * C14962 +
           (C51198 * C8347 - C51199 * C8337 - C51198 * C8348 + C51193 * C8355 +
            C51200 * C60866 - C51201 * C60865 - C51200 * C60867 +
            C152376 * C60868) *
               C152084 * C14963) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152547 -
           ((C65729 + C65730) * C152084 * C14963 +
            (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152532 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            (C51198 * C2645 - C51199 * C2633 - C51198 * C2646 + C51193 * C2657 +
             C51200 * C9661 - C51201 * C9653 - C51200 * C9662 +
             C152376 * C9671) *
                C152084 * C14963) *
               C152502) *
              C1401 +
          (((C66435 + C66436) * C152084 * C14961 +
            (C66437 + C66438) * C152084 * C14962 +
            (C67047 + C67048) * C152084 * C14963) *
               C152532 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152547 -
           ((C51200 * C9663 - C51201 * C9654 - C51200 * C9664 +
             C152376 * C9672 + C51198 * C9661 - C51199 * C9653 -
             C51198 * C9662 + C51193 * C9671) *
                C152084 * C14963 +
            (C67048 + C67047) * C152084 * C14962 + C67032 * C14961) *
               C152502) *
              C1402 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C152547 -
           ((C67053 + C67054) * C152084 * C14963 +
            (C67052 + C67051) * C152084 * C14962 +
            (C67050 + C67049) * C152084 * C14961) *
               C152532 +
           (C67056 * C14961 + (C67054 + C67053) * C152084 * C14962 +
            (C51198 * C9663 - C51199 * C9654 - C51198 * C9664 + C51193 * C9672 +
             C51200 * C61702 - C51201 * C61701 - C51200 * C61703 +
             C152376 * C61704) *
                C152084 * C14963) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C2393 -
           ((C65729 + C65730) * C152084 * C14963 +
            (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C2394 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            (C51198 * C2645 - C51199 * C2633 - C51198 * C2646 + C51193 * C2657 +
             C51200 * C9661 - C51201 * C9653 - C51200 * C9662 +
             C152376 * C9671) *
                C152084 * C14963) *
               C152502) *
              C152141 * C152543 +
          (((C51873 + C51872) * C152084 * C14961 +
            (C51874 + C51875) * C152084 * C14962 +
            (C55024 + C55023) * C152084 * C14963) *
               C2394 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C2393 -
           ((C51200 * C9665 - C51201 * C9655 - C51200 * C9666 +
             C152376 * C9673 + C51198 * C2647 - C51199 * C2634 -
             C51198 * C2648 + C51193 * C2658) *
                C152084 * C14963 +
            (C55023 + C55024) * C152084 * C14962 + C65718 * C14961) *
               C152502) *
              C152141 * C152526 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C2393 -
           ((C55021 + C55022) * C152084 * C14963 +
            (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
               C2394 +
           (C65711 * C14961 + (C55022 + C55021) * C152084 * C14962 +
            (C51198 * C2649 - C51199 * C2635 - C51198 * C2650 + C51193 * C2659 +
             C51200 * C18401 - C51201 * C18400 - C51200 * C18402 +
             C152376 * C18403) *
                C152084 * C14963) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C2393 -
           ((C65729 + C65730) * C152084 * C14963 +
            (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C2394 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            (C51198 * C2645 - C51199 * C2633 - C51198 * C2646 + C51193 * C2657 +
             C51200 * C9661 - C51201 * C9653 - C51200 * C9662 +
             C152376 * C9671) *
                C152084 * C14963) *
               C152502) *
              C152546 +
          (((C66435 + C66436) * C152084 * C14961 +
            (C66437 + C66438) * C152084 * C14962 +
            (C67047 + C67048) * C152084 * C14963) *
               C2394 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C2393 -
           ((C51200 * C9663 - C51201 * C9654 - C51200 * C9664 +
             C152376 * C9672 + C51198 * C9661 - C51199 * C9653 -
             C51198 * C9662 + C51193 * C9671) *
                C152084 * C14963 +
            (C67048 + C67047) * C152084 * C14962 + C67032 * C14961) *
               C152502) *
              C152530 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C2393 -
           ((C67053 + C67054) * C152084 * C14963 +
            (C67052 + C67051) * C152084 * C14962 +
            (C67050 + C67049) * C152084 * C14961) *
               C2394 +
           (C67056 * C14961 + (C67054 + C67053) * C152084 * C14962 +
            (C51198 * C9663 - C51199 * C9654 - C51198 * C9664 + C51193 * C9672 +
             C51200 * C61702 - C51201 * C61701 - C51200 * C61703 +
             C152376 * C61704) *
                C152084 * C14963) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C152084 * C14961 +
           (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
              C2624 -
          (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
           (C65726 + C65725) * C152084 * C14961) *
              C2625 +
          (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
           C68370 * C14963) *
              C2626 -
          ((C68367 + C68368) * C152084 * C14963 +
           (C68366 + C68365) * C152084 * C14962 + C68356 * C14961) *
              C2627 +
          (C68370 * C14961 + (C68368 + C68367) * C152084 * C14962 +
           (C51198 * C18075 - C51199 * C18069 - C51198 * C18076 +
            C51193 * C18081 + C51200 * C68335 - C51201 * C68334 -
            C51200 * C68336 + C152376 * C68337) *
               C152084 * C14963) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C152458 -
               (C51882 * C51197 + (C51872 + C51873) * C51196 +
                (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
                 C152376 * C1221 + C51198 * C633 - C51199 * C618 -
                 C51198 * C634 + C51193 * C654) *
                    C51195) *
                   C152340 * C152246) *
                  C152141 * C851 +
              (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
                C52287 * C51197) *
                   C152340 * C152246 -
               (C51274 * C51197 + (C51266 + C51265) * C51196 +
                (C51264 + C51263) * C51195) *
                   C152340 * C152458) *
                  C152141 * C852 +
              ((C51273 * C51195 + (C51268 + C51267) * C51196 +
                C51275 * C51197) *
                   C152340 * C152458 -
               ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
                C51882 * C51195) *
                   C152340 * C152246) *
                  C152141 * C853 +
              ((C52287 * C51195 + (C52301 + C52300) * C51196 +
                (C51198 * C647 - C51199 * C625 - C51198 * C648 + C51193 * C661 +
                 C51200 * C1219 - C51201 * C1208 - C51200 * C1220 +
                 C152376 * C1226) *
                    C51197) *
                   C152340 * C152246 -
               ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
                C51274 * C51195) *
                   C152340 * C152458) *
                  C152141 * C152503) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C51198 * C144 - C51199 * C136 - C51198 * C145 +
                  C51193 * C160 + C51200 * C380 - C51201 * C365 -
                  C51200 * C381 + C152376 * C401) *
                     C51195 +
                 (C51263 + C51264) * C51196 + C51273 * C51197) *
                    C152340 * C152458 -
                (C51882 * C51197 + (C51872 + C51873) * C51196 +
                 (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
                  C152376 * C1221 + C51198 * C633 - C51199 * C618 -
                  C51198 * C634 + C51193 * C654) *
                     C51195) *
                    C152340 * C152246) *
                   C1401 +
               (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
                  C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
                  C51200 * C1700 + C152376 * C1716) *
                     C51195 +
                 (C52628 + C52629) * C51196 + C52634 * C51197) *
                    C152340 * C152246 -
                (C51578 * C51197 + (C51568 + C51569) * C51196 +
                 (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                  C152376 * C402 + C51198 * C380 - C51199 * C365 -
                  C51198 * C381 + C51193 * C401) *
                     C51195) *
                    C152340 * C152458) *
                   C1402 +
               (((C51198 * C382 - C51199 * C366 - C51198 * C383 +
                  C51193 * C402 + C51200 * C1509 - C51201 * C1498 -
                  C51200 * C1510 + C152376 * C1522) *
                     C51195 +
                 (C51570 + C51571) * C51196 + C51579 * C51197) *
                    C152340 * C152458 -
                ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
                 (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
                  C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
                  C51198 * C1700 + C51193 * C1716) *
                     C51195) *
                    C152340 * C152246) *
                   C152499) *
                  C152443 +
              ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
                 C52287 * C51197) *
                    C152340 * C152246 -
                (C51274 * C51197 + (C51266 + C51265) * C51196 +
                 (C51264 + C51263) * C51195) *
                    C152340 * C152458) *
                   C1401 +
               (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
                 C52078 * C51197) *
                    C152340 * C152458 -
                ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
                 (C52629 + C52628) * C51195) *
                    C152340 * C152246) *
                   C1402 +
               (((C53732 + C53731) * C51195 + (C53730 + C53729) * C51196 +
                 (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
                  C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
                  C51200 * C2242 + C152376 * C2246) *
                     C51197) *
                    C152340 * C152246 -
                ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
                 (C51571 + C51570) * C51195) *
                    C152340 * C152458) *
                   C152499) *
                  C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C3010 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C3011 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C3012 -
           ((C55021 + C55022) * C51197 + (C55023 + C55024) * C51196 +
            (C51200 * C3173 - C51201 * C3169 - C51200 * C3174 +
             C152376 * C3181 + C51198 * C2643 - C51199 * C2632 -
             C51198 * C2644 + C51193 * C2656) *
                C51195) *
               C152340 * C152515) *
              C152141 * C152443 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C3011 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C3010 -
           ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
            (C51875 + C51874) * C51195) *
               C152340 * C3012 +
           ((C55024 + C55023) * C51195 + (C55022 + C55021) * C51196 +
            (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 + C51193 * C2653 +
             C51200 * C3179 - C51201 * C3172 - C51200 * C3180 +
             C152376 * C3184) *
                C51197) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152458 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C152141 * C851 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152246 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152458) *
              C152141 * C852 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152458 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152246) *
              C152141 * C853 +
          ((C59733 * C627 - C59734 * C615 - C59733 * C628 + C59728 * C651 +
            C59735 * C1215 - C59736 * C1206 - C59735 * C1216 + C59729 * C1224 +
            C59737 * C1693 - C59738 * C1677 - C59737 * C1694 + C59730 * C1713 +
            C59739 * C2241 - C59740 * C2234 - C59739 * C2242 + C59731 * C2246) *
               C152084 * C152340 * C152246 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152458 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C1401 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152458) *
               C1402 +
           ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
             C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
             C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
             C59739 * C8105 - C59740 * C8100 - C59739 * C8106 +
             C59731 * C8112) *
                C152084 * C152340 * C152458 -
            (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
             C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
             C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
             C59733 * C1699 - C59734 * C1680 - C59733 * C1700 +
             C59728 * C1716) *
                C152084 * C152340 * C152246) *
               C152499) *
              C152443 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152458) *
               C1401 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152458 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C1402 +
           ((C59733 * C1697 - C59734 * C1679 - C59733 * C1698 + C59728 * C1715 +
             C59735 * C2237 - C59736 * C2232 - C59735 * C2238 + C59729 * C2244 +
             C59737 * C8343 - C59738 * C8335 - C59737 * C8344 + C59730 * C8353 +
             C59739 * C9089 - C59740 * C9086 - C59739 * C9090 +
             C59731 * C9092) *
                C152084 * C152340 * C152246 -
            (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
             C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
             C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
             C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
                C152084 * C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C3010 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C3011 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C3012 -
           (C59739 * C10405 - C59740 * C10403 - C59739 * C10406 +
            C59731 * C10409 + C59737 * C9659 - C59738 * C9652 - C59737 * C9660 +
            C59730 * C9670 + C59735 * C3173 - C59736 * C3169 - C59735 * C3174 +
            C59729 * C3181 + C59733 * C2643 - C59734 * C2632 - C59733 * C2644 +
            C59728 * C2656) *
               C152084 * C152340 * C152515) *
              C152141 * C152443 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C3011 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C3010 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C3012 +
           (C59733 * C2641 - C59734 * C2631 - C59733 * C2642 + C59728 * C2655 +
            C59735 * C3175 - C59736 * C3170 - C59735 * C3176 + C59729 * C3182 +
            C59737 * C9657 - C59738 * C9651 - C59737 * C9658 + C59730 * C9669 +
            C59739 * C10407 - C59740 * C10404 - C59739 * C10408 +
            C59731 * C10410) *
               C152084 * C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152458 -
           ((C65729 + C65730) * C152084 * C14963 +
            (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152246) *
              C152141 * C851 +
          (((C51873 + C51872) * C152084 * C14961 +
            (C51874 + C51875) * C152084 * C14962 +
            (C55024 + C55023) * C152084 * C14963) *
               C152246 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152458) *
              C152141 * C852 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152458 -
           ((C55021 + C55022) * C152084 * C14963 +
            (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
               C152246) *
              C152141 * C853 +
          ((C52287 * C152084 * C14961 + (C51881 + C51880) * C152084 * C14962 +
            (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 + C51193 * C2653 +
             C51200 * C3179 - C51201 * C3172 - C51200 * C3180 +
             C152376 * C3184) *
                C152084 * C14963) *
               C152246 -
           ((C51880 + C51881) * C152084 * C14963 +
            (C51879 + C51878) * C152084 * C14962 + C51274 * C152084 * C14961) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C152458 -
            ((C65729 + C65730) * C152084 * C14963 +
             (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152246) *
               C1401 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 +
             (C67047 + C67048) * C152084 * C14963) *
                C152246 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C152458) *
               C1402 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152084 * C14961 +
             (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
                C152458 -
            ((C67053 + C67054) * C152084 * C14963 +
             (C67052 + C67051) * C152084 * C14962 +
             (C67050 + C67049) * C152084 * C14961) *
                C152246) *
               C152499) *
              C152443 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 +
             (C55024 + C55023) * C152084 * C14963) *
                C152246 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C152458) *
               C1401 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 +
             (C54802 + C54801) * C152084 * C14963) *
                C152458 -
            ((C51200 * C9657 - C51201 * C9651 - C51200 * C9658 +
              C152376 * C9669 + C51198 * C3175 - C51199 * C3170 -
              C51198 * C3176 + C51193 * C3182) *
                 C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152246) *
               C1402 +
           (((C53732 + C53731) * C152084 * C14961 +
             (C67553 + C67554) * C152084 * C14962 +
             (C51198 * C9657 - C51199 * C9651 - C51198 * C9658 +
              C51193 * C9669 + C51200 * C10407 - C51201 * C10404 -
              C51200 * C10408 + C152376 * C10410) *
                 C152084 * C14963) *
                C152246 -
            ((C67554 + C67553) * C152084 * C14963 +
             (C53731 + C53732) * C152084 * C14962 +
             (C51571 + C51570) * C152084 * C14961) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C3010 -
           (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C3011 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            C68370 * C14963) *
               C3012 -
           ((C68367 + C68368) * C152084 * C14963 +
            (C68366 + C68365) * C152084 * C14962 + C68356 * C14961) *
               C152515) *
              C152141 * C152443 +
          (((C51873 + C51872) * C152084 * C14961 +
            (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
               C3011 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C3010 -
           ((C68885 + C68886) * C152084 * C14963 +
            (C55023 + C55024) * C152084 * C14962 + C65718 * C14961) *
               C3012 +
           (C68880 * C14961 + (C68886 + C68885) * C152084 * C14962 +
            (C51198 * C18071 - C51199 * C18067 - C51198 * C18072 +
             C51193 * C18079 + C51200 * C18813 - C51201 * C18810 -
             C51200 * C18814 + C152376 * C18816) *
                C152084 * C14963) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C152159 * C152141 * C129 -
          (C51274 * C51197 + (C51266 + C51265) * C51196 +
           (C51264 + C51263) * C51195) *
              C152340 * C152159 * C152141 * C130 +
          (C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
              C152340 * C152159 * C152141 * C131 -
          ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
           C51274 * C51195) *
              C152340 * C152159 * C152141 * C132 +
          (C51275 * C51195 + (C51272 + C51271) * C51196 +
           (C51198 * C156 - C51199 * C142 - C51198 * C157 + C51193 * C166 +
            C51200 * C856 - C51201 * C855 - C51200 * C857 + C152376 * C858) *
               C51197) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152546 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152530 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            (C51574 + C51575) * C51197) *
               C152340 * C152159 * C152530 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152546 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152499) *
              C360 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C152546 -
           ((C51200 * C392 - C51201 * C371 - C51200 * C393 + C152376 * C407 +
             C51198 * C390 - C51199 * C370 - C51198 * C391 + C51193 * C406) *
                C51197 +
            (C51575 + C51574) * C51196 + C51578 * C51195) *
               C152340 * C152159 * C152530 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C1401 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C1402 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C1402 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C1401 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152499) *
              C152526 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C1401 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C1402 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C152159 * C1489 -
          (C51578 * C51197 + (C51568 + C51569) * C51196 +
           (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
            C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
               C51195) *
              C152340 * C152159 * C1490 +
          ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
            C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
            C152376 * C1522) *
               C51195 +
           (C51570 + C51571) * C51196 + C51579 * C51197) *
              C152340 * C152159 * C1491 -
          ((C51200 * C1515 - C51201 * C1501 - C51200 * C1516 + C152376 * C1525 +
            C51198 * C1505 - C51199 * C1496 - C51198 * C1506 + C51193 * C1520) *
               C51197 +
           (C51200 * C1513 - C51201 * C1500 - C51200 * C1514 + C152376 * C1524 +
            C51198 * C1507 - C51199 * C1497 - C51198 * C1508 + C51193 * C1521) *
               C51196 +
           (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 + C152376 * C1523 +
            C51198 * C1509 - C51199 * C1498 - C51198 * C1510 + C51193 * C1522) *
               C51195) *
              C152340 * C152159 * C1492 +
          ((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
            C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
            C152376 * C8112) *
               C51195 +
           (C51198 * C1513 - C51199 * C1500 - C51198 * C1514 + C51193 * C1524 +
            C51200 * C8103 - C51201 * C8099 - C51200 * C8104 +
            C152376 * C8111) *
               C51196 +
           (C51198 * C1515 - C51199 * C1501 - C51198 * C1516 + C51193 * C1525 +
            C51200 * C8552 - C51201 * C8551 - C51200 * C8553 +
            C152376 * C8554) *
               C51197) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C2393 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C2394 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152502) *
              C152141 * C152543 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C2394 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C2393 -
           ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
            (C51875 + C51874) * C51195) *
               C152340 * C152502) *
              C152141 * C152526 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C2393 -
           ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
            C51882 * C51195) *
               C152340 * C2394 +
           (C51883 * C51195 + (C51881 + C51880) * C51196 +
            (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
             C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
             C152376 * C2858) *
                C51197) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C2393 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C2394 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152502) *
              C152546 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C2394 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C2393 -
           ((C51200 * C1705 - C51201 * C1683 - C51200 * C1706 +
             C152376 * C1719 + C51198 * C1687 - C51199 * C1674 -
             C51198 * C1688 + C51193 * C1710) *
                C51197 +
            (C51200 * C1703 - C51201 * C1682 - C51200 * C1704 +
             C152376 * C1718 + C51198 * C1689 - C51199 * C1675 -
             C51198 * C1690 + C51193 * C1711) *
                C51196 +
            (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C51195) *
               C152340 * C152502) *
              C152530 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C2393 -
           ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C2394 +
           ((C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C51195 +
            (C51198 * C1703 - C51199 * C1682 - C51198 * C1704 + C51193 * C1718 +
             C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351) *
                C51196 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C51197) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C152141 * C129 -
          (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
           C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
           C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
           C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
              C152084 * C152340 * C152159 * C152141 * C130 +
          (C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
           C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
           C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
           C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
              C152084 * C152340 * C152159 * C152141 * C131 -
          (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
           C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
           C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
           C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
              C152084 * C152340 * C152159 * C152141 * C132 +
          (C59733 * C152 - C59734 * C140 - C59733 * C153 + C59728 * C164 +
           C59735 * C390 - C59736 * C370 - C59735 * C391 + C59729 * C406 +
           C59737 * C392 - C59738 * C371 - C59737 * C393 + C59730 * C407 +
           C59739 * C1858 - C59740 * C1857 - C59739 * C1859 + C59731 * C1860) *
              C152084 * C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C359 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152530 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C360 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C152543 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C1402 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C152526 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C1489 -
          (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
           C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
           C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
           C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
              C152084 * C152340 * C152159 * C1490 +
          (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
           C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
           C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
           C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
              C152084 * C152340 * C152159 * C1491 -
          (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
           C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
           C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
           C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
              C152084 * C152340 * C152159 * C1492 +
          (C59733 * C1511 - C59734 * C1499 - C59733 * C1512 + C59728 * C1523 +
           C59735 * C8105 - C59736 * C8100 - C59735 * C8106 + C59729 * C8112 +
           C59737 * C8107 - C59738 * C8101 - C59737 * C8108 + C59730 * C8113 +
           C59739 * C60716 - C59740 * C60715 - C59739 * C60717 +
           C59731 * C60718) *
              C152084 * C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C2393 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C2394 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C152141 * C152543 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C2394 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C2393 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C152502) *
              C152141 * C152526 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C2393 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C2394 +
           (C59733 * C639 - C59734 * C621 - C59733 * C640 + C59728 * C657 +
            C59735 * C1687 - C59736 * C1674 - C59735 * C1688 + C59729 * C1710 +
            C59737 * C1705 - C59738 * C1683 - C59737 * C1706 + C59730 * C1719 +
            C59739 * C9966 - C59740 * C9965 - C59739 * C9967 + C59731 * C9968) *
               C152084 * C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C2393 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C2394 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C152546 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C2394 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C2393 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C152502) *
              C152530 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C2393 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C2394 +
           (C59733 * C1701 - C59734 * C1681 - C59733 * C1702 + C59728 * C1717 +
            C59735 * C8341 - C59736 * C8334 - C59735 * C8342 + C59729 * C8352 +
            C59737 * C8347 - C59738 * C8337 - C59737 * C8348 + C59730 * C8355 +
            C59739 * C60866 - C59740 * C60865 - C59739 * C60867 +
            C59731 * C60868) *
               C152084 * C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C152084 * C14961 +
           (C51198 * C633 - C51199 * C618 - C51198 * C634 + C51193 * C654 +
            C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
            C152376 * C1221) *
               C152084 * C14962 +
           (C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
            C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
            C152376 * C1712) *
               C152084 * C14963) *
              C152159 * C152141 * C129 -
          ((C51875 + C51874) * C152084 * C14963 +
           (C51872 + C51873) * C152084 * C14962 +
           (C51264 + C51263) * C152084 * C14961) *
              C152159 * C152141 * C130 +
          (C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
           C51883 * C152084 * C14963) *
              C152159 * C152141 * C131 -
          ((C51880 + C51881) * C152084 * C14963 +
           (C51879 + C51878) * C152084 * C14962 + C51274 * C152084 * C14961) *
              C152159 * C152141 * C132 +
          (C51275 * C152084 * C14961 + (C52301 + C52300) * C152084 * C14962 +
           (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
            C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
            C152376 * C2858) *
               C152084 * C14963) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C51198 * C633 - C51199 * C618 - C51198 * C634 + C51193 * C654 +
             C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221) *
                C152084 * C14962 +
            (C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C152084 * C14963) *
               C152159 * C152546 -
           ((C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C152084 * C14963 +
            (C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716 + C51198 * C1209 - C51199 * C1203 -
             C51198 * C1210 + C51193 * C1221) *
                C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C152530 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C51198 * C1699 - C51199 * C1680 - C51198 * C1700 + C51193 * C1716 +
             C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243) *
                C152084 * C14962 +
            (C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C152084 * C14963) *
               C152159 * C152499) *
              C359 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 +
            (C54802 + C54801) * C152084 * C14963) *
               C152159 * C152530 -
           ((C51875 + C51874) * C152084 * C14963 +
            (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C152546 -
           ((C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351 + C51198 * C1703 - C51199 * C1682 -
             C51198 * C1704 + C51193 * C1718) *
                C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C152499) *
              C360 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C51883 * C152084 * C14963) *
               C152159 * C152546 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C152530 +
           (C51579 * C152084 * C14961 + (C53730 + C53729) * C152084 * C14962 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C152084 * C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C1401 -
           ((C66438 + C66437) * C152084 * C14963 +
            (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C1402 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C51198 * C1699 - C51199 * C1680 - C51198 * C1700 + C51193 * C1716 +
             C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243) *
                C152084 * C14962 +
            (C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C152084 * C14963) *
               C152159 * C152499) *
              C152543 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 +
            (C54802 + C54801) * C152084 * C14963) *
               C152159 * C1402 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C1401 -
           ((C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351 + C51198 * C1703 - C51199 * C1682 -
             C51198 * C1704 + C51193 * C1718) *
                C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C152499) *
              C152526 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152159 * C1401 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C1402 +
           (C51579 * C152084 * C14961 + (C53730 + C53729) * C152084 * C14962 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C152084 * C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C152084 * C14961 +
           (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
              C152159 * C1489 -
          ((C66438 + C66437) * C152084 * C14963 +
           (C66436 + C66435) * C152084 * C14962 +
           (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
            C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
               C152084 * C14961) *
              C152159 * C1490 +
          ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
            C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
            C152376 * C1522) *
               C152084 * C14961 +
           (C51198 * C1699 - C51199 * C1680 - C51198 * C1700 + C51193 * C1716 +
            C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
            C152376 * C2243) *
               C152084 * C14962 +
           (C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
            C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
            C152376 * C8352) *
               C152084 * C14963) *
              C152159 * C1491 -
          ((C51200 * C8347 - C51201 * C8337 - C51200 * C8348 + C152376 * C8355 +
            C51198 * C8341 - C51199 * C8334 - C51198 * C8342 + C51193 * C8352) *
               C152084 * C14963 +
           (C51200 * C8345 - C51201 * C8336 - C51200 * C8346 + C152376 * C8354 +
            C51198 * C2235 - C51199 * C2231 - C51198 * C2236 + C51193 * C2243) *
               C152084 * C14962 +
           (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 + C152376 * C1523 +
            C51198 * C1509 - C51199 * C1498 - C51198 * C1510 + C51193 * C1522) *
               C152084 * C14961) *
              C152159 * C1492 +
          ((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
            C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
            C152376 * C8112) *
               C152084 * C14961 +
           (C51198 * C8345 - C51199 * C8336 - C51198 * C8346 + C51193 * C8354 +
            C51200 * C9087 - C51201 * C9085 - C51200 * C9088 +
            C152376 * C9091) *
               C152084 * C14962 +
           (C51198 * C8347 - C51199 * C8337 - C51198 * C8348 + C51193 * C8355 +
            C51200 * C60866 - C51201 * C60865 - C51200 * C60867 +
            C152376 * C60868) *
               C152084 * C14963) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C2393 -
           ((C65729 + C65730) * C152084 * C14963 +
            (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C2394 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            (C51198 * C2645 - C51199 * C2633 - C51198 * C2646 + C51193 * C2657 +
             C51200 * C9661 - C51201 * C9653 - C51200 * C9662 +
             C152376 * C9671) *
                C152084 * C14963) *
               C152502) *
              C152141 * C152543 +
          (((C51873 + C51872) * C152084 * C14961 +
            (C51874 + C51875) * C152084 * C14962 +
            (C55024 + C55023) * C152084 * C14963) *
               C2394 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C2393 -
           ((C51200 * C9665 - C51201 * C9655 - C51200 * C9666 +
             C152376 * C9673 + C51198 * C2647 - C51199 * C2634 -
             C51198 * C2648 + C51193 * C2658) *
                C152084 * C14963 +
            (C55023 + C55024) * C152084 * C14962 + C65718 * C14961) *
               C152502) *
              C152141 * C152526 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C2393 -
           ((C55021 + C55022) * C152084 * C14963 +
            (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
               C2394 +
           (C65711 * C14961 + (C55022 + C55021) * C152084 * C14962 +
            (C51198 * C2649 - C51199 * C2635 - C51198 * C2650 + C51193 * C2659 +
             C51200 * C18401 - C51201 * C18400 - C51200 * C18402 +
             C152376 * C18403) *
                C152084 * C14963) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C2393 -
           ((C65729 + C65730) * C152084 * C14963 +
            (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C2394 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            (C51198 * C2645 - C51199 * C2633 - C51198 * C2646 + C51193 * C2657 +
             C51200 * C9661 - C51201 * C9653 - C51200 * C9662 +
             C152376 * C9671) *
                C152084 * C14963) *
               C152502) *
              C152546 +
          (((C66435 + C66436) * C152084 * C14961 +
            (C66437 + C66438) * C152084 * C14962 +
            (C67047 + C67048) * C152084 * C14963) *
               C2394 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C2393 -
           ((C51200 * C9663 - C51201 * C9654 - C51200 * C9664 +
             C152376 * C9672 + C51198 * C9661 - C51199 * C9653 -
             C51198 * C9662 + C51193 * C9671) *
                C152084 * C14963 +
            (C67048 + C67047) * C152084 * C14962 + C67032 * C14961) *
               C152502) *
              C152530 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C2393 -
           ((C67053 + C67054) * C152084 * C14963 +
            (C67052 + C67051) * C152084 * C14962 +
            (C67050 + C67049) * C152084 * C14961) *
               C2394 +
           (C67056 * C14961 + (C67054 + C67053) * C152084 * C14962 +
            (C51198 * C9663 - C51199 * C9654 - C51198 * C9664 + C51193 * C9672 +
             C51200 * C61702 - C51201 * C61701 - C51200 * C61703 +
             C152376 * C61704) *
                C152084 * C14963) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C4321 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152457 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C4321) *
               C152204) *
              C152118 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C4321) *
               C152457 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C4321 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152204) *
              C152127 +
          (((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
             C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
             C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
             C59739 * C1505 - C59740 * C1496 - C59739 * C1506 +
             C59731 * C1520) *
                C152084 * C152340 * C4321 -
            (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
             C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
             C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
             C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
                C152084 * C152340 * C152246) *
               C152457 +
           ((C59733 * C1213 - C59734 * C1205 - C59733 * C1214 + C59728 * C1223 +
             C59735 * C1695 - C59736 * C1678 - C59735 * C1696 + C59729 * C1714 +
             C59737 * C2239 - C59738 * C2233 - C59737 * C2240 + C59730 * C2245 +
             C59739 * C8867 - C59740 * C8866 - C59739 * C8868 +
             C59731 * C8869) *
                C152084 * C152340 * C152246 -
            (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
             C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
             C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
             C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
                C152084 * C152340 * C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C4321 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C152457 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C4321) *
               C152204) *
              C152118 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C4321) *
               C152457 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C4321 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          (((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                C152340 * C4321 -
            ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
             C51882 * C51195) *
                C152340 * C152246) *
               C152457 +
           ((C52634 * C51195 + (C52633 + C52632) * C51196 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C51197) *
                C152340 * C152246 -
            ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
             C51578 * C51195) *
                C152340 * C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C4321 -
            (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152246) *
               C152457 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
                C152246 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C4321) *
               C152204) *
              C152118 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
                C152246 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C4321) *
               C152457 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
                C4321 -
            ((C68675 + C68676) * C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152246) *
               C152204) *
              C152127 +
          (((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
             C65711 * C14963) *
                C4321 -
            ((C55021 + C55022) * C152084 * C14963 +
             (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
                C152246) *
               C152457 +
           ((C52634 * C152084 * C14961 + (C54800 + C54799) * C152084 * C14962 +
             (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 +
              C51193 * C3183 + C51200 * C10185 - C51201 * C10184 -
              C51200 * C10186 + C152376 * C10187) *
                 C152084 * C14963) *
                C152246 -
            ((C54799 + C54800) * C152084 * C14963 +
             (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
                C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152242 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152249 +
            (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
             C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
             C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
             C59739 * C8341 - C59740 * C8334 - C59739 * C8342 +
             C59731 * C8352) *
                C152084 * C152340 * C4993) *
               C152457 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152249 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152242 -
            (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
             C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
             C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
             C59733 * C1691 - C59734 * C1676 - C59733 * C1692 +
             C59728 * C1712) *
                C152084 * C152340 * C4993) *
               C152204) *
              C3455 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152249 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152242 -
            (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
             C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
             C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
             C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
                C152084 * C152340 * C4993) *
               C152457 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152242 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152249 +
            (C59733 * C1689 - C59734 * C1675 - C59733 * C1690 + C59728 * C1711 +
             C59735 * C1703 - C59736 * C1682 - C59735 * C1704 + C59729 * C1718 +
             C59737 * C8339 - C59738 * C8333 - C59737 * C8340 + C59730 * C8351 +
             C59739 * C8349 - C59740 * C8338 - C59739 * C8350 +
             C59731 * C8356) *
                C152084 * C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152242 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152249 +
            ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
              C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
              C152376 * C1712) *
                 C51195 +
             (C51874 + C51875) * C51196 + C51883 * C51197) *
                C152340 * C4993) *
               C152457 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152249 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152242 -
            ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
             (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
              C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
              C51198 * C1692 + C51193 * C1712) *
                 C51195) *
                C152340 * C4993) *
               C152204) *
              C3455 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152249 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152242 -
            ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
             (C51875 + C51874) * C51195) *
                C152340 * C4993) *
               C152457 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152242 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152249 +
            ((C54802 + C54801) * C51195 + (C54800 + C54799) * C51196 +
             (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
              C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
              C51200 * C1708 + C152376 * C1720) *
                 C51197) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C152242 -
            (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152249 +
            (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
             C68370 * C14963) *
                C4993) *
               C152457 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
                C152249 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C152242 -
            ((C69099 + C69100) * C152084 * C14963 +
             (C67048 + C67047) * C152084 * C14962 + C67032 * C14961) *
                C4993) *
               C152204) *
              C3455 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
                C152249 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C152242 -
            ((C68885 + C68886) * C152084 * C14963 +
             (C55023 + C55024) * C152084 * C14962 + C65718 * C14961) *
                C4993) *
               C152457 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
                C152242 -
            ((C68675 + C68676) * C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152249 +
            (C68670 * C14961 + (C68676 + C68675) * C152084 * C14962 +
             (C51198 * C9665 - C51199 * C9655 - C51198 * C9666 +
              C51193 * C9673 + C51200 * C9667 - C51201 * C9656 -
              C51200 * C9668 + C152376 * C9674) *
                 C152084 * C14963) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C4321 -
               (C51882 * C51197 + (C51872 + C51873) * C51196 +
                (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
                 C152376 * C1221 + C51198 * C633 - C51199 * C618 -
                 C51198 * C634 + C51193 * C654) *
                    C51195) *
                   C152340 * C152246) *
                  C152141 * C152552 +
              (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
                C52287 * C51197) *
                   C152340 * C152246 -
               (C51274 * C51197 + (C51266 + C51265) * C51196 +
                (C51264 + C51263) * C51195) *
                   C152340 * C4321) *
                  C152141 * C152545 +
              ((C51273 * C51195 + (C51268 + C51267) * C51196 +
                C51275 * C51197) *
                   C152340 * C4321 -
               ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
                C51882 * C51195) *
                   C152340 * C152246) *
                  C152141 * C152528 +
              ((C52287 * C51195 + (C52301 + C52300) * C51196 +
                (C51198 * C647 - C51199 * C625 - C51198 * C648 + C51193 * C661 +
                 C51200 * C1219 - C51201 * C1208 - C51200 * C1220 +
                 C152376 * C1226) *
                    C51197) *
                   C152340 * C152246 -
               ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
                C51274 * C51195) *
                   C152340 * C4321) *
                  C152141 * C152503) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C51198 * C144 - C51199 * C136 - C51198 * C145 +
                  C51193 * C160 + C51200 * C380 - C51201 * C365 -
                  C51200 * C381 + C152376 * C401) *
                     C51195 +
                 (C51263 + C51264) * C51196 + C51273 * C51197) *
                    C152340 * C4321 -
                (C51882 * C51197 + (C51872 + C51873) * C51196 +
                 (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
                  C152376 * C1221 + C51198 * C633 - C51199 * C618 -
                  C51198 * C634 + C51193 * C654) *
                     C51195) *
                    C152340 * C152246) *
                   C152546 +
               (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
                  C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
                  C51200 * C1700 + C152376 * C1716) *
                     C51195 +
                 (C52628 + C52629) * C51196 + C52634 * C51197) *
                    C152340 * C152246 -
                (C51578 * C51197 + (C51568 + C51569) * C51196 +
                 (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                  C152376 * C402 + C51198 * C380 - C51199 * C365 -
                  C51198 * C381 + C51193 * C401) *
                     C51195) *
                    C152340 * C4321) *
                   C152530 +
               (((C51198 * C382 - C51199 * C366 - C51198 * C383 +
                  C51193 * C402 + C51200 * C1509 - C51201 * C1498 -
                  C51200 * C1510 + C152376 * C1522) *
                     C51195 +
                 (C51570 + C51571) * C51196 + C51579 * C51197) *
                    C152340 * C4321 -
                ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
                 (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
                  C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
                  C51198 * C1700 + C51193 * C1716) *
                     C51195) *
                    C152340 * C152246) *
                   C152499) *
                  C3455 +
              ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
                 C52287 * C51197) *
                    C152340 * C152246 -
                (C51274 * C51197 + (C51266 + C51265) * C51196 +
                 (C51264 + C51263) * C51195) *
                    C152340 * C4321) *
                   C152546 +
               (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
                 C52078 * C51197) *
                    C152340 * C4321 -
                ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
                 (C52629 + C52628) * C51195) *
                    C152340 * C152246) *
                   C152530 +
               (((C53732 + C53731) * C51195 + (C53730 + C53729) * C51196 +
                 (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
                  C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
                  C51200 * C2242 + C152376 * C2246) *
                     C51197) *
                    C152340 * C152246 -
                ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
                 (C51571 + C51570) * C51195) *
                    C152340 * C4321) *
                   C152499) *
                  C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152554 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152551 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152538 -
           ((C55021 + C55022) * C51197 + (C55023 + C55024) * C51196 +
            (C51200 * C3173 - C51201 * C3169 - C51200 * C3174 +
             C152376 * C3181 + C51198 * C2643 - C51199 * C2632 -
             C51198 * C2644 + C51193 * C2656) *
                C51195) *
               C152340 * C152515) *
              C152141 * C3455 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C152551 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152554 -
           ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
            (C51875 + C51874) * C51195) *
               C152340 * C152538 +
           ((C55024 + C55023) * C51195 + (C55022 + C55021) * C51196 +
            (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 + C51193 * C2653 +
             C51200 * C3179 - C51201 * C3172 - C51200 * C3180 +
             C152376 * C3184) *
                C51197) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C4321 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C152141 * C152552 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152246 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C4321) *
              C152141 * C152545 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C4321 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152246) *
              C152141 * C152528 +
          ((C59733 * C627 - C59734 * C615 - C59733 * C628 + C59728 * C651 +
            C59735 * C1215 - C59736 * C1206 - C59735 * C1216 + C59729 * C1224 +
            C59737 * C1693 - C59738 * C1677 - C59737 * C1694 + C59730 * C1713 +
            C59739 * C2241 - C59740 * C2234 - C59739 * C2242 + C59731 * C2246) *
               C152084 * C152340 * C152246 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C4321 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152546 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C4321) *
               C152530 +
           ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
             C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
             C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
             C59739 * C8105 - C59740 * C8100 - C59739 * C8106 +
             C59731 * C8112) *
                C152084 * C152340 * C4321 -
            (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
             C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
             C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
             C59733 * C1699 - C59734 * C1680 - C59733 * C1700 +
             C59728 * C1716) *
                C152084 * C152340 * C152246) *
               C152499) *
              C3455 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C4321) *
               C152546 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C4321 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152530 +
           ((C59733 * C1697 - C59734 * C1679 - C59733 * C1698 + C59728 * C1715 +
             C59735 * C2237 - C59736 * C2232 - C59735 * C2238 + C59729 * C2244 +
             C59737 * C8343 - C59738 * C8335 - C59737 * C8344 + C59730 * C8353 +
             C59739 * C9089 - C59740 * C9086 - C59739 * C9090 +
             C59731 * C9092) *
                C152084 * C152340 * C152246 -
            (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
             C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
             C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
             C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
                C152084 * C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152554 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152551 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152538 -
           (C59739 * C10405 - C59740 * C10403 - C59739 * C10406 +
            C59731 * C10409 + C59737 * C9659 - C59738 * C9652 - C59737 * C9660 +
            C59730 * C9670 + C59735 * C3173 - C59736 * C3169 - C59735 * C3174 +
            C59729 * C3181 + C59733 * C2643 - C59734 * C2632 - C59733 * C2644 +
            C59728 * C2656) *
               C152084 * C152340 * C152515) *
              C152141 * C3455 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152551 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152554 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C152538 +
           (C59733 * C2641 - C59734 * C2631 - C59733 * C2642 + C59728 * C2655 +
            C59735 * C3175 - C59736 * C3170 - C59735 * C3176 + C59729 * C3182 +
            C59737 * C9657 - C59738 * C9651 - C59737 * C9658 + C59730 * C9669 +
            C59739 * C10407 - C59740 * C10404 - C59739 * C10408 +
            C59731 * C10410) *
               C152084 * C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C4321 -
           (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152246) *
              C152141 * C152552 +
          (((C51873 + C51872) * C152084 * C14961 +
            (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
               C152246 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C4321) *
              C152141 * C152545 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C4321 -
           ((C55021 + C55022) * C152084 * C14963 +
            (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
               C152246) *
              C152141 * C152528 +
          ((C52287 * C152084 * C14961 + (C51881 + C51880) * C152084 * C14962 +
            (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 + C51193 * C2653 +
             C51200 * C3179 - C51201 * C3172 - C51200 * C3180 +
             C152376 * C3184) *
                C152084 * C14963) *
               C152246 -
           ((C51880 + C51881) * C152084 * C14963 +
            (C51879 + C51878) * C152084 * C14962 + C51274 * C152084 * C14961) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C4321 -
            (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152246) *
               C152546 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
                C152246 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C4321) *
               C152530 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152084 * C14961 +
             (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
                C4321 -
            ((C67053 + C67054) * C152084 * C14963 +
             (C67052 + C67051) * C152084 * C14962 +
             (C67050 + C67049) * C152084 * C14961) *
                C152246) *
               C152499) *
              C3455 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
                C152246 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C4321) *
               C152546 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
                C4321 -
            ((C68675 + C68676) * C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152246) *
               C152530 +
           (((C53732 + C53731) * C152084 * C14961 +
             (C67553 + C67554) * C152084 * C14962 +
             (C51198 * C9657 - C51199 * C9651 - C51198 * C9658 +
              C51193 * C9669 + C51200 * C10407 - C51201 * C10404 -
              C51200 * C10408 + C152376 * C10410) *
                 C152084 * C14963) *
                C152246 -
            ((C67554 + C67553) * C152084 * C14963 +
             (C53731 + C53732) * C152084 * C14962 +
             (C51571 + C51570) * C152084 * C14961) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152554 -
           (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152551 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            C68370 * C14963) *
               C152538 -
           ((C68367 + C68368) * C152084 * C14963 +
            (C68366 + C68365) * C152084 * C14962 + C68356 * C14961) *
               C152515) *
              C152141 * C3455 +
          (((C51873 + C51872) * C152084 * C14961 +
            (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
               C152551 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152554 -
           ((C68885 + C68886) * C152084 * C14963 +
            (C55023 + C55024) * C152084 * C14962 + C65718 * C14961) *
               C152538 +
           (C68880 * C14961 + (C68886 + C68885) * C152084 * C14962 +
            (C51198 * C18071 - C51199 * C18067 - C51198 * C18072 +
             C51193 * C18079 + C51200 * C18813 - C51201 * C18810 -
             C51200 * C18814 + C152376 * C18816) *
                C152084 * C14963) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152242 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152249 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C4993) *
              C152141 * C152118 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152249 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152242 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C4993) *
              C152141 * C152127 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152242 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152249 +
           (C59733 * C639 - C59734 * C621 - C59733 * C640 + C59728 * C657 +
            C59735 * C1687 - C59736 * C1674 - C59735 * C1688 + C59729 * C1710 +
            C59737 * C1705 - C59738 * C1683 - C59737 * C1706 + C59730 * C1719 +
            C59739 * C9966 - C59740 * C9965 - C59739 * C9967 + C59731 * C9968) *
               C152084 * C152340 * C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152242 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152249 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C4993) *
              C152141 * C152118 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C152249 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152242 -
           ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
            (C51875 + C51874) * C51195) *
               C152340 * C4993) *
              C152141 * C152127 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152242 -
           ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
            C51882 * C51195) *
               C152340 * C152249 +
           (C51883 * C51195 + (C51881 + C51880) * C51196 +
            (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
             C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
             C152376 * C2858) *
                C51197) *
               C152340 * C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152242 -
           (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152249 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            C68370 * C14963) *
               C4993) *
              C152141 * C152118 +
          (((C51873 + C51872) * C152084 * C14961 +
            (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
               C152249 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152242 -
           ((C68885 + C68886) * C152084 * C14963 +
            (C55023 + C55024) * C152084 * C14962 + C65718 * C14961) *
               C4993) *
              C152141 * C152127 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152242 -
           ((C55021 + C55022) * C152084 * C14963 +
            (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
               C152249 +
           (C65711 * C14961 + (C55022 + C55021) * C152084 * C14962 +
            (C51198 * C2649 - C51199 * C2635 - C51198 * C2650 + C51193 * C2659 +
             C51200 * C18401 - C51201 * C18400 - C51200 * C18402 +
             C152376 * C18403) *
                C152084 * C14963) *
               C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C4321 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C152546 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C4321) *
               C152530 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C51195 +
             (C51570 + C51571) * C51196 + C51579 * C51197) *
                C152340 * C4321 -
            ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
             (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
              C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
              C51198 * C1700 + C51193 * C1716) *
                 C51195) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C4321) *
               C152546 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C4321 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152530 +
           (((C53732 + C53731) * C51195 + (C53730 + C53729) * C51196 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C51197) *
                C152340 * C152246 -
            ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
             (C51571 + C51570) * C51195) *
                C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C4321 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152246) *
              C152141 * C152552 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C152246 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C4321) *
              C152141 * C152545 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C4321 -
           ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
            C51882 * C51195) *
               C152340 * C152246) *
              C152141 * C152528 +
          ((C52287 * C51195 + (C52301 + C52300) * C51196 +
            (C51198 * C647 - C51199 * C625 - C51198 * C648 + C51193 * C661 +
             C51200 * C1219 - C51201 * C1208 - C51200 * C1220 +
             C152376 * C1226) *
                C51197) *
               C152340 * C152246 -
           ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
            C51274 * C51195) *
               C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C4321 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C152141 * C152552 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152246 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C4321) *
              C152141 * C152545 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C4321 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152246) *
              C152141 * C152528 +
          ((C59733 * C627 - C59734 * C615 - C59733 * C628 + C59728 * C651 +
            C59735 * C1215 - C59736 * C1206 - C59735 * C1216 + C59729 * C1224 +
            C59737 * C1693 - C59738 * C1677 - C59737 * C1694 + C59730 * C1713 +
            C59739 * C2241 - C59740 * C2234 - C59739 * C2242 + C59731 * C2246) *
               C152084 * C152340 * C152246 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C4321 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152546 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C4321) *
               C152530 +
           ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
             C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
             C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
             C59739 * C8105 - C59740 * C8100 - C59739 * C8106 +
             C59731 * C8112) *
                C152084 * C152340 * C4321 -
            (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
             C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
             C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
             C59733 * C1699 - C59734 * C1680 - C59733 * C1700 +
             C59728 * C1716) *
                C152084 * C152340 * C152246) *
               C152499) *
              C3455 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C4321) *
               C152546 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C4321 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152530 +
           ((C59733 * C1697 - C59734 * C1679 - C59733 * C1698 + C59728 * C1715 +
             C59735 * C2237 - C59736 * C2232 - C59735 * C2238 + C59729 * C2244 +
             C59737 * C8343 - C59738 * C8335 - C59737 * C8344 + C59730 * C8353 +
             C59739 * C9089 - C59740 * C9086 - C59739 * C9090 +
             C59731 * C9092) *
                C152084 * C152340 * C152246 -
            (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
             C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
             C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
             C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
                C152084 * C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C4321 -
           (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152246) *
              C152141 * C152552 +
          (((C51873 + C51872) * C152084 * C14961 +
            (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
               C152246 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C4321) *
              C152141 * C152545 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C4321 -
           ((C55021 + C55022) * C152084 * C14963 +
            (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
               C152246) *
              C152141 * C152528 +
          ((C52287 * C152084 * C14961 + (C51881 + C51880) * C152084 * C14962 +
            (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 + C51193 * C2653 +
             C51200 * C3179 - C51201 * C3172 - C51200 * C3180 +
             C152376 * C3184) *
                C152084 * C14963) *
               C152246 -
           ((C51880 + C51881) * C152084 * C14963 +
            (C51879 + C51878) * C152084 * C14962 + C51274 * C152084 * C14961) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C4321 -
            (C68356 * C14963 + (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152246) *
               C152546 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 + C69094 * C14963) *
                C152246 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C4321) *
               C152530 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152084 * C14961 +
             (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
                C4321 -
            ((C67053 + C67054) * C152084 * C14963 +
             (C67052 + C67051) * C152084 * C14962 +
             (C67050 + C67049) * C152084 * C14961) *
                C152246) *
               C152499) *
              C3455 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 + C68880 * C14963) *
                C152246 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C4321) *
               C152546 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 + C68670 * C14963) *
                C4321 -
            ((C68675 + C68676) * C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152246) *
               C152530 +
           (((C53732 + C53731) * C152084 * C14961 +
             (C67553 + C67554) * C152084 * C14962 +
             (C51198 * C9657 - C51199 * C9651 - C51198 * C9658 +
              C51193 * C9669 + C51200 * C10407 - C51201 * C10404 -
              C51200 * C10408 + C152376 * C10410) *
                 C152084 * C14963) *
                C152246 -
            ((C67554 + C67553) * C152084 * C14963 +
             (C53731 + C53732) * C152084 * C14962 +
             (C51571 + C51570) * C152084 * C14961) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C1851 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C1852 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C1853 -
           ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C51195) *
               C152340 * C152159 * C152509) *
              C152443 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C1852 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C1851 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C1853 +
           ((C53414 + C53413) * C51195 + (C53412 + C53411) * C51196 +
            (C51198 * C1503 - C51199 * C1495 - C51198 * C1504 + C51193 * C1519 +
             C51200 * C1517 - C51201 * C1502 - C51200 * C1518 +
             C152376 * C1526) *
                C51197) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152457 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152204) *
              C851 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C152204 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152457) *
              C852 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C152457 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C152204) *
              C853 +
          ((C52078 * C51195 + (C52092 + C52091) * C51196 +
            (C51198 * C394 - C51199 * C372 - C51198 * C395 + C51193 * C408 +
             C51200 * C396 - C51201 * C373 - C51200 * C397 + C152376 * C409) *
                C51197) *
               C152340 * C152159 * C152204 -
           ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
            C51274 * C51195) *
               C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152457 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152204) *
              C851 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152457) *
              C852 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152457 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152204) *
              C853 +
          ((C59733 * C374 - C59734 * C362 - C59733 * C375 + C59728 * C398 +
            C59735 * C388 - C59736 * C369 - C59735 * C389 + C59729 * C405 +
            C59737 * C1503 - C59738 * C1495 - C59737 * C1504 + C59730 * C1519 +
            C59739 * C1517 - C59740 * C1502 - C59739 * C1518 + C59731 * C1526) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C1851 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C1852 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C1853 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C152159 * C152509) *
              C152443 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C1852 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C1851 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C1853 +
           (C59733 * C1507 - C59734 * C1497 - C59733 * C1508 + C59728 * C1521 +
            C59735 * C1513 - C59736 * C1500 - C59735 * C1514 + C59729 * C1524 +
            C59737 * C8103 - C59738 * C8099 - C59737 * C8104 + C59730 * C8111 +
            C59739 * C8109 - C59740 * C8102 - C59739 * C8110 + C59731 * C8114) *
               C152084 * C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C152457 -
           ((C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C152084 * C14963 +
            (C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716 + C51198 * C1209 - C51199 * C1203 -
             C51198 * C1210 + C51193 * C1221) *
                C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C152204) *
              C851 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 +
            (C54802 + C54801) * C152084 * C14963) *
               C152159 * C152204 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C152457) *
              C852 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152159 * C152457 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C152204) *
              C853 +
          ((C52078 * C152084 * C14961 + (C52633 + C52632) * C152084 * C14962 +
            (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 + C51193 * C1709 +
             C51200 * C1707 - C51201 * C1684 - C51200 * C1708 +
             C152376 * C1720) *
                C152084 * C14963) *
               C152159 * C152204 -
           ((C51880 + C51881) * C152084 * C14963 +
            (C51879 + C51878) * C152084 * C14962 + C51274 * C152084 * C14961) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C1851 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C1852 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C152159 * C1853 -
           ((C51200 * C8347 - C51201 * C8337 - C51200 * C8348 +
             C152376 * C8355 + C51198 * C8341 - C51199 * C8334 -
             C51198 * C8342 + C51193 * C8352) *
                C152084 * C14963 +
            (C51200 * C8345 - C51201 * C8336 - C51200 * C8346 +
             C152376 * C8354 + C51198 * C2235 - C51199 * C2231 -
             C51198 * C2236 + C51193 * C2243) *
                C152084 * C14962 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C152084 * C14961) *
               C152159 * C152509) *
              C152443 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 +
            (C54802 + C54801) * C152084 * C14963) *
               C152159 * C1852 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C1851 -
           ((C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351 + C51198 * C1703 - C51199 * C1682 -
             C51198 * C1704 + C51193 * C1718) *
                C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C1853 +
           ((C53414 + C53413) * C152084 * C14961 +
            (C51198 * C2237 - C51199 * C2232 - C51198 * C2238 + C51193 * C2244 +
             C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353) *
                C152084 * C14962 +
            (C51198 * C8339 - C51199 * C8333 - C51198 * C8340 + C51193 * C8351 +
             C51200 * C8349 - C51201 * C8338 - C51200 * C8350 +
             C152376 * C8356) *
                C152084 * C14963) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152458 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152246) *
              C1851 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152246 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152458) *
              C1852 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152458 -
           ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C152246) *
              C1853 +
          (((C51198 * C2235 - C51199 * C2231 - C51198 * C2236 + C51193 * C2243 +
             C51200 * C8345 - C51201 * C8336 - C51200 * C8346 +
             C152376 * C8354) *
                C51195 +
            (C51198 * C2237 - C51199 * C2232 - C51198 * C2238 + C51193 * C2244 +
             C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353) *
                C51196 +
            (C51198 * C2239 - C51199 * C2233 - C51198 * C2240 + C51193 * C2245 +
             C51200 * C8867 - C51201 * C8866 - C51200 * C8868 +
             C152376 * C8869) *
                C51197) *
               C152340 * C152246 -
           ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C51195) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152458 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C152457 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152458) *
               C152204) *
              C359 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152458) *
               C152457 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152458 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152204) *
              C360 +
          (((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                C152340 * C152458 -
            ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
             C51882 * C51195) *
                C152340 * C152246) *
               C152457 +
           ((C52634 * C51195 + (C52633 + C52632) * C51196 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C51197) *
                C152340 * C152246 -
            ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
             C51578 * C51195) *
                C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152458 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152457 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152458) *
               C152204) *
              C359 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152458) *
               C152457 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152458 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152204) *
              C360 +
          (((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
             C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
             C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
             C59739 * C1505 - C59740 * C1496 - C59739 * C1506 +
             C59731 * C1520) *
                C152084 * C152340 * C152458 -
            (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
             C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
             C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
             C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
                C152084 * C152340 * C152246) *
               C152457 +
           ((C59733 * C1213 - C59734 * C1205 - C59733 * C1214 + C59728 * C1223 +
             C59735 * C1695 - C59736 * C1678 - C59735 * C1696 + C59729 * C1714 +
             C59737 * C2239 - C59738 * C2233 - C59737 * C2240 + C59730 * C2245 +
             C59739 * C8867 - C59740 * C8866 - C59739 * C8868 +
             C59731 * C8869) *
                C152084 * C152340 * C152246 -
            (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
             C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
             C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
             C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
                C152084 * C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152458 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C1851 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152246 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152458) *
              C1852 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152458 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152246) *
              C1853 +
          ((C59733 * C2235 - C59734 * C2231 - C59733 * C2236 + C59728 * C2243 +
            C59735 * C8345 - C59736 * C8336 - C59735 * C8346 + C59729 * C8354 +
            C59737 * C9087 - C59738 * C9085 - C59737 * C9088 + C59730 * C9091 +
            C59739 * C61324 - C59740 * C61323 - C59739 * C61325 +
            C59731 * C61326) *
               C152084 * C152340 * C152246 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C152458 -
            ((C65729 + C65730) * C152084 * C14963 +
             (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152246) *
               C152457 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 +
             (C51198 * C3173 - C51199 * C3169 - C51198 * C3174 +
              C51193 * C3181 + C51200 * C9659 - C51201 * C9652 -
              C51200 * C9660 + C152376 * C9670) *
                 C152084 * C14963) *
                C152246 -
            ((C66438 + C66437) * C152084 * C14963 +
             (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C152458) *
               C152204) *
              C359 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 +
             (C55024 + C55023) * C152084 * C14963) *
                C152246 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C152458) *
               C152457 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 +
             (C54802 + C54801) * C152084 * C14963) *
                C152458 -
            ((C51200 * C9657 - C51201 * C9651 - C51200 * C9658 +
              C152376 * C9669 + C51198 * C3175 - C51199 * C3170 -
              C51198 * C3176 + C51193 * C3182) *
                 C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152246) *
               C152204) *
              C360 +
          (((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
             C65711 * C14963) *
                C152458 -
            ((C55021 + C55022) * C152084 * C14963 +
             (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
                C152246) *
               C152457 +
           ((C52634 * C152084 * C14961 + (C54800 + C54799) * C152084 * C14962 +
             (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 +
              C51193 * C3183 + C51200 * C10185 - C51201 * C10184 -
              C51200 * C10186 + C152376 * C10187) *
                 C152084 * C14963) *
                C152246 -
            ((C54799 + C54800) * C152084 * C14963 +
             (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152458 -
           ((C65729 + C65730) * C152084 * C14963 +
            (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152246) *
              C1851 +
          (((C66435 + C66436) * C152084 * C14961 +
            (C66437 + C66438) * C152084 * C14962 +
            (C67047 + C67048) * C152084 * C14963) *
               C152246 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152458) *
              C1852 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C152458 -
           ((C67053 + C67054) * C152084 * C14963 +
            (C67052 + C67051) * C152084 * C14962 +
            (C67050 + C67049) * C152084 * C14961) *
               C152246) *
              C1853 +
          (((C67773 + C67774) * C152084 * C14961 +
            (C67775 + C67776) * C152084 * C14962 +
            (C51198 * C10405 - C51199 * C10403 - C51198 * C10406 +
             C51193 * C10409 + C51200 * C62160 - C51201 * C62159 -
             C51200 * C62161 + C152376 * C62162) *
                C152084 * C14963) *
               C152246 -
           ((C67776 + C67775) * C152084 * C14963 +
            (C67774 + C67773) * C152084 * C14962 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C152084 * C14961) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                C51200 * C380 - C51201 * C365 - C51200 * C381 +
                C152376 * C401) *
                   C51195 +
               (C51263 + C51264) * C51196 + C51273 * C51197) *
                  C152340 * C152159 * C152141 * C129 -
              (C51274 * C51197 + (C51266 + C51265) * C51196 +
               (C51264 + C51263) * C51195) *
                  C152340 * C152159 * C152141 * C130 +
              (C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                  C152340 * C152159 * C152141 * C131 -
              ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
               C51274 * C51195) *
                  C152340 * C152159 * C152141 * C132 +
              (C51275 * C51195 + (C51272 + C51271) * C51196 +
               (C51198 * C156 - C51199 * C142 - C51198 * C157 + C51193 * C166 +
                C51200 * C856 - C51201 * C855 - C51200 * C857 +
                C152376 * C858) *
                   C51197) *
                  C152340 * C152159 * C152141 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C152159 * C152546 -
               (C51578 * C51197 + (C51568 + C51569) * C51196 +
                (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                 C152376 * C402 + C51198 * C380 - C51199 * C365 -
                 C51198 * C381 + C51193 * C401) *
                    C51195) *
                   C152340 * C152159 * C152530 +
               ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
                 C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
                 C152376 * C1522) *
                    C51195 +
                (C51570 + C51571) * C51196 + C51579 * C51197) *
                   C152340 * C152159 * C152499) *
                  C359 +
              (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
                (C51574 + C51575) * C51197) *
                   C152340 * C152159 * C152530 -
               (C51274 * C51197 + (C51266 + C51265) * C51196 +
                (C51264 + C51263) * C51195) *
                   C152340 * C152159 * C152546 -
               ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
                (C51571 + C51570) * C51195) *
                   C152340 * C152159 * C152499) *
                  C360 +
              ((C51273 * C51195 + (C51268 + C51267) * C51196 +
                C51275 * C51197) *
                   C152340 * C152159 * C152546 -
               ((C51200 * C392 - C51201 * C371 - C51200 * C393 +
                 C152376 * C407 + C51198 * C390 - C51199 * C370 -
                 C51198 * C391 + C51193 * C406) *
                    C51197 +
                (C51575 + C51574) * C51196 + C51578 * C51195) *
                   C152340 * C152159 * C152530 +
               (C51579 * C51195 + (C51577 + C51576) * C51196 +
                (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
                 C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
                 C152376 * C1860) *
                    C51197) *
                   C152340 * C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152547 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152532 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152502) *
              C152141 * C359 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            (C51878 + C51879) * C51197) *
               C152340 * C152532 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152547 -
           ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
            (C51875 + C51874) * C51195) *
               C152340 * C152502) *
              C152141 * C360 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152547 -
           ((C51200 * C1217 - C51201 * C1207 - C51200 * C1218 +
             C152376 * C1225 + C51198 * C643 - C51199 * C623 - C51198 * C644 +
             C51193 * C659) *
                C51197 +
            (C51879 + C51878) * C51196 + C51882 * C51195) *
               C152340 * C152532 +
           (C51883 * C51195 + (C51881 + C51880) * C51196 +
            (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
             C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
             C152376 * C2858) *
                C51197) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C1401 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C1402 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C1402 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C1401 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152499) *
              C152526 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C1401 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C1402 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C152159 * C1489 -
          (C51578 * C51197 + (C51568 + C51569) * C51196 +
           (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
            C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
               C51195) *
              C152340 * C152159 * C1490 +
          ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
            C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
            C152376 * C1522) *
               C51195 +
           (C51570 + C51571) * C51196 + C51579 * C51197) *
              C152340 * C152159 * C1491 -
          ((C51200 * C1515 - C51201 * C1501 - C51200 * C1516 + C152376 * C1525 +
            C51198 * C1505 - C51199 * C1496 - C51198 * C1506 + C51193 * C1520) *
               C51197 +
           (C51200 * C1513 - C51201 * C1500 - C51200 * C1514 + C152376 * C1524 +
            C51198 * C1507 - C51199 * C1497 - C51198 * C1508 + C51193 * C1521) *
               C51196 +
           (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 + C152376 * C1523 +
            C51198 * C1509 - C51199 * C1498 - C51198 * C1510 + C51193 * C1522) *
               C51195) *
              C152340 * C152159 * C1492 +
          ((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
            C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
            C152376 * C8112) *
               C51195 +
           (C51198 * C1513 - C51199 * C1500 - C51198 * C1514 + C51193 * C1524 +
            C51200 * C8103 - C51201 * C8099 - C51200 * C8104 +
            C152376 * C8111) *
               C51196 +
           (C51198 * C1515 - C51199 * C1501 - C51198 * C1516 + C51193 * C1525 +
            C51200 * C8552 - C51201 * C8551 - C51200 * C8553 +
            C152376 * C8554) *
               C51197) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152547 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152532 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152502) *
              C1401 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152532 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152547 -
           ((C51200 * C1705 - C51201 * C1683 - C51200 * C1706 +
             C152376 * C1719 + C51198 * C1687 - C51199 * C1674 -
             C51198 * C1688 + C51193 * C1710) *
                C51197 +
            (C51200 * C1703 - C51201 * C1682 - C51200 * C1704 +
             C152376 * C1718 + C51198 * C1689 - C51199 * C1675 -
             C51198 * C1690 + C51193 * C1711) *
                C51196 +
            (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C51195) *
               C152340 * C152502) *
              C1402 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152547 -
           ((C51200 * C2239 - C51201 * C2233 - C51200 * C2240 +
             C152376 * C2245 + C51198 * C1695 - C51199 * C1678 -
             C51198 * C1696 + C51193 * C1714) *
                C51197 +
            (C51200 * C2237 - C51201 * C2232 - C51200 * C2238 +
             C152376 * C2244 + C51198 * C1697 - C51199 * C1679 -
             C51198 * C1698 + C51193 * C1715) *
                C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C152532 +
           ((C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C51195 +
            (C51198 * C1703 - C51199 * C1682 - C51198 * C1704 + C51193 * C1718 +
             C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351) *
                C51196 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C51197) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C152141 * C129 -
          (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
           C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
           C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
           C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
              C152084 * C152340 * C152159 * C152141 * C130 +
          (C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
           C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
           C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
           C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
              C152084 * C152340 * C152159 * C152141 * C131 -
          (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
           C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
           C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
           C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
              C152084 * C152340 * C152159 * C152141 * C132 +
          (C59733 * C152 - C59734 * C140 - C59733 * C153 + C59728 * C164 +
           C59735 * C390 - C59736 * C370 - C59735 * C391 + C59729 * C406 +
           C59737 * C392 - C59738 * C371 - C59737 * C393 + C59730 * C407 +
           C59739 * C1858 - C59740 * C1857 - C59739 * C1859 + C59731 * C1860) *
              C152084 * C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C359 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152530 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C360 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152547 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152532 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C152141 * C359 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152532 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152547 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C152502) *
              C152141 * C360 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152547 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152532 +
           (C59733 * C639 - C59734 * C621 - C59733 * C640 + C59728 * C657 +
            C59735 * C1687 - C59736 * C1674 - C59735 * C1688 + C59729 * C1710 +
            C59737 * C1705 - C59738 * C1683 - C59737 * C1706 + C59730 * C1719 +
            C59739 * C9966 - C59740 * C9965 - C59739 * C9967 + C59731 * C9968) *
               C152084 * C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C152543 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C1402 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C152526 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C1489 -
          (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
           C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
           C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
           C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
              C152084 * C152340 * C152159 * C1490 +
          (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
           C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
           C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
           C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
              C152084 * C152340 * C152159 * C1491 -
          (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
           C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
           C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
           C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
              C152084 * C152340 * C152159 * C1492 +
          (C59733 * C1511 - C59734 * C1499 - C59733 * C1512 + C59728 * C1523 +
           C59735 * C8105 - C59736 * C8100 - C59735 * C8106 + C59729 * C8112 +
           C59737 * C8107 - C59738 * C8101 - C59737 * C8108 + C59730 * C8113 +
           C59739 * C60716 - C59740 * C60715 - C59739 * C60717 +
           C59731 * C60718) *
              C152084 * C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152547 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152532 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C1401 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152532 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152547 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C152502) *
              C1402 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152547 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152532 +
           (C59733 * C1701 - C59734 * C1681 - C59733 * C1702 + C59728 * C1717 +
            C59735 * C8341 - C59736 * C8334 - C59735 * C8342 + C59729 * C8352 +
            C59737 * C8347 - C59738 * C8337 - C59737 * C8348 + C59730 * C8355 +
            C59739 * C60866 - C59740 * C60865 - C59739 * C60867 +
            C59731 * C60868) *
               C152084 * C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C152084 * C14961 +
           (C51198 * C633 - C51199 * C618 - C51198 * C634 + C51193 * C654 +
            C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
            C152376 * C1221) *
               C152084 * C14962 +
           (C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
            C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
            C152376 * C1712) *
               C152084 * C14963) *
              C152159 * C152141 * C129 -
          ((C51875 + C51874) * C152084 * C14963 +
           (C51872 + C51873) * C152084 * C14962 +
           (C51264 + C51263) * C152084 * C14961) *
              C152159 * C152141 * C130 +
          (C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
           C51883 * C152084 * C14963) *
              C152159 * C152141 * C131 -
          ((C51880 + C51881) * C152084 * C14963 +
           (C51879 + C51878) * C152084 * C14962 + C51274 * C152084 * C14961) *
              C152159 * C152141 * C132 +
          (C51275 * C152084 * C14961 + (C52301 + C52300) * C152084 * C14962 +
           (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
            C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
            C152376 * C2858) *
               C152084 * C14963) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C51198 * C633 - C51199 * C618 - C51198 * C634 + C51193 * C654 +
             C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221) *
                C152084 * C14962 +
            (C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C152084 * C14963) *
               C152159 * C152546 -
           ((C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C152084 * C14963 +
            (C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716 + C51198 * C1209 - C51199 * C1203 -
             C51198 * C1210 + C51193 * C1221) *
                C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C152530 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C51198 * C1699 - C51199 * C1680 - C51198 * C1700 + C51193 * C1716 +
             C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243) *
                C152084 * C14962 +
            (C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C152084 * C14963) *
               C152159 * C152499) *
              C359 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 +
            (C54802 + C54801) * C152084 * C14963) *
               C152159 * C152530 -
           ((C51875 + C51874) * C152084 * C14963 +
            (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C152546 -
           ((C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351 + C51198 * C1703 - C51199 * C1682 -
             C51198 * C1704 + C51193 * C1718) *
                C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C152499) *
              C360 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C51883 * C152084 * C14963) *
               C152159 * C152546 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C152530 +
           (C51579 * C152084 * C14961 + (C53730 + C53729) * C152084 * C14962 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C152084 * C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152547 -
           ((C65729 + C65730) * C152084 * C14963 +
            (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152532 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            (C51198 * C2645 - C51199 * C2633 - C51198 * C2646 + C51193 * C2657 +
             C51200 * C9661 - C51201 * C9653 - C51200 * C9662 +
             C152376 * C9671) *
                C152084 * C14963) *
               C152502) *
              C152141 * C359 +
          (((C51873 + C51872) * C152084 * C14961 +
            (C51874 + C51875) * C152084 * C14962 +
            (C55024 + C55023) * C152084 * C14963) *
               C152532 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152547 -
           ((C51200 * C9665 - C51201 * C9655 - C51200 * C9666 +
             C152376 * C9673 + C51198 * C2647 - C51199 * C2634 -
             C51198 * C2648 + C51193 * C2658) *
                C152084 * C14963 +
            (C55023 + C55024) * C152084 * C14962 + C65718 * C14961) *
               C152502) *
              C152141 * C360 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152547 -
           ((C55021 + C55022) * C152084 * C14963 +
            (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
               C152532 +
           (C65711 * C14961 + (C55022 + C55021) * C152084 * C14962 +
            (C51198 * C2649 - C51199 * C2635 - C51198 * C2650 + C51193 * C2659 +
             C51200 * C18401 - C51201 * C18400 - C51200 * C18402 +
             C152376 * C18403) *
                C152084 * C14963) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C1401 -
           ((C66438 + C66437) * C152084 * C14963 +
            (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C1402 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C51198 * C1699 - C51199 * C1680 - C51198 * C1700 + C51193 * C1716 +
             C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243) *
                C152084 * C14962 +
            (C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C152084 * C14963) *
               C152159 * C152499) *
              C152543 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 +
            (C54802 + C54801) * C152084 * C14963) *
               C152159 * C1402 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C1401 -
           ((C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351 + C51198 * C1703 - C51199 * C1682 -
             C51198 * C1704 + C51193 * C1718) *
                C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C152499) *
              C152526 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152159 * C1401 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C1402 +
           (C51579 * C152084 * C14961 + (C53730 + C53729) * C152084 * C14962 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C152084 * C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C152084 * C14961 +
           (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
              C152159 * C1489 -
          ((C66438 + C66437) * C152084 * C14963 +
           (C66436 + C66435) * C152084 * C14962 +
           (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
            C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
               C152084 * C14961) *
              C152159 * C1490 +
          ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
            C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
            C152376 * C1522) *
               C152084 * C14961 +
           (C51198 * C1699 - C51199 * C1680 - C51198 * C1700 + C51193 * C1716 +
            C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
            C152376 * C2243) *
               C152084 * C14962 +
           (C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
            C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
            C152376 * C8352) *
               C152084 * C14963) *
              C152159 * C1491 -
          ((C51200 * C8347 - C51201 * C8337 - C51200 * C8348 + C152376 * C8355 +
            C51198 * C8341 - C51199 * C8334 - C51198 * C8342 + C51193 * C8352) *
               C152084 * C14963 +
           (C51200 * C8345 - C51201 * C8336 - C51200 * C8346 + C152376 * C8354 +
            C51198 * C2235 - C51199 * C2231 - C51198 * C2236 + C51193 * C2243) *
               C152084 * C14962 +
           (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 + C152376 * C1523 +
            C51198 * C1509 - C51199 * C1498 - C51198 * C1510 + C51193 * C1522) *
               C152084 * C14961) *
              C152159 * C1492 +
          ((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
            C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
            C152376 * C8112) *
               C152084 * C14961 +
           (C51198 * C8345 - C51199 * C8336 - C51198 * C8346 + C51193 * C8354 +
            C51200 * C9087 - C51201 * C9085 - C51200 * C9088 +
            C152376 * C9091) *
               C152084 * C14962 +
           (C51198 * C8347 - C51199 * C8337 - C51198 * C8348 + C51193 * C8355 +
            C51200 * C60866 - C51201 * C60865 - C51200 * C60867 +
            C152376 * C60868) *
               C152084 * C14963) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152547 -
           ((C65729 + C65730) * C152084 * C14963 +
            (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152532 +
           (C65732 * C14961 + (C65730 + C65729) * C152084 * C14962 +
            (C51198 * C2645 - C51199 * C2633 - C51198 * C2646 + C51193 * C2657 +
             C51200 * C9661 - C51201 * C9653 - C51200 * C9662 +
             C152376 * C9671) *
                C152084 * C14963) *
               C152502) *
              C1401 +
          (((C66435 + C66436) * C152084 * C14961 +
            (C66437 + C66438) * C152084 * C14962 +
            (C67047 + C67048) * C152084 * C14963) *
               C152532 -
           (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152547 -
           ((C51200 * C9663 - C51201 * C9654 - C51200 * C9664 +
             C152376 * C9672 + C51198 * C9661 - C51199 * C9653 -
             C51198 * C9662 + C51193 * C9671) *
                C152084 * C14963 +
            (C67048 + C67047) * C152084 * C14962 + C67032 * C14961) *
               C152502) *
              C1402 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
               C152547 -
           ((C67053 + C67054) * C152084 * C14963 +
            (C67052 + C67051) * C152084 * C14962 +
            (C67050 + C67049) * C152084 * C14961) *
               C152532 +
           (C67056 * C14961 + (C67054 + C67053) * C152084 * C14962 +
            (C51198 * C9663 - C51199 * C9654 - C51198 * C9664 + C51193 * C9672 +
             C51200 * C61702 - C51201 * C61701 - C51200 * C61703 +
             C152376 * C61704) *
                C152084 * C14963) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152458 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C1401 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152458) *
               C1402 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C51195 +
             (C51570 + C51571) * C51196 + C51579 * C51197) *
                C152340 * C152458 -
            ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
             (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
              C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
              C51198 * C1700 + C51193 * C1716) *
                 C51195) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152458) *
               C1401 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152458 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C1402 +
           (((C53732 + C53731) * C51195 + (C53730 + C53729) * C51196 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C51197) *
                C152340 * C152246 -
            ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
             (C51571 + C51570) * C51195) *
                C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152458 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152246) *
              C152141 * C851 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C152246 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152458) *
              C152141 * C852 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152458 -
           ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
            C51882 * C51195) *
               C152340 * C152246) *
              C152141 * C853 +
          ((C52287 * C51195 + (C52301 + C52300) * C51196 +
            (C51198 * C647 - C51199 * C625 - C51198 * C648 + C51193 * C661 +
             C51200 * C1219 - C51201 * C1208 - C51200 * C1220 +
             C152376 * C1226) *
                C51197) *
               C152340 * C152246 -
           ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
            C51274 * C51195) *
               C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152458 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C152141 * C851 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152246 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152458) *
              C152141 * C852 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152458 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152246) *
              C152141 * C853 +
          ((C59733 * C627 - C59734 * C615 - C59733 * C628 + C59728 * C651 +
            C59735 * C1215 - C59736 * C1206 - C59735 * C1216 + C59729 * C1224 +
            C59737 * C1693 - C59738 * C1677 - C59737 * C1694 + C59730 * C1713 +
            C59739 * C2241 - C59740 * C2234 - C59739 * C2242 + C59731 * C2246) *
               C152084 * C152340 * C152246 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152458 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C1401 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152458) *
               C1402 +
           ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
             C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
             C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
             C59739 * C8105 - C59740 * C8100 - C59739 * C8106 +
             C59731 * C8112) *
                C152084 * C152340 * C152458 -
            (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
             C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
             C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
             C59733 * C1699 - C59734 * C1680 - C59733 * C1700 +
             C59728 * C1716) *
                C152084 * C152340 * C152246) *
               C152499) *
              C152443 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152458) *
               C1401 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152458 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C1402 +
           ((C59733 * C1697 - C59734 * C1679 - C59733 * C1698 + C59728 * C1715 +
             C59735 * C2237 - C59736 * C2232 - C59735 * C2238 + C59729 * C2244 +
             C59737 * C8343 - C59738 * C8335 - C59737 * C8344 + C59730 * C8353 +
             C59739 * C9089 - C59740 * C9086 - C59739 * C9090 +
             C59731 * C9092) *
                C152084 * C152340 * C152246 -
            (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
             C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
             C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
             C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
                C152084 * C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152458 -
           ((C65729 + C65730) * C152084 * C14963 +
            (C65728 + C65727) * C152084 * C14962 +
            (C65726 + C65725) * C152084 * C14961) *
               C152246) *
              C152141 * C851 +
          (((C51873 + C51872) * C152084 * C14961 +
            (C51874 + C51875) * C152084 * C14962 +
            (C55024 + C55023) * C152084 * C14963) *
               C152246 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152458) *
              C152141 * C852 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152458 -
           ((C55021 + C55022) * C152084 * C14963 +
            (C51877 + C51876) * C152084 * C14962 + C51882 * C152084 * C14961) *
               C152246) *
              C152141 * C853 +
          ((C52287 * C152084 * C14961 + (C51881 + C51880) * C152084 * C14962 +
            (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 + C51193 * C2653 +
             C51200 * C3179 - C51201 * C3172 - C51200 * C3180 +
             C152376 * C3184) *
                C152084 * C14963) *
               C152246 -
           ((C51880 + C51881) * C152084 * C14963 +
            (C51879 + C51878) * C152084 * C14962 + C51274 * C152084 * C14961) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152084 * C14961 +
             (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
                C152458 -
            ((C65729 + C65730) * C152084 * C14963 +
             (C65728 + C65727) * C152084 * C14962 +
             (C65726 + C65725) * C152084 * C14961) *
                C152246) *
               C1401 +
           (((C66435 + C66436) * C152084 * C14961 +
             (C66437 + C66438) * C152084 * C14962 +
             (C67047 + C67048) * C152084 * C14963) *
                C152246 -
            (C67032 * C14963 + (C66436 + C66435) * C152084 * C14962 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152084 * C14961) *
                C152458) *
               C1402 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152084 * C14961 +
             (C67049 + C67050) * C152084 * C14962 + C67056 * C14963) *
                C152458 -
            ((C67053 + C67054) * C152084 * C14963 +
             (C67052 + C67051) * C152084 * C14962 +
             (C67050 + C67049) * C152084 * C14961) *
                C152246) *
               C152499) *
              C152443 +
          ((((C51873 + C51872) * C152084 * C14961 +
             (C51874 + C51875) * C152084 * C14962 +
             (C55024 + C55023) * C152084 * C14963) *
                C152246 -
            (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
             (C51264 + C51263) * C152084 * C14961) *
                C152458) *
               C1401 +
           (((C51569 + C51568) * C152084 * C14961 +
             (C52628 + C52629) * C152084 * C14962 +
             (C54802 + C54801) * C152084 * C14963) *
                C152458 -
            ((C51200 * C9657 - C51201 * C9651 - C51200 * C9658 +
              C152376 * C9669 + C51198 * C3175 - C51199 * C3170 -
              C51198 * C3176 + C51193 * C3182) *
                 C152084 * C14963 +
             (C54801 + C54802) * C152084 * C14962 +
             (C52629 + C52628) * C152084 * C14961) *
                C152246) *
               C1402 +
           (((C53732 + C53731) * C152084 * C14961 +
             (C67553 + C67554) * C152084 * C14962 +
             (C51198 * C9657 - C51199 * C9651 - C51198 * C9658 +
              C51193 * C9669 + C51200 * C10407 - C51201 * C10404 -
              C51200 * C10408 + C152376 * C10410) *
                 C152084 * C14963) *
                C152246 -
            ((C67554 + C67553) * C152084 * C14963 +
             (C53731 + C53732) * C152084 * C14962 +
             (C51571 + C51570) * C152084 * C14961) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152546 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152530 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            (C51574 + C51575) * C51197) *
               C152340 * C152159 * C152530 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152546 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152499) *
              C360 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C152546 -
           ((C51200 * C392 - C51201 * C371 - C51200 * C393 + C152376 * C407 +
             C51198 * C390 - C51199 * C370 - C51198 * C391 + C51193 * C406) *
                C51197 +
            (C51575 + C51574) * C51196 + C51578 * C51195) *
               C152340 * C152159 * C152530 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C152159 * C152141 * C129 -
          (C51274 * C51197 + (C51266 + C51265) * C51196 +
           (C51264 + C51263) * C51195) *
              C152340 * C152159 * C152141 * C130 +
          (C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
              C152340 * C152159 * C152141 * C131 -
          ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
           C51274 * C51195) *
              C152340 * C152159 * C152141 * C132 +
          (C51275 * C51195 + (C51272 + C51271) * C51196 +
           (C51198 * C156 - C51199 * C142 - C51198 * C157 + C51193 * C166 +
            C51200 * C856 - C51201 * C855 - C51200 * C857 + C152376 * C858) *
               C51197) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C1401 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C1402 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C1402 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C1401 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152499) *
              C152526 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C1401 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C1402 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C152159 * C1489 -
          (C51578 * C51197 + (C51568 + C51569) * C51196 +
           (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
            C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
               C51195) *
              C152340 * C152159 * C1490 +
          ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
            C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
            C152376 * C1522) *
               C51195 +
           (C51570 + C51571) * C51196 + C51579 * C51197) *
              C152340 * C152159 * C1491 -
          ((C51200 * C1515 - C51201 * C1501 - C51200 * C1516 + C152376 * C1525 +
            C51198 * C1505 - C51199 * C1496 - C51198 * C1506 + C51193 * C1520) *
               C51197 +
           (C51200 * C1513 - C51201 * C1500 - C51200 * C1514 + C152376 * C1524 +
            C51198 * C1507 - C51199 * C1497 - C51198 * C1508 + C51193 * C1521) *
               C51196 +
           (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 + C152376 * C1523 +
            C51198 * C1509 - C51199 * C1498 - C51198 * C1510 + C51193 * C1522) *
               C51195) *
              C152340 * C152159 * C1492 +
          ((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
            C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
            C152376 * C8112) *
               C51195 +
           (C51198 * C1513 - C51199 * C1500 - C51198 * C1514 + C51193 * C1524 +
            C51200 * C8103 - C51201 * C8099 - C51200 * C8104 +
            C152376 * C8111) *
               C51196 +
           (C51198 * C1515 - C51199 * C1501 - C51198 * C1516 + C51193 * C1525 +
            C51200 * C8552 - C51201 * C8551 - C51200 * C8553 +
            C152376 * C8554) *
               C51197) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C152141 * C129 -
          (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
           C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
           C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
           C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
              C152084 * C152340 * C152159 * C152141 * C130 +
          (C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
           C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
           C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
           C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
              C152084 * C152340 * C152159 * C152141 * C131 -
          (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
           C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
           C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
           C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
              C152084 * C152340 * C152159 * C152141 * C132 +
          (C59733 * C152 - C59734 * C140 - C59733 * C153 + C59728 * C164 +
           C59735 * C390 - C59736 * C370 - C59735 * C391 + C59729 * C406 +
           C59737 * C392 - C59738 * C371 - C59737 * C393 + C59730 * C407 +
           C59739 * C1858 - C59740 * C1857 - C59739 * C1859 + C59731 * C1860) *
              C152084 * C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C359 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152530 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C360 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C152543 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C1402 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C152526 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C1489 -
          (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
           C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
           C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
           C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
              C152084 * C152340 * C152159 * C1490 +
          (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
           C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
           C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
           C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
              C152084 * C152340 * C152159 * C1491 -
          (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
           C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
           C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
           C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
              C152084 * C152340 * C152159 * C1492 +
          (C59733 * C1511 - C59734 * C1499 - C59733 * C1512 + C59728 * C1523 +
           C59735 * C8105 - C59736 * C8100 - C59735 * C8106 + C59729 * C8112 +
           C59737 * C8107 - C59738 * C8101 - C59737 * C8108 + C59730 * C8113 +
           C59739 * C60716 - C59740 * C60715 - C59739 * C60717 +
           C59731 * C60718) *
              C152084 * C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C152084 * C14961 +
           (C51198 * C633 - C51199 * C618 - C51198 * C634 + C51193 * C654 +
            C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
            C152376 * C1221) *
               C152084 * C14962 +
           (C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
            C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
            C152376 * C1712) *
               C152084 * C14963) *
              C152159 * C152141 * C129 -
          ((C51875 + C51874) * C152084 * C14963 +
           (C51872 + C51873) * C152084 * C14962 +
           (C51264 + C51263) * C152084 * C14961) *
              C152159 * C152141 * C130 +
          (C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
           C51883 * C152084 * C14963) *
              C152159 * C152141 * C131 -
          ((C51880 + C51881) * C152084 * C14963 +
           (C51879 + C51878) * C152084 * C14962 + C51274 * C152084 * C14961) *
              C152159 * C152141 * C132 +
          (C51275 * C152084 * C14961 + (C52301 + C52300) * C152084 * C14962 +
           (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
            C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
            C152376 * C2858) *
               C152084 * C14963) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C51198 * C633 - C51199 * C618 - C51198 * C634 + C51193 * C654 +
             C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221) *
                C152084 * C14962 +
            (C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C152084 * C14963) *
               C152159 * C152546 -
           ((C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C152084 * C14963 +
            (C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716 + C51198 * C1209 - C51199 * C1203 -
             C51198 * C1210 + C51193 * C1221) *
                C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C152530 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C51198 * C1699 - C51199 * C1680 - C51198 * C1700 + C51193 * C1716 +
             C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243) *
                C152084 * C14962 +
            (C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C152084 * C14963) *
               C152159 * C152499) *
              C359 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 +
            (C54802 + C54801) * C152084 * C14963) *
               C152159 * C152530 -
           ((C51875 + C51874) * C152084 * C14963 +
            (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C152546 -
           ((C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351 + C51198 * C1703 - C51199 * C1682 -
             C51198 * C1704 + C51193 * C1718) *
                C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C152499) *
              C360 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C51883 * C152084 * C14963) *
               C152159 * C152546 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C152530 +
           (C51579 * C152084 * C14961 + (C53730 + C53729) * C152084 * C14962 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C152084 * C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152084 * C14961 +
            (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
               C152159 * C1401 -
           ((C66438 + C66437) * C152084 * C14963 +
            (C66436 + C66435) * C152084 * C14962 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152084 * C14961) *
               C152159 * C1402 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152084 * C14961 +
            (C51198 * C1699 - C51199 * C1680 - C51198 * C1700 + C51193 * C1716 +
             C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243) *
                C152084 * C14962 +
            (C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C152084 * C14963) *
               C152159 * C152499) *
              C152543 +
          (((C51569 + C51568) * C152084 * C14961 +
            (C52628 + C52629) * C152084 * C14962 +
            (C54802 + C54801) * C152084 * C14963) *
               C152159 * C1402 -
           (C65718 * C14963 + (C51872 + C51873) * C152084 * C14962 +
            (C51264 + C51263) * C152084 * C14961) *
               C152159 * C1401 -
           ((C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351 + C51198 * C1703 - C51199 * C1682 -
             C51198 * C1704 + C51193 * C1718) *
                C152084 * C14963 +
            (C53731 + C53732) * C152084 * C14962 +
            (C51571 + C51570) * C152084 * C14961) *
               C152159 * C152499) *
              C152526 +
          ((C51273 * C152084 * C14961 + (C51871 + C51870) * C152084 * C14962 +
            C65711 * C14963) *
               C152159 * C1401 -
           ((C54799 + C54800) * C152084 * C14963 +
            (C52631 + C52630) * C152084 * C14962 + C51578 * C152084 * C14961) *
               C152159 * C1402 +
           (C51579 * C152084 * C14961 + (C53730 + C53729) * C152084 * C14962 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C152084 * C14963) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C152084 * C14961 +
           (C65725 + C65726) * C152084 * C14962 + C65732 * C14963) *
              C152159 * C1489 -
          ((C66438 + C66437) * C152084 * C14963 +
           (C66436 + C66435) * C152084 * C14962 +
           (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
            C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
               C152084 * C14961) *
              C152159 * C1490 +
          ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
            C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
            C152376 * C1522) *
               C152084 * C14961 +
           (C51198 * C1699 - C51199 * C1680 - C51198 * C1700 + C51193 * C1716 +
            C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
            C152376 * C2243) *
               C152084 * C14962 +
           (C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
            C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
            C152376 * C8352) *
               C152084 * C14963) *
              C152159 * C1491 -
          ((C51200 * C8347 - C51201 * C8337 - C51200 * C8348 + C152376 * C8355 +
            C51198 * C8341 - C51199 * C8334 - C51198 * C8342 + C51193 * C8352) *
               C152084 * C14963 +
           (C51200 * C8345 - C51201 * C8336 - C51200 * C8346 + C152376 * C8354 +
            C51198 * C2235 - C51199 * C2231 - C51198 * C2236 + C51193 * C2243) *
               C152084 * C14962 +
           (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 + C152376 * C1523 +
            C51198 * C1509 - C51199 * C1498 - C51198 * C1510 + C51193 * C1522) *
               C152084 * C14961) *
              C152159 * C1492 +
          ((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
            C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
            C152376 * C8112) *
               C152084 * C14961 +
           (C51198 * C8345 - C51199 * C8336 - C51198 * C8346 + C51193 * C8354 +
            C51200 * C9087 - C51201 * C9085 - C51200 * C9088 +
            C152376 * C9091) *
               C152084 * C14962 +
           (C51198 * C8347 - C51199 * C8337 - C51198 * C8348 + C51193 * C8355 +
            C51200 * C60866 - C51201 * C60865 - C51200 * C60867 +
            C152376 * C60868) *
               C152084 * C14963) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C152200 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C152207 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
               C152159 * C3799) *
              C152118 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            (C83746 * C152436 + C52634 * C152089) * C152404) *
               C152159 * C152207 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C152200 -
           (((C53729 + C53730) * C152089 + C85150 * C152436) * C152404 +
            ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                C152475) *
               C152159 * C3799) *
              C152127 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152159 * C152200 -
           (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
            ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
               C152159 * C152207 +
           ((C51579 * C152436 + (C51577 + C51576) * C152089) * C152475 +
            ((C53730 + C53729) * C152436 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C3799) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C152458 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152246) *
               C152200 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152246 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C152458) *
               C152207 +
           ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
               C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
               C152376 * C1522) *
                  C152436 +
              (C51570 + C51571) * C152089) *
                 C152475 +
             ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
                C152458 -
            (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                 C152404 +
             (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
                C152246) *
               C3799) *
              C3455 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152246 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C152458) *
               C152200 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C152458 -
            (((C54799 + C54800) * C152089 + C86537 * C152436) * C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152246) *
               C152207 +
           (((C85149 * C152436 + (C53730 + C53729) * C152089) * C152475 +
             ((C67553 + C67554) * C152436 +
              (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 +
               C51193 * C1719 + C51200 * C9966 - C51201 * C9965 -
               C51200 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C53729 + C53730) * C152089 + C85150 * C152436) * C152404 +
             ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                 C152475) *
                C152458) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C152553 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C152549 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
               C152159 * C152535 -
           (((C84761 + C84762) * C152089 + (C67774 + C67773) * C152436) *
                C152404 +
            ((C53413 + C53414) * C152089 +
             (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
              C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
              C51198 * C1510 + C51193 * C1522) *
                 C152436) *
                C152475) *
               C152159 * C152509) *
              C3455 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            (C83746 * C152436 + C52634 * C152089) * C152404) *
               C152159 * C152549 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C152553 -
           (((C53729 + C53730) * C152089 + C85150 * C152436) * C152404 +
            ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                C152475) *
               C152159 * C152535 +
           (((C53414 + C53413) * C152436 + (C53412 + C53411) * C152089) *
                C152475 +
            ((C84762 + C84761) * C152436 +
             (C51198 * C2239 - C51199 * C2233 - C51198 * C2240 +
              C51193 * C2245 + C51200 * C8867 - C51201 * C8866 -
              C51200 * C8868 + C152376 * C8869) *
                 C152089) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C3315 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C152204) *
              C152552 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            (C83746 * C152436 + C52634 * C152089) * C152404) *
               C152159 * C152204 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C3315) *
              C152545 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152159 * C3315 -
           (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
            ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
               C152159 * C152204) *
              C152528 +
          (((C52078 * C152436 + (C52092 + C52091) * C152089) * C152475 +
            ((C52633 + C52632) * C152436 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C152089) *
                C152404) *
               C152159 * C152204 -
           (((C52300 + C52301) * C152089 + C83359 * C152436) * C152404 +
            ((C51270 + C51269) * C152089 + C51274 * C152436) * C152475) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C152547 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152532 +
            ((C65731 * C152436 + C82840 * C152089) * C152475 +
             ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
                C152502) *
               C3315 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152532 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C152547 -
            (((C68675 + C68676) * C152089 + (C67048 + C67047) * C152436) *
                 C152404 +
             (C86537 * C152089 + C67005 * C152436) * C152475) *
                C152502) *
               C152204) *
              C3455 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152532 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C152547 -
            (((C55021 + C55022) * C152089 + C86796 * C152436) * C152404 +
             (C82842 * C152089 + C65710 * C152436) * C152475) *
                C152502) *
               C3315 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C152547 -
            (((C54799 + C54800) * C152089 + C86537 * C152436) * C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152532 +
            ((C68661 * C152436 + (C54800 + C54799) * C152089) * C152475 +
             ((C68676 + C68675) * C152436 +
              (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 +
               C51193 * C3183 + C51200 * C10185 - C51201 * C10184 -
               C51200 * C10186 + C152376 * C10187) *
                  C152089) *
                 C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C152458 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152246) *
               C3315 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152246 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C152458) *
               C152204) *
              C152118 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152246 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C152458) *
               C3315 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C152458 -
            (((C54799 + C54800) * C152089 + C86537 * C152436) * C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152246) *
               C152204) *
              C152127 +
          ((((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
             (C82841 * C152436 + C52287 * C152089) * C152404) *
                C152458 -
            (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
             (C83359 * C152089 + C51882 * C152436) * C152475) *
                C152246) *
               C3315 +
           (((C52634 * C152436 + (C52633 + C52632) * C152089) * C152475 +
             ((C54800 + C54799) * C152436 +
              (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
               C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
               C51200 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
             ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
                C152458) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C3315 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C152204) *
              C152552 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            (C83746 * C152436 + C52634 * C152089) * C152404) *
               C152159 * C152204 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C3315) *
              C152545 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152159 * C3315 -
           (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
            ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
               C152159 * C152204) *
              C152528 +
          (((C52078 * C152436 + (C52092 + C52091) * C152089) * C152475 +
            ((C52633 + C52632) * C152436 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C152089) *
                C152404) *
               C152159 * C152204 -
           (((C52300 + C52301) * C152089 + C83359 * C152436) * C152404 +
            ((C51270 + C51269) * C152089 + C51274 * C152436) * C152475) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C152553 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C152549 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
               C152159 * C152535 -
           (((C84761 + C84762) * C152089 + (C67774 + C67773) * C152436) *
                C152404 +
            ((C53413 + C53414) * C152089 +
             (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
              C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
              C51198 * C1510 + C51193 * C1522) *
                 C152436) *
                C152475) *
               C152159 * C152509) *
              C3455 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            (C83746 * C152436 + C52634 * C152089) * C152404) *
               C152159 * C152549 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C152553 -
           (((C53729 + C53730) * C152089 + C85150 * C152436) * C152404 +
            ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                C152475) *
               C152159 * C152535 +
           (((C53414 + C53413) * C152436 + (C53412 + C53411) * C152089) *
                C152475 +
            ((C84762 + C84761) * C152436 +
             (C51198 * C2239 - C51199 * C2233 - C51198 * C2240 +
              C51193 * C2245 + C51200 * C8867 - C51201 * C8866 -
              C51200 * C8868 + C152376 * C8869) *
                 C152089) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C4321 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152246) *
               C152200 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152246 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C4321) *
               C152207 +
           ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
               C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
               C152376 * C1522) *
                  C152436 +
              (C51570 + C51571) * C152089) *
                 C152475 +
             ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
                C4321 -
            (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                 C152404 +
             (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
                C152246) *
               C3799) *
              C152443 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152246 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C4321) *
               C152200 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C4321 -
            (((C54799 + C54800) * C152089 + C86537 * C152436) * C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152246) *
               C152207 +
           (((C85149 * C152436 + (C53730 + C53729) * C152089) * C152475 +
             ((C67553 + C67554) * C152436 +
              (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 +
               C51193 * C1719 + C51200 * C9966 - C51201 * C9965 -
               C51200 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C53729 + C53730) * C152089 + C85150 * C152436) * C152404 +
             ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                 C152475) *
                C4321) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152242 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152249 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C4993) *
              C152200 +
          ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
            ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
               C152249 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152242 -
           (((C68675 + C68676) * C152089 + (C67048 + C67047) * C152436) *
                C152404 +
            (C86537 * C152089 + C67005 * C152436) * C152475) *
               C4993) *
              C152207 +
          ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
               C152242 -
           (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                C152404 +
            (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
               C152249 +
           ((C67055 * C152436 + (C67553 + C67554) * C152089) * C152475 +
            ((C67054 + C67053) * C152436 +
             (C51198 * C9657 - C51199 * C9651 - C51198 * C9658 +
              C51193 * C9669 + C51200 * C10407 - C51201 * C10404 -
              C51200 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C4993) *
              C3799) *
         C152113) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C4321 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152246) *
              C152553 +
          ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
            ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
               C152246 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C4321) *
              C152549 +
          ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
               C4321 -
           (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                C152404 +
            (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
               C152246) *
              C152535 +
          ((((C67773 + C67774) * C152436 + (C84762 + C84761) * C152089) *
                C152475 +
            ((C67775 + C67776) * C152436 +
             (C51198 * C8339 - C51199 * C8333 - C51198 * C8340 +
              C51193 * C8351 + C51200 * C8349 - C51201 * C8338 -
              C51200 * C8350 + C152376 * C8356) *
                 C152089) *
                C152404) *
               C152246 -
           (((C84761 + C84762) * C152089 + (C67774 + C67773) * C152436) *
                C152404 +
            ((C53413 + C53414) * C152089 +
             (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
              C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
              C51198 * C1510 + C51193 * C1522) *
                 C152436) *
                C152475) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C4321 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152246) *
               C3315 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152246 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C4321) *
               C152204) *
              C152543 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152246 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C4321) *
               C3315 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C4321 -
            (((C54799 + C54800) * C152089 + C86537 * C152436) * C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152246) *
               C152204) *
              C152526 +
          ((((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
             (C82841 * C152436 + C52287 * C152089) * C152404) *
                C4321 -
            (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
             (C83359 * C152089 + C51882 * C152436) * C152475) *
                C152246) *
               C3315 +
           (((C52634 * C152436 + (C52633 + C52632) * C152089) * C152475 +
             ((C54800 + C54799) * C152436 +
              (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
               C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
               C51200 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
             ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152554 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152551 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C152538 -
           (((C68885 + C68886) * C152089 + (C68366 + C68365) * C152436) *
                C152404 +
            (C86796 * C152089 + C68339 * C152436) * C152475) *
               C152515) *
              C3315 +
          ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
            ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
               C152551 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152554 -
           (((C68675 + C68676) * C152089 + (C67048 + C67047) * C152436) *
                C152404 +
            (C86537 * C152089 + C67005 * C152436) * C152475) *
               C152538 +
           ((C69085 * C152436 + (C68676 + C68675) * C152089) * C152475 +
            ((C69100 + C69099) * C152436 +
             (C51198 * C9665 - C51199 * C9655 - C51198 * C9666 +
              C51193 * C9673 + C51200 * C9667 - C51201 * C9656 -
              C51200 * C9668 + C152376 * C9674) *
                 C152089) *
                C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C152242 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152249 +
            ((C65731 * C152436 + C82840 * C152089) * C152475 +
             ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
                C4993) *
               C3315 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152249 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C152242 -
            (((C68675 + C68676) * C152089 + (C67048 + C67047) * C152436) *
                 C152404 +
             (C86537 * C152089 + C67005 * C152436) * C152475) *
                C4993) *
               C152204) *
              C152443 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152249 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C152242 -
            (((C55021 + C55022) * C152089 + C86796 * C152436) * C152404 +
             (C82842 * C152089 + C65710 * C152436) * C152475) *
                C4993) *
               C3315 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C152242 -
            (((C54799 + C54800) * C152089 + C86537 * C152436) * C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152249 +
            ((C68661 * C152436 + (C54800 + C54799) * C152089) * C152475 +
             ((C68676 + C68675) * C152436 +
              (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 +
               C51193 * C3183 + C51200 * C10185 - C51201 * C10184 -
               C51200 * C10186 + C152376 * C10187) *
                  C152089) *
                 C152404) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C4321 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152246) *
               C3315 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152246 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C4321) *
               C152204) *
              C152543 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152246 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C4321) *
               C3315 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C4321 -
            (((C54799 + C54800) * C152089 + C86537 * C152436) * C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152246) *
               C152204) *
              C152526 +
          ((((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
             (C82841 * C152436 + C52287 * C152089) * C152404) *
                C4321 -
            (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
             (C83359 * C152089 + C51882 * C152436) * C152475) *
                C152246) *
               C3315 +
           (((C52634 * C152436 + (C52633 + C52632) * C152089) * C152475 +
             ((C54800 + C54799) * C152436 +
              (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
               C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
               C51200 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
             ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C4321 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152246) *
              C152553 +
          ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
            ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
               C152246 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C4321) *
              C152549 +
          ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
               C4321 -
           (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                C152404 +
            (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
               C152246) *
              C152535 +
          ((((C67773 + C67774) * C152436 + (C84762 + C84761) * C152089) *
                C152475 +
            ((C67775 + C67776) * C152436 +
             (C51198 * C8339 - C51199 * C8333 - C51198 * C8340 +
              C51193 * C8351 + C51200 * C8349 - C51201 * C8338 -
              C51200 * C8350 + C152376 * C8356) *
                 C152089) *
                C152404) *
               C152246 -
           (((C84761 + C84762) * C152089 + (C67774 + C67773) * C152436) *
                C152404 +
            ((C53413 + C53414) * C152089 +
             (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
              C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
              C51198 * C1510 + C51193 * C1522) *
                 C152436) *
                C152475) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C1851 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C1852 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
                C152404) *
               C152159 * C1853 -
           (((C84761 + C84762) * C152089 + (C67774 + C67773) * C152436) *
                C152404 +
            ((C53413 + C53414) * C152089 +
             (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
              C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
              C51198 * C1510 + C51193 * C1522) *
                 C152436) *
                C152475) *
               C152159 * C152509) *
              C152443 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            (C83746 * C152436 + C52634 * C152089) * C152404) *
               C152159 * C1852 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C1851 -
           (((C53729 + C53730) * C152089 + (C53731 + C53732) * C152436) *
                C152404 +
            ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                C152475) *
               C152159 * C1853 +
           (((C53414 + C53413) * C152436 + (C53412 + C53411) * C152089) *
                C152475 +
            ((C84762 + C84761) * C152436 +
             (C51198 * C2239 - C51199 * C2233 - C51198 * C2240 +
              C51193 * C2245 + C51200 * C8867 - C51201 * C8866 -
              C51200 * C8868 + C152376 * C8869) *
                 C152089) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C152457 -
           (((C52629 + C52628) * C152089 + (C66436 + C66435) * C152436) *
                C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C152204) *
              C851 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            ((C52628 + C52629) * C152436 + C52634 * C152089) * C152404) *
               C152159 * C152204 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C152457) *
              C852 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152159 * C152457 -
           (((C52632 + C52633) * C152089 + (C52631 + C52630) * C152436) *
                C152404 +
            ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
               C152159 * C152204) *
              C853 +
          (((C52078 * C152436 + (C52092 + C52091) * C152089) * C152475 +
            ((C52633 + C52632) * C152436 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C152089) *
                C152404) *
               C152159 * C152204 -
           (((C52300 + C52301) * C152089 + (C51879 + C51878) * C152436) *
                C152404 +
            ((C51270 + C51269) * C152089 + C51274 * C152436) * C152475) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C2393 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C2394 +
            ((C65731 * C152436 + C82840 * C152089) * C152475 +
             ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
                C152502) *
               C152457 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C2394 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C2393 -
            (((C68675 + C68676) * C152089 + (C67048 + C67047) * C152436) *
                 C152404 +
             (C86537 * C152089 + C67005 * C152436) * C152475) *
                C152502) *
               C152204) *
              C152443 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C2394 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C2393 -
            (((C55021 + C55022) * C152089 + (C55023 + C55024) * C152436) *
                 C152404 +
             (C82842 * C152089 + C65710 * C152436) * C152475) *
                C152502) *
               C152457 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C2393 -
            (((C54799 + C54800) * C152089 + C86537 * C152436) * C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C2394 +
            ((C68661 * C152436 + (C54800 + C54799) * C152089) * C152475 +
             ((C68676 + C68675) * C152436 +
              (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 +
               C51193 * C3183 + C51200 * C10185 - C51201 * C10184 -
               C51200 * C10186 + C152376 * C10187) *
                  C152089) *
                 C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152458 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152246) *
              C1851 +
          ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
            ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
               C152246 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152458) *
              C1852 +
          ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
               C152458 -
           (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                C152404 +
            (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
               C152246) *
              C1853 +
          ((((C67773 + C67774) * C152436 + (C84762 + C84761) * C152089) *
                C152475 +
            ((C67775 + C67776) * C152436 +
             (C51198 * C8339 - C51199 * C8333 - C51198 * C8340 +
              C51193 * C8351 + C51200 * C8349 - C51201 * C8338 -
              C51200 * C8350 + C152376 * C8356) *
                 C152089) *
                C152404) *
               C152246 -
           (((C84761 + C84762) * C152089 + (C67774 + C67773) * C152436) *
                C152404 +
            ((C53413 + C53414) * C152089 +
             (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
              C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
              C51198 * C1510 + C51193 * C1522) *
                 C152436) *
                C152475) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C152458 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152246) *
               C152457 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152246 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C152458) *
               C152204) *
              C359 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152246 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C152458) *
               C152457 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C152458 -
            (((C54799 + C54800) * C152089 + (C54801 + C54802) * C152436) *
                 C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152246) *
               C152204) *
              C360 +
          ((((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
             (C82841 * C152436 + C52287 * C152089) * C152404) *
                C152458 -
            (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
             (C83359 * C152089 + C51882 * C152436) * C152475) *
                C152246) *
               C152457 +
           (((C52634 * C152436 + (C52633 + C52632) * C152089) * C152475 +
             ((C54800 + C54799) * C152436 +
              (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
               C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
               C51200 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
             ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C3010 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C3011 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C3012 -
           (((C68885 + C68886) * C152089 + (C68366 + C68365) * C152436) *
                C152404 +
            (C86796 * C152089 + C68339 * C152436) * C152475) *
               C152515) *
              C152457 +
          ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
            ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
               C3011 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C3010 -
           (((C68675 + C68676) * C152089 + (C67048 + C67047) * C152436) *
                C152404 +
            (C86537 * C152089 + C67005 * C152436) * C152475) *
               C3012 +
           ((C69085 * C152436 + (C68676 + C68675) * C152089) * C152475 +
            ((C69100 + C69099) * C152436 +
             (C51198 * C9665 - C51199 * C9655 - C51198 * C9666 +
              C51193 * C9673 + C51200 * C9667 - C51201 * C9656 -
              C51200 * C9668 + C152376 * C9674) *
                 C152089) *
                C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C152436 +
                (C51263 + C51264) * C152089) *
                   C152475 +
               ((C65725 + C65726) * C152436 + (C51873 + C51872) * C152089) *
                   C152404) *
                  C152159 * C152141 * C129 -
              ((C51882 * C152089 + (C51872 + C51873) * C152436) * C152404 +
               ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                   C152475) *
                  C152159 * C152141 * C130 +
              ((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
               ((C51871 + C51870) * C152436 + C52287 * C152089) * C152404) *
                  C152159 * C152141 * C131 -
              (((C52300 + C52301) * C152089 + (C51879 + C51878) * C152436) *
                   C152404 +
               ((C51270 + C51269) * C152089 + C51274 * C152436) * C152475) *
                  C152159 * C152141 * C132 +
              ((C51275 * C152436 + (C51272 + C51271) * C152089) * C152475 +
               ((C52301 + C52300) * C152436 +
                (C51198 * C647 - C51199 * C625 - C51198 * C648 + C51193 * C661 +
                 C51200 * C1219 - C51201 * C1208 - C51200 * C1220 +
                 C152376 * C1226) *
                    C152089) *
                   C152404) *
                  C152159 * C152141 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C51198 * C144 - C51199 * C136 - C51198 * C145 +
                  C51193 * C160 + C51200 * C380 - C51201 * C365 -
                  C51200 * C381 + C152376 * C401) *
                     C152436 +
                 (C51263 + C51264) * C152089) *
                    C152475 +
                ((C65725 + C65726) * C152436 + (C51873 + C51872) * C152089) *
                    C152404) *
                   C152159 * C152546 -
               (((C52629 + C52628) * C152089 + (C66436 + C66435) * C152436) *
                    C152404 +
                ((C51568 + C51569) * C152089 +
                 (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                  C152376 * C402 + C51198 * C380 - C51199 * C365 -
                  C51198 * C381 + C51193 * C401) *
                     C152436) *
                    C152475) *
                   C152159 * C152530 +
               (((C51198 * C382 - C51199 * C366 - C51198 * C383 +
                  C51193 * C402 + C51200 * C1509 - C51201 * C1498 -
                  C51200 * C1510 + C152376 * C1522) *
                     C152436 +
                 (C51570 + C51571) * C152089) *
                    C152475 +
                ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
                    C152404) *
                   C152159 * C152499) *
                  C359 +
              ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                    C152475 +
                ((C52628 + C52629) * C152436 + C52634 * C152089) * C152404) *
                   C152159 * C152530 -
               ((C51882 * C152089 + (C51872 + C51873) * C152436) * C152404 +
                ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                    C152475) *
                   C152159 * C152546 -
               (((C53729 + C53730) * C152089 + (C53731 + C53732) * C152436) *
                    C152404 +
                ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                    C152475) *
                   C152159 * C152499) *
                  C360 +
              (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
                ((C51871 + C51870) * C152436 + C52287 * C152089) * C152404) *
                   C152159 * C152546 -
               (((C52632 + C52633) * C152089 + (C52631 + C52630) * C152436) *
                    C152404 +
                ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
                   C152159 * C152530 +
               ((C51579 * C152436 + (C51577 + C51576) * C152089) * C152475 +
                ((C53730 + C53729) * C152436 +
                 (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
                  C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
                  C51200 * C2242 + C152376 * C2246) *
                     C152089) *
                    C152404) *
                   C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152547 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152532 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C152502) *
              C152141 * C359 +
          (((C82838 * C152436 + C82841 * C152089) * C152475 +
            (C82840 * C152436 + C51883 * C152089) * C152404) *
               C152532 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152547 -
           (((C55021 + C55022) * C152089 + (C55023 + C55024) * C152436) *
                C152404 +
            (C82842 * C152089 + C65710 * C152436) * C152475) *
               C152502) *
              C152141 * C360 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152547 -
           (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
            ((C51879 + C51878) * C152089 + C51882 * C152436) * C152475) *
               C152532 +
           ((C51883 * C152436 + (C51881 + C51880) * C152089) * C152475 +
            ((C55022 + C55021) * C152436 +
             (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 +
              C51193 * C2653 + C51200 * C3179 - C51201 * C3172 -
              C51200 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C1401 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C1402 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
                C152404) *
               C152159 * C152499) *
              C152543 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            (C83746 * C152436 + C52634 * C152089) * C152404) *
               C152159 * C1402 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C1401 -
           (((C53729 + C53730) * C152089 + (C53731 + C53732) * C152436) *
                C152404 +
            ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                C152475) *
               C152159 * C152499) *
              C152526 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152159 * C1401 -
           (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
            ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
               C152159 * C1402 +
           ((C51579 * C152436 + (C51577 + C51576) * C152089) * C152475 +
            ((C53730 + C53729) * C152436 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152436 +
            (C51263 + C51264) * C152089) *
               C152475 +
           ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
              C152159 * C1489 -
          ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
           ((C51568 + C51569) * C152089 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152436) *
               C152475) *
              C152159 * C1490 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152436 +
            (C51570 + C51571) * C152089) *
               C152475 +
           ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
               C152404) *
              C152159 * C1491 -
          (((C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353 + C51198 * C2237 - C51199 * C2232 -
             C51198 * C2238 + C51193 * C2244) *
                C152089 +
            (C67774 + C67773) * C152436) *
               C152404 +
           ((C53413 + C53414) * C152089 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C152436) *
               C152475) *
              C152159 * C1492 +
          (((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
             C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
             C152376 * C8112) *
                C152436 +
            (C51198 * C1513 - C51199 * C1500 - C51198 * C1514 + C51193 * C1524 +
             C51200 * C8103 - C51201 * C8099 - C51200 * C8104 +
             C152376 * C8111) *
                C152089) *
               C152475 +
           ((C51198 * C8345 - C51199 * C8336 - C51198 * C8346 + C51193 * C8354 +
             C51200 * C9087 - C51201 * C9085 - C51200 * C9088 +
             C152376 * C9091) *
                C152436 +
            (C51198 * C8343 - C51199 * C8335 - C51198 * C8344 + C51193 * C8353 +
             C51200 * C9089 - C51201 * C9086 - C51200 * C9090 +
             C152376 * C9092) *
                C152089) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152547 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152532 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C152502) *
              C1401 +
          ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
            ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
               C152532 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152547 -
           (((C68675 + C68676) * C152089 + (C67048 + C67047) * C152436) *
                C152404 +
            ((C54801 + C54802) * C152089 + C67005 * C152436) * C152475) *
               C152502) *
              C1402 +
          ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
                C152404) *
               C152547 -
           (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                C152404 +
            ((C53731 + C53732) * C152089 + (C67050 + C67049) * C152436) *
                C152475) *
               C152532 +
           ((C67055 * C152436 + (C67553 + C67554) * C152089) * C152475 +
            ((C67054 + C67053) * C152436 +
             (C51198 * C9657 - C51199 * C9651 - C51198 * C9658 +
              C51193 * C9669 + C51200 * C10407 - C51201 * C10404 -
              C51200 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C2393 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C2394 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C82838 * C152436 + C82841 * C152089) * C152475 +
            (C82840 * C152436 + C51883 * C152089) * C152404) *
               C2394 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C2393 -
           (((C55021 + C55022) * C152089 + (C55023 + C55024) * C152436) *
                C152404 +
            (C82842 * C152089 + C65710 * C152436) * C152475) *
               C152502) *
              C152141 * C152526 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C2393 -
           (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
            (C83359 * C152089 + C51882 * C152436) * C152475) *
               C2394 +
           ((C51883 * C152436 + (C51881 + C51880) * C152089) * C152475 +
            ((C55022 + C55021) * C152436 +
             (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 +
              C51193 * C2653 + C51200 * C3179 - C51201 * C3172 -
              C51200 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C2393 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C2394 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C152502) *
              C152546 +
          ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
            ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
               C2394 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C2393 -
           (((C68675 + C68676) * C152089 + (C67048 + C67047) * C152436) *
                C152404 +
            ((C54801 + C54802) * C152089 + C67005 * C152436) * C152475) *
               C152502) *
              C152530 +
          ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
               C2393 -
           (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                C152404 +
            (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
               C2394 +
           ((C67055 * C152436 + (C67553 + C67554) * C152089) * C152475 +
            ((C67054 + C67053) * C152436 +
             (C51198 * C9657 - C51199 * C9651 - C51198 * C9658 +
              C51193 * C9669 + C51200 * C10407 - C51201 * C10404 -
              C51200 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152436 +
            (C51263 + C51264) * C152089) *
               C152475 +
           ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
              C2624 -
          ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
           (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
              C2625 +
          ((C65731 * C152436 + C82840 * C152089) * C152475 +
           ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
              C2626 -
          (((C68885 + C68886) * C152089 + (C68366 + C68365) * C152436) *
               C152404 +
           ((C55023 + C55024) * C152089 + C68339 * C152436) * C152475) *
              C2627 +
          ((C68369 * C152436 + (C68886 + C68885) * C152089) * C152475 +
           ((C68368 + C68367) * C152436 +
            (C51198 * C18071 - C51199 * C18067 - C51198 * C18072 +
             C51193 * C18079 + C51200 * C18813 - C51201 * C18810 -
             C51200 * C18814 + C152376 * C18816) *
                C152089) *
               C152404) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C152458 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152246) *
               C1401 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152246 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C152458) *
               C1402 +
           ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
               C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
               C152376 * C1522) *
                  C152436 +
              (C51570 + C51571) * C152089) *
                 C152475 +
             ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
                C152458 -
            (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                 C152404 +
             (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
                C152246) *
               C152499) *
              C152443 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152246 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C152458) *
               C1401 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C152458 -
            (((C54799 + C54800) * C152089 + (C54801 + C54802) * C152436) *
                 C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152246) *
               C1402 +
           (((C85149 * C152436 + (C53730 + C53729) * C152089) * C152475 +
             ((C67553 + C67554) * C152436 +
              (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 +
               C51193 * C1719 + C51200 * C9966 - C51201 * C9965 -
               C51200 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C53729 + C53730) * C152089 + C85150 * C152436) * C152404 +
             ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                 C152475) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152458 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152246) *
              C152141 * C851 +
          (((C82838 * C152436 + C82841 * C152089) * C152475 +
            (C82840 * C152436 + C51883 * C152089) * C152404) *
               C152246 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152458) *
              C152141 * C852 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152458 -
           (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
            (C83359 * C152089 + C51882 * C152436) * C152475) *
               C152246) *
              C152141 * C853 +
          (((C52287 * C152436 + (C52301 + C52300) * C152089) * C152475 +
            ((C51881 + C51880) * C152436 +
             (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
              C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
              C152376 * C2858) *
                 C152089) *
                C152404) *
               C152246 -
           (((C52300 + C52301) * C152089 + C83359 * C152436) * C152404 +
            ((C51270 + C51269) * C152089 + C51274 * C152436) * C152475) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C3010 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C3011 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C3012 -
           (((C68885 + C68886) * C152089 + (C68366 + C68365) * C152436) *
                C152404 +
            (C86796 * C152089 + C68339 * C152436) * C152475) *
               C152515) *
              C152141 * C152443 +
          (((C82838 * C152436 + C82841 * C152089) * C152475 +
            (C82840 * C152436 + C51883 * C152089) * C152404) *
               C3011 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C3010 -
           (((C55021 + C55022) * C152089 + C86796 * C152436) * C152404 +
            (C82842 * C152089 + C65710 * C152436) * C152475) *
               C3012 +
           ((C68871 * C152436 + (C55022 + C55021) * C152089) * C152475 +
            ((C68886 + C68885) * C152436 +
             (C51198 * C2649 - C51199 * C2635 - C51198 * C2650 +
              C51193 * C2659 + C51200 * C18401 - C51201 * C18400 -
              C51200 * C18402 + C152376 * C18403) *
                 C152089) *
                C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + (C51873 + C51872) * C152089) *
                C152404) *
               C152159 * C152546 -
           (((C52629 + C52628) * C152089 + (C66436 + C66435) * C152436) *
                C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C152530 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
                C152404) *
               C152159 * C152499) *
              C359 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            ((C52628 + C52629) * C152436 + C52634 * C152089) * C152404) *
               C152159 * C152530 -
           ((C51882 * C152089 + (C51872 + C51873) * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C152546 -
           (((C53729 + C53730) * C152089 + (C53731 + C53732) * C152436) *
                C152404 +
            ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                C152475) *
               C152159 * C152499) *
              C360 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            ((C51871 + C51870) * C152436 + C52287 * C152089) * C152404) *
               C152159 * C152546 -
           (((C52632 + C52633) * C152089 + (C52631 + C52630) * C152436) *
                C152404 +
            ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
               C152159 * C152530 +
           ((C51579 * C152436 + (C51577 + C51576) * C152089) * C152475 +
            ((C53730 + C53729) * C152436 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152436 +
            (C51263 + C51264) * C152089) *
               C152475 +
           ((C65725 + C65726) * C152436 + (C51873 + C51872) * C152089) *
               C152404) *
              C152159 * C152141 * C129 -
          ((C51882 * C152089 + (C51872 + C51873) * C152436) * C152404 +
           ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
               C152475) *
              C152159 * C152141 * C130 +
          ((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
           ((C51871 + C51870) * C152436 + C52287 * C152089) * C152404) *
              C152159 * C152141 * C131 -
          (((C52300 + C52301) * C152089 + (C51879 + C51878) * C152436) *
               C152404 +
           ((C51270 + C51269) * C152089 + C51274 * C152436) * C152475) *
              C152159 * C152141 * C132 +
          ((C51275 * C152436 + (C51272 + C51271) * C152089) * C152475 +
           ((C52301 + C52300) * C152436 +
            (C51198 * C647 - C51199 * C625 - C51198 * C648 + C51193 * C661 +
             C51200 * C1219 - C51201 * C1208 - C51200 * C1220 +
             C152376 * C1226) *
                C152089) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C1401 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C1402 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
                C152404) *
               C152159 * C152499) *
              C152543 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            (C83746 * C152436 + C52634 * C152089) * C152404) *
               C152159 * C1402 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C1401 -
           (((C53729 + C53730) * C152089 + (C53731 + C53732) * C152436) *
                C152404 +
            ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                C152475) *
               C152159 * C152499) *
              C152526 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152159 * C1401 -
           (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
            ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
               C152159 * C1402 +
           ((C51579 * C152436 + (C51577 + C51576) * C152089) * C152475 +
            ((C53730 + C53729) * C152436 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152436 +
            (C51263 + C51264) * C152089) *
               C152475 +
           ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
              C152159 * C1489 -
          ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
           ((C51568 + C51569) * C152089 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152436) *
               C152475) *
              C152159 * C1490 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152436 +
            (C51570 + C51571) * C152089) *
               C152475 +
           ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
               C152404) *
              C152159 * C1491 -
          (((C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353 + C51198 * C2237 - C51199 * C2232 -
             C51198 * C2238 + C51193 * C2244) *
                C152089 +
            (C67774 + C67773) * C152436) *
               C152404 +
           ((C53413 + C53414) * C152089 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C152436) *
               C152475) *
              C152159 * C1492 +
          (((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
             C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
             C152376 * C8112) *
                C152436 +
            (C51198 * C1513 - C51199 * C1500 - C51198 * C1514 + C51193 * C1524 +
             C51200 * C8103 - C51201 * C8099 - C51200 * C8104 +
             C152376 * C8111) *
                C152089) *
               C152475 +
           ((C51198 * C8345 - C51199 * C8336 - C51198 * C8346 + C51193 * C8354 +
             C51200 * C9087 - C51201 * C9085 - C51200 * C9088 +
             C152376 * C9091) *
                C152436 +
            (C51198 * C8343 - C51199 * C8335 - C51198 * C8344 + C51193 * C8353 +
             C51200 * C9089 - C51201 * C9086 - C51200 * C9090 +
             C152376 * C9092) *
                C152089) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C2393 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C2394 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C82838 * C152436 + C82841 * C152089) * C152475 +
            (C82840 * C152436 + C51883 * C152089) * C152404) *
               C2394 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C2393 -
           (((C55021 + C55022) * C152089 + (C55023 + C55024) * C152436) *
                C152404 +
            (C82842 * C152089 + C65710 * C152436) * C152475) *
               C152502) *
              C152141 * C152526 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C2393 -
           (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
            (C83359 * C152089 + C51882 * C152436) * C152475) *
               C2394 +
           ((C51883 * C152436 + (C51881 + C51880) * C152089) * C152475 +
            ((C55022 + C55021) * C152436 +
             (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 +
              C51193 * C2653 + C51200 * C3179 - C51201 * C3172 -
              C51200 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C2393 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C2394 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C152502) *
              C152546 +
          ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
            ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
               C2394 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C2393 -
           (((C68675 + C68676) * C152089 + (C67048 + C67047) * C152436) *
                C152404 +
            ((C54801 + C54802) * C152089 + C67005 * C152436) * C152475) *
               C152502) *
              C152530 +
          ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
               C2393 -
           (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                C152404 +
            (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
               C2394 +
           ((C67055 * C152436 + (C67553 + C67554) * C152089) * C152475 +
            ((C67054 + C67053) * C152436 +
             (C51198 * C9657 - C51199 * C9651 - C51198 * C9658 +
              C51193 * C9669 + C51200 * C10407 - C51201 * C10404 -
              C51200 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C4321 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152246) *
               C152457 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152246 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C4321) *
               C152204) *
              C152118 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152246 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C4321) *
               C152457 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C4321 -
            (((C54799 + C54800) * C152089 + C86537 * C152436) * C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152246) *
               C152204) *
              C152127 +
          ((((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
             (C82841 * C152436 + C52287 * C152089) * C152404) *
                C4321 -
            (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
             (C83359 * C152089 + C51882 * C152436) * C152475) *
                C152246) *
               C152457 +
           (((C52634 * C152436 + (C52633 + C52632) * C152089) * C152475 +
             ((C54800 + C54799) * C152436 +
              (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
               C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
               C51200 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
             ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
                C4321) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C152242 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152249 +
            ((C65731 * C152436 + C82840 * C152089) * C152475 +
             ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
                C4993) *
               C152457 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152249 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C152242 -
            (((C68675 + C68676) * C152089 + (C67048 + C67047) * C152436) *
                 C152404 +
             (C86537 * C152089 + C67005 * C152436) * C152475) *
                C4993) *
               C152204) *
              C3455 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152249 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C152242 -
            (((C55021 + C55022) * C152089 + C86796 * C152436) * C152404 +
             (C82842 * C152089 + C65710 * C152436) * C152475) *
                C4993) *
               C152457 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C152242 -
            (((C54799 + C54800) * C152089 + C86537 * C152436) * C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152249 +
            ((C68661 * C152436 + (C54800 + C54799) * C152089) * C152475 +
             ((C68676 + C68675) * C152436 +
              (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 +
               C51193 * C3183 + C51200 * C10185 - C51201 * C10184 -
               C51200 * C10186 + C152376 * C10187) *
                  C152089) *
                 C152404) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C4321 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152246) *
               C152546 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152246 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C4321) *
               C152530 +
           ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
               C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
               C152376 * C1522) *
                  C152436 +
              (C51570 + C51571) * C152089) *
                 C152475 +
             ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
                C4321 -
            (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                 C152404 +
             (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
                C152246) *
               C152499) *
              C3455 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152246 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C4321) *
               C152546 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C4321 -
            (((C54799 + C54800) * C152089 + C86537 * C152436) * C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152246) *
               C152530 +
           (((C85149 * C152436 + (C53730 + C53729) * C152089) * C152475 +
             ((C67553 + C67554) * C152436 +
              (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 +
               C51193 * C1719 + C51200 * C9966 - C51201 * C9965 -
               C51200 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C53729 + C53730) * C152089 + C85150 * C152436) * C152404 +
             ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                 C152475) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C4321 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152246) *
              C152141 * C152552 +
          (((C82838 * C152436 + C82841 * C152089) * C152475 +
            (C82840 * C152436 + C51883 * C152089) * C152404) *
               C152246 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C4321) *
              C152141 * C152545 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C4321 -
           (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
            (C83359 * C152089 + C51882 * C152436) * C152475) *
               C152246) *
              C152141 * C152528 +
          (((C52287 * C152436 + (C52301 + C52300) * C152089) * C152475 +
            ((C51881 + C51880) * C152436 +
             (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
              C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
              C152376 * C2858) *
                 C152089) *
                C152404) *
               C152246 -
           (((C52300 + C52301) * C152089 + C83359 * C152436) * C152404 +
            ((C51270 + C51269) * C152089 + C51274 * C152436) * C152475) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152554 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152551 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C152538 -
           (((C68885 + C68886) * C152089 + (C68366 + C68365) * C152436) *
                C152404 +
            (C86796 * C152089 + C68339 * C152436) * C152475) *
               C152515) *
              C152141 * C3455 +
          (((C82838 * C152436 + C82841 * C152089) * C152475 +
            (C82840 * C152436 + C51883 * C152089) * C152404) *
               C152551 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152554 -
           (((C55021 + C55022) * C152089 + C86796 * C152436) * C152404 +
            (C82842 * C152089 + C65710 * C152436) * C152475) *
               C152538 +
           ((C68871 * C152436 + (C55022 + C55021) * C152089) * C152475 +
            ((C68886 + C68885) * C152436 +
             (C51198 * C2649 - C51199 * C2635 - C51198 * C2650 +
              C51193 * C2659 + C51200 * C18401 - C51201 * C18400 -
              C51200 * C18402 + C152376 * C18403) *
                 C152089) *
                C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152242 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152249 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C4993) *
              C152141 * C152118 +
          (((C82838 * C152436 + C82841 * C152089) * C152475 +
            (C82840 * C152436 + C51883 * C152089) * C152404) *
               C152249 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152242 -
           (((C55021 + C55022) * C152089 + C86796 * C152436) * C152404 +
            (C82842 * C152089 + C65710 * C152436) * C152475) *
               C4993) *
              C152141 * C152127 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152242 -
           (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
            (C83359 * C152089 + C51882 * C152436) * C152475) *
               C152249 +
           ((C51883 * C152436 + (C51881 + C51880) * C152089) * C152475 +
            ((C55022 + C55021) * C152436 +
             (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 +
              C51193 * C2653 + C51200 * C3179 - C51201 * C3172 -
              C51200 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C4993) *
              C152141 * C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C4321 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152246) *
              C152141 * C152552 +
          (((C82838 * C152436 + C82841 * C152089) * C152475 +
            (C82840 * C152436 + C51883 * C152089) * C152404) *
               C152246 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C4321) *
              C152141 * C152545 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C4321 -
           (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
            (C83359 * C152089 + C51882 * C152436) * C152475) *
               C152246) *
              C152141 * C152528 +
          (((C52287 * C152436 + (C52301 + C52300) * C152089) * C152475 +
            ((C51881 + C51880) * C152436 +
             (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
              C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
              C152376 * C2858) *
                 C152089) *
                C152404) *
               C152246 -
           (((C52300 + C52301) * C152089 + C83359 * C152436) * C152404 +
            ((C51270 + C51269) * C152089 + C51274 * C152436) * C152475) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C4321 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152246) *
               C152546 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152246 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C4321) *
               C152530 +
           ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
               C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
               C152376 * C1522) *
                  C152436 +
              (C51570 + C51571) * C152089) *
                 C152475 +
             ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
                C4321 -
            (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                 C152404 +
             (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
                C152246) *
               C152499) *
              C3455 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152246 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C4321) *
               C152546 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C4321 -
            (((C54799 + C54800) * C152089 + C86537 * C152436) * C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152246) *
               C152530 +
           (((C85149 * C152436 + (C53730 + C53729) * C152089) * C152475 +
             ((C67553 + C67554) * C152436 +
              (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 +
               C51193 * C1719 + C51200 * C9966 - C51201 * C9965 -
               C51200 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C53729 + C53730) * C152089 + C85150 * C152436) * C152404 +
             ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                 C152475) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C152457 -
           (((C52629 + C52628) * C152089 + (C66436 + C66435) * C152436) *
                C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C152204) *
              C851 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            ((C52628 + C52629) * C152436 + C52634 * C152089) * C152404) *
               C152159 * C152204 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C152457) *
              C852 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152159 * C152457 -
           (((C52632 + C52633) * C152089 + (C52631 + C52630) * C152436) *
                C152404 +
            ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
               C152159 * C152204) *
              C853 +
          (((C52078 * C152436 + (C52092 + C52091) * C152089) * C152475 +
            ((C52633 + C52632) * C152436 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C152089) *
                C152404) *
               C152159 * C152204 -
           (((C52300 + C52301) * C152089 + (C51879 + C51878) * C152436) *
                C152404 +
            ((C51270 + C51269) * C152089 + C51274 * C152436) * C152475) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C1851 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C1852 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
                C152404) *
               C152159 * C1853 -
           (((C84761 + C84762) * C152089 + (C67774 + C67773) * C152436) *
                C152404 +
            ((C53413 + C53414) * C152089 +
             (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
              C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
              C51198 * C1510 + C51193 * C1522) *
                 C152436) *
                C152475) *
               C152159 * C152509) *
              C152443 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            (C83746 * C152436 + C52634 * C152089) * C152404) *
               C152159 * C1852 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C1851 -
           (((C53729 + C53730) * C152089 + (C53731 + C53732) * C152436) *
                C152404 +
            ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                C152475) *
               C152159 * C1853 +
           (((C53414 + C53413) * C152436 + (C53412 + C53411) * C152089) *
                C152475 +
            ((C84762 + C84761) * C152436 +
             (C51198 * C2239 - C51199 * C2233 - C51198 * C2240 +
              C51193 * C2245 + C51200 * C8867 - C51201 * C8866 -
              C51200 * C8868 + C152376 * C8869) *
                 C152089) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C152458 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152246) *
               C152457 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152246 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C152458) *
               C152204) *
              C359 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152246 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C152458) *
               C152457 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C152458 -
            (((C54799 + C54800) * C152089 + (C54801 + C54802) * C152436) *
                 C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152246) *
               C152204) *
              C360 +
          ((((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
             (C82841 * C152436 + C52287 * C152089) * C152404) *
                C152458 -
            (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
             (C83359 * C152089 + C51882 * C152436) * C152475) *
                C152246) *
               C152457 +
           (((C52634 * C152436 + (C52633 + C52632) * C152089) * C152475 +
             ((C54800 + C54799) * C152436 +
              (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
               C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
               C51200 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
             ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152458 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152246) *
              C1851 +
          ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
            ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
               C152246 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152458) *
              C1852 +
          ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
               C152458 -
           (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                C152404 +
            (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
               C152246) *
              C1853 +
          ((((C67773 + C67774) * C152436 + (C84762 + C84761) * C152089) *
                C152475 +
            ((C67775 + C67776) * C152436 +
             (C51198 * C8339 - C51199 * C8333 - C51198 * C8340 +
              C51193 * C8351 + C51200 * C8349 - C51201 * C8338 -
              C51200 * C8350 + C152376 * C8356) *
                 C152089) *
                C152404) *
               C152246 -
           (((C84761 + C84762) * C152089 + (C67774 + C67773) * C152436) *
                C152404 +
            ((C53413 + C53414) * C152089 +
             (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
              C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
              C51198 * C1510 + C51193 * C1522) *
                 C152436) *
                C152475) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + (C51873 + C51872) * C152089) *
                C152404) *
               C152159 * C152546 -
           (((C52629 + C52628) * C152089 + (C66436 + C66435) * C152436) *
                C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C152530 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
                C152404) *
               C152159 * C152499) *
              C359 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            ((C52628 + C52629) * C152436 + C52634 * C152089) * C152404) *
               C152159 * C152530 -
           ((C51882 * C152089 + (C51872 + C51873) * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C152546 -
           (((C53729 + C53730) * C152089 + (C53731 + C53732) * C152436) *
                C152404 +
            ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                C152475) *
               C152159 * C152499) *
              C360 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            ((C51871 + C51870) * C152436 + C52287 * C152089) * C152404) *
               C152159 * C152546 -
           (((C52632 + C52633) * C152089 + (C52631 + C52630) * C152436) *
                C152404 +
            ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
               C152159 * C152530 +
           ((C51579 * C152436 + (C51577 + C51576) * C152089) * C152475 +
            ((C53730 + C53729) * C152436 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152436 +
            (C51263 + C51264) * C152089) *
               C152475 +
           ((C65725 + C65726) * C152436 + (C51873 + C51872) * C152089) *
               C152404) *
              C152159 * C152141 * C129 -
          ((C51882 * C152089 + (C51872 + C51873) * C152436) * C152404 +
           ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
               C152475) *
              C152159 * C152141 * C130 +
          ((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
           ((C51871 + C51870) * C152436 + C52287 * C152089) * C152404) *
              C152159 * C152141 * C131 -
          (((C52300 + C52301) * C152089 + (C51879 + C51878) * C152436) *
               C152404 +
           ((C51270 + C51269) * C152089 + C51274 * C152436) * C152475) *
              C152159 * C152141 * C132 +
          ((C51275 * C152436 + (C51272 + C51271) * C152089) * C152475 +
           ((C52301 + C52300) * C152436 +
            (C51198 * C647 - C51199 * C625 - C51198 * C648 + C51193 * C661 +
             C51200 * C1219 - C51201 * C1208 - C51200 * C1220 +
             C152376 * C1226) *
                C152089) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152547 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152532 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C152502) *
              C152141 * C359 +
          (((C82838 * C152436 + C82841 * C152089) * C152475 +
            (C82840 * C152436 + C51883 * C152089) * C152404) *
               C152532 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152547 -
           (((C55021 + C55022) * C152089 + (C55023 + C55024) * C152436) *
                C152404 +
            (C82842 * C152089 + C65710 * C152436) * C152475) *
               C152502) *
              C152141 * C360 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152547 -
           (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
            ((C51879 + C51878) * C152089 + C51882 * C152436) * C152475) *
               C152532 +
           ((C51883 * C152436 + (C51881 + C51880) * C152089) * C152475 +
            ((C55022 + C55021) * C152436 +
             (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 +
              C51193 * C2653 + C51200 * C3179 - C51201 * C3172 -
              C51200 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C1401 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C1402 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
                C152404) *
               C152159 * C152499) *
              C152543 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            (C83746 * C152436 + C52634 * C152089) * C152404) *
               C152159 * C1402 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C1401 -
           (((C53729 + C53730) * C152089 + (C53731 + C53732) * C152436) *
                C152404 +
            ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                C152475) *
               C152159 * C152499) *
              C152526 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152159 * C1401 -
           (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
            ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
               C152159 * C1402 +
           ((C51579 * C152436 + (C51577 + C51576) * C152089) * C152475 +
            ((C53730 + C53729) * C152436 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152436 +
            (C51263 + C51264) * C152089) *
               C152475 +
           ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
              C152159 * C1489 -
          ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
           ((C51568 + C51569) * C152089 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152436) *
               C152475) *
              C152159 * C1490 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152436 +
            (C51570 + C51571) * C152089) *
               C152475 +
           ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
               C152404) *
              C152159 * C1491 -
          (((C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353 + C51198 * C2237 - C51199 * C2232 -
             C51198 * C2238 + C51193 * C2244) *
                C152089 +
            (C67774 + C67773) * C152436) *
               C152404 +
           ((C53413 + C53414) * C152089 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C152436) *
               C152475) *
              C152159 * C1492 +
          (((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
             C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
             C152376 * C8112) *
                C152436 +
            (C51198 * C1513 - C51199 * C1500 - C51198 * C1514 + C51193 * C1524 +
             C51200 * C8103 - C51201 * C8099 - C51200 * C8104 +
             C152376 * C8111) *
                C152089) *
               C152475 +
           ((C51198 * C8345 - C51199 * C8336 - C51198 * C8346 + C51193 * C8354 +
             C51200 * C9087 - C51201 * C9085 - C51200 * C9088 +
             C152376 * C9091) *
                C152436 +
            (C51198 * C8343 - C51199 * C8335 - C51198 * C8344 + C51193 * C8353 +
             C51200 * C9089 - C51201 * C9086 - C51200 * C9090 +
             C152376 * C9092) *
                C152089) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152547 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152532 +
           ((C65731 * C152436 + C82840 * C152089) * C152475 +
            ((C65730 + C65729) * C152436 + C68871 * C152089) * C152404) *
               C152502) *
              C1401 +
          ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
            ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
               C152532 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152547 -
           (((C68675 + C68676) * C152089 + (C67048 + C67047) * C152436) *
                C152404 +
            ((C54801 + C54802) * C152089 + C67005 * C152436) * C152475) *
               C152502) *
              C1402 +
          ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
                C152404) *
               C152547 -
           (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                C152404 +
            ((C53731 + C53732) * C152089 + (C67050 + C67049) * C152436) *
                C152475) *
               C152532 +
           ((C67055 * C152436 + (C67553 + C67554) * C152089) * C152475 +
            ((C67054 + C67053) * C152436 +
             (C51198 * C9657 - C51199 * C9651 - C51198 * C9658 +
              C51193 * C9669 + C51200 * C10407 - C51201 * C10404 -
              C51200 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152458 -
           ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
            (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
               C152246) *
              C152141 * C851 +
          (((C82838 * C152436 + C82841 * C152089) * C152475 +
            (C82840 * C152436 + C51883 * C152089) * C152404) *
               C152246 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152458) *
              C152141 * C852 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152458 -
           (((C51880 + C51881) * C152089 + C82842 * C152436) * C152404 +
            (C83359 * C152089 + C51882 * C152436) * C152475) *
               C152246) *
              C152141 * C853 +
          (((C52287 * C152436 + (C52301 + C52300) * C152089) * C152475 +
            ((C51881 + C51880) * C152436 +
             (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
              C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
              C152376 * C2858) *
                 C152089) *
                C152404) *
               C152246 -
           (((C52300 + C52301) * C152089 + C83359 * C152436) * C152404 +
            ((C51270 + C51269) * C152089 + C51274 * C152436) * C152475) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
               C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                  C152436 +
              (C51263 + C51264) * C152089) *
                 C152475 +
             ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
                C152458 -
            ((C65710 * C152089 + (C65728 + C65727) * C152436) * C152404 +
             (C82839 * C152089 + (C65726 + C65725) * C152436) * C152475) *
                C152246) *
               C1401 +
           ((((C66435 + C66436) * C152436 + C83746 * C152089) * C152475 +
             ((C66437 + C66438) * C152436 + C68661 * C152089) * C152404) *
                C152246 -
            ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
             ((C51568 + C51569) * C152089 +
              (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
               C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                  C152436) *
                 C152475) *
                C152458) *
               C1402 +
           ((((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
               C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
               C152376 * C1522) *
                  C152436 +
              (C51570 + C51571) * C152089) *
                 C152475 +
             ((C67049 + C67050) * C152436 + C85149 * C152089) * C152404) *
                C152458 -
            (((C67554 + C67553) * C152089 + (C67052 + C67051) * C152436) *
                 C152404 +
             (C85150 * C152089 + (C67050 + C67049) * C152436) * C152475) *
                C152246) *
               C152499) *
              C152443 +
          ((((C82838 * C152436 + C82841 * C152089) * C152475 +
             (C82840 * C152436 + C51883 * C152089) * C152404) *
                C152246 -
            ((C51882 * C152089 + C82839 * C152436) * C152404 +
             ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                 C152475) *
                C152458) *
               C1401 +
           ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                 C152475 +
             (C83746 * C152436 + C52634 * C152089) * C152404) *
                C152458 -
            (((C54799 + C54800) * C152089 + (C54801 + C54802) * C152436) *
                 C152404 +
             (C83748 * C152089 + C83747 * C152436) * C152475) *
                C152246) *
               C1402 +
           (((C85149 * C152436 + (C53730 + C53729) * C152089) * C152475 +
             ((C67553 + C67554) * C152436 +
              (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 +
               C51193 * C1719 + C51200 * C9966 - C51201 * C9965 -
               C51200 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C53729 + C53730) * C152089 + C85150 * C152436) * C152404 +
             ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                 C152475) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152436 +
            (C51263 + C51264) * C152089) *
               C152475 +
           ((C65725 + C65726) * C152436 + (C51873 + C51872) * C152089) *
               C152404) *
              C152159 * C152141 * C129 -
          ((C51882 * C152089 + (C51872 + C51873) * C152436) * C152404 +
           ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
               C152475) *
              C152159 * C152141 * C130 +
          ((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
           ((C51871 + C51870) * C152436 + C52287 * C152089) * C152404) *
              C152159 * C152141 * C131 -
          (((C52300 + C52301) * C152089 + (C51879 + C51878) * C152436) *
               C152404 +
           ((C51270 + C51269) * C152089 + C51274 * C152436) * C152475) *
              C152159 * C152141 * C132 +
          ((C51275 * C152436 + (C51272 + C51271) * C152089) * C152475 +
           ((C52301 + C52300) * C152436 +
            (C51198 * C647 - C51199 * C625 - C51198 * C648 + C51193 * C661 +
             C51200 * C1219 - C51201 * C1208 - C51200 * C1220 +
             C152376 * C1226) *
                C152089) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + (C51873 + C51872) * C152089) *
                C152404) *
               C152159 * C152546 -
           (((C52629 + C52628) * C152089 + (C66436 + C66435) * C152436) *
                C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C152530 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
                C152404) *
               C152159 * C152499) *
              C359 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            ((C52628 + C52629) * C152436 + C52634 * C152089) * C152404) *
               C152159 * C152530 -
           ((C51882 * C152089 + (C51872 + C51873) * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C152546 -
           (((C53729 + C53730) * C152089 + (C53731 + C53732) * C152436) *
                C152404 +
            ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                C152475) *
               C152159 * C152499) *
              C360 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            ((C51871 + C51870) * C152436 + C52287 * C152089) * C152404) *
               C152159 * C152546 -
           (((C52632 + C52633) * C152089 + (C52631 + C52630) * C152436) *
                C152404 +
            ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
               C152159 * C152530 +
           ((C51579 * C152436 + (C51577 + C51576) * C152089) * C152475 +
            ((C53730 + C53729) * C152436 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C152436 +
             (C51263 + C51264) * C152089) *
                C152475 +
            ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
               C152159 * C1401 -
           ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
            ((C51568 + C51569) * C152089 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C152436) *
                C152475) *
               C152159 * C1402 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C51570 + C51571) * C152089) *
                C152475 +
            ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
                C152404) *
               C152159 * C152499) *
              C152543 +
          ((((C51569 + C51568) * C152436 + (C51567 + C51566) * C152089) *
                C152475 +
            (C83746 * C152436 + C52634 * C152089) * C152404) *
               C152159 * C1402 -
           ((C51882 * C152089 + C82839 * C152436) * C152404 +
            ((C51266 + C51265) * C152089 + (C51264 + C51263) * C152436) *
                C152475) *
               C152159 * C1401 -
           (((C53729 + C53730) * C152089 + (C53731 + C53732) * C152436) *
                C152404 +
            ((C51573 + C51572) * C152089 + (C51571 + C51570) * C152436) *
                C152475) *
               C152159 * C152499) *
              C152526 +
          (((C51273 * C152436 + (C51268 + C51267) * C152089) * C152475 +
            (C82841 * C152436 + C52287 * C152089) * C152404) *
               C152159 * C1401 -
           (((C52632 + C52633) * C152089 + C83748 * C152436) * C152404 +
            ((C51575 + C51574) * C152089 + C51578 * C152436) * C152475) *
               C152159 * C1402 +
           ((C51579 * C152436 + (C51577 + C51576) * C152089) * C152475 +
            ((C53730 + C53729) * C152436 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C152436 +
            (C51263 + C51264) * C152089) *
               C152475 +
           ((C65725 + C65726) * C152436 + C82838 * C152089) * C152404) *
              C152159 * C1489 -
          ((C83747 * C152089 + (C66436 + C66435) * C152436) * C152404 +
           ((C51568 + C51569) * C152089 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C152436) *
               C152475) *
              C152159 * C1490 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C152436 +
            (C51570 + C51571) * C152089) *
               C152475 +
           ((C67049 + C67050) * C152436 + (C53732 + C53731) * C152089) *
               C152404) *
              C152159 * C1491 -
          (((C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353 + C51198 * C2237 - C51199 * C2232 -
             C51198 * C2238 + C51193 * C2244) *
                C152089 +
            (C67774 + C67773) * C152436) *
               C152404 +
           ((C53413 + C53414) * C152089 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C152436) *
               C152475) *
              C152159 * C1492 +
          (((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
             C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
             C152376 * C8112) *
                C152436 +
            (C51198 * C1513 - C51199 * C1500 - C51198 * C1514 + C51193 * C1524 +
             C51200 * C8103 - C51201 * C8099 - C51200 * C8104 +
             C152376 * C8111) *
                C152089) *
               C152475 +
           ((C51198 * C8345 - C51199 * C8336 - C51198 * C8346 + C51193 * C8354 +
             C51200 * C9087 - C51201 * C9085 - C51200 * C9088 +
             C152376 * C9091) *
                C152436 +
            (C51198 * C8343 - C51199 * C8335 - C51198 * C8344 + C51193 * C8353 +
             C51200 * C9089 - C51201 * C9086 - C51200 * C9090 +
             C152376 * C9092) *
                C152089) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[225] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152200 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152207 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C3799) *
              C152118 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C152207 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152200 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C3799) *
              C152127 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C152200 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C152207 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152200 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152207 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C3799) *
              C152118 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152207 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152200 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C3799) *
              C152127 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152200 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152207 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[226] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152458 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C152200 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152458) *
               C152207 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C51195 +
             (C51570 + C51571) * C51196 + C51579 * C51197) *
                C152340 * C152458 -
            ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
             (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
              C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
              C51198 * C1700 + C51193 * C1716) *
                 C51195) *
                C152340 * C152246) *
               C3799) *
              C3455 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152458) *
               C152200 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152458 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152207 +
           (((C53732 + C53731) * C51195 + (C53730 + C53729) * C51196 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C51197) *
                C152340 * C152246 -
            ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
             (C51571 + C51570) * C51195) *
                C152340 * C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152458 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152200 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152458) *
               C152207 +
           ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
             C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
             C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
             C59739 * C8105 - C59740 * C8100 - C59739 * C8106 +
             C59731 * C8112) *
                C152084 * C152340 * C152458 -
            (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
             C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
             C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
             C59733 * C1699 - C59734 * C1680 - C59733 * C1700 +
             C59728 * C1716) *
                C152084 * C152340 * C152246) *
               C3799) *
              C3455 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152458) *
               C152200 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152458 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152207 +
           ((C59733 * C1697 - C59734 * C1679 - C59733 * C1698 + C59728 * C1715 +
             C59735 * C2237 - C59736 * C2232 - C59735 * C2238 + C59729 * C2244 +
             C59737 * C8343 - C59738 * C8335 - C59737 * C8344 + C59730 * C8353 +
             C59739 * C9089 - C59740 * C9086 - C59739 * C9090 +
             C59731 * C9092) *
                C152084 * C152340 * C152246 -
            (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
             C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
             C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
             C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
                C152084 * C152340 * C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[227] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152553 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152549 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152535 -
           ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C51195) *
               C152340 * C152159 * C152509) *
              C3455 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C152549 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152553 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152535 +
           ((C53414 + C53413) * C51195 + (C53412 + C53411) * C51196 +
            (C51198 * C1503 - C51199 * C1495 - C51198 * C1504 + C51193 * C1519 +
             C51200 * C1517 - C51201 * C1502 - C51200 * C1518 +
             C152376 * C1526) *
                C51197) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C3315 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152204) *
              C152552 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C152204 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C3315) *
              C152545 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C3315 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C152204) *
              C152528 +
          ((C52078 * C51195 + (C52092 + C52091) * C51196 +
            (C51198 * C394 - C51199 * C372 - C51198 * C395 + C51193 * C408 +
             C51200 * C396 - C51201 * C373 - C51200 * C397 + C152376 * C409) *
                C51197) *
               C152340 * C152159 * C152204 -
           ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
            C51274 * C51195) *
               C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152547 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152532 +
            ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
              C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
              C152376 * C1712) *
                 C51195 +
             (C51874 + C51875) * C51196 + C51883 * C51197) *
                C152340 * C152502) *
               C3315 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152532 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152547 -
            ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
             (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
              C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
              C51198 * C1692 + C51193 * C1712) *
                 C51195) *
                C152340 * C152502) *
               C152204) *
              C3455 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152532 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152547 -
            ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
             (C51875 + C51874) * C51195) *
                C152340 * C152502) *
               C3315 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152547 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152532 +
            ((C54802 + C54801) * C51195 + (C54800 + C54799) * C51196 +
             (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
              C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
              C51200 * C1708 + C152376 * C1720) *
                 C51197) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C3315 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152204) *
              C152552 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C3315) *
              C152545 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C3315 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152204) *
              C152528 +
          ((C59733 * C374 - C59734 * C362 - C59733 * C375 + C59728 * C398 +
            C59735 * C388 - C59736 * C369 - C59735 * C389 + C59729 * C405 +
            C59737 * C1503 - C59738 * C1495 - C59737 * C1504 + C59730 * C1519 +
            C59739 * C1517 - C59740 * C1502 - C59739 * C1518 + C59731 * C1526) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152553 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152549 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152535 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C152159 * C152509) *
              C3455 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152549 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152553 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152535 +
           (C59733 * C1507 - C59734 * C1497 - C59733 * C1508 + C59728 * C1521 +
            C59735 * C1513 - C59736 * C1500 - C59735 * C1514 + C59729 * C1524 +
            C59737 * C8103 - C59738 * C8099 - C59737 * C8104 + C59730 * C8111 +
            C59739 * C8109 - C59740 * C8102 - C59739 * C8110 + C59731 * C8114) *
               C152084 * C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152547 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152532 +
            (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
             C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
             C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
             C59739 * C8341 - C59740 * C8334 - C59739 * C8342 +
             C59731 * C8352) *
                C152084 * C152340 * C152502) *
               C3315 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152532 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152547 -
            (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
             C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
             C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
             C59733 * C1691 - C59734 * C1676 - C59733 * C1692 +
             C59728 * C1712) *
                C152084 * C152340 * C152502) *
               C152204) *
              C3455 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152532 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152547 -
            (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
             C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
             C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
             C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
                C152084 * C152340 * C152502) *
               C3315 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152547 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152532 +
            (C59733 * C1689 - C59734 * C1675 - C59733 * C1690 + C59728 * C1711 +
             C59735 * C1703 - C59736 * C1682 - C59735 * C1704 + C59729 * C1718 +
             C59737 * C8339 - C59738 * C8333 - C59737 * C8340 + C59730 * C8351 +
             C59739 * C8349 - C59740 * C8338 - C59739 * C8350 +
             C59731 * C8356) *
                C152084 * C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152458 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C3315 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152458) *
               C152204) *
              C152118 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152458) *
               C3315 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152458 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          (((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                C152340 * C152458 -
            ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
             C51882 * C51195) *
                C152340 * C152246) *
               C3315 +
           ((C52634 * C51195 + (C52633 + C52632) * C51196 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C51197) *
                C152340 * C152246 -
            ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
             C51578 * C51195) *
                C152340 * C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152458 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C3315 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152458) *
               C152204) *
              C152118 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152458) *
               C3315 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152458 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152204) *
              C152127 +
          (((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
             C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
             C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
             C59739 * C1505 - C59740 * C1496 - C59739 * C1506 +
             C59731 * C1520) *
                C152084 * C152340 * C152458 -
            (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
             C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
             C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
             C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
                C152084 * C152340 * C152246) *
               C3315 +
           ((C59733 * C1213 - C59734 * C1205 - C59733 * C1214 + C59728 * C1223 +
             C59735 * C1695 - C59736 * C1678 - C59735 * C1696 + C59729 * C1714 +
             C59737 * C2239 - C59738 * C2233 - C59737 * C2240 + C59730 * C2245 +
             C59739 * C8867 - C59740 * C8866 - C59739 * C8868 +
             C59731 * C8869) *
                C152084 * C152340 * C152246 -
            (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
             C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
             C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
             C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
                C152084 * C152340 * C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[229] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C3315 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152204) *
              C152552 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C152204 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C3315) *
              C152545 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C3315 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C152204) *
              C152528 +
          ((C52078 * C51195 + (C52092 + C52091) * C51196 +
            (C51198 * C394 - C51199 * C372 - C51198 * C395 + C51193 * C408 +
             C51200 * C396 - C51201 * C373 - C51200 * C397 + C152376 * C409) *
                C51197) *
               C152340 * C152159 * C152204 -
           ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
            C51274 * C51195) *
               C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152553 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152549 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152535 -
           ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C51195) *
               C152340 * C152159 * C152509) *
              C3455 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C152549 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152553 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152535 +
           ((C53414 + C53413) * C51195 + (C53412 + C53411) * C51196 +
            (C51198 * C1503 - C51199 * C1495 - C51198 * C1504 + C51193 * C1519 +
             C51200 * C1517 - C51201 * C1502 - C51200 * C1518 +
             C152376 * C1526) *
                C51197) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C3315 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152204) *
              C152552 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C3315) *
              C152545 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C3315 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152204) *
              C152528 +
          ((C59733 * C374 - C59734 * C362 - C59733 * C375 + C59728 * C398 +
            C59735 * C388 - C59736 * C369 - C59735 * C389 + C59729 * C405 +
            C59737 * C1503 - C59738 * C1495 - C59737 * C1504 + C59730 * C1519 +
            C59739 * C1517 - C59740 * C1502 - C59739 * C1518 + C59731 * C1526) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152553 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152549 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152535 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C152159 * C152509) *
              C3455 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152549 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152553 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152535 +
           (C59733 * C1507 - C59734 * C1497 - C59733 * C1508 + C59728 * C1521 +
            C59735 * C1513 - C59736 * C1500 - C59735 * C1514 + C59729 * C1524 +
            C59737 * C8103 - C59738 * C8099 - C59737 * C8104 + C59730 * C8111 +
            C59739 * C8109 - C59740 * C8102 - C59739 * C8110 + C59731 * C8114) *
               C152084 * C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[230] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C4321 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C152200 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C4321) *
               C152207 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C51195 +
             (C51570 + C51571) * C51196 + C51579 * C51197) *
                C152340 * C4321 -
            ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
             (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
              C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
              C51198 * C1700 + C51193 * C1716) *
                 C51195) *
                C152340 * C152246) *
               C3799) *
              C152443 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C4321) *
               C152200 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C4321 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152207 +
           (((C53732 + C53731) * C51195 + (C53730 + C53729) * C51196 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C51197) *
                C152340 * C152246 -
            ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
             (C51571 + C51570) * C51195) *
                C152340 * C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C4321 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152200 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C4321) *
               C152207 +
           ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
             C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
             C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
             C59739 * C8105 - C59740 * C8100 - C59739 * C8106 +
             C59731 * C8112) *
                C152084 * C152340 * C4321 -
            (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
             C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
             C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
             C59733 * C1699 - C59734 * C1680 - C59733 * C1700 +
             C59728 * C1716) *
                C152084 * C152340 * C152246) *
               C3799) *
              C152443 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C4321) *
               C152200 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C4321 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152207 +
           ((C59733 * C1697 - C59734 * C1679 - C59733 * C1698 + C59728 * C1715 +
             C59735 * C2237 - C59736 * C2232 - C59735 * C2238 + C59729 * C2244 +
             C59737 * C8343 - C59738 * C8335 - C59737 * C8344 + C59730 * C8353 +
             C59739 * C9089 - C59740 * C9086 - C59739 * C9090 +
             C59731 * C9092) *
                C152084 * C152340 * C152246 -
            (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
             C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
             C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
             C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
                C152084 * C152340 * C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[231] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152242 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152249 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C4993) *
              C152200 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152249 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152242 -
           ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
            (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C51195) *
               C152340 * C4993) *
              C152207 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152242 -
           ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C152249 +
           ((C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C51195 +
            (C51198 * C1703 - C51199 * C1682 - C51198 * C1704 + C51193 * C1718 +
             C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351) *
                C51196 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C51197) *
               C152340 * C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152242 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152249 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C4993) *
              C152200 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152249 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152242 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C4993) *
              C152207 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152242 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152249 +
           (C59733 * C1701 - C59734 * C1681 - C59733 * C1702 + C59728 * C1717 +
            C59735 * C8341 - C59736 * C8334 - C59735 * C8342 + C59729 * C8352 +
            C59737 * C8347 - C59738 * C8337 - C59737 * C8348 + C59730 * C8355 +
            C59739 * C60866 - C59740 * C60865 - C59739 * C60867 +
            C59731 * C60868) *
               C152084 * C152340 * C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C4321 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152246) *
              C152553 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152246 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C4321) *
              C152549 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C4321 -
           ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C152246) *
              C152535 +
          (((C51198 * C2235 - C51199 * C2231 - C51198 * C2236 + C51193 * C2243 +
             C51200 * C8345 - C51201 * C8336 - C51200 * C8346 +
             C152376 * C8354) *
                C51195 +
            (C51198 * C2237 - C51199 * C2232 - C51198 * C2238 + C51193 * C2244 +
             C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353) *
                C51196 +
            (C51198 * C2239 - C51199 * C2233 - C51198 * C2240 + C51193 * C2245 +
             C51200 * C8867 - C51201 * C8866 - C51200 * C8868 +
             C152376 * C8869) *
                C51197) *
               C152340 * C152246 -
           ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C51195) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C4321 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C3315 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C4321) *
               C3315 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C4321 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          (((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                C152340 * C4321 -
            ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
             C51882 * C51195) *
                C152340 * C152246) *
               C3315 +
           ((C52634 * C51195 + (C52633 + C52632) * C51196 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C51197) *
                C152340 * C152246 -
            ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
             C51578 * C51195) *
                C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152554 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152551 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152538 -
           ((C55021 + C55022) * C51197 + (C55023 + C55024) * C51196 +
            (C51200 * C3173 - C51201 * C3169 - C51200 * C3174 +
             C152376 * C3181 + C51198 * C2643 - C51199 * C2632 -
             C51198 * C2644 + C51193 * C2656) *
                C51195) *
               C152340 * C152515) *
              C3315 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152551 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152554 -
           ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
            (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C51195) *
               C152340 * C152538 +
           ((C51198 * C3173 - C51199 * C3169 - C51198 * C3174 + C51193 * C3181 +
             C51200 * C9659 - C51201 * C9652 - C51200 * C9660 +
             C152376 * C9670) *
                C51195 +
            (C51198 * C3175 - C51199 * C3170 - C51198 * C3176 + C51193 * C3182 +
             C51200 * C9657 - C51201 * C9651 - C51200 * C9658 +
             C152376 * C9669) *
                C51196 +
            (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 + C51193 * C3183 +
             C51200 * C10185 - C51201 * C10184 - C51200 * C10186 +
             C152376 * C10187) *
                C51197) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C4321 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C3315 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C4321) *
               C152204) *
              C152543 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C4321) *
               C3315 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C4321 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152204) *
              C152526 +
          (((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
             C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
             C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
             C59739 * C1505 - C59740 * C1496 - C59739 * C1506 +
             C59731 * C1520) *
                C152084 * C152340 * C4321 -
            (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
             C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
             C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
             C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
                C152084 * C152340 * C152246) *
               C3315 +
           ((C59733 * C1213 - C59734 * C1205 - C59733 * C1214 + C59728 * C1223 +
             C59735 * C1695 - C59736 * C1678 - C59735 * C1696 + C59729 * C1714 +
             C59737 * C2239 - C59738 * C2233 - C59737 * C2240 + C59730 * C2245 +
             C59739 * C8867 - C59740 * C8866 - C59739 * C8868 +
             C59731 * C8869) *
                C152084 * C152340 * C152246 -
            (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
             C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
             C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
             C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
                C152084 * C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C4321 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C152553 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152246 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C4321) *
              C152549 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C4321 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152246) *
              C152535 +
          ((C59733 * C2235 - C59734 * C2231 - C59733 * C2236 + C59728 * C2243 +
            C59735 * C8345 - C59736 * C8336 - C59735 * C8346 + C59729 * C8354 +
            C59737 * C9087 - C59738 * C9085 - C59737 * C9088 + C59730 * C9091 +
            C59739 * C61324 - C59740 * C61323 - C59739 * C61325 +
            C59731 * C61326) *
               C152084 * C152340 * C152246 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152554 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152551 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152538 -
           (C59739 * C10405 - C59740 * C10403 - C59739 * C10406 +
            C59731 * C10409 + C59737 * C9659 - C59738 * C9652 - C59737 * C9660 +
            C59730 * C9670 + C59735 * C3173 - C59736 * C3169 - C59735 * C3174 +
            C59729 * C3181 + C59733 * C2643 - C59734 * C2632 - C59733 * C2644 +
            C59728 * C2656) *
               C152084 * C152340 * C152515) *
              C3315 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152551 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152554 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C152538 +
           (C59733 * C3173 - C59734 * C3169 - C59733 * C3174 + C59728 * C3181 +
            C59735 * C9659 - C59736 * C9652 - C59735 * C9660 + C59729 * C9670 +
            C59737 * C10405 - C59738 * C10403 - C59737 * C10406 +
            C59730 * C10409 + C59739 * C62160 - C59740 * C62159 -
            C59739 * C62161 + C59731 * C62162) *
               C152084 * C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[233] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152242 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152249 +
            ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
              C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
              C152376 * C1712) *
                 C51195 +
             (C51874 + C51875) * C51196 + C51883 * C51197) *
                C152340 * C4993) *
               C3315 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152249 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152242 -
            ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
             (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
              C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
              C51198 * C1692 + C51193 * C1712) *
                 C51195) *
                C152340 * C4993) *
               C152204) *
              C152443 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152249 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152242 -
            ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
             (C51875 + C51874) * C51195) *
                C152340 * C4993) *
               C3315 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152242 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152249 +
            ((C54802 + C54801) * C51195 + (C54800 + C54799) * C51196 +
             (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
              C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
              C51200 * C1708 + C152376 * C1720) *
                 C51197) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152242 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152249 +
            (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
             C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
             C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
             C59739 * C8341 - C59740 * C8334 - C59739 * C8342 +
             C59731 * C8352) *
                C152084 * C152340 * C4993) *
               C3315 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152249 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152242 -
            (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
             C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
             C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
             C59733 * C1691 - C59734 * C1676 - C59733 * C1692 +
             C59728 * C1712) *
                C152084 * C152340 * C4993) *
               C152204) *
              C152443 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152249 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152242 -
            (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
             C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
             C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
             C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
                C152084 * C152340 * C4993) *
               C3315 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152242 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152249 +
            (C59733 * C1689 - C59734 * C1675 - C59733 * C1690 + C59728 * C1711 +
             C59735 * C1703 - C59736 * C1682 - C59735 * C1704 + C59729 * C1718 +
             C59737 * C8339 - C59738 * C8333 - C59737 * C8340 + C59730 * C8351 +
             C59739 * C8349 - C59740 * C8338 - C59739 * C8350 +
             C59731 * C8356) *
                C152084 * C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C4321 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C3315 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C4321) *
               C152204) *
              C152543 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C4321) *
               C3315 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C4321 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152204) *
              C152526 +
          (((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                C152340 * C4321 -
            ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
             C51882 * C51195) *
                C152340 * C152246) *
               C3315 +
           ((C52634 * C51195 + (C52633 + C52632) * C51196 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C51197) *
                C152340 * C152246 -
            ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
             C51578 * C51195) *
                C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C4321 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152246) *
              C152553 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152246 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C4321) *
              C152549 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C4321 -
           ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C152246) *
              C152535 +
          (((C51198 * C2235 - C51199 * C2231 - C51198 * C2236 + C51193 * C2243 +
             C51200 * C8345 - C51201 * C8336 - C51200 * C8346 +
             C152376 * C8354) *
                C51195 +
            (C51198 * C2237 - C51199 * C2232 - C51198 * C2238 + C51193 * C2244 +
             C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353) *
                C51196 +
            (C51198 * C2239 - C51199 * C2233 - C51198 * C2240 + C51193 * C2245 +
             C51200 * C8867 - C51201 * C8866 - C51200 * C8868 +
             C152376 * C8869) *
                C51197) *
               C152340 * C152246 -
           ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C51195) *
               C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C4321 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C3315 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C4321) *
               C152204) *
              C152543 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C4321) *
               C3315 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C4321 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152204) *
              C152526 +
          (((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
             C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
             C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
             C59739 * C1505 - C59740 * C1496 - C59739 * C1506 +
             C59731 * C1520) *
                C152084 * C152340 * C4321 -
            (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
             C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
             C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
             C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
                C152084 * C152340 * C152246) *
               C3315 +
           ((C59733 * C1213 - C59734 * C1205 - C59733 * C1214 + C59728 * C1223 +
             C59735 * C1695 - C59736 * C1678 - C59735 * C1696 + C59729 * C1714 +
             C59737 * C2239 - C59738 * C2233 - C59737 * C2240 + C59730 * C2245 +
             C59739 * C8867 - C59740 * C8866 - C59739 * C8868 +
             C59731 * C8869) *
                C152084 * C152340 * C152246 -
            (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
             C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
             C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
             C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
                C152084 * C152340 * C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C4321 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C152553 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152246 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C4321) *
              C152549 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C4321 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152246) *
              C152535 +
          ((C59733 * C2235 - C59734 * C2231 - C59733 * C2236 + C59728 * C2243 +
            C59735 * C8345 - C59736 * C8336 - C59735 * C8346 + C59729 * C8354 +
            C59737 * C9087 - C59738 * C9085 - C59737 * C9088 + C59730 * C9091 +
            C59739 * C61324 - C59740 * C61323 - C59739 * C61325 +
            C59731 * C61326) *
               C152084 * C152340 * C152246 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[235] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C1851 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C1852 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C1853 -
           ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C51195) *
               C152340 * C152159 * C152509) *
              C152443 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C1852 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C1851 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C1853 +
           ((C53414 + C53413) * C51195 + (C53412 + C53411) * C51196 +
            (C51198 * C1503 - C51199 * C1495 - C51198 * C1504 + C51193 * C1519 +
             C51200 * C1517 - C51201 * C1502 - C51200 * C1518 +
             C152376 * C1526) *
                C51197) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152457 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152204) *
              C851 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C152204 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152457) *
              C852 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C152457 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C152204) *
              C853 +
          ((C52078 * C51195 + (C52092 + C52091) * C51196 +
            (C51198 * C394 - C51199 * C372 - C51198 * C395 + C51193 * C408 +
             C51200 * C396 - C51201 * C373 - C51200 * C397 + C152376 * C409) *
                C51197) *
               C152340 * C152159 * C152204 -
           ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
            C51274 * C51195) *
               C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C2393 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C2394 +
            ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
              C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
              C152376 * C1712) *
                 C51195 +
             (C51874 + C51875) * C51196 + C51883 * C51197) *
                C152340 * C152502) *
               C152457 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C2394 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C2393 -
            ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
             (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
              C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
              C51198 * C1692 + C51193 * C1712) *
                 C51195) *
                C152340 * C152502) *
               C152204) *
              C152443 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C2394 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C2393 -
            ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
             (C51875 + C51874) * C51195) *
                C152340 * C152502) *
               C152457 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C2393 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C2394 +
            ((C54802 + C54801) * C51195 + (C54800 + C54799) * C51196 +
             (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
              C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
              C51200 * C1708 + C152376 * C1720) *
                 C51197) *
                C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152457 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152204) *
              C851 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152457) *
              C852 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152457 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152204) *
              C853 +
          ((C59733 * C374 - C59734 * C362 - C59733 * C375 + C59728 * C398 +
            C59735 * C388 - C59736 * C369 - C59735 * C389 + C59729 * C405 +
            C59737 * C1503 - C59738 * C1495 - C59737 * C1504 + C59730 * C1519 +
            C59739 * C1517 - C59740 * C1502 - C59739 * C1518 + C59731 * C1526) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C1851 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C1852 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C1853 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C152159 * C152509) *
              C152443 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C1852 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C1851 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C1853 +
           (C59733 * C1507 - C59734 * C1497 - C59733 * C1508 + C59728 * C1521 +
            C59735 * C1513 - C59736 * C1500 - C59735 * C1514 + C59729 * C1524 +
            C59737 * C8103 - C59738 * C8099 - C59737 * C8104 + C59730 * C8111 +
            C59739 * C8109 - C59740 * C8102 - C59739 * C8110 + C59731 * C8114) *
               C152084 * C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C2393 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C2394 +
            (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
             C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
             C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
             C59739 * C8341 - C59740 * C8334 - C59739 * C8342 +
             C59731 * C8352) *
                C152084 * C152340 * C152502) *
               C152457 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C2394 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C2393 -
            (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
             C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
             C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
             C59733 * C1691 - C59734 * C1676 - C59733 * C1692 +
             C59728 * C1712) *
                C152084 * C152340 * C152502) *
               C152204) *
              C152443 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C2394 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C2393 -
            (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
             C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
             C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
             C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
                C152084 * C152340 * C152502) *
               C152457 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C2393 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C2394 +
            (C59733 * C1689 - C59734 * C1675 - C59733 * C1690 + C59728 * C1711 +
             C59735 * C1703 - C59736 * C1682 - C59735 * C1704 + C59729 * C1718 +
             C59737 * C8339 - C59738 * C8333 - C59737 * C8340 + C59730 * C8351 +
             C59739 * C8349 - C59740 * C8338 - C59739 * C8350 +
             C59731 * C8356) *
                C152084 * C152340 * C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152458 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152246) *
              C1851 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152246 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152458) *
              C1852 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152458 -
           ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C152246) *
              C1853 +
          (((C51198 * C2235 - C51199 * C2231 - C51198 * C2236 + C51193 * C2243 +
             C51200 * C8345 - C51201 * C8336 - C51200 * C8346 +
             C152376 * C8354) *
                C51195 +
            (C51198 * C2237 - C51199 * C2232 - C51198 * C2238 + C51193 * C2244 +
             C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353) *
                C51196 +
            (C51198 * C2239 - C51199 * C2233 - C51198 * C2240 + C51193 * C2245 +
             C51200 * C8867 - C51201 * C8866 - C51200 * C8868 +
             C152376 * C8869) *
                C51197) *
               C152340 * C152246 -
           ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C51195) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152458 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C152457 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152458) *
               C152204) *
              C359 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152458) *
               C152457 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152458 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152204) *
              C360 +
          (((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                C152340 * C152458 -
            ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
             C51882 * C51195) *
                C152340 * C152246) *
               C152457 +
           ((C52634 * C51195 + (C52633 + C52632) * C51196 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C51197) *
                C152340 * C152246 -
            ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
             C51578 * C51195) *
                C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C3010 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C3011 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C3012 -
           ((C55021 + C55022) * C51197 + (C55023 + C55024) * C51196 +
            (C51200 * C3173 - C51201 * C3169 - C51200 * C3174 +
             C152376 * C3181 + C51198 * C2643 - C51199 * C2632 -
             C51198 * C2644 + C51193 * C2656) *
                C51195) *
               C152340 * C152515) *
              C152457 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C3011 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C3010 -
           ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
            (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C51195) *
               C152340 * C3012 +
           ((C51198 * C3173 - C51199 * C3169 - C51198 * C3174 + C51193 * C3181 +
             C51200 * C9659 - C51201 * C9652 - C51200 * C9660 +
             C152376 * C9670) *
                C51195 +
            (C51198 * C3175 - C51199 * C3170 - C51198 * C3176 + C51193 * C3182 +
             C51200 * C9657 - C51201 * C9651 - C51200 * C9658 +
             C152376 * C9669) *
                C51196 +
            (C51198 * C3177 - C51199 * C3171 - C51198 * C3178 + C51193 * C3183 +
             C51200 * C10185 - C51201 * C10184 - C51200 * C10186 +
             C152376 * C10187) *
                C51197) *
               C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152458 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152457 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152458) *
               C152204) *
              C359 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152458) *
               C152457 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152458 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152204) *
              C360 +
          (((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
             C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
             C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
             C59739 * C1505 - C59740 * C1496 - C59739 * C1506 +
             C59731 * C1520) *
                C152084 * C152340 * C152458 -
            (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
             C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
             C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
             C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
                C152084 * C152340 * C152246) *
               C152457 +
           ((C59733 * C1213 - C59734 * C1205 - C59733 * C1214 + C59728 * C1223 +
             C59735 * C1695 - C59736 * C1678 - C59735 * C1696 + C59729 * C1714 +
             C59737 * C2239 - C59738 * C2233 - C59737 * C2240 + C59730 * C2245 +
             C59739 * C8867 - C59740 * C8866 - C59739 * C8868 +
             C59731 * C8869) *
                C152084 * C152340 * C152246 -
            (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
             C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
             C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
             C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
                C152084 * C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152458 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C1851 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152246 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152458) *
              C1852 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152458 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152246) *
              C1853 +
          ((C59733 * C2235 - C59734 * C2231 - C59733 * C2236 + C59728 * C2243 +
            C59735 * C8345 - C59736 * C8336 - C59735 * C8346 + C59729 * C8354 +
            C59737 * C9087 - C59738 * C9085 - C59737 * C9088 + C59730 * C9091 +
            C59739 * C61324 - C59740 * C61323 - C59739 * C61325 +
            C59731 * C61326) *
               C152084 * C152340 * C152246 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C3010 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C3011 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C3012 -
           (C59739 * C10405 - C59740 * C10403 - C59739 * C10406 +
            C59731 * C10409 + C59737 * C9659 - C59738 * C9652 - C59737 * C9660 +
            C59730 * C9670 + C59735 * C3173 - C59736 * C3169 - C59735 * C3174 +
            C59729 * C3181 + C59733 * C2643 - C59734 * C2632 - C59733 * C2644 +
            C59728 * C2656) *
               C152084 * C152340 * C152515) *
              C152457 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C3011 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C3010 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C3012 +
           (C59733 * C3173 - C59734 * C3169 - C59733 * C3174 + C59728 * C3181 +
            C59735 * C9659 - C59736 * C9652 - C59735 * C9660 + C59729 * C9670 +
            C59737 * C10405 - C59738 * C10403 - C59737 * C10406 +
            C59730 * C10409 + C59739 * C62160 - C59740 * C62159 -
            C59739 * C62161 + C59731 * C62162) *
               C152084 * C152340 * C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                C51200 * C380 - C51201 * C365 - C51200 * C381 +
                C152376 * C401) *
                   C51195 +
               (C51263 + C51264) * C51196 + C51273 * C51197) *
                  C152340 * C152159 * C152141 * C129 -
              (C51274 * C51197 + (C51266 + C51265) * C51196 +
               (C51264 + C51263) * C51195) *
                  C152340 * C152159 * C152141 * C130 +
              (C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                  C152340 * C152159 * C152141 * C131 -
              ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
               C51274 * C51195) *
                  C152340 * C152159 * C152141 * C132 +
              (C51275 * C51195 + (C51272 + C51271) * C51196 +
               (C51198 * C156 - C51199 * C142 - C51198 * C157 + C51193 * C166 +
                C51200 * C856 - C51201 * C855 - C51200 * C857 +
                C152376 * C858) *
                   C51197) *
                  C152340 * C152159 * C152141 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
                 C51200 * C380 - C51201 * C365 - C51200 * C381 +
                 C152376 * C401) *
                    C51195 +
                (C51263 + C51264) * C51196 + C51273 * C51197) *
                   C152340 * C152159 * C152546 -
               (C51578 * C51197 + (C51568 + C51569) * C51196 +
                (C51200 * C382 - C51201 * C366 - C51200 * C383 +
                 C152376 * C402 + C51198 * C380 - C51199 * C365 -
                 C51198 * C381 + C51193 * C401) *
                    C51195) *
                   C152340 * C152159 * C152530 +
               ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
                 C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
                 C152376 * C1522) *
                    C51195 +
                (C51570 + C51571) * C51196 + C51579 * C51197) *
                   C152340 * C152159 * C152499) *
                  C359 +
              (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
                (C51574 + C51575) * C51197) *
                   C152340 * C152159 * C152530 -
               (C51274 * C51197 + (C51266 + C51265) * C51196 +
                (C51264 + C51263) * C51195) *
                   C152340 * C152159 * C152546 -
               ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
                (C51571 + C51570) * C51195) *
                   C152340 * C152159 * C152499) *
                  C360 +
              ((C51273 * C51195 + (C51268 + C51267) * C51196 +
                C51275 * C51197) *
                   C152340 * C152159 * C152546 -
               ((C51200 * C392 - C51201 * C371 - C51200 * C393 +
                 C152376 * C407 + C51198 * C390 - C51199 * C370 -
                 C51198 * C391 + C51193 * C406) *
                    C51197 +
                (C51575 + C51574) * C51196 + C51578 * C51195) *
                   C152340 * C152159 * C152530 +
               (C51579 * C51195 + (C51577 + C51576) * C51196 +
                (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
                 C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
                 C152376 * C1860) *
                    C51197) *
                   C152340 * C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152547 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152532 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152502) *
              C152141 * C359 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            (C51878 + C51879) * C51197) *
               C152340 * C152532 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152547 -
           ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
            (C51875 + C51874) * C51195) *
               C152340 * C152502) *
              C152141 * C360 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152547 -
           ((C51200 * C1217 - C51201 * C1207 - C51200 * C1218 +
             C152376 * C1225 + C51198 * C643 - C51199 * C623 - C51198 * C644 +
             C51193 * C659) *
                C51197 +
            (C51879 + C51878) * C51196 + C51882 * C51195) *
               C152340 * C152532 +
           (C51883 * C51195 + (C51881 + C51880) * C51196 +
            (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
             C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
             C152376 * C2858) *
                C51197) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C1401 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C1402 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C1402 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C1401 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152499) *
              C152526 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C1401 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C1402 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C152159 * C1489 -
          (C51578 * C51197 + (C51568 + C51569) * C51196 +
           (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
            C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
               C51195) *
              C152340 * C152159 * C1490 +
          ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
            C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
            C152376 * C1522) *
               C51195 +
           (C51570 + C51571) * C51196 + C51579 * C51197) *
              C152340 * C152159 * C1491 -
          ((C51200 * C1515 - C51201 * C1501 - C51200 * C1516 + C152376 * C1525 +
            C51198 * C1505 - C51199 * C1496 - C51198 * C1506 + C51193 * C1520) *
               C51197 +
           (C51200 * C1513 - C51201 * C1500 - C51200 * C1514 + C152376 * C1524 +
            C51198 * C1507 - C51199 * C1497 - C51198 * C1508 + C51193 * C1521) *
               C51196 +
           (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 + C152376 * C1523 +
            C51198 * C1509 - C51199 * C1498 - C51198 * C1510 + C51193 * C1522) *
               C51195) *
              C152340 * C152159 * C1492 +
          ((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
            C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
            C152376 * C8112) *
               C51195 +
           (C51198 * C1513 - C51199 * C1500 - C51198 * C1514 + C51193 * C1524 +
            C51200 * C8103 - C51201 * C8099 - C51200 * C8104 +
            C152376 * C8111) *
               C51196 +
           (C51198 * C1515 - C51199 * C1501 - C51198 * C1516 + C51193 * C1525 +
            C51200 * C8552 - C51201 * C8551 - C51200 * C8553 +
            C152376 * C8554) *
               C51197) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152547 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152532 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152502) *
              C1401 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152532 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152547 -
           ((C51200 * C1705 - C51201 * C1683 - C51200 * C1706 +
             C152376 * C1719 + C51198 * C1687 - C51199 * C1674 -
             C51198 * C1688 + C51193 * C1710) *
                C51197 +
            (C51200 * C1703 - C51201 * C1682 - C51200 * C1704 +
             C152376 * C1718 + C51198 * C1689 - C51199 * C1675 -
             C51198 * C1690 + C51193 * C1711) *
                C51196 +
            (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C51195) *
               C152340 * C152502) *
              C1402 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152547 -
           ((C51200 * C2239 - C51201 * C2233 - C51200 * C2240 +
             C152376 * C2245 + C51198 * C1695 - C51199 * C1678 -
             C51198 * C1696 + C51193 * C1714) *
                C51197 +
            (C51200 * C2237 - C51201 * C2232 - C51200 * C2238 +
             C152376 * C2244 + C51198 * C1697 - C51199 * C1679 -
             C51198 * C1698 + C51193 * C1715) *
                C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C152532 +
           ((C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C51195 +
            (C51198 * C1703 - C51199 * C1682 - C51198 * C1704 + C51193 * C1718 +
             C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351) *
                C51196 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C51197) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C2393 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C2394 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152502) *
              C152141 * C152543 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C2394 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C2393 -
           ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
            (C51875 + C51874) * C51195) *
               C152340 * C152502) *
              C152141 * C152526 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C2393 -
           ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
            C51882 * C51195) *
               C152340 * C2394 +
           (C51883 * C51195 + (C51881 + C51880) * C51196 +
            (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
             C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
             C152376 * C2858) *
                C51197) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C2393 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C2394 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152502) *
              C152546 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C2394 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C2393 -
           ((C51200 * C1705 - C51201 * C1683 - C51200 * C1706 +
             C152376 * C1719 + C51198 * C1687 - C51199 * C1674 -
             C51198 * C1688 + C51193 * C1710) *
                C51197 +
            (C51200 * C1703 - C51201 * C1682 - C51200 * C1704 +
             C152376 * C1718 + C51198 * C1689 - C51199 * C1675 -
             C51198 * C1690 + C51193 * C1711) *
                C51196 +
            (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C51195) *
               C152340 * C152502) *
              C152530 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C2393 -
           ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C2394 +
           ((C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C51195 +
            (C51198 * C1703 - C51199 * C1682 - C51198 * C1704 + C51193 * C1718 +
             C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351) *
                C51196 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C51197) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C2624 -
          (C51882 * C51197 + (C51872 + C51873) * C51196 +
           (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 + C152376 * C1221 +
            C51198 * C633 - C51199 * C618 - C51198 * C634 + C51193 * C654) *
               C51195) *
              C152340 * C2625 +
          ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
            C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
            C152376 * C1712) *
               C51195 +
           (C51874 + C51875) * C51196 + C51883 * C51197) *
              C152340 * C2626 -
          ((C51200 * C3177 - C51201 * C3171 - C51200 * C3178 + C152376 * C3183 +
            C51198 * C2639 - C51199 * C2630 - C51198 * C2640 + C51193 * C2654) *
               C51197 +
           (C51200 * C3175 - C51201 * C3170 - C51200 * C3176 + C152376 * C3182 +
            C51198 * C2641 - C51199 * C2631 - C51198 * C2642 + C51193 * C2655) *
               C51196 +
           (C51200 * C3173 - C51201 * C3169 - C51200 * C3174 + C152376 * C3181 +
            C51198 * C2643 - C51199 * C2632 - C51198 * C2644 + C51193 * C2656) *
               C51195) *
              C152340 * C2627 +
          ((C51198 * C2645 - C51199 * C2633 - C51198 * C2646 + C51193 * C2657 +
            C51200 * C9661 - C51201 * C9653 - C51200 * C9662 +
            C152376 * C9671) *
               C51195 +
           (C51198 * C2647 - C51199 * C2634 - C51198 * C2648 + C51193 * C2658 +
            C51200 * C9665 - C51201 * C9655 - C51200 * C9666 +
            C152376 * C9673) *
               C51196 +
           (C51198 * C2649 - C51199 * C2635 - C51198 * C2650 + C51193 * C2659 +
            C51200 * C18401 - C51201 * C18400 - C51200 * C18402 +
            C152376 * C18403) *
               C51197) *
              C152340 * C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C152141 * C129 -
          (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
           C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
           C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
           C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
              C152084 * C152340 * C152159 * C152141 * C130 +
          (C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
           C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
           C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
           C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
              C152084 * C152340 * C152159 * C152141 * C131 -
          (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
           C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
           C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
           C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
              C152084 * C152340 * C152159 * C152141 * C132 +
          (C59733 * C152 - C59734 * C140 - C59733 * C153 + C59728 * C164 +
           C59735 * C390 - C59736 * C370 - C59735 * C391 + C59729 * C406 +
           C59737 * C392 - C59738 * C371 - C59737 * C393 + C59730 * C407 +
           C59739 * C1858 - C59740 * C1857 - C59739 * C1859 + C59731 * C1860) *
              C152084 * C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C359 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152530 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C360 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152547 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152532 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C152141 * C359 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152532 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152547 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C152502) *
              C152141 * C360 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152547 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152532 +
           (C59733 * C639 - C59734 * C621 - C59733 * C640 + C59728 * C657 +
            C59735 * C1687 - C59736 * C1674 - C59735 * C1688 + C59729 * C1710 +
            C59737 * C1705 - C59738 * C1683 - C59737 * C1706 + C59730 * C1719 +
            C59739 * C9966 - C59740 * C9965 - C59739 * C9967 + C59731 * C9968) *
               C152084 * C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C152543 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C1402 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C152526 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C1489 -
          (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
           C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
           C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
           C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
              C152084 * C152340 * C152159 * C1490 +
          (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
           C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
           C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
           C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
              C152084 * C152340 * C152159 * C1491 -
          (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
           C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
           C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
           C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
              C152084 * C152340 * C152159 * C1492 +
          (C59733 * C1511 - C59734 * C1499 - C59733 * C1512 + C59728 * C1523 +
           C59735 * C8105 - C59736 * C8100 - C59735 * C8106 + C59729 * C8112 +
           C59737 * C8107 - C59738 * C8101 - C59737 * C8108 + C59730 * C8113 +
           C59739 * C60716 - C59740 * C60715 - C59739 * C60717 +
           C59731 * C60718) *
              C152084 * C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152547 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152532 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C1401 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152532 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152547 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C152502) *
              C1402 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152547 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152532 +
           (C59733 * C1701 - C59734 * C1681 - C59733 * C1702 + C59728 * C1717 +
            C59735 * C8341 - C59736 * C8334 - C59735 * C8342 + C59729 * C8352 +
            C59737 * C8347 - C59738 * C8337 - C59737 * C8348 + C59730 * C8355 +
            C59739 * C60866 - C59740 * C60865 - C59739 * C60867 +
            C59731 * C60868) *
               C152084 * C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C2393 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C2394 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C152141 * C152543 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C2394 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C2393 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C152502) *
              C152141 * C152526 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C2393 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C2394 +
           (C59733 * C639 - C59734 * C621 - C59733 * C640 + C59728 * C657 +
            C59735 * C1687 - C59736 * C1674 - C59735 * C1688 + C59729 * C1710 +
            C59737 * C1705 - C59738 * C1683 - C59737 * C1706 + C59730 * C1719 +
            C59739 * C9966 - C59740 * C9965 - C59739 * C9967 + C59731 * C9968) *
               C152084 * C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C2393 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C2394 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C152546 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C2394 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C2393 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C152502) *
              C152530 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C2393 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C2394 +
           (C59733 * C1701 - C59734 * C1681 - C59733 * C1702 + C59728 * C1717 +
            C59735 * C8341 - C59736 * C8334 - C59735 * C8342 + C59729 * C8352 +
            C59737 * C8347 - C59738 * C8337 - C59737 * C8348 + C59730 * C8355 +
            C59739 * C60866 - C59740 * C60865 - C59739 * C60867 +
            C59731 * C60868) *
               C152084 * C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C2624 -
          (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
           C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
           C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
           C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
              C152084 * C152340 * C2625 +
          (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
           C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
           C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
           C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
              C152084 * C152340 * C2626 -
          (C59739 * C10405 - C59740 * C10403 - C59739 * C10406 +
           C59731 * C10409 + C59737 * C9659 - C59738 * C9652 - C59737 * C9660 +
           C59730 * C9670 + C59735 * C3173 - C59736 * C3169 - C59735 * C3174 +
           C59729 * C3181 + C59733 * C2643 - C59734 * C2632 - C59733 * C2644 +
           C59728 * C2656) *
              C152084 * C152340 * C2627 +
          (C59733 * C2645 - C59734 * C2633 - C59733 * C2646 + C59728 * C2657 +
           C59735 * C9661 - C59736 * C9653 - C59735 * C9662 + C59729 * C9671 +
           C59737 * C9663 - C59738 * C9654 - C59737 * C9664 + C59730 * C9672 +
           C59739 * C61702 - C59740 * C61701 - C59739 * C61703 +
           C59731 * C61704) *
              C152084 * C152340 * C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[238] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152458 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C1401 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152458) *
               C1402 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C51195 +
             (C51570 + C51571) * C51196 + C51579 * C51197) *
                C152340 * C152458 -
            ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
             (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
              C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
              C51198 * C1700 + C51193 * C1716) *
                 C51195) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152458) *
               C1401 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152458 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C1402 +
           (((C53732 + C53731) * C51195 + (C53730 + C53729) * C51196 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C51197) *
                C152340 * C152246 -
            ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
             (C51571 + C51570) * C51195) *
                C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152458 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152246) *
              C152141 * C851 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C152246 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152458) *
              C152141 * C852 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152458 -
           ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
            C51882 * C51195) *
               C152340 * C152246) *
              C152141 * C853 +
          ((C52287 * C51195 + (C52301 + C52300) * C51196 +
            (C51198 * C647 - C51199 * C625 - C51198 * C648 + C51193 * C661 +
             C51200 * C1219 - C51201 * C1208 - C51200 * C1220 +
             C152376 * C1226) *
                C51197) *
               C152340 * C152246 -
           ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
            C51274 * C51195) *
               C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C3010 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C3011 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C3012 -
           ((C55021 + C55022) * C51197 + (C55023 + C55024) * C51196 +
            (C51200 * C3173 - C51201 * C3169 - C51200 * C3174 +
             C152376 * C3181 + C51198 * C2643 - C51199 * C2632 -
             C51198 * C2644 + C51193 * C2656) *
                C51195) *
               C152340 * C152515) *
              C152141 * C152443 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C3011 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C3010 -
           ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
            (C51875 + C51874) * C51195) *
               C152340 * C3012 +
           ((C55024 + C55023) * C51195 + (C55022 + C55021) * C51196 +
            (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 + C51193 * C2653 +
             C51200 * C3179 - C51201 * C3172 - C51200 * C3180 +
             C152376 * C3184) *
                C51197) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152458 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C152141 * C851 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152246 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152458) *
              C152141 * C852 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152458 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152246) *
              C152141 * C853 +
          ((C59733 * C627 - C59734 * C615 - C59733 * C628 + C59728 * C651 +
            C59735 * C1215 - C59736 * C1206 - C59735 * C1216 + C59729 * C1224 +
            C59737 * C1693 - C59738 * C1677 - C59737 * C1694 + C59730 * C1713 +
            C59739 * C2241 - C59740 * C2234 - C59739 * C2242 + C59731 * C2246) *
               C152084 * C152340 * C152246 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152458 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C1401 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152458) *
               C1402 +
           ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
             C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
             C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
             C59739 * C8105 - C59740 * C8100 - C59739 * C8106 +
             C59731 * C8112) *
                C152084 * C152340 * C152458 -
            (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
             C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
             C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
             C59733 * C1699 - C59734 * C1680 - C59733 * C1700 +
             C59728 * C1716) *
                C152084 * C152340 * C152246) *
               C152499) *
              C152443 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152458) *
               C1401 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152458 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C1402 +
           ((C59733 * C1697 - C59734 * C1679 - C59733 * C1698 + C59728 * C1715 +
             C59735 * C2237 - C59736 * C2232 - C59735 * C2238 + C59729 * C2244 +
             C59737 * C8343 - C59738 * C8335 - C59737 * C8344 + C59730 * C8353 +
             C59739 * C9089 - C59740 * C9086 - C59739 * C9090 +
             C59731 * C9092) *
                C152084 * C152340 * C152246 -
            (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
             C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
             C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
             C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
                C152084 * C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C3010 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C3011 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C3012 -
           (C59739 * C10405 - C59740 * C10403 - C59739 * C10406 +
            C59731 * C10409 + C59737 * C9659 - C59738 * C9652 - C59737 * C9660 +
            C59730 * C9670 + C59735 * C3173 - C59736 * C3169 - C59735 * C3174 +
            C59729 * C3181 + C59733 * C2643 - C59734 * C2632 - C59733 * C2644 +
            C59728 * C2656) *
               C152084 * C152340 * C152515) *
              C152141 * C152443 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C3011 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C3010 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C3012 +
           (C59733 * C2641 - C59734 * C2631 - C59733 * C2642 + C59728 * C2655 +
            C59735 * C3175 - C59736 * C3170 - C59735 * C3176 + C59729 * C3182 +
            C59737 * C9657 - C59738 * C9651 - C59737 * C9658 + C59730 * C9669 +
            C59739 * C10407 - C59740 * C10404 - C59739 * C10408 +
            C59731 * C10410) *
               C152084 * C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[239] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152546 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152530 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            (C51574 + C51575) * C51197) *
               C152340 * C152159 * C152530 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152546 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152499) *
              C360 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C152546 -
           ((C51200 * C392 - C51201 * C371 - C51200 * C393 + C152376 * C407 +
             C51198 * C390 - C51199 * C370 - C51198 * C391 + C51193 * C406) *
                C51197 +
            (C51575 + C51574) * C51196 + C51578 * C51195) *
               C152340 * C152159 * C152530 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C152159 * C152141 * C129 -
          (C51274 * C51197 + (C51266 + C51265) * C51196 +
           (C51264 + C51263) * C51195) *
              C152340 * C152159 * C152141 * C130 +
          (C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
              C152340 * C152159 * C152141 * C131 -
          ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
           C51274 * C51195) *
              C152340 * C152159 * C152141 * C132 +
          (C51275 * C51195 + (C51272 + C51271) * C51196 +
           (C51198 * C156 - C51199 * C142 - C51198 * C157 + C51193 * C166 +
            C51200 * C856 - C51201 * C855 - C51200 * C857 + C152376 * C858) *
               C51197) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C1401 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C1402 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C1402 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C1401 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152499) *
              C152526 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C1401 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C1402 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C152159 * C1489 -
          (C51578 * C51197 + (C51568 + C51569) * C51196 +
           (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
            C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
               C51195) *
              C152340 * C152159 * C1490 +
          ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
            C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
            C152376 * C1522) *
               C51195 +
           (C51570 + C51571) * C51196 + C51579 * C51197) *
              C152340 * C152159 * C1491 -
          ((C51200 * C1515 - C51201 * C1501 - C51200 * C1516 + C152376 * C1525 +
            C51198 * C1505 - C51199 * C1496 - C51198 * C1506 + C51193 * C1520) *
               C51197 +
           (C51200 * C1513 - C51201 * C1500 - C51200 * C1514 + C152376 * C1524 +
            C51198 * C1507 - C51199 * C1497 - C51198 * C1508 + C51193 * C1521) *
               C51196 +
           (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 + C152376 * C1523 +
            C51198 * C1509 - C51199 * C1498 - C51198 * C1510 + C51193 * C1522) *
               C51195) *
              C152340 * C152159 * C1492 +
          ((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
            C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
            C152376 * C8112) *
               C51195 +
           (C51198 * C1513 - C51199 * C1500 - C51198 * C1514 + C51193 * C1524 +
            C51200 * C8103 - C51201 * C8099 - C51200 * C8104 +
            C152376 * C8111) *
               C51196 +
           (C51198 * C1515 - C51199 * C1501 - C51198 * C1516 + C51193 * C1525 +
            C51200 * C8552 - C51201 * C8551 - C51200 * C8553 +
            C152376 * C8554) *
               C51197) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C2393 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C2394 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152502) *
              C152141 * C152543 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C2394 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C2393 -
           ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
            (C51875 + C51874) * C51195) *
               C152340 * C152502) *
              C152141 * C152526 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C2393 -
           ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
            C51882 * C51195) *
               C152340 * C2394 +
           (C51883 * C51195 + (C51881 + C51880) * C51196 +
            (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
             C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
             C152376 * C2858) *
                C51197) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C2393 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C2394 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152502) *
              C152546 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C2394 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C2393 -
           ((C51200 * C1705 - C51201 * C1683 - C51200 * C1706 +
             C152376 * C1719 + C51198 * C1687 - C51199 * C1674 -
             C51198 * C1688 + C51193 * C1710) *
                C51197 +
            (C51200 * C1703 - C51201 * C1682 - C51200 * C1704 +
             C152376 * C1718 + C51198 * C1689 - C51199 * C1675 -
             C51198 * C1690 + C51193 * C1711) *
                C51196 +
            (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C51195) *
               C152340 * C152502) *
              C152530 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C2393 -
           ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C2394 +
           ((C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C51195 +
            (C51198 * C1703 - C51199 * C1682 - C51198 * C1704 + C51193 * C1718 +
             C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351) *
                C51196 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C51197) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C152141 * C129 -
          (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
           C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
           C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
           C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
              C152084 * C152340 * C152159 * C152141 * C130 +
          (C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
           C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
           C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
           C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
              C152084 * C152340 * C152159 * C152141 * C131 -
          (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
           C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
           C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
           C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
              C152084 * C152340 * C152159 * C152141 * C132 +
          (C59733 * C152 - C59734 * C140 - C59733 * C153 + C59728 * C164 +
           C59735 * C390 - C59736 * C370 - C59735 * C391 + C59729 * C406 +
           C59737 * C392 - C59738 * C371 - C59737 * C393 + C59730 * C407 +
           C59739 * C1858 - C59740 * C1857 - C59739 * C1859 + C59731 * C1860) *
              C152084 * C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C359 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152530 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C360 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C152543 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C1402 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C152526 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C1489 -
          (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
           C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
           C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
           C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
              C152084 * C152340 * C152159 * C1490 +
          (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
           C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
           C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
           C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
              C152084 * C152340 * C152159 * C1491 -
          (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
           C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
           C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
           C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
              C152084 * C152340 * C152159 * C1492 +
          (C59733 * C1511 - C59734 * C1499 - C59733 * C1512 + C59728 * C1523 +
           C59735 * C8105 - C59736 * C8100 - C59735 * C8106 + C59729 * C8112 +
           C59737 * C8107 - C59738 * C8101 - C59737 * C8108 + C59730 * C8113 +
           C59739 * C60716 - C59740 * C60715 - C59739 * C60717 +
           C59731 * C60718) *
              C152084 * C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C2393 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C2394 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C152141 * C152543 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C2394 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C2393 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C152502) *
              C152141 * C152526 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C2393 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C2394 +
           (C59733 * C639 - C59734 * C621 - C59733 * C640 + C59728 * C657 +
            C59735 * C1687 - C59736 * C1674 - C59735 * C1688 + C59729 * C1710 +
            C59737 * C1705 - C59738 * C1683 - C59737 * C1706 + C59730 * C1719 +
            C59739 * C9966 - C59740 * C9965 - C59739 * C9967 + C59731 * C9968) *
               C152084 * C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C2393 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C2394 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C152546 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C2394 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C2393 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C152502) *
              C152530 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C2393 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C2394 +
           (C59733 * C1701 - C59734 * C1681 - C59733 * C1702 + C59728 * C1717 +
            C59735 * C8341 - C59736 * C8334 - C59735 * C8342 + C59729 * C8352 +
            C59737 * C8347 - C59738 * C8337 - C59737 * C8348 + C59730 * C8355 +
            C59739 * C60866 - C59740 * C60865 - C59739 * C60867 +
            C59731 * C60868) *
               C152084 * C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C4321 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C152457 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C4321) *
               C152204) *
              C152118 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C4321) *
               C152457 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C4321 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152204) *
              C152127 +
          (((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                C152340 * C4321 -
            ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
             C51882 * C51195) *
                C152340 * C152246) *
               C152457 +
           ((C52634 * C51195 + (C52633 + C52632) * C51196 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C51197) *
                C152340 * C152246 -
            ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
             C51578 * C51195) *
                C152340 * C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C4321 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152457 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C4321) *
               C152204) *
              C152118 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C4321) *
               C152457 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C4321 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152204) *
              C152127 +
          (((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
             C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
             C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
             C59739 * C1505 - C59740 * C1496 - C59739 * C1506 +
             C59731 * C1520) *
                C152084 * C152340 * C4321 -
            (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
             C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
             C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
             C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
                C152084 * C152340 * C152246) *
               C152457 +
           ((C59733 * C1213 - C59734 * C1205 - C59733 * C1214 + C59728 * C1223 +
             C59735 * C1695 - C59736 * C1678 - C59735 * C1696 + C59729 * C1714 +
             C59737 * C2239 - C59738 * C2233 - C59737 * C2240 + C59730 * C2245 +
             C59739 * C8867 - C59740 * C8866 - C59739 * C8868 +
             C59731 * C8869) *
                C152084 * C152340 * C152246 -
            (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
             C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
             C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
             C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
                C152084 * C152340 * C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[241] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152242 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152249 +
            ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
              C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
              C152376 * C1712) *
                 C51195 +
             (C51874 + C51875) * C51196 + C51883 * C51197) *
                C152340 * C4993) *
               C152457 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152249 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152242 -
            ((C54799 + C54800) * C51197 + (C54801 + C54802) * C51196 +
             (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
              C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
              C51198 * C1692 + C51193 * C1712) *
                 C51195) *
                C152340 * C4993) *
               C152204) *
              C3455 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152249 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152242 -
            ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
             (C51875 + C51874) * C51195) *
                C152340 * C4993) *
               C152457 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152242 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152249 +
            ((C54802 + C54801) * C51195 + (C54800 + C54799) * C51196 +
             (C51198 * C1685 - C51199 * C1673 - C51198 * C1686 +
              C51193 * C1709 + C51200 * C1707 - C51201 * C1684 -
              C51200 * C1708 + C152376 * C1720) *
                 C51197) *
                C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152242 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152249 +
            (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
             C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
             C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
             C59739 * C8341 - C59740 * C8334 - C59739 * C8342 +
             C59731 * C8352) *
                C152084 * C152340 * C4993) *
               C152457 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152249 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152242 -
            (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
             C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
             C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
             C59733 * C1691 - C59734 * C1676 - C59733 * C1692 +
             C59728 * C1712) *
                C152084 * C152340 * C4993) *
               C152204) *
              C3455 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152249 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152242 -
            (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
             C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
             C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
             C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
                C152084 * C152340 * C4993) *
               C152457 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152242 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152249 +
            (C59733 * C1689 - C59734 * C1675 - C59733 * C1690 + C59728 * C1711 +
             C59735 * C1703 - C59736 * C1682 - C59735 * C1704 + C59729 * C1718 +
             C59737 * C8339 - C59738 * C8333 - C59737 * C8340 + C59730 * C8351 +
             C59739 * C8349 - C59740 * C8338 - C59739 * C8350 +
             C59731 * C8356) *
                C152084 * C152340 * C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[242] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C4321 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C152546 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C4321) *
               C152530 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C51195 +
             (C51570 + C51571) * C51196 + C51579 * C51197) *
                C152340 * C4321 -
            ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
             (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
              C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
              C51198 * C1700 + C51193 * C1716) *
                 C51195) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C4321) *
               C152546 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C4321 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152530 +
           (((C53732 + C53731) * C51195 + (C53730 + C53729) * C51196 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C51197) *
                C152340 * C152246 -
            ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
             (C51571 + C51570) * C51195) *
                C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C4321 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152246) *
              C152141 * C152552 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C152246 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C4321) *
              C152141 * C152545 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C4321 -
           ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
            C51882 * C51195) *
               C152340 * C152246) *
              C152141 * C152528 +
          ((C52287 * C51195 + (C52301 + C52300) * C51196 +
            (C51198 * C647 - C51199 * C625 - C51198 * C648 + C51193 * C661 +
             C51200 * C1219 - C51201 * C1208 - C51200 * C1220 +
             C152376 * C1226) *
                C51197) *
               C152340 * C152246 -
           ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
            C51274 * C51195) *
               C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152554 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152551 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152538 -
           ((C55021 + C55022) * C51197 + (C55023 + C55024) * C51196 +
            (C51200 * C3173 - C51201 * C3169 - C51200 * C3174 +
             C152376 * C3181 + C51198 * C2643 - C51199 * C2632 -
             C51198 * C2644 + C51193 * C2656) *
                C51195) *
               C152340 * C152515) *
              C152141 * C3455 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C152551 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152554 -
           ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
            (C51875 + C51874) * C51195) *
               C152340 * C152538 +
           ((C55024 + C55023) * C51195 + (C55022 + C55021) * C51196 +
            (C51198 * C2637 - C51199 * C2629 - C51198 * C2638 + C51193 * C2653 +
             C51200 * C3179 - C51201 * C3172 - C51200 * C3180 +
             C152376 * C3184) *
                C51197) *
               C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C4321 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C152141 * C152552 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152246 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C4321) *
              C152141 * C152545 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C4321 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152246) *
              C152141 * C152528 +
          ((C59733 * C627 - C59734 * C615 - C59733 * C628 + C59728 * C651 +
            C59735 * C1215 - C59736 * C1206 - C59735 * C1216 + C59729 * C1224 +
            C59737 * C1693 - C59738 * C1677 - C59737 * C1694 + C59730 * C1713 +
            C59739 * C2241 - C59740 * C2234 - C59739 * C2242 + C59731 * C2246) *
               C152084 * C152340 * C152246 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C4321 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152546 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C4321) *
               C152530 +
           ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
             C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
             C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
             C59739 * C8105 - C59740 * C8100 - C59739 * C8106 +
             C59731 * C8112) *
                C152084 * C152340 * C4321 -
            (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
             C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
             C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
             C59733 * C1699 - C59734 * C1680 - C59733 * C1700 +
             C59728 * C1716) *
                C152084 * C152340 * C152246) *
               C152499) *
              C3455 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C4321) *
               C152546 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C4321 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152530 +
           ((C59733 * C1697 - C59734 * C1679 - C59733 * C1698 + C59728 * C1715 +
             C59735 * C2237 - C59736 * C2232 - C59735 * C2238 + C59729 * C2244 +
             C59737 * C8343 - C59738 * C8335 - C59737 * C8344 + C59730 * C8353 +
             C59739 * C9089 - C59740 * C9086 - C59739 * C9090 +
             C59731 * C9092) *
                C152084 * C152340 * C152246 -
            (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
             C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
             C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
             C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
                C152084 * C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152554 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152551 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152538 -
           (C59739 * C10405 - C59740 * C10403 - C59739 * C10406 +
            C59731 * C10409 + C59737 * C9659 - C59738 * C9652 - C59737 * C9660 +
            C59730 * C9670 + C59735 * C3173 - C59736 * C3169 - C59735 * C3174 +
            C59729 * C3181 + C59733 * C2643 - C59734 * C2632 - C59733 * C2644 +
            C59728 * C2656) *
               C152084 * C152340 * C152515) *
              C152141 * C3455 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152551 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152554 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C152538 +
           (C59733 * C2641 - C59734 * C2631 - C59733 * C2642 + C59728 * C2655 +
            C59735 * C3175 - C59736 * C3170 - C59735 * C3176 + C59729 * C3182 +
            C59737 * C9657 - C59738 * C9651 - C59737 * C9658 + C59730 * C9669 +
            C59739 * C10407 - C59740 * C10404 - C59739 * C10408 +
            C59731 * C10410) *
               C152084 * C152340 * C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[243] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152242 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152249 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C4993) *
              C152141 * C152118 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C152249 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152242 -
           ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
            (C51875 + C51874) * C51195) *
               C152340 * C4993) *
              C152141 * C152127 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152242 -
           ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
            C51882 * C51195) *
               C152340 * C152249 +
           (C51883 * C51195 + (C51881 + C51880) * C51196 +
            (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
             C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
             C152376 * C2858) *
                C51197) *
               C152340 * C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152242 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152249 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C4993) *
              C152141 * C152118 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152249 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152242 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C4993) *
              C152141 * C152127 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152242 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152249 +
           (C59733 * C639 - C59734 * C621 - C59733 * C640 + C59728 * C657 +
            C59735 * C1687 - C59736 * C1674 - C59735 * C1688 + C59729 * C1710 +
            C59737 * C1705 - C59738 * C1683 - C59737 * C1706 + C59730 * C1719 +
            C59739 * C9966 - C59740 * C9965 - C59739 * C9967 + C59731 * C9968) *
               C152084 * C152340 * C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[244] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C4321 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152246) *
              C152141 * C152552 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C152246 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C4321) *
              C152141 * C152545 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C4321 -
           ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
            C51882 * C51195) *
               C152340 * C152246) *
              C152141 * C152528 +
          ((C52287 * C51195 + (C52301 + C52300) * C51196 +
            (C51198 * C647 - C51199 * C625 - C51198 * C648 + C51193 * C661 +
             C51200 * C1219 - C51201 * C1208 - C51200 * C1220 +
             C152376 * C1226) *
                C51197) *
               C152340 * C152246 -
           ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
            C51274 * C51195) *
               C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C4321 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C152546 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C4321) *
               C152530 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C51195 +
             (C51570 + C51571) * C51196 + C51579 * C51197) *
                C152340 * C4321 -
            ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
             (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
              C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
              C51198 * C1700 + C51193 * C1716) *
                 C51195) *
                C152340 * C152246) *
               C152499) *
              C3455 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C4321) *
               C152546 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C4321 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152530 +
           (((C53732 + C53731) * C51195 + (C53730 + C53729) * C51196 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C51197) *
                C152340 * C152246 -
            ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
             (C51571 + C51570) * C51195) *
                C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C4321 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C152141 * C152552 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152246 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C4321) *
              C152141 * C152545 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C4321 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152246) *
              C152141 * C152528 +
          ((C59733 * C627 - C59734 * C615 - C59733 * C628 + C59728 * C651 +
            C59735 * C1215 - C59736 * C1206 - C59735 * C1216 + C59729 * C1224 +
            C59737 * C1693 - C59738 * C1677 - C59737 * C1694 + C59730 * C1713 +
            C59739 * C2241 - C59740 * C2234 - C59739 * C2242 + C59731 * C2246) *
               C152084 * C152340 * C152246 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C4321 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152546 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C4321) *
               C152530 +
           ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
             C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
             C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
             C59739 * C8105 - C59740 * C8100 - C59739 * C8106 +
             C59731 * C8112) *
                C152084 * C152340 * C4321 -
            (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
             C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
             C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
             C59733 * C1699 - C59734 * C1680 - C59733 * C1700 +
             C59728 * C1716) *
                C152084 * C152340 * C152246) *
               C152499) *
              C3455 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C4321) *
               C152546 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C4321 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152530 +
           ((C59733 * C1697 - C59734 * C1679 - C59733 * C1698 + C59728 * C1715 +
             C59735 * C2237 - C59736 * C2232 - C59735 * C2238 + C59729 * C2244 +
             C59737 * C8343 - C59738 * C8335 - C59737 * C8344 + C59730 * C8353 +
             C59739 * C9089 - C59740 * C9086 - C59739 * C9090 +
             C59731 * C9092) *
                C152084 * C152340 * C152246 -
            (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
             C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
             C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
             C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
                C152084 * C152340 * C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[245] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152457 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152204) *
              C851 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C152204 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152457) *
              C852 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C152457 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C152204) *
              C853 +
          ((C52078 * C51195 + (C52092 + C52091) * C51196 +
            (C51198 * C394 - C51199 * C372 - C51198 * C395 + C51193 * C408 +
             C51200 * C396 - C51201 * C373 - C51200 * C397 + C152376 * C409) *
                C51197) *
               C152340 * C152159 * C152204 -
           ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
            C51274 * C51195) *
               C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C1851 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C1852 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C1853 -
           ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C51195) *
               C152340 * C152159 * C152509) *
              C152443 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C1852 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C1851 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C1853 +
           ((C53414 + C53413) * C51195 + (C53412 + C53411) * C51196 +
            (C51198 * C1503 - C51199 * C1495 - C51198 * C1504 + C51193 * C1519 +
             C51200 * C1517 - C51201 * C1502 - C51200 * C1518 +
             C152376 * C1526) *
                C51197) *
               C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152457 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152204) *
              C851 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152457) *
              C852 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152457 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152204) *
              C853 +
          ((C59733 * C374 - C59734 * C362 - C59733 * C375 + C59728 * C398 +
            C59735 * C388 - C59736 * C369 - C59735 * C389 + C59729 * C405 +
            C59737 * C1503 - C59738 * C1495 - C59737 * C1504 + C59730 * C1519 +
            C59739 * C1517 - C59740 * C1502 - C59739 * C1518 + C59731 * C1526) *
               C152084 * C152340 * C152159 * C152204 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C1851 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C1852 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C1853 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C152159 * C152509) *
              C152443 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C1852 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C1851 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C1853 +
           (C59733 * C1507 - C59734 * C1497 - C59733 * C1508 + C59728 * C1521 +
            C59735 * C1513 - C59736 * C1500 - C59735 * C1514 + C59729 * C1524 +
            C59737 * C8103 - C59738 * C8099 - C59737 * C8104 + C59730 * C8111 +
            C59739 * C8109 - C59740 * C8102 - C59739 * C8110 + C59731 * C8114) *
               C152084 * C152340 * C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152458 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C152457 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152458) *
               C152204) *
              C359 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152458) *
               C152457 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152458 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C152204) *
              C360 +
          (((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
                C152340 * C152458 -
            ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
             C51882 * C51195) *
                C152340 * C152246) *
               C152457 +
           ((C52634 * C51195 + (C52633 + C52632) * C51196 +
             (C51198 * C1217 - C51199 * C1207 - C51198 * C1218 +
              C51193 * C1225 + C51200 * C2077 - C51201 * C2076 -
              C51200 * C2078 + C152376 * C2079) *
                 C51197) *
                C152340 * C152246 -
            ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
             C51578 * C51195) *
                C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152458 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152246) *
              C1851 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152246 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152458) *
              C1852 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152458 -
           ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C152246) *
              C1853 +
          (((C51198 * C2235 - C51199 * C2231 - C51198 * C2236 + C51193 * C2243 +
             C51200 * C8345 - C51201 * C8336 - C51200 * C8346 +
             C152376 * C8354) *
                C51195 +
            (C51198 * C2237 - C51199 * C2232 - C51198 * C2238 + C51193 * C2244 +
             C51200 * C8343 - C51201 * C8335 - C51200 * C8344 +
             C152376 * C8353) *
                C51196 +
            (C51198 * C2239 - C51199 * C2233 - C51198 * C2240 + C51193 * C2245 +
             C51200 * C8867 - C51201 * C8866 - C51200 * C8868 +
             C152376 * C8869) *
                C51197) *
               C152340 * C152246 -
           ((C53411 + C53412) * C51197 + (C53413 + C53414) * C51196 +
            (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 +
             C152376 * C1523 + C51198 * C1509 - C51199 * C1498 -
             C51198 * C1510 + C51193 * C1522) *
                C51195) *
               C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152458 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C152457 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152458) *
               C152204) *
              C359 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152458) *
               C152457 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152458 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C152204) *
              C360 +
          (((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
             C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
             C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
             C59739 * C1505 - C59740 * C1496 - C59739 * C1506 +
             C59731 * C1520) *
                C152084 * C152340 * C152458 -
            (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
             C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
             C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
             C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
                C152084 * C152340 * C152246) *
               C152457 +
           ((C59733 * C1213 - C59734 * C1205 - C59733 * C1214 + C59728 * C1223 +
             C59735 * C1695 - C59736 * C1678 - C59735 * C1696 + C59729 * C1714 +
             C59737 * C2239 - C59738 * C2233 - C59737 * C2240 + C59730 * C2245 +
             C59739 * C8867 - C59740 * C8866 - C59739 * C8868 +
             C59731 * C8869) *
                C152084 * C152340 * C152246 -
            (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
             C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
             C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
             C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
                C152084 * C152340 * C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152458 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C1851 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152246 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152458) *
              C1852 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152458 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152246) *
              C1853 +
          ((C59733 * C2235 - C59734 * C2231 - C59733 * C2236 + C59728 * C2243 +
            C59735 * C8345 - C59736 * C8336 - C59735 * C8346 + C59729 * C8354 +
            C59737 * C9087 - C59738 * C9085 - C59737 * C9088 + C59730 * C9091 +
            C59739 * C61324 - C59740 * C61323 - C59739 * C61325 +
            C59731 * C61326) *
               C152084 * C152340 * C152246 -
           (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
            C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
            C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
            C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
               C152084 * C152340 * C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[247] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152546 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152530 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            (C51574 + C51575) * C51197) *
               C152340 * C152159 * C152530 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152546 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152499) *
              C360 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C152546 -
           ((C51200 * C392 - C51201 * C371 - C51200 * C393 + C152376 * C407 +
             C51198 * C390 - C51199 * C370 - C51198 * C391 + C51193 * C406) *
                C51197 +
            (C51575 + C51574) * C51196 + C51578 * C51195) *
               C152340 * C152159 * C152530 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C152159 * C152141 * C129 -
          (C51274 * C51197 + (C51266 + C51265) * C51196 +
           (C51264 + C51263) * C51195) *
              C152340 * C152159 * C152141 * C130 +
          (C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
              C152340 * C152159 * C152141 * C131 -
          ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
           C51274 * C51195) *
              C152340 * C152159 * C152141 * C132 +
          (C51275 * C51195 + (C51272 + C51271) * C51196 +
           (C51198 * C156 - C51199 * C142 - C51198 * C157 + C51193 * C166 +
            C51200 * C856 - C51201 * C855 - C51200 * C857 + C152376 * C858) *
               C51197) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152547 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152532 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152502) *
              C152141 * C359 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            (C51878 + C51879) * C51197) *
               C152340 * C152532 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152547 -
           ((C51880 + C51881) * C51197 + (C51877 + C51876) * C51196 +
            (C51875 + C51874) * C51195) *
               C152340 * C152502) *
              C152141 * C360 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152547 -
           ((C51200 * C1217 - C51201 * C1207 - C51200 * C1218 +
             C152376 * C1225 + C51198 * C643 - C51199 * C623 - C51198 * C644 +
             C51193 * C659) *
                C51197 +
            (C51879 + C51878) * C51196 + C51882 * C51195) *
               C152340 * C152532 +
           (C51883 * C51195 + (C51881 + C51880) * C51196 +
            (C51198 * C645 - C51199 * C624 - C51198 * C646 + C51193 * C660 +
             C51200 * C2856 - C51201 * C2855 - C51200 * C2857 +
             C152376 * C2858) *
                C51197) *
               C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C1401 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C1402 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C1402 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C1401 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152499) *
              C152526 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C1401 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C1402 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C152159 * C1489 -
          (C51578 * C51197 + (C51568 + C51569) * C51196 +
           (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
            C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
               C51195) *
              C152340 * C152159 * C1490 +
          ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
            C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
            C152376 * C1522) *
               C51195 +
           (C51570 + C51571) * C51196 + C51579 * C51197) *
              C152340 * C152159 * C1491 -
          ((C51200 * C1515 - C51201 * C1501 - C51200 * C1516 + C152376 * C1525 +
            C51198 * C1505 - C51199 * C1496 - C51198 * C1506 + C51193 * C1520) *
               C51197 +
           (C51200 * C1513 - C51201 * C1500 - C51200 * C1514 + C152376 * C1524 +
            C51198 * C1507 - C51199 * C1497 - C51198 * C1508 + C51193 * C1521) *
               C51196 +
           (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 + C152376 * C1523 +
            C51198 * C1509 - C51199 * C1498 - C51198 * C1510 + C51193 * C1522) *
               C51195) *
              C152340 * C152159 * C1492 +
          ((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
            C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
            C152376 * C8112) *
               C51195 +
           (C51198 * C1513 - C51199 * C1500 - C51198 * C1514 + C51193 * C1524 +
            C51200 * C8103 - C51201 * C8099 - C51200 * C8104 +
            C152376 * C8111) *
               C51196 +
           (C51198 * C1515 - C51199 * C1501 - C51198 * C1516 + C51193 * C1525 +
            C51200 * C8552 - C51201 * C8551 - C51200 * C8553 +
            C152376 * C8554) *
               C51197) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152547 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152532 +
           ((C51198 * C635 - C51199 * C619 - C51198 * C636 + C51193 * C655 +
             C51200 * C1691 - C51201 * C1676 - C51200 * C1692 +
             C152376 * C1712) *
                C51195 +
            (C51874 + C51875) * C51196 + C51883 * C51197) *
               C152340 * C152502) *
              C1401 +
          (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 + C51193 * C1221 +
             C51200 * C1699 - C51201 * C1680 - C51200 * C1700 +
             C152376 * C1716) *
                C51195 +
            (C52628 + C52629) * C51196 + C52634 * C51197) *
               C152340 * C152532 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152547 -
           ((C51200 * C1705 - C51201 * C1683 - C51200 * C1706 +
             C152376 * C1719 + C51198 * C1687 - C51199 * C1674 -
             C51198 * C1688 + C51193 * C1710) *
                C51197 +
            (C51200 * C1703 - C51201 * C1682 - C51200 * C1704 +
             C152376 * C1718 + C51198 * C1689 - C51199 * C1675 -
             C51198 * C1690 + C51193 * C1711) *
                C51196 +
            (C51200 * C1701 - C51201 * C1681 - C51200 * C1702 +
             C152376 * C1717 + C51198 * C1691 - C51199 * C1676 -
             C51198 * C1692 + C51193 * C1712) *
                C51195) *
               C152340 * C152502) *
              C1402 +
          (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152547 -
           ((C51200 * C2239 - C51201 * C2233 - C51200 * C2240 +
             C152376 * C2245 + C51198 * C1695 - C51199 * C1678 -
             C51198 * C1696 + C51193 * C1714) *
                C51197 +
            (C51200 * C2237 - C51201 * C2232 - C51200 * C2238 +
             C152376 * C2244 + C51198 * C1697 - C51199 * C1679 -
             C51198 * C1698 + C51193 * C1715) *
                C51196 +
            (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
             C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
             C51198 * C1700 + C51193 * C1716) *
                C51195) *
               C152340 * C152532 +
           ((C51198 * C1701 - C51199 * C1681 - C51198 * C1702 + C51193 * C1717 +
             C51200 * C8341 - C51201 * C8334 - C51200 * C8342 +
             C152376 * C8352) *
                C51195 +
            (C51198 * C1703 - C51199 * C1682 - C51198 * C1704 + C51193 * C1718 +
             C51200 * C8339 - C51201 * C8333 - C51200 * C8340 +
             C152376 * C8351) *
                C51196 +
            (C51198 * C1705 - C51199 * C1683 - C51198 * C1706 + C51193 * C1719 +
             C51200 * C9966 - C51201 * C9965 - C51200 * C9967 +
             C152376 * C9968) *
                C51197) *
               C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C152141 * C129 -
          (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
           C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
           C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
           C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
              C152084 * C152340 * C152159 * C152141 * C130 +
          (C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
           C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
           C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
           C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
              C152084 * C152340 * C152159 * C152141 * C131 -
          (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
           C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
           C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
           C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
              C152084 * C152340 * C152159 * C152141 * C132 +
          (C59733 * C152 - C59734 * C140 - C59733 * C153 + C59728 * C164 +
           C59735 * C390 - C59736 * C370 - C59735 * C391 + C59729 * C406 +
           C59737 * C392 - C59738 * C371 - C59737 * C393 + C59730 * C407 +
           C59739 * C1858 - C59740 * C1857 - C59739 * C1859 + C59731 * C1860) *
              C152084 * C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C359 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152530 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C360 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152547 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152532 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C152141 * C359 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152532 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152547 -
           (C59739 * C8339 - C59740 * C8333 - C59739 * C8340 + C59731 * C8351 +
            C59737 * C1703 - C59738 * C1682 - C59737 * C1704 + C59730 * C1718 +
            C59735 * C1689 - C59736 * C1675 - C59735 * C1690 + C59729 * C1711 +
            C59733 * C637 - C59734 * C620 - C59733 * C638 + C59728 * C656) *
               C152084 * C152340 * C152502) *
              C152141 * C360 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152547 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152532 +
           (C59733 * C639 - C59734 * C621 - C59733 * C640 + C59728 * C657 +
            C59735 * C1687 - C59736 * C1674 - C59735 * C1688 + C59729 * C1710 +
            C59737 * C1705 - C59738 * C1683 - C59737 * C1706 + C59730 * C1719 +
            C59739 * C9966 - C59740 * C9965 - C59739 * C9967 + C59731 * C9968) *
               C152084 * C152340 * C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C152543 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C1402 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C152526 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C1489 -
          (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
           C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
           C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
           C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
              C152084 * C152340 * C152159 * C1490 +
          (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
           C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
           C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
           C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
              C152084 * C152340 * C152159 * C1491 -
          (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
           C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
           C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
           C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
              C152084 * C152340 * C152159 * C1492 +
          (C59733 * C1511 - C59734 * C1499 - C59733 * C1512 + C59728 * C1523 +
           C59735 * C8105 - C59736 * C8100 - C59735 * C8106 + C59729 * C8112 +
           C59737 * C8107 - C59738 * C8101 - C59737 * C8108 + C59730 * C8113 +
           C59739 * C60716 - C59740 * C60715 - C59739 * C60717 +
           C59731 * C60718) *
              C152084 * C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152547 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152532 +
           (C59733 * C635 - C59734 * C619 - C59733 * C636 + C59728 * C655 +
            C59735 * C1691 - C59736 * C1676 - C59735 * C1692 + C59729 * C1712 +
            C59737 * C1701 - C59738 * C1681 - C59737 * C1702 + C59730 * C1717 +
            C59739 * C8341 - C59740 * C8334 - C59739 * C8342 + C59731 * C8352) *
               C152084 * C152340 * C152502) *
              C1401 +
          ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
            C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
            C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
            C59739 * C8345 - C59740 * C8336 - C59739 * C8346 + C59731 * C8354) *
               C152084 * C152340 * C152532 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152547 -
           (C59739 * C8347 - C59740 * C8337 - C59739 * C8348 + C59731 * C8355 +
            C59737 * C8341 - C59738 * C8334 - C59737 * C8342 + C59730 * C8352 +
            C59735 * C1701 - C59736 * C1681 - C59735 * C1702 + C59729 * C1717 +
            C59733 * C1691 - C59734 * C1676 - C59733 * C1692 + C59728 * C1712) *
               C152084 * C152340 * C152502) *
              C1402 +
          ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152547 -
           (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
            C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
            C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
            C59733 * C1699 - C59734 * C1680 - C59733 * C1700 + C59728 * C1716) *
               C152084 * C152340 * C152532 +
           (C59733 * C1701 - C59734 * C1681 - C59733 * C1702 + C59728 * C1717 +
            C59735 * C8341 - C59736 * C8334 - C59735 * C8342 + C59729 * C8352 +
            C59737 * C8347 - C59738 * C8337 - C59737 * C8348 + C59730 * C8355 +
            C59739 * C60866 - C59740 * C60865 - C59739 * C60867 +
            C59731 * C60868) *
               C152084 * C152340 * C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[248] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152458 -
           (C51882 * C51197 + (C51872 + C51873) * C51196 +
            (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
             C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
             C51193 * C654) *
                C51195) *
               C152340 * C152246) *
              C152141 * C851 +
          (((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
            C52287 * C51197) *
               C152340 * C152246 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152458) *
              C152141 * C852 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152458 -
           ((C52300 + C52301) * C51197 + (C51879 + C51878) * C51196 +
            C51882 * C51195) *
               C152340 * C152246) *
              C152141 * C853 +
          ((C52287 * C51195 + (C52301 + C52300) * C51196 +
            (C51198 * C647 - C51199 * C625 - C51198 * C648 + C51193 * C661 +
             C51200 * C1219 - C51201 * C1208 - C51200 * C1220 +
             C152376 * C1226) *
                C51197) *
               C152340 * C152246 -
           ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
            C51274 * C51195) *
               C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
              C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                 C51195 +
             (C51263 + C51264) * C51196 + C51273 * C51197) *
                C152340 * C152458 -
            (C51882 * C51197 + (C51872 + C51873) * C51196 +
             (C51200 * C1209 - C51201 * C1203 - C51200 * C1210 +
              C152376 * C1221 + C51198 * C633 - C51199 * C618 - C51198 * C634 +
              C51193 * C654) *
                 C51195) *
                C152340 * C152246) *
               C1401 +
           (((C51198 * C1209 - C51199 * C1203 - C51198 * C1210 +
              C51193 * C1221 + C51200 * C1699 - C51201 * C1680 -
              C51200 * C1700 + C152376 * C1716) *
                 C51195 +
             (C52628 + C52629) * C51196 + C52634 * C51197) *
                C152340 * C152246 -
            (C51578 * C51197 + (C51568 + C51569) * C51196 +
             (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
              C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                 C51195) *
                C152340 * C152458) *
               C1402 +
           (((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
              C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
              C152376 * C1522) *
                 C51195 +
             (C51570 + C51571) * C51196 + C51579 * C51197) *
                C152340 * C152458 -
            ((C53729 + C53730) * C51197 + (C53731 + C53732) * C51196 +
             (C51200 * C2235 - C51201 * C2231 - C51200 * C2236 +
              C152376 * C2243 + C51198 * C1699 - C51199 * C1680 -
              C51198 * C1700 + C51193 * C1716) *
                 C51195) *
                C152340 * C152246) *
               C152499) *
              C152443 +
          ((((C51873 + C51872) * C51195 + (C51871 + C51870) * C51196 +
             C52287 * C51197) *
                C152340 * C152246 -
            (C51274 * C51197 + (C51266 + C51265) * C51196 +
             (C51264 + C51263) * C51195) *
                C152340 * C152458) *
               C1401 +
           (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
             C52078 * C51197) *
                C152340 * C152458 -
            ((C52632 + C52633) * C51197 + (C52631 + C52630) * C51196 +
             (C52629 + C52628) * C51195) *
                C152340 * C152246) *
               C1402 +
           (((C53732 + C53731) * C51195 + (C53730 + C53729) * C51196 +
             (C51198 * C1693 - C51199 * C1677 - C51198 * C1694 +
              C51193 * C1713 + C51200 * C2241 - C51201 * C2234 -
              C51200 * C2242 + C152376 * C2246) *
                 C51197) *
                C152340 * C152246 -
            ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
             (C51571 + C51570) * C51195) *
                C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152458 -
           (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
            C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
            C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
            C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
               C152084 * C152340 * C152246) *
              C152141 * C851 +
          ((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
            C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
            C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
            C59739 * C2237 - C59740 * C2232 - C59739 * C2238 + C59731 * C2244) *
               C152084 * C152340 * C152246 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152458) *
              C152141 * C852 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152458 -
           (C59739 * C2239 - C59740 * C2233 - C59739 * C2240 + C59731 * C2245 +
            C59737 * C1695 - C59738 * C1678 - C59737 * C1696 + C59730 * C1714 +
            C59735 * C1213 - C59736 * C1205 - C59735 * C1214 + C59729 * C1223 +
            C59733 * C629 - C59734 * C616 - C59733 * C630 + C59728 * C652) *
               C152084 * C152340 * C152246) *
              C152141 * C853 +
          ((C59733 * C627 - C59734 * C615 - C59733 * C628 + C59728 * C651 +
            C59735 * C1215 - C59736 * C1206 - C59735 * C1216 + C59729 * C1224 +
            C59737 * C1693 - C59738 * C1677 - C59737 * C1694 + C59730 * C1713 +
            C59739 * C2241 - C59740 * C2234 - C59739 * C2242 + C59731 * C2246) *
               C152084 * C152340 * C152246 -
           (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
            C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
            C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
            C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
               C152084 * C152340 * C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
             C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
             C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
             C59739 * C1509 - C59740 * C1498 - C59739 * C1510 +
             C59731 * C1522) *
                C152084 * C152340 * C152458 -
            (C59739 * C2235 - C59740 * C2231 - C59739 * C2236 + C59731 * C2243 +
             C59737 * C1699 - C59738 * C1680 - C59737 * C1700 + C59730 * C1716 +
             C59735 * C1209 - C59736 * C1203 - C59735 * C1210 + C59729 * C1221 +
             C59733 * C633 - C59734 * C618 - C59733 * C634 + C59728 * C654) *
                C152084 * C152340 * C152246) *
               C1401 +
           ((C59733 * C1209 - C59734 * C1203 - C59733 * C1210 + C59728 * C1221 +
             C59735 * C1699 - C59736 * C1680 - C59735 * C1700 + C59729 * C1716 +
             C59737 * C2235 - C59738 * C2231 - C59737 * C2236 + C59730 * C2243 +
             C59739 * C8345 - C59740 * C8336 - C59739 * C8346 +
             C59731 * C8354) *
                C152084 * C152340 * C152246 -
            (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
             C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
             C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
             C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
                C152084 * C152340 * C152458) *
               C1402 +
           ((C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
             C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
             C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
             C59739 * C8105 - C59740 * C8100 - C59739 * C8106 +
             C59731 * C8112) *
                C152084 * C152340 * C152458 -
            (C59739 * C9087 - C59740 * C9085 - C59739 * C9088 + C59731 * C9091 +
             C59737 * C8345 - C59738 * C8336 - C59737 * C8346 + C59730 * C8354 +
             C59735 * C2235 - C59736 * C2231 - C59735 * C2236 + C59729 * C2243 +
             C59733 * C1699 - C59734 * C1680 - C59733 * C1700 +
             C59728 * C1716) *
                C152084 * C152340 * C152246) *
               C152499) *
              C152443 +
          (((C59733 * C631 - C59734 * C617 - C59733 * C632 + C59728 * C653 +
             C59735 * C1211 - C59736 * C1204 - C59735 * C1212 + C59729 * C1222 +
             C59737 * C1697 - C59738 * C1679 - C59737 * C1698 + C59730 * C1715 +
             C59739 * C2237 - C59740 * C2232 - C59739 * C2238 +
             C59731 * C2244) *
                C152084 * C152340 * C152246 -
            (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
             C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
             C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
             C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
                C152084 * C152340 * C152458) *
               C1401 +
           ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
             C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
             C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
             C59739 * C1513 - C59740 * C1500 - C59739 * C1514 +
             C59731 * C1524) *
                C152084 * C152340 * C152458 -
            (C59739 * C8343 - C59740 * C8335 - C59739 * C8344 + C59731 * C8353 +
             C59737 * C2237 - C59738 * C2232 - C59737 * C2238 + C59730 * C2244 +
             C59735 * C1697 - C59736 * C1679 - C59735 * C1698 + C59729 * C1715 +
             C59733 * C1211 - C59734 * C1204 - C59733 * C1212 +
             C59728 * C1222) *
                C152084 * C152340 * C152246) *
               C1402 +
           ((C59733 * C1697 - C59734 * C1679 - C59733 * C1698 + C59728 * C1715 +
             C59735 * C2237 - C59736 * C2232 - C59735 * C2238 + C59729 * C2244 +
             C59737 * C8343 - C59738 * C8335 - C59737 * C8344 + C59730 * C8353 +
             C59739 * C9089 - C59740 * C9086 - C59739 * C9090 +
             C59731 * C9092) *
                C152084 * C152340 * C152246 -
            (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
             C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
             C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
             C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
                C152084 * C152340 * C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[249] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C152159 * C152141 * C129 -
          (C51274 * C51197 + (C51266 + C51265) * C51196 +
           (C51264 + C51263) * C51195) *
              C152340 * C152159 * C152141 * C130 +
          (C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
              C152340 * C152159 * C152141 * C131 -
          ((C51271 + C51272) * C51197 + (C51270 + C51269) * C51196 +
           C51274 * C51195) *
              C152340 * C152159 * C152141 * C132 +
          (C51275 * C51195 + (C51272 + C51271) * C51196 +
           (C51198 * C156 - C51199 * C142 - C51198 * C157 + C51193 * C166 +
            C51200 * C856 - C51201 * C855 - C51200 * C857 + C152376 * C858) *
               C51197) *
              C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C152546 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C152530 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152499) *
              C359 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            (C51574 + C51575) * C51197) *
               C152340 * C152159 * C152530 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C152546 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152499) *
              C360 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C152546 -
           ((C51200 * C392 - C51201 * C371 - C51200 * C393 + C152376 * C407 +
             C51198 * C390 - C51199 * C370 - C51198 * C391 + C51193 * C406) *
                C51197 +
            (C51575 + C51574) * C51196 + C51578 * C51195) *
               C152340 * C152159 * C152530 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
             C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
                C51195 +
            (C51263 + C51264) * C51196 + C51273 * C51197) *
               C152340 * C152159 * C1401 -
           (C51578 * C51197 + (C51568 + C51569) * C51196 +
            (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
             C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
                C51195) *
               C152340 * C152159 * C1402 +
           ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
             C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
             C152376 * C1522) *
                C51195 +
            (C51570 + C51571) * C51196 + C51579 * C51197) *
               C152340 * C152159 * C152499) *
              C152543 +
          (((C51569 + C51568) * C51195 + (C51567 + C51566) * C51196 +
            C52078 * C51197) *
               C152340 * C152159 * C1402 -
           (C51274 * C51197 + (C51266 + C51265) * C51196 +
            (C51264 + C51263) * C51195) *
               C152340 * C152159 * C1401 -
           ((C51576 + C51577) * C51197 + (C51573 + C51572) * C51196 +
            (C51571 + C51570) * C51195) *
               C152340 * C152159 * C152499) *
              C152526 +
          ((C51273 * C51195 + (C51268 + C51267) * C51196 + C51275 * C51197) *
               C152340 * C152159 * C1401 -
           ((C52091 + C52092) * C51197 + (C51575 + C51574) * C51196 +
            C51578 * C51195) *
               C152340 * C152159 * C1402 +
           (C51579 * C51195 + (C51577 + C51576) * C51196 +
            (C51198 * C392 - C51199 * C371 - C51198 * C393 + C51193 * C407 +
             C51200 * C1858 - C51201 * C1857 - C51200 * C1859 +
             C152376 * C1860) *
                C51197) *
               C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C51198 * C144 - C51199 * C136 - C51198 * C145 + C51193 * C160 +
            C51200 * C380 - C51201 * C365 - C51200 * C381 + C152376 * C401) *
               C51195 +
           (C51263 + C51264) * C51196 + C51273 * C51197) *
              C152340 * C152159 * C1489 -
          (C51578 * C51197 + (C51568 + C51569) * C51196 +
           (C51200 * C382 - C51201 * C366 - C51200 * C383 + C152376 * C402 +
            C51198 * C380 - C51199 * C365 - C51198 * C381 + C51193 * C401) *
               C51195) *
              C152340 * C152159 * C1490 +
          ((C51198 * C382 - C51199 * C366 - C51198 * C383 + C51193 * C402 +
            C51200 * C1509 - C51201 * C1498 - C51200 * C1510 +
            C152376 * C1522) *
               C51195 +
           (C51570 + C51571) * C51196 + C51579 * C51197) *
              C152340 * C152159 * C1491 -
          ((C51200 * C1515 - C51201 * C1501 - C51200 * C1516 + C152376 * C1525 +
            C51198 * C1505 - C51199 * C1496 - C51198 * C1506 + C51193 * C1520) *
               C51197 +
           (C51200 * C1513 - C51201 * C1500 - C51200 * C1514 + C152376 * C1524 +
            C51198 * C1507 - C51199 * C1497 - C51198 * C1508 + C51193 * C1521) *
               C51196 +
           (C51200 * C1511 - C51201 * C1499 - C51200 * C1512 + C152376 * C1523 +
            C51198 * C1509 - C51199 * C1498 - C51198 * C1510 + C51193 * C1522) *
               C51195) *
              C152340 * C152159 * C1492 +
          ((C51198 * C1511 - C51199 * C1499 - C51198 * C1512 + C51193 * C1523 +
            C51200 * C8105 - C51201 * C8100 - C51200 * C8106 +
            C152376 * C8112) *
               C51195 +
           (C51198 * C1513 - C51199 * C1500 - C51198 * C1514 + C51193 * C1524 +
            C51200 * C8103 - C51201 * C8099 - C51200 * C8104 +
            C152376 * C8111) *
               C51196 +
           (C51198 * C1515 - C51199 * C1501 - C51198 * C1516 + C51193 * C1525 +
            C51200 * C8552 - C51201 * C8551 - C51200 * C8553 +
            C152376 * C8554) *
               C51197) *
              C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C152141 * C129 -
          (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
           C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
           C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
           C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
              C152084 * C152340 * C152159 * C152141 * C130 +
          (C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
           C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
           C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
           C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
              C152084 * C152340 * C152159 * C152141 * C131 -
          (C59739 * C1503 - C59740 * C1495 - C59739 * C1504 + C59731 * C1519 +
           C59737 * C388 - C59738 * C369 - C59737 * C389 + C59730 * C405 +
           C59735 * C374 - C59736 * C362 - C59735 * C375 + C59729 * C398 +
           C59733 * C150 - C59734 * C139 - C59733 * C151 + C59728 * C163) *
              C152084 * C152340 * C152159 * C152141 * C132 +
          (C59733 * C152 - C59734 * C140 - C59733 * C153 + C59728 * C164 +
           C59735 * C390 - C59736 * C370 - C59735 * C391 + C59729 * C406 +
           C59737 * C392 - C59738 * C371 - C59737 * C393 + C59730 * C407 +
           C59739 * C1858 - C59740 * C1857 - C59739 * C1859 + C59731 * C1860) *
              C152084 * C152340 * C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C359 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C152530 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C360 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C152546 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C152530 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
            C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
            C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
            C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
            C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
            C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
            C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
            C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
            C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
            C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
               C152084 * C152340 * C152159 * C152499) *
              C152543 +
          ((C59733 * C378 - C59734 * C364 - C59733 * C379 + C59728 * C400 +
            C59735 * C384 - C59736 * C367 - C59735 * C385 + C59729 * C403 +
            C59737 * C1507 - C59738 * C1497 - C59737 * C1508 + C59730 * C1521 +
            C59739 * C1513 - C59740 * C1500 - C59739 * C1514 + C59731 * C1524) *
               C152084 * C152340 * C152159 * C1402 -
           (C59739 * C1507 - C59740 * C1497 - C59739 * C1508 + C59731 * C1521 +
            C59737 * C384 - C59738 * C367 - C59737 * C385 + C59730 * C403 +
            C59735 * C378 - C59736 * C364 - C59735 * C379 + C59729 * C400 +
            C59733 * C146 - C59734 * C137 - C59733 * C147 + C59728 * C161) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C8103 - C59740 * C8099 - C59739 * C8104 + C59731 * C8111 +
            C59737 * C1513 - C59738 * C1500 - C59737 * C1514 + C59730 * C1524 +
            C59735 * C1507 - C59736 * C1497 - C59735 * C1508 + C59729 * C1521 +
            C59733 * C384 - C59734 * C367 - C59733 * C385 + C59728 * C403) *
               C152084 * C152340 * C152159 * C152499) *
              C152526 +
          ((C59733 * C148 - C59734 * C138 - C59733 * C149 + C59728 * C162 +
            C59735 * C376 - C59736 * C363 - C59735 * C377 + C59729 * C399 +
            C59737 * C386 - C59738 * C368 - C59737 * C387 + C59730 * C404 +
            C59739 * C1505 - C59740 * C1496 - C59739 * C1506 + C59731 * C1520) *
               C152084 * C152340 * C152159 * C1401 -
           (C59739 * C1515 - C59740 * C1501 - C59739 * C1516 + C59731 * C1525 +
            C59737 * C1505 - C59738 * C1496 - C59737 * C1506 + C59730 * C1520 +
            C59735 * C386 - C59736 * C368 - C59735 * C387 + C59729 * C404 +
            C59733 * C376 - C59734 * C363 - C59733 * C377 + C59728 * C399) *
               C152084 * C152340 * C152159 * C1402 +
           (C59733 * C386 - C59734 * C368 - C59733 * C387 + C59728 * C404 +
            C59735 * C1505 - C59736 * C1496 - C59735 * C1506 + C59729 * C1520 +
            C59737 * C1515 - C59738 * C1501 - C59737 * C1516 + C59730 * C1525 +
            C59739 * C8552 - C59740 * C8551 - C59739 * C8553 + C59731 * C8554) *
               C152084 * C152340 * C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C59733 * C144 - C59734 * C136 - C59733 * C145 + C59728 * C160 +
           C59735 * C380 - C59736 * C365 - C59735 * C381 + C59729 * C401 +
           C59737 * C382 - C59738 * C366 - C59737 * C383 + C59730 * C402 +
           C59739 * C1509 - C59740 * C1498 - C59739 * C1510 + C59731 * C1522) *
              C152084 * C152340 * C152159 * C1489 -
          (C59739 * C1511 - C59740 * C1499 - C59739 * C1512 + C59731 * C1523 +
           C59737 * C1509 - C59738 * C1498 - C59737 * C1510 + C59730 * C1522 +
           C59735 * C382 - C59736 * C366 - C59735 * C383 + C59729 * C402 +
           C59733 * C380 - C59734 * C365 - C59733 * C381 + C59728 * C401) *
              C152084 * C152340 * C152159 * C1490 +
          (C59733 * C382 - C59734 * C366 - C59733 * C383 + C59728 * C402 +
           C59735 * C1509 - C59736 * C1498 - C59735 * C1510 + C59729 * C1522 +
           C59737 * C1511 - C59738 * C1499 - C59737 * C1512 + C59730 * C1523 +
           C59739 * C8105 - C59740 * C8100 - C59739 * C8106 + C59731 * C8112) *
              C152084 * C152340 * C152159 * C1491 -
          (C59739 * C8107 - C59740 * C8101 - C59739 * C8108 + C59731 * C8113 +
           C59737 * C8105 - C59738 * C8100 - C59737 * C8106 + C59730 * C8112 +
           C59735 * C1511 - C59736 * C1499 - C59735 * C1512 + C59729 * C1523 +
           C59733 * C1509 - C59734 * C1498 - C59733 * C1510 + C59728 * C1522) *
              C152084 * C152340 * C152159 * C1492 +
          (C59733 * C1511 - C59734 * C1499 - C59733 * C1512 + C59728 * C1523 +
           C59735 * C8105 - C59736 * C8100 - C59735 * C8106 + C59729 * C8112 +
           C59737 * C8107 - C59738 * C8101 - C59737 * C8108 + C59730 * C8113 +
           C59739 * C60716 - C59740 * C60715 - C59739 * C60717 +
           C59731 * C60718) *
              C152084 * C152340 * C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C152200 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C152207 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152159 * C3799) *
              C152118 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C152207 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C152200 -
           (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                C101414) *
               C152159 * C3799) *
              C152127 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152159 * C152200 -
           (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
               C152159 * C152207 +
           ((C23763 * C152436 + (C23761 + C23760) * C152089) * C101414 +
            ((C25914 + C25913) * C152436 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C3799) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C152458 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152246) *
               C152200 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C152458) *
               C152207 +
           ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
               C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
               C152376 * C1522) *
                  C152436 +
              (C23754 + C23755) * C152089) *
                 C101414 +
             ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
                C152458 -
            (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                 C152404 +
             (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
                C152246) *
               C3799) *
              C3455 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C152458) *
               C152200 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C152458 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152246) *
               C152207 +
           (((C43188 * C152436 + (C25914 + C25913) * C152089) * C101414 +
             ((C42527 + C42526) * C152436 +
              (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
               C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
               C23384 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
             ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                 C101414) *
                C152458) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C152553 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C152549 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152159 * C152535 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C152436) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C152436) *
                C101414) *
               C152159 * C152509) *
              C3455 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C152549 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C152553 -
           (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                C101414) *
               C152159 * C152535 +
           (((C25598 + C25597) * C152436 + (C25596 + C25595) * C152089) *
                C101414 +
            ((C42801 + C42800) * C152436 +
             (C23382 * C2239 - C23383 * C2233 - C23382 * C2240 +
              C152474 * C2245 + C23384 * C8867 - C23385 * C8866 -
              C23384 * C8868 + C152376 * C8869) *
                 C152089) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C3315 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C152204) *
              C152552 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C152204 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C3315) *
              C152545 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152159 * C3315 -
           (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
               C152159 * C152204) *
              C152528 +
          (((C24262 * C152436 + (C24276 + C24275) * C152089) * C101414 +
            ((C24817 + C24816) * C152436 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C152089) *
                C152404) *
               C152159 * C152204 -
           (((C24484 + C24485) * C152089 + C41328 * C152436) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C152436) * C101414) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C152547 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152532 +
            (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
             ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
                C152502) *
               C3315 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152532 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C152547 -
            (((C44646 + C44647) * C152089 + (C45178 + C45179) * C152436) *
                 C152404 +
             (C44641 * C152089 + (C42523 + C42522) * C152436) * C101414) *
                C152502) *
               C152204) *
              C3455 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152532 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C152547 -
            (((C27205 + C27206) * C152089 + C44907 * C152436) * C152404 +
             (C40799 * C152089 + C40787 * C152436) * C101414) *
                C152502) *
               C3315 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C152547 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152532 +
            ((C44632 * C152436 + (C26984 + C26983) * C152089) * C101414 +
             ((C44647 + C44646) * C152436 +
              (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
               C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
               C23384 * C10186 + C152376 * C10187) *
                  C152089) *
                 C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C152458 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152246) *
               C3315 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C152458) *
               C152204) *
              C152118 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C152458) *
               C3315 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C152458 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152246) *
               C152204) *
              C152127 +
          ((((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
             (C40798 * C152436 + C24471 * C152089) * C152404) *
                C152458 -
            (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
             (C41328 * C152089 + C24066 * C152436) * C101414) *
                C152246) *
               C3315 +
           (((C24818 * C152436 + (C24817 + C24816) * C152089) * C101414 +
             ((C26984 + C26983) * C152436 +
              (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
               C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
               C23384 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
             ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
                C152458) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C3315 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C152204) *
              C152552 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C152204 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C3315) *
              C152545 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152159 * C3315 -
           (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
               C152159 * C152204) *
              C152528 +
          (((C24262 * C152436 + (C24276 + C24275) * C152089) * C101414 +
            ((C24817 + C24816) * C152436 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C152089) *
                C152404) *
               C152159 * C152204 -
           (((C24484 + C24485) * C152089 + C41328 * C152436) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C152436) * C101414) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C152553 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C152549 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152159 * C152535 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C152436) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C152436) *
                C101414) *
               C152159 * C152509) *
              C3455 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C152549 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C152553 -
           (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                C101414) *
               C152159 * C152535 +
           (((C25598 + C25597) * C152436 + (C25596 + C25595) * C152089) *
                C101414 +
            ((C42801 + C42800) * C152436 +
             (C23382 * C2239 - C23383 * C2233 - C23382 * C2240 +
              C152474 * C2245 + C23384 * C8867 - C23385 * C8866 -
              C23384 * C8868 + C152376 * C8869) *
                 C152089) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C4321 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152246) *
               C152200 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C4321) *
               C152207 +
           ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
               C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
               C152376 * C1522) *
                  C152436 +
              (C23754 + C23755) * C152089) *
                 C101414 +
             ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
                C4321 -
            (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                 C152404 +
             (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
                C152246) *
               C3799) *
              C152443 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C4321) *
               C152200 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C4321 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152246) *
               C152207 +
           (((C43188 * C152436 + (C25914 + C25913) * C152089) * C101414 +
             ((C42527 + C42526) * C152436 +
              (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
               C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
               C23384 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
             ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                 C101414) *
                C4321) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152242 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152249 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C4993) *
              C152200 +
          ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
            ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
               C152249 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152242 -
           (((C44646 + C44647) * C152089 + (C45178 + C45179) * C152436) *
                C152404 +
            (C44641 * C152089 + (C42523 + C42522) * C152436) * C101414) *
               C4993) *
              C152207 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152242 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
               C152249 +
           (((C42529 + C42528) * C152436 + (C42527 + C42526) * C152089) *
                C101414 +
            ((C23382 * C9659 - C23383 * C9652 - C23382 * C9660 +
              C152474 * C9670 + C23384 * C10405 - C23385 * C10403 -
              C23384 * C10406 + C152376 * C10409) *
                 C152436 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C4993) *
              C3799) *
         C152113) /
        (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C4321 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152246) *
              C152553 +
          ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
            ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
               C152246 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C4321) *
              C152549 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C4321 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
               C152246) *
              C152535 +
          ((((C43460 + C43461) * C152436 + (C42801 + C42800) * C152089) *
                C101414 +
            ((C23382 * C8341 - C23383 * C8334 - C23382 * C8342 +
              C152474 * C8352 + C23384 * C8347 - C23385 * C8337 -
              C23384 * C8348 + C152376 * C8355) *
                 C152436 +
             (C23382 * C8339 - C23383 * C8333 - C23382 * C8340 +
              C152474 * C8351 + C23384 * C8349 - C23385 * C8338 -
              C23384 * C8350 + C152376 * C8356) *
                 C152089) *
                C152404) *
               C152246 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C152436) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C152436) *
                C101414) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C4321 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152246) *
               C3315 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C4321) *
               C152204) *
              C152543 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C4321) *
               C3315 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C4321 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152246) *
               C152204) *
              C152526 +
          ((((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
             (C40798 * C152436 + C24471 * C152089) * C152404) *
                C4321 -
            (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
             (C41328 * C152089 + C24066 * C152436) * C101414) *
                C152246) *
               C3315 +
           (((C24818 * C152436 + (C24817 + C24816) * C152089) * C101414 +
             ((C26984 + C26983) * C152436 +
              (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
               C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
               C23384 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
             ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152554 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152551 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C152538 -
           (((C44242 + C44243) * C152089 + (C44244 + C44245) * C152436) *
                C152404 +
            (C44907 * C152089 + (C44241 + C44240) * C152436) * C101414) *
               C152515) *
              C3315 +
          ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
            ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
               C152551 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152554 -
           (((C44646 + C44647) * C152089 + (C45178 + C45179) * C152436) *
                C152404 +
            (C44641 * C152089 + (C42523 + C42522) * C152436) * C101414) *
               C152538 +
           (((C45179 + C45178) * C152436 + (C44647 + C44646) * C152089) *
                C101414 +
            ((C23382 * C9661 - C23383 * C9653 - C23382 * C9662 +
              C152474 * C9671 + C23384 * C9663 - C23385 * C9654 -
              C23384 * C9664 + C152376 * C9672) *
                 C152436 +
             (C23382 * C9665 - C23383 * C9655 - C23382 * C9666 +
              C152474 * C9673 + C23384 * C9667 - C23385 * C9656 -
              C23384 * C9668 + C152376 * C9674) *
                 C152089) *
                C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C152242 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152249 +
            (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
             ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
                C4993) *
               C3315 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152249 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C152242 -
            (((C44646 + C44647) * C152089 + (C45178 + C45179) * C152436) *
                 C152404 +
             (C44641 * C152089 + (C42523 + C42522) * C152436) * C101414) *
                C4993) *
               C152204) *
              C152443 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152249 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C152242 -
            (((C27205 + C27206) * C152089 + C44907 * C152436) * C152404 +
             (C40799 * C152089 + C40787 * C152436) * C101414) *
                C4993) *
               C3315 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C152242 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152249 +
            ((C44632 * C152436 + (C26984 + C26983) * C152089) * C101414 +
             ((C44647 + C44646) * C152436 +
              (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
               C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
               C23384 * C10186 + C152376 * C10187) *
                  C152089) *
                 C152404) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C4321 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152246) *
               C3315 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C4321) *
               C152204) *
              C152543 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C4321) *
               C3315 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C4321 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152246) *
               C152204) *
              C152526 +
          ((((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
             (C40798 * C152436 + C24471 * C152089) * C152404) *
                C4321 -
            (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
             (C41328 * C152089 + C24066 * C152436) * C101414) *
                C152246) *
               C3315 +
           (((C24818 * C152436 + (C24817 + C24816) * C152089) * C101414 +
             ((C26984 + C26983) * C152436 +
              (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
               C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
               C23384 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
             ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C4321 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152246) *
              C152553 +
          ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
            ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
               C152246 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C4321) *
              C152549 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C4321 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
               C152246) *
              C152535 +
          ((((C43460 + C43461) * C152436 + (C42801 + C42800) * C152089) *
                C101414 +
            ((C23382 * C8341 - C23383 * C8334 - C23382 * C8342 +
              C152474 * C8352 + C23384 * C8347 - C23385 * C8337 -
              C23384 * C8348 + C152376 * C8355) *
                 C152436 +
             (C23382 * C8339 - C23383 * C8333 - C23382 * C8340 +
              C152474 * C8351 + C23384 * C8349 - C23385 * C8338 -
              C23384 * C8350 + C152376 * C8356) *
                 C152089) *
                C152404) *
               C152246 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C152436) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C152436) *
                C101414) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C1851 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C1852 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152159 * C1853 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C152436) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C152436) *
                C101414) *
               C152159 * C152509) *
              C152443 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C1852 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C1851 -
           (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                C101414) *
               C152159 * C1853 +
           (((C25598 + C25597) * C152436 + (C25596 + C25595) * C152089) *
                C101414 +
            ((C42801 + C42800) * C152436 +
             (C23382 * C2239 - C23383 * C2233 - C23382 * C2240 +
              C152474 * C2245 + C23384 * C8867 - C23385 * C8866 -
              C23384 * C8868 + C152376 * C8869) *
                 C152089) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C152457 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C152204) *
              C851 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C152204 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C152457) *
              C852 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152159 * C152457 -
           (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
               C152159 * C152204) *
              C853 +
          (((C24262 * C152436 + (C24276 + C24275) * C152089) * C101414 +
            ((C24817 + C24816) * C152436 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C152089) *
                C152404) *
               C152159 * C152204 -
           (((C24484 + C24485) * C152089 + C41328 * C152436) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C152436) * C101414) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C2393 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C2394 +
            (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
             ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
                C152502) *
               C152457 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C2394 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C2393 -
            (((C44646 + C44647) * C152089 + (C45178 + C45179) * C152436) *
                 C152404 +
             (C44641 * C152089 + (C42523 + C42522) * C152436) * C101414) *
                C152502) *
               C152204) *
              C152443 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C2394 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C2393 -
            (((C27205 + C27206) * C152089 + C44907 * C152436) * C152404 +
             (C40799 * C152089 + C40787 * C152436) * C101414) *
                C152502) *
               C152457 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C2393 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C2394 +
            ((C44632 * C152436 + (C26984 + C26983) * C152089) * C101414 +
             ((C44647 + C44646) * C152436 +
              (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
               C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
               C23384 * C10186 + C152376 * C10187) *
                  C152089) *
                 C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152458 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152246) *
              C1851 +
          ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
            ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
               C152246 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152458) *
              C1852 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152458 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
               C152246) *
              C1853 +
          ((((C43460 + C43461) * C152436 + (C42801 + C42800) * C152089) *
                C101414 +
            ((C23382 * C8341 - C23383 * C8334 - C23382 * C8342 +
              C152474 * C8352 + C23384 * C8347 - C23385 * C8337 -
              C23384 * C8348 + C152376 * C8355) *
                 C152436 +
             (C23382 * C8339 - C23383 * C8333 - C23382 * C8340 +
              C152474 * C8351 + C23384 * C8349 - C23385 * C8338 -
              C23384 * C8350 + C152376 * C8356) *
                 C152089) *
                C152404) *
               C152246 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C152436) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C152436) *
                C101414) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C152458 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152246) *
               C152457 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C152458) *
               C152204) *
              C359 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C152458) *
               C152457 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C152458 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152246) *
               C152204) *
              C360 +
          ((((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
             (C40798 * C152436 + C24471 * C152089) * C152404) *
                C152458 -
            (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
             (C41328 * C152089 + C24066 * C152436) * C101414) *
                C152246) *
               C152457 +
           (((C24818 * C152436 + (C24817 + C24816) * C152089) * C101414 +
             ((C26984 + C26983) * C152436 +
              (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
               C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
               C23384 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
             ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C3010 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C3011 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C3012 -
           (((C44242 + C44243) * C152089 + (C44244 + C44245) * C152436) *
                C152404 +
            (C44907 * C152089 + (C44241 + C44240) * C152436) * C101414) *
               C152515) *
              C152457 +
          ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
            ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
               C3011 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C3010 -
           (((C44646 + C44647) * C152089 + (C45178 + C45179) * C152436) *
                C152404 +
            (C44641 * C152089 + (C42523 + C42522) * C152436) * C101414) *
               C3012 +
           (((C45179 + C45178) * C152436 + (C44647 + C44646) * C152089) *
                C101414 +
            ((C23382 * C9661 - C23383 * C9653 - C23382 * C9662 +
              C152474 * C9671 + C23384 * C9663 - C23385 * C9654 -
              C23384 * C9664 + C152376 * C9672) *
                 C152436 +
             (C23382 * C9665 - C23383 * C9655 - C23382 * C9666 +
              C152474 * C9673 + C23384 * C9667 - C23385 * C9656 -
              C23384 * C9668 + C152376 * C9674) *
                 C152089) *
                C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23382 * C144 - C23383 * C136 - C23382 * C145 +
                 C152474 * C160 + C23384 * C380 - C23385 * C365 -
                 C23384 * C381 + C152376 * C401) *
                    C152436 +
                (C23447 + C23448) * C152089) *
                   C101414 +
               ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                  C152159 * C152141 * C129 -
              ((C24066 * C152089 + C40796 * C152436) * C152404 +
               ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                   C101414) *
                  C152159 * C152141 * C130 +
              ((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
               (C40798 * C152436 + C24471 * C152089) * C152404) *
                  C152159 * C152141 * C131 -
              (((C24484 + C24485) * C152089 + C41328 * C152436) * C152404 +
               ((C23454 + C23453) * C152089 + C23458 * C152436) * C101414) *
                  C152159 * C152141 * C132 +
              ((C23459 * C152436 + (C23456 + C23455) * C152089) * C101414 +
               ((C24485 + C24484) * C152436 +
                (C23382 * C647 - C23383 * C625 - C23382 * C648 +
                 C152474 * C661 + C23384 * C1219 - C23385 * C1208 -
                 C23384 * C1220 + C152376 * C1226) *
                    C152089) *
                   C152404) *
                  C152159 * C152141 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23382 * C144 - C23383 * C136 - C23382 * C145 +
                  C152474 * C160 + C23384 * C380 - C23385 * C365 -
                  C23384 * C381 + C152376 * C401) *
                     C152436 +
                 (C23447 + C23448) * C152089) *
                    C101414 +
                ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                   C152159 * C152546 -
               ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
                ((C23752 + C23753) * C152089 +
                 (C23384 * C382 - C23385 * C366 - C23384 * C383 +
                  C152376 * C402 + C23382 * C380 - C23383 * C365 -
                  C23382 * C381 + C152474 * C401) *
                     C152436) *
                    C101414) *
                   C152159 * C152530 +
               (((C23382 * C382 - C23383 * C366 - C23382 * C383 +
                  C152474 * C402 + C23384 * C1509 - C23385 * C1498 -
                  C23384 * C1510 + C152376 * C1522) *
                     C152436 +
                 (C23754 + C23755) * C152089) *
                    C101414 +
                ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
                   C152159 * C152499) *
                  C359 +
              ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                    C101414 +
                (C41723 * C152436 + C24818 * C152089) * C152404) *
                   C152159 * C152530 -
               ((C24066 * C152089 + C40796 * C152436) * C152404 +
                ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                    C101414) *
                   C152159 * C152546 -
               (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
                ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                    C101414) *
                   C152159 * C152499) *
                  C360 +
              (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
                (C40798 * C152436 + C24471 * C152089) * C152404) *
                   C152159 * C152546 -
               (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
                ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
                   C152159 * C152530 +
               ((C23763 * C152436 + (C23761 + C23760) * C152089) * C101414 +
                ((C25914 + C25913) * C152436 +
                 (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
                  C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
                  C23384 * C2242 + C152376 * C2246) *
                     C152089) *
                    C152404) *
                   C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152547 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152532 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C152502) *
              C152141 * C359 +
          (((C40786 * C152436 + C40798 * C152089) * C101414 +
            (C40797 * C152436 + C24067 * C152089) * C152404) *
               C152532 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152547 -
           (((C27205 + C27206) * C152089 + C44907 * C152436) * C152404 +
            (C40799 * C152089 + C40787 * C152436) * C101414) *
               C152502) *
              C152141 * C360 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152547 -
           (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
            (C41328 * C152089 + C24066 * C152436) * C101414) *
               C152532 +
           ((C24067 * C152436 + (C24065 + C24064) * C152089) * C101414 +
            ((C27206 + C27205) * C152436 +
             (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
              C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
              C23384 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C1401 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C1402 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152159 * C152499) *
              C152543 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C1402 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C1401 -
           (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                C101414) *
               C152159 * C152499) *
              C152526 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152159 * C1401 -
           (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
               C152159 * C1402 +
           ((C23763 * C152436 + (C23761 + C23760) * C152089) * C101414 +
            ((C25914 + C25913) * C152436 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152436 +
            (C23447 + C23448) * C152089) *
               C101414 +
           ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
              C152159 * C1489 -
          ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
           ((C23752 + C23753) * C152089 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152436) *
               C101414) *
              C152159 * C1490 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152436 +
            (C23754 + C23755) * C152089) *
               C101414 +
           ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
              C152159 * C1491 -
          (((C42800 + C42801) * C152089 + (C43461 + C43460) * C152436) *
               C152404 +
           ((C25597 + C25598) * C152089 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152436) *
               C101414) *
              C152159 * C1492 +
          (((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 +
             C152474 * C1523 + C23384 * C8105 - C23385 * C8100 -
             C23384 * C8106 + C152376 * C8112) *
                C152436 +
            (C23382 * C1513 - C23383 * C1500 - C23382 * C1514 +
             C152474 * C1524 + C23384 * C8103 - C23385 * C8099 -
             C23384 * C8104 + C152376 * C8111) *
                C152089) *
               C101414 +
           ((C23382 * C8345 - C23383 * C8336 - C23382 * C8346 +
             C152474 * C8354 + C23384 * C9087 - C23385 * C9085 -
             C23384 * C9088 + C152376 * C9091) *
                C152436 +
            (C23382 * C8343 - C23383 * C8335 - C23382 * C8344 +
             C152474 * C8353 + C23384 * C9089 - C23385 * C9086 -
             C23384 * C9090 + C152376 * C9092) *
                C152089) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152547 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152532 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C152502) *
              C1401 +
          ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
            ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
               C152532 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152547 -
           (((C44646 + C44647) * C152089 + (C45178 + C45179) * C152436) *
                C152404 +
            (C44641 * C152089 + (C42523 + C42522) * C152436) * C101414) *
               C152502) *
              C1402 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152547 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
               C152532 +
           (((C42529 + C42528) * C152436 + (C42527 + C42526) * C152089) *
                C101414 +
            ((C23382 * C9659 - C23383 * C9652 - C23382 * C9660 +
              C152474 * C9670 + C23384 * C10405 - C23385 * C10403 -
              C23384 * C10406 + C152376 * C10409) *
                 C152436 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C2393 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C2394 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C40786 * C152436 + C40798 * C152089) * C101414 +
            (C40797 * C152436 + C24067 * C152089) * C152404) *
               C2394 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C2393 -
           (((C27205 + C27206) * C152089 + C44907 * C152436) * C152404 +
            (C40799 * C152089 + C40787 * C152436) * C101414) *
               C152502) *
              C152141 * C152526 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C2393 -
           (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
            (C41328 * C152089 + C24066 * C152436) * C101414) *
               C2394 +
           ((C24067 * C152436 + (C24065 + C24064) * C152089) * C101414 +
            ((C27206 + C27205) * C152436 +
             (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
              C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
              C23384 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C2393 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C2394 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C152502) *
              C152546 +
          ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
            ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
               C2394 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C2393 -
           (((C44646 + C44647) * C152089 + (C45178 + C45179) * C152436) *
                C152404 +
            (C44641 * C152089 + (C42523 + C42522) * C152436) * C101414) *
               C152502) *
              C152530 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C2393 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
               C2394 +
           (((C42529 + C42528) * C152436 + (C42527 + C42526) * C152089) *
                C101414 +
            ((C23382 * C9659 - C23383 * C9652 - C23382 * C9660 +
              C152474 * C9670 + C23384 * C10405 - C23385 * C10403 -
              C23384 * C10406 + C152376 * C10409) *
                 C152436 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152436 +
            (C23447 + C23448) * C152089) *
               C101414 +
           ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
              C2624 -
          ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
           (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
              C2625 +
          (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
           ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
              C2626 -
          (((C44242 + C44243) * C152089 + (C44244 + C44245) * C152436) *
               C152404 +
           (C44907 * C152089 + (C44241 + C44240) * C152436) * C101414) *
              C2627 +
          (((C44245 + C44244) * C152436 + (C44243 + C44242) * C152089) *
               C101414 +
           ((C23382 * C18073 - C23383 * C18068 - C23382 * C18074 +
             C152474 * C18080 + C23384 * C18811 - C23385 * C18809 -
             C23384 * C18812 + C152376 * C18815) *
                C152436 +
            (C23382 * C18071 - C23383 * C18067 - C23382 * C18072 +
             C152474 * C18079 + C23384 * C18813 - C23385 * C18810 -
             C23384 * C18814 + C152376 * C18816) *
                C152089) *
               C152404) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C152458 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152246) *
               C1401 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C152458) *
               C1402 +
           ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
               C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
               C152376 * C1522) *
                  C152436 +
              (C23754 + C23755) * C152089) *
                 C101414 +
             ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
                C152458 -
            (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                 C152404 +
             (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
                C152246) *
               C152499) *
              C152443 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C152458) *
               C1401 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C152458 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152246) *
               C1402 +
           (((C43188 * C152436 + (C25914 + C25913) * C152089) * C101414 +
             ((C42527 + C42526) * C152436 +
              (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
               C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
               C23384 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
             ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                 C101414) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152458 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152246) *
              C152141 * C851 +
          (((C40786 * C152436 + C40798 * C152089) * C101414 +
            (C40797 * C152436 + C24067 * C152089) * C152404) *
               C152246 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152458) *
              C152141 * C852 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152458 -
           (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
            (C41328 * C152089 + C24066 * C152436) * C101414) *
               C152246) *
              C152141 * C853 +
          (((C24471 * C152436 + (C24485 + C24484) * C152089) * C101414 +
            ((C24065 + C24064) * C152436 +
             (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
              C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
              C152376 * C2858) *
                 C152089) *
                C152404) *
               C152246 -
           (((C24484 + C24485) * C152089 + C41328 * C152436) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C152436) * C101414) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C3010 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C3011 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C3012 -
           (((C44242 + C44243) * C152089 + (C44244 + C44245) * C152436) *
                C152404 +
            (C44907 * C152089 + (C44241 + C44240) * C152436) * C101414) *
               C152515) *
              C152141 * C152443 +
          (((C40786 * C152436 + C40798 * C152089) * C101414 +
            (C40797 * C152436 + C24067 * C152089) * C152404) *
               C3011 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C3010 -
           (((C27205 + C27206) * C152089 + C44907 * C152436) * C152404 +
            (C40799 * C152089 + C40787 * C152436) * C101414) *
               C3012 +
           ((C44906 * C152436 + (C27206 + C27205) * C152089) * C101414 +
            ((C44243 + C44242) * C152436 +
             (C23382 * C2649 - C23383 * C2635 - C23382 * C2650 +
              C152474 * C2659 + C23384 * C18401 - C23385 * C18400 -
              C23384 * C18402 + C152376 * C18403) *
                 C152089) *
                C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C152546 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C152530 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152159 * C152499) *
              C359 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C152530 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C152546 -
           (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                C101414) *
               C152159 * C152499) *
              C360 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152159 * C152546 -
           (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
               C152159 * C152530 +
           ((C23763 * C152436 + (C23761 + C23760) * C152089) * C101414 +
            ((C25914 + C25913) * C152436 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152436 +
            (C23447 + C23448) * C152089) *
               C101414 +
           ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
              C152159 * C152141 * C129 -
          ((C24066 * C152089 + C40796 * C152436) * C152404 +
           ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
               C101414) *
              C152159 * C152141 * C130 +
          ((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
           (C40798 * C152436 + C24471 * C152089) * C152404) *
              C152159 * C152141 * C131 -
          (((C24484 + C24485) * C152089 + C41328 * C152436) * C152404 +
           ((C23454 + C23453) * C152089 + C23458 * C152436) * C101414) *
              C152159 * C152141 * C132 +
          ((C23459 * C152436 + (C23456 + C23455) * C152089) * C101414 +
           ((C24485 + C24484) * C152436 +
            (C23382 * C647 - C23383 * C625 - C23382 * C648 + C152474 * C661 +
             C23384 * C1219 - C23385 * C1208 - C23384 * C1220 +
             C152376 * C1226) *
                C152089) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C1401 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C1402 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152159 * C152499) *
              C152543 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C1402 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C1401 -
           (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                C101414) *
               C152159 * C152499) *
              C152526 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152159 * C1401 -
           (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
               C152159 * C1402 +
           ((C23763 * C152436 + (C23761 + C23760) * C152089) * C101414 +
            ((C25914 + C25913) * C152436 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152436 +
            (C23447 + C23448) * C152089) *
               C101414 +
           ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
              C152159 * C1489 -
          ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
           ((C23752 + C23753) * C152089 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152436) *
               C101414) *
              C152159 * C1490 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152436 +
            (C23754 + C23755) * C152089) *
               C101414 +
           ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
              C152159 * C1491 -
          (((C42800 + C42801) * C152089 + (C43461 + C43460) * C152436) *
               C152404 +
           ((C25597 + C25598) * C152089 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152436) *
               C101414) *
              C152159 * C1492 +
          (((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 +
             C152474 * C1523 + C23384 * C8105 - C23385 * C8100 -
             C23384 * C8106 + C152376 * C8112) *
                C152436 +
            (C23382 * C1513 - C23383 * C1500 - C23382 * C1514 +
             C152474 * C1524 + C23384 * C8103 - C23385 * C8099 -
             C23384 * C8104 + C152376 * C8111) *
                C152089) *
               C101414 +
           ((C23382 * C8345 - C23383 * C8336 - C23382 * C8346 +
             C152474 * C8354 + C23384 * C9087 - C23385 * C9085 -
             C23384 * C9088 + C152376 * C9091) *
                C152436 +
            (C23382 * C8343 - C23383 * C8335 - C23382 * C8344 +
             C152474 * C8353 + C23384 * C9089 - C23385 * C9086 -
             C23384 * C9090 + C152376 * C9092) *
                C152089) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C2393 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C2394 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C40786 * C152436 + C40798 * C152089) * C101414 +
            (C40797 * C152436 + C24067 * C152089) * C152404) *
               C2394 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C2393 -
           (((C27205 + C27206) * C152089 + C44907 * C152436) * C152404 +
            (C40799 * C152089 + C40787 * C152436) * C101414) *
               C152502) *
              C152141 * C152526 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C2393 -
           (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
            (C41328 * C152089 + C24066 * C152436) * C101414) *
               C2394 +
           ((C24067 * C152436 + (C24065 + C24064) * C152089) * C101414 +
            ((C27206 + C27205) * C152436 +
             (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
              C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
              C23384 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C2393 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C2394 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C152502) *
              C152546 +
          ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
            ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
               C2394 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C2393 -
           (((C44646 + C44647) * C152089 + (C45178 + C45179) * C152436) *
                C152404 +
            (C44641 * C152089 + (C42523 + C42522) * C152436) * C101414) *
               C152502) *
              C152530 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C2393 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
               C2394 +
           (((C42529 + C42528) * C152436 + (C42527 + C42526) * C152089) *
                C101414 +
            ((C23382 * C9659 - C23383 * C9652 - C23382 * C9660 +
              C152474 * C9670 + C23384 * C10405 - C23385 * C10403 -
              C23384 * C10406 + C152376 * C10409) *
                 C152436 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C4321 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152246) *
               C152457 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C4321) *
               C152204) *
              C152118 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C4321) *
               C152457 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C4321 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152246) *
               C152204) *
              C152127 +
          ((((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
             (C40798 * C152436 + C24471 * C152089) * C152404) *
                C4321 -
            (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
             (C41328 * C152089 + C24066 * C152436) * C101414) *
                C152246) *
               C152457 +
           (((C24818 * C152436 + (C24817 + C24816) * C152089) * C101414 +
             ((C26984 + C26983) * C152436 +
              (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
               C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
               C23384 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
             ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
                C4321) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C152242 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152249 +
            (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
             ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
                C4993) *
               C152457 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152249 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C152242 -
            (((C44646 + C44647) * C152089 + (C45178 + C45179) * C152436) *
                 C152404 +
             (C44641 * C152089 + (C42523 + C42522) * C152436) * C101414) *
                C4993) *
               C152204) *
              C3455 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152249 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C152242 -
            (((C27205 + C27206) * C152089 + C44907 * C152436) * C152404 +
             (C40799 * C152089 + C40787 * C152436) * C101414) *
                C4993) *
               C152457 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C152242 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152249 +
            ((C44632 * C152436 + (C26984 + C26983) * C152089) * C101414 +
             ((C44647 + C44646) * C152436 +
              (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
               C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
               C23384 * C10186 + C152376 * C10187) *
                  C152089) *
                 C152404) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C4321 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152246) *
               C152546 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C4321) *
               C152530 +
           ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
               C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
               C152376 * C1522) *
                  C152436 +
              (C23754 + C23755) * C152089) *
                 C101414 +
             ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
                C4321 -
            (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                 C152404 +
             (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
                C152246) *
               C152499) *
              C3455 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C4321) *
               C152546 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C4321 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152246) *
               C152530 +
           (((C43188 * C152436 + (C25914 + C25913) * C152089) * C101414 +
             ((C42527 + C42526) * C152436 +
              (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
               C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
               C23384 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
             ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                 C101414) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C4321 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152246) *
              C152141 * C152552 +
          (((C40786 * C152436 + C40798 * C152089) * C101414 +
            (C40797 * C152436 + C24067 * C152089) * C152404) *
               C152246 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C4321) *
              C152141 * C152545 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C4321 -
           (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
            (C41328 * C152089 + C24066 * C152436) * C101414) *
               C152246) *
              C152141 * C152528 +
          (((C24471 * C152436 + (C24485 + C24484) * C152089) * C101414 +
            ((C24065 + C24064) * C152436 +
             (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
              C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
              C152376 * C2858) *
                 C152089) *
                C152404) *
               C152246 -
           (((C24484 + C24485) * C152089 + C41328 * C152436) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C152436) * C101414) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152554 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152551 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C152538 -
           (((C44242 + C44243) * C152089 + (C44244 + C44245) * C152436) *
                C152404 +
            (C44907 * C152089 + (C44241 + C44240) * C152436) * C101414) *
               C152515) *
              C152141 * C3455 +
          (((C40786 * C152436 + C40798 * C152089) * C101414 +
            (C40797 * C152436 + C24067 * C152089) * C152404) *
               C152551 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152554 -
           (((C27205 + C27206) * C152089 + C44907 * C152436) * C152404 +
            (C40799 * C152089 + C40787 * C152436) * C101414) *
               C152538 +
           ((C44906 * C152436 + (C27206 + C27205) * C152089) * C101414 +
            ((C44243 + C44242) * C152436 +
             (C23382 * C2649 - C23383 * C2635 - C23382 * C2650 +
              C152474 * C2659 + C23384 * C18401 - C23385 * C18400 -
              C23384 * C18402 + C152376 * C18403) *
                 C152089) *
                C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152242 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152249 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C4993) *
              C152141 * C152118 +
          (((C40786 * C152436 + C40798 * C152089) * C101414 +
            (C40797 * C152436 + C24067 * C152089) * C152404) *
               C152249 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152242 -
           (((C27205 + C27206) * C152089 + C44907 * C152436) * C152404 +
            (C40799 * C152089 + C40787 * C152436) * C101414) *
               C4993) *
              C152141 * C152127 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152242 -
           (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
            (C41328 * C152089 + C24066 * C152436) * C101414) *
               C152249 +
           ((C24067 * C152436 + (C24065 + C24064) * C152089) * C101414 +
            ((C27206 + C27205) * C152436 +
             (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
              C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
              C23384 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C4993) *
              C152141 * C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C4321 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152246) *
              C152141 * C152552 +
          (((C40786 * C152436 + C40798 * C152089) * C101414 +
            (C40797 * C152436 + C24067 * C152089) * C152404) *
               C152246 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C4321) *
              C152141 * C152545 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C4321 -
           (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
            (C41328 * C152089 + C24066 * C152436) * C101414) *
               C152246) *
              C152141 * C152528 +
          (((C24471 * C152436 + (C24485 + C24484) * C152089) * C101414 +
            ((C24065 + C24064) * C152436 +
             (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
              C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
              C152376 * C2858) *
                 C152089) *
                C152404) *
               C152246 -
           (((C24484 + C24485) * C152089 + C41328 * C152436) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C152436) * C101414) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C4321 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152246) *
               C152546 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C4321) *
               C152530 +
           ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
               C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
               C152376 * C1522) *
                  C152436 +
              (C23754 + C23755) * C152089) *
                 C101414 +
             ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
                C4321 -
            (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                 C152404 +
             (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
                C152246) *
               C152499) *
              C3455 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C4321) *
               C152546 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C4321 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152246) *
               C152530 +
           (((C43188 * C152436 + (C25914 + C25913) * C152089) * C101414 +
             ((C42527 + C42526) * C152436 +
              (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
               C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
               C23384 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
             ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                 C101414) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[270] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C152457 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C152204) *
              C851 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C152204 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C152457) *
              C852 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152159 * C152457 -
           (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
               C152159 * C152204) *
              C853 +
          (((C24262 * C152436 + (C24276 + C24275) * C152089) * C101414 +
            ((C24817 + C24816) * C152436 +
             (C23382 * C1217 - C23383 * C1207 - C23382 * C1218 +
              C152474 * C1225 + C23384 * C2077 - C23385 * C2076 -
              C23384 * C2078 + C152376 * C2079) *
                 C152089) *
                C152404) *
               C152159 * C152204 -
           (((C24484 + C24485) * C152089 + C41328 * C152436) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C152436) * C101414) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C1851 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C1852 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152159 * C1853 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C152436) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C152436) *
                C101414) *
               C152159 * C152509) *
              C152443 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C1852 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C1851 -
           (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                C101414) *
               C152159 * C1853 +
           (((C25598 + C25597) * C152436 + (C25596 + C25595) * C152089) *
                C101414 +
            ((C42801 + C42800) * C152436 +
             (C23382 * C2239 - C23383 * C2233 - C23382 * C2240 +
              C152474 * C2245 + C23384 * C8867 - C23385 * C8866 -
              C23384 * C8868 + C152376 * C8869) *
                 C152089) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C152458 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152246) *
               C152457 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C152458) *
               C152204) *
              C359 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C152458) *
               C152457 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C152458 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152246) *
               C152204) *
              C360 +
          ((((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
             (C40798 * C152436 + C24471 * C152089) * C152404) *
                C152458 -
            (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
             (C41328 * C152089 + C24066 * C152436) * C101414) *
                C152246) *
               C152457 +
           (((C24818 * C152436 + (C24817 + C24816) * C152089) * C101414 +
             ((C26984 + C26983) * C152436 +
              (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
               C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
               C23384 * C1708 + C152376 * C1720) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
             ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152458 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152246) *
              C1851 +
          ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
            ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
               C152246 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152458) *
              C1852 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152458 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
               C152246) *
              C1853 +
          ((((C43460 + C43461) * C152436 + (C42801 + C42800) * C152089) *
                C101414 +
            ((C23382 * C8341 - C23383 * C8334 - C23382 * C8342 +
              C152474 * C8352 + C23384 * C8347 - C23385 * C8337 -
              C23384 * C8348 + C152376 * C8355) *
                 C152436 +
             (C23382 * C8339 - C23383 * C8333 - C23382 * C8340 +
              C152474 * C8351 + C23384 * C8349 - C23385 * C8338 -
              C23384 * C8350 + C152376 * C8356) *
                 C152089) *
                C152404) *
               C152246 -
           (((C42800 + C42801) * C152089 + (C43461 + C43460) * C152436) *
                C152404 +
            ((C25597 + C25598) * C152089 +
             (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
              C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
              C23382 * C1510 + C152474 * C1522) *
                 C152436) *
                C101414) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C152546 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C152530 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152159 * C152499) *
              C359 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C152530 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C152546 -
           (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                C101414) *
               C152159 * C152499) *
              C360 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152159 * C152546 -
           (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
               C152159 * C152530 +
           ((C23763 * C152436 + (C23761 + C23760) * C152089) * C101414 +
            ((C25914 + C25913) * C152436 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152436 +
            (C23447 + C23448) * C152089) *
               C101414 +
           ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
              C152159 * C152141 * C129 -
          ((C24066 * C152089 + C40796 * C152436) * C152404 +
           ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
               C101414) *
              C152159 * C152141 * C130 +
          ((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
           (C40798 * C152436 + C24471 * C152089) * C152404) *
              C152159 * C152141 * C131 -
          (((C24484 + C24485) * C152089 + C41328 * C152436) * C152404 +
           ((C23454 + C23453) * C152089 + C23458 * C152436) * C101414) *
              C152159 * C152141 * C132 +
          ((C23459 * C152436 + (C23456 + C23455) * C152089) * C101414 +
           ((C24485 + C24484) * C152436 +
            (C23382 * C647 - C23383 * C625 - C23382 * C648 + C152474 * C661 +
             C23384 * C1219 - C23385 * C1208 - C23384 * C1220 +
             C152376 * C1226) *
                C152089) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152547 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152532 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C152502) *
              C152141 * C359 +
          (((C40786 * C152436 + C40798 * C152089) * C101414 +
            (C40797 * C152436 + C24067 * C152089) * C152404) *
               C152532 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152547 -
           (((C27205 + C27206) * C152089 + C44907 * C152436) * C152404 +
            (C40799 * C152089 + C40787 * C152436) * C101414) *
               C152502) *
              C152141 * C360 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152547 -
           (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
            (C41328 * C152089 + C24066 * C152436) * C101414) *
               C152532 +
           ((C24067 * C152436 + (C24065 + C24064) * C152089) * C101414 +
            ((C27206 + C27205) * C152436 +
             (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
              C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
              C23384 * C3180 + C152376 * C3184) *
                 C152089) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C1401 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C1402 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152159 * C152499) *
              C152543 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C1402 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C1401 -
           (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                C101414) *
               C152159 * C152499) *
              C152526 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152159 * C1401 -
           (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
               C152159 * C1402 +
           ((C23763 * C152436 + (C23761 + C23760) * C152089) * C101414 +
            ((C25914 + C25913) * C152436 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152436 +
            (C23447 + C23448) * C152089) *
               C101414 +
           ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
              C152159 * C1489 -
          ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
           ((C23752 + C23753) * C152089 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152436) *
               C101414) *
              C152159 * C1490 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152436 +
            (C23754 + C23755) * C152089) *
               C101414 +
           ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
              C152159 * C1491 -
          (((C42800 + C42801) * C152089 + (C43461 + C43460) * C152436) *
               C152404 +
           ((C25597 + C25598) * C152089 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152436) *
               C101414) *
              C152159 * C1492 +
          (((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 +
             C152474 * C1523 + C23384 * C8105 - C23385 * C8100 -
             C23384 * C8106 + C152376 * C8112) *
                C152436 +
            (C23382 * C1513 - C23383 * C1500 - C23382 * C1514 +
             C152474 * C1524 + C23384 * C8103 - C23385 * C8099 -
             C23384 * C8104 + C152376 * C8111) *
                C152089) *
               C101414 +
           ((C23382 * C8345 - C23383 * C8336 - C23382 * C8346 +
             C152474 * C8354 + C23384 * C9087 - C23385 * C9085 -
             C23384 * C9088 + C152376 * C9091) *
                C152436 +
            (C23382 * C8343 - C23383 * C8335 - C23382 * C8344 +
             C152474 * C8353 + C23384 * C9089 - C23385 * C9086 -
             C23384 * C9090 + C152376 * C9092) *
                C152089) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152547 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152532 +
           (((C40811 + C40810) * C152436 + C40797 * C152089) * C101414 +
            ((C44240 + C44241) * C152436 + C44906 * C152089) * C152404) *
               C152502) *
              C1401 +
          ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
            ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
               C152532 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152547 -
           (((C44646 + C44647) * C152089 + (C45178 + C45179) * C152436) *
                C152404 +
            (C44641 * C152089 + (C42523 + C42522) * C152436) * C101414) *
               C152502) *
              C1402 +
          ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152547 -
           (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                C152404 +
            (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
               C152532 +
           (((C42529 + C42528) * C152436 + (C42527 + C42526) * C152089) *
                C101414 +
            ((C23382 * C9659 - C23383 * C9652 - C23382 * C9660 +
              C152474 * C9670 + C23384 * C10405 - C23385 * C10403 -
              C23384 * C10406 + C152376 * C10409) *
                 C152436 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152089) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[273] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152458 -
           ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
            (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
               C152246) *
              C152141 * C851 +
          (((C40786 * C152436 + C40798 * C152089) * C101414 +
            (C40797 * C152436 + C24067 * C152089) * C152404) *
               C152246 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152458) *
              C152141 * C852 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152458 -
           (((C24064 + C24065) * C152089 + C40799 * C152436) * C152404 +
            (C41328 * C152089 + C24066 * C152436) * C101414) *
               C152246) *
              C152141 * C853 +
          (((C24471 * C152436 + (C24485 + C24484) * C152089) * C101414 +
            ((C24065 + C24064) * C152436 +
             (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
              C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
              C152376 * C2858) *
                 C152089) *
                C152404) *
               C152246 -
           (((C24484 + C24485) * C152089 + C41328 * C152436) * C152404 +
            ((C23454 + C23453) * C152089 + C23458 * C152436) * C101414) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
               C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                  C152436 +
              (C23447 + C23448) * C152089) *
                 C101414 +
             ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
                C152458 -
            ((C40787 * C152089 + (C40810 + C40811) * C152436) * C152404 +
             (C40796 * C152089 + (C40809 + C40808) * C152436) * C101414) *
                C152246) *
               C1401 +
           ((((C41730 + C41731) * C152436 + C41723 * C152089) * C101414 +
             ((C42522 + C42523) * C152436 + C44632 * C152089) * C152404) *
                C152246 -
            ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
             ((C23752 + C23753) * C152089 +
              (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
               C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                  C152436) *
                 C101414) *
                C152458) *
               C1402 +
           ((((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
               C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
               C152376 * C1522) *
                  C152436 +
              (C23754 + C23755) * C152089) *
                 C101414 +
             ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
                C152458 -
            (((C42526 + C42527) * C152089 + (C42528 + C42529) * C152436) *
                 C152404 +
             (C43189 * C152089 + (C42525 + C42524) * C152436) * C101414) *
                C152246) *
               C152499) *
              C152443 +
          ((((C40786 * C152436 + C40798 * C152089) * C101414 +
             (C40797 * C152436 + C24067 * C152089) * C152404) *
                C152246 -
            ((C24066 * C152089 + C40796 * C152436) * C152404 +
             ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                 C101414) *
                C152458) *
               C1401 +
           ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                 C101414 +
             (C41723 * C152436 + C24818 * C152089) * C152404) *
                C152458 -
            (((C26983 + C26984) * C152089 + C44641 * C152436) * C152404 +
             (C41725 * C152089 + C41724 * C152436) * C101414) *
                C152246) *
               C1402 +
           (((C43188 * C152436 + (C25914 + C25913) * C152089) * C101414 +
             ((C42527 + C42526) * C152436 +
              (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
               C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
               C23384 * C9967 + C152376 * C9968) *
                  C152089) *
                 C152404) *
                C152246 -
            (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
             ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                 C101414) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152436 +
            (C23447 + C23448) * C152089) *
               C101414 +
           ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
              C152159 * C152141 * C129 -
          ((C24066 * C152089 + C40796 * C152436) * C152404 +
           ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
               C101414) *
              C152159 * C152141 * C130 +
          ((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
           (C40798 * C152436 + C24471 * C152089) * C152404) *
              C152159 * C152141 * C131 -
          (((C24484 + C24485) * C152089 + C41328 * C152436) * C152404 +
           ((C23454 + C23453) * C152089 + C23458 * C152436) * C101414) *
              C152159 * C152141 * C132 +
          ((C23459 * C152436 + (C23456 + C23455) * C152089) * C101414 +
           ((C24485 + C24484) * C152436 +
            (C23382 * C647 - C23383 * C625 - C23382 * C648 + C152474 * C661 +
             C23384 * C1219 - C23385 * C1208 - C23384 * C1220 +
             C152376 * C1226) *
                C152089) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C152546 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C152530 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152159 * C152499) *
              C359 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C152530 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C152546 -
           (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                C101414) *
               C152159 * C152499) *
              C360 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152159 * C152546 -
           (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
               C152159 * C152530 +
           ((C23763 * C152436 + (C23761 + C23760) * C152089) * C101414 +
            ((C25914 + C25913) * C152436 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152436 +
             (C23447 + C23448) * C152089) *
                C101414 +
            ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
               C152159 * C1401 -
           ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
            ((C23752 + C23753) * C152089 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152436) *
                C101414) *
               C152159 * C1402 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152436 +
             (C23754 + C23755) * C152089) *
                C101414 +
            ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
               C152159 * C152499) *
              C152543 +
          ((((C23753 + C23752) * C152436 + (C23751 + C23750) * C152089) *
                C101414 +
            (C41723 * C152436 + C24818 * C152089) * C152404) *
               C152159 * C1402 -
           ((C24066 * C152089 + C40796 * C152436) * C152404 +
            ((C23450 + C23449) * C152089 + (C23448 + C23447) * C152436) *
                C101414) *
               C152159 * C1401 -
           (((C25913 + C25914) * C152089 + C43189 * C152436) * C152404 +
            ((C23757 + C23756) * C152089 + (C23755 + C23754) * C152436) *
                C101414) *
               C152159 * C152499) *
              C152526 +
          (((C23457 * C152436 + (C23452 + C23451) * C152089) * C101414 +
            (C40798 * C152436 + C24471 * C152089) * C152404) *
               C152159 * C1401 -
           (((C24816 + C24817) * C152089 + C41725 * C152436) * C152404 +
            ((C23759 + C23758) * C152089 + C23762 * C152436) * C101414) *
               C152159 * C1402 +
           ((C23763 * C152436 + (C23761 + C23760) * C152089) * C101414 +
            ((C25914 + C25913) * C152436 +
             (C23382 * C1693 - C23383 * C1677 - C23382 * C1694 +
              C152474 * C1713 + C23384 * C2241 - C23385 * C2234 -
              C23384 * C2242 + C152376 * C2246) *
                 C152089) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152436 +
            (C23447 + C23448) * C152089) *
               C101414 +
           ((C40808 + C40809) * C152436 + C40786 * C152089) * C152404) *
              C152159 * C1489 -
          ((C41724 * C152089 + (C41731 + C41730) * C152436) * C152404 +
           ((C23752 + C23753) * C152089 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152436) *
               C101414) *
              C152159 * C1490 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152436 +
            (C23754 + C23755) * C152089) *
               C101414 +
           ((C42524 + C42525) * C152436 + C43188 * C152089) * C152404) *
              C152159 * C1491 -
          (((C42800 + C42801) * C152089 + (C43461 + C43460) * C152436) *
               C152404 +
           ((C25597 + C25598) * C152089 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152436) *
               C101414) *
              C152159 * C1492 +
          (((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 +
             C152474 * C1523 + C23384 * C8105 - C23385 * C8100 -
             C23384 * C8106 + C152376 * C8112) *
                C152436 +
            (C23382 * C1513 - C23383 * C1500 - C23382 * C1514 +
             C152474 * C1524 + C23384 * C8103 - C23385 * C8099 -
             C23384 * C8104 + C152376 * C8111) *
                C152089) *
               C101414 +
           ((C23382 * C8345 - C23383 * C8336 - C23382 * C8346 +
             C152474 * C8354 + C23384 * C9087 - C23385 * C9085 -
             C23384 * C9088 + C152376 * C9091) *
                C152436 +
            (C23382 * C8343 - C23383 * C8335 - C23382 * C8344 +
             C152474 * C8353 + C23384 * C9089 - C23385 * C9086 -
             C23384 * C9090 + C152376 * C9092) *
                C152089) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[275] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C152200 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C152207 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C152159 * C3799) *
              C152118 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C145768 * C134308) *
               C152159 * C152207 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C152200 -
           ((C42526 + C42527) * C152084 * C134308 + C43189 * C152084 * C152542 +
            (C23755 + C23754) * C152084 * C152541) *
               C152159 * C3799) *
              C152127 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152159 * C152200 -
           ((C26983 + C26984) * C152084 * C134308 + C41725 * C152084 * C152542 +
            C23762 * C152084 * C152541) *
               C152159 * C152207 +
           (C23763 * C152084 * C152541 + (C25914 + C25913) * C152084 * C152542 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C152084 * C134308) *
               C152159 * C3799) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[276] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C152458 -
            (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152246) *
               C152200 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
                C152246 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C152458) *
               C152207 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152084 * C152541 +
             (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
                C152458 -
            ((C144208 + C144209) * C152084 * C134308 +
             (C42528 + C42529) * C152084 * C152542 +
             (C42525 + C42524) * C152084 * C152541) *
                C152246) *
               C3799) *
              C3455 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C145963 * C134308) *
                C152246 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C152458) *
               C152200 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C145768 * C134308) *
                C152458 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152246) *
               C152207 +
           ((C43188 * C152084 * C152541 +
             (C42527 + C42526) * C152084 * C152542 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152084 * C134308) *
                C152246 -
            ((C42526 + C42527) * C152084 * C134308 +
             C43189 * C152084 * C152542 +
             (C23755 + C23754) * C152084 * C152541) *
                C152458) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[277] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C152553 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C152549 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C152159 * C152535 -
           ((C144901 + C144900) * C152084 * C134308 +
            (C43461 + C43460) * C152084 * C152542 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152084 * C152541) *
               C152159 * C152509) *
              C3455 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C145768 * C134308) *
               C152159 * C152549 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C152553 -
           ((C42526 + C42527) * C152084 * C134308 + C43189 * C152084 * C152542 +
            (C23755 + C23754) * C152084 * C152541) *
               C152159 * C152535 +
           ((C25598 + C25597) * C152084 * C152541 +
            (C42801 + C42800) * C152084 * C152542 +
            (C23382 * C8339 - C23383 * C8333 - C23382 * C8340 +
             C152474 * C8351 + C23384 * C8349 - C23385 * C8338 -
             C23384 * C8350 + C152376 * C8356) *
                C152084 * C134308) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C3315 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C152204) *
              C152552 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C145768 * C134308) *
               C152159 * C152204 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C3315) *
              C152545 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152159 * C3315 -
           ((C26983 + C26984) * C152084 * C134308 + C41725 * C152084 * C152542 +
            C23762 * C152084 * C152541) *
               C152159 * C152204) *
              C152528 +
          ((C24262 * C152084 * C152541 + (C24817 + C24816) * C152084 * C152542 +
            (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
             C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
             C23384 * C1708 + C152376 * C1720) *
                C152084 * C134308) *
               C152159 * C152204 -
           ((C24064 + C24065) * C152084 * C134308 + C41328 * C152084 * C152542 +
            C23458 * C152084 * C152541) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C152547 -
            (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152532 +
            (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
             C145471 * C134308) *
                C152502) *
               C3315 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
                C152532 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C152547 -
            ((C146172 + C146173) * C152084 * C134308 +
             (C45178 + C45179) * C152084 * C152542 + C144202 * C152541) *
                C152502) *
               C152204) *
              C3455 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C145963 * C134308) *
                C152532 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C152547 -
            ((C44242 + C44243) * C152084 * C134308 +
             C44907 * C152084 * C152542 + C142953 * C152541) *
                C152502) *
               C3315 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C145768 * C134308) *
                C152547 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152532 +
            (C145768 * C152541 + (C44647 + C44646) * C152084 * C152542 +
             (C23382 * C9665 - C23383 * C9655 - C23382 * C9666 +
              C152474 * C9673 + C23384 * C9667 - C23385 * C9656 -
              C23384 * C9668 + C152376 * C9674) *
                 C152084 * C134308) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[278] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C152458 -
            (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152246) *
               C3315 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
                C152246 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C152458) *
               C152204) *
              C152118 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C145963 * C134308) *
                C152246 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C152458) *
               C3315 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C145768 * C134308) *
                C152458 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152246) *
               C152204) *
              C152127 +
          (((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
             C142954 * C134308) *
                C152458 -
            ((C27205 + C27206) * C152084 * C134308 +
             C40799 * C152084 * C152542 + C24066 * C152084 * C152541) *
                C152246) *
               C3315 +
           ((C24818 * C152084 * C152541 +
             (C26984 + C26983) * C152084 * C152542 +
             (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
              C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
              C23384 * C10186 + C152376 * C10187) *
                 C152084 * C134308) *
                C152246 -
            ((C26983 + C26984) * C152084 * C134308 +
             C41725 * C152084 * C152542 + C23762 * C152084 * C152541) *
                C152458) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[279] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C3315 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C152204) *
              C152552 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C145768 * C134308) *
               C152159 * C152204 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C3315) *
              C152545 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152159 * C3315 -
           ((C26983 + C26984) * C152084 * C134308 + C41725 * C152084 * C152542 +
            C23762 * C152084 * C152541) *
               C152159 * C152204) *
              C152528 +
          ((C24262 * C152084 * C152541 + (C24817 + C24816) * C152084 * C152542 +
            (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
             C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
             C23384 * C1708 + C152376 * C1720) *
                C152084 * C134308) *
               C152159 * C152204 -
           ((C24064 + C24065) * C152084 * C134308 + C41328 * C152084 * C152542 +
            C23458 * C152084 * C152541) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C152553 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C152549 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C152159 * C152535 -
           ((C144901 + C144900) * C152084 * C134308 +
            (C43461 + C43460) * C152084 * C152542 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152084 * C152541) *
               C152159 * C152509) *
              C3455 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C145768 * C134308) *
               C152159 * C152549 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C152553 -
           ((C42526 + C42527) * C152084 * C134308 + C43189 * C152084 * C152542 +
            (C23755 + C23754) * C152084 * C152541) *
               C152159 * C152535 +
           ((C25598 + C25597) * C152084 * C152541 +
            (C42801 + C42800) * C152084 * C152542 +
            (C23382 * C8339 - C23383 * C8333 - C23382 * C8340 +
             C152474 * C8351 + C23384 * C8349 - C23385 * C8338 -
             C23384 * C8350 + C152376 * C8356) *
                C152084 * C134308) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[280] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C4321 -
            (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152246) *
               C152200 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
                C152246 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C4321) *
               C152207 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152084 * C152541 +
             (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
                C4321 -
            ((C144208 + C144209) * C152084 * C134308 +
             (C42528 + C42529) * C152084 * C152542 +
             (C42525 + C42524) * C152084 * C152541) *
                C152246) *
               C3799) *
              C152443 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C145963 * C134308) *
                C152246 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C4321) *
               C152200 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C145768 * C134308) *
                C4321 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152246) *
               C152207 +
           ((C43188 * C152084 * C152541 +
             (C42527 + C42526) * C152084 * C152542 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152084 * C134308) *
                C152246 -
            ((C42526 + C42527) * C152084 * C134308 +
             C43189 * C152084 * C152542 +
             (C23755 + C23754) * C152084 * C152541) *
                C4321) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[281] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152242 -
           (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152249 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            C145471 * C134308) *
               C4993) *
              C152200 +
          (((C41730 + C41731) * C152084 * C152541 +
            (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
               C152249 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152242 -
           ((C146172 + C146173) * C152084 * C134308 +
            (C45178 + C45179) * C152084 * C152542 + C144202 * C152541) *
               C4993) *
              C152207 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C152242 -
           ((C144208 + C144209) * C152084 * C134308 +
            (C42528 + C42529) * C152084 * C152542 +
            (C42525 + C42524) * C152084 * C152541) *
               C152249 +
           (C144203 * C152541 + (C144209 + C144208) * C152084 * C152542 +
            (C23382 * C9663 - C23383 * C9654 - C23382 * C9664 +
             C152474 * C9672 + C23384 * C61702 - C23385 * C61701 -
             C23384 * C61703 + C152376 * C61704) *
                C152084 * C134308) *
               C4993) *
              C3799) *
         C152113) /
        (p * q * std::sqrt(p + q));
    d2ee[282] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C4321 -
           (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152246) *
              C152553 +
          (((C41730 + C41731) * C152084 * C152541 +
            (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
               C152246 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C4321) *
              C152549 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C4321 -
           ((C144208 + C144209) * C152084 * C134308 +
            (C42528 + C42529) * C152084 * C152542 +
            (C42525 + C42524) * C152084 * C152541) *
               C152246) *
              C152535 +
          (((C43460 + C43461) * C152084 * C152541 +
            (C144900 + C144901) * C152084 * C152542 +
            (C23382 * C10405 - C23383 * C10403 - C23382 * C10406 +
             C152474 * C10409 + C23384 * C62160 - C23385 * C62159 -
             C23384 * C62161 + C152376 * C62162) *
                C152084 * C134308) *
               C152246 -
           ((C144901 + C144900) * C152084 * C134308 +
            (C43461 + C43460) * C152084 * C152542 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152084 * C152541) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C4321 -
            (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152246) *
               C3315 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
                C152246 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C4321) *
               C152204) *
              C152543 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C145963 * C134308) *
                C152246 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C4321) *
               C3315 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C145768 * C134308) *
                C4321 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152246) *
               C152204) *
              C152526 +
          (((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
             C142954 * C134308) *
                C4321 -
            ((C27205 + C27206) * C152084 * C134308 +
             C40799 * C152084 * C152542 + C24066 * C152084 * C152541) *
                C152246) *
               C3315 +
           ((C24818 * C152084 * C152541 +
             (C26984 + C26983) * C152084 * C152542 +
             (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
              C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
              C23384 * C10186 + C152376 * C10187) *
                 C152084 * C134308) *
                C152246 -
            ((C26983 + C26984) * C152084 * C134308 +
             C41725 * C152084 * C152542 + C23762 * C152084 * C152541) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152554 -
           (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152551 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            C145471 * C134308) *
               C152538 -
           ((C145476 + C145477) * C152084 * C134308 +
            (C44244 + C44245) * C152084 * C152542 + C145470 * C152541) *
               C152515) *
              C3315 +
          (((C41730 + C41731) * C152084 * C152541 +
            (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
               C152551 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152554 -
           ((C146172 + C146173) * C152084 * C134308 +
            (C45178 + C45179) * C152084 * C152542 + C144202 * C152541) *
               C152538 +
           (C146167 * C152541 + (C146173 + C146172) * C152084 * C152542 +
            (C23382 * C18811 - C23383 * C18809 - C23382 * C18812 +
             C152474 * C18815 + C23384 * C69081 - C23385 * C69080 -
             C23384 * C69082 + C152376 * C69083) *
                C152084 * C134308) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[283] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C152242 -
            (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152249 +
            (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
             C145471 * C134308) *
                C4993) *
               C3315 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
                C152249 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C152242 -
            ((C146172 + C146173) * C152084 * C134308 +
             (C45178 + C45179) * C152084 * C152542 + C144202 * C152541) *
                C4993) *
               C152204) *
              C152443 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C145963 * C134308) *
                C152249 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C152242 -
            ((C44242 + C44243) * C152084 * C134308 +
             C44907 * C152084 * C152542 + C142953 * C152541) *
                C4993) *
               C3315 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C145768 * C134308) *
                C152242 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152249 +
            (C145768 * C152541 + (C44647 + C44646) * C152084 * C152542 +
             (C23382 * C9665 - C23383 * C9655 - C23382 * C9666 +
              C152474 * C9673 + C23384 * C9667 - C23385 * C9656 -
              C23384 * C9668 + C152376 * C9674) *
                 C152084 * C134308) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[284] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C4321 -
            (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152246) *
               C3315 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
                C152246 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C4321) *
               C152204) *
              C152543 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C145963 * C134308) *
                C152246 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C4321) *
               C3315 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C145768 * C134308) *
                C4321 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152246) *
               C152204) *
              C152526 +
          (((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
             C142954 * C134308) *
                C4321 -
            ((C27205 + C27206) * C152084 * C134308 +
             C40799 * C152084 * C152542 + C24066 * C152084 * C152541) *
                C152246) *
               C3315 +
           ((C24818 * C152084 * C152541 +
             (C26984 + C26983) * C152084 * C152542 +
             (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
              C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
              C23384 * C10186 + C152376 * C10187) *
                 C152084 * C134308) *
                C152246 -
            ((C26983 + C26984) * C152084 * C134308 +
             C41725 * C152084 * C152542 + C23762 * C152084 * C152541) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C4321 -
           (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152246) *
              C152553 +
          (((C41730 + C41731) * C152084 * C152541 +
            (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
               C152246 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C4321) *
              C152549 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C4321 -
           ((C144208 + C144209) * C152084 * C134308 +
            (C42528 + C42529) * C152084 * C152542 +
            (C42525 + C42524) * C152084 * C152541) *
               C152246) *
              C152535 +
          (((C43460 + C43461) * C152084 * C152541 +
            (C144900 + C144901) * C152084 * C152542 +
            (C23382 * C10405 - C23383 * C10403 - C23382 * C10406 +
             C152474 * C10409 + C23384 * C62160 - C23385 * C62159 -
             C23384 * C62161 + C152376 * C62162) *
                C152084 * C134308) *
               C152246 -
           ((C144901 + C144900) * C152084 * C134308 +
            (C43461 + C43460) * C152084 * C152542 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152084 * C152541) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[285] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C1851 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C1852 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C152159 * C1853 -
           ((C23384 * C8347 - C23385 * C8337 - C23384 * C8348 +
             C152376 * C8355 + C23382 * C8341 - C23383 * C8334 -
             C23382 * C8342 + C152474 * C8352) *
                C152084 * C134308 +
            (C43461 + C43460) * C152084 * C152542 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152084 * C152541) *
               C152159 * C152509) *
              C152443 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C44632 * C152084 * C134308) *
               C152159 * C1852 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C1851 -
           ((C42526 + C42527) * C152084 * C134308 + C43189 * C152084 * C152542 +
            (C23755 + C23754) * C152084 * C152541) *
               C152159 * C1853 +
           ((C25598 + C25597) * C152084 * C152541 +
            (C42801 + C42800) * C152084 * C152542 +
            (C23382 * C8339 - C23383 * C8333 - C23382 * C8340 +
             C152474 * C8351 + C23384 * C8349 - C23385 * C8338 -
             C23384 * C8350 + C152376 * C8356) *
                C152084 * C134308) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C152457 -
           ((C42523 + C42522) * C152084 * C134308 +
            (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C152204) *
              C851 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C44632 * C152084 * C134308) *
               C152159 * C152204 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C152457) *
              C852 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152159 * C152457 -
           ((C26983 + C26984) * C152084 * C134308 + C41725 * C152084 * C152542 +
            C23762 * C152084 * C152541) *
               C152159 * C152204) *
              C853 +
          ((C24262 * C152084 * C152541 + (C24817 + C24816) * C152084 * C152542 +
            (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
             C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
             C23384 * C1708 + C152376 * C1720) *
                C152084 * C134308) *
               C152159 * C152204 -
           ((C24064 + C24065) * C152084 * C134308 + C41328 * C152084 * C152542 +
            C23458 * C152084 * C152541) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C2393 -
            (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C2394 +
            (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
             C145471 * C134308) *
                C152502) *
               C152457 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 +
             (C45179 + C45178) * C152084 * C134308) *
                C2394 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C2393 -
            ((C23384 * C9663 - C23385 * C9654 - C23384 * C9664 +
              C152376 * C9672 + C23382 * C9661 - C23383 * C9653 -
              C23382 * C9662 + C152474 * C9671) *
                 C152084 * C134308 +
             (C45178 + C45179) * C152084 * C152542 + C144202 * C152541) *
                C152502) *
               C152204) *
              C152443 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C44906 * C152084 * C134308) *
                C2394 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C2393 -
            ((C44242 + C44243) * C152084 * C134308 +
             C44907 * C152084 * C152542 + C142953 * C152541) *
                C152502) *
               C152457 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C145768 * C134308) *
                C2393 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C2394 +
            (C145768 * C152541 + (C44647 + C44646) * C152084 * C152542 +
             (C23382 * C9665 - C23383 * C9655 - C23382 * C9666 +
              C152474 * C9673 + C23384 * C9667 - C23385 * C9656 -
              C23384 * C9668 + C152376 * C9674) *
                 C152084 * C134308) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[286] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152458 -
           ((C44241 + C44240) * C152084 * C134308 +
            (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152246) *
              C1851 +
          (((C41730 + C41731) * C152084 * C152541 +
            (C42522 + C42523) * C152084 * C152542 +
            (C45179 + C45178) * C152084 * C134308) *
               C152246 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152458) *
              C1852 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C152458 -
           ((C144208 + C144209) * C152084 * C134308 +
            (C42528 + C42529) * C152084 * C152542 +
            (C42525 + C42524) * C152084 * C152541) *
               C152246) *
              C1853 +
          (((C43460 + C43461) * C152084 * C152541 +
            (C144900 + C144901) * C152084 * C152542 +
            (C23382 * C10405 - C23383 * C10403 - C23382 * C10406 +
             C152474 * C10409 + C23384 * C62160 - C23385 * C62159 -
             C23384 * C62161 + C152376 * C62162) *
                C152084 * C134308) *
               C152246 -
           ((C144901 + C144900) * C152084 * C134308 +
            (C43461 + C43460) * C152084 * C152542 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152084 * C152541) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C152458 -
            ((C44241 + C44240) * C152084 * C134308 +
             (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152246) *
               C152457 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 +
             (C45179 + C45178) * C152084 * C134308) *
                C152246 -
            ((C42523 + C42522) * C152084 * C134308 +
             (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C152458) *
               C152204) *
              C359 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C44906 * C152084 * C134308) *
                C152246 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C152458) *
               C152457 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C44632 * C152084 * C134308) *
                C152458 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152246) *
               C152204) *
              C360 +
          (((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
             C142954 * C134308) *
                C152458 -
            ((C27205 + C27206) * C152084 * C134308 +
             C40799 * C152084 * C152542 + C24066 * C152084 * C152541) *
                C152246) *
               C152457 +
           ((C24818 * C152084 * C152541 +
             (C26984 + C26983) * C152084 * C152542 +
             (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
              C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
              C23384 * C10186 + C152376 * C10187) *
                 C152084 * C134308) *
                C152246 -
            ((C26983 + C26984) * C152084 * C134308 +
             C41725 * C152084 * C152542 + C23762 * C152084 * C152541) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C3010 -
           (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C3011 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            C145471 * C134308) *
               C3012 -
           ((C145476 + C145477) * C152084 * C134308 +
            (C44244 + C44245) * C152084 * C152542 + C145470 * C152541) *
               C152515) *
              C152457 +
          (((C41730 + C41731) * C152084 * C152541 +
            (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
               C3011 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C3010 -
           ((C146172 + C146173) * C152084 * C134308 +
            (C45178 + C45179) * C152084 * C152542 + C144202 * C152541) *
               C3012 +
           (C146167 * C152541 + (C146173 + C146172) * C152084 * C152542 +
            (C23382 * C18811 - C23383 * C18809 - C23382 * C18812 +
             C152474 * C18815 + C23384 * C69081 - C23385 * C69080 -
             C23384 * C69082 + C152376 * C69083) *
                C152084 * C134308) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
                C23384 * C380 - C23385 * C365 - C23384 * C381 +
                C152376 * C401) *
                   C152084 * C152541 +
               (C40808 + C40809) * C152084 * C152542 +
               (C40811 + C40810) * C152084 * C134308) *
                  C152159 * C152141 * C129 -
              (C40787 * C152084 * C134308 + C40796 * C152084 * C152542 +
               (C23448 + C23447) * C152084 * C152541) *
                  C152159 * C152141 * C130 +
              (C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
               C24067 * C152084 * C134308) *
                  C152159 * C152141 * C131 -
              ((C24064 + C24065) * C152084 * C134308 +
               C41328 * C152084 * C152542 + C23458 * C152084 * C152541) *
                  C152159 * C152141 * C132 +
              (C23459 * C152084 * C152541 +
               (C24485 + C24484) * C152084 * C152542 +
               (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
                C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
                C152376 * C2858) *
                   C152084 * C134308) *
                  C152159 * C152141 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23382 * C144 - C23383 * C136 - C23382 * C145 +
                 C152474 * C160 + C23384 * C380 - C23385 * C365 -
                 C23384 * C381 + C152376 * C401) *
                    C152084 * C152541 +
                (C40808 + C40809) * C152084 * C152542 +
                (C40811 + C40810) * C152084 * C134308) *
                   C152159 * C152546 -
               ((C42523 + C42522) * C152084 * C134308 +
                (C41731 + C41730) * C152084 * C152542 +
                (C23384 * C382 - C23385 * C366 - C23384 * C383 +
                 C152376 * C402 + C23382 * C380 - C23383 * C365 -
                 C23382 * C381 + C152474 * C401) *
                    C152084 * C152541) *
                   C152159 * C152530 +
               ((C23382 * C382 - C23383 * C366 - C23382 * C383 +
                 C152474 * C402 + C23384 * C1509 - C23385 * C1498 -
                 C23384 * C1510 + C152376 * C1522) *
                    C152084 * C152541 +
                (C42524 + C42525) * C152084 * C152542 +
                (C42529 + C42528) * C152084 * C134308) *
                   C152159 * C152499) *
                  C359 +
              (((C23753 + C23752) * C152084 * C152541 +
                C41723 * C152084 * C152542 + C44632 * C152084 * C134308) *
                   C152159 * C152530 -
               (C40787 * C152084 * C134308 + C40796 * C152084 * C152542 +
                (C23448 + C23447) * C152084 * C152541) *
                   C152159 * C152546 -
               ((C42526 + C42527) * C152084 * C134308 +
                C43189 * C152084 * C152542 +
                (C23755 + C23754) * C152084 * C152541) *
                   C152159 * C152499) *
                  C360 +
              ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
                C24067 * C152084 * C134308) *
                   C152159 * C152546 -
               ((C26983 + C26984) * C152084 * C134308 +
                C41725 * C152084 * C152542 + C23762 * C152084 * C152541) *
                   C152159 * C152530 +
               (C23763 * C152084 * C152541 +
                (C25914 + C25913) * C152084 * C152542 +
                (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
                 C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
                 C23384 * C9967 + C152376 * C9968) *
                    C152084 * C134308) *
                   C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152547 -
           ((C44241 + C44240) * C152084 * C134308 +
            (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152532 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            (C44245 + C44244) * C152084 * C134308) *
               C152502) *
              C152141 * C359 +
          ((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
            C44906 * C152084 * C134308) *
               C152532 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152547 -
           ((C44242 + C44243) * C152084 * C134308 + C44907 * C152084 * C152542 +
            C142953 * C152541) *
               C152502) *
              C152141 * C360 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152547 -
           ((C27205 + C27206) * C152084 * C134308 + C40799 * C152084 * C152542 +
            C24066 * C152084 * C152541) *
               C152532 +
           (C142954 * C152541 + (C27206 + C27205) * C152084 * C152542 +
            (C23382 * C2649 - C23383 * C2635 - C23382 * C2650 +
             C152474 * C2659 + C23384 * C18401 - C23385 * C18400 -
             C23384 * C18402 + C152376 * C18403) *
                C152084 * C134308) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C1401 -
           ((C42523 + C42522) * C152084 * C134308 +
            (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C1402 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 +
            (C42529 + C42528) * C152084 * C134308) *
               C152159 * C152499) *
              C152543 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C44632 * C152084 * C134308) *
               C152159 * C1402 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C1401 -
           ((C42526 + C42527) * C152084 * C134308 + C43189 * C152084 * C152542 +
            (C23755 + C23754) * C152084 * C152541) *
               C152159 * C152499) *
              C152526 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152159 * C1401 -
           ((C26983 + C26984) * C152084 * C134308 + C41725 * C152084 * C152542 +
            C23762 * C152084 * C152541) *
               C152159 * C1402 +
           (C23763 * C152084 * C152541 + (C25914 + C25913) * C152084 * C152542 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C152084 * C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152084 * C152541 +
           (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
              C152159 * C1489 -
          ((C42523 + C42522) * C152084 * C134308 +
           (C41731 + C41730) * C152084 * C152542 +
           (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
            C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
               C152084 * C152541) *
              C152159 * C1490 +
          ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
            C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
            C152376 * C1522) *
               C152084 * C152541 +
           (C42524 + C42525) * C152084 * C152542 +
           (C42529 + C42528) * C152084 * C134308) *
              C152159 * C1491 -
          ((C23384 * C8347 - C23385 * C8337 - C23384 * C8348 + C152376 * C8355 +
            C23382 * C8341 - C23383 * C8334 - C23382 * C8342 +
            C152474 * C8352) *
               C152084 * C134308 +
           (C43461 + C43460) * C152084 * C152542 +
           (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 + C152376 * C1523 +
            C23382 * C1509 - C23383 * C1498 - C23382 * C1510 +
            C152474 * C1522) *
               C152084 * C152541) *
              C152159 * C1492 +
          ((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 + C152474 * C1523 +
            C23384 * C8105 - C23385 * C8100 - C23384 * C8106 +
            C152376 * C8112) *
               C152084 * C152541 +
           (C23382 * C8345 - C23383 * C8336 - C23382 * C8346 + C152474 * C8354 +
            C23384 * C9087 - C23385 * C9085 - C23384 * C9088 +
            C152376 * C9091) *
               C152084 * C152542 +
           (C23382 * C8347 - C23383 * C8337 - C23382 * C8348 + C152474 * C8355 +
            C23384 * C60866 - C23385 * C60865 - C23384 * C60867 +
            C152376 * C60868) *
               C152084 * C134308) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152547 -
           ((C44241 + C44240) * C152084 * C134308 +
            (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152532 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            (C44245 + C44244) * C152084 * C134308) *
               C152502) *
              C1401 +
          (((C41730 + C41731) * C152084 * C152541 +
            (C42522 + C42523) * C152084 * C152542 +
            (C45179 + C45178) * C152084 * C134308) *
               C152532 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152547 -
           ((C23384 * C9663 - C23385 * C9654 - C23384 * C9664 +
             C152376 * C9672 + C23382 * C9661 - C23383 * C9653 -
             C23382 * C9662 + C152474 * C9671) *
                C152084 * C134308 +
            (C45178 + C45179) * C152084 * C152542 + C144202 * C152541) *
               C152502) *
              C1402 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C152547 -
           ((C144208 + C144209) * C152084 * C134308 +
            (C42528 + C42529) * C152084 * C152542 +
            (C42525 + C42524) * C152084 * C152541) *
               C152532 +
           (C144203 * C152541 + (C144209 + C144208) * C152084 * C152542 +
            (C23382 * C9663 - C23383 * C9654 - C23382 * C9664 +
             C152474 * C9672 + C23384 * C61702 - C23385 * C61701 -
             C23384 * C61703 + C152376 * C61704) *
                C152084 * C134308) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C2393 -
           ((C44241 + C44240) * C152084 * C134308 +
            (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C2394 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            (C44245 + C44244) * C152084 * C134308) *
               C152502) *
              C152141 * C152543 +
          ((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
            C44906 * C152084 * C134308) *
               C2394 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C2393 -
           ((C44242 + C44243) * C152084 * C134308 + C44907 * C152084 * C152542 +
            C142953 * C152541) *
               C152502) *
              C152141 * C152526 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C2393 -
           ((C27205 + C27206) * C152084 * C134308 + C40799 * C152084 * C152542 +
            C24066 * C152084 * C152541) *
               C2394 +
           (C142954 * C152541 + (C27206 + C27205) * C152084 * C152542 +
            (C23382 * C2649 - C23383 * C2635 - C23382 * C2650 +
             C152474 * C2659 + C23384 * C18401 - C23385 * C18400 -
             C23384 * C18402 + C152376 * C18403) *
                C152084 * C134308) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C2393 -
           ((C44241 + C44240) * C152084 * C134308 +
            (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C2394 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            (C44245 + C44244) * C152084 * C134308) *
               C152502) *
              C152546 +
          (((C41730 + C41731) * C152084 * C152541 +
            (C42522 + C42523) * C152084 * C152542 +
            (C45179 + C45178) * C152084 * C134308) *
               C2394 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C2393 -
           ((C23384 * C9663 - C23385 * C9654 - C23384 * C9664 +
             C152376 * C9672 + C23382 * C9661 - C23383 * C9653 -
             C23382 * C9662 + C152474 * C9671) *
                C152084 * C134308 +
            (C45178 + C45179) * C152084 * C152542 + C144202 * C152541) *
               C152502) *
              C152530 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C2393 -
           ((C144208 + C144209) * C152084 * C134308 +
            (C42528 + C42529) * C152084 * C152542 +
            (C42525 + C42524) * C152084 * C152541) *
               C2394 +
           (C144203 * C152541 + (C144209 + C144208) * C152084 * C152542 +
            (C23382 * C9663 - C23383 * C9654 - C23382 * C9664 +
             C152474 * C9672 + C23384 * C61702 - C23385 * C61701 -
             C23384 * C61703 + C152376 * C61704) *
                C152084 * C134308) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152084 * C152541 +
           (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
              C2624 -
          (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
           (C40809 + C40808) * C152084 * C152541) *
              C2625 +
          (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
           C145471 * C134308) *
              C2626 -
          ((C145476 + C145477) * C152084 * C134308 +
           (C44244 + C44245) * C152084 * C152542 + C145470 * C152541) *
              C2627 +
          (C145471 * C152541 + (C145477 + C145476) * C152084 * C152542 +
           (C23382 * C18075 - C23383 * C18069 - C23382 * C18076 +
            C152474 * C18081 + C23384 * C68335 - C23385 * C68334 -
            C23384 * C68336 + C152376 * C68337) *
               C152084 * C134308) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C152458 -
            ((C44241 + C44240) * C152084 * C134308 +
             (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152246) *
               C1401 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 +
             (C45179 + C45178) * C152084 * C134308) *
                C152246 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C152458) *
               C1402 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152084 * C152541 +
             (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
                C152458 -
            ((C144208 + C144209) * C152084 * C134308 +
             (C42528 + C42529) * C152084 * C152542 +
             (C42525 + C42524) * C152084 * C152541) *
                C152246) *
               C152499) *
              C152443 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C44906 * C152084 * C134308) *
                C152246 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C152458) *
               C1401 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C44632 * C152084 * C134308) *
                C152458 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152246) *
               C1402 +
           ((C43188 * C152084 * C152541 +
             (C42527 + C42526) * C152084 * C152542 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152084 * C134308) *
                C152246 -
            ((C42526 + C42527) * C152084 * C134308 +
             C43189 * C152084 * C152542 +
             (C23755 + C23754) * C152084 * C152541) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152458 -
           ((C44241 + C44240) * C152084 * C134308 +
            (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152246) *
              C152141 * C851 +
          ((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
            C44906 * C152084 * C134308) *
               C152246 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152458) *
              C152141 * C852 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152458 -
           ((C27205 + C27206) * C152084 * C134308 + C40799 * C152084 * C152542 +
            C24066 * C152084 * C152541) *
               C152246) *
              C152141 * C853 +
          ((C24471 * C152084 * C152541 + (C24065 + C24064) * C152084 * C152542 +
            (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
             C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
             C23384 * C3180 + C152376 * C3184) *
                C152084 * C134308) *
               C152246 -
           ((C24064 + C24065) * C152084 * C134308 + C41328 * C152084 * C152542 +
            C23458 * C152084 * C152541) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C3010 -
           (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C3011 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            C145471 * C134308) *
               C3012 -
           ((C145476 + C145477) * C152084 * C134308 +
            (C44244 + C44245) * C152084 * C152542 + C145470 * C152541) *
               C152515) *
              C152141 * C152443 +
          ((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
            C145963 * C134308) *
               C3011 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C3010 -
           ((C44242 + C44243) * C152084 * C134308 + C44907 * C152084 * C152542 +
            C142953 * C152541) *
               C3012 +
           (C145963 * C152541 + (C44243 + C44242) * C152084 * C152542 +
            (C23382 * C18071 - C23383 * C18067 - C23382 * C18072 +
             C152474 * C18079 + C23384 * C18813 - C23385 * C18810 -
             C23384 * C18814 + C152376 * C18816) *
                C152084 * C134308) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 +
            (C40811 + C40810) * C152084 * C134308) *
               C152159 * C152546 -
           ((C42523 + C42522) * C152084 * C134308 +
            (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C152530 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 +
            (C42529 + C42528) * C152084 * C134308) *
               C152159 * C152499) *
              C359 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C44632 * C152084 * C134308) *
               C152159 * C152530 -
           (C40787 * C152084 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C152546 -
           ((C42526 + C42527) * C152084 * C134308 + C43189 * C152084 * C152542 +
            (C23755 + C23754) * C152084 * C152541) *
               C152159 * C152499) *
              C360 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C24067 * C152084 * C134308) *
               C152159 * C152546 -
           ((C26983 + C26984) * C152084 * C134308 + C41725 * C152084 * C152542 +
            C23762 * C152084 * C152541) *
               C152159 * C152530 +
           (C23763 * C152084 * C152541 + (C25914 + C25913) * C152084 * C152542 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C152084 * C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152084 * C152541 +
           (C40808 + C40809) * C152084 * C152542 +
           (C40811 + C40810) * C152084 * C134308) *
              C152159 * C152141 * C129 -
          (C40787 * C152084 * C134308 + C40796 * C152084 * C152542 +
           (C23448 + C23447) * C152084 * C152541) *
              C152159 * C152141 * C130 +
          (C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
           C24067 * C152084 * C134308) *
              C152159 * C152141 * C131 -
          ((C24064 + C24065) * C152084 * C134308 + C41328 * C152084 * C152542 +
           C23458 * C152084 * C152541) *
              C152159 * C152141 * C132 +
          (C23459 * C152084 * C152541 + (C24485 + C24484) * C152084 * C152542 +
           (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
            C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
            C152376 * C2858) *
               C152084 * C134308) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C1401 -
           ((C42523 + C42522) * C152084 * C134308 +
            (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C1402 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 +
            (C42529 + C42528) * C152084 * C134308) *
               C152159 * C152499) *
              C152543 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C44632 * C152084 * C134308) *
               C152159 * C1402 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C1401 -
           ((C42526 + C42527) * C152084 * C134308 + C43189 * C152084 * C152542 +
            (C23755 + C23754) * C152084 * C152541) *
               C152159 * C152499) *
              C152526 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152159 * C1401 -
           ((C26983 + C26984) * C152084 * C134308 + C41725 * C152084 * C152542 +
            C23762 * C152084 * C152541) *
               C152159 * C1402 +
           (C23763 * C152084 * C152541 + (C25914 + C25913) * C152084 * C152542 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C152084 * C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152084 * C152541 +
           (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
              C152159 * C1489 -
          ((C42523 + C42522) * C152084 * C134308 +
           (C41731 + C41730) * C152084 * C152542 +
           (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
            C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
               C152084 * C152541) *
              C152159 * C1490 +
          ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
            C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
            C152376 * C1522) *
               C152084 * C152541 +
           (C42524 + C42525) * C152084 * C152542 +
           (C42529 + C42528) * C152084 * C134308) *
              C152159 * C1491 -
          ((C23384 * C8347 - C23385 * C8337 - C23384 * C8348 + C152376 * C8355 +
            C23382 * C8341 - C23383 * C8334 - C23382 * C8342 +
            C152474 * C8352) *
               C152084 * C134308 +
           (C43461 + C43460) * C152084 * C152542 +
           (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 + C152376 * C1523 +
            C23382 * C1509 - C23383 * C1498 - C23382 * C1510 +
            C152474 * C1522) *
               C152084 * C152541) *
              C152159 * C1492 +
          ((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 + C152474 * C1523 +
            C23384 * C8105 - C23385 * C8100 - C23384 * C8106 +
            C152376 * C8112) *
               C152084 * C152541 +
           (C23382 * C8345 - C23383 * C8336 - C23382 * C8346 + C152474 * C8354 +
            C23384 * C9087 - C23385 * C9085 - C23384 * C9088 +
            C152376 * C9091) *
               C152084 * C152542 +
           (C23382 * C8347 - C23383 * C8337 - C23382 * C8348 + C152474 * C8355 +
            C23384 * C60866 - C23385 * C60865 - C23384 * C60867 +
            C152376 * C60868) *
               C152084 * C134308) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C2393 -
           ((C44241 + C44240) * C152084 * C134308 +
            (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C2394 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            (C44245 + C44244) * C152084 * C134308) *
               C152502) *
              C152141 * C152543 +
          ((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
            C44906 * C152084 * C134308) *
               C2394 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C2393 -
           ((C44242 + C44243) * C152084 * C134308 + C44907 * C152084 * C152542 +
            C142953 * C152541) *
               C152502) *
              C152141 * C152526 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C2393 -
           ((C27205 + C27206) * C152084 * C134308 + C40799 * C152084 * C152542 +
            C24066 * C152084 * C152541) *
               C2394 +
           (C142954 * C152541 + (C27206 + C27205) * C152084 * C152542 +
            (C23382 * C2649 - C23383 * C2635 - C23382 * C2650 +
             C152474 * C2659 + C23384 * C18401 - C23385 * C18400 -
             C23384 * C18402 + C152376 * C18403) *
                C152084 * C134308) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C2393 -
           ((C44241 + C44240) * C152084 * C134308 +
            (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C2394 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            (C44245 + C44244) * C152084 * C134308) *
               C152502) *
              C152546 +
          (((C41730 + C41731) * C152084 * C152541 +
            (C42522 + C42523) * C152084 * C152542 +
            (C45179 + C45178) * C152084 * C134308) *
               C2394 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C2393 -
           ((C23384 * C9663 - C23385 * C9654 - C23384 * C9664 +
             C152376 * C9672 + C23382 * C9661 - C23383 * C9653 -
             C23382 * C9662 + C152474 * C9671) *
                C152084 * C134308 +
            (C45178 + C45179) * C152084 * C152542 + C144202 * C152541) *
               C152502) *
              C152530 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C2393 -
           ((C144208 + C144209) * C152084 * C134308 +
            (C42528 + C42529) * C152084 * C152542 +
            (C42525 + C42524) * C152084 * C152541) *
               C2394 +
           (C144203 * C152541 + (C144209 + C144208) * C152084 * C152542 +
            (C23382 * C9663 - C23383 * C9654 - C23382 * C9664 +
             C152474 * C9672 + C23384 * C61702 - C23385 * C61701 -
             C23384 * C61703 + C152376 * C61704) *
                C152084 * C134308) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[290] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C4321 -
            (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152246) *
               C152457 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
                C152246 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C4321) *
               C152204) *
              C152118 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C145963 * C134308) *
                C152246 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C4321) *
               C152457 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C145768 * C134308) *
                C4321 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152246) *
               C152204) *
              C152127 +
          (((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
             C142954 * C134308) *
                C4321 -
            ((C27205 + C27206) * C152084 * C134308 +
             C40799 * C152084 * C152542 + C24066 * C152084 * C152541) *
                C152246) *
               C152457 +
           ((C24818 * C152084 * C152541 +
             (C26984 + C26983) * C152084 * C152542 +
             (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
              C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
              C23384 * C10186 + C152376 * C10187) *
                 C152084 * C134308) *
                C152246 -
            ((C26983 + C26984) * C152084 * C134308 +
             C41725 * C152084 * C152542 + C23762 * C152084 * C152541) *
                C4321) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[291] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C152242 -
            (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152249 +
            (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
             C145471 * C134308) *
                C4993) *
               C152457 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
                C152249 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C152242 -
            ((C146172 + C146173) * C152084 * C134308 +
             (C45178 + C45179) * C152084 * C152542 + C144202 * C152541) *
                C4993) *
               C152204) *
              C3455 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C145963 * C134308) *
                C152249 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C152242 -
            ((C44242 + C44243) * C152084 * C134308 +
             C44907 * C152084 * C152542 + C142953 * C152541) *
                C4993) *
               C152457 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C145768 * C134308) *
                C152242 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152249 +
            (C145768 * C152541 + (C44647 + C44646) * C152084 * C152542 +
             (C23382 * C9665 - C23383 * C9655 - C23382 * C9666 +
              C152474 * C9673 + C23384 * C9667 - C23385 * C9656 -
              C23384 * C9668 + C152376 * C9674) *
                 C152084 * C134308) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C4321 -
            (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152246) *
               C152546 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
                C152246 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C4321) *
               C152530 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152084 * C152541 +
             (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
                C4321 -
            ((C144208 + C144209) * C152084 * C134308 +
             (C42528 + C42529) * C152084 * C152542 +
             (C42525 + C42524) * C152084 * C152541) *
                C152246) *
               C152499) *
              C3455 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C145963 * C134308) *
                C152246 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C4321) *
               C152546 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C145768 * C134308) *
                C4321 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152246) *
               C152530 +
           ((C43188 * C152084 * C152541 +
             (C42527 + C42526) * C152084 * C152542 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152084 * C134308) *
                C152246 -
            ((C42526 + C42527) * C152084 * C134308 +
             C43189 * C152084 * C152542 +
             (C23755 + C23754) * C152084 * C152541) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C4321 -
           (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152246) *
              C152141 * C152552 +
          ((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
            C145963 * C134308) *
               C152246 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C4321) *
              C152141 * C152545 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C4321 -
           ((C27205 + C27206) * C152084 * C134308 + C40799 * C152084 * C152542 +
            C24066 * C152084 * C152541) *
               C152246) *
              C152141 * C152528 +
          ((C24471 * C152084 * C152541 + (C24065 + C24064) * C152084 * C152542 +
            (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
             C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
             C23384 * C3180 + C152376 * C3184) *
                C152084 * C134308) *
               C152246 -
           ((C24064 + C24065) * C152084 * C134308 + C41328 * C152084 * C152542 +
            C23458 * C152084 * C152541) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152554 -
           (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152551 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            C145471 * C134308) *
               C152538 -
           ((C145476 + C145477) * C152084 * C134308 +
            (C44244 + C44245) * C152084 * C152542 + C145470 * C152541) *
               C152515) *
              C152141 * C3455 +
          ((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
            C145963 * C134308) *
               C152551 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152554 -
           ((C44242 + C44243) * C152084 * C134308 + C44907 * C152084 * C152542 +
            C142953 * C152541) *
               C152538 +
           (C145963 * C152541 + (C44243 + C44242) * C152084 * C152542 +
            (C23382 * C18071 - C23383 * C18067 - C23382 * C18072 +
             C152474 * C18079 + C23384 * C18813 - C23385 * C18810 -
             C23384 * C18814 + C152376 * C18816) *
                C152084 * C134308) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[293] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152242 -
           (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152249 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            C145471 * C134308) *
               C4993) *
              C152141 * C152118 +
          ((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
            C145963 * C134308) *
               C152249 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152242 -
           ((C44242 + C44243) * C152084 * C134308 + C44907 * C152084 * C152542 +
            C142953 * C152541) *
               C4993) *
              C152141 * C152127 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152242 -
           ((C27205 + C27206) * C152084 * C134308 + C40799 * C152084 * C152542 +
            C24066 * C152084 * C152541) *
               C152249 +
           (C142954 * C152541 + (C27206 + C27205) * C152084 * C152542 +
            (C23382 * C2649 - C23383 * C2635 - C23382 * C2650 +
             C152474 * C2659 + C23384 * C18401 - C23385 * C18400 -
             C23384 * C18402 + C152376 * C18403) *
                C152084 * C134308) *
               C4993) *
              C152141 * C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C4321 -
           (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152246) *
              C152141 * C152552 +
          ((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
            C145963 * C134308) *
               C152246 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C4321) *
              C152141 * C152545 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C4321 -
           ((C27205 + C27206) * C152084 * C134308 + C40799 * C152084 * C152542 +
            C24066 * C152084 * C152541) *
               C152246) *
              C152141 * C152528 +
          ((C24471 * C152084 * C152541 + (C24065 + C24064) * C152084 * C152542 +
            (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
             C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
             C23384 * C3180 + C152376 * C3184) *
                C152084 * C134308) *
               C152246 -
           ((C24064 + C24065) * C152084 * C134308 + C41328 * C152084 * C152542 +
            C23458 * C152084 * C152541) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C4321 -
            (C145470 * C134308 + (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152246) *
               C152546 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 + C146167 * C134308) *
                C152246 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C4321) *
               C152530 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152084 * C152541 +
             (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
                C4321 -
            ((C144208 + C144209) * C152084 * C134308 +
             (C42528 + C42529) * C152084 * C152542 +
             (C42525 + C42524) * C152084 * C152541) *
                C152246) *
               C152499) *
              C3455 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C145963 * C134308) *
                C152246 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C4321) *
               C152546 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C145768 * C134308) *
                C4321 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152246) *
               C152530 +
           ((C43188 * C152084 * C152541 +
             (C42527 + C42526) * C152084 * C152542 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152084 * C134308) *
                C152246 -
            ((C42526 + C42527) * C152084 * C134308 +
             C43189 * C152084 * C152542 +
             (C23755 + C23754) * C152084 * C152541) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[295] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C152457 -
           ((C42523 + C42522) * C152084 * C134308 +
            (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C152204) *
              C851 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C44632 * C152084 * C134308) *
               C152159 * C152204 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C152457) *
              C852 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152159 * C152457 -
           ((C26983 + C26984) * C152084 * C134308 + C41725 * C152084 * C152542 +
            C23762 * C152084 * C152541) *
               C152159 * C152204) *
              C853 +
          ((C24262 * C152084 * C152541 + (C24817 + C24816) * C152084 * C152542 +
            (C23382 * C1685 - C23383 * C1673 - C23382 * C1686 +
             C152474 * C1709 + C23384 * C1707 - C23385 * C1684 -
             C23384 * C1708 + C152376 * C1720) *
                C152084 * C134308) *
               C152159 * C152204 -
           ((C24064 + C24065) * C152084 * C134308 + C41328 * C152084 * C152542 +
            C23458 * C152084 * C152541) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C1851 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C1852 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C152159 * C1853 -
           ((C23384 * C8347 - C23385 * C8337 - C23384 * C8348 +
             C152376 * C8355 + C23382 * C8341 - C23383 * C8334 -
             C23382 * C8342 + C152474 * C8352) *
                C152084 * C134308 +
            (C43461 + C43460) * C152084 * C152542 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152084 * C152541) *
               C152159 * C152509) *
              C152443 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C44632 * C152084 * C134308) *
               C152159 * C1852 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C1851 -
           ((C42526 + C42527) * C152084 * C134308 + C43189 * C152084 * C152542 +
            (C23755 + C23754) * C152084 * C152541) *
               C152159 * C1853 +
           ((C25598 + C25597) * C152084 * C152541 +
            (C42801 + C42800) * C152084 * C152542 +
            (C23382 * C8339 - C23383 * C8333 - C23382 * C8340 +
             C152474 * C8351 + C23384 * C8349 - C23385 * C8338 -
             C23384 * C8350 + C152376 * C8356) *
                C152084 * C134308) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[296] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C152458 -
            ((C44241 + C44240) * C152084 * C134308 +
             (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152246) *
               C152457 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 +
             (C45179 + C45178) * C152084 * C134308) *
                C152246 -
            ((C42523 + C42522) * C152084 * C134308 +
             (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C152458) *
               C152204) *
              C359 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C44906 * C152084 * C134308) *
                C152246 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C152458) *
               C152457 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C44632 * C152084 * C134308) *
                C152458 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152246) *
               C152204) *
              C360 +
          (((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
             C142954 * C134308) *
                C152458 -
            ((C27205 + C27206) * C152084 * C134308 +
             C40799 * C152084 * C152542 + C24066 * C152084 * C152541) *
                C152246) *
               C152457 +
           ((C24818 * C152084 * C152541 +
             (C26984 + C26983) * C152084 * C152542 +
             (C23382 * C3177 - C23383 * C3171 - C23382 * C3178 +
              C152474 * C3183 + C23384 * C10185 - C23385 * C10184 -
              C23384 * C10186 + C152376 * C10187) *
                 C152084 * C134308) *
                C152246 -
            ((C26983 + C26984) * C152084 * C134308 +
             C41725 * C152084 * C152542 + C23762 * C152084 * C152541) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152458 -
           ((C44241 + C44240) * C152084 * C134308 +
            (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152246) *
              C1851 +
          (((C41730 + C41731) * C152084 * C152541 +
            (C42522 + C42523) * C152084 * C152542 +
            (C45179 + C45178) * C152084 * C134308) *
               C152246 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152458) *
              C1852 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C152458 -
           ((C144208 + C144209) * C152084 * C134308 +
            (C42528 + C42529) * C152084 * C152542 +
            (C42525 + C42524) * C152084 * C152541) *
               C152246) *
              C1853 +
          (((C43460 + C43461) * C152084 * C152541 +
            (C144900 + C144901) * C152084 * C152542 +
            (C23382 * C10405 - C23383 * C10403 - C23382 * C10406 +
             C152474 * C10409 + C23384 * C62160 - C23385 * C62159 -
             C23384 * C62161 + C152376 * C62162) *
                C152084 * C134308) *
               C152246 -
           ((C144901 + C144900) * C152084 * C134308 +
            (C43461 + C43460) * C152084 * C152542 +
            (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 +
             C152376 * C1523 + C23382 * C1509 - C23383 * C1498 -
             C23382 * C1510 + C152474 * C1522) *
                C152084 * C152541) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 +
            (C40811 + C40810) * C152084 * C134308) *
               C152159 * C152546 -
           ((C42523 + C42522) * C152084 * C134308 +
            (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C152530 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 +
            (C42529 + C42528) * C152084 * C134308) *
               C152159 * C152499) *
              C359 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C44632 * C152084 * C134308) *
               C152159 * C152530 -
           (C40787 * C152084 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C152546 -
           ((C42526 + C42527) * C152084 * C134308 + C43189 * C152084 * C152542 +
            (C23755 + C23754) * C152084 * C152541) *
               C152159 * C152499) *
              C360 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C24067 * C152084 * C134308) *
               C152159 * C152546 -
           ((C26983 + C26984) * C152084 * C134308 + C41725 * C152084 * C152542 +
            C23762 * C152084 * C152541) *
               C152159 * C152530 +
           (C23763 * C152084 * C152541 + (C25914 + C25913) * C152084 * C152542 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C152084 * C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152084 * C152541 +
           (C40808 + C40809) * C152084 * C152542 +
           (C40811 + C40810) * C152084 * C134308) *
              C152159 * C152141 * C129 -
          (C40787 * C152084 * C134308 + C40796 * C152084 * C152542 +
           (C23448 + C23447) * C152084 * C152541) *
              C152159 * C152141 * C130 +
          (C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
           C24067 * C152084 * C134308) *
              C152159 * C152141 * C131 -
          ((C24064 + C24065) * C152084 * C134308 + C41328 * C152084 * C152542 +
           C23458 * C152084 * C152541) *
              C152159 * C152141 * C132 +
          (C23459 * C152084 * C152541 + (C24485 + C24484) * C152084 * C152542 +
           (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
            C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
            C152376 * C2858) *
               C152084 * C134308) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152547 -
           ((C44241 + C44240) * C152084 * C134308 +
            (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152532 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            (C44245 + C44244) * C152084 * C134308) *
               C152502) *
              C152141 * C359 +
          ((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
            C44906 * C152084 * C134308) *
               C152532 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152547 -
           ((C44242 + C44243) * C152084 * C134308 + C44907 * C152084 * C152542 +
            C142953 * C152541) *
               C152502) *
              C152141 * C360 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152547 -
           ((C27205 + C27206) * C152084 * C134308 + C40799 * C152084 * C152542 +
            C24066 * C152084 * C152541) *
               C152532 +
           (C142954 * C152541 + (C27206 + C27205) * C152084 * C152542 +
            (C23382 * C2649 - C23383 * C2635 - C23382 * C2650 +
             C152474 * C2659 + C23384 * C18401 - C23385 * C18400 -
             C23384 * C18402 + C152376 * C18403) *
                C152084 * C134308) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C1401 -
           ((C42523 + C42522) * C152084 * C134308 +
            (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C1402 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 +
            (C42529 + C42528) * C152084 * C134308) *
               C152159 * C152499) *
              C152543 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C44632 * C152084 * C134308) *
               C152159 * C1402 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C1401 -
           ((C42526 + C42527) * C152084 * C134308 + C43189 * C152084 * C152542 +
            (C23755 + C23754) * C152084 * C152541) *
               C152159 * C152499) *
              C152526 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152159 * C1401 -
           ((C26983 + C26984) * C152084 * C134308 + C41725 * C152084 * C152542 +
            C23762 * C152084 * C152541) *
               C152159 * C1402 +
           (C23763 * C152084 * C152541 + (C25914 + C25913) * C152084 * C152542 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C152084 * C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152084 * C152541 +
           (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
              C152159 * C1489 -
          ((C42523 + C42522) * C152084 * C134308 +
           (C41731 + C41730) * C152084 * C152542 +
           (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
            C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
               C152084 * C152541) *
              C152159 * C1490 +
          ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
            C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
            C152376 * C1522) *
               C152084 * C152541 +
           (C42524 + C42525) * C152084 * C152542 +
           (C42529 + C42528) * C152084 * C134308) *
              C152159 * C1491 -
          ((C23384 * C8347 - C23385 * C8337 - C23384 * C8348 + C152376 * C8355 +
            C23382 * C8341 - C23383 * C8334 - C23382 * C8342 +
            C152474 * C8352) *
               C152084 * C134308 +
           (C43461 + C43460) * C152084 * C152542 +
           (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 + C152376 * C1523 +
            C23382 * C1509 - C23383 * C1498 - C23382 * C1510 +
            C152474 * C1522) *
               C152084 * C152541) *
              C152159 * C1492 +
          ((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 + C152474 * C1523 +
            C23384 * C8105 - C23385 * C8100 - C23384 * C8106 +
            C152376 * C8112) *
               C152084 * C152541 +
           (C23382 * C8345 - C23383 * C8336 - C23382 * C8346 + C152474 * C8354 +
            C23384 * C9087 - C23385 * C9085 - C23384 * C9088 +
            C152376 * C9091) *
               C152084 * C152542 +
           (C23382 * C8347 - C23383 * C8337 - C23382 * C8348 + C152474 * C8355 +
            C23384 * C60866 - C23385 * C60865 - C23384 * C60867 +
            C152376 * C60868) *
               C152084 * C134308) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152547 -
           ((C44241 + C44240) * C152084 * C134308 +
            (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152532 +
           (C142955 * C152541 + (C44240 + C44241) * C152084 * C152542 +
            (C44245 + C44244) * C152084 * C134308) *
               C152502) *
              C1401 +
          (((C41730 + C41731) * C152084 * C152541 +
            (C42522 + C42523) * C152084 * C152542 +
            (C45179 + C45178) * C152084 * C134308) *
               C152532 -
           (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152547 -
           ((C23384 * C9663 - C23385 * C9654 - C23384 * C9664 +
             C152376 * C9672 + C23382 * C9661 - C23383 * C9653 -
             C23382 * C9662 + C152474 * C9671) *
                C152084 * C134308 +
            (C45178 + C45179) * C152084 * C152542 + C144202 * C152541) *
               C152502) *
              C1402 +
          (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
               C152547 -
           ((C144208 + C144209) * C152084 * C134308 +
            (C42528 + C42529) * C152084 * C152542 +
            (C42525 + C42524) * C152084 * C152541) *
               C152532 +
           (C144203 * C152541 + (C144209 + C144208) * C152084 * C152542 +
            (C23382 * C9663 - C23383 * C9654 - C23382 * C9664 +
             C152474 * C9672 + C23384 * C61702 - C23385 * C61701 -
             C23384 * C61703 + C152376 * C61704) *
                C152084 * C134308) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152458 -
           ((C44241 + C44240) * C152084 * C134308 +
            (C40810 + C40811) * C152084 * C152542 +
            (C40809 + C40808) * C152084 * C152541) *
               C152246) *
              C152141 * C851 +
          ((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
            C44906 * C152084 * C134308) *
               C152246 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152458) *
              C152141 * C852 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152458 -
           ((C27205 + C27206) * C152084 * C134308 + C40799 * C152084 * C152542 +
            C24066 * C152084 * C152541) *
               C152246) *
              C152141 * C853 +
          ((C24471 * C152084 * C152541 + (C24065 + C24064) * C152084 * C152542 +
            (C23382 * C2637 - C23383 * C2629 - C23382 * C2638 +
             C152474 * C2653 + C23384 * C3179 - C23385 * C3172 -
             C23384 * C3180 + C152376 * C3184) *
                C152084 * C134308) *
               C152246 -
           ((C24064 + C24065) * C152084 * C134308 + C41328 * C152084 * C152542 +
            C23458 * C152084 * C152541) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
              C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                 C152084 * C152541 +
             (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
                C152458 -
            ((C44241 + C44240) * C152084 * C134308 +
             (C40810 + C40811) * C152084 * C152542 +
             (C40809 + C40808) * C152084 * C152541) *
                C152246) *
               C1401 +
           (((C41730 + C41731) * C152084 * C152541 +
             (C42522 + C42523) * C152084 * C152542 +
             (C45179 + C45178) * C152084 * C134308) *
                C152246 -
            (C144202 * C134308 + (C41731 + C41730) * C152084 * C152542 +
             (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
              C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                 C152084 * C152541) *
                C152458) *
               C1402 +
           (((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
              C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
              C152376 * C1522) *
                 C152084 * C152541 +
             (C42524 + C42525) * C152084 * C152542 + C144203 * C134308) *
                C152458 -
            ((C144208 + C144209) * C152084 * C134308 +
             (C42528 + C42529) * C152084 * C152542 +
             (C42525 + C42524) * C152084 * C152541) *
                C152246) *
               C152499) *
              C152443 +
          (((C40786 * C152084 * C152541 + C40797 * C152084 * C152542 +
             C44906 * C152084 * C134308) *
                C152246 -
            (C142953 * C134308 + C40796 * C152084 * C152542 +
             (C23448 + C23447) * C152084 * C152541) *
                C152458) *
               C1401 +
           (((C23753 + C23752) * C152084 * C152541 +
             C41723 * C152084 * C152542 + C44632 * C152084 * C134308) *
                C152458 -
            ((C44646 + C44647) * C152084 * C134308 +
             C44641 * C152084 * C152542 + C41724 * C152084 * C152541) *
                C152246) *
               C1402 +
           ((C43188 * C152084 * C152541 +
             (C42527 + C42526) * C152084 * C152542 +
             (C23382 * C9657 - C23383 * C9651 - C23382 * C9658 +
              C152474 * C9669 + C23384 * C10407 - C23385 * C10404 -
              C23384 * C10408 + C152376 * C10410) *
                 C152084 * C134308) *
                C152246 -
            ((C42526 + C42527) * C152084 * C134308 +
             C43189 * C152084 * C152542 +
             (C23755 + C23754) * C152084 * C152541) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152084 * C152541 +
           (C40808 + C40809) * C152084 * C152542 +
           (C40811 + C40810) * C152084 * C134308) *
              C152159 * C152141 * C129 -
          (C40787 * C152084 * C134308 + C40796 * C152084 * C152542 +
           (C23448 + C23447) * C152084 * C152541) *
              C152159 * C152141 * C130 +
          (C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
           C24067 * C152084 * C134308) *
              C152159 * C152141 * C131 -
          ((C24064 + C24065) * C152084 * C134308 + C41328 * C152084 * C152542 +
           C23458 * C152084 * C152541) *
              C152159 * C152141 * C132 +
          (C23459 * C152084 * C152541 + (C24485 + C24484) * C152084 * C152542 +
           (C23382 * C645 - C23383 * C624 - C23382 * C646 + C152474 * C660 +
            C23384 * C2856 - C23385 * C2855 - C23384 * C2857 +
            C152376 * C2858) *
               C152084 * C134308) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 +
            (C40811 + C40810) * C152084 * C134308) *
               C152159 * C152546 -
           ((C42523 + C42522) * C152084 * C134308 +
            (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C152530 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 +
            (C42529 + C42528) * C152084 * C134308) *
               C152159 * C152499) *
              C359 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C44632 * C152084 * C134308) *
               C152159 * C152530 -
           (C40787 * C152084 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C152546 -
           ((C42526 + C42527) * C152084 * C134308 + C43189 * C152084 * C152542 +
            (C23755 + C23754) * C152084 * C152541) *
               C152159 * C152499) *
              C360 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C24067 * C152084 * C134308) *
               C152159 * C152546 -
           ((C26983 + C26984) * C152084 * C134308 + C41725 * C152084 * C152542 +
            C23762 * C152084 * C152541) *
               C152159 * C152530 +
           (C23763 * C152084 * C152541 + (C25914 + C25913) * C152084 * C152542 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C152084 * C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
             C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
                C152084 * C152541 +
            (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
               C152159 * C1401 -
           ((C42523 + C42522) * C152084 * C134308 +
            (C41731 + C41730) * C152084 * C152542 +
            (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
             C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
                C152084 * C152541) *
               C152159 * C1402 +
           ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
             C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
             C152376 * C1522) *
                C152084 * C152541 +
            (C42524 + C42525) * C152084 * C152542 +
            (C42529 + C42528) * C152084 * C134308) *
               C152159 * C152499) *
              C152543 +
          (((C23753 + C23752) * C152084 * C152541 + C41723 * C152084 * C152542 +
            C44632 * C152084 * C134308) *
               C152159 * C1402 -
           (C142953 * C134308 + C40796 * C152084 * C152542 +
            (C23448 + C23447) * C152084 * C152541) *
               C152159 * C1401 -
           ((C42526 + C42527) * C152084 * C134308 + C43189 * C152084 * C152542 +
            (C23755 + C23754) * C152084 * C152541) *
               C152159 * C152499) *
              C152526 +
          ((C23457 * C152084 * C152541 + C40798 * C152084 * C152542 +
            C142954 * C134308) *
               C152159 * C1401 -
           ((C26983 + C26984) * C152084 * C134308 + C41725 * C152084 * C152542 +
            C23762 * C152084 * C152541) *
               C152159 * C1402 +
           (C23763 * C152084 * C152541 + (C25914 + C25913) * C152084 * C152542 +
            (C23382 * C1705 - C23383 * C1683 - C23382 * C1706 +
             C152474 * C1719 + C23384 * C9966 - C23385 * C9965 -
             C23384 * C9967 + C152376 * C9968) *
                C152084 * C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C23382 * C144 - C23383 * C136 - C23382 * C145 + C152474 * C160 +
            C23384 * C380 - C23385 * C365 - C23384 * C381 + C152376 * C401) *
               C152084 * C152541 +
           (C40808 + C40809) * C152084 * C152542 + C142955 * C134308) *
              C152159 * C1489 -
          ((C42523 + C42522) * C152084 * C134308 +
           (C41731 + C41730) * C152084 * C152542 +
           (C23384 * C382 - C23385 * C366 - C23384 * C383 + C152376 * C402 +
            C23382 * C380 - C23383 * C365 - C23382 * C381 + C152474 * C401) *
               C152084 * C152541) *
              C152159 * C1490 +
          ((C23382 * C382 - C23383 * C366 - C23382 * C383 + C152474 * C402 +
            C23384 * C1509 - C23385 * C1498 - C23384 * C1510 +
            C152376 * C1522) *
               C152084 * C152541 +
           (C42524 + C42525) * C152084 * C152542 +
           (C42529 + C42528) * C152084 * C134308) *
              C152159 * C1491 -
          ((C23384 * C8347 - C23385 * C8337 - C23384 * C8348 + C152376 * C8355 +
            C23382 * C8341 - C23383 * C8334 - C23382 * C8342 +
            C152474 * C8352) *
               C152084 * C134308 +
           (C43461 + C43460) * C152084 * C152542 +
           (C23384 * C1511 - C23385 * C1499 - C23384 * C1512 + C152376 * C1523 +
            C23382 * C1509 - C23383 * C1498 - C23382 * C1510 +
            C152474 * C1522) *
               C152084 * C152541) *
              C152159 * C1492 +
          ((C23382 * C1511 - C23383 * C1499 - C23382 * C1512 + C152474 * C1523 +
            C23384 * C8105 - C23385 * C8100 - C23384 * C8106 +
            C152376 * C8112) *
               C152084 * C152541 +
           (C23382 * C8345 - C23383 * C8336 - C23382 * C8346 + C152474 * C8354 +
            C23384 * C9087 - C23385 * C9085 - C23384 * C9088 +
            C152376 * C9091) *
               C152084 * C152542 +
           (C23382 * C8347 - C23383 * C8337 - C23382 * C8348 + C152474 * C8355 +
            C23384 * C60866 - C23385 * C60865 - C23384 * C60867 +
            C152376 * C60868) *
               C152084 * C134308) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C152200 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152207 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152159 * C3799) *
              C152118 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152207 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152200 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C3799) *
              C152127 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152200 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152207 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C152200 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152207 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152159 * C3799) *
              C152118 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C152207 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152200 -
           ((C103614 + C103613 + C103612) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C3799) *
              C152127 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C152200 -
           ((C102560 + C102559 + C102558) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152207 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C152200 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C152207 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C152159 * C3799) *
              C152118 +
          ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
            C118689 * C117921) *
               C152159 * C152207 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C152200 -
           (C119405 * C117921 + C119404 * C117920 + C119403 * C117919 +
            C462 * C152084 * C117918) *
               C152159 * C3799) *
              C152127 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152159 * C152200 -
           (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
            C460 * C152084 * C117918) *
               C152159 * C152207 +
           (C463 * C152084 * C117918 + C2100 * C152084 * C117919 +
            C15196 * C152084 * C117920 +
            (C134 * C10185 - C135 * C10184 - C134 * C10186 + C152324 * C10187) *
                C152084 * C117921) *
               C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152458 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152200 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152458) *
               C152207 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C152084 * C101414 +
             (C111405 + C111406 + C111407) * C152084 * C152404) *
                C152458 -
            ((C111408 + C111409 + C111410) * C152084 * C152404 +
             (C111407 + C111406 + C111405) * C152084 * C101414) *
                C152246) *
               C3799) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152458) *
               C152200 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152458 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152207 +
           (((C8891 + C8890 + C8889) * C152084 * C101414 +
             (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
              C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
              C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C8889 + C8890 + C8891) * C152084 * C152404 +
             (C6689 + C6688 + C6687) * C152084 * C101414) *
                C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152458 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C152200 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152458) *
               C152207 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C51195 +
              C462 * C51196 + C463 * C51197) *
                 C101414 +
             (C103122 + C103123 + C103124) * C152404) *
                C152458 -
            ((C103125 + C103126 + C103127) * C152404 +
             (C103124 + C103123 + C103122) * C101414) *
                C152246) *
               C3799) *
              C3455 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152458) *
               C152200 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152458 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152207 +
           (((C103612 + C103613 + C103614) * C101414 +
             (C15195 * C51195 + C15196 * C51196 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C103614 + C103613 + C103612) * C152404 +
             (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C152458 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152246) *
               C152200 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152246 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C152458) *
               C152207 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152084 * C117918 +
             C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
                C152458 -
            (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
             C119068 * C117918) *
                C152246) *
               C3799) *
              C3455 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152246 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C152458) *
               C152200 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C152458 -
            (C120127 * C117921 + C118689 * C117920 + C118688 * C117919 +
             C118687 * C117918) *
                C152246) *
               C152207 +
           ((C119403 * C117918 + C119404 * C117919 + C119405 * C117920 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152084 * C117921) *
                C152246 -
            (C119405 * C117921 + C119404 * C117920 + C119403 * C117919 +
             C462 * C152084 * C117918) *
                C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C152159 * C3315 -
               ((C102554 + C102553 + C102552) * C152404 +
                (C460 * C51197 + C461 * C51196 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C51195) *
                    C101414) *
                   C152159 * C152204) *
                  C152552 +
              (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
                (C102555 + C102556 + C102557) * C152404) *
                   C152159 * C152204 -
               ((C101861 + C101860 + C101859) * C152404 +
                (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                   C152159 * C3315) *
                  C152545 +
              (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
                (C101865 + C101866 + C101867) * C152404) *
                   C152159 * C3315 -
               ((C102560 + C102559 + C102558) * C152404 +
                (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                   C152159 * C152204) *
                  C152528 +
              (((C459 * C51195 + C465 * C51196 + C866 * C51197) * C101414 +
                (C1254 * C51195 + C1255 * C51196 +
                 (C134 * C1219 - C135 * C1208 - C134 * C1220 +
                  C152324 * C1226) *
                     C51197) *
                    C152404) *
                   C152159 * C152204 -
               ((C102261 + C102260 + C102259) * C152404 +
                (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
                   C152159 * C3315) *
                  C152503) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C152159 * C152553 -
               ((C102554 + C102553 + C102552) * C152404 +
                (C460 * C51197 + C461 * C51196 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C51195) *
                    C101414) *
                   C152159 * C152549 +
               (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C51195 +
                 C462 * C51196 + C463 * C51197) *
                    C101414 +
                (C103122 + C103123 + C103124) * C152404) *
                   C152159 * C152535 -
               ((C103811 + C103810 + C103809) * C152404 +
                (C1881 * C51197 + C1882 * C51196 +
                 (C134 * C1509 - C135 * C1498 - C134 * C1510 +
                  C152324 * C1522) *
                     C51195) *
                    C101414) *
                   C152159 * C152509) *
                  C3455 +
              (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
                (C102555 + C102556 + C102557) * C152404) *
                   C152159 * C152549 -
               ((C101861 + C101860 + C101859) * C152404 +
                (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                   C152159 * C152553 -
               ((C103614 + C103613 + C103612) * C152404 +
                (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                   C152159 * C152535 +
               ((C1882 * C51195 + C1881 * C51196 + C1880 * C51197) * C101414 +
                (C17003 * C51195 + C33866 * C51196 +
                 (C134 * C2241 - C135 * C2234 - C134 * C2242 +
                  C152324 * C2246) *
                     C51197) *
                    C152404) *
                   C152159 * C152509) *
                  C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152547 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152532 +
            ((C101858 + C101857 + C101856) * C101414 +
             (C104370 + C104371 + C104372) * C152404) *
                C152502) *
               C3315 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152532 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152547 -
            ((C105060 + C105061 + C105062) * C152404 +
             (C103121 + C103120 + C103119) * C101414) *
                C152502) *
               C152204) *
              C3455 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152532 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152547 -
            ((C104863 + C104864 + C104865) * C152404 +
             (C101864 + C101863 + C101862) * C101414) *
                C152502) *
               C3315 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152547 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152532 +
            ((C104668 + C104667 + C104666) * C101414 +
             (C16189 * C51195 + C16190 * C51196 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C51197) *
                 C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C3315 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152204) *
              C152552 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152204 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C3315) *
              C152545 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C3315 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152204) *
              C152528 +
          (((C7212 + C7211 + C7210) * C152084 * C101414 +
            (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
             C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
             C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                C152084 * C152404) *
               C152159 * C152204 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C152553 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152549 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152159 * C152535 -
           ((C112109 + C112108 + C112107) * C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C152159 * C152509) *
              C3455 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152549 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152553 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152535 +
           ((C8576 + C8575 + C8574) * C152084 * C101414 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152084 * C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152547 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152532 +
            ((C110090 + C110089 + C110088) * C152084 * C101414 +
             (C112704 + C112705 + C112706) * C152084 * C152404) *
                C152502) *
               C3315 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152532 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152547 -
            ((C113406 + C113407 + C113408) * C152084 * C152404 +
             (C111404 + C111403 + C111402) * C152084 * C101414) *
                C152502) *
               C152204) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152532 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152547 -
            ((C10207 + C10208 + C10209) * C152084 * C152404 +
             (C6991 + C6990 + C6989) * C152084 * C101414) *
                C152502) *
               C3315 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152547 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152532 +
            ((C9990 + C9989 + C9988) * C152084 * C101414 +
             (C6303 * C3175 - C6304 * C3170 - C6303 * C3176 + C6298 * C3182 +
              C6305 * C9657 - C6306 * C9651 - C6305 * C9658 + C6299 * C9669 +
              C6307 * C10407 - C6308 * C10404 - C6307 * C10408 +
              C6300 * C10410) *
                 C152084 * C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C3315 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C152204) *
              C152552 +
          ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
            C118689 * C117921) *
               C152159 * C152204 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C3315) *
              C152545 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152159 * C3315 -
           (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
            C460 * C152084 * C117918) *
               C152159 * C152204) *
              C152528 +
          ((C459 * C152084 * C117918 + C1254 * C152084 * C117919 +
            C2878 * C152084 * C117920 +
            (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                C152084 * C117921) *
               C152159 * C152204 -
           (C118489 * C117921 + C118488 * C117920 + C118487 * C117919 +
            C207 * C152084 * C117918) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C152553 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C152549 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C152159 * C152535 -
           (C119545 * C117921 + C119537 * C117920 + C119536 * C117919 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152084 * C117918) *
               C152159 * C152509) *
              C3455 +
          ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
            C118689 * C117921) *
               C152159 * C152549 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C152553 -
           (C119405 * C117921 + C119404 * C117920 + C119403 * C117919 +
            C462 * C152084 * C117918) *
               C152159 * C152535 +
           (C1882 * C152084 * C117918 + C17003 * C152084 * C117919 +
            C17002 * C152084 * C117920 +
            (C134 * C10407 - C135 * C10404 - C134 * C10408 + C152324 * C10410) *
                C152084 * C117921) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C152547 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152532 +
            (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
             C119924 * C117921) *
                C152502) *
               C3315 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152532 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C152547 -
            (C120396 * C117921 + C119067 * C117920 + C118686 * C117919 +
             C118685 * C117918) *
                C152502) *
               C152204) *
              C3455 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152532 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C152547 -
            (C120258 * C117921 + C118222 * C117920 + C118221 * C117919 +
             C118220 * C117918) *
                C152502) *
               C3315 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C152547 -
            (C120127 * C117921 + C118689 * C117920 + C118688 * C117919 +
             C118687 * C117918) *
                C152532 +
            (C118688 * C117918 + C118689 * C117919 + C120127 * C117920 +
             (C134 * C18813 - C135 * C18810 - C134 * C18814 +
              C152324 * C18816) *
                 C152084 * C117921) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152458 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C3315 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152458) *
               C152204) *
              C152118 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152458) *
               C3315 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152458 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152204) *
              C152127 +
          ((((C6387 + C6386 + C6385) * C152084 * C101414 +
             (C6992 + C6993 + C6994) * C152084 * C152404) *
                C152458 -
            ((C6995 + C6996 + C6997) * C152084 * C152404 +
             (C6994 + C6993 + C6992) * C152084 * C101414) *
                C152246) *
               C3315 +
           (((C7759 + C7758 + C7757) * C152084 * C101414 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C7757 + C7758 + C7759) * C152084 * C152404 +
             (C6692 + C6691 + C6690) * C152084 * C101414) *
                C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152458 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C3315 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152458) *
               C152204) *
              C152118 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152458) *
               C3315 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152458 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152204) *
              C152127 +
          ((((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
             (C101865 + C101866 + C101867) * C152404) *
                C152458 -
            ((C101868 + C101869 + C101870) * C152404 +
             (C101867 + C101866 + C101865) * C101414) *
                C152246) *
               C3315 +
           (((C102558 + C102559 + C102560) * C101414 +
             (C2879 * C51195 + C2878 * C51196 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C102560 + C102559 + C102558) * C152404 +
             (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C152458 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152246) *
               C3315 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152246 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C152458) *
               C152204) *
              C152118 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152246 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C152458) *
               C3315 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C152458 -
            (C120127 * C117921 + C118689 * C117920 + C118688 * C117919 +
             C118687 * C117918) *
                C152246) *
               C152204) *
              C152127 +
          (((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
             C118225 * C117921) *
                C152458 -
            (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
             C118223 * C117918) *
                C152246) *
               C3315 +
           ((C118690 * C117918 + C118691 * C117919 + C118692 * C117920 +
             (C134 * C18401 - C135 * C18400 - C134 * C18402 +
              C152324 * C18403) *
                 C152084 * C117921) *
                C152246 -
            (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
             C460 * C152084 * C117918) *
                C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C152553 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152549 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152159 * C152535 -
           ((C103811 + C103810 + C103809) * C152404 +
            (C1881 * C51197 + C1882 * C51196 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C51195) *
                C101414) *
               C152159 * C152509) *
              C3455 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C152549 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152553 -
           ((C103614 + C103613 + C103612) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152535 +
           ((C1882 * C51195 + C1881 * C51196 + C1880 * C51197) * C101414 +
            (C17003 * C51195 + C33866 * C51196 +
             (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                 C51197) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C3315 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152204) *
              C152552 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C152204 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C3315) *
              C152545 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C3315 -
           ((C102560 + C102559 + C102558) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152204) *
              C152528 +
          (((C459 * C51195 + C465 * C51196 + C866 * C51197) * C101414 +
            (C1254 * C51195 + C1255 * C51196 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C51197) *
                C152404) *
               C152159 * C152204 -
           ((C102261 + C102260 + C102259) * C152404 +
            (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C3315 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152204) *
              C152552 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152204 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C3315) *
              C152545 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C3315 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152204) *
              C152528 +
          (((C7212 + C7211 + C7210) * C152084 * C101414 +
            (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
             C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
             C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                C152084 * C152404) *
               C152159 * C152204 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C152553 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152549 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152159 * C152535 -
           ((C112109 + C112108 + C112107) * C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C152159 * C152509) *
              C3455 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152549 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152553 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152535 +
           ((C8576 + C8575 + C8574) * C152084 * C101414 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152084 * C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C3315 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C152204) *
              C152552 +
          ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
            C118689 * C117921) *
               C152159 * C152204 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C3315) *
              C152545 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152159 * C3315 -
           (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
            C460 * C152084 * C117918) *
               C152159 * C152204) *
              C152528 +
          ((C459 * C152084 * C117918 + C1254 * C152084 * C117919 +
            C2878 * C152084 * C117920 +
            (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                C152084 * C117921) *
               C152159 * C152204 -
           (C118489 * C117921 + C118488 * C117920 + C118487 * C117919 +
            C207 * C152084 * C117918) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C152553 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C152549 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C152159 * C152535 -
           (C119545 * C117921 + C119537 * C117920 + C119536 * C117919 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152084 * C117918) *
               C152159 * C152509) *
              C3455 +
          ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
            C118689 * C117921) *
               C152159 * C152549 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C152553 -
           (C119405 * C117921 + C119404 * C117920 + C119403 * C117919 +
            C462 * C152084 * C117918) *
               C152159 * C152535 +
           (C1882 * C152084 * C117918 + C17003 * C152084 * C117919 +
            C17002 * C152084 * C117920 +
            (C134 * C10407 - C135 * C10404 - C134 * C10408 + C152324 * C10410) *
                C152084 * C117921) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C4321 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152200 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C4321) *
               C152207 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C152084 * C101414 +
             (C111405 + C111406 + C111407) * C152084 * C152404) *
                C4321 -
            ((C111408 + C111409 + C111410) * C152084 * C152404 +
             (C111407 + C111406 + C111405) * C152084 * C101414) *
                C152246) *
               C3799) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C4321) *
               C152200 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C4321 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152207 +
           (((C8891 + C8890 + C8889) * C152084 * C101414 +
             (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
              C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
              C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C8889 + C8890 + C8891) * C152084 * C152404 +
             (C6689 + C6688 + C6687) * C152084 * C101414) *
                C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C4321 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C152200 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C4321) *
               C152207 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C51195 +
              C462 * C51196 + C463 * C51197) *
                 C101414 +
             (C103122 + C103123 + C103124) * C152404) *
                C4321 -
            ((C103125 + C103126 + C103127) * C152404 +
             (C103124 + C103123 + C103122) * C101414) *
                C152246) *
               C3799) *
              C152443 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C4321) *
               C152200 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C4321 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152207 +
           (((C103612 + C103613 + C103614) * C101414 +
             (C15195 * C51195 + C15196 * C51196 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C103614 + C103613 + C103612) * C152404 +
             (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C4321 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152246) *
               C152200 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152246 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C4321) *
               C152207 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152084 * C117918 +
             C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
                C4321 -
            (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
             C119068 * C117918) *
                C152246) *
               C3799) *
              C152443 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152246 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C4321) *
               C152200 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C4321 -
            (C120127 * C117921 + C118689 * C117920 + C118688 * C117919 +
             C118687 * C117918) *
                C152246) *
               C152207 +
           ((C119403 * C117918 + C119404 * C117919 + C119405 * C117920 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152084 * C117921) *
                C152246 -
            (C119405 * C117921 + C119404 * C117920 + C119403 * C117919 +
             C462 * C152084 * C117918) *
                C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152242 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152249 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C112704 + C112705 + C112706) * C152084 * C152404) *
               C4993) *
              C152200 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152249 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152242 -
           ((C113406 + C113407 + C113408) * C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C4993) *
              C152207 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152242 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152249 +
           ((C111410 + C111409 + C111408) * C152084 * C101414 +
            (C6303 * C9659 - C6304 * C9652 - C6303 * C9660 + C6298 * C9670 +
             C6305 * C10405 - C6306 * C10403 - C6305 * C10406 + C6299 * C10409 +
             C6307 * C62160 - C6308 * C62159 - C6307 * C62161 +
             C6300 * C62162) *
                C152084 * C152404) *
               C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152242 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152249 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C104370 + C104371 + C104372) * C152404) *
               C4993) *
              C152200 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152249 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152242 -
           ((C105060 + C105061 + C105062) * C152404 +
            (C103121 + C103120 + C103119) * C101414) *
               C4993) *
              C152207 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152242 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C152249 +
           ((C103127 + C103126 + C103125) * C101414 +
            (C16789 * C51195 + C16788 * C51196 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C51197) *
                C152404) *
               C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152242 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152249 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C119924 * C117921) *
               C4993) *
              C152200 +
          ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
            C119067 * C117921) *
               C152249 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152242 -
           (C120396 * C117921 + C119067 * C117920 + C118686 * C117919 +
            C118685 * C117918) *
               C4993) *
              C152207 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C152242 -
           (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
            C119068 * C117918) *
               C152249 +
           (C119069 * C117918 + C119070 * C117919 + C119078 * C117920 +
            (C134 * C69081 - C135 * C69080 - C134 * C69082 + C152324 * C69083) *
                C152084 * C117921) *
               C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                      C51195 +
                  C205 * C51196 + C206 * C51197) *
                     C101414 +
                 (C101853 + C101854 + C101855) * C152404) *
                    C4321 -
                ((C101856 + C101857 + C101858) * C152404 +
                 (C101855 + C101854 + C101853) * C101414) *
                    C152246) *
                   C3315 +
               (((C102552 + C102553 + C102554) * C101414 +
                 (C103119 + C103120 + C103121) * C152404) *
                    C152246 -
                ((C102554 + C102553 + C102552) * C152404 +
                 (C460 * C51197 + C461 * C51196 +
                  (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                      C51195) *
                     C101414) *
                    C4321) *
                   C152204) *
                  C152543 +
              ((((C101859 + C101860 + C101861) * C101414 +
                 (C101862 + C101863 + C101864) * C152404) *
                    C152246 -
                ((C101861 + C101860 + C101859) * C152404 +
                 (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                    C4321) *
                   C3315 +
               (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
                 (C102555 + C102556 + C102557) * C152404) *
                    C4321 -
                ((C104666 + C104667 + C104668) * C152404 +
                 (C102557 + C102556 + C102555) * C101414) *
                    C152246) *
                   C152204) *
                  C152526 +
              ((((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
                 (C101865 + C101866 + C101867) * C152404) *
                    C4321 -
                ((C101868 + C101869 + C101870) * C152404 +
                 (C101867 + C101866 + C101865) * C101414) *
                    C152246) *
                   C3315 +
               (((C102558 + C102559 + C102560) * C101414 +
                 (C2879 * C51195 + C2878 * C51196 +
                  (C134 * C2856 - C135 * C2855 - C134 * C2857 +
                   C152324 * C2858) *
                      C51197) *
                     C152404) *
                    C152246 -
                ((C102560 + C102559 + C102558) * C152404 +
                 (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                    C4321) *
                   C152204) *
                  C152493) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C4321 -
               ((C101856 + C101857 + C101858) * C152404 +
                (C101855 + C101854 + C101853) * C101414) *
                   C152246) *
                  C152553 +
              (((C102552 + C102553 + C102554) * C101414 +
                (C103119 + C103120 + C103121) * C152404) *
                   C152246 -
               ((C102554 + C102553 + C102552) * C152404 +
                (C460 * C51197 + C461 * C51196 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C51195) *
                    C101414) *
                   C4321) *
                  C152549 +
              ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C51195 +
                 C462 * C51196 + C463 * C51197) *
                    C101414 +
                (C103122 + C103123 + C103124) * C152404) *
                   C4321 -
               ((C103125 + C103126 + C103127) * C152404 +
                (C103124 + C103123 + C103122) * C101414) *
                   C152246) *
                  C152535 +
              (((C103809 + C103810 + C103811) * C101414 +
                (C17507 * C51195 + C17002 * C51196 +
                 (C134 * C9966 - C135 * C9965 - C134 * C9967 +
                  C152324 * C9968) *
                     C51197) *
                    C152404) *
                   C152246 -
               ((C103811 + C103810 + C103809) * C152404 +
                (C1881 * C51197 + C1882 * C51196 +
                 (C134 * C1509 - C135 * C1498 - C134 * C1510 +
                  C152324 * C1522) *
                     C51195) *
                    C101414) *
                   C4321) *
                  C152509) *
             C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152554 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152551 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C104370 + C104371 + C104372) * C152404) *
               C152538 -
           ((C104373 + C104374 + C104375) * C152404 +
            (C104372 + C104371 + C104370) * C101414) *
               C152515) *
              C3315 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152551 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152554 -
           ((C105060 + C105061 + C105062) * C152404 +
            (C103121 + C103120 + C103119) * C101414) *
               C152538 +
           ((C105062 + C105061 + C105060) * C101414 +
            (C18826 * C51195 + C18414 * C51196 +
             (C134 * C18401 - C135 * C18400 - C134 * C18402 +
              C152324 * C18403) *
                 C51197) *
                C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C4321 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C3315 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C4321) *
               C152204) *
              C152543 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C4321) *
               C3315 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C4321 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152204) *
              C152526 +
          ((((C6387 + C6386 + C6385) * C152084 * C101414 +
             (C6992 + C6993 + C6994) * C152084 * C152404) *
                C4321 -
            ((C6995 + C6996 + C6997) * C152084 * C152404 +
             (C6994 + C6993 + C6992) * C152084 * C101414) *
                C152246) *
               C3315 +
           (((C7759 + C7758 + C7757) * C152084 * C101414 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C7757 + C7758 + C7759) * C152084 * C152404 +
             (C6692 + C6691 + C6690) * C152084 * C101414) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C4321 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C152553 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152246 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C4321) *
              C152549 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C4321 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152246) *
              C152535 +
          (((C112107 + C112108 + C112109) * C152084 * C101414 +
            (C6303 * C8341 - C6304 * C8334 - C6303 * C8342 + C6298 * C8352 +
             C6305 * C8347 - C6306 * C8337 - C6305 * C8348 + C6299 * C8355 +
             C6307 * C60866 - C6308 * C60865 - C6307 * C60867 +
             C6300 * C60868) *
                C152084 * C152404) *
               C152246 -
           ((C112109 + C112108 + C112107) * C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152554 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152551 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C112704 + C112705 + C112706) * C152084 * C152404) *
               C152538 -
           ((C112707 + C112708 + C112709) * C152084 * C152404 +
            (C112706 + C112705 + C112704) * C152084 * C101414) *
               C152515) *
              C3315 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152551 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152554 -
           ((C113406 + C113407 + C113408) * C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C152538 +
           ((C113408 + C113407 + C113406) * C152084 * C101414 +
            (C6303 * C9661 - C6304 * C9653 - C6303 * C9662 + C6298 * C9671 +
             C6305 * C9663 - C6306 * C9654 - C6305 * C9664 + C6299 * C9672 +
             C6307 * C61702 - C6308 * C61701 - C6307 * C61703 +
             C6300 * C61704) *
                C152084 * C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C4321 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152246) *
               C3315 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152246 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C4321) *
               C152204) *
              C152543 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152246 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C4321) *
               C3315 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C4321 -
            (C120127 * C117921 + C118689 * C117920 + C118688 * C117919 +
             C118687 * C117918) *
                C152246) *
               C152204) *
              C152526 +
          (((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
             C118225 * C117921) *
                C4321 -
            (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
             C118223 * C117918) *
                C152246) *
               C3315 +
           ((C118690 * C117918 + C118691 * C117919 + C118692 * C117920 +
             (C134 * C18401 - C135 * C18400 - C134 * C18402 +
              C152324 * C18403) *
                 C152084 * C117921) *
                C152246 -
            (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
             C460 * C152084 * C117918) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C4321 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152246) *
              C152553 +
          ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
            C119067 * C117921) *
               C152246 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C4321) *
              C152549 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C4321 -
           (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
            C119068 * C117918) *
               C152246) *
              C152535 +
          ((C119536 * C117918 + C119537 * C117919 + C119545 * C117920 +
            (C134 * C61702 - C135 * C61701 - C134 * C61703 + C152324 * C61704) *
                C152084 * C117921) *
               C152246 -
           (C119545 * C117921 + C119537 * C117920 + C119536 * C117919 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152084 * C117918) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152554 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152551 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C119924 * C117921) *
               C152538 -
           (C119932 * C117921 + C119924 * C117920 + C118218 * C117919 +
            C118217 * C117918) *
               C152515) *
              C3315 +
          ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
            C119067 * C117921) *
               C152551 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152554 -
           (C120396 * C117921 + C119067 * C117920 + C118686 * C117919 +
            C118685 * C117918) *
               C152538 +
           (C118686 * C117918 + C119067 * C117919 + C120396 * C117920 +
            (C134 * C68335 - C135 * C68334 - C134 * C68336 + C152324 * C68337) *
                C152084 * C117921) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152242 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152249 +
            ((C110090 + C110089 + C110088) * C152084 * C101414 +
             (C112704 + C112705 + C112706) * C152084 * C152404) *
                C4993) *
               C3315 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152249 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152242 -
            ((C113406 + C113407 + C113408) * C152084 * C152404 +
             (C111404 + C111403 + C111402) * C152084 * C101414) *
                C4993) *
               C152204) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152249 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152242 -
            ((C10207 + C10208 + C10209) * C152084 * C152404 +
             (C6991 + C6990 + C6989) * C152084 * C101414) *
                C4993) *
               C3315 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152242 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152249 +
            ((C9990 + C9989 + C9988) * C152084 * C101414 +
             (C6303 * C3175 - C6304 * C3170 - C6303 * C3176 + C6298 * C3182 +
              C6305 * C9657 - C6306 * C9651 - C6305 * C9658 + C6299 * C9669 +
              C6307 * C10407 - C6308 * C10404 - C6307 * C10408 +
              C6300 * C10410) *
                 C152084 * C152404) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152242 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152249 +
            ((C101858 + C101857 + C101856) * C101414 +
             (C104370 + C104371 + C104372) * C152404) *
                C4993) *
               C3315 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152249 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152242 -
            ((C105060 + C105061 + C105062) * C152404 +
             (C103121 + C103120 + C103119) * C101414) *
                C4993) *
               C152204) *
              C152443 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152249 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152242 -
            ((C104863 + C104864 + C104865) * C152404 +
             (C101864 + C101863 + C101862) * C101414) *
                C4993) *
               C3315 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152242 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152249 +
            ((C104668 + C104667 + C104666) * C101414 +
             (C16189 * C51195 + C16190 * C51196 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C51197) *
                 C152404) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C152242 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152249 +
            (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
             C119924 * C117921) *
                C4993) *
               C3315 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152249 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C152242 -
            (C120396 * C117921 + C119067 * C117920 + C118686 * C117919 +
             C118685 * C117918) *
                C4993) *
               C152204) *
              C152443 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152249 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C152242 -
            (C120258 * C117921 + C118222 * C117920 + C118221 * C117919 +
             C118220 * C117918) *
                C4993) *
               C3315 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C152242 -
            (C120127 * C117921 + C118689 * C117920 + C118688 * C117919 +
             C118687 * C117918) *
                C152249 +
            (C118688 * C117918 + C118689 * C117919 + C120127 * C117920 +
             (C134 * C18813 - C135 * C18810 - C134 * C18814 +
              C152324 * C18816) *
                 C152084 * C117921) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C4321 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152246) *
              C152553 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152246 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C4321) *
              C152549 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C4321 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C152246) *
              C152535 +
          (((C103809 + C103810 + C103811) * C101414 +
            (C17507 * C51195 + C17002 * C51196 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C51197) *
                C152404) *
               C152246 -
           ((C103811 + C103810 + C103809) * C152404 +
            (C1881 * C51197 + C1882 * C51196 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C51195) *
                C101414) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C4321 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C3315 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C4321) *
               C152204) *
              C152543 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C4321) *
               C3315 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C4321 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152204) *
              C152526 +
          ((((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
             (C101865 + C101866 + C101867) * C152404) *
                C4321 -
            ((C101868 + C101869 + C101870) * C152404 +
             (C101867 + C101866 + C101865) * C101414) *
                C152246) *
               C3315 +
           (((C102558 + C102559 + C102560) * C101414 +
             (C2879 * C51195 + C2878 * C51196 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C102560 + C102559 + C102558) * C152404 +
             (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C4321 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C3315 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C4321) *
               C152204) *
              C152543 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C4321) *
               C3315 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C4321 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152204) *
              C152526 +
          ((((C6387 + C6386 + C6385) * C152084 * C101414 +
             (C6992 + C6993 + C6994) * C152084 * C152404) *
                C4321 -
            ((C6995 + C6996 + C6997) * C152084 * C152404 +
             (C6994 + C6993 + C6992) * C152084 * C101414) *
                C152246) *
               C3315 +
           (((C7759 + C7758 + C7757) * C152084 * C101414 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C7757 + C7758 + C7759) * C152084 * C152404 +
             (C6692 + C6691 + C6690) * C152084 * C101414) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C4321 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C152553 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152246 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C4321) *
              C152549 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C4321 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152246) *
              C152535 +
          (((C112107 + C112108 + C112109) * C152084 * C101414 +
            (C6303 * C8341 - C6304 * C8334 - C6303 * C8342 + C6298 * C8352 +
             C6305 * C8347 - C6306 * C8337 - C6305 * C8348 + C6299 * C8355 +
             C6307 * C60866 - C6308 * C60865 - C6307 * C60867 +
             C6300 * C60868) *
                C152084 * C152404) *
               C152246 -
           ((C112109 + C112108 + C112107) * C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C4321 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152246) *
               C3315 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152246 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C4321) *
               C152204) *
              C152543 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152246 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C4321) *
               C3315 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C4321 -
            (C120127 * C117921 + C118689 * C117920 + C118688 * C117919 +
             C118687 * C117918) *
                C152246) *
               C152204) *
              C152526 +
          (((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
             C118225 * C117921) *
                C4321 -
            (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
             C118223 * C117918) *
                C152246) *
               C3315 +
           ((C118690 * C117918 + C118691 * C117919 + C118692 * C117920 +
             (C134 * C18401 - C135 * C18400 - C134 * C18402 +
              C152324 * C18403) *
                 C152084 * C117921) *
                C152246 -
            (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
             C460 * C152084 * C117918) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C4321 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152246) *
              C152553 +
          ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
            C119067 * C117921) *
               C152246 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C4321) *
              C152549 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C4321 -
           (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
            C119068 * C117918) *
               C152246) *
              C152535 +
          ((C119536 * C117918 + C119537 * C117919 + C119545 * C117920 +
            (C134 * C61702 - C135 * C61701 - C134 * C61703 + C152324 * C61704) *
                C152084 * C117921) *
               C152246 -
           (C119545 * C117921 + C119537 * C117920 + C119536 * C117919 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152084 * C117918) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C152159 * C152457 -
               ((C1253 * C51197 + C1252 * C51196 + C16187 * C51195) * C152404 +
                (C460 * C51197 + C461 * C51196 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C51195) *
                    C101414) *
                   C152159 * C152204) *
                  C851 +
              (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
                (C1252 * C51195 + C1253 * C51196 + C1254 * C51197) * C152404) *
                   C152159 * C152204 -
               ((C101861 + C101860 + C101859) * C152404 +
                (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                   C152159 * C152457) *
                  C852 +
              (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
                (C101865 + C101866 + C101867) * C152404) *
                   C152159 * C152457 -
               ((C1255 * C51197 + C1254 * C51196 + C1253 * C51195) * C152404 +
                (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                   C152159 * C152204) *
                  C853 +
              (((C459 * C51195 + C465 * C51196 + C866 * C51197) * C101414 +
                (C1254 * C51195 + C1255 * C51196 +
                 (C134 * C1219 - C135 * C1208 - C134 * C1220 +
                  C152324 * C1226) *
                     C51197) *
                    C152404) *
                   C152159 * C152204 -
               ((C1009 * C51197 + C718 * C51196 + C712 * C51195) * C152404 +
                (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
                   C152159 * C152457) *
                  C152503) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C152159 * C1851 -
               ((C102554 + C102553 + C102552) * C152404 +
                (C460 * C51197 + C461 * C51196 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C51195) *
                    C101414) *
                   C152159 * C1852 +
               (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C51195 +
                 C462 * C51196 + C463 * C51197) *
                    C101414 +
                (C103122 + C103123 + C103124) * C152404) *
                   C152159 * C1853 -
               ((C33866 * C51197 + C17003 * C51196 + C17506 * C51195) *
                    C152404 +
                (C1881 * C51197 + C1882 * C51196 +
                 (C134 * C1509 - C135 * C1498 - C134 * C1510 +
                  C152324 * C1522) *
                     C51195) *
                    C101414) *
                   C152159 * C152509) *
                  C152443 +
              (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
                (C102555 + C102556 + C102557) * C152404) *
                   C152159 * C1852 -
               ((C101861 + C101860 + C101859) * C152404 +
                (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                   C152159 * C1851 -
               ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
                (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                   C152159 * C1853 +
               ((C1882 * C51195 + C1881 * C51196 + C1880 * C51197) * C101414 +
                (C17003 * C51195 + C33866 * C51196 +
                 (C134 * C2241 - C135 * C2234 - C134 * C2242 +
                  C152324 * C2246) *
                     C51197) *
                    C152404) *
                   C152159 * C152509) *
                  C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C2393 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C2394 +
            ((C101858 + C101857 + C101856) * C101414 +
             (C104370 + C104371 + C104372) * C152404) *
                C152502) *
               C152457 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C2394 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C2393 -
            ((C16190 * C51197 + C16189 * C51196 + C16785 * C51195) * C152404 +
             (C103121 + C103120 + C103119) * C101414) *
                C152502) *
               C152204) *
              C152443 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C2394 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C2393 -
            ((C3037 * C51197 + C3038 * C51196 + C3039 * C51195) * C152404 +
             (C101864 + C101863 + C101862) * C101414) *
                C152502) *
               C152457 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C2393 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C2394 +
            ((C104668 + C104667 + C104666) * C101414 +
             (C16189 * C51195 + C16190 * C51196 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C51197) *
                 C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C152457 -
           ((C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221) *
                C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152204) *
              C851 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152204 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152457) *
              C852 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152457 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152204) *
              C853 +
          (((C7212 + C7211 + C7210) * C152084 * C101414 +
            (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
             C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
             C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                C152084 * C152404) *
               C152159 * C152204 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C1851 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C1852 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152159 * C1853 -
           ((C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091 +
             C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
             C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243) *
                C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C152159 * C152509) *
              C152443 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C1852 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C1851 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C1853 +
           ((C8576 + C8575 + C8574) * C152084 * C101414 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152084 * C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C2393 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C2394 +
            ((C110090 + C110089 + C110088) * C152084 * C101414 +
             (C112704 + C112705 + C112706) * C152084 * C152404) *
                C152502) *
               C152457 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C2394 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C2393 -
            ((C6307 * C10405 - C6308 * C10403 - C6307 * C10406 +
              C6300 * C10409 + C6305 * C9659 - C6306 * C9652 - C6305 * C9660 +
              C6299 * C9670 + C6303 * C3173 - C6304 * C3169 - C6303 * C3174 +
              C6298 * C3181) *
                 C152084 * C152404 +
             (C111404 + C111403 + C111402) * C152084 * C101414) *
                C152502) *
               C152204) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C2394 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C2393 -
            ((C10207 + C10208 + C10209) * C152084 * C152404 +
             (C6991 + C6990 + C6989) * C152084 * C101414) *
                C152502) *
               C152457 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C2393 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C2394 +
            ((C9990 + C9989 + C9988) * C152084 * C101414 +
             (C6303 * C3175 - C6304 * C3170 - C6303 * C3176 + C6298 * C3182 +
              C6305 * C9657 - C6306 * C9651 - C6305 * C9658 + C6299 * C9669 +
              C6307 * C10407 - C6308 * C10404 - C6307 * C10408 +
              C6300 * C10410) *
                 C152084 * C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C152457 -
           (C16785 * C152084 * C117921 + C16188 * C152084 * C117920 +
            C16187 * C152084 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C152204) *
              C851 +
          ((C461 * C152084 * C117918 + C1252 * C152084 * C117919 +
            C2880 * C152084 * C117920 + C16189 * C152084 * C117921) *
               C152159 * C152204 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C152457) *
              C852 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152159 * C152457 -
           (C16190 * C152084 * C117921 + C2879 * C152084 * C117920 +
            C1253 * C152084 * C117919 + C460 * C152084 * C117918) *
               C152159 * C152204) *
              C853 +
          ((C459 * C152084 * C117918 + C1254 * C152084 * C117919 +
            C2878 * C152084 * C117920 +
            (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                C152084 * C117921) *
               C152159 * C152204 -
           (C3037 * C152084 * C117921 + C717 * C152084 * C117920 +
            C712 * C152084 * C117919 + C207 * C152084 * C117918) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C1851 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C1852 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C152159 * C1853 -
           ((C134 * C10405 - C135 * C10403 - C134 * C10406 + C152324 * C10409) *
                C152084 * C117921 +
            C17507 * C152084 * C117920 + C17506 * C152084 * C117919 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152084 * C117918) *
               C152159 * C152509) *
              C152443 +
          ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
            C118689 * C117921) *
               C152159 * C1852 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C1851 -
           (C16788 * C152084 * C117921 + C15195 * C152084 * C117920 +
            C2101 * C152084 * C117919 + C462 * C152084 * C117918) *
               C152159 * C1853 +
           (C1882 * C152084 * C117918 + C17003 * C152084 * C117919 +
            C17002 * C152084 * C117920 +
            (C134 * C10407 - C135 * C10404 - C134 * C10408 + C152324 * C10410) *
                C152084 * C117921) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C2393 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C2394 +
            (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
             C119924 * C117921) *
                C152502) *
               C152457 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C2394 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C2393 -
            ((C134 * C18811 - C135 * C18809 - C134 * C18812 +
              C152324 * C18815) *
                 C152084 * C117921 +
             C119067 * C117920 + C118686 * C117919 + C118685 * C117918) *
                C152502) *
               C152204) *
              C152443 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C2394 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C2393 -
            (C18105 * C152084 * C117921 + C118222 * C117920 +
             C118221 * C117919 + C118220 * C117918) *
                C152502) *
               C152457 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C2393 -
            (C120127 * C117921 + C118689 * C117920 + C118688 * C117919 +
             C118687 * C117918) *
                C2394 +
            (C118688 * C117918 + C118689 * C117919 + C120127 * C117920 +
             (C134 * C18813 - C135 * C18810 - C134 * C18814 +
              C152324 * C18816) *
                 C152084 * C117921) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                      C51195 +
                  C205 * C51196 + C206 * C51197) *
                     C101414 +
                 (C101853 + C101854 + C101855) * C152404) *
                    C152458 -
                ((C101856 + C101857 + C101858) * C152404 +
                 (C101855 + C101854 + C101853) * C101414) *
                    C152246) *
                   C152457 +
               (((C102552 + C102553 + C102554) * C101414 +
                 (C16188 * C51195 + C2880 * C51196 + C2879 * C51197) *
                     C152404) *
                    C152246 -
                ((C102554 + C102553 + C102552) * C152404 +
                 (C460 * C51197 + C461 * C51196 +
                  (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                      C51195) *
                     C101414) *
                    C152458) *
                   C152204) *
                  C359 +
              ((((C101859 + C101860 + C101861) * C101414 +
                 (C101862 + C101863 + C101864) * C152404) *
                    C152246 -
                ((C101861 + C101860 + C101859) * C152404 +
                 (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                    C152458) *
                   C152457 +
               (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
                 (C102555 + C102556 + C102557) * C152404) *
                    C152458 -
                ((C2878 * C51197 + C2879 * C51196 + C2880 * C51195) * C152404 +
                 (C102557 + C102556 + C102555) * C101414) *
                    C152246) *
                   C152204) *
                  C360 +
              ((((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
                 (C101865 + C101866 + C101867) * C152404) *
                    C152458 -
                ((C101868 + C101869 + C101870) * C152404 +
                 (C101867 + C101866 + C101865) * C101414) *
                    C152246) *
                   C152457 +
               (((C102558 + C102559 + C102560) * C101414 +
                 (C2879 * C51195 + C2878 * C51196 +
                  (C134 * C2856 - C135 * C2855 - C134 * C2857 +
                   C152324 * C2858) *
                      C51197) *
                     C152404) *
                    C152246 -
                ((C102560 + C102559 + C102558) * C152404 +
                 (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                    C152458) *
                   C152204) *
                  C152493) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C152458 -
               ((C101856 + C101857 + C101858) * C152404 +
                (C101855 + C101854 + C101853) * C101414) *
                   C152246) *
                  C1851 +
              (((C102552 + C102553 + C102554) * C101414 +
                (C103119 + C103120 + C103121) * C152404) *
                   C152246 -
               ((C102554 + C102553 + C102552) * C152404 +
                (C460 * C51197 + C461 * C51196 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C51195) *
                    C101414) *
                   C152458) *
                  C1852 +
              ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C51195 +
                 C462 * C51196 + C463 * C51197) *
                    C101414 +
                (C103122 + C103123 + C103124) * C152404) *
                   C152458 -
               ((C103125 + C103126 + C103127) * C152404 +
                (C103124 + C103123 + C103122) * C101414) *
                   C152246) *
                  C1853 +
              (((C103809 + C103810 + C103811) * C101414 +
                (C17507 * C51195 + C17002 * C51196 +
                 (C134 * C9966 - C135 * C9965 - C134 * C9967 +
                  C152324 * C9968) *
                     C51197) *
                    C152404) *
                   C152246 -
               ((C103811 + C103810 + C103809) * C152404 +
                (C1881 * C51197 + C1882 * C51196 +
                 (C134 * C1509 - C135 * C1498 - C134 * C1510 +
                  C152324 * C1522) *
                     C51195) *
                    C101414) *
                   C152458) *
                  C152509) *
             C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C3010 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C3011 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C104370 + C104371 + C104372) * C152404) *
               C3012 -
           ((C104373 + C104374 + C104375) * C152404 +
            (C104372 + C104371 + C104370) * C101414) *
               C152515) *
              C152457 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C3011 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C3010 -
           ((C105060 + C105061 + C105062) * C152404 +
            (C103121 + C103120 + C103119) * C101414) *
               C3012 +
           ((C105062 + C105061 + C105060) * C101414 +
            (C18826 * C51195 + C18414 * C51196 +
             (C134 * C18401 - C135 * C18400 - C134 * C18402 +
              C152324 * C18403) *
                 C51197) *
                C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152458 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152457 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712 +
              C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
              C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352) *
                 C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152458) *
               C152204) *
              C359 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152458) *
               C152457 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152458 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152204) *
              C360 +
          ((((C6387 + C6386 + C6385) * C152084 * C101414 +
             (C6992 + C6993 + C6994) * C152084 * C152404) *
                C152458 -
            ((C6995 + C6996 + C6997) * C152084 * C152404 +
             (C6994 + C6993 + C6992) * C152084 * C101414) *
                C152246) *
               C152457 +
           (((C7759 + C7758 + C7757) * C152084 * C101414 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C7757 + C7758 + C7759) * C152084 * C152404 +
             (C6692 + C6691 + C6690) * C152084 * C101414) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152458 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C1851 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152246 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152458) *
              C1852 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152458 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152246) *
              C1853 +
          (((C112107 + C112108 + C112109) * C152084 * C101414 +
            (C6303 * C8341 - C6304 * C8334 - C6303 * C8342 + C6298 * C8352 +
             C6305 * C8347 - C6306 * C8337 - C6305 * C8348 + C6299 * C8355 +
             C6307 * C60866 - C6308 * C60865 - C6307 * C60867 +
             C6300 * C60868) *
                C152084 * C152404) *
               C152246 -
           ((C112109 + C112108 + C112107) * C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C3010 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C3011 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C112704 + C112705 + C112706) * C152084 * C152404) *
               C3012 -
           ((C112707 + C112708 + C112709) * C152084 * C152404 +
            (C112706 + C112705 + C112704) * C152084 * C101414) *
               C152515) *
              C152457 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C3011 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C3010 -
           ((C113406 + C113407 + C113408) * C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C3012 +
           ((C113408 + C113407 + C113406) * C152084 * C101414 +
            (C6303 * C9661 - C6304 * C9653 - C6303 * C9662 + C6298 * C9671 +
             C6305 * C9663 - C6306 * C9654 - C6305 * C9664 + C6299 * C9672 +
             C6307 * C61702 - C6308 * C61701 - C6307 * C61703 +
             C6300 * C61704) *
                C152084 * C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C152458 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152246) *
               C152457 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C18826 * C152084 * C117921) *
                C152246 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C152458) *
               C152204) *
              C359 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152246 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C152458) *
               C152457 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C152458 -
            (C18414 * C152084 * C117921 + C118689 * C117920 +
             C118688 * C117919 + C118687 * C117918) *
                C152246) *
               C152204) *
              C360 +
          (((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
             C118225 * C117921) *
                C152458 -
            (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
             C118223 * C117918) *
                C152246) *
               C152457 +
           ((C118690 * C117918 + C118691 * C117919 + C118692 * C117920 +
             (C134 * C18401 - C135 * C18400 - C134 * C18402 +
              C152324 * C18403) *
                 C152084 * C117921) *
                C152246 -
            (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
             C460 * C152084 * C117918) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152458 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152246) *
              C1851 +
          ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
            C119067 * C117921) *
               C152246 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152458) *
              C1852 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C152458 -
           (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
            C119068 * C117918) *
               C152246) *
              C1853 +
          ((C119536 * C117918 + C119537 * C117919 + C119545 * C117920 +
            (C134 * C61702 - C135 * C61701 - C134 * C61703 + C152324 * C61704) *
                C152084 * C117921) *
               C152246 -
           (C119545 * C117921 + C119537 * C117920 + C119536 * C117919 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152084 * C117918) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C3010 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C3011 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C119924 * C117921) *
               C3012 -
           (C119932 * C117921 + C119924 * C117920 + C118218 * C117919 +
            C118217 * C117918) *
               C152515) *
              C152457 +
          ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
            C119067 * C117921) *
               C3011 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C3010 -
           (C120396 * C117921 + C119067 * C117920 + C118686 * C117919 +
            C118685 * C117918) *
               C3012 +
           (C118686 * C117918 + C119067 * C117919 + C120396 * C117920 +
            (C134 * C68335 - C135 * C68334 - C134 * C68336 + C152324 * C68337) *
                C152084 * C117921) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C51195 +
                C205 * C51196 + C206 * C51197) *
                   C101414 +
               (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
                  C152159 * C152141 * C129 -
              ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
               (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                  C152159 * C152141 * C130 +
              ((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
               (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
                  C152159 * C152141 * C131 -
              ((C1009 * C51197 + C718 * C51196 + C712 * C51195) * C152404 +
               (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
                  C152159 * C152141 * C132 +
              ((C208 * C51195 + C209 * C51196 + C210 * C51197) * C101414 +
               (C718 * C51195 + C1009 * C51196 +
                (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                    C51197) *
                   C152404) *
                  C152159 * C152141 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
                   C152159 * C152546 -
               ((C1253 * C51197 + C1252 * C51196 + C16187 * C51195) * C152404 +
                (C460 * C51197 + C461 * C51196 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C51195) *
                    C101414) *
                   C152159 * C152530 +
               (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C51195 +
                 C462 * C51196 + C463 * C51197) *
                    C101414 +
                (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
                   C152159 * C152499) *
                  C359 +
              (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
                (C1252 * C51195 + C1253 * C51196 + C1254 * C51197) * C152404) *
                   C152159 * C152530 -
               ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
                (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                   C152159 * C152546 -
               ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
                (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                   C152159 * C152499) *
                  C360 +
              (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
                (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
                   C152159 * C152546 -
               ((C1255 * C51197 + C1254 * C51196 + C1253 * C51195) * C152404 +
                (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                   C152159 * C152530 +
               ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
                (C2100 * C51195 + C2099 * C51196 +
                 (C134 * C2077 - C135 * C2076 - C134 * C2078 +
                  C152324 * C2079) *
                     C51197) *
                    C152404) *
                   C152159 * C152499) *
                  C152493) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C152547 -
               ((C101856 + C101857 + C101858) * C152404 +
                (C101855 + C101854 + C101853) * C101414) *
                   C152532 +
               ((C101858 + C101857 + C101856) * C101414 +
                (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
                   C152502) *
                  C152141 * C359 +
              (((C101859 + C101860 + C101861) * C101414 +
                (C101862 + C101863 + C101864) * C152404) *
                   C152532 -
               ((C101861 + C101860 + C101859) * C152404 +
                (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                   C152547 -
               ((C3037 * C51197 + C3038 * C51196 + C3039 * C51195) * C152404 +
                (C101864 + C101863 + C101862) * C101414) *
                   C152502) *
                  C152141 * C360 +
              (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
                (C101865 + C101866 + C101867) * C152404) *
                   C152547 -
               ((C101868 + C101869 + C101870) * C152404 +
                (C101867 + C101866 + C101865) * C101414) *
                   C152532 +
               ((C101870 + C101869 + C101868) * C101414 +
                (C3038 * C51195 + C3037 * C51196 +
                 (C134 * C3015 - C135 * C3014 - C134 * C3016 +
                  C152324 * C3017) *
                     C51197) *
                    C152404) *
                   C152502) *
                  C152141 * C152493) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C152159 * C1401 -
               ((C102554 + C102553 + C102552) * C152404 +
                (C460 * C51197 + C461 * C51196 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C51195) *
                    C101414) *
                   C152159 * C1402 +
               (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C51195 +
                 C462 * C51196 + C463 * C51197) *
                    C101414 +
                (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
                   C152159 * C152499) *
                  C152543 +
              (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
                (C102555 + C102556 + C102557) * C152404) *
                   C152159 * C1402 -
               ((C101861 + C101860 + C101859) * C152404 +
                (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                   C152159 * C1401 -
               ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
                (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                   C152159 * C152499) *
                  C152526 +
              (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
                (C101865 + C101866 + C101867) * C152404) *
                   C152159 * C1401 -
               ((C102560 + C102559 + C102558) * C152404 +
                (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                   C152159 * C1402 +
               ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
                (C2100 * C51195 + C2099 * C51196 +
                 (C134 * C2077 - C135 * C2076 - C134 * C2078 +
                  C152324 * C2079) *
                     C51197) *
                    C152404) *
                   C152159 * C152499) *
                  C152493) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C51195 +
                C205 * C51196 + C206 * C51197) *
                   C101414 +
               (C101853 + C101854 + C101855) * C152404) *
                  C152159 * C1489 -
              ((C102554 + C102553 + C102552) * C152404 +
               (C460 * C51197 + C461 * C51196 +
                (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                    C51195) *
                   C101414) *
                  C152159 * C1490 +
              (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                    C51195 +
                C462 * C51196 + C463 * C51197) *
                   C101414 +
               (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
                  C152159 * C1491 -
              ((C33866 * C51197 + C17003 * C51196 + C17506 * C51195) * C152404 +
               (C1881 * C51197 + C1882 * C51196 +
                (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                    C51195) *
                   C101414) *
                  C152159 * C1492 +
              (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                    C51195 +
                (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                    C51196 +
                (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                    C51197) *
                   C101414 +
               ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                    C51195 +
                (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                    C51196 +
                (C134 * C8867 - C135 * C8866 - C134 * C8868 + C152324 * C8869) *
                    C51197) *
                   C152404) *
                  C152159 * C1493) *
             C152113 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C152547 -
               ((C101856 + C101857 + C101858) * C152404 +
                (C101855 + C101854 + C101853) * C101414) *
                   C152532 +
               ((C101858 + C101857 + C101856) * C101414 +
                (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
                   C152502) *
                  C1401 +
              (((C102552 + C102553 + C102554) * C101414 +
                (C103119 + C103120 + C103121) * C152404) *
                   C152532 -
               ((C102554 + C102553 + C102552) * C152404 +
                (C460 * C51197 + C461 * C51196 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C51195) *
                    C101414) *
                   C152547 -
               ((C16190 * C51197 + C16189 * C51196 + C16785 * C51195) *
                    C152404 +
                (C103121 + C103120 + C103119) * C101414) *
                   C152502) *
                  C1402 +
              ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C51195 +
                 C462 * C51196 + C463 * C51197) *
                    C101414 +
                (C103122 + C103123 + C103124) * C152404) *
                   C152547 -
               ((C103125 + C103126 + C103127) * C152404 +
                (C103124 + C103123 + C103122) * C101414) *
                   C152532 +
               ((C103127 + C103126 + C103125) * C101414 +
                (C16789 * C51195 + C16788 * C51196 +
                 (C134 * C10185 - C135 * C10184 - C134 * C10186 +
                  C152324 * C10187) *
                     C51197) *
                    C152404) *
                   C152502) *
                  C152499) *
             C152113 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C2393 -
               ((C101856 + C101857 + C101858) * C152404 +
                (C101855 + C101854 + C101853) * C101414) *
                   C2394 +
               ((C101858 + C101857 + C101856) * C101414 +
                (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
                   C152502) *
                  C152141 * C152543 +
              (((C101859 + C101860 + C101861) * C101414 +
                (C101862 + C101863 + C101864) * C152404) *
                   C2394 -
               ((C101861 + C101860 + C101859) * C152404 +
                (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                   C2393 -
               ((C3037 * C51197 + C3038 * C51196 + C3039 * C51195) * C152404 +
                (C101864 + C101863 + C101862) * C101414) *
                   C152502) *
                  C152141 * C152526 +
              (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
                (C101865 + C101866 + C101867) * C152404) *
                   C2393 -
               ((C101868 + C101869 + C101870) * C152404 +
                (C101867 + C101866 + C101865) * C101414) *
                   C2394 +
               ((C101870 + C101869 + C101868) * C101414 +
                (C3038 * C51195 + C3037 * C51196 +
                 (C134 * C3015 - C135 * C3014 - C134 * C3016 +
                  C152324 * C3017) *
                     C51197) *
                    C152404) *
                   C152502) *
                  C152141 * C152493) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C2393 -
               ((C101856 + C101857 + C101858) * C152404 +
                (C101855 + C101854 + C101853) * C101414) *
                   C2394 +
               ((C101858 + C101857 + C101856) * C101414 +
                (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
                   C152502) *
                  C152546 +
              (((C102552 + C102553 + C102554) * C101414 +
                (C103119 + C103120 + C103121) * C152404) *
                   C2394 -
               ((C102554 + C102553 + C102552) * C152404 +
                (C460 * C51197 + C461 * C51196 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C51195) *
                    C101414) *
                   C2393 -
               ((C16190 * C51197 + C16189 * C51196 + C16785 * C51195) *
                    C152404 +
                (C103121 + C103120 + C103119) * C101414) *
                   C152502) *
                  C152530 +
              ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C51195 +
                 C462 * C51196 + C463 * C51197) *
                    C101414 +
                (C103122 + C103123 + C103124) * C152404) *
                   C2393 -
               ((C103125 + C103126 + C103127) * C152404 +
                (C103124 + C103123 + C103122) * C101414) *
                   C2394 +
               ((C103127 + C103126 + C103125) * C101414 +
                (C16789 * C51195 + C16788 * C51196 +
                 (C134 * C10185 - C135 * C10184 - C134 * C10186 +
                  C152324 * C10187) *
                     C51197) *
                    C152404) *
                   C152502) *
                  C152499) *
             C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C101853 + C101854 + C101855) * C152404) *
              C2624 -
          ((C101856 + C101857 + C101858) * C152404 +
           (C101855 + C101854 + C101853) * C101414) *
              C2625 +
          ((C101858 + C101857 + C101856) * C101414 +
           (C104370 + C104371 + C104372) * C152404) *
              C2626 -
          ((C104373 + C104374 + C104375) * C152404 +
           (C104372 + C104371 + C104370) * C101414) *
              C2627 +
          ((C104375 + C104374 + C104373) * C101414 +
           (C18106 * C51195 + C18105 * C51196 +
            (C134 * C18609 - C135 * C18608 - C134 * C18610 + C152324 * C18611) *
                C51197) *
               C152404) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
            C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
            C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
               C152084 * C152404) *
              C152159 * C152141 * C129 -
          ((C6986 + C6987 + C6988) * C152084 * C152404 +
           (C6384 + C6383 + C6382) * C152084 * C101414) *
              C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C152084 * C101414 +
           (C6992 + C6993 + C6994) * C152084 * C152404) *
              C152159 * C152141 * C131 -
          ((C7425 + C7426 + C7427) * C152084 * C152404 +
           (C6390 + C6389 + C6388) * C152084 * C101414) *
              C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C152084 * C101414 +
           (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
            C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
            C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
               C152084 * C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
                C152084 * C152404) *
               C152159 * C152546 -
           ((C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221) *
                C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152530 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152546 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152546 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152547 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152532 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152141 * C359 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152532 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152547 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C152502) *
              C152141 * C360 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152547 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152532 +
           ((C6997 + C6996 + C6995) * C152084 * C101414 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C1401 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C1402 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C1401 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C1401 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C110085 + C110086 + C110087) * C152084 * C152404) *
              C152159 * C1489 -
          ((C110789 + C110788 + C110787) * C152084 * C152404 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C152084 * C101414) *
              C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C152084 * C101414 +
           (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
            C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
            C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
               C152084 * C152404) *
              C152159 * C1491 -
          ((C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091 +
            C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
            C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243) *
               C152084 * C152404 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C152084 * C101414) *
              C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C152084 * C101414 +
           (C6303 * C8345 - C6304 * C8336 - C6303 * C8346 + C6298 * C8354 +
            C6305 * C9087 - C6306 * C9085 - C6305 * C9088 + C6299 * C9091 +
            C6307 * C61324 - C6308 * C61323 - C6307 * C61325 + C6300 * C61326) *
               C152084 * C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152547 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152532 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C1401 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152532 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152547 -
           ((C6307 * C10405 - C6308 * C10403 - C6307 * C10406 + C6300 * C10409 +
             C6305 * C9659 - C6306 * C9652 - C6305 * C9660 + C6299 * C9670 +
             C6303 * C3173 - C6304 * C3169 - C6303 * C3174 + C6298 * C3181) *
                C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C152502) *
              C1402 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152547 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152532 +
           ((C111410 + C111409 + C111408) * C152084 * C101414 +
            (C6303 * C9659 - C6304 * C9652 - C6303 * C9660 + C6298 * C9670 +
             C6305 * C10405 - C6306 * C10403 - C6305 * C10406 + C6299 * C10409 +
             C6307 * C62160 - C6308 * C62159 - C6307 * C62161 +
             C6300 * C62162) *
                C152084 * C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C2393 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C2394 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C2394 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C2393 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C152502) *
              C152141 * C152526 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C2393 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C2394 +
           ((C6997 + C6996 + C6995) * C152084 * C101414 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C2393 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C2394 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152546 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C2394 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C2393 -
           ((C6307 * C10405 - C6308 * C10403 - C6307 * C10406 + C6300 * C10409 +
             C6305 * C9659 - C6306 * C9652 - C6305 * C9660 + C6299 * C9670 +
             C6303 * C3173 - C6304 * C3169 - C6303 * C3174 + C6298 * C3181) *
                C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C152502) *
              C152530 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C2393 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C2394 +
           ((C111410 + C111409 + C111408) * C152084 * C101414 +
            (C6303 * C9659 - C6304 * C9652 - C6303 * C9660 + C6298 * C9670 +
             C6305 * C10405 - C6306 * C10403 - C6305 * C10406 + C6299 * C10409 +
             C6307 * C62160 - C6308 * C62159 - C6307 * C62161 +
             C6300 * C62162) *
                C152084 * C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C110085 + C110086 + C110087) * C152084 * C152404) *
              C2624 -
          ((C110088 + C110089 + C110090) * C152084 * C152404 +
           (C110087 + C110086 + C110085) * C152084 * C101414) *
              C2625 +
          ((C110090 + C110089 + C110088) * C152084 * C101414 +
           (C112704 + C112705 + C112706) * C152084 * C152404) *
              C2626 -
          ((C112707 + C112708 + C112709) * C152084 * C152404 +
           (C112706 + C112705 + C112704) * C152084 * C101414) *
              C2627 +
          ((C112709 + C112708 + C112707) * C152084 * C101414 +
           (C6303 * C18073 - C6304 * C18068 - C6303 * C18074 + C6298 * C18080 +
            C6305 * C18811 - C6306 * C18809 - C6305 * C18812 + C6299 * C18815 +
            C6307 * C69081 - C6308 * C69080 - C6307 * C69082 + C6300 * C69083) *
               C152084 * C152404) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
               C152084 * C117918 +
           C15462 * C152084 * C117919 + C15463 * C152084 * C117920 +
           C15464 * C152084 * C117921) *
              C152159 * C152141 * C129 -
          (C3039 * C152084 * C117921 + C715 * C152084 * C117920 +
           C714 * C152084 * C117919 + C205 * C152084 * C117918) *
              C152159 * C152141 * C130 +
          (C206 * C152084 * C117918 + C713 * C152084 * C117919 +
           C716 * C152084 * C117920 + C3038 * C152084 * C117921) *
              C152159 * C152141 * C131 -
          (C3037 * C152084 * C117921 + C717 * C152084 * C117920 +
           C712 * C152084 * C117919 + C207 * C152084 * C117918) *
              C152159 * C152141 * C132 +
          (C208 * C152084 * C117918 + C718 * C152084 * C117919 +
           C719 * C152084 * C117920 +
           (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
               C152084 * C117921) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C15462 * C152084 * C117919 + C15463 * C152084 * C117920 +
            C15464 * C152084 * C117921) *
               C152159 * C152546 -
           (C16785 * C152084 * C117921 + C16188 * C152084 * C117920 +
            C16187 * C152084 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C152530 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C16786 * C152084 * C117919 + C16787 * C152084 * C117920 +
            C16789 * C152084 * C117921) *
               C152159 * C152499) *
              C359 +
          ((C461 * C152084 * C117918 + C1252 * C152084 * C117919 +
            C2880 * C152084 * C117920 + C16189 * C152084 * C117921) *
               C152159 * C152530 -
           (C3039 * C152084 * C117921 + C715 * C152084 * C117920 +
            C714 * C152084 * C117919 + C205 * C152084 * C117918) *
               C152159 * C152546 -
           (C16788 * C152084 * C117921 + C15195 * C152084 * C117920 +
            C2101 * C152084 * C117919 + C462 * C152084 * C117918) *
               C152159 * C152499) *
              C360 +
          ((C206 * C152084 * C117918 + C713 * C152084 * C117919 +
            C716 * C152084 * C117920 + C3038 * C152084 * C117921) *
               C152159 * C152546 -
           (C16190 * C152084 * C117921 + C2879 * C152084 * C117920 +
            C1253 * C152084 * C117919 + C460 * C152084 * C117918) *
               C152159 * C152530 +
           (C463 * C152084 * C117918 + C2100 * C152084 * C117919 +
            C15196 * C152084 * C117920 +
            (C134 * C10185 - C135 * C10184 - C134 * C10186 + C152324 * C10187) *
                C152084 * C117921) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152547 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152532 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C18106 * C152084 * C117921) *
               C152502) *
              C152141 * C359 +
          ((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
            C118222 * C117921) *
               C152532 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152547 -
           (C18105 * C152084 * C117921 + C118222 * C117920 + C118221 * C117919 +
            C118220 * C117918) *
               C152502) *
              C152141 * C360 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152547 -
           (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
            C118223 * C117918) *
               C152532 +
           (C118224 * C117918 + C118225 * C117919 + C118226 * C117920 +
            (C134 * C18609 - C135 * C18608 - C134 * C18610 + C152324 * C18611) *
                C152084 * C117921) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C1401 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C1402 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C16786 * C152084 * C117919 + C16787 * C152084 * C117920 +
            C16789 * C152084 * C117921) *
               C152159 * C152499) *
              C152543 +
          ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
            C118689 * C117921) *
               C152159 * C1402 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C1401 -
           (C16788 * C152084 * C117921 + C15195 * C152084 * C117920 +
            C2101 * C152084 * C117919 + C462 * C152084 * C117918) *
               C152159 * C152499) *
              C152526 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152159 * C1401 -
           (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
            C460 * C152084 * C117918) *
               C152159 * C1402 +
           (C463 * C152084 * C117918 + C2100 * C152084 * C117919 +
            C15196 * C152084 * C117920 +
            (C134 * C10185 - C135 * C10184 - C134 * C10186 + C152324 * C10187) *
                C152084 * C117921) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
               C152084 * C117918 +
           C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
              C152159 * C1489 -
          (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
           (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
               C152084 * C117918) *
              C152159 * C1490 +
          ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
               C152084 * C117918 +
           C16786 * C152084 * C117919 + C16787 * C152084 * C117920 +
           C16789 * C152084 * C117921) *
              C152159 * C1491 -
          ((C134 * C10405 - C135 * C10403 - C134 * C10406 + C152324 * C10409) *
               C152084 * C117921 +
           C17507 * C152084 * C117920 + C17506 * C152084 * C117919 +
           (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
               C152084 * C117918) *
              C152159 * C1492 +
          ((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
               C152084 * C117918 +
           (C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
               C152084 * C117919 +
           (C134 * C8347 - C135 * C8337 - C134 * C8348 + C152324 * C8355) *
               C152084 * C117920 +
           (C134 * C62160 - C135 * C62159 - C134 * C62161 + C152324 * C62162) *
               C152084 * C117921) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152547 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152532 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C18106 * C152084 * C117921) *
               C152502) *
              C1401 +
          ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
            C119067 * C117921) *
               C152532 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152547 -
           ((C134 * C18811 - C135 * C18809 - C134 * C18812 + C152324 * C18815) *
                C152084 * C117921 +
            C119067 * C117920 + C118686 * C117919 + C118685 * C117918) *
               C152502) *
              C1402 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C152547 -
           (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
            C119068 * C117918) *
               C152532 +
           (C119069 * C117918 + C119070 * C117919 + C119078 * C117920 +
            (C134 * C69081 - C135 * C69080 - C134 * C69082 + C152324 * C69083) *
                C152084 * C117921) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C2393 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C2394 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C18106 * C152084 * C117921) *
               C152502) *
              C152141 * C152543 +
          ((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
            C118222 * C117921) *
               C2394 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C2393 -
           (C18105 * C152084 * C117921 + C118222 * C117920 + C118221 * C117919 +
            C118220 * C117918) *
               C152502) *
              C152141 * C152526 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C2393 -
           (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
            C118223 * C117918) *
               C2394 +
           (C118224 * C117918 + C118225 * C117919 + C118226 * C117920 +
            (C134 * C18609 - C135 * C18608 - C134 * C18610 + C152324 * C18611) *
                C152084 * C117921) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C2393 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C2394 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C18106 * C152084 * C117921) *
               C152502) *
              C152546 +
          ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
            C119067 * C117921) *
               C2394 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C2393 -
           ((C134 * C18811 - C135 * C18809 - C134 * C18812 + C152324 * C18815) *
                C152084 * C117921 +
            C119067 * C117920 + C118686 * C117919 + C118685 * C117918) *
               C152502) *
              C152530 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C2393 -
           (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
            C119068 * C117918) *
               C2394 +
           (C119069 * C117918 + C119070 * C117919 + C119078 * C117920 +
            (C134 * C69081 - C135 * C69080 - C134 * C69082 + C152324 * C69083) *
                C152084 * C117921) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
               C152084 * C117918 +
           C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
              C2624 -
          (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
           C118215 * C117918) *
              C2625 +
          (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
           C119924 * C117921) *
              C2626 -
          (C119932 * C117921 + C119924 * C117920 + C118218 * C117919 +
           C118217 * C117918) *
              C2627 +
          (C118218 * C117918 + C119924 * C117919 + C119932 * C117920 +
           (C134 * C119920 - C135 * C119919 - C134 * C119921 +
            C152324 * C119922) *
               C152084 * C117921) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C152458 -
               ((C101856 + C101857 + C101858) * C152404 +
                (C101855 + C101854 + C101853) * C101414) *
                   C152246) *
                  C152141 * C851 +
              (((C101859 + C101860 + C101861) * C101414 +
                (C101862 + C101863 + C101864) * C152404) *
                   C152246 -
               ((C101861 + C101860 + C101859) * C152404 +
                (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                   C152458) *
                  C152141 * C852 +
              (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
                (C101865 + C101866 + C101867) * C152404) *
                   C152458 -
               ((C101868 + C101869 + C101870) * C152404 +
                (C101867 + C101866 + C101865) * C101414) *
                   C152246) *
                  C152141 * C853 +
              (((C102259 + C102260 + C102261) * C101414 +
                (C717 * C51195 + C719 * C51196 +
                 (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                     C51197) *
                    C152404) *
                   C152246 -
               ((C102261 + C102260 + C102259) * C152404 +
                (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
                   C152458) *
                  C152141 * C152503) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                      C51195 +
                  C205 * C51196 + C206 * C51197) *
                     C101414 +
                 (C101853 + C101854 + C101855) * C152404) *
                    C152458 -
                ((C101856 + C101857 + C101858) * C152404 +
                 (C101855 + C101854 + C101853) * C101414) *
                    C152246) *
                   C1401 +
               (((C102552 + C102553 + C102554) * C101414 +
                 (C103119 + C103120 + C103121) * C152404) *
                    C152246 -
                ((C102554 + C102553 + C102552) * C152404 +
                 (C460 * C51197 + C461 * C51196 +
                  (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                      C51195) *
                     C101414) *
                    C152458) *
                   C1402 +
               ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                      C51195 +
                  C462 * C51196 + C463 * C51197) *
                     C101414 +
                 (C103122 + C103123 + C103124) * C152404) *
                    C152458 -
                ((C103125 + C103126 + C103127) * C152404 +
                 (C103124 + C103123 + C103122) * C101414) *
                    C152246) *
                   C152499) *
                  C152443 +
              ((((C101859 + C101860 + C101861) * C101414 +
                 (C101862 + C101863 + C101864) * C152404) *
                    C152246 -
                ((C101861 + C101860 + C101859) * C152404 +
                 (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                    C152458) *
                   C1401 +
               (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
                 (C102555 + C102556 + C102557) * C152404) *
                    C152458 -
                ((C2878 * C51197 + C2879 * C51196 + C2880 * C51195) * C152404 +
                 (C102557 + C102556 + C102555) * C101414) *
                    C152246) *
                   C1402 +
               (((C103612 + C103613 + C103614) * C101414 +
                 (C15195 * C51195 + C15196 * C51196 +
                  (C134 * C1707 - C135 * C1684 - C134 * C1708 +
                   C152324 * C1720) *
                      C51197) *
                     C152404) *
                    C152246 -
                ((C103614 + C103613 + C103612) * C152404 +
                 (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                    C152458) *
                   C152499) *
                  C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C3010 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C3011 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C104370 + C104371 + C104372) * C152404) *
               C3012 -
           ((C104373 + C104374 + C104375) * C152404 +
            (C104372 + C104371 + C104370) * C101414) *
               C152515) *
              C152141 * C152443 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C3011 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C3010 -
           ((C104863 + C104864 + C104865) * C152404 +
            (C101864 + C101863 + C101862) * C101414) *
               C3012 +
           ((C104865 + C104864 + C104863) * C101414 +
            (C15465 * C51195 + C15466 * C51196 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C51197) *
                C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152458 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C152141 * C851 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152246 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152458) *
              C152141 * C852 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152458 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152246) *
              C152141 * C853 +
          (((C7427 + C7426 + C7425) * C152084 * C101414 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152084 * C152404) *
               C152246 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152458 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C1401 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152458) *
               C1402 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C152084 * C101414 +
             (C111405 + C111406 + C111407) * C152084 * C152404) *
                C152458 -
            ((C111408 + C111409 + C111410) * C152084 * C152404 +
             (C111407 + C111406 + C111405) * C152084 * C101414) *
                C152246) *
               C152499) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152458) *
               C1401 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152458 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C1402 +
           (((C8891 + C8890 + C8889) * C152084 * C101414 +
             (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
              C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
              C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C8889 + C8890 + C8891) * C152084 * C152404 +
             (C6689 + C6688 + C6687) * C152084 * C101414) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C3010 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C3011 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C112704 + C112705 + C112706) * C152084 * C152404) *
               C3012 -
           ((C112707 + C112708 + C112709) * C152084 * C152404 +
            (C112706 + C112705 + C112704) * C152084 * C101414) *
               C152515) *
              C152141 * C152443 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C3011 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C3010 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C3012 +
           ((C10209 + C10208 + C10207) * C152084 * C101414 +
            (C6303 * C2647 - C6304 * C2634 - C6303 * C2648 + C6298 * C2658 +
             C6305 * C9665 - C6306 * C9655 - C6305 * C9666 + C6299 * C9673 +
             C6307 * C9667 - C6308 * C9656 - C6307 * C9668 + C6300 * C9674) *
                C152084 * C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152458 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152246) *
              C152141 * C851 +
          ((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
            C118222 * C117921) *
               C152246 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152458) *
              C152141 * C852 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152458 -
           (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
            C118223 * C117918) *
               C152246) *
              C152141 * C853 +
          ((C118487 * C117918 + C118488 * C117919 + C118489 * C117920 +
            (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                C152084 * C117921) *
               C152246 -
           (C118489 * C117921 + C118488 * C117920 + C118487 * C117919 +
            C207 * C152084 * C117918) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C152458 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152246) *
               C1401 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152246 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C152458) *
               C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152084 * C117918 +
             C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
                C152458 -
            (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
             C119068 * C117918) *
                C152246) *
               C152499) *
              C152443 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152246 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C152458) *
               C1401 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C152458 -
            (C18414 * C152084 * C117921 + C118689 * C117920 +
             C118688 * C117919 + C118687 * C117918) *
                C152246) *
               C1402 +
           ((C119403 * C117918 + C119404 * C117919 + C119405 * C117920 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152084 * C117921) *
                C152246 -
            (C119405 * C117921 + C119404 * C117920 + C119403 * C117919 +
             C462 * C152084 * C117918) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C3010 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C3011 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C119924 * C117921) *
               C3012 -
           (C119932 * C117921 + C119924 * C117920 + C118218 * C117919 +
            C118217 * C117918) *
               C152515) *
              C152141 * C152443 +
          ((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
            C118222 * C117921) *
               C3011 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C3010 -
           (C120258 * C117921 + C118222 * C117920 + C118221 * C117919 +
            C118220 * C117918) *
               C3012 +
           (C118221 * C117918 + C118222 * C117919 + C120258 * C117920 +
            (C134 * C18077 - C135 * C18070 - C134 * C18078 + C152324 * C18082) *
                C152084 * C117921) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
              C152159 * C152141 * C129 -
          ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
           (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
              C152159 * C152141 * C130 +
          ((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
           (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
              C152159 * C152141 * C131 -
          ((C1009 * C51197 + C718 * C51196 + C712 * C51195) * C152404 +
           (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
              C152159 * C152141 * C132 +
          ((C208 * C51195 + C209 * C51196 + C210 * C51197) * C101414 +
           (C718 * C51195 + C1009 * C51196 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C51197) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
               C152159 * C152546 -
           ((C1253 * C51197 + C1252 * C51196 + C16187 * C51195) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
               C152159 * C152499) *
              C359 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C1252 * C51195 + C1253 * C51196 + C1254 * C51197) * C152404) *
               C152159 * C152530 -
           ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152546 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152499) *
              C360 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
               C152159 * C152546 -
           ((C1255 * C51197 + C1254 * C51196 + C1253 * C51195) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152530 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C1401 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C1402 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C1401 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C1401 -
           ((C102560 + C102559 + C102558) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C1402 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C101853 + C101854 + C101855) * C152404) *
              C152159 * C1489 -
          ((C102554 + C102553 + C102552) * C152404 +
           (C460 * C51197 + C461 * C51196 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C51195) *
               C101414) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C51195 +
            C462 * C51196 + C463 * C51197) *
               C101414 +
           (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
              C152159 * C1491 -
          ((C33866 * C51197 + C17003 * C51196 + C17506 * C51195) * C152404 +
           (C1881 * C51197 + C1882 * C51196 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C51195) *
               C101414) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C51195 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C51196 +
            (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                C51197) *
               C101414 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C51195 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C51196 +
            (C134 * C8867 - C135 * C8866 - C134 * C8868 + C152324 * C8869) *
                C51197) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C2393 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C2394 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C2394 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C2393 -
           ((C3037 * C51197 + C3038 * C51196 + C3039 * C51195) * C152404 +
            (C101864 + C101863 + C101862) * C101414) *
               C152502) *
              C152141 * C152526 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C2393 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C2394 +
           ((C101870 + C101869 + C101868) * C101414 +
            (C3038 * C51195 + C3037 * C51196 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C51197) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C2393 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C2394 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
               C152502) *
              C152546 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C2394 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C2393 -
           ((C16190 * C51197 + C16189 * C51196 + C16785 * C51195) * C152404 +
            (C103121 + C103120 + C103119) * C101414) *
               C152502) *
              C152530 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C2393 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C2394 +
           ((C103127 + C103126 + C103125) * C101414 +
            (C16789 * C51195 + C16788 * C51196 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C51197) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
            C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
            C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
               C152084 * C152404) *
              C152159 * C152141 * C129 -
          ((C6986 + C6987 + C6988) * C152084 * C152404 +
           (C6384 + C6383 + C6382) * C152084 * C101414) *
              C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C152084 * C101414 +
           (C6992 + C6993 + C6994) * C152084 * C152404) *
              C152159 * C152141 * C131 -
          ((C7425 + C7426 + C7427) * C152084 * C152404 +
           (C6390 + C6389 + C6388) * C152084 * C101414) *
              C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C152084 * C101414 +
           (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
            C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
            C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
               C152084 * C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
                C152084 * C152404) *
               C152159 * C152546 -
           ((C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221) *
                C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152530 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152546 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152546 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C1401 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C1402 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C1401 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C1401 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C110085 + C110086 + C110087) * C152084 * C152404) *
              C152159 * C1489 -
          ((C110789 + C110788 + C110787) * C152084 * C152404 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C152084 * C101414) *
              C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C152084 * C101414 +
           (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
            C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
            C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
               C152084 * C152404) *
              C152159 * C1491 -
          ((C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091 +
            C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
            C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243) *
               C152084 * C152404 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C152084 * C101414) *
              C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C152084 * C101414 +
           (C6303 * C8345 - C6304 * C8336 - C6303 * C8346 + C6298 * C8354 +
            C6305 * C9087 - C6306 * C9085 - C6305 * C9088 + C6299 * C9091 +
            C6307 * C61324 - C6308 * C61323 - C6307 * C61325 + C6300 * C61326) *
               C152084 * C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C2393 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C2394 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C2394 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C2393 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C152502) *
              C152141 * C152526 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C2393 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C2394 +
           ((C6997 + C6996 + C6995) * C152084 * C101414 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C2393 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C2394 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152546 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C2394 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C2393 -
           ((C6307 * C10405 - C6308 * C10403 - C6307 * C10406 + C6300 * C10409 +
             C6305 * C9659 - C6306 * C9652 - C6305 * C9660 + C6299 * C9670 +
             C6303 * C3173 - C6304 * C3169 - C6303 * C3174 + C6298 * C3181) *
                C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C152502) *
              C152530 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C2393 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C2394 +
           ((C111410 + C111409 + C111408) * C152084 * C101414 +
            (C6303 * C9659 - C6304 * C9652 - C6303 * C9660 + C6298 * C9670 +
             C6305 * C10405 - C6306 * C10403 - C6305 * C10406 + C6299 * C10409 +
             C6307 * C62160 - C6308 * C62159 - C6307 * C62161 +
             C6300 * C62162) *
                C152084 * C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
               C152084 * C117918 +
           C15462 * C152084 * C117919 + C15463 * C152084 * C117920 +
           C15464 * C152084 * C117921) *
              C152159 * C152141 * C129 -
          (C3039 * C152084 * C117921 + C715 * C152084 * C117920 +
           C714 * C152084 * C117919 + C205 * C152084 * C117918) *
              C152159 * C152141 * C130 +
          (C206 * C152084 * C117918 + C713 * C152084 * C117919 +
           C716 * C152084 * C117920 + C3038 * C152084 * C117921) *
              C152159 * C152141 * C131 -
          (C3037 * C152084 * C117921 + C717 * C152084 * C117920 +
           C712 * C152084 * C117919 + C207 * C152084 * C117918) *
              C152159 * C152141 * C132 +
          (C208 * C152084 * C117918 + C718 * C152084 * C117919 +
           C719 * C152084 * C117920 +
           (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
               C152084 * C117921) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C15462 * C152084 * C117919 + C15463 * C152084 * C117920 +
            C15464 * C152084 * C117921) *
               C152159 * C152546 -
           (C16785 * C152084 * C117921 + C16188 * C152084 * C117920 +
            C16187 * C152084 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C152530 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C16786 * C152084 * C117919 + C16787 * C152084 * C117920 +
            C16789 * C152084 * C117921) *
               C152159 * C152499) *
              C359 +
          ((C461 * C152084 * C117918 + C1252 * C152084 * C117919 +
            C2880 * C152084 * C117920 + C16189 * C152084 * C117921) *
               C152159 * C152530 -
           (C3039 * C152084 * C117921 + C715 * C152084 * C117920 +
            C714 * C152084 * C117919 + C205 * C152084 * C117918) *
               C152159 * C152546 -
           (C16788 * C152084 * C117921 + C15195 * C152084 * C117920 +
            C2101 * C152084 * C117919 + C462 * C152084 * C117918) *
               C152159 * C152499) *
              C360 +
          ((C206 * C152084 * C117918 + C713 * C152084 * C117919 +
            C716 * C152084 * C117920 + C3038 * C152084 * C117921) *
               C152159 * C152546 -
           (C16190 * C152084 * C117921 + C2879 * C152084 * C117920 +
            C1253 * C152084 * C117919 + C460 * C152084 * C117918) *
               C152159 * C152530 +
           (C463 * C152084 * C117918 + C2100 * C152084 * C117919 +
            C15196 * C152084 * C117920 +
            (C134 * C10185 - C135 * C10184 - C134 * C10186 + C152324 * C10187) *
                C152084 * C117921) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C1401 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C1402 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C16786 * C152084 * C117919 + C16787 * C152084 * C117920 +
            C16789 * C152084 * C117921) *
               C152159 * C152499) *
              C152543 +
          ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
            C118689 * C117921) *
               C152159 * C1402 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C1401 -
           (C16788 * C152084 * C117921 + C15195 * C152084 * C117920 +
            C2101 * C152084 * C117919 + C462 * C152084 * C117918) *
               C152159 * C152499) *
              C152526 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152159 * C1401 -
           (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
            C460 * C152084 * C117918) *
               C152159 * C1402 +
           (C463 * C152084 * C117918 + C2100 * C152084 * C117919 +
            C15196 * C152084 * C117920 +
            (C134 * C10185 - C135 * C10184 - C134 * C10186 + C152324 * C10187) *
                C152084 * C117921) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
               C152084 * C117918 +
           C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
              C152159 * C1489 -
          (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
           (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
               C152084 * C117918) *
              C152159 * C1490 +
          ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
               C152084 * C117918 +
           C16786 * C152084 * C117919 + C16787 * C152084 * C117920 +
           C16789 * C152084 * C117921) *
              C152159 * C1491 -
          ((C134 * C10405 - C135 * C10403 - C134 * C10406 + C152324 * C10409) *
               C152084 * C117921 +
           C17507 * C152084 * C117920 + C17506 * C152084 * C117919 +
           (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
               C152084 * C117918) *
              C152159 * C1492 +
          ((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
               C152084 * C117918 +
           (C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
               C152084 * C117919 +
           (C134 * C8347 - C135 * C8337 - C134 * C8348 + C152324 * C8355) *
               C152084 * C117920 +
           (C134 * C62160 - C135 * C62159 - C134 * C62161 + C152324 * C62162) *
               C152084 * C117921) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C2393 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C2394 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C18106 * C152084 * C117921) *
               C152502) *
              C152141 * C152543 +
          ((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
            C118222 * C117921) *
               C2394 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C2393 -
           (C18105 * C152084 * C117921 + C118222 * C117920 + C118221 * C117919 +
            C118220 * C117918) *
               C152502) *
              C152141 * C152526 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C2393 -
           (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
            C118223 * C117918) *
               C2394 +
           (C118224 * C117918 + C118225 * C117919 + C118226 * C117920 +
            (C134 * C18609 - C135 * C18608 - C134 * C18610 + C152324 * C18611) *
                C152084 * C117921) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C2393 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C2394 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C18106 * C152084 * C117921) *
               C152502) *
              C152546 +
          ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
            C119067 * C117921) *
               C2394 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C2393 -
           ((C134 * C18811 - C135 * C18809 - C134 * C18812 + C152324 * C18815) *
                C152084 * C117921 +
            C119067 * C117920 + C118686 * C117919 + C118685 * C117918) *
               C152502) *
              C152530 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C2393 -
           (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
            C119068 * C117918) *
               C2394 +
           (C119069 * C117918 + C119070 * C117919 + C119078 * C117920 +
            (C134 * C69081 - C135 * C69080 - C134 * C69082 + C152324 * C69083) *
                C152084 * C117921) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C4321 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152457 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C4321) *
               C152204) *
              C152118 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C4321) *
               C152457 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C4321 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152204) *
              C152127 +
          ((((C6387 + C6386 + C6385) * C152084 * C101414 +
             (C6992 + C6993 + C6994) * C152084 * C152404) *
                C4321 -
            ((C6995 + C6996 + C6997) * C152084 * C152404 +
             (C6994 + C6993 + C6992) * C152084 * C101414) *
                C152246) *
               C152457 +
           (((C7759 + C7758 + C7757) * C152084 * C101414 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C7757 + C7758 + C7759) * C152084 * C152404 +
             (C6692 + C6691 + C6690) * C152084 * C101414) *
                C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C4321 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C152457 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C4321) *
               C152204) *
              C152118 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C4321) *
               C152457 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C4321 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152204) *
              C152127 +
          ((((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
             (C101865 + C101866 + C101867) * C152404) *
                C4321 -
            ((C101868 + C101869 + C101870) * C152404 +
             (C101867 + C101866 + C101865) * C101414) *
                C152246) *
               C152457 +
           (((C102558 + C102559 + C102560) * C101414 +
             (C2879 * C51195 + C2878 * C51196 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C102560 + C102559 + C102558) * C152404 +
             (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C4321 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152246) *
               C152457 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152246 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C4321) *
               C152204) *
              C152118 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152246 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C4321) *
               C152457 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C4321 -
            (C120127 * C117921 + C118689 * C117920 + C118688 * C117919 +
             C118687 * C117918) *
                C152246) *
               C152204) *
              C152127 +
          (((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
             C118225 * C117921) *
                C4321 -
            (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
             C118223 * C117918) *
                C152246) *
               C152457 +
           ((C118690 * C117918 + C118691 * C117919 + C118692 * C117920 +
             (C134 * C18401 - C135 * C18400 - C134 * C18402 +
              C152324 * C18403) *
                 C152084 * C117921) *
                C152246 -
            (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
             C460 * C152084 * C117918) *
                C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152242 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152249 +
            ((C110090 + C110089 + C110088) * C152084 * C101414 +
             (C112704 + C112705 + C112706) * C152084 * C152404) *
                C4993) *
               C152457 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152249 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152242 -
            ((C113406 + C113407 + C113408) * C152084 * C152404 +
             (C111404 + C111403 + C111402) * C152084 * C101414) *
                C4993) *
               C152204) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152249 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152242 -
            ((C10207 + C10208 + C10209) * C152084 * C152404 +
             (C6991 + C6990 + C6989) * C152084 * C101414) *
                C4993) *
               C152457 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152242 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152249 +
            ((C9990 + C9989 + C9988) * C152084 * C101414 +
             (C6303 * C3175 - C6304 * C3170 - C6303 * C3176 + C6298 * C3182 +
              C6305 * C9657 - C6306 * C9651 - C6305 * C9658 + C6299 * C9669 +
              C6307 * C10407 - C6308 * C10404 - C6307 * C10408 +
              C6300 * C10410) *
                 C152084 * C152404) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152242 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152249 +
            ((C101858 + C101857 + C101856) * C101414 +
             (C104370 + C104371 + C104372) * C152404) *
                C4993) *
               C152457 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152249 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152242 -
            ((C105060 + C105061 + C105062) * C152404 +
             (C103121 + C103120 + C103119) * C101414) *
                C4993) *
               C152204) *
              C3455 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152249 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152242 -
            ((C104863 + C104864 + C104865) * C152404 +
             (C101864 + C101863 + C101862) * C101414) *
                C4993) *
               C152457 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152242 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152249 +
            ((C104668 + C104667 + C104666) * C101414 +
             (C16189 * C51195 + C16190 * C51196 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C51197) *
                 C152404) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C152242 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152249 +
            (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
             C119924 * C117921) *
                C4993) *
               C152457 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152249 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C152242 -
            (C120396 * C117921 + C119067 * C117920 + C118686 * C117919 +
             C118685 * C117918) *
                C4993) *
               C152204) *
              C3455 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152249 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C152242 -
            (C120258 * C117921 + C118222 * C117920 + C118221 * C117919 +
             C118220 * C117918) *
                C4993) *
               C152457 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C152242 -
            (C120127 * C117921 + C118689 * C117920 + C118688 * C117919 +
             C118687 * C117918) *
                C152249 +
            (C118688 * C117918 + C118689 * C117919 + C120127 * C117920 +
             (C134 * C18813 - C135 * C18810 - C134 * C18814 +
              C152324 * C18816) *
                 C152084 * C117921) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C101853 + C101854 + C101855) * C152404) *
                   C4321 -
               ((C101856 + C101857 + C101858) * C152404 +
                (C101855 + C101854 + C101853) * C101414) *
                   C152246) *
                  C152141 * C152552 +
              (((C101859 + C101860 + C101861) * C101414 +
                (C101862 + C101863 + C101864) * C152404) *
                   C152246 -
               ((C101861 + C101860 + C101859) * C152404 +
                (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                   C4321) *
                  C152141 * C152545 +
              (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
                (C101865 + C101866 + C101867) * C152404) *
                   C4321 -
               ((C101868 + C101869 + C101870) * C152404 +
                (C101867 + C101866 + C101865) * C101414) *
                   C152246) *
                  C152141 * C152528 +
              (((C102259 + C102260 + C102261) * C101414 +
                (C717 * C51195 + C719 * C51196 +
                 (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                     C51197) *
                    C152404) *
                   C152246 -
               ((C102261 + C102260 + C102259) * C152404 +
                (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
                   C4321) *
                  C152141 * C152503) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                      C51195 +
                  C205 * C51196 + C206 * C51197) *
                     C101414 +
                 (C101853 + C101854 + C101855) * C152404) *
                    C4321 -
                ((C101856 + C101857 + C101858) * C152404 +
                 (C101855 + C101854 + C101853) * C101414) *
                    C152246) *
                   C152546 +
               (((C102552 + C102553 + C102554) * C101414 +
                 (C103119 + C103120 + C103121) * C152404) *
                    C152246 -
                ((C102554 + C102553 + C102552) * C152404 +
                 (C460 * C51197 + C461 * C51196 +
                  (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                      C51195) *
                     C101414) *
                    C4321) *
                   C152530 +
               ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                      C51195 +
                  C462 * C51196 + C463 * C51197) *
                     C101414 +
                 (C103122 + C103123 + C103124) * C152404) *
                    C4321 -
                ((C103125 + C103126 + C103127) * C152404 +
                 (C103124 + C103123 + C103122) * C101414) *
                    C152246) *
                   C152499) *
                  C3455 +
              ((((C101859 + C101860 + C101861) * C101414 +
                 (C101862 + C101863 + C101864) * C152404) *
                    C152246 -
                ((C101861 + C101860 + C101859) * C152404 +
                 (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                    C4321) *
                   C152546 +
               (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
                 (C102555 + C102556 + C102557) * C152404) *
                    C4321 -
                ((C104666 + C104667 + C104668) * C152404 +
                 (C102557 + C102556 + C102555) * C101414) *
                    C152246) *
                   C152530 +
               (((C103612 + C103613 + C103614) * C101414 +
                 (C15195 * C51195 + C15196 * C51196 +
                  (C134 * C1707 - C135 * C1684 - C134 * C1708 +
                   C152324 * C1720) *
                      C51197) *
                     C152404) *
                    C152246 -
                ((C103614 + C103613 + C103612) * C152404 +
                 (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                    C4321) *
                   C152499) *
                  C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152554 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152551 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C104370 + C104371 + C104372) * C152404) *
               C152538 -
           ((C104373 + C104374 + C104375) * C152404 +
            (C104372 + C104371 + C104370) * C101414) *
               C152515) *
              C152141 * C3455 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152551 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152554 -
           ((C104863 + C104864 + C104865) * C152404 +
            (C101864 + C101863 + C101862) * C101414) *
               C152538 +
           ((C104865 + C104864 + C104863) * C101414 +
            (C15465 * C51195 + C15466 * C51196 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C51197) *
                C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C4321 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C152141 * C152552 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152246 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C4321) *
              C152141 * C152545 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C4321 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152246) *
              C152141 * C152528 +
          (((C7427 + C7426 + C7425) * C152084 * C101414 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152084 * C152404) *
               C152246 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C4321 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152546 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C4321) *
               C152530 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C152084 * C101414 +
             (C111405 + C111406 + C111407) * C152084 * C152404) *
                C4321 -
            ((C111408 + C111409 + C111410) * C152084 * C152404 +
             (C111407 + C111406 + C111405) * C152084 * C101414) *
                C152246) *
               C152499) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C4321) *
               C152546 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C4321 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152530 +
           (((C8891 + C8890 + C8889) * C152084 * C101414 +
             (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
              C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
              C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C8889 + C8890 + C8891) * C152084 * C152404 +
             (C6689 + C6688 + C6687) * C152084 * C101414) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152554 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152551 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C112704 + C112705 + C112706) * C152084 * C152404) *
               C152538 -
           ((C112707 + C112708 + C112709) * C152084 * C152404 +
            (C112706 + C112705 + C112704) * C152084 * C101414) *
               C152515) *
              C152141 * C3455 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152551 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152554 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C152538 +
           ((C10209 + C10208 + C10207) * C152084 * C101414 +
            (C6303 * C2647 - C6304 * C2634 - C6303 * C2648 + C6298 * C2658 +
             C6305 * C9665 - C6306 * C9655 - C6305 * C9666 + C6299 * C9673 +
             C6307 * C9667 - C6308 * C9656 - C6307 * C9668 + C6300 * C9674) *
                C152084 * C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C4321 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152246) *
              C152141 * C152552 +
          ((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
            C118222 * C117921) *
               C152246 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C4321) *
              C152141 * C152545 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C4321 -
           (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
            C118223 * C117918) *
               C152246) *
              C152141 * C152528 +
          ((C118487 * C117918 + C118488 * C117919 + C118489 * C117920 +
            (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                C152084 * C117921) *
               C152246 -
           (C118489 * C117921 + C118488 * C117920 + C118487 * C117919 +
            C207 * C152084 * C117918) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C4321 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152246) *
               C152546 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152246 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C4321) *
               C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152084 * C117918 +
             C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
                C4321 -
            (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
             C119068 * C117918) *
                C152246) *
               C152499) *
              C3455 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152246 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C4321) *
               C152546 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C4321 -
            (C120127 * C117921 + C118689 * C117920 + C118688 * C117919 +
             C118687 * C117918) *
                C152246) *
               C152530 +
           ((C119403 * C117918 + C119404 * C117919 + C119405 * C117920 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152084 * C117921) *
                C152246 -
            (C119405 * C117921 + C119404 * C117920 + C119403 * C117919 +
             C462 * C152084 * C117918) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152554 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152551 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C119924 * C117921) *
               C152538 -
           (C119932 * C117921 + C119924 * C117920 + C118218 * C117919 +
            C118217 * C117918) *
               C152515) *
              C152141 * C3455 +
          ((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
            C118222 * C117921) *
               C152551 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152554 -
           (C120258 * C117921 + C118222 * C117920 + C118221 * C117919 +
            C118220 * C117918) *
               C152538 +
           (C118221 * C117918 + C118222 * C117919 + C120258 * C117920 +
            (C134 * C18077 - C135 * C18070 - C134 * C18078 + C152324 * C18082) *
                C152084 * C117921) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152242 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152249 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C112704 + C112705 + C112706) * C152084 * C152404) *
               C4993) *
              C152141 * C152118 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152249 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152242 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C4993) *
              C152141 * C152127 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152242 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152249 +
           ((C6997 + C6996 + C6995) * C152084 * C101414 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152084 * C152404) *
               C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152242 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152249 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C104370 + C104371 + C104372) * C152404) *
               C4993) *
              C152141 * C152118 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152249 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152242 -
           ((C104863 + C104864 + C104865) * C152404 +
            (C101864 + C101863 + C101862) * C101414) *
               C4993) *
              C152141 * C152127 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152242 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C152249 +
           ((C101870 + C101869 + C101868) * C101414 +
            (C3038 * C51195 + C3037 * C51196 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C51197) *
                C152404) *
               C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152242 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152249 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C119924 * C117921) *
               C4993) *
              C152141 * C152118 +
          ((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
            C118222 * C117921) *
               C152249 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152242 -
           (C120258 * C117921 + C118222 * C117920 + C118221 * C117919 +
            C118220 * C117918) *
               C4993) *
              C152141 * C152127 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152242 -
           (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
            C118223 * C117918) *
               C152249 +
           (C118224 * C117918 + C118225 * C117919 + C118226 * C117920 +
            (C134 * C18609 - C135 * C18608 - C134 * C18610 + C152324 * C18611) *
                C152084 * C117921) *
               C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C4321 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C152546 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C4321) *
               C152530 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C51195 +
              C462 * C51196 + C463 * C51197) *
                 C101414 +
             (C103122 + C103123 + C103124) * C152404) *
                C4321 -
            ((C103125 + C103126 + C103127) * C152404 +
             (C103124 + C103123 + C103122) * C101414) *
                C152246) *
               C152499) *
              C3455 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C4321) *
               C152546 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C4321 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152530 +
           (((C103612 + C103613 + C103614) * C101414 +
             (C15195 * C51195 + C15196 * C51196 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C103614 + C103613 + C103612) * C152404 +
             (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C4321 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152246) *
              C152141 * C152552 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152246 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C4321) *
              C152141 * C152545 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C4321 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C152246) *
              C152141 * C152528 +
          (((C102259 + C102260 + C102261) * C101414 +
            (C717 * C51195 + C719 * C51196 +
             (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                 C51197) *
                C152404) *
               C152246 -
           ((C102261 + C102260 + C102259) * C152404 +
            (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C4321 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C152141 * C152552 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152246 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C4321) *
              C152141 * C152545 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C4321 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152246) *
              C152141 * C152528 +
          (((C7427 + C7426 + C7425) * C152084 * C101414 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152084 * C152404) *
               C152246 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C4321 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152546 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C4321) *
               C152530 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C152084 * C101414 +
             (C111405 + C111406 + C111407) * C152084 * C152404) *
                C4321 -
            ((C111408 + C111409 + C111410) * C152084 * C152404 +
             (C111407 + C111406 + C111405) * C152084 * C101414) *
                C152246) *
               C152499) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C4321) *
               C152546 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C4321 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152530 +
           (((C8891 + C8890 + C8889) * C152084 * C101414 +
             (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
              C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
              C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C8889 + C8890 + C8891) * C152084 * C152404 +
             (C6689 + C6688 + C6687) * C152084 * C101414) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C4321 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152246) *
              C152141 * C152552 +
          ((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
            C118222 * C117921) *
               C152246 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C4321) *
              C152141 * C152545 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C4321 -
           (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
            C118223 * C117918) *
               C152246) *
              C152141 * C152528 +
          ((C118487 * C117918 + C118488 * C117919 + C118489 * C117920 +
            (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                C152084 * C117921) *
               C152246 -
           (C118489 * C117921 + C118488 * C117920 + C118487 * C117919 +
            C207 * C152084 * C117918) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C4321 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152246) *
               C152546 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152246 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C4321) *
               C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152084 * C117918 +
             C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
                C4321 -
            (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
             C119068 * C117918) *
                C152246) *
               C152499) *
              C3455 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152246 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C4321) *
               C152546 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C4321 -
            (C120127 * C117921 + C118689 * C117920 + C118688 * C117919 +
             C118687 * C117918) *
                C152246) *
               C152530 +
           ((C119403 * C117918 + C119404 * C117919 + C119405 * C117920 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152084 * C117921) *
                C152246 -
            (C119405 * C117921 + C119404 * C117920 + C119403 * C117919 +
             C462 * C152084 * C117918) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C1851 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C1852 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152159 * C1853 -
           ((C33866 * C51197 + C17003 * C51196 + C17506 * C51195) * C152404 +
            (C1881 * C51197 + C1882 * C51196 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C51195) *
                C101414) *
               C152159 * C152509) *
              C152443 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C1852 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C1851 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C1853 +
           ((C1882 * C51195 + C1881 * C51196 + C1880 * C51197) * C101414 +
            (C17003 * C51195 + C33866 * C51196 +
             (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                 C51197) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C152457 -
           ((C1253 * C51197 + C1252 * C51196 + C16187 * C51195) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152204) *
              C851 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C1252 * C51195 + C1253 * C51196 + C1254 * C51197) * C152404) *
               C152159 * C152204 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152457) *
              C852 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C152457 -
           ((C1255 * C51197 + C1254 * C51196 + C1253 * C51195) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152204) *
              C853 +
          (((C459 * C51195 + C465 * C51196 + C866 * C51197) * C101414 +
            (C1254 * C51195 + C1255 * C51196 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C51197) *
                C152404) *
               C152159 * C152204 -
           ((C1009 * C51197 + C718 * C51196 + C712 * C51195) * C152404 +
            (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C152457 -
           ((C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221) *
                C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152204) *
              C851 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152204 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152457) *
              C852 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152457 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152204) *
              C853 +
          (((C7212 + C7211 + C7210) * C152084 * C101414 +
            (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
             C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
             C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                C152084 * C152404) *
               C152159 * C152204 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C1851 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C1852 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152159 * C1853 -
           ((C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091 +
             C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
             C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243) *
                C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C152159 * C152509) *
              C152443 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C1852 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C1851 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C1853 +
           ((C8576 + C8575 + C8574) * C152084 * C101414 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152084 * C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C152457 -
           (C16785 * C152084 * C117921 + C16188 * C152084 * C117920 +
            C16187 * C152084 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C152204) *
              C851 +
          ((C461 * C152084 * C117918 + C1252 * C152084 * C117919 +
            C2880 * C152084 * C117920 + C16189 * C152084 * C117921) *
               C152159 * C152204 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C152457) *
              C852 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152159 * C152457 -
           (C16190 * C152084 * C117921 + C2879 * C152084 * C117920 +
            C1253 * C152084 * C117919 + C460 * C152084 * C117918) *
               C152159 * C152204) *
              C853 +
          ((C459 * C152084 * C117918 + C1254 * C152084 * C117919 +
            C2878 * C152084 * C117920 +
            (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                C152084 * C117921) *
               C152159 * C152204 -
           (C3037 * C152084 * C117921 + C717 * C152084 * C117920 +
            C712 * C152084 * C117919 + C207 * C152084 * C117918) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C1851 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C1852 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C152159 * C1853 -
           ((C134 * C10405 - C135 * C10403 - C134 * C10406 + C152324 * C10409) *
                C152084 * C117921 +
            C17507 * C152084 * C117920 + C17506 * C152084 * C117919 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152084 * C117918) *
               C152159 * C152509) *
              C152443 +
          ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
            C118689 * C117921) *
               C152159 * C1852 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C1851 -
           (C16788 * C152084 * C117921 + C15195 * C152084 * C117920 +
            C2101 * C152084 * C117919 + C462 * C152084 * C117918) *
               C152159 * C1853 +
           (C1882 * C152084 * C117918 + C17003 * C152084 * C117919 +
            C17002 * C152084 * C117920 +
            (C134 * C10407 - C135 * C10404 - C134 * C10408 + C152324 * C10410) *
                C152084 * C117921) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152458 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152246) *
              C1851 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152246 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152458) *
              C1852 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152458 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C152246) *
              C1853 +
          (((C103809 + C103810 + C103811) * C101414 +
            (C17507 * C51195 + C17002 * C51196 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C51197) *
                C152404) *
               C152246 -
           ((C103811 + C103810 + C103809) * C152404 +
            (C1881 * C51197 + C1882 * C51196 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C51195) *
                C101414) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152458 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C152457 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C16188 * C51195 + C2880 * C51196 + C2879 * C51197) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152458) *
               C152204) *
              C359 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152458) *
               C152457 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152458 -
            ((C2878 * C51197 + C2879 * C51196 + C2880 * C51195) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152204) *
              C360 +
          ((((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
             (C101865 + C101866 + C101867) * C152404) *
                C152458 -
            ((C101868 + C101869 + C101870) * C152404 +
             (C101867 + C101866 + C101865) * C101414) *
                C152246) *
               C152457 +
           (((C102558 + C102559 + C102560) * C101414 +
             (C2879 * C51195 + C2878 * C51196 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C102560 + C102559 + C102558) * C152404 +
             (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152458 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152457 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712 +
              C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
              C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352) *
                 C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152458) *
               C152204) *
              C359 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152458) *
               C152457 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152458 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152204) *
              C360 +
          ((((C6387 + C6386 + C6385) * C152084 * C101414 +
             (C6992 + C6993 + C6994) * C152084 * C152404) *
                C152458 -
            ((C6995 + C6996 + C6997) * C152084 * C152404 +
             (C6994 + C6993 + C6992) * C152084 * C101414) *
                C152246) *
               C152457 +
           (((C7759 + C7758 + C7757) * C152084 * C101414 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C7757 + C7758 + C7759) * C152084 * C152404 +
             (C6692 + C6691 + C6690) * C152084 * C101414) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152458 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C1851 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152246 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152458) *
              C1852 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152458 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152246) *
              C1853 +
          (((C112107 + C112108 + C112109) * C152084 * C101414 +
            (C6303 * C8341 - C6304 * C8334 - C6303 * C8342 + C6298 * C8352 +
             C6305 * C8347 - C6306 * C8337 - C6305 * C8348 + C6299 * C8355 +
             C6307 * C60866 - C6308 * C60865 - C6307 * C60867 +
             C6300 * C60868) *
                C152084 * C152404) *
               C152246 -
           ((C112109 + C112108 + C112107) * C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C152458 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152246) *
               C152457 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C18826 * C152084 * C117921) *
                C152246 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C152458) *
               C152204) *
              C359 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152246 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C152458) *
               C152457 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C152458 -
            (C18414 * C152084 * C117921 + C118689 * C117920 +
             C118688 * C117919 + C118687 * C117918) *
                C152246) *
               C152204) *
              C360 +
          (((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
             C118225 * C117921) *
                C152458 -
            (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
             C118223 * C117918) *
                C152246) *
               C152457 +
           ((C118690 * C117918 + C118691 * C117919 + C118692 * C117920 +
             (C134 * C18401 - C135 * C18400 - C134 * C18402 +
              C152324 * C18403) *
                 C152084 * C117921) *
                C152246 -
            (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
             C460 * C152084 * C117918) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152458 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152246) *
              C1851 +
          ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
            C119067 * C117921) *
               C152246 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152458) *
              C1852 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C152458 -
           (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
            C119068 * C117918) *
               C152246) *
              C1853 +
          ((C119536 * C117918 + C119537 * C117919 + C119545 * C117920 +
            (C134 * C61702 - C135 * C61701 - C134 * C61703 + C152324 * C61704) *
                C152084 * C117921) *
               C152246 -
           (C119545 * C117921 + C119537 * C117920 + C119536 * C117919 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152084 * C117918) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C51195 +
                C205 * C51196 + C206 * C51197) *
                   C101414 +
               (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
                  C152159 * C152141 * C129 -
              ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
               (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                  C152159 * C152141 * C130 +
              ((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
               (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
                  C152159 * C152141 * C131 -
              ((C1009 * C51197 + C718 * C51196 + C712 * C51195) * C152404 +
               (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
                  C152159 * C152141 * C132 +
              ((C208 * C51195 + C209 * C51196 + C210 * C51197) * C101414 +
               (C718 * C51195 + C1009 * C51196 +
                (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                    C51197) *
                   C152404) *
                  C152159 * C152141 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
                   C152159 * C152546 -
               ((C1253 * C51197 + C1252 * C51196 + C16187 * C51195) * C152404 +
                (C460 * C51197 + C461 * C51196 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C51195) *
                    C101414) *
                   C152159 * C152530 +
               (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C51195 +
                 C462 * C51196 + C463 * C51197) *
                    C101414 +
                (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
                   C152159 * C152499) *
                  C359 +
              (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
                (C1252 * C51195 + C1253 * C51196 + C1254 * C51197) * C152404) *
                   C152159 * C152530 -
               ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
                (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                   C152159 * C152546 -
               ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
                (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                   C152159 * C152499) *
                  C360 +
              (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
                (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
                   C152159 * C152546 -
               ((C1255 * C51197 + C1254 * C51196 + C1253 * C51195) * C152404 +
                (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                   C152159 * C152530 +
               ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
                (C2100 * C51195 + C2099 * C51196 +
                 (C134 * C2077 - C135 * C2076 - C134 * C2078 +
                  C152324 * C2079) *
                     C51197) *
                    C152404) *
                   C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152547 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152532 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
               C152502) *
              C152141 * C359 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152532 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152547 -
           ((C3037 * C51197 + C3038 * C51196 + C3039 * C51195) * C152404 +
            (C101864 + C101863 + C101862) * C101414) *
               C152502) *
              C152141 * C360 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152547 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C152532 +
           ((C101870 + C101869 + C101868) * C101414 +
            (C3038 * C51195 + C3037 * C51196 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C51197) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C1401 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C1402 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C1401 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C1401 -
           ((C102560 + C102559 + C102558) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C1402 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C101853 + C101854 + C101855) * C152404) *
              C152159 * C1489 -
          ((C102554 + C102553 + C102552) * C152404 +
           (C460 * C51197 + C461 * C51196 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C51195) *
               C101414) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C51195 +
            C462 * C51196 + C463 * C51197) *
               C101414 +
           (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
              C152159 * C1491 -
          ((C33866 * C51197 + C17003 * C51196 + C17506 * C51195) * C152404 +
           (C1881 * C51197 + C1882 * C51196 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C51195) *
               C101414) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C51195 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C51196 +
            (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                C51197) *
               C101414 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C51195 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C51196 +
            (C134 * C8867 - C135 * C8866 - C134 * C8868 + C152324 * C8869) *
                C51197) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152547 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152532 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
               C152502) *
              C1401 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152532 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152547 -
           ((C16190 * C51197 + C16189 * C51196 + C16785 * C51195) * C152404 +
            (C103121 + C103120 + C103119) * C101414) *
               C152502) *
              C1402 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152547 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C152532 +
           ((C103127 + C103126 + C103125) * C101414 +
            (C16789 * C51195 + C16788 * C51196 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C51197) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
            C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
            C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
               C152084 * C152404) *
              C152159 * C152141 * C129 -
          ((C6986 + C6987 + C6988) * C152084 * C152404 +
           (C6384 + C6383 + C6382) * C152084 * C101414) *
              C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C152084 * C101414 +
           (C6992 + C6993 + C6994) * C152084 * C152404) *
              C152159 * C152141 * C131 -
          ((C7425 + C7426 + C7427) * C152084 * C152404 +
           (C6390 + C6389 + C6388) * C152084 * C101414) *
              C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C152084 * C101414 +
           (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
            C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
            C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
               C152084 * C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
                C152084 * C152404) *
               C152159 * C152546 -
           ((C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221) *
                C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152530 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152546 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152546 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152547 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152532 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152141 * C359 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152532 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152547 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C152502) *
              C152141 * C360 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152547 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152532 +
           ((C6997 + C6996 + C6995) * C152084 * C101414 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C1401 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C1402 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C1401 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C1401 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C110085 + C110086 + C110087) * C152084 * C152404) *
              C152159 * C1489 -
          ((C110789 + C110788 + C110787) * C152084 * C152404 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C152084 * C101414) *
              C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C152084 * C101414 +
           (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
            C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
            C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
               C152084 * C152404) *
              C152159 * C1491 -
          ((C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091 +
            C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
            C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243) *
               C152084 * C152404 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C152084 * C101414) *
              C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C152084 * C101414 +
           (C6303 * C8345 - C6304 * C8336 - C6303 * C8346 + C6298 * C8354 +
            C6305 * C9087 - C6306 * C9085 - C6305 * C9088 + C6299 * C9091 +
            C6307 * C61324 - C6308 * C61323 - C6307 * C61325 + C6300 * C61326) *
               C152084 * C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152547 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152532 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C1401 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152532 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152547 -
           ((C6307 * C10405 - C6308 * C10403 - C6307 * C10406 + C6300 * C10409 +
             C6305 * C9659 - C6306 * C9652 - C6305 * C9660 + C6299 * C9670 +
             C6303 * C3173 - C6304 * C3169 - C6303 * C3174 + C6298 * C3181) *
                C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C152502) *
              C1402 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152547 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152532 +
           ((C111410 + C111409 + C111408) * C152084 * C101414 +
            (C6303 * C9659 - C6304 * C9652 - C6303 * C9660 + C6298 * C9670 +
             C6305 * C10405 - C6306 * C10403 - C6305 * C10406 + C6299 * C10409 +
             C6307 * C62160 - C6308 * C62159 - C6307 * C62161 +
             C6300 * C62162) *
                C152084 * C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
               C152084 * C117918 +
           C15462 * C152084 * C117919 + C15463 * C152084 * C117920 +
           C15464 * C152084 * C117921) *
              C152159 * C152141 * C129 -
          (C3039 * C152084 * C117921 + C715 * C152084 * C117920 +
           C714 * C152084 * C117919 + C205 * C152084 * C117918) *
              C152159 * C152141 * C130 +
          (C206 * C152084 * C117918 + C713 * C152084 * C117919 +
           C716 * C152084 * C117920 + C3038 * C152084 * C117921) *
              C152159 * C152141 * C131 -
          (C3037 * C152084 * C117921 + C717 * C152084 * C117920 +
           C712 * C152084 * C117919 + C207 * C152084 * C117918) *
              C152159 * C152141 * C132 +
          (C208 * C152084 * C117918 + C718 * C152084 * C117919 +
           C719 * C152084 * C117920 +
           (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
               C152084 * C117921) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C15462 * C152084 * C117919 + C15463 * C152084 * C117920 +
            C15464 * C152084 * C117921) *
               C152159 * C152546 -
           (C16785 * C152084 * C117921 + C16188 * C152084 * C117920 +
            C16187 * C152084 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C152530 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C16786 * C152084 * C117919 + C16787 * C152084 * C117920 +
            C16789 * C152084 * C117921) *
               C152159 * C152499) *
              C359 +
          ((C461 * C152084 * C117918 + C1252 * C152084 * C117919 +
            C2880 * C152084 * C117920 + C16189 * C152084 * C117921) *
               C152159 * C152530 -
           (C3039 * C152084 * C117921 + C715 * C152084 * C117920 +
            C714 * C152084 * C117919 + C205 * C152084 * C117918) *
               C152159 * C152546 -
           (C16788 * C152084 * C117921 + C15195 * C152084 * C117920 +
            C2101 * C152084 * C117919 + C462 * C152084 * C117918) *
               C152159 * C152499) *
              C360 +
          ((C206 * C152084 * C117918 + C713 * C152084 * C117919 +
            C716 * C152084 * C117920 + C3038 * C152084 * C117921) *
               C152159 * C152546 -
           (C16190 * C152084 * C117921 + C2879 * C152084 * C117920 +
            C1253 * C152084 * C117919 + C460 * C152084 * C117918) *
               C152159 * C152530 +
           (C463 * C152084 * C117918 + C2100 * C152084 * C117919 +
            C15196 * C152084 * C117920 +
            (C134 * C10185 - C135 * C10184 - C134 * C10186 + C152324 * C10187) *
                C152084 * C117921) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152547 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152532 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C18106 * C152084 * C117921) *
               C152502) *
              C152141 * C359 +
          ((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
            C118222 * C117921) *
               C152532 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152547 -
           (C18105 * C152084 * C117921 + C118222 * C117920 + C118221 * C117919 +
            C118220 * C117918) *
               C152502) *
              C152141 * C360 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152547 -
           (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
            C118223 * C117918) *
               C152532 +
           (C118224 * C117918 + C118225 * C117919 + C118226 * C117920 +
            (C134 * C18609 - C135 * C18608 - C134 * C18610 + C152324 * C18611) *
                C152084 * C117921) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C1401 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C1402 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C16786 * C152084 * C117919 + C16787 * C152084 * C117920 +
            C16789 * C152084 * C117921) *
               C152159 * C152499) *
              C152543 +
          ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
            C118689 * C117921) *
               C152159 * C1402 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C1401 -
           (C16788 * C152084 * C117921 + C15195 * C152084 * C117920 +
            C2101 * C152084 * C117919 + C462 * C152084 * C117918) *
               C152159 * C152499) *
              C152526 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152159 * C1401 -
           (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
            C460 * C152084 * C117918) *
               C152159 * C1402 +
           (C463 * C152084 * C117918 + C2100 * C152084 * C117919 +
            C15196 * C152084 * C117920 +
            (C134 * C10185 - C135 * C10184 - C134 * C10186 + C152324 * C10187) *
                C152084 * C117921) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
               C152084 * C117918 +
           C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
              C152159 * C1489 -
          (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
           (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
               C152084 * C117918) *
              C152159 * C1490 +
          ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
               C152084 * C117918 +
           C16786 * C152084 * C117919 + C16787 * C152084 * C117920 +
           C16789 * C152084 * C117921) *
              C152159 * C1491 -
          ((C134 * C10405 - C135 * C10403 - C134 * C10406 + C152324 * C10409) *
               C152084 * C117921 +
           C17507 * C152084 * C117920 + C17506 * C152084 * C117919 +
           (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
               C152084 * C117918) *
              C152159 * C1492 +
          ((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
               C152084 * C117918 +
           (C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
               C152084 * C117919 +
           (C134 * C8347 - C135 * C8337 - C134 * C8348 + C152324 * C8355) *
               C152084 * C117920 +
           (C134 * C62160 - C135 * C62159 - C134 * C62161 + C152324 * C62162) *
               C152084 * C117921) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152547 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152532 +
           (C118216 * C117918 + C118217 * C117919 + C118218 * C117920 +
            C18106 * C152084 * C117921) *
               C152502) *
              C1401 +
          ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
            C119067 * C117921) *
               C152532 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152547 -
           ((C134 * C18811 - C135 * C18809 - C134 * C18812 + C152324 * C18815) *
                C152084 * C117921 +
            C119067 * C117920 + C118686 * C117919 + C118685 * C117918) *
               C152502) *
              C1402 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
               C152547 -
           (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
            C119068 * C117918) *
               C152532 +
           (C119069 * C117918 + C119070 * C117919 + C119078 * C117920 +
            (C134 * C69081 - C135 * C69080 - C134 * C69082 + C152324 * C69083) *
                C152084 * C117921) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152458 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C1401 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152458) *
               C1402 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C51195 +
              C462 * C51196 + C463 * C51197) *
                 C101414 +
             (C103122 + C103123 + C103124) * C152404) *
                C152458 -
            ((C103125 + C103126 + C103127) * C152404 +
             (C103124 + C103123 + C103122) * C101414) *
                C152246) *
               C152499) *
              C152443 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152458) *
               C1401 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152458 -
            ((C2878 * C51197 + C2879 * C51196 + C2880 * C51195) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C1402 +
           (((C103612 + C103613 + C103614) * C101414 +
             (C15195 * C51195 + C15196 * C51196 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C103614 + C103613 + C103612) * C152404 +
             (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152458 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152246) *
              C152141 * C851 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152246 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152458) *
              C152141 * C852 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152458 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C152246) *
              C152141 * C853 +
          (((C102259 + C102260 + C102261) * C101414 +
            (C717 * C51195 + C719 * C51196 +
             (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                 C51197) *
                C152404) *
               C152246 -
           ((C102261 + C102260 + C102259) * C152404 +
            (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152458 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C152141 * C851 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152246 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152458) *
              C152141 * C852 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152458 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152246) *
              C152141 * C853 +
          (((C7427 + C7426 + C7425) * C152084 * C101414 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152084 * C152404) *
               C152246 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152458 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C1401 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152458) *
               C1402 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C152084 * C101414 +
             (C111405 + C111406 + C111407) * C152084 * C152404) *
                C152458 -
            ((C111408 + C111409 + C111410) * C152084 * C152404 +
             (C111407 + C111406 + C111405) * C152084 * C101414) *
                C152246) *
               C152499) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152458) *
               C1401 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152458 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C1402 +
           (((C8891 + C8890 + C8889) * C152084 * C101414 +
             (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
              C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
              C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C8889 + C8890 + C8891) * C152084 * C152404 +
             (C6689 + C6688 + C6687) * C152084 * C101414) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152458 -
           (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
            C118215 * C117918) *
               C152246) *
              C152141 * C851 +
          ((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
            C118222 * C117921) *
               C152246 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152458) *
              C152141 * C852 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152458 -
           (C118226 * C117921 + C118225 * C117920 + C118224 * C117919 +
            C118223 * C117918) *
               C152246) *
              C152141 * C853 +
          ((C118487 * C117918 + C118488 * C117919 + C118489 * C117920 +
            (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                C152084 * C117921) *
               C152246 -
           (C118489 * C117921 + C118488 * C117920 + C118487 * C117919 +
            C207 * C152084 * C117918) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152084 * C117918 +
             C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
                C152458 -
            (C118218 * C117921 + C118217 * C117920 + C118216 * C117919 +
             C118215 * C117918) *
                C152246) *
               C1401 +
           ((C118684 * C117918 + C118685 * C117919 + C118686 * C117920 +
             C119067 * C117921) *
                C152246 -
            (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152084 * C117918) *
                C152458) *
               C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152084 * C117918 +
             C119068 * C117919 + C119069 * C117920 + C119070 * C117921) *
                C152458 -
            (C119078 * C117921 + C119070 * C117920 + C119069 * C117919 +
             C119068 * C117918) *
                C152246) *
               C152499) *
              C152443 +
          (((C118219 * C117918 + C118220 * C117919 + C118221 * C117920 +
             C118222 * C117921) *
                C152246 -
            (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
             C205 * C152084 * C117918) *
                C152458) *
               C1401 +
           ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
             C118689 * C117921) *
                C152458 -
            (C18414 * C152084 * C117921 + C118689 * C117920 +
             C118688 * C117919 + C118687 * C117918) *
                C152246) *
               C1402 +
           ((C119403 * C117918 + C119404 * C117919 + C119405 * C117920 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152084 * C117921) *
                C152246 -
            (C119405 * C117921 + C119404 * C117920 + C119403 * C117919 +
             C462 * C152084 * C117918) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
               C152159 * C152546 -
           ((C1253 * C51197 + C1252 * C51196 + C16187 * C51195) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
               C152159 * C152499) *
              C359 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C1252 * C51195 + C1253 * C51196 + C1254 * C51197) * C152404) *
               C152159 * C152530 -
           ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152546 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152499) *
              C360 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
               C152159 * C152546 -
           ((C1255 * C51197 + C1254 * C51196 + C1253 * C51195) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152530 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
              C152159 * C152141 * C129 -
          ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
           (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
              C152159 * C152141 * C130 +
          ((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
           (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
              C152159 * C152141 * C131 -
          ((C1009 * C51197 + C718 * C51196 + C712 * C51195) * C152404 +
           (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
              C152159 * C152141 * C132 +
          ((C208 * C51195 + C209 * C51196 + C210 * C51197) * C101414 +
           (C718 * C51195 + C1009 * C51196 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C51197) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C1401 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C1402 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C1401 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C1401 -
           ((C102560 + C102559 + C102558) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C1402 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C101853 + C101854 + C101855) * C152404) *
              C152159 * C1489 -
          ((C102554 + C102553 + C102552) * C152404 +
           (C460 * C51197 + C461 * C51196 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C51195) *
               C101414) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C51195 +
            C462 * C51196 + C463 * C51197) *
               C101414 +
           (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
              C152159 * C1491 -
          ((C33866 * C51197 + C17003 * C51196 + C17506 * C51195) * C152404 +
           (C1881 * C51197 + C1882 * C51196 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C51195) *
               C101414) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C51195 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C51196 +
            (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                C51197) *
               C101414 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C51195 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C51196 +
            (C134 * C8867 - C135 * C8866 - C134 * C8868 + C152324 * C8869) *
                C51197) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
            C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
            C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
               C152084 * C152404) *
              C152159 * C152141 * C129 -
          ((C6986 + C6987 + C6988) * C152084 * C152404 +
           (C6384 + C6383 + C6382) * C152084 * C101414) *
              C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C152084 * C101414 +
           (C6992 + C6993 + C6994) * C152084 * C152404) *
              C152159 * C152141 * C131 -
          ((C7425 + C7426 + C7427) * C152084 * C152404 +
           (C6390 + C6389 + C6388) * C152084 * C101414) *
              C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C152084 * C101414 +
           (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
            C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
            C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
               C152084 * C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
                C152084 * C152404) *
               C152159 * C152546 -
           ((C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221) *
                C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152530 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152546 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152546 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C1401 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C1402 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C1401 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C1401 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C110085 + C110086 + C110087) * C152084 * C152404) *
              C152159 * C1489 -
          ((C110789 + C110788 + C110787) * C152084 * C152404 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C152084 * C101414) *
              C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C152084 * C101414 +
           (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
            C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
            C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
               C152084 * C152404) *
              C152159 * C1491 -
          ((C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091 +
            C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
            C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243) *
               C152084 * C152404 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C152084 * C101414) *
              C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C152084 * C101414 +
           (C6303 * C8345 - C6304 * C8336 - C6303 * C8346 + C6298 * C8354 +
            C6305 * C9087 - C6306 * C9085 - C6305 * C9088 + C6299 * C9091 +
            C6307 * C61324 - C6308 * C61323 - C6307 * C61325 + C6300 * C61326) *
               C152084 * C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
               C152084 * C117918 +
           C15462 * C152084 * C117919 + C15463 * C152084 * C117920 +
           C15464 * C152084 * C117921) *
              C152159 * C152141 * C129 -
          (C3039 * C152084 * C117921 + C715 * C152084 * C117920 +
           C714 * C152084 * C117919 + C205 * C152084 * C117918) *
              C152159 * C152141 * C130 +
          (C206 * C152084 * C117918 + C713 * C152084 * C117919 +
           C716 * C152084 * C117920 + C3038 * C152084 * C117921) *
              C152159 * C152141 * C131 -
          (C3037 * C152084 * C117921 + C717 * C152084 * C117920 +
           C712 * C152084 * C117919 + C207 * C152084 * C117918) *
              C152159 * C152141 * C132 +
          (C208 * C152084 * C117918 + C718 * C152084 * C117919 +
           C719 * C152084 * C117920 +
           (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
               C152084 * C117921) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C15462 * C152084 * C117919 + C15463 * C152084 * C117920 +
            C15464 * C152084 * C117921) *
               C152159 * C152546 -
           (C16785 * C152084 * C117921 + C16188 * C152084 * C117920 +
            C16187 * C152084 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C152530 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C16786 * C152084 * C117919 + C16787 * C152084 * C117920 +
            C16789 * C152084 * C117921) *
               C152159 * C152499) *
              C359 +
          ((C461 * C152084 * C117918 + C1252 * C152084 * C117919 +
            C2880 * C152084 * C117920 + C16189 * C152084 * C117921) *
               C152159 * C152530 -
           (C3039 * C152084 * C117921 + C715 * C152084 * C117920 +
            C714 * C152084 * C117919 + C205 * C152084 * C117918) *
               C152159 * C152546 -
           (C16788 * C152084 * C117921 + C15195 * C152084 * C117920 +
            C2101 * C152084 * C117919 + C462 * C152084 * C117918) *
               C152159 * C152499) *
              C360 +
          ((C206 * C152084 * C117918 + C713 * C152084 * C117919 +
            C716 * C152084 * C117920 + C3038 * C152084 * C117921) *
               C152159 * C152546 -
           (C16190 * C152084 * C117921 + C2879 * C152084 * C117920 +
            C1253 * C152084 * C117919 + C460 * C152084 * C117918) *
               C152159 * C152530 +
           (C463 * C152084 * C117918 + C2100 * C152084 * C117919 +
            C15196 * C152084 * C117920 +
            (C134 * C10185 - C135 * C10184 - C134 * C10186 + C152324 * C10187) *
                C152084 * C117921) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152084 * C117918 +
            C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
               C152159 * C1401 -
           (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152084 * C117918) *
               C152159 * C1402 +
           ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152084 * C117918 +
            C16786 * C152084 * C117919 + C16787 * C152084 * C117920 +
            C16789 * C152084 * C117921) *
               C152159 * C152499) *
              C152543 +
          ((C461 * C152084 * C117918 + C118687 * C117919 + C118688 * C117920 +
            C118689 * C117921) *
               C152159 * C1402 -
           (C118221 * C117921 + C118220 * C117920 + C118219 * C117919 +
            C205 * C152084 * C117918) *
               C152159 * C1401 -
           (C16788 * C152084 * C117921 + C15195 * C152084 * C117920 +
            C2101 * C152084 * C117919 + C462 * C152084 * C117918) *
               C152159 * C152499) *
              C152526 +
          ((C206 * C152084 * C117918 + C118223 * C117919 + C118224 * C117920 +
            C118225 * C117921) *
               C152159 * C1401 -
           (C118692 * C117921 + C118691 * C117920 + C118690 * C117919 +
            C460 * C152084 * C117918) *
               C152159 * C1402 +
           (C463 * C152084 * C117918 + C2100 * C152084 * C117919 +
            C15196 * C152084 * C117920 +
            (C134 * C10185 - C135 * C10184 - C134 * C10186 + C152324 * C10187) *
                C152084 * C117921) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
               C152084 * C117918 +
           C118215 * C117919 + C118216 * C117920 + C118217 * C117921) *
              C152159 * C1489 -
          (C118686 * C117921 + C118685 * C117920 + C118684 * C117919 +
           (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
               C152084 * C117918) *
              C152159 * C1490 +
          ((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
               C152084 * C117918 +
           C16786 * C152084 * C117919 + C16787 * C152084 * C117920 +
           C16789 * C152084 * C117921) *
              C152159 * C1491 -
          ((C134 * C10405 - C135 * C10403 - C134 * C10406 + C152324 * C10409) *
               C152084 * C117921 +
           C17507 * C152084 * C117920 + C17506 * C152084 * C117919 +
           (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
               C152084 * C117918) *
              C152159 * C1492 +
          ((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
               C152084 * C117918 +
           (C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
               C152084 * C117919 +
           (C134 * C8347 - C135 * C8337 - C134 * C8348 + C152324 * C8355) *
               C152084 * C117920 +
           (C134 * C62160 - C135 * C62159 - C134 * C62161 + C152324 * C62162) *
               C152084 * C117921) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[325] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C152200 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C152207 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C152159 * C3799) *
              C152118 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C135453 + C135454) * C152542 + C137569 * C134308) *
               C152159 * C152207 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C152200 -
           ((C136516 + C136515) * C134308 + (C136514 + C136513) * C152542 +
            (C463 * C152089 + C462 * C152436) * C152541) *
               C152159 * C3799) *
              C152127 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152159 * C152200 -
           ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
            (C459 * C152089 + C460 * C152436) * C152541) *
               C152159 * C152207 +
           ((C463 * C152436 + C464 * C152089) * C152541 +
            (C2100 * C152436 + C2099 * C152089) * C152542 +
            (C15196 * C152436 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C134308) *
               C152159 * C3799) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[326] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C152458 -
            (C137273 * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152246) *
               C152200 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             C137963 * C134308) *
                C152246 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C152458) *
               C152207 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C152436 +
              C462 * C152089) *
                 C152541 +
             (C136022 + C136023) * C152542 + C136028 * C134308) *
                C152458 -
            ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
             (C136023 + C136022) * C152541) *
                C152246) *
               C3799) *
              C3455 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             C137766 * C134308) *
                C152246 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C152458) *
               C152200 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + C137569 * C134308) *
                C152458 -
            ((C137570 + C137571) * C134308 + (C135456 + C135455) * C152542 +
             (C135454 + C135453) * C152541) *
                C152246) *
               C152207 +
           (((C136513 + C136514) * C152541 + (C136515 + C136516) * C152542 +
             (C16788 * C152436 + (C134 * C10185 - C135 * C10184 -
                                  C134 * C10186 + C152324 * C10187) *
                                     C152089) *
                 C134308) *
                C152246 -
            ((C136516 + C136515) * C134308 + (C136514 + C136513) * C152542 +
             (C463 * C152089 + C462 * C152436) * C152541) *
                C152458) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C152553 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C152549 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C152159 * C152535 -
           ((C136714 + C136713) * C134308 + (C136712 + C136711) * C152542 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152436) *
                C152541) *
               C152159 * C152509) *
              C3455 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C135453 + C135454) * C152542 + C137569 * C134308) *
               C152159 * C152549 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C152553 -
           ((C136516 + C136515) * C134308 + (C136514 + C136513) * C152542 +
            (C463 * C152089 + C462 * C152436) * C152541) *
               C152159 * C152535 +
           ((C1882 * C152436 + C1881 * C152089) * C152541 +
            (C17003 * C152436 + C33866 * C152089) * C152542 +
            (C17002 * C152436 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C152089) *
                C134308) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C3315 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C152204) *
              C152552 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C135453 + C135454) * C152542 + C137569 * C134308) *
               C152159 * C152204 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C3315) *
              C152545 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152159 * C3315 -
           ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
            (C459 * C152089 + C460 * C152436) * C152541) *
               C152159 * C152204) *
              C152528 +
          (((C459 * C152436 + C465 * C152089) * C152541 +
            (C1254 * C152436 + C1255 * C152089) * C152542 +
            (C2878 * C152436 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C152089) *
                C134308) *
               C152159 * C152204 -
           ((C135158 + C135157) * C134308 + (C135156 + C135155) * C152542 +
            (C208 * C152089 + C207 * C152436) * C152541) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C152547 -
            (C137273 * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152532 +
            (C134764 * C152541 + (C134751 + C134750) * C152542 +
             C137278 * C134308) *
                C152502) *
               C3315 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             C137963 * C134308) *
                C152532 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C152547 -
            ((C137964 + C137965) * C134308 + (C136020 + C136019) * C152542 +
             C136021 * C152541) *
                C152502) *
               C152204) *
              C3455 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             C137766 * C134308) *
                C152532 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C152547 -
            ((C137767 + C137768) * C134308 + (C134757 + C134756) * C152542 +
             C134765 * C152541) *
                C152502) *
               C3315 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + C137569 * C134308) *
                C152547 -
            ((C137570 + C137571) * C134308 + (C135456 + C135455) * C152542 +
             (C135454 + C135453) * C152541) *
                C152532 +
            (C137569 * C152541 + (C137571 + C137570) * C152542 +
             (C18414 * C152436 + (C134 * C18401 - C135 * C18400 -
                                  C134 * C18402 + C152324 * C18403) *
                                     C152089) *
                 C134308) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[328] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C152458 -
            (C137273 * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152246) *
               C3315 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             C137963 * C134308) *
                C152246 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C152458) *
               C152204) *
              C152118 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             C137766 * C134308) *
                C152246 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C152458) *
               C3315 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + C137569 * C134308) *
                C152458 -
            ((C137570 + C137571) * C134308 + (C135456 + C135455) * C152542 +
             (C135454 + C135453) * C152541) *
                C152246) *
               C152204) *
              C152127 +
          ((((C206 * C152436 + C207 * C152089) * C152541 +
             (C134758 + C134759) * C152542 + C134766 * C134308) *
                C152458 -
            ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
             (C134759 + C134758) * C152541) *
                C152246) *
               C3315 +
           (((C135457 + C135458) * C152541 + (C135459 + C135460) * C152542 +
             (C16190 * C152436 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C152089) *
                 C134308) *
                C152246 -
            ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
             (C459 * C152089 + C460 * C152436) * C152541) *
                C152458) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[329] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C3315 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C152204) *
              C152552 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C135453 + C135454) * C152542 + C137569 * C134308) *
               C152159 * C152204 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C3315) *
              C152545 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152159 * C3315 -
           ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
            (C459 * C152089 + C460 * C152436) * C152541) *
               C152159 * C152204) *
              C152528 +
          (((C459 * C152436 + C465 * C152089) * C152541 +
            (C1254 * C152436 + C1255 * C152089) * C152542 +
            (C2878 * C152436 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C152089) *
                C134308) *
               C152159 * C152204 -
           ((C135158 + C135157) * C134308 + (C135156 + C135155) * C152542 +
            (C208 * C152089 + C207 * C152436) * C152541) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C152553 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C152549 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C152159 * C152535 -
           ((C136714 + C136713) * C134308 + (C136712 + C136711) * C152542 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152436) *
                C152541) *
               C152159 * C152509) *
              C3455 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C135453 + C135454) * C152542 + C137569 * C134308) *
               C152159 * C152549 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C152553 -
           ((C136516 + C136515) * C134308 + (C136514 + C136513) * C152542 +
            (C463 * C152089 + C462 * C152436) * C152541) *
               C152159 * C152535 +
           ((C1882 * C152436 + C1881 * C152089) * C152541 +
            (C17003 * C152436 + C33866 * C152089) * C152542 +
            (C17002 * C152436 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C152089) *
                C134308) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[330] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C4321 -
            (C137273 * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152246) *
               C152200 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             C137963 * C134308) *
                C152246 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C4321) *
               C152207 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C152436 +
              C462 * C152089) *
                 C152541 +
             (C136022 + C136023) * C152542 + C136028 * C134308) *
                C4321 -
            ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
             (C136023 + C136022) * C152541) *
                C152246) *
               C3799) *
              C152443 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             C137766 * C134308) *
                C152246 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C4321) *
               C152200 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + C137569 * C134308) *
                C4321 -
            ((C137570 + C137571) * C134308 + (C135456 + C135455) * C152542 +
             (C135454 + C135453) * C152541) *
                C152246) *
               C152207 +
           (((C136513 + C136514) * C152541 + (C136515 + C136516) * C152542 +
             (C16788 * C152436 + (C134 * C10185 - C135 * C10184 -
                                  C134 * C10186 + C152324 * C10187) *
                                     C152089) *
                 C134308) *
                C152246 -
            ((C136516 + C136515) * C134308 + (C136514 + C136513) * C152542 +
             (C463 * C152089 + C462 * C152436) * C152541) *
                C4321) *
               C3799) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[331] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152242 -
           (C137273 * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152249 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            C137278 * C134308) *
               C4993) *
              C152200 +
          (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
            C137963 * C134308) *
               C152249 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152242 -
           ((C137964 + C137965) * C134308 + (C136020 + C136019) * C152542 +
            C136021 * C152541) *
               C4993) *
              C152207 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C152242 -
           ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
            (C136023 + C136022) * C152541) *
               C152249 +
           (C136028 * C152541 + (C136027 + C136026) * C152542 +
            (C119077 * C152436 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152089) *
                C134308) *
               C4993) *
              C3799) *
         C152113) /
        (p * q * std::sqrt(p + q));
    d2ee[332] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C4321 -
           (C137273 * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152246) *
              C152553 +
          (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
            C137963 * C134308) *
               C152246 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C4321) *
              C152549 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C4321 -
           ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
            (C136023 + C136022) * C152541) *
               C152246) *
              C152535 +
          (((C136711 + C136712) * C152541 + (C136713 + C136714) * C152542 +
            (C119544 * C152436 + (C134 * C10407 - C135 * C10404 -
                                  C134 * C10408 + C152324 * C10410) *
                                     C152089) *
                C134308) *
               C152246 -
           ((C136714 + C136713) * C134308 + (C136712 + C136711) * C152542 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152436) *
                C152541) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C4321 -
            (C137273 * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152246) *
               C3315 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             C137963 * C134308) *
                C152246 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C4321) *
               C152204) *
              C152543 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             C137766 * C134308) *
                C152246 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C4321) *
               C3315 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + C137569 * C134308) *
                C4321 -
            ((C137570 + C137571) * C134308 + (C135456 + C135455) * C152542 +
             (C135454 + C135453) * C152541) *
                C152246) *
               C152204) *
              C152526 +
          ((((C206 * C152436 + C207 * C152089) * C152541 +
             (C134758 + C134759) * C152542 + C134766 * C134308) *
                C4321 -
            ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
             (C134759 + C134758) * C152541) *
                C152246) *
               C3315 +
           (((C135457 + C135458) * C152541 + (C135459 + C135460) * C152542 +
             (C16190 * C152436 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C152089) *
                 C134308) *
                C152246 -
            ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
             (C459 * C152089 + C460 * C152436) * C152541) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152554 -
           (C137273 * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152551 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            C137278 * C134308) *
               C152538 -
           ((C137276 + C137277) * C134308 + (C137275 + C137274) * C152542 +
            C137273 * C152541) *
               C152515) *
              C3315 +
          (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
            C137963 * C134308) *
               C152551 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152554 -
           ((C137964 + C137965) * C134308 + (C136020 + C136019) * C152542 +
            C136021 * C152541) *
               C152538 +
           (C137963 * C152541 + (C137965 + C137964) * C152542 +
            (C120395 * C152436 + (C134 * C18813 - C135 * C18810 -
                                  C134 * C18814 + C152324 * C18816) *
                                     C152089) *
                C134308) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[333] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C152242 -
            (C137273 * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152249 +
            (C134764 * C152541 + (C134751 + C134750) * C152542 +
             C137278 * C134308) *
                C4993) *
               C3315 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             C137963 * C134308) *
                C152249 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C152242 -
            ((C137964 + C137965) * C134308 + (C136020 + C136019) * C152542 +
             C136021 * C152541) *
                C4993) *
               C152204) *
              C152443 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             C137766 * C134308) *
                C152249 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C152242 -
            ((C137767 + C137768) * C134308 + (C134757 + C134756) * C152542 +
             C134765 * C152541) *
                C4993) *
               C3315 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + C137569 * C134308) *
                C152242 -
            ((C137570 + C137571) * C134308 + (C135456 + C135455) * C152542 +
             (C135454 + C135453) * C152541) *
                C152249 +
            (C137569 * C152541 + (C137571 + C137570) * C152542 +
             (C18414 * C152436 + (C134 * C18401 - C135 * C18400 -
                                  C134 * C18402 + C152324 * C18403) *
                                     C152089) *
                 C134308) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[334] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C4321 -
            (C137273 * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152246) *
               C3315 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             C137963 * C134308) *
                C152246 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C4321) *
               C152204) *
              C152543 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             C137766 * C134308) *
                C152246 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C4321) *
               C3315 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + C137569 * C134308) *
                C4321 -
            ((C137570 + C137571) * C134308 + (C135456 + C135455) * C152542 +
             (C135454 + C135453) * C152541) *
                C152246) *
               C152204) *
              C152526 +
          ((((C206 * C152436 + C207 * C152089) * C152541 +
             (C134758 + C134759) * C152542 + C134766 * C134308) *
                C4321 -
            ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
             (C134759 + C134758) * C152541) *
                C152246) *
               C3315 +
           (((C135457 + C135458) * C152541 + (C135459 + C135460) * C152542 +
             (C16190 * C152436 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C152089) *
                 C134308) *
                C152246 -
            ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
             (C459 * C152089 + C460 * C152436) * C152541) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C4321 -
           (C137273 * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152246) *
              C152553 +
          (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
            C137963 * C134308) *
               C152246 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C4321) *
              C152549 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C4321 -
           ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
            (C136023 + C136022) * C152541) *
               C152246) *
              C152535 +
          (((C136711 + C136712) * C152541 + (C136713 + C136714) * C152542 +
            (C119544 * C152436 + (C134 * C10407 - C135 * C10404 -
                                  C134 * C10408 + C152324 * C10410) *
                                     C152089) *
                C134308) *
               C152246 -
           ((C136714 + C136713) * C134308 + (C136712 + C136711) * C152542 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152436) *
                C152541) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C1851 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C1852 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C152159 * C1853 -
           ((C17002 * C152089 + C17507 * C152436) * C134308 +
            (C17003 * C152089 + C17506 * C152436) * C152542 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152436) *
                C152541) *
               C152159 * C152509) *
              C152443 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C135453 + C135454) * C152542 + (C135455 + C135456) * C134308) *
               C152159 * C1852 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C1851 -
           ((C15196 * C152089 + C15195 * C152436) * C134308 +
            (C2100 * C152089 + C2101 * C152436) * C152542 +
            (C463 * C152089 + C462 * C152436) * C152541) *
               C152159 * C1853 +
           ((C1882 * C152436 + C1881 * C152089) * C152541 +
            (C17003 * C152436 + C33866 * C152089) * C152542 +
            (C17002 * C152436 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C152089) *
                C134308) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C152457 -
           ((C2880 * C152089 + C16188 * C152436) * C134308 +
            (C1252 * C152089 + C16187 * C152436) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C152204) *
              C851 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C1252 * C152436 + C1253 * C152089) * C152542 +
            (C2880 * C152436 + C2879 * C152089) * C134308) *
               C152159 * C152204 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C152457) *
              C852 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152159 * C152457 -
           ((C2878 * C152089 + C2879 * C152436) * C134308 +
            (C1254 * C152089 + C1253 * C152436) * C152542 +
            (C459 * C152089 + C460 * C152436) * C152541) *
               C152159 * C152204) *
              C853 +
          (((C459 * C152436 + C465 * C152089) * C152541 +
            (C1254 * C152436 + C1255 * C152089) * C152542 +
            (C2878 * C152436 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C152089) *
                C134308) *
               C152159 * C152204 -
           ((C719 * C152089 + C717 * C152436) * C134308 +
            (C718 * C152089 + C712 * C152436) * C152542 +
            (C208 * C152089 + C207 * C152436) * C152541) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C2393 -
            (C137273 * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C2394 +
            (C134764 * C152541 + (C134751 + C134750) * C152542 +
             C137278 * C134308) *
                C152502) *
               C152457 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             (C136019 + C136020) * C134308) *
                C2394 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C2393 -
            ((C18414 * C152089 + C18826 * C152436) * C134308 +
             (C136020 + C136019) * C152542 + C136021 * C152541) *
                C152502) *
               C152204) *
              C152443 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             (C134756 + C134757) * C134308) *
                C2394 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C2393 -
            ((C15466 * C152089 + C15465 * C152436) * C134308 +
             (C134757 + C134756) * C152542 + C134765 * C152541) *
                C152502) *
               C152457 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + C137569 * C134308) *
                C2393 -
            ((C137570 + C137571) * C134308 + (C135456 + C135455) * C152542 +
             (C135454 + C135453) * C152541) *
                C2394 +
            (C137569 * C152541 + (C137571 + C137570) * C152542 +
             (C18414 * C152436 + (C134 * C18401 - C135 * C18400 -
                                  C134 * C18402 + C152324 * C18403) *
                                     C152089) *
                 C134308) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152458 -
           ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152246) *
              C1851 +
          (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
            (C136019 + C136020) * C134308) *
               C152246 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152458) *
              C1852 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C152458 -
           ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
            (C136023 + C136022) * C152541) *
               C152246) *
              C1853 +
          (((C136711 + C136712) * C152541 + (C136713 + C136714) * C152542 +
            (C119544 * C152436 + (C134 * C10407 - C135 * C10404 -
                                  C134 * C10408 + C152324 * C10410) *
                                     C152089) *
                C134308) *
               C152246 -
           ((C136714 + C136713) * C134308 + (C136712 + C136711) * C152542 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152436) *
                C152541) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C152458 -
            ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152246) *
               C152457 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             (C16785 * C152436 + C16189 * C152089) * C134308) *
                C152246 -
            ((C135452 + C135451) * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C152458) *
               C152204) *
              C359 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             (C134756 + C134757) * C134308) *
                C152246 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C152458) *
               C152457 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + (C135455 + C135456) * C134308) *
                C152458 -
            ((C16190 * C152089 + C16189 * C152436) * C134308 +
             (C135456 + C135455) * C152542 + (C135454 + C135453) * C152541) *
                C152246) *
               C152204) *
              C360 +
          ((((C206 * C152436 + C207 * C152089) * C152541 +
             (C134758 + C134759) * C152542 + C134766 * C134308) *
                C152458 -
            ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
             (C134759 + C134758) * C152541) *
                C152246) *
               C152457 +
           (((C135457 + C135458) * C152541 + (C135459 + C135460) * C152542 +
             (C16190 * C152436 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C152089) *
                 C134308) *
                C152246 -
            ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
             (C459 * C152089 + C460 * C152436) * C152541) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C3010 -
           (C137273 * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C3011 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            C137278 * C134308) *
               C3012 -
           ((C137276 + C137277) * C134308 + (C137275 + C137274) * C152542 +
            C137273 * C152541) *
               C152515) *
              C152457 +
          (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
            C137963 * C134308) *
               C3011 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C3010 -
           ((C137964 + C137965) * C134308 + (C136020 + C136019) * C152542 +
            C136021 * C152541) *
               C3012 +
           (C137963 * C152541 + (C137965 + C137964) * C152542 +
            (C120395 * C152436 + (C134 * C18813 - C135 * C18810 -
                                  C134 * C18814 + C152324 * C18816) *
                                     C152089) *
                C134308) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C152436 +
                C205 * C152089) *
                   C152541 +
               (C15462 * C152436 + C714 * C152089) * C152542 +
               (C15463 * C152436 + C715 * C152089) * C134308) *
                  C152159 * C152141 * C129 -
              ((C716 * C152089 + C715 * C152436) * C134308 +
               (C713 * C152089 + C714 * C152436) * C152542 +
               (C206 * C152089 + C205 * C152436) * C152541) *
                  C152159 * C152141 * C130 +
              ((C206 * C152436 + C207 * C152089) * C152541 +
               (C713 * C152436 + C712 * C152089) * C152542 +
               (C716 * C152436 + C717 * C152089) * C134308) *
                  C152159 * C152141 * C131 -
              ((C719 * C152089 + C717 * C152436) * C134308 +
               (C718 * C152089 + C712 * C152436) * C152542 +
               (C208 * C152089 + C207 * C152436) * C152541) *
                  C152159 * C152141 * C132 +
              ((C208 * C152436 + C209 * C152089) * C152541 +
               (C718 * C152436 + C1009 * C152089) * C152542 +
               (C719 * C152436 +
                (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                    C152089) *
                   C134308) *
                  C152159 * C152141 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C152436 +
                 C205 * C152089) *
                    C152541 +
                (C15462 * C152436 + C714 * C152089) * C152542 +
                (C15463 * C152436 + C715 * C152089) * C134308) *
                   C152159 * C152546 -
               ((C2880 * C152089 + C16188 * C152436) * C134308 +
                (C1252 * C152089 + C16187 * C152436) * C152542 +
                (C461 * C152089 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C152436) *
                    C152541) *
                   C152159 * C152530 +
               (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C152436 +
                 C462 * C152089) *
                    C152541 +
                (C16786 * C152436 + C2101 * C152089) * C152542 +
                (C16787 * C152436 + C15195 * C152089) * C134308) *
                   C152159 * C152499) *
                  C359 +
              (((C461 * C152436 + C460 * C152089) * C152541 +
                (C1252 * C152436 + C1253 * C152089) * C152542 +
                (C2880 * C152436 + C2879 * C152089) * C134308) *
                   C152159 * C152530 -
               ((C716 * C152089 + C715 * C152436) * C134308 +
                (C713 * C152089 + C714 * C152436) * C152542 +
                (C206 * C152089 + C205 * C152436) * C152541) *
                   C152159 * C152546 -
               ((C15196 * C152089 + C15195 * C152436) * C134308 +
                (C2100 * C152089 + C2101 * C152436) * C152542 +
                (C463 * C152089 + C462 * C152436) * C152541) *
                   C152159 * C152499) *
                  C360 +
              (((C206 * C152436 + C207 * C152089) * C152541 +
                (C713 * C152436 + C712 * C152089) * C152542 +
                (C716 * C152436 + C717 * C152089) * C134308) *
                   C152159 * C152546 -
               ((C2878 * C152089 + C2879 * C152436) * C134308 +
                (C1254 * C152089 + C1253 * C152436) * C152542 +
                (C459 * C152089 + C460 * C152436) * C152541) *
                   C152159 * C152530 +
               ((C463 * C152436 + C464 * C152089) * C152541 +
                (C2100 * C152436 + C2099 * C152089) * C152542 +
                (C15196 * C152436 + (C134 * C1707 - C135 * C1684 -
                                     C134 * C1708 + C152324 * C1720) *
                                        C152089) *
                    C134308) *
                   C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152547 -
           ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152532 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            (C18104 * C152436 + C15465 * C152089) * C134308) *
               C152502) *
              C152141 * C359 +
          (((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
            (C134756 + C134757) * C134308) *
               C152532 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152547 -
           ((C15466 * C152089 + C15465 * C152436) * C134308 +
            (C134757 + C134756) * C152542 + C134765 * C152541) *
               C152502) *
              C152141 * C360 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152547 -
           ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
            (C134759 + C134758) * C152541) *
               C152532 +
           (C134766 * C152541 + (C134763 + C134762) * C152542 +
            (C15466 * C152436 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C152089) *
                C134308) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C1401 -
           ((C135452 + C135451) * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C16786 * C152436 + C2101 * C152089) * C152542 +
            (C16787 * C152436 + C15195 * C152089) * C134308) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C135453 + C135454) * C152542 + (C135455 + C135456) * C134308) *
               C152159 * C1402 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C1401 -
           ((C15196 * C152089 + C15195 * C152436) * C134308 +
            (C2100 * C152089 + C2101 * C152436) * C152542 +
            (C463 * C152089 + C462 * C152436) * C152541) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152159 * C1401 -
           ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
            (C459 * C152089 + C460 * C152436) * C152541) *
               C152159 * C1402 +
           ((C463 * C152436 + C464 * C152089) * C152541 +
            (C2100 * C152436 + C2099 * C152089) * C152542 +
            (C15196 * C152436 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152436 +
            C205 * C152089) *
               C152541 +
           (C134746 + C134747) * C152542 + C134764 * C134308) *
              C152159 * C1489 -
          ((C135452 + C135451) * C134308 + (C135450 + C135449) * C152542 +
           (C461 * C152089 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152436) *
               C152541) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152436 +
            C462 * C152089) *
               C152541 +
           (C16786 * C152436 + C2101 * C152089) * C152542 +
           (C16787 * C152436 + C15195 * C152089) * C134308) *
              C152159 * C1491 -
          ((C17002 * C152089 + C17507 * C152436) * C134308 +
           (C17003 * C152089 + C17506 * C152436) * C152542 +
           (C1882 * C152089 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152436) *
               C152541) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C152436 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C152089) *
               C152541 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C152436 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C152089) *
               C152542 +
           ((C134 * C8347 - C135 * C8337 - C134 * C8348 + C152324 * C8355) *
                C152436 +
            (C134 * C8349 - C135 * C8338 - C134 * C8350 + C152324 * C8356) *
                C152089) *
               C134308) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152547 -
           ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152532 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            (C18104 * C152436 + C15465 * C152089) * C134308) *
               C152502) *
              C1401 +
          (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
            (C136019 + C136020) * C134308) *
               C152532 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152547 -
           ((C18414 * C152089 + C18826 * C152436) * C134308 +
            (C136020 + C136019) * C152542 + C136021 * C152541) *
               C152502) *
              C1402 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C152547 -
           ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
            (C136023 + C136022) * C152541) *
               C152532 +
           (C136028 * C152541 + (C136027 + C136026) * C152542 +
            (C119077 * C152436 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152089) *
                C134308) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C2393 -
           ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C2394 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            (C18104 * C152436 + C15465 * C152089) * C134308) *
               C152502) *
              C152141 * C152543 +
          (((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
            (C134756 + C134757) * C134308) *
               C2394 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C2393 -
           ((C15466 * C152089 + C15465 * C152436) * C134308 +
            (C134757 + C134756) * C152542 + C134765 * C152541) *
               C152502) *
              C152141 * C152526 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C2393 -
           ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
            (C134759 + C134758) * C152541) *
               C2394 +
           (C134766 * C152541 + (C134763 + C134762) * C152542 +
            (C15466 * C152436 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C152089) *
                C134308) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C2393 -
           ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C2394 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            (C18104 * C152436 + C15465 * C152089) * C134308) *
               C152502) *
              C152546 +
          (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
            (C136019 + C136020) * C134308) *
               C2394 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C2393 -
           ((C18414 * C152089 + C18826 * C152436) * C134308 +
            (C136020 + C136019) * C152542 + C136021 * C152541) *
               C152502) *
              C152530 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C2393 -
           ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
            (C136023 + C136022) * C152541) *
               C2394 +
           (C136028 * C152541 + (C136027 + C136026) * C152542 +
            (C119077 * C152436 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152089) *
                C134308) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152436 +
            C205 * C152089) *
               C152541 +
           (C134746 + C134747) * C152542 + C134764 * C134308) *
              C2624 -
          (C137273 * C134308 + (C134749 + C134748) * C152542 +
           (C134747 + C134746) * C152541) *
              C2625 +
          (C134764 * C152541 + (C134751 + C134750) * C152542 +
           C137278 * C134308) *
              C2626 -
          ((C137276 + C137277) * C134308 + (C137275 + C137274) * C152542 +
           C137273 * C152541) *
              C2627 +
          (C137278 * C152541 + (C137277 + C137276) * C152542 +
           (C119931 * C152436 +
            (C134 * C18077 - C135 * C18070 - C134 * C18078 + C152324 * C18082) *
                C152089) *
               C134308) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[338] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C152458 -
            ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152246) *
               C1401 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             (C136019 + C136020) * C134308) *
                C152246 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C152458) *
               C1402 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C152436 +
              C462 * C152089) *
                 C152541 +
             (C136022 + C136023) * C152542 + C136028 * C134308) *
                C152458 -
            ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
             (C136023 + C136022) * C152541) *
                C152246) *
               C152499) *
              C152443 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             (C134756 + C134757) * C134308) *
                C152246 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C152458) *
               C1401 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + (C135455 + C135456) * C134308) *
                C152458 -
            ((C16190 * C152089 + C16189 * C152436) * C134308 +
             (C135456 + C135455) * C152542 + (C135454 + C135453) * C152541) *
                C152246) *
               C1402 +
           (((C136513 + C136514) * C152541 + (C136515 + C136516) * C152542 +
             (C16788 * C152436 + (C134 * C10185 - C135 * C10184 -
                                  C134 * C10186 + C152324 * C10187) *
                                     C152089) *
                 C134308) *
                C152246 -
            ((C136516 + C136515) * C134308 + (C136514 + C136513) * C152542 +
             (C463 * C152089 + C462 * C152436) * C152541) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152458 -
           ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152246) *
              C152141 * C851 +
          (((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
            (C134756 + C134757) * C134308) *
               C152246 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152458) *
              C152141 * C852 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152458 -
           ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
            (C134759 + C134758) * C152541) *
               C152246) *
              C152141 * C853 +
          (((C135155 + C135156) * C152541 + (C135157 + C135158) * C152542 +
            (C3037 * C152436 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C152089) *
                C134308) *
               C152246 -
           ((C135158 + C135157) * C134308 + (C135156 + C135155) * C152542 +
            (C208 * C152089 + C207 * C152436) * C152541) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C3010 -
           (C137273 * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C3011 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            C137278 * C134308) *
               C3012 -
           ((C137276 + C137277) * C134308 + (C137275 + C137274) * C152542 +
            C137273 * C152541) *
               C152515) *
              C152141 * C152443 +
          (((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
            C137766 * C134308) *
               C3011 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C3010 -
           ((C137767 + C137768) * C134308 + (C134757 + C134756) * C152542 +
            C134765 * C152541) *
               C3012 +
           (C137766 * C152541 + (C137768 + C137767) * C152542 +
            (C18105 * C152436 + (C134 * C18609 - C135 * C18608 - C134 * C18610 +
                                 C152324 * C18611) *
                                    C152089) *
                C134308) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C15462 * C152436 + C714 * C152089) * C152542 +
            (C15463 * C152436 + C715 * C152089) * C134308) *
               C152159 * C152546 -
           ((C2880 * C152089 + C16188 * C152436) * C134308 +
            (C1252 * C152089 + C16187 * C152436) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C16786 * C152436 + C2101 * C152089) * C152542 +
            (C16787 * C152436 + C15195 * C152089) * C134308) *
               C152159 * C152499) *
              C359 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C1252 * C152436 + C1253 * C152089) * C152542 +
            (C2880 * C152436 + C2879 * C152089) * C134308) *
               C152159 * C152530 -
           ((C716 * C152089 + C715 * C152436) * C134308 +
            (C713 * C152089 + C714 * C152436) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C152546 -
           ((C15196 * C152089 + C15195 * C152436) * C134308 +
            (C2100 * C152089 + C2101 * C152436) * C152542 +
            (C463 * C152089 + C462 * C152436) * C152541) *
               C152159 * C152499) *
              C360 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C713 * C152436 + C712 * C152089) * C152542 +
            (C716 * C152436 + C717 * C152089) * C134308) *
               C152159 * C152546 -
           ((C2878 * C152089 + C2879 * C152436) * C134308 +
            (C1254 * C152089 + C1253 * C152436) * C152542 +
            (C459 * C152089 + C460 * C152436) * C152541) *
               C152159 * C152530 +
           ((C463 * C152436 + C464 * C152089) * C152541 +
            (C2100 * C152436 + C2099 * C152089) * C152542 +
            (C15196 * C152436 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152436 +
            C205 * C152089) *
               C152541 +
           (C15462 * C152436 + C714 * C152089) * C152542 +
           (C15463 * C152436 + C715 * C152089) * C134308) *
              C152159 * C152141 * C129 -
          ((C716 * C152089 + C715 * C152436) * C134308 +
           (C713 * C152089 + C714 * C152436) * C152542 +
           (C206 * C152089 + C205 * C152436) * C152541) *
              C152159 * C152141 * C130 +
          ((C206 * C152436 + C207 * C152089) * C152541 +
           (C713 * C152436 + C712 * C152089) * C152542 +
           (C716 * C152436 + C717 * C152089) * C134308) *
              C152159 * C152141 * C131 -
          ((C719 * C152089 + C717 * C152436) * C134308 +
           (C718 * C152089 + C712 * C152436) * C152542 +
           (C208 * C152089 + C207 * C152436) * C152541) *
              C152159 * C152141 * C132 +
          ((C208 * C152436 + C209 * C152089) * C152541 +
           (C718 * C152436 + C1009 * C152089) * C152542 +
           (C719 * C152436 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                C152089) *
               C134308) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C1401 -
           ((C135452 + C135451) * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C16786 * C152436 + C2101 * C152089) * C152542 +
            (C16787 * C152436 + C15195 * C152089) * C134308) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C135453 + C135454) * C152542 + (C135455 + C135456) * C134308) *
               C152159 * C1402 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C1401 -
           ((C15196 * C152089 + C15195 * C152436) * C134308 +
            (C2100 * C152089 + C2101 * C152436) * C152542 +
            (C463 * C152089 + C462 * C152436) * C152541) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152159 * C1401 -
           ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
            (C459 * C152089 + C460 * C152436) * C152541) *
               C152159 * C1402 +
           ((C463 * C152436 + C464 * C152089) * C152541 +
            (C2100 * C152436 + C2099 * C152089) * C152542 +
            (C15196 * C152436 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152436 +
            C205 * C152089) *
               C152541 +
           (C134746 + C134747) * C152542 + C134764 * C134308) *
              C152159 * C1489 -
          ((C135452 + C135451) * C134308 + (C135450 + C135449) * C152542 +
           (C461 * C152089 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152436) *
               C152541) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152436 +
            C462 * C152089) *
               C152541 +
           (C16786 * C152436 + C2101 * C152089) * C152542 +
           (C16787 * C152436 + C15195 * C152089) * C134308) *
              C152159 * C1491 -
          ((C17002 * C152089 + C17507 * C152436) * C134308 +
           (C17003 * C152089 + C17506 * C152436) * C152542 +
           (C1882 * C152089 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152436) *
               C152541) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C152436 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C152089) *
               C152541 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C152436 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C152089) *
               C152542 +
           ((C134 * C8347 - C135 * C8337 - C134 * C8348 + C152324 * C8355) *
                C152436 +
            (C134 * C8349 - C135 * C8338 - C134 * C8350 + C152324 * C8356) *
                C152089) *
               C134308) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C2393 -
           ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C2394 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            (C18104 * C152436 + C15465 * C152089) * C134308) *
               C152502) *
              C152141 * C152543 +
          (((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
            (C134756 + C134757) * C134308) *
               C2394 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C2393 -
           ((C15466 * C152089 + C15465 * C152436) * C134308 +
            (C134757 + C134756) * C152542 + C134765 * C152541) *
               C152502) *
              C152141 * C152526 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C2393 -
           ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
            (C134759 + C134758) * C152541) *
               C2394 +
           (C134766 * C152541 + (C134763 + C134762) * C152542 +
            (C15466 * C152436 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C152089) *
                C134308) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C2393 -
           ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C2394 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            (C18104 * C152436 + C15465 * C152089) * C134308) *
               C152502) *
              C152546 +
          (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
            (C136019 + C136020) * C134308) *
               C2394 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C2393 -
           ((C18414 * C152089 + C18826 * C152436) * C134308 +
            (C136020 + C136019) * C152542 + C136021 * C152541) *
               C152502) *
              C152530 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C2393 -
           ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
            (C136023 + C136022) * C152541) *
               C2394 +
           (C136028 * C152541 + (C136027 + C136026) * C152542 +
            (C119077 * C152436 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152089) *
                C134308) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[340] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C4321 -
            (C137273 * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152246) *
               C152457 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             C137963 * C134308) *
                C152246 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C4321) *
               C152204) *
              C152118 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             C137766 * C134308) *
                C152246 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C4321) *
               C152457 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + C137569 * C134308) *
                C4321 -
            ((C137570 + C137571) * C134308 + (C135456 + C135455) * C152542 +
             (C135454 + C135453) * C152541) *
                C152246) *
               C152204) *
              C152127 +
          ((((C206 * C152436 + C207 * C152089) * C152541 +
             (C134758 + C134759) * C152542 + C134766 * C134308) *
                C4321 -
            ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
             (C134759 + C134758) * C152541) *
                C152246) *
               C152457 +
           (((C135457 + C135458) * C152541 + (C135459 + C135460) * C152542 +
             (C16190 * C152436 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C152089) *
                 C134308) *
                C152246 -
            ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
             (C459 * C152089 + C460 * C152436) * C152541) *
                C4321) *
               C152204) *
              C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[341] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C152242 -
            (C137273 * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152249 +
            (C134764 * C152541 + (C134751 + C134750) * C152542 +
             C137278 * C134308) *
                C4993) *
               C152457 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             C137963 * C134308) *
                C152249 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C152242 -
            ((C137964 + C137965) * C134308 + (C136020 + C136019) * C152542 +
             C136021 * C152541) *
                C4993) *
               C152204) *
              C3455 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             C137766 * C134308) *
                C152249 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C152242 -
            ((C137767 + C137768) * C134308 + (C134757 + C134756) * C152542 +
             C134765 * C152541) *
                C4993) *
               C152457 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + C137569 * C134308) *
                C152242 -
            ((C137570 + C137571) * C134308 + (C135456 + C135455) * C152542 +
             (C135454 + C135453) * C152541) *
                C152249 +
            (C137569 * C152541 + (C137571 + C137570) * C152542 +
             (C18414 * C152436 + (C134 * C18401 - C135 * C18400 -
                                  C134 * C18402 + C152324 * C18403) *
                                     C152089) *
                 C134308) *
                C4993) *
               C152204) *
              C152124)) /
        (p * q * std::sqrt(p + q));
    d2ee[342] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C4321 -
            (C137273 * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152246) *
               C152546 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             C137963 * C134308) *
                C152246 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C4321) *
               C152530 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C152436 +
              C462 * C152089) *
                 C152541 +
             (C136022 + C136023) * C152542 + C136028 * C134308) *
                C4321 -
            ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
             (C136023 + C136022) * C152541) *
                C152246) *
               C152499) *
              C3455 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             C137766 * C134308) *
                C152246 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C4321) *
               C152546 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + C137569 * C134308) *
                C4321 -
            ((C137570 + C137571) * C134308 + (C135456 + C135455) * C152542 +
             (C135454 + C135453) * C152541) *
                C152246) *
               C152530 +
           (((C136513 + C136514) * C152541 + (C136515 + C136516) * C152542 +
             (C16788 * C152436 + (C134 * C10185 - C135 * C10184 -
                                  C134 * C10186 + C152324 * C10187) *
                                     C152089) *
                 C134308) *
                C152246 -
            ((C136516 + C136515) * C134308 + (C136514 + C136513) * C152542 +
             (C463 * C152089 + C462 * C152436) * C152541) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C4321 -
           (C137273 * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152246) *
              C152141 * C152552 +
          (((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
            C137766 * C134308) *
               C152246 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C4321) *
              C152141 * C152545 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C4321 -
           ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
            (C134759 + C134758) * C152541) *
               C152246) *
              C152141 * C152528 +
          (((C135155 + C135156) * C152541 + (C135157 + C135158) * C152542 +
            (C3037 * C152436 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C152089) *
                C134308) *
               C152246 -
           ((C135158 + C135157) * C134308 + (C135156 + C135155) * C152542 +
            (C208 * C152089 + C207 * C152436) * C152541) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152554 -
           (C137273 * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152551 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            C137278 * C134308) *
               C152538 -
           ((C137276 + C137277) * C134308 + (C137275 + C137274) * C152542 +
            C137273 * C152541) *
               C152515) *
              C152141 * C3455 +
          (((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
            C137766 * C134308) *
               C152551 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152554 -
           ((C137767 + C137768) * C134308 + (C134757 + C134756) * C152542 +
            C134765 * C152541) *
               C152538 +
           (C137766 * C152541 + (C137768 + C137767) * C152542 +
            (C18105 * C152436 + (C134 * C18609 - C135 * C18608 - C134 * C18610 +
                                 C152324 * C18611) *
                                    C152089) *
                C134308) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[343] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152242 -
           (C137273 * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152249 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            C137278 * C134308) *
               C4993) *
              C152141 * C152118 +
          (((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
            C137766 * C134308) *
               C152249 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152242 -
           ((C137767 + C137768) * C134308 + (C134757 + C134756) * C152542 +
            C134765 * C152541) *
               C4993) *
              C152141 * C152127 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152242 -
           ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
            (C134759 + C134758) * C152541) *
               C152249 +
           (C134766 * C152541 + (C134763 + C134762) * C152542 +
            (C15466 * C152436 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C152089) *
                C134308) *
               C4993) *
              C152141 * C3802)) /
        (p * q * std::sqrt(p + q));
    d2ee[344] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C4321 -
           (C137273 * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152246) *
              C152141 * C152552 +
          (((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
            C137766 * C134308) *
               C152246 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C4321) *
              C152141 * C152545 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C4321 -
           ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
            (C134759 + C134758) * C152541) *
               C152246) *
              C152141 * C152528 +
          (((C135155 + C135156) * C152541 + (C135157 + C135158) * C152542 +
            (C3037 * C152436 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C152089) *
                C134308) *
               C152246 -
           ((C135158 + C135157) * C134308 + (C135156 + C135155) * C152542 +
            (C208 * C152089 + C207 * C152436) * C152541) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C4321 -
            (C137273 * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152246) *
               C152546 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             C137963 * C134308) *
                C152246 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C4321) *
               C152530 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C152436 +
              C462 * C152089) *
                 C152541 +
             (C136022 + C136023) * C152542 + C136028 * C134308) *
                C4321 -
            ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
             (C136023 + C136022) * C152541) *
                C152246) *
               C152499) *
              C3455 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             C137766 * C134308) *
                C152246 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C4321) *
               C152546 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + C137569 * C134308) *
                C4321 -
            ((C137570 + C137571) * C134308 + (C135456 + C135455) * C152542 +
             (C135454 + C135453) * C152541) *
                C152246) *
               C152530 +
           (((C136513 + C136514) * C152541 + (C136515 + C136516) * C152542 +
             (C16788 * C152436 + (C134 * C10185 - C135 * C10184 -
                                  C134 * C10186 + C152324 * C10187) *
                                     C152089) *
                 C134308) *
                C152246 -
            ((C136516 + C136515) * C134308 + (C136514 + C136513) * C152542 +
             (C463 * C152089 + C462 * C152436) * C152541) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[345] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C152457 -
           ((C2880 * C152089 + C16188 * C152436) * C134308 +
            (C1252 * C152089 + C16187 * C152436) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C152204) *
              C851 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C1252 * C152436 + C1253 * C152089) * C152542 +
            (C2880 * C152436 + C2879 * C152089) * C134308) *
               C152159 * C152204 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C152457) *
              C852 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152159 * C152457 -
           ((C2878 * C152089 + C2879 * C152436) * C134308 +
            (C1254 * C152089 + C1253 * C152436) * C152542 +
            (C459 * C152089 + C460 * C152436) * C152541) *
               C152159 * C152204) *
              C853 +
          (((C459 * C152436 + C465 * C152089) * C152541 +
            (C1254 * C152436 + C1255 * C152089) * C152542 +
            (C2878 * C152436 +
             (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                 C152089) *
                C134308) *
               C152159 * C152204 -
           ((C719 * C152089 + C717 * C152436) * C134308 +
            (C718 * C152089 + C712 * C152436) * C152542 +
            (C208 * C152089 + C207 * C152436) * C152541) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C1851 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C1852 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C152159 * C1853 -
           ((C17002 * C152089 + C17507 * C152436) * C134308 +
            (C17003 * C152089 + C17506 * C152436) * C152542 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152436) *
                C152541) *
               C152159 * C152509) *
              C152443 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C135453 + C135454) * C152542 + (C135455 + C135456) * C134308) *
               C152159 * C1852 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C1851 -
           ((C15196 * C152089 + C15195 * C152436) * C134308 +
            (C2100 * C152089 + C2101 * C152436) * C152542 +
            (C463 * C152089 + C462 * C152436) * C152541) *
               C152159 * C1853 +
           ((C1882 * C152436 + C1881 * C152089) * C152541 +
            (C17003 * C152436 + C33866 * C152089) * C152542 +
            (C17002 * C152436 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C152089) *
                C134308) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[346] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C152458 -
            ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152246) *
               C152457 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             (C16785 * C152436 + C16189 * C152089) * C134308) *
                C152246 -
            ((C135452 + C135451) * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C152458) *
               C152204) *
              C359 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             (C134756 + C134757) * C134308) *
                C152246 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C152458) *
               C152457 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + (C135455 + C135456) * C134308) *
                C152458 -
            ((C16190 * C152089 + C16189 * C152436) * C134308 +
             (C135456 + C135455) * C152542 + (C135454 + C135453) * C152541) *
                C152246) *
               C152204) *
              C360 +
          ((((C206 * C152436 + C207 * C152089) * C152541 +
             (C134758 + C134759) * C152542 + C134766 * C134308) *
                C152458 -
            ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
             (C134759 + C134758) * C152541) *
                C152246) *
               C152457 +
           (((C135457 + C135458) * C152541 + (C135459 + C135460) * C152542 +
             (C16190 * C152436 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C152089) *
                 C134308) *
                C152246 -
            ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
             (C459 * C152089 + C460 * C152436) * C152541) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152458 -
           ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152246) *
              C1851 +
          (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
            (C136019 + C136020) * C134308) *
               C152246 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152458) *
              C1852 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C152458 -
           ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
            (C136023 + C136022) * C152541) *
               C152246) *
              C1853 +
          (((C136711 + C136712) * C152541 + (C136713 + C136714) * C152542 +
            (C119544 * C152436 + (C134 * C10407 - C135 * C10404 -
                                  C134 * C10408 + C152324 * C10410) *
                                     C152089) *
                C134308) *
               C152246 -
           ((C136714 + C136713) * C134308 + (C136712 + C136711) * C152542 +
            (C1882 * C152089 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C152436) *
                C152541) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C15462 * C152436 + C714 * C152089) * C152542 +
            (C15463 * C152436 + C715 * C152089) * C134308) *
               C152159 * C152546 -
           ((C2880 * C152089 + C16188 * C152436) * C134308 +
            (C1252 * C152089 + C16187 * C152436) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C16786 * C152436 + C2101 * C152089) * C152542 +
            (C16787 * C152436 + C15195 * C152089) * C134308) *
               C152159 * C152499) *
              C359 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C1252 * C152436 + C1253 * C152089) * C152542 +
            (C2880 * C152436 + C2879 * C152089) * C134308) *
               C152159 * C152530 -
           ((C716 * C152089 + C715 * C152436) * C134308 +
            (C713 * C152089 + C714 * C152436) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C152546 -
           ((C15196 * C152089 + C15195 * C152436) * C134308 +
            (C2100 * C152089 + C2101 * C152436) * C152542 +
            (C463 * C152089 + C462 * C152436) * C152541) *
               C152159 * C152499) *
              C360 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C713 * C152436 + C712 * C152089) * C152542 +
            (C716 * C152436 + C717 * C152089) * C134308) *
               C152159 * C152546 -
           ((C2878 * C152089 + C2879 * C152436) * C134308 +
            (C1254 * C152089 + C1253 * C152436) * C152542 +
            (C459 * C152089 + C460 * C152436) * C152541) *
               C152159 * C152530 +
           ((C463 * C152436 + C464 * C152089) * C152541 +
            (C2100 * C152436 + C2099 * C152089) * C152542 +
            (C15196 * C152436 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152436 +
            C205 * C152089) *
               C152541 +
           (C15462 * C152436 + C714 * C152089) * C152542 +
           (C15463 * C152436 + C715 * C152089) * C134308) *
              C152159 * C152141 * C129 -
          ((C716 * C152089 + C715 * C152436) * C134308 +
           (C713 * C152089 + C714 * C152436) * C152542 +
           (C206 * C152089 + C205 * C152436) * C152541) *
              C152159 * C152141 * C130 +
          ((C206 * C152436 + C207 * C152089) * C152541 +
           (C713 * C152436 + C712 * C152089) * C152542 +
           (C716 * C152436 + C717 * C152089) * C134308) *
              C152159 * C152141 * C131 -
          ((C719 * C152089 + C717 * C152436) * C134308 +
           (C718 * C152089 + C712 * C152436) * C152542 +
           (C208 * C152089 + C207 * C152436) * C152541) *
              C152159 * C152141 * C132 +
          ((C208 * C152436 + C209 * C152089) * C152541 +
           (C718 * C152436 + C1009 * C152089) * C152542 +
           (C719 * C152436 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                C152089) *
               C134308) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152547 -
           ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152532 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            (C18104 * C152436 + C15465 * C152089) * C134308) *
               C152502) *
              C152141 * C359 +
          (((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
            (C134756 + C134757) * C134308) *
               C152532 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152547 -
           ((C15466 * C152089 + C15465 * C152436) * C134308 +
            (C134757 + C134756) * C152542 + C134765 * C152541) *
               C152502) *
              C152141 * C360 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152547 -
           ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
            (C134759 + C134758) * C152541) *
               C152532 +
           (C134766 * C152541 + (C134763 + C134762) * C152542 +
            (C15466 * C152436 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C152089) *
                C134308) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C1401 -
           ((C135452 + C135451) * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C16786 * C152436 + C2101 * C152089) * C152542 +
            (C16787 * C152436 + C15195 * C152089) * C134308) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C135453 + C135454) * C152542 + (C135455 + C135456) * C134308) *
               C152159 * C1402 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C1401 -
           ((C15196 * C152089 + C15195 * C152436) * C134308 +
            (C2100 * C152089 + C2101 * C152436) * C152542 +
            (C463 * C152089 + C462 * C152436) * C152541) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152159 * C1401 -
           ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
            (C459 * C152089 + C460 * C152436) * C152541) *
               C152159 * C1402 +
           ((C463 * C152436 + C464 * C152089) * C152541 +
            (C2100 * C152436 + C2099 * C152089) * C152542 +
            (C15196 * C152436 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152436 +
            C205 * C152089) *
               C152541 +
           (C134746 + C134747) * C152542 + C134764 * C134308) *
              C152159 * C1489 -
          ((C135452 + C135451) * C134308 + (C135450 + C135449) * C152542 +
           (C461 * C152089 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152436) *
               C152541) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152436 +
            C462 * C152089) *
               C152541 +
           (C16786 * C152436 + C2101 * C152089) * C152542 +
           (C16787 * C152436 + C15195 * C152089) * C134308) *
              C152159 * C1491 -
          ((C17002 * C152089 + C17507 * C152436) * C134308 +
           (C17003 * C152089 + C17506 * C152436) * C152542 +
           (C1882 * C152089 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152436) *
               C152541) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C152436 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C152089) *
               C152541 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C152436 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C152089) *
               C152542 +
           ((C134 * C8347 - C135 * C8337 - C134 * C8348 + C152324 * C8355) *
                C152436 +
            (C134 * C8349 - C135 * C8338 - C134 * C8350 + C152324 * C8356) *
                C152089) *
               C134308) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152547 -
           ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152532 +
           (C134764 * C152541 + (C134751 + C134750) * C152542 +
            (C18104 * C152436 + C15465 * C152089) * C134308) *
               C152502) *
              C1401 +
          (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
            (C136019 + C136020) * C134308) *
               C152532 -
           (C136021 * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152547 -
           ((C18414 * C152089 + C18826 * C152436) * C134308 +
            (C136020 + C136019) * C152542 + C136021 * C152541) *
               C152502) *
              C1402 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C136022 + C136023) * C152542 + C136028 * C134308) *
               C152547 -
           ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
            (C136023 + C136022) * C152541) *
               C152532 +
           (C136028 * C152541 + (C136027 + C136026) * C152542 +
            (C119077 * C152436 +
             (C134 * C9667 - C135 * C9656 - C134 * C9668 + C152324 * C9674) *
                 C152089) *
                C134308) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[348] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152458 -
           ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
            (C134747 + C134746) * C152541) *
               C152246) *
              C152141 * C851 +
          (((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
            (C134756 + C134757) * C134308) *
               C152246 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152458) *
              C152141 * C852 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152458 -
           ((C134762 + C134763) * C134308 + (C134761 + C134760) * C152542 +
            (C134759 + C134758) * C152541) *
               C152246) *
              C152141 * C853 +
          (((C135155 + C135156) * C152541 + (C135157 + C135158) * C152542 +
            (C3037 * C152436 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C152089) *
                C134308) *
               C152246 -
           ((C135158 + C135157) * C134308 + (C135156 + C135155) * C152542 +
            (C208 * C152089 + C207 * C152436) * C152541) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C152436 +
              C205 * C152089) *
                 C152541 +
             (C134746 + C134747) * C152542 + C134764 * C134308) *
                C152458 -
            ((C134750 + C134751) * C134308 + (C134749 + C134748) * C152542 +
             (C134747 + C134746) * C152541) *
                C152246) *
               C1401 +
           (((C135449 + C135450) * C152541 + (C135451 + C135452) * C152542 +
             (C136019 + C136020) * C134308) *
                C152246 -
            (C136021 * C134308 + (C135450 + C135449) * C152542 +
             (C461 * C152089 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C152436) *
                 C152541) *
                C152458) *
               C1402 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C152436 +
              C462 * C152089) *
                 C152541 +
             (C136022 + C136023) * C152542 + C136028 * C134308) *
                C152458 -
            ((C136026 + C136027) * C134308 + (C136025 + C136024) * C152542 +
             (C136023 + C136022) * C152541) *
                C152246) *
               C152499) *
              C152443 +
          ((((C134752 + C134753) * C152541 + (C134754 + C134755) * C152542 +
             (C134756 + C134757) * C134308) *
                C152246 -
            (C134765 * C134308 + (C134753 + C134752) * C152542 +
             (C206 * C152089 + C205 * C152436) * C152541) *
                C152458) *
               C1401 +
           (((C461 * C152436 + C460 * C152089) * C152541 +
             (C135453 + C135454) * C152542 + (C135455 + C135456) * C134308) *
                C152458 -
            ((C16190 * C152089 + C16189 * C152436) * C134308 +
             (C135456 + C135455) * C152542 + (C135454 + C135453) * C152541) *
                C152246) *
               C1402 +
           (((C136513 + C136514) * C152541 + (C136515 + C136516) * C152542 +
             (C16788 * C152436 + (C134 * C10185 - C135 * C10184 -
                                  C134 * C10186 + C152324 * C10187) *
                                     C152089) *
                 C134308) *
                C152246 -
            ((C136516 + C136515) * C134308 + (C136514 + C136513) * C152542 +
             (C463 * C152089 + C462 * C152436) * C152541) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152436 +
            C205 * C152089) *
               C152541 +
           (C15462 * C152436 + C714 * C152089) * C152542 +
           (C15463 * C152436 + C715 * C152089) * C134308) *
              C152159 * C152141 * C129 -
          ((C716 * C152089 + C715 * C152436) * C134308 +
           (C713 * C152089 + C714 * C152436) * C152542 +
           (C206 * C152089 + C205 * C152436) * C152541) *
              C152159 * C152141 * C130 +
          ((C206 * C152436 + C207 * C152089) * C152541 +
           (C713 * C152436 + C712 * C152089) * C152542 +
           (C716 * C152436 + C717 * C152089) * C134308) *
              C152159 * C152141 * C131 -
          ((C719 * C152089 + C717 * C152436) * C134308 +
           (C718 * C152089 + C712 * C152436) * C152542 +
           (C208 * C152089 + C207 * C152436) * C152541) *
              C152159 * C152141 * C132 +
          ((C208 * C152436 + C209 * C152089) * C152541 +
           (C718 * C152436 + C1009 * C152089) * C152542 +
           (C719 * C152436 +
            (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                C152089) *
               C134308) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C15462 * C152436 + C714 * C152089) * C152542 +
            (C15463 * C152436 + C715 * C152089) * C134308) *
               C152159 * C152546 -
           ((C2880 * C152089 + C16188 * C152436) * C134308 +
            (C1252 * C152089 + C16187 * C152436) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C16786 * C152436 + C2101 * C152089) * C152542 +
            (C16787 * C152436 + C15195 * C152089) * C134308) *
               C152159 * C152499) *
              C359 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C1252 * C152436 + C1253 * C152089) * C152542 +
            (C2880 * C152436 + C2879 * C152089) * C134308) *
               C152159 * C152530 -
           ((C716 * C152089 + C715 * C152436) * C134308 +
            (C713 * C152089 + C714 * C152436) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C152546 -
           ((C15196 * C152089 + C15195 * C152436) * C134308 +
            (C2100 * C152089 + C2101 * C152436) * C152542 +
            (C463 * C152089 + C462 * C152436) * C152541) *
               C152159 * C152499) *
              C360 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C713 * C152436 + C712 * C152089) * C152542 +
            (C716 * C152436 + C717 * C152089) * C134308) *
               C152159 * C152546 -
           ((C2878 * C152089 + C2879 * C152436) * C134308 +
            (C1254 * C152089 + C1253 * C152436) * C152542 +
            (C459 * C152089 + C460 * C152436) * C152541) *
               C152159 * C152530 +
           ((C463 * C152436 + C464 * C152089) * C152541 +
            (C2100 * C152436 + C2099 * C152089) * C152542 +
            (C15196 * C152436 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C152436 +
             C205 * C152089) *
                C152541 +
            (C134746 + C134747) * C152542 + C134764 * C134308) *
               C152159 * C1401 -
           ((C135452 + C135451) * C134308 + (C135450 + C135449) * C152542 +
            (C461 * C152089 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C152436) *
                C152541) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C152436 +
             C462 * C152089) *
                C152541 +
            (C16786 * C152436 + C2101 * C152089) * C152542 +
            (C16787 * C152436 + C15195 * C152089) * C134308) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C152436 + C460 * C152089) * C152541 +
            (C135453 + C135454) * C152542 + (C135455 + C135456) * C134308) *
               C152159 * C1402 -
           (C134765 * C134308 + (C134753 + C134752) * C152542 +
            (C206 * C152089 + C205 * C152436) * C152541) *
               C152159 * C1401 -
           ((C15196 * C152089 + C15195 * C152436) * C134308 +
            (C2100 * C152089 + C2101 * C152436) * C152542 +
            (C463 * C152089 + C462 * C152436) * C152541) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C152436 + C207 * C152089) * C152541 +
            (C134758 + C134759) * C152542 + C134766 * C134308) *
               C152159 * C1401 -
           ((C135460 + C135459) * C134308 + (C135458 + C135457) * C152542 +
            (C459 * C152089 + C460 * C152436) * C152541) *
               C152159 * C1402 +
           ((C463 * C152436 + C464 * C152089) * C152541 +
            (C2100 * C152436 + C2099 * C152089) * C152542 +
            (C15196 * C152436 +
             (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                 C152089) *
                C134308) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C152436 +
            C205 * C152089) *
               C152541 +
           (C134746 + C134747) * C152542 + C134764 * C134308) *
              C152159 * C1489 -
          ((C135452 + C135451) * C134308 + (C135450 + C135449) * C152542 +
           (C461 * C152089 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C152436) *
               C152541) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C152436 +
            C462 * C152089) *
               C152541 +
           (C16786 * C152436 + C2101 * C152089) * C152542 +
           (C16787 * C152436 + C15195 * C152089) * C134308) *
              C152159 * C1491 -
          ((C17002 * C152089 + C17507 * C152436) * C134308 +
           (C17003 * C152089 + C17506 * C152436) * C152542 +
           (C1882 * C152089 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C152436) *
               C152541) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C152436 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C152089) *
               C152541 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C152436 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C152089) *
               C152542 +
           ((C134 * C8347 - C135 * C8337 - C134 * C8348 + C152324 * C8355) *
                C152436 +
            (C134 * C8349 - C135 * C8338 - C134 * C8350 + C152324 * C8356) *
                C152089) *
               C134308) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C152200 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152207 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152159 * C3799) *
              C152118 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C152207 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152200 -
           ((C103614 + C103613 + C103612) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C3799) *
              C152127 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C152200 -
           ((C102560 + C102559 + C102558) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152207 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C152200 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152207 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152159 * C3799) *
              C152118 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152207 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152200 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C3799) *
              C152127 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152200 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152207 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C3799) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152458 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C152200 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152458) *
               C152207 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C51195 +
              C462 * C51196 + C463 * C51197) *
                 C101414 +
             (C103122 + C103123 + C103124) * C152404) *
                C152458 -
            ((C103125 + C103126 + C103127) * C152404 +
             (C103124 + C103123 + C103122) * C101414) *
                C152246) *
               C3799) *
              C3455 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152458) *
               C152200 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152458 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152207 +
           (((C103612 + C103613 + C103614) * C101414 +
             (C15195 * C51195 + C15196 * C51196 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C103614 + C103613 + C103612) * C152404 +
             (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152458 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152200 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152458) *
               C152207 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C152084 * C101414 +
             (C111405 + C111406 + C111407) * C152084 * C152404) *
                C152458 -
            ((C111408 + C111409 + C111410) * C152084 * C152404 +
             (C111407 + C111406 + C111405) * C152084 * C101414) *
                C152246) *
               C3799) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152458) *
               C152200 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152458 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152207 +
           (((C8891 + C8890 + C8889) * C152084 * C101414 +
             (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
              C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
              C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C8889 + C8890 + C8891) * C152084 * C152404 +
             (C6689 + C6688 + C6687) * C152084 * C101414) *
                C152458) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C152553 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152549 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152159 * C152535 -
           ((C103811 + C103810 + C103809) * C152404 +
            (C1881 * C51197 + C1882 * C51196 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C51195) *
                C101414) *
               C152159 * C152509) *
              C3455 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C152549 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152553 -
           ((C103614 + C103613 + C103612) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152535 +
           ((C1882 * C51195 + C1881 * C51196 + C1880 * C51197) * C101414 +
            (C17003 * C51195 + C33866 * C51196 +
             (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                 C51197) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C3315 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152204) *
              C152552 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C152204 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C3315) *
              C152545 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C3315 -
           ((C102560 + C102559 + C102558) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152204) *
              C152528 +
          (((C459 * C51195 + C465 * C51196 + C866 * C51197) * C101414 +
            (C1254 * C51195 + C1255 * C51196 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C51197) *
                C152404) *
               C152159 * C152204 -
           ((C102261 + C102260 + C102259) * C152404 +
            (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152547 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152532 +
            ((C101858 + C101857 + C101856) * C101414 +
             (C104370 + C104371 + C104372) * C152404) *
                C152502) *
               C3315 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152532 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152547 -
            ((C105060 + C105061 + C105062) * C152404 +
             (C103121 + C103120 + C103119) * C101414) *
                C152502) *
               C152204) *
              C3455 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152532 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152547 -
            ((C104863 + C104864 + C104865) * C152404 +
             (C101864 + C101863 + C101862) * C101414) *
                C152502) *
               C3315 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152547 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152532 +
            ((C104668 + C104667 + C104666) * C101414 +
             (C16189 * C51195 + C16190 * C51196 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C51197) *
                 C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C3315 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152204) *
              C152552 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152204 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C3315) *
              C152545 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C3315 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152204) *
              C152528 +
          (((C7212 + C7211 + C7210) * C152084 * C101414 +
            (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
             C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
             C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                C152084 * C152404) *
               C152159 * C152204 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C152553 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152549 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152159 * C152535 -
           ((C112109 + C112108 + C112107) * C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C152159 * C152509) *
              C3455 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152549 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152553 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152535 +
           ((C8576 + C8575 + C8574) * C152084 * C101414 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152084 * C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152547 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152532 +
            ((C110090 + C110089 + C110088) * C152084 * C101414 +
             (C112704 + C112705 + C112706) * C152084 * C152404) *
                C152502) *
               C3315 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152532 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152547 -
            ((C113406 + C113407 + C113408) * C152084 * C152404 +
             (C111404 + C111403 + C111402) * C152084 * C101414) *
                C152502) *
               C152204) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152532 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152547 -
            ((C10207 + C10208 + C10209) * C152084 * C152404 +
             (C6991 + C6990 + C6989) * C152084 * C101414) *
                C152502) *
               C3315 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152547 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152532 +
            ((C9990 + C9989 + C9988) * C152084 * C101414 +
             (C6303 * C3175 - C6304 * C3170 - C6303 * C3176 + C6298 * C3182 +
              C6305 * C9657 - C6306 * C9651 - C6305 * C9658 + C6299 * C9669 +
              C6307 * C10407 - C6308 * C10404 - C6307 * C10408 +
              C6300 * C10410) *
                 C152084 * C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152458 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C3315 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152458) *
               C152204) *
              C152118 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152458) *
               C3315 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152458 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152204) *
              C152127 +
          ((((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
             (C101865 + C101866 + C101867) * C152404) *
                C152458 -
            ((C101868 + C101869 + C101870) * C152404 +
             (C101867 + C101866 + C101865) * C101414) *
                C152246) *
               C3315 +
           (((C102558 + C102559 + C102560) * C101414 +
             (C2879 * C51195 + C2878 * C51196 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C102560 + C102559 + C102558) * C152404 +
             (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152458 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C3315 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152458) *
               C152204) *
              C152118 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152458) *
               C3315 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152458 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152204) *
              C152127 +
          ((((C6387 + C6386 + C6385) * C152084 * C101414 +
             (C6992 + C6993 + C6994) * C152084 * C152404) *
                C152458 -
            ((C6995 + C6996 + C6997) * C152084 * C152404 +
             (C6994 + C6993 + C6992) * C152084 * C101414) *
                C152246) *
               C3315 +
           (((C7759 + C7758 + C7757) * C152084 * C101414 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C7757 + C7758 + C7759) * C152084 * C152404 +
             (C6692 + C6691 + C6690) * C152084 * C101414) *
                C152458) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C3315 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152204) *
              C152552 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C152204 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C3315) *
              C152545 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C3315 -
           ((C102560 + C102559 + C102558) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152204) *
              C152528 +
          (((C459 * C51195 + C465 * C51196 + C866 * C51197) * C101414 +
            (C1254 * C51195 + C1255 * C51196 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C51197) *
                C152404) *
               C152159 * C152204 -
           ((C102261 + C102260 + C102259) * C152404 +
            (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C152553 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152549 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152159 * C152535 -
           ((C103811 + C103810 + C103809) * C152404 +
            (C1881 * C51197 + C1882 * C51196 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C51195) *
                C101414) *
               C152159 * C152509) *
              C3455 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C152549 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152553 -
           ((C103614 + C103613 + C103612) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152535 +
           ((C1882 * C51195 + C1881 * C51196 + C1880 * C51197) * C101414 +
            (C17003 * C51195 + C33866 * C51196 +
             (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                 C51197) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C3315 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152204) *
              C152552 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152204 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C3315) *
              C152545 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C3315 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152204) *
              C152528 +
          (((C7212 + C7211 + C7210) * C152084 * C101414 +
            (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
             C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
             C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                C152084 * C152404) *
               C152159 * C152204 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C152159 * C3315) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C152553 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152549 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152159 * C152535 -
           ((C112109 + C112108 + C112107) * C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C152159 * C152509) *
              C3455 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152549 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152553 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152535 +
           ((C8576 + C8575 + C8574) * C152084 * C101414 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152084 * C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C4321 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C152200 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C4321) *
               C152207 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C51195 +
              C462 * C51196 + C463 * C51197) *
                 C101414 +
             (C103122 + C103123 + C103124) * C152404) *
                C4321 -
            ((C103125 + C103126 + C103127) * C152404 +
             (C103124 + C103123 + C103122) * C101414) *
                C152246) *
               C3799) *
              C152443 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C4321) *
               C152200 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C4321 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152207 +
           (((C103612 + C103613 + C103614) * C101414 +
             (C15195 * C51195 + C15196 * C51196 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C103614 + C103613 + C103612) * C152404 +
             (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C4321 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152200 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C4321) *
               C152207 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C152084 * C101414 +
             (C111405 + C111406 + C111407) * C152084 * C152404) *
                C4321 -
            ((C111408 + C111409 + C111410) * C152084 * C152404 +
             (C111407 + C111406 + C111405) * C152084 * C101414) *
                C152246) *
               C3799) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C4321) *
               C152200 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C4321 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152207 +
           (((C8891 + C8890 + C8889) * C152084 * C101414 +
             (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
              C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
              C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C8889 + C8890 + C8891) * C152084 * C152404 +
             (C6689 + C6688 + C6687) * C152084 * C101414) *
                C4321) *
               C3799) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152242 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152249 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C104370 + C104371 + C104372) * C152404) *
               C4993) *
              C152200 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152249 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152242 -
           ((C105060 + C105061 + C105062) * C152404 +
            (C103121 + C103120 + C103119) * C101414) *
               C4993) *
              C152207 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152242 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C152249 +
           ((C103127 + C103126 + C103125) * C101414 +
            (C16789 * C51195 + C16788 * C51196 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C51197) *
                C152404) *
               C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152242 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152249 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C112704 + C112705 + C112706) * C152084 * C152404) *
               C4993) *
              C152200 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152249 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152242 -
           ((C113406 + C113407 + C113408) * C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C4993) *
              C152207 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152242 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152249 +
           ((C111410 + C111409 + C111408) * C152084 * C101414 +
            (C6303 * C9659 - C6304 * C9652 - C6303 * C9660 + C6298 * C9670 +
             C6305 * C10405 - C6306 * C10403 - C6305 * C10406 + C6299 * C10409 +
             C6307 * C62160 - C6308 * C62159 - C6307 * C62161 +
             C6300 * C62162) *
                C152084 * C152404) *
               C4993) *
              C3799) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C4321 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152246) *
              C152553 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152246 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C4321) *
              C152549 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C4321 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C152246) *
              C152535 +
          (((C103809 + C103810 + C103811) * C101414 +
            (C17507 * C51195 + C17002 * C51196 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C51197) *
                C152404) *
               C152246 -
           ((C103811 + C103810 + C103809) * C152404 +
            (C1881 * C51197 + C1882 * C51196 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C51195) *
                C101414) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C4321 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C3315 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C4321) *
               C152204) *
              C152543 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C4321) *
               C3315 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C4321 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152204) *
              C152526 +
          ((((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
             (C101865 + C101866 + C101867) * C152404) *
                C4321 -
            ((C101868 + C101869 + C101870) * C152404 +
             (C101867 + C101866 + C101865) * C101414) *
                C152246) *
               C3315 +
           (((C102558 + C102559 + C102560) * C101414 +
             (C2879 * C51195 + C2878 * C51196 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C102560 + C102559 + C102558) * C152404 +
             (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152554 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152551 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C104370 + C104371 + C104372) * C152404) *
               C152538 -
           ((C104373 + C104374 + C104375) * C152404 +
            (C104372 + C104371 + C104370) * C101414) *
               C152515) *
              C3315 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152551 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152554 -
           ((C105060 + C105061 + C105062) * C152404 +
            (C103121 + C103120 + C103119) * C101414) *
               C152538 +
           ((C105062 + C105061 + C105060) * C101414 +
            (C18826 * C51195 + C18414 * C51196 +
             (C134 * C18401 - C135 * C18400 - C134 * C18402 +
              C152324 * C18403) *
                 C51197) *
                C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C4321 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C3315 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C4321) *
               C152204) *
              C152543 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C4321) *
               C3315 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C4321 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152204) *
              C152526 +
          ((((C6387 + C6386 + C6385) * C152084 * C101414 +
             (C6992 + C6993 + C6994) * C152084 * C152404) *
                C4321 -
            ((C6995 + C6996 + C6997) * C152084 * C152404 +
             (C6994 + C6993 + C6992) * C152084 * C101414) *
                C152246) *
               C3315 +
           (((C7759 + C7758 + C7757) * C152084 * C101414 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C7757 + C7758 + C7759) * C152084 * C152404 +
             (C6692 + C6691 + C6690) * C152084 * C101414) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C4321 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C152553 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152246 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C4321) *
              C152549 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C4321 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152246) *
              C152535 +
          (((C112107 + C112108 + C112109) * C152084 * C101414 +
            (C6303 * C8341 - C6304 * C8334 - C6303 * C8342 + C6298 * C8352 +
             C6305 * C8347 - C6306 * C8337 - C6305 * C8348 + C6299 * C8355 +
             C6307 * C60866 - C6308 * C60865 - C6307 * C60867 +
             C6300 * C60868) *
                C152084 * C152404) *
               C152246 -
           ((C112109 + C112108 + C112107) * C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152554 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152551 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C112704 + C112705 + C112706) * C152084 * C152404) *
               C152538 -
           ((C112707 + C112708 + C112709) * C152084 * C152404 +
            (C112706 + C112705 + C112704) * C152084 * C101414) *
               C152515) *
              C3315 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152551 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152554 -
           ((C113406 + C113407 + C113408) * C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C152538 +
           ((C113408 + C113407 + C113406) * C152084 * C101414 +
            (C6303 * C9661 - C6304 * C9653 - C6303 * C9662 + C6298 * C9671 +
             C6305 * C9663 - C6306 * C9654 - C6305 * C9664 + C6299 * C9672 +
             C6307 * C61702 - C6308 * C61701 - C6307 * C61703 +
             C6300 * C61704) *
                C152084 * C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152242 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152249 +
            ((C101858 + C101857 + C101856) * C101414 +
             (C104370 + C104371 + C104372) * C152404) *
                C4993) *
               C3315 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152249 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152242 -
            ((C105060 + C105061 + C105062) * C152404 +
             (C103121 + C103120 + C103119) * C101414) *
                C4993) *
               C152204) *
              C152443 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152249 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152242 -
            ((C104863 + C104864 + C104865) * C152404 +
             (C101864 + C101863 + C101862) * C101414) *
                C4993) *
               C3315 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152242 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152249 +
            ((C104668 + C104667 + C104666) * C101414 +
             (C16189 * C51195 + C16190 * C51196 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C51197) *
                 C152404) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152242 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152249 +
            ((C110090 + C110089 + C110088) * C152084 * C101414 +
             (C112704 + C112705 + C112706) * C152084 * C152404) *
                C4993) *
               C3315 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152249 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152242 -
            ((C113406 + C113407 + C113408) * C152084 * C152404 +
             (C111404 + C111403 + C111402) * C152084 * C101414) *
                C4993) *
               C152204) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152249 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152242 -
            ((C10207 + C10208 + C10209) * C152084 * C152404 +
             (C6991 + C6990 + C6989) * C152084 * C101414) *
                C4993) *
               C3315 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152242 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152249 +
            ((C9990 + C9989 + C9988) * C152084 * C101414 +
             (C6303 * C3175 - C6304 * C3170 - C6303 * C3176 + C6298 * C3182 +
              C6305 * C9657 - C6306 * C9651 - C6305 * C9658 + C6299 * C9669 +
              C6307 * C10407 - C6308 * C10404 - C6307 * C10408 +
              C6300 * C10410) *
                 C152084 * C152404) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C4321 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C3315 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C4321) *
               C152204) *
              C152543 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C4321) *
               C3315 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C4321 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152204) *
              C152526 +
          ((((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
             (C101865 + C101866 + C101867) * C152404) *
                C4321 -
            ((C101868 + C101869 + C101870) * C152404 +
             (C101867 + C101866 + C101865) * C101414) *
                C152246) *
               C3315 +
           (((C102558 + C102559 + C102560) * C101414 +
             (C2879 * C51195 + C2878 * C51196 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C102560 + C102559 + C102558) * C152404 +
             (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C4321 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152246) *
              C152553 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152246 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C4321) *
              C152549 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C4321 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C152246) *
              C152535 +
          (((C103809 + C103810 + C103811) * C101414 +
            (C17507 * C51195 + C17002 * C51196 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C51197) *
                C152404) *
               C152246 -
           ((C103811 + C103810 + C103809) * C152404 +
            (C1881 * C51197 + C1882 * C51196 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C51195) *
                C101414) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C4321 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C3315 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C4321) *
               C152204) *
              C152543 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C4321) *
               C3315 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C4321 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152204) *
              C152526 +
          ((((C6387 + C6386 + C6385) * C152084 * C101414 +
             (C6992 + C6993 + C6994) * C152084 * C152404) *
                C4321 -
            ((C6995 + C6996 + C6997) * C152084 * C152404 +
             (C6994 + C6993 + C6992) * C152084 * C101414) *
                C152246) *
               C3315 +
           (((C7759 + C7758 + C7757) * C152084 * C101414 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C7757 + C7758 + C7759) * C152084 * C152404 +
             (C6692 + C6691 + C6690) * C152084 * C101414) *
                C4321) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C4321 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C152553 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152246 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C4321) *
              C152549 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C4321 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152246) *
              C152535 +
          (((C112107 + C112108 + C112109) * C152084 * C101414 +
            (C6303 * C8341 - C6304 * C8334 - C6303 * C8342 + C6298 * C8352 +
             C6305 * C8347 - C6306 * C8337 - C6305 * C8348 + C6299 * C8355 +
             C6307 * C60866 - C6308 * C60865 - C6307 * C60867 +
             C6300 * C60868) *
                C152084 * C152404) *
               C152246 -
           ((C112109 + C112108 + C112107) * C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C4321) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C1851 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C1852 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152159 * C1853 -
           ((C33866 * C51197 + C17003 * C51196 + C17506 * C51195) * C152404 +
            (C1881 * C51197 + C1882 * C51196 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C51195) *
                C101414) *
               C152159 * C152509) *
              C152443 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C1852 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C1851 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C1853 +
           ((C1882 * C51195 + C1881 * C51196 + C1880 * C51197) * C101414 +
            (C17003 * C51195 + C33866 * C51196 +
             (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                 C51197) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C152457 -
           ((C1253 * C51197 + C1252 * C51196 + C16187 * C51195) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152204) *
              C851 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C1252 * C51195 + C1253 * C51196 + C1254 * C51197) * C152404) *
               C152159 * C152204 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152457) *
              C852 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C152457 -
           ((C1255 * C51197 + C1254 * C51196 + C1253 * C51195) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152204) *
              C853 +
          (((C459 * C51195 + C465 * C51196 + C866 * C51197) * C101414 +
            (C1254 * C51195 + C1255 * C51196 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C51197) *
                C152404) *
               C152159 * C152204 -
           ((C1009 * C51197 + C718 * C51196 + C712 * C51195) * C152404 +
            (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C2393 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C2394 +
            ((C101858 + C101857 + C101856) * C101414 +
             (C104370 + C104371 + C104372) * C152404) *
                C152502) *
               C152457 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C2394 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C2393 -
            ((C16190 * C51197 + C16189 * C51196 + C16785 * C51195) * C152404 +
             (C103121 + C103120 + C103119) * C101414) *
                C152502) *
               C152204) *
              C152443 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C2394 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C2393 -
            ((C3037 * C51197 + C3038 * C51196 + C3039 * C51195) * C152404 +
             (C101864 + C101863 + C101862) * C101414) *
                C152502) *
               C152457 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C2393 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C2394 +
            ((C104668 + C104667 + C104666) * C101414 +
             (C16189 * C51195 + C16190 * C51196 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C51197) *
                 C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C152457 -
           ((C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221) *
                C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152204) *
              C851 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152204 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152457) *
              C852 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152457 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152204) *
              C853 +
          (((C7212 + C7211 + C7210) * C152084 * C101414 +
            (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
             C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
             C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                C152084 * C152404) *
               C152159 * C152204 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C1851 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C1852 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152159 * C1853 -
           ((C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091 +
             C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
             C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243) *
                C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C152159 * C152509) *
              C152443 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C1852 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C1851 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C1853 +
           ((C8576 + C8575 + C8574) * C152084 * C101414 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152084 * C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C2393 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C2394 +
            ((C110090 + C110089 + C110088) * C152084 * C101414 +
             (C112704 + C112705 + C112706) * C152084 * C152404) *
                C152502) *
               C152457 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C2394 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C2393 -
            ((C6307 * C10405 - C6308 * C10403 - C6307 * C10406 +
              C6300 * C10409 + C6305 * C9659 - C6306 * C9652 - C6305 * C9660 +
              C6299 * C9670 + C6303 * C3173 - C6304 * C3169 - C6303 * C3174 +
              C6298 * C3181) *
                 C152084 * C152404 +
             (C111404 + C111403 + C111402) * C152084 * C101414) *
                C152502) *
               C152204) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C2394 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C2393 -
            ((C10207 + C10208 + C10209) * C152084 * C152404 +
             (C6991 + C6990 + C6989) * C152084 * C101414) *
                C152502) *
               C152457 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C2393 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C2394 +
            ((C9990 + C9989 + C9988) * C152084 * C101414 +
             (C6303 * C3175 - C6304 * C3170 - C6303 * C3176 + C6298 * C3182 +
              C6305 * C9657 - C6306 * C9651 - C6305 * C9658 + C6299 * C9669 +
              C6307 * C10407 - C6308 * C10404 - C6307 * C10408 +
              C6300 * C10410) *
                 C152084 * C152404) *
                C152502) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152458 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152246) *
              C1851 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152246 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152458) *
              C1852 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152458 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C152246) *
              C1853 +
          (((C103809 + C103810 + C103811) * C101414 +
            (C17507 * C51195 + C17002 * C51196 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C51197) *
                C152404) *
               C152246 -
           ((C103811 + C103810 + C103809) * C152404 +
            (C1881 * C51197 + C1882 * C51196 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C51195) *
                C101414) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152458 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C152457 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C16188 * C51195 + C2880 * C51196 + C2879 * C51197) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152458) *
               C152204) *
              C359 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152458) *
               C152457 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152458 -
            ((C2878 * C51197 + C2879 * C51196 + C2880 * C51195) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152204) *
              C360 +
          ((((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
             (C101865 + C101866 + C101867) * C152404) *
                C152458 -
            ((C101868 + C101869 + C101870) * C152404 +
             (C101867 + C101866 + C101865) * C101414) *
                C152246) *
               C152457 +
           (((C102558 + C102559 + C102560) * C101414 +
             (C2879 * C51195 + C2878 * C51196 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C102560 + C102559 + C102558) * C152404 +
             (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C3010 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C3011 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C104370 + C104371 + C104372) * C152404) *
               C3012 -
           ((C104373 + C104374 + C104375) * C152404 +
            (C104372 + C104371 + C104370) * C101414) *
               C152515) *
              C152457 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C3011 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C3010 -
           ((C105060 + C105061 + C105062) * C152404 +
            (C103121 + C103120 + C103119) * C101414) *
               C3012 +
           ((C105062 + C105061 + C105060) * C101414 +
            (C18826 * C51195 + C18414 * C51196 +
             (C134 * C18401 - C135 * C18400 - C134 * C18402 +
              C152324 * C18403) *
                 C51197) *
                C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152458 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152457 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712 +
              C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
              C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352) *
                 C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152458) *
               C152204) *
              C359 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152458) *
               C152457 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152458 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152204) *
              C360 +
          ((((C6387 + C6386 + C6385) * C152084 * C101414 +
             (C6992 + C6993 + C6994) * C152084 * C152404) *
                C152458 -
            ((C6995 + C6996 + C6997) * C152084 * C152404 +
             (C6994 + C6993 + C6992) * C152084 * C101414) *
                C152246) *
               C152457 +
           (((C7759 + C7758 + C7757) * C152084 * C101414 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C7757 + C7758 + C7759) * C152084 * C152404 +
             (C6692 + C6691 + C6690) * C152084 * C101414) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152458 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C1851 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152246 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152458) *
              C1852 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152458 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152246) *
              C1853 +
          (((C112107 + C112108 + C112109) * C152084 * C101414 +
            (C6303 * C8341 - C6304 * C8334 - C6303 * C8342 + C6298 * C8352 +
             C6305 * C8347 - C6306 * C8337 - C6305 * C8348 + C6299 * C8355 +
             C6307 * C60866 - C6308 * C60865 - C6307 * C60867 +
             C6300 * C60868) *
                C152084 * C152404) *
               C152246 -
           ((C112109 + C112108 + C112107) * C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C3010 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C3011 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C112704 + C112705 + C112706) * C152084 * C152404) *
               C3012 -
           ((C112707 + C112708 + C112709) * C152084 * C152404 +
            (C112706 + C112705 + C112704) * C152084 * C101414) *
               C152515) *
              C152457 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C3011 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C3010 -
           ((C113406 + C113407 + C113408) * C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C3012 +
           ((C113408 + C113407 + C113406) * C152084 * C101414 +
            (C6303 * C9661 - C6304 * C9653 - C6303 * C9662 + C6298 * C9671 +
             C6305 * C9663 - C6306 * C9654 - C6305 * C9664 + C6299 * C9672 +
             C6307 * C61702 - C6308 * C61701 - C6307 * C61703 +
             C6300 * C61704) *
                C152084 * C152404) *
               C152515) *
              C152204) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                    C51195 +
                C205 * C51196 + C206 * C51197) *
                   C101414 +
               (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
                  C152159 * C152141 * C129 -
              ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
               (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                  C152159 * C152141 * C130 +
              ((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
               (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
                  C152159 * C152141 * C131 -
              ((C1009 * C51197 + C718 * C51196 + C712 * C51195) * C152404 +
               (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
                  C152159 * C152141 * C132 +
              ((C208 * C51195 + C209 * C51196 + C210 * C51197) * C101414 +
               (C718 * C51195 + C1009 * C51196 +
                (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                    C51197) *
                   C152404) *
                  C152159 * C152141 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                     C51195 +
                 C205 * C51196 + C206 * C51197) *
                    C101414 +
                (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
                   C152159 * C152546 -
               ((C1253 * C51197 + C1252 * C51196 + C16187 * C51195) * C152404 +
                (C460 * C51197 + C461 * C51196 +
                 (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                     C51195) *
                    C101414) *
                   C152159 * C152530 +
               (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                     C51195 +
                 C462 * C51196 + C463 * C51197) *
                    C101414 +
                (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
                   C152159 * C152499) *
                  C359 +
              (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
                (C1252 * C51195 + C1253 * C51196 + C1254 * C51197) * C152404) *
                   C152159 * C152530 -
               ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
                (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                   C152159 * C152546 -
               ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
                (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                   C152159 * C152499) *
                  C360 +
              (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
                (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
                   C152159 * C152546 -
               ((C1255 * C51197 + C1254 * C51196 + C1253 * C51195) * C152404 +
                (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                   C152159 * C152530 +
               ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
                (C2100 * C51195 + C2099 * C51196 +
                 (C134 * C2077 - C135 * C2076 - C134 * C2078 +
                  C152324 * C2079) *
                     C51197) *
                    C152404) *
                   C152159 * C152499) *
                  C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152547 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152532 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
               C152502) *
              C152141 * C359 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152532 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152547 -
           ((C3037 * C51197 + C3038 * C51196 + C3039 * C51195) * C152404 +
            (C101864 + C101863 + C101862) * C101414) *
               C152502) *
              C152141 * C360 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152547 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C152532 +
           ((C101870 + C101869 + C101868) * C101414 +
            (C3038 * C51195 + C3037 * C51196 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C51197) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C1401 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C1402 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C1401 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C1401 -
           ((C102560 + C102559 + C102558) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C1402 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C101853 + C101854 + C101855) * C152404) *
              C152159 * C1489 -
          ((C102554 + C102553 + C102552) * C152404 +
           (C460 * C51197 + C461 * C51196 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C51195) *
               C101414) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C51195 +
            C462 * C51196 + C463 * C51197) *
               C101414 +
           (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
              C152159 * C1491 -
          ((C33866 * C51197 + C17003 * C51196 + C17506 * C51195) * C152404 +
           (C1881 * C51197 + C1882 * C51196 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C51195) *
               C101414) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C51195 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C51196 +
            (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                C51197) *
               C101414 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C51195 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C51196 +
            (C134 * C8867 - C135 * C8866 - C134 * C8868 + C152324 * C8869) *
                C51197) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152547 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152532 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
               C152502) *
              C1401 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152532 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152547 -
           ((C16190 * C51197 + C16189 * C51196 + C16785 * C51195) * C152404 +
            (C103121 + C103120 + C103119) * C101414) *
               C152502) *
              C1402 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152547 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C152532 +
           ((C103127 + C103126 + C103125) * C101414 +
            (C16789 * C51195 + C16788 * C51196 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C51197) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C2393 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C2394 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C2394 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C2393 -
           ((C3037 * C51197 + C3038 * C51196 + C3039 * C51195) * C152404 +
            (C101864 + C101863 + C101862) * C101414) *
               C152502) *
              C152141 * C152526 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C2393 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C2394 +
           ((C101870 + C101869 + C101868) * C101414 +
            (C3038 * C51195 + C3037 * C51196 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C51197) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C2393 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C2394 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
               C152502) *
              C152546 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C2394 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C2393 -
           ((C16190 * C51197 + C16189 * C51196 + C16785 * C51195) * C152404 +
            (C103121 + C103120 + C103119) * C101414) *
               C152502) *
              C152530 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C2393 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C2394 +
           ((C103127 + C103126 + C103125) * C101414 +
            (C16789 * C51195 + C16788 * C51196 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C51197) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C101853 + C101854 + C101855) * C152404) *
              C2624 -
          ((C101856 + C101857 + C101858) * C152404 +
           (C101855 + C101854 + C101853) * C101414) *
              C2625 +
          ((C101858 + C101857 + C101856) * C101414 +
           (C104370 + C104371 + C104372) * C152404) *
              C2626 -
          ((C104373 + C104374 + C104375) * C152404 +
           (C104372 + C104371 + C104370) * C101414) *
              C2627 +
          ((C104375 + C104374 + C104373) * C101414 +
           (C18106 * C51195 + C18105 * C51196 +
            (C134 * C18609 - C135 * C18608 - C134 * C18610 + C152324 * C18611) *
                C51197) *
               C152404) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
            C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
            C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
               C152084 * C152404) *
              C152159 * C152141 * C129 -
          ((C6986 + C6987 + C6988) * C152084 * C152404 +
           (C6384 + C6383 + C6382) * C152084 * C101414) *
              C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C152084 * C101414 +
           (C6992 + C6993 + C6994) * C152084 * C152404) *
              C152159 * C152141 * C131 -
          ((C7425 + C7426 + C7427) * C152084 * C152404 +
           (C6390 + C6389 + C6388) * C152084 * C101414) *
              C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C152084 * C101414 +
           (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
            C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
            C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
               C152084 * C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
                C152084 * C152404) *
               C152159 * C152546 -
           ((C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221) *
                C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152530 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152546 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152546 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152547 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152532 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152141 * C359 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152532 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152547 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C152502) *
              C152141 * C360 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152547 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152532 +
           ((C6997 + C6996 + C6995) * C152084 * C101414 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C1401 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C1402 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C1401 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C1401 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C110085 + C110086 + C110087) * C152084 * C152404) *
              C152159 * C1489 -
          ((C110789 + C110788 + C110787) * C152084 * C152404 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C152084 * C101414) *
              C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C152084 * C101414 +
           (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
            C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
            C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
               C152084 * C152404) *
              C152159 * C1491 -
          ((C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091 +
            C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
            C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243) *
               C152084 * C152404 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C152084 * C101414) *
              C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C152084 * C101414 +
           (C6303 * C8345 - C6304 * C8336 - C6303 * C8346 + C6298 * C8354 +
            C6305 * C9087 - C6306 * C9085 - C6305 * C9088 + C6299 * C9091 +
            C6307 * C61324 - C6308 * C61323 - C6307 * C61325 + C6300 * C61326) *
               C152084 * C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152547 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152532 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C1401 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152532 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152547 -
           ((C6307 * C10405 - C6308 * C10403 - C6307 * C10406 + C6300 * C10409 +
             C6305 * C9659 - C6306 * C9652 - C6305 * C9660 + C6299 * C9670 +
             C6303 * C3173 - C6304 * C3169 - C6303 * C3174 + C6298 * C3181) *
                C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C152502) *
              C1402 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152547 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152532 +
           ((C111410 + C111409 + C111408) * C152084 * C101414 +
            (C6303 * C9659 - C6304 * C9652 - C6303 * C9660 + C6298 * C9670 +
             C6305 * C10405 - C6306 * C10403 - C6305 * C10406 + C6299 * C10409 +
             C6307 * C62160 - C6308 * C62159 - C6307 * C62161 +
             C6300 * C62162) *
                C152084 * C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C2393 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C2394 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C2394 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C2393 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C152502) *
              C152141 * C152526 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C2393 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C2394 +
           ((C6997 + C6996 + C6995) * C152084 * C101414 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C2393 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C2394 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152546 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C2394 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C2393 -
           ((C6307 * C10405 - C6308 * C10403 - C6307 * C10406 + C6300 * C10409 +
             C6305 * C9659 - C6306 * C9652 - C6305 * C9660 + C6299 * C9670 +
             C6303 * C3173 - C6304 * C3169 - C6303 * C3174 + C6298 * C3181) *
                C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C152502) *
              C152530 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C2393 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C2394 +
           ((C111410 + C111409 + C111408) * C152084 * C101414 +
            (C6303 * C9659 - C6304 * C9652 - C6303 * C9660 + C6298 * C9670 +
             C6305 * C10405 - C6306 * C10403 - C6305 * C10406 + C6299 * C10409 +
             C6307 * C62160 - C6308 * C62159 - C6307 * C62161 +
             C6300 * C62162) *
                C152084 * C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C110085 + C110086 + C110087) * C152084 * C152404) *
              C2624 -
          ((C110088 + C110089 + C110090) * C152084 * C152404 +
           (C110087 + C110086 + C110085) * C152084 * C101414) *
              C2625 +
          ((C110090 + C110089 + C110088) * C152084 * C101414 +
           (C112704 + C112705 + C112706) * C152084 * C152404) *
              C2626 -
          ((C112707 + C112708 + C112709) * C152084 * C152404 +
           (C112706 + C112705 + C112704) * C152084 * C101414) *
              C2627 +
          ((C112709 + C112708 + C112707) * C152084 * C101414 +
           (C6303 * C18073 - C6304 * C18068 - C6303 * C18074 + C6298 * C18080 +
            C6305 * C18811 - C6306 * C18809 - C6305 * C18812 + C6299 * C18815 +
            C6307 * C69081 - C6308 * C69080 - C6307 * C69082 + C6300 * C69083) *
               C152084 * C152404) *
              C2628) *
         C152141 * C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152458 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C1401 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152458) *
               C1402 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C51195 +
              C462 * C51196 + C463 * C51197) *
                 C101414 +
             (C103122 + C103123 + C103124) * C152404) *
                C152458 -
            ((C103125 + C103126 + C103127) * C152404 +
             (C103124 + C103123 + C103122) * C101414) *
                C152246) *
               C152499) *
              C152443 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152458) *
               C1401 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152458 -
            ((C2878 * C51197 + C2879 * C51196 + C2880 * C51195) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C1402 +
           (((C103612 + C103613 + C103614) * C101414 +
             (C15195 * C51195 + C15196 * C51196 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C103614 + C103613 + C103612) * C152404 +
             (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152458 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152246) *
              C152141 * C851 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152246 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152458) *
              C152141 * C852 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152458 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C152246) *
              C152141 * C853 +
          (((C102259 + C102260 + C102261) * C101414 +
            (C717 * C51195 + C719 * C51196 +
             (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                 C51197) *
                C152404) *
               C152246 -
           ((C102261 + C102260 + C102259) * C152404 +
            (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C3010 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C3011 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C104370 + C104371 + C104372) * C152404) *
               C3012 -
           ((C104373 + C104374 + C104375) * C152404 +
            (C104372 + C104371 + C104370) * C101414) *
               C152515) *
              C152141 * C152443 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C3011 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C3010 -
           ((C104863 + C104864 + C104865) * C152404 +
            (C101864 + C101863 + C101862) * C101414) *
               C3012 +
           ((C104865 + C104864 + C104863) * C101414 +
            (C15465 * C51195 + C15466 * C51196 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C51197) *
                C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152458 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C152141 * C851 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152246 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152458) *
              C152141 * C852 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152458 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152246) *
              C152141 * C853 +
          (((C7427 + C7426 + C7425) * C152084 * C101414 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152084 * C152404) *
               C152246 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152458 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C1401 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152458) *
               C1402 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C152084 * C101414 +
             (C111405 + C111406 + C111407) * C152084 * C152404) *
                C152458 -
            ((C111408 + C111409 + C111410) * C152084 * C152404 +
             (C111407 + C111406 + C111405) * C152084 * C101414) *
                C152246) *
               C152499) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152458) *
               C1401 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152458 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C1402 +
           (((C8891 + C8890 + C8889) * C152084 * C101414 +
             (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
              C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
              C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C8889 + C8890 + C8891) * C152084 * C152404 +
             (C6689 + C6688 + C6687) * C152084 * C101414) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C3010 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C3011 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C112704 + C112705 + C112706) * C152084 * C152404) *
               C3012 -
           ((C112707 + C112708 + C112709) * C152084 * C152404 +
            (C112706 + C112705 + C112704) * C152084 * C101414) *
               C152515) *
              C152141 * C152443 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C3011 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C3010 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C3012 +
           ((C10209 + C10208 + C10207) * C152084 * C101414 +
            (C6303 * C2647 - C6304 * C2634 - C6303 * C2648 + C6298 * C2658 +
             C6305 * C9665 - C6306 * C9655 - C6305 * C9666 + C6299 * C9673 +
             C6307 * C9667 - C6308 * C9656 - C6307 * C9668 + C6300 * C9674) *
                C152084 * C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
               C152159 * C152546 -
           ((C1253 * C51197 + C1252 * C51196 + C16187 * C51195) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
               C152159 * C152499) *
              C359 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C1252 * C51195 + C1253 * C51196 + C1254 * C51197) * C152404) *
               C152159 * C152530 -
           ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152546 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152499) *
              C360 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
               C152159 * C152546 -
           ((C1255 * C51197 + C1254 * C51196 + C1253 * C51195) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152530 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
              C152159 * C152141 * C129 -
          ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
           (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
              C152159 * C152141 * C130 +
          ((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
           (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
              C152159 * C152141 * C131 -
          ((C1009 * C51197 + C718 * C51196 + C712 * C51195) * C152404 +
           (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
              C152159 * C152141 * C132 +
          ((C208 * C51195 + C209 * C51196 + C210 * C51197) * C101414 +
           (C718 * C51195 + C1009 * C51196 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C51197) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C1401 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C1402 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C1401 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C1401 -
           ((C102560 + C102559 + C102558) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C1402 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C101853 + C101854 + C101855) * C152404) *
              C152159 * C1489 -
          ((C102554 + C102553 + C102552) * C152404 +
           (C460 * C51197 + C461 * C51196 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C51195) *
               C101414) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C51195 +
            C462 * C51196 + C463 * C51197) *
               C101414 +
           (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
              C152159 * C1491 -
          ((C33866 * C51197 + C17003 * C51196 + C17506 * C51195) * C152404 +
           (C1881 * C51197 + C1882 * C51196 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C51195) *
               C101414) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C51195 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C51196 +
            (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                C51197) *
               C101414 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C51195 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C51196 +
            (C134 * C8867 - C135 * C8866 - C134 * C8868 + C152324 * C8869) *
                C51197) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C2393 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C2394 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C2394 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C2393 -
           ((C3037 * C51197 + C3038 * C51196 + C3039 * C51195) * C152404 +
            (C101864 + C101863 + C101862) * C101414) *
               C152502) *
              C152141 * C152526 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C2393 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C2394 +
           ((C101870 + C101869 + C101868) * C101414 +
            (C3038 * C51195 + C3037 * C51196 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C51197) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C2393 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C2394 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
               C152502) *
              C152546 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C2394 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C2393 -
           ((C16190 * C51197 + C16189 * C51196 + C16785 * C51195) * C152404 +
            (C103121 + C103120 + C103119) * C101414) *
               C152502) *
              C152530 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C2393 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C2394 +
           ((C103127 + C103126 + C103125) * C101414 +
            (C16789 * C51195 + C16788 * C51196 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C51197) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
            C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
            C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
               C152084 * C152404) *
              C152159 * C152141 * C129 -
          ((C6986 + C6987 + C6988) * C152084 * C152404 +
           (C6384 + C6383 + C6382) * C152084 * C101414) *
              C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C152084 * C101414 +
           (C6992 + C6993 + C6994) * C152084 * C152404) *
              C152159 * C152141 * C131 -
          ((C7425 + C7426 + C7427) * C152084 * C152404 +
           (C6390 + C6389 + C6388) * C152084 * C101414) *
              C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C152084 * C101414 +
           (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
            C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
            C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
               C152084 * C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
                C152084 * C152404) *
               C152159 * C152546 -
           ((C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221) *
                C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152530 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152546 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152546 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C1401 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C1402 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C1401 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C1401 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C110085 + C110086 + C110087) * C152084 * C152404) *
              C152159 * C1489 -
          ((C110789 + C110788 + C110787) * C152084 * C152404 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C152084 * C101414) *
              C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C152084 * C101414 +
           (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
            C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
            C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
               C152084 * C152404) *
              C152159 * C1491 -
          ((C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091 +
            C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
            C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243) *
               C152084 * C152404 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C152084 * C101414) *
              C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C152084 * C101414 +
           (C6303 * C8345 - C6304 * C8336 - C6303 * C8346 + C6298 * C8354 +
            C6305 * C9087 - C6306 * C9085 - C6305 * C9088 + C6299 * C9091 +
            C6307 * C61324 - C6308 * C61323 - C6307 * C61325 + C6300 * C61326) *
               C152084 * C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C2393 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C2394 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152543 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C2394 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C2393 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C152502) *
              C152141 * C152526 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C2393 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C2394 +
           ((C6997 + C6996 + C6995) * C152084 * C101414 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C2393 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C2394 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152546 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C2394 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C2393 -
           ((C6307 * C10405 - C6308 * C10403 - C6307 * C10406 + C6300 * C10409 +
             C6305 * C9659 - C6306 * C9652 - C6305 * C9660 + C6299 * C9670 +
             C6303 * C3173 - C6304 * C3169 - C6303 * C3174 + C6298 * C3181) *
                C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C152502) *
              C152530 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C2393 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C2394 +
           ((C111410 + C111409 + C111408) * C152084 * C101414 +
            (C6303 * C9659 - C6304 * C9652 - C6303 * C9660 + C6298 * C9670 +
             C6305 * C10405 - C6306 * C10403 - C6305 * C10406 + C6299 * C10409 +
             C6307 * C62160 - C6308 * C62159 - C6307 * C62161 +
             C6300 * C62162) *
                C152084 * C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C4321 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C152457 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C4321) *
               C152204) *
              C152118 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C4321) *
               C152457 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C4321 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152204) *
              C152127 +
          ((((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
             (C101865 + C101866 + C101867) * C152404) *
                C4321 -
            ((C101868 + C101869 + C101870) * C152404 +
             (C101867 + C101866 + C101865) * C101414) *
                C152246) *
               C152457 +
           (((C102558 + C102559 + C102560) * C101414 +
             (C2879 * C51195 + C2878 * C51196 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C102560 + C102559 + C102558) * C152404 +
             (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C4321 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152457 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C4321) *
               C152204) *
              C152118 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C4321) *
               C152457 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C4321 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152204) *
              C152127 +
          ((((C6387 + C6386 + C6385) * C152084 * C101414 +
             (C6992 + C6993 + C6994) * C152084 * C152404) *
                C4321 -
            ((C6995 + C6996 + C6997) * C152084 * C152404 +
             (C6994 + C6993 + C6992) * C152084 * C101414) *
                C152246) *
               C152457 +
           (((C7759 + C7758 + C7757) * C152084 * C101414 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C7757 + C7758 + C7759) * C152084 * C152404 +
             (C6692 + C6691 + C6690) * C152084 * C101414) *
                C4321) *
               C152204) *
              C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152242 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152249 +
            ((C101858 + C101857 + C101856) * C101414 +
             (C104370 + C104371 + C104372) * C152404) *
                C4993) *
               C152457 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152249 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152242 -
            ((C105060 + C105061 + C105062) * C152404 +
             (C103121 + C103120 + C103119) * C101414) *
                C4993) *
               C152204) *
              C3455 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152249 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152242 -
            ((C104863 + C104864 + C104865) * C152404 +
             (C101864 + C101863 + C101862) * C101414) *
                C4993) *
               C152457 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152242 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152249 +
            ((C104668 + C104667 + C104666) * C101414 +
             (C16189 * C51195 + C16190 * C51196 +
              (C134 * C3179 - C135 * C3172 - C134 * C3180 + C152324 * C3184) *
                  C51197) *
                 C152404) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152242 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152249 +
            ((C110090 + C110089 + C110088) * C152084 * C101414 +
             (C112704 + C112705 + C112706) * C152084 * C152404) *
                C4993) *
               C152457 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152249 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152242 -
            ((C113406 + C113407 + C113408) * C152084 * C152404 +
             (C111404 + C111403 + C111402) * C152084 * C101414) *
                C4993) *
               C152204) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152249 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152242 -
            ((C10207 + C10208 + C10209) * C152084 * C152404 +
             (C6991 + C6990 + C6989) * C152084 * C101414) *
                C4993) *
               C152457 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152242 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152249 +
            ((C9990 + C9989 + C9988) * C152084 * C101414 +
             (C6303 * C3175 - C6304 * C3170 - C6303 * C3176 + C6298 * C3182 +
              C6305 * C9657 - C6306 * C9651 - C6305 * C9658 + C6299 * C9669 +
              C6307 * C10407 - C6308 * C10404 - C6307 * C10408 +
              C6300 * C10410) *
                 C152084 * C152404) *
                C4993) *
               C152204) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C4321 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C152546 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C4321) *
               C152530 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C51195 +
              C462 * C51196 + C463 * C51197) *
                 C101414 +
             (C103122 + C103123 + C103124) * C152404) *
                C4321 -
            ((C103125 + C103126 + C103127) * C152404 +
             (C103124 + C103123 + C103122) * C101414) *
                C152246) *
               C152499) *
              C3455 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C4321) *
               C152546 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C4321 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152530 +
           (((C103612 + C103613 + C103614) * C101414 +
             (C15195 * C51195 + C15196 * C51196 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C103614 + C103613 + C103612) * C152404 +
             (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C4321 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152246) *
              C152141 * C152552 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152246 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C4321) *
              C152141 * C152545 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C4321 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C152246) *
              C152141 * C152528 +
          (((C102259 + C102260 + C102261) * C101414 +
            (C717 * C51195 + C719 * C51196 +
             (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                 C51197) *
                C152404) *
               C152246 -
           ((C102261 + C102260 + C102259) * C152404 +
            (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152554 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152551 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C104370 + C104371 + C104372) * C152404) *
               C152538 -
           ((C104373 + C104374 + C104375) * C152404 +
            (C104372 + C104371 + C104370) * C101414) *
               C152515) *
              C152141 * C3455 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152551 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152554 -
           ((C104863 + C104864 + C104865) * C152404 +
            (C101864 + C101863 + C101862) * C101414) *
               C152538 +
           ((C104865 + C104864 + C104863) * C101414 +
            (C15465 * C51195 + C15466 * C51196 +
             (C134 * C2651 - C135 * C2636 - C134 * C2652 + C152324 * C2660) *
                 C51197) *
                C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C4321 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C152141 * C152552 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152246 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C4321) *
              C152141 * C152545 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C4321 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152246) *
              C152141 * C152528 +
          (((C7427 + C7426 + C7425) * C152084 * C101414 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152084 * C152404) *
               C152246 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C4321 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152546 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C4321) *
               C152530 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C152084 * C101414 +
             (C111405 + C111406 + C111407) * C152084 * C152404) *
                C4321 -
            ((C111408 + C111409 + C111410) * C152084 * C152404 +
             (C111407 + C111406 + C111405) * C152084 * C101414) *
                C152246) *
               C152499) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C4321) *
               C152546 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C4321 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152530 +
           (((C8891 + C8890 + C8889) * C152084 * C101414 +
             (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
              C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
              C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C8889 + C8890 + C8891) * C152084 * C152404 +
             (C6689 + C6688 + C6687) * C152084 * C101414) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152554 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152551 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C112704 + C112705 + C112706) * C152084 * C152404) *
               C152538 -
           ((C112707 + C112708 + C112709) * C152084 * C152404 +
            (C112706 + C112705 + C112704) * C152084 * C101414) *
               C152515) *
              C152141 * C3455 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152551 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152554 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C152538 +
           ((C10209 + C10208 + C10207) * C152084 * C101414 +
            (C6303 * C2647 - C6304 * C2634 - C6303 * C2648 + C6298 * C2658 +
             C6305 * C9665 - C6306 * C9655 - C6305 * C9666 + C6299 * C9673 +
             C6307 * C9667 - C6308 * C9656 - C6307 * C9668 + C6300 * C9674) *
                C152084 * C152404) *
               C152515) *
              C152141 * C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152242 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152249 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C104370 + C104371 + C104372) * C152404) *
               C4993) *
              C152141 * C152118 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152249 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152242 -
           ((C104863 + C104864 + C104865) * C152404 +
            (C101864 + C101863 + C101862) * C101414) *
               C4993) *
              C152141 * C152127 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152242 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C152249 +
           ((C101870 + C101869 + C101868) * C101414 +
            (C3038 * C51195 + C3037 * C51196 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C51197) *
                C152404) *
               C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152242 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152249 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C112704 + C112705 + C112706) * C152084 * C152404) *
               C4993) *
              C152141 * C152118 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152249 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152242 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C4993) *
              C152141 * C152127 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152242 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152249 +
           ((C6997 + C6996 + C6995) * C152084 * C101414 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152084 * C152404) *
               C4993) *
              C152141 * C3802)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C4321 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152246) *
              C152141 * C152552 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152246 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C4321) *
              C152141 * C152545 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C4321 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C152246) *
              C152141 * C152528 +
          (((C102259 + C102260 + C102261) * C101414 +
            (C717 * C51195 + C719 * C51196 +
             (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                 C51197) *
                C152404) *
               C152246 -
           ((C102261 + C102260 + C102259) * C152404 +
            (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C4321 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C152546 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C4321) *
               C152530 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C51195 +
              C462 * C51196 + C463 * C51197) *
                 C101414 +
             (C103122 + C103123 + C103124) * C152404) *
                C4321 -
            ((C103125 + C103126 + C103127) * C152404 +
             (C103124 + C103123 + C103122) * C101414) *
                C152246) *
               C152499) *
              C3455 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C4321) *
               C152546 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C4321 -
            ((C104666 + C104667 + C104668) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152530 +
           (((C103612 + C103613 + C103614) * C101414 +
             (C15195 * C51195 + C15196 * C51196 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C103614 + C103613 + C103612) * C152404 +
             (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C4321 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C152141 * C152552 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152246 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C4321) *
              C152141 * C152545 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C4321 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152246) *
              C152141 * C152528 +
          (((C7427 + C7426 + C7425) * C152084 * C101414 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152084 * C152404) *
               C152246 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C4321) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C4321 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152546 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C4321) *
               C152530 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C152084 * C101414 +
             (C111405 + C111406 + C111407) * C152084 * C152404) *
                C4321 -
            ((C111408 + C111409 + C111410) * C152084 * C152404 +
             (C111407 + C111406 + C111405) * C152084 * C101414) *
                C152246) *
               C152499) *
              C3455 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C4321) *
               C152546 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C4321 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152530 +
           (((C8891 + C8890 + C8889) * C152084 * C101414 +
             (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
              C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
              C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C8889 + C8890 + C8891) * C152084 * C152404 +
             (C6689 + C6688 + C6687) * C152084 * C101414) *
                C4321) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C152457 -
           ((C1253 * C51197 + C1252 * C51196 + C16187 * C51195) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152204) *
              C851 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C1252 * C51195 + C1253 * C51196 + C1254 * C51197) * C152404) *
               C152159 * C152204 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152457) *
              C852 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C152457 -
           ((C1255 * C51197 + C1254 * C51196 + C1253 * C51195) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152204) *
              C853 +
          (((C459 * C51195 + C465 * C51196 + C866 * C51197) * C101414 +
            (C1254 * C51195 + C1255 * C51196 +
             (C134 * C1219 - C135 * C1208 - C134 * C1220 + C152324 * C1226) *
                 C51197) *
                C152404) *
               C152159 * C152204 -
           ((C1009 * C51197 + C718 * C51196 + C712 * C51195) * C152404 +
            (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C1851 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C1852 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152159 * C1853 -
           ((C33866 * C51197 + C17003 * C51196 + C17506 * C51195) * C152404 +
            (C1881 * C51197 + C1882 * C51196 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C51195) *
                C101414) *
               C152159 * C152509) *
              C152443 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C1852 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C1851 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C1853 +
           ((C1882 * C51195 + C1881 * C51196 + C1880 * C51197) * C101414 +
            (C17003 * C51195 + C33866 * C51196 +
             (C134 * C2241 - C135 * C2234 - C134 * C2242 + C152324 * C2246) *
                 C51197) *
                C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C152457 -
           ((C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221) *
                C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152204) *
              C851 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152204 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152457) *
              C852 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152457 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152204) *
              C853 +
          (((C7212 + C7211 + C7210) * C152084 * C101414 +
            (C6303 * C1215 - C6304 * C1206 - C6303 * C1216 + C6298 * C1224 +
             C6305 * C1693 - C6306 * C1677 - C6305 * C1694 + C6299 * C1713 +
             C6307 * C2241 - C6308 * C2234 - C6307 * C2242 + C6300 * C2246) *
                C152084 * C152404) *
               C152159 * C152204 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C152159 * C152457) *
              C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C1851 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C1852 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152159 * C1853 -
           ((C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091 +
             C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
             C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243) *
                C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C152159 * C152509) *
              C152443 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C1852 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C1851 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C1853 +
           ((C8576 + C8575 + C8574) * C152084 * C101414 +
            (C6303 * C2237 - C6304 * C2232 - C6303 * C2238 + C6298 * C2244 +
             C6305 * C8343 - C6306 * C8335 - C6305 * C8344 + C6299 * C8353 +
             C6307 * C9089 - C6308 * C9086 - C6307 * C9090 + C6300 * C9092) *
                C152084 * C152404) *
               C152159 * C152509) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152458 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C152457 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C16188 * C51195 + C2880 * C51196 + C2879 * C51197) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152458) *
               C152204) *
              C359 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152458) *
               C152457 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152458 -
            ((C2878 * C51197 + C2879 * C51196 + C2880 * C51195) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C152204) *
              C360 +
          ((((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
             (C101865 + C101866 + C101867) * C152404) *
                C152458 -
            ((C101868 + C101869 + C101870) * C152404 +
             (C101867 + C101866 + C101865) * C101414) *
                C152246) *
               C152457 +
           (((C102558 + C102559 + C102560) * C101414 +
             (C2879 * C51195 + C2878 * C51196 +
              (C134 * C2856 - C135 * C2855 - C134 * C2857 + C152324 * C2858) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C102560 + C102559 + C102558) * C152404 +
             (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152458 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152246) *
              C1851 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152246 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152458) *
              C1852 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152458 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C152246) *
              C1853 +
          (((C103809 + C103810 + C103811) * C101414 +
            (C17507 * C51195 + C17002 * C51196 +
             (C134 * C9966 - C135 * C9965 - C134 * C9967 + C152324 * C9968) *
                 C51197) *
                C152404) *
               C152246 -
           ((C103811 + C103810 + C103809) * C152404 +
            (C1881 * C51197 + C1882 * C51196 +
             (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                 C51195) *
                C101414) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152458 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C152457 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C6303 * C1691 - C6304 * C1676 - C6303 * C1692 + C6298 * C1712 +
              C6305 * C1701 - C6306 * C1681 - C6305 * C1702 + C6299 * C1717 +
              C6307 * C8341 - C6308 * C8334 - C6307 * C8342 + C6300 * C8352) *
                 C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152458) *
               C152204) *
              C359 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152458) *
               C152457 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152458 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C152204) *
              C360 +
          ((((C6387 + C6386 + C6385) * C152084 * C101414 +
             (C6992 + C6993 + C6994) * C152084 * C152404) *
                C152458 -
            ((C6995 + C6996 + C6997) * C152084 * C152404 +
             (C6994 + C6993 + C6992) * C152084 * C101414) *
                C152246) *
               C152457 +
           (((C7759 + C7758 + C7757) * C152084 * C101414 +
             (C6303 * C1687 - C6304 * C1674 - C6303 * C1688 + C6298 * C1710 +
              C6305 * C1705 - C6306 * C1683 - C6305 * C1706 + C6299 * C1719 +
              C6307 * C9966 - C6308 * C9965 - C6307 * C9967 + C6300 * C9968) *
                 C152084 * C152404) *
                C152246 -
            ((C7757 + C7758 + C7759) * C152084 * C152404 +
             (C6692 + C6691 + C6690) * C152084 * C101414) *
                C152458) *
               C152204) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152458 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C1851 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152246 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152458) *
              C1852 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152458 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152246) *
              C1853 +
          (((C112107 + C112108 + C112109) * C152084 * C101414 +
            (C6303 * C8341 - C6304 * C8334 - C6303 * C8342 + C6298 * C8352 +
             C6305 * C8347 - C6306 * C8337 - C6305 * C8348 + C6299 * C8355 +
             C6307 * C60866 - C6308 * C60865 - C6307 * C60867 +
             C6300 * C60868) *
                C152084 * C152404) *
               C152246 -
           ((C112109 + C112108 + C112107) * C152084 * C152404 +
            (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
             C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
             C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
                C152084 * C101414) *
               C152458) *
              C152509) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
               C152159 * C152546 -
           ((C1253 * C51197 + C1252 * C51196 + C16187 * C51195) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
               C152159 * C152499) *
              C359 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C1252 * C51195 + C1253 * C51196 + C1254 * C51197) * C152404) *
               C152159 * C152530 -
           ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152546 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152499) *
              C360 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
               C152159 * C152546 -
           ((C1255 * C51197 + C1254 * C51196 + C1253 * C51195) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152530 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
              C152159 * C152141 * C129 -
          ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
           (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
              C152159 * C152141 * C130 +
          ((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
           (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
              C152159 * C152141 * C131 -
          ((C1009 * C51197 + C718 * C51196 + C712 * C51195) * C152404 +
           (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
              C152159 * C152141 * C132 +
          ((C208 * C51195 + C209 * C51196 + C210 * C51197) * C101414 +
           (C718 * C51195 + C1009 * C51196 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C51197) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152547 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152532 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
               C152502) *
              C152141 * C359 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152532 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152547 -
           ((C3037 * C51197 + C3038 * C51196 + C3039 * C51195) * C152404 +
            (C101864 + C101863 + C101862) * C101414) *
               C152502) *
              C152141 * C360 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152547 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C152532 +
           ((C101870 + C101869 + C101868) * C101414 +
            (C3038 * C51195 + C3037 * C51196 +
             (C134 * C3015 - C135 * C3014 - C134 * C3016 + C152324 * C3017) *
                 C51197) *
                C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C1401 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C1402 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C1401 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C1401 -
           ((C102560 + C102559 + C102558) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C1402 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C101853 + C101854 + C101855) * C152404) *
              C152159 * C1489 -
          ((C102554 + C102553 + C102552) * C152404 +
           (C460 * C51197 + C461 * C51196 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C51195) *
               C101414) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C51195 +
            C462 * C51196 + C463 * C51197) *
               C101414 +
           (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
              C152159 * C1491 -
          ((C33866 * C51197 + C17003 * C51196 + C17506 * C51195) * C152404 +
           (C1881 * C51197 + C1882 * C51196 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C51195) *
               C101414) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C51195 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C51196 +
            (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                C51197) *
               C101414 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C51195 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C51196 +
            (C134 * C8867 - C135 * C8866 - C134 * C8868 + C152324 * C8869) *
                C51197) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152547 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152532 +
           ((C101858 + C101857 + C101856) * C101414 +
            (C15464 * C51195 + C3039 * C51196 + C3038 * C51197) * C152404) *
               C152502) *
              C1401 +
          (((C102552 + C102553 + C102554) * C101414 +
            (C103119 + C103120 + C103121) * C152404) *
               C152532 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152547 -
           ((C16190 * C51197 + C16189 * C51196 + C16785 * C51195) * C152404 +
            (C103121 + C103120 + C103119) * C101414) *
               C152502) *
              C1402 +
          ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C103122 + C103123 + C103124) * C152404) *
               C152547 -
           ((C103125 + C103126 + C103127) * C152404 +
            (C103124 + C103123 + C103122) * C101414) *
               C152532 +
           ((C103127 + C103126 + C103125) * C101414 +
            (C16789 * C51195 + C16788 * C51196 +
             (C134 * C10185 - C135 * C10184 - C134 * C10186 +
              C152324 * C10187) *
                 C51197) *
                C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
            C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
            C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
               C152084 * C152404) *
              C152159 * C152141 * C129 -
          ((C6986 + C6987 + C6988) * C152084 * C152404 +
           (C6384 + C6383 + C6382) * C152084 * C101414) *
              C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C152084 * C101414 +
           (C6992 + C6993 + C6994) * C152084 * C152404) *
              C152159 * C152141 * C131 -
          ((C7425 + C7426 + C7427) * C152084 * C152404 +
           (C6390 + C6389 + C6388) * C152084 * C101414) *
              C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C152084 * C101414 +
           (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
            C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
            C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
               C152084 * C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
                C152084 * C152404) *
               C152159 * C152546 -
           ((C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221) *
                C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152530 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152546 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152546 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152547 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152532 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C152141 * C359 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152532 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152547 -
           ((C10207 + C10208 + C10209) * C152084 * C152404 +
            (C6991 + C6990 + C6989) * C152084 * C101414) *
               C152502) *
              C152141 * C360 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152547 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152532 +
           ((C6997 + C6996 + C6995) * C152084 * C101414 +
            (C6303 * C2639 - C6304 * C2630 - C6303 * C2640 + C6298 * C2654 +
             C6305 * C3177 - C6306 * C3171 - C6305 * C3178 + C6299 * C3183 +
             C6307 * C10185 - C6308 * C10184 - C6307 * C10186 +
             C6300 * C10187) *
                C152084 * C152404) *
               C152502) *
              C152141 * C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C1401 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C1402 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C1401 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C1401 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C110085 + C110086 + C110087) * C152084 * C152404) *
              C152159 * C1489 -
          ((C110789 + C110788 + C110787) * C152084 * C152404 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C152084 * C101414) *
              C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C152084 * C101414 +
           (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
            C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
            C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
               C152084 * C152404) *
              C152159 * C1491 -
          ((C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091 +
            C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
            C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243) *
               C152084 * C152404 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C152084 * C101414) *
              C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C152084 * C101414 +
           (C6303 * C8345 - C6304 * C8336 - C6303 * C8346 + C6298 * C8354 +
            C6305 * C9087 - C6306 * C9085 - C6305 * C9088 + C6299 * C9091 +
            C6307 * C61324 - C6308 * C61323 - C6307 * C61325 + C6300 * C61326) *
               C152084 * C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152547 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152532 +
           ((C110090 + C110089 + C110088) * C152084 * C101414 +
            (C6303 * C2643 - C6304 * C2632 - C6303 * C2644 + C6298 * C2656 +
             C6305 * C3173 - C6306 * C3169 - C6305 * C3174 + C6299 * C3181 +
             C6307 * C9659 - C6308 * C9652 - C6307 * C9660 + C6300 * C9670) *
                C152084 * C152404) *
               C152502) *
              C1401 +
          (((C110787 + C110788 + C110789) * C152084 * C101414 +
            (C111402 + C111403 + C111404) * C152084 * C152404) *
               C152532 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152547 -
           ((C6307 * C10405 - C6308 * C10403 - C6307 * C10406 + C6300 * C10409 +
             C6305 * C9659 - C6306 * C9652 - C6305 * C9660 + C6299 * C9670 +
             C6303 * C3173 - C6304 * C3169 - C6303 * C3174 + C6298 * C3181) *
                C152084 * C152404 +
            (C111404 + C111403 + C111402) * C152084 * C101414) *
               C152502) *
              C1402 +
          (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C111405 + C111406 + C111407) * C152084 * C152404) *
               C152547 -
           ((C111408 + C111409 + C111410) * C152084 * C152404 +
            (C111407 + C111406 + C111405) * C152084 * C101414) *
               C152532 +
           ((C111410 + C111409 + C111408) * C152084 * C101414 +
            (C6303 * C9659 - C6304 * C9652 - C6303 * C9660 + C6298 * C9670 +
             C6305 * C10405 - C6306 * C10403 - C6305 * C10406 + C6299 * C10409 +
             C6307 * C62160 - C6308 * C62159 - C6307 * C62161 +
             C6300 * C62162) *
                C152084 * C152404) *
               C152502) *
              C152499) *
         C152113) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152458 -
           ((C101856 + C101857 + C101858) * C152404 +
            (C101855 + C101854 + C101853) * C101414) *
               C152246) *
              C152141 * C851 +
          (((C101859 + C101860 + C101861) * C101414 +
            (C101862 + C101863 + C101864) * C152404) *
               C152246 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152458) *
              C152141 * C852 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152458 -
           ((C101868 + C101869 + C101870) * C152404 +
            (C101867 + C101866 + C101865) * C101414) *
               C152246) *
              C152141 * C853 +
          (((C102259 + C102260 + C102261) * C101414 +
            (C717 * C51195 + C719 * C51196 +
             (C134 * C649 - C135 * C626 - C134 * C650 + C152324 * C662) *
                 C51197) *
                C152404) *
               C152246 -
           ((C102261 + C102260 + C102259) * C152404 +
            (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                  C51195 +
              C205 * C51196 + C206 * C51197) *
                 C101414 +
             (C101853 + C101854 + C101855) * C152404) *
                C152458 -
            ((C101856 + C101857 + C101858) * C152404 +
             (C101855 + C101854 + C101853) * C101414) *
                C152246) *
               C1401 +
           (((C102552 + C102553 + C102554) * C101414 +
             (C103119 + C103120 + C103121) * C152404) *
                C152246 -
            ((C102554 + C102553 + C102552) * C152404 +
             (C460 * C51197 + C461 * C51196 +
              (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                  C51195) *
                 C101414) *
                C152458) *
               C1402 +
           ((((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                  C51195 +
              C462 * C51196 + C463 * C51197) *
                 C101414 +
             (C103122 + C103123 + C103124) * C152404) *
                C152458 -
            ((C103125 + C103126 + C103127) * C152404 +
             (C103124 + C103123 + C103122) * C101414) *
                C152246) *
               C152499) *
              C152443 +
          ((((C101859 + C101860 + C101861) * C101414 +
             (C101862 + C101863 + C101864) * C152404) *
                C152246 -
            ((C101861 + C101860 + C101859) * C152404 +
             (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
                C152458) *
               C1401 +
           (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
             (C102555 + C102556 + C102557) * C152404) *
                C152458 -
            ((C2878 * C51197 + C2879 * C51196 + C2880 * C51195) * C152404 +
             (C102557 + C102556 + C102555) * C101414) *
                C152246) *
               C1402 +
           (((C103612 + C103613 + C103614) * C101414 +
             (C15195 * C51195 + C15196 * C51196 +
              (C134 * C1707 - C135 * C1684 - C134 * C1708 + C152324 * C1720) *
                  C51197) *
                 C152404) *
                C152246 -
            ((C103614 + C103613 + C103612) * C152404 +
             (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152458 -
           ((C110088 + C110089 + C110090) * C152084 * C152404 +
            (C110087 + C110086 + C110085) * C152084 * C101414) *
               C152246) *
              C152141 * C851 +
          (((C6988 + C6987 + C6986) * C152084 * C101414 +
            (C6989 + C6990 + C6991) * C152084 * C152404) *
               C152246 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152458) *
              C152141 * C852 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152458 -
           ((C6995 + C6996 + C6997) * C152084 * C152404 +
            (C6994 + C6993 + C6992) * C152084 * C101414) *
               C152246) *
              C152141 * C853 +
          (((C7427 + C7426 + C7425) * C152084 * C101414 +
            (C6303 * C641 - C6304 * C622 - C6303 * C642 + C6298 * C658 +
             C6305 * C1685 - C6306 * C1673 - C6305 * C1686 + C6299 * C1709 +
             C6307 * C1707 - C6308 * C1684 - C6307 * C1708 + C6300 * C1720) *
                C152084 * C152404) *
               C152246 -
           ((C7425 + C7426 + C7427) * C152084 * C152404 +
            (C6390 + C6389 + C6388) * C152084 * C101414) *
               C152458) *
              C152141 * C152503)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
              C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
              C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                 C152084 * C101414 +
             (C110085 + C110086 + C110087) * C152084 * C152404) *
                C152458 -
            ((C110088 + C110089 + C110090) * C152084 * C152404 +
             (C110087 + C110086 + C110085) * C152084 * C101414) *
                C152246) *
               C1401 +
           (((C110787 + C110788 + C110789) * C152084 * C101414 +
             (C111402 + C111403 + C111404) * C152084 * C152404) *
                C152246 -
            ((C110789 + C110788 + C110787) * C152084 * C152404 +
             (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
              C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
              C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                 C152084 * C101414) *
                C152458) *
               C1402 +
           (((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
              C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
              C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                 C152084 * C101414 +
             (C111405 + C111406 + C111407) * C152084 * C152404) *
                C152458 -
            ((C111408 + C111409 + C111410) * C152084 * C152404 +
             (C111407 + C111406 + C111405) * C152084 * C101414) *
                C152246) *
               C152499) *
              C152443 +
          ((((C6988 + C6987 + C6986) * C152084 * C101414 +
             (C6989 + C6990 + C6991) * C152084 * C152404) *
                C152246 -
            ((C6986 + C6987 + C6988) * C152084 * C152404 +
             (C6384 + C6383 + C6382) * C152084 * C101414) *
                C152458) *
               C1401 +
           (((C6686 + C6685 + C6684) * C152084 * C101414 +
             (C7754 + C7755 + C7756) * C152084 * C152404) *
                C152458 -
            ((C9988 + C9989 + C9990) * C152084 * C152404 +
             (C7756 + C7755 + C7754) * C152084 * C101414) *
                C152246) *
               C1402 +
           (((C8891 + C8890 + C8889) * C152084 * C101414 +
             (C6303 * C1703 - C6304 * C1682 - C6303 * C1704 + C6298 * C1718 +
              C6305 * C8339 - C6306 * C8333 - C6305 * C8340 + C6299 * C8351 +
              C6307 * C8349 - C6308 * C8338 - C6307 * C8350 + C6300 * C8356) *
                 C152084 * C152404) *
                C152246 -
            ((C8889 + C8890 + C8891) * C152084 * C152404 +
             (C6689 + C6688 + C6687) * C152084 * C101414) *
                C152458) *
               C152499) *
              C152124)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
              C152159 * C152141 * C129 -
          ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
           (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
              C152159 * C152141 * C130 +
          ((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
           (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
              C152159 * C152141 * C131 -
          ((C1009 * C51197 + C718 * C51196 + C712 * C51195) * C152404 +
           (C209 * C51197 + C208 * C51196 + C207 * C51195) * C101414) *
              C152159 * C152141 * C132 +
          ((C208 * C51195 + C209 * C51196 + C210 * C51197) * C101414 +
           (C718 * C51195 + C1009 * C51196 +
            (C134 * C999 - C135 * C998 - C134 * C1000 + C152324 * C1001) *
                C51197) *
               C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C15462 * C51195 + C714 * C51196 + C713 * C51197) * C152404) *
               C152159 * C152546 -
           ((C1253 * C51197 + C1252 * C51196 + C16187 * C51195) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C152530 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
               C152159 * C152499) *
              C359 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C1252 * C51195 + C1253 * C51196 + C1254 * C51197) * C152404) *
               C152159 * C152530 -
           ((C712 * C51197 + C713 * C51196 + C714 * C51195) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C152546 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152499) *
              C360 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C713 * C51195 + C712 * C51196 + C718 * C51197) * C152404) *
               C152159 * C152546 -
           ((C1255 * C51197 + C1254 * C51196 + C1253 * C51195) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C152530 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                 C51195 +
             C205 * C51196 + C206 * C51197) *
                C101414 +
            (C101853 + C101854 + C101855) * C152404) *
               C152159 * C1401 -
           ((C102554 + C102553 + C102552) * C152404 +
            (C460 * C51197 + C461 * C51196 +
             (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                 C51195) *
                C101414) *
               C152159 * C1402 +
           (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                 C51195 +
             C462 * C51196 + C463 * C51197) *
                C101414 +
            (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C461 * C51195 + C460 * C51196 + C459 * C51197) * C101414 +
            (C102555 + C102556 + C102557) * C152404) *
               C152159 * C1402 -
           ((C101861 + C101860 + C101859) * C152404 +
            (C207 * C51197 + C206 * C51196 + C205 * C51195) * C101414) *
               C152159 * C1401 -
           ((C2099 * C51197 + C2100 * C51196 + C2101 * C51195) * C152404 +
            (C464 * C51197 + C463 * C51196 + C462 * C51195) * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C206 * C51195 + C207 * C51196 + C208 * C51197) * C101414 +
            (C101865 + C101866 + C101867) * C152404) *
               C152159 * C1401 -
           ((C102560 + C102559 + C102558) * C152404 +
            (C465 * C51197 + C459 * C51196 + C460 * C51195) * C101414) *
               C152159 * C1402 +
           ((C463 * C51195 + C464 * C51196 + C466 * C51197) * C101414 +
            (C2100 * C51195 + C2099 * C51196 +
             (C134 * C2077 - C135 * C2076 - C134 * C2078 + C152324 * C2079) *
                 C51197) *
                C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152324 * C160) *
                C51195 +
            C205 * C51196 + C206 * C51197) *
               C101414 +
           (C101853 + C101854 + C101855) * C152404) *
              C152159 * C1489 -
          ((C102554 + C102553 + C102552) * C152404 +
           (C460 * C51197 + C461 * C51196 +
            (C134 * C380 - C135 * C365 - C134 * C381 + C152324 * C401) *
                C51195) *
               C101414) *
              C152159 * C1490 +
          (((C134 * C382 - C135 * C366 - C134 * C383 + C152324 * C402) *
                C51195 +
            C462 * C51196 + C463 * C51197) *
               C101414 +
           (C16786 * C51195 + C2101 * C51196 + C2100 * C51197) * C152404) *
              C152159 * C1491 -
          ((C33866 * C51197 + C17003 * C51196 + C17506 * C51195) * C152404 +
           (C1881 * C51197 + C1882 * C51196 +
            (C134 * C1509 - C135 * C1498 - C134 * C1510 + C152324 * C1522) *
                C51195) *
               C101414) *
              C152159 * C1492 +
          (((C134 * C1511 - C135 * C1499 - C134 * C1512 + C152324 * C1523) *
                C51195 +
            (C134 * C1513 - C135 * C1500 - C134 * C1514 + C152324 * C1524) *
                C51196 +
            (C134 * C1515 - C135 * C1501 - C134 * C1516 + C152324 * C1525) *
                C51197) *
               C101414 +
           ((C134 * C8345 - C135 * C8336 - C134 * C8346 + C152324 * C8354) *
                C51195 +
            (C134 * C8343 - C135 * C8335 - C134 * C8344 + C152324 * C8353) *
                C51196 +
            (C134 * C8867 - C135 * C8866 - C134 * C8868 + C152324 * C8869) *
                C51197) *
               C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
            C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
            C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
               C152084 * C152404) *
              C152159 * C152141 * C129 -
          ((C6986 + C6987 + C6988) * C152084 * C152404 +
           (C6384 + C6383 + C6382) * C152084 * C101414) *
              C152159 * C152141 * C130 +
          ((C6387 + C6386 + C6385) * C152084 * C101414 +
           (C6992 + C6993 + C6994) * C152084 * C152404) *
              C152159 * C152141 * C131 -
          ((C7425 + C7426 + C7427) * C152084 * C152404 +
           (C6390 + C6389 + C6388) * C152084 * C101414) *
              C152159 * C152141 * C132 +
          ((C6393 + C6392 + C6391) * C152084 * C101414 +
           (C6303 * C643 - C6304 * C623 - C6303 * C644 + C6298 * C659 +
            C6305 * C1217 - C6306 * C1207 - C6305 * C1218 + C6299 * C1225 +
            C6307 * C2077 - C6308 * C2076 - C6307 * C2078 + C6300 * C2079) *
               C152084 * C152404) *
              C152159 * C152141 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C6303 * C633 - C6304 * C618 - C6303 * C634 + C6298 * C654 +
             C6305 * C1209 - C6306 * C1203 - C6305 * C1210 + C6299 * C1221 +
             C6307 * C1699 - C6308 * C1680 - C6307 * C1700 + C6300 * C1716) *
                C152084 * C152404) *
               C152159 * C152546 -
           ((C6307 * C2235 - C6308 * C2231 - C6307 * C2236 + C6300 * C2243 +
             C6305 * C1699 - C6306 * C1680 - C6305 * C1700 + C6299 * C1716 +
             C6303 * C1209 - C6304 * C1203 - C6303 * C1210 + C6298 * C1221) *
                C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C152530 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C359 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C152530 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C152546 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C360 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C152546 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C152530 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
             C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
             C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
                C152084 * C101414 +
            (C110085 + C110086 + C110087) * C152084 * C152404) *
               C152159 * C1401 -
           ((C110789 + C110788 + C110787) * C152084 * C152404 +
            (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
             C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
             C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
                C152084 * C101414) *
               C152159 * C1402 +
           ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
             C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
             C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
                C152084 * C101414 +
            (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
             C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
             C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152543 +
          (((C6686 + C6685 + C6684) * C152084 * C101414 +
            (C7754 + C7755 + C7756) * C152084 * C152404) *
               C152159 * C1402 -
           ((C6986 + C6987 + C6988) * C152084 * C152404 +
            (C6384 + C6383 + C6382) * C152084 * C101414) *
               C152159 * C1401 -
           ((C8889 + C8890 + C8891) * C152084 * C152404 +
            (C6689 + C6688 + C6687) * C152084 * C101414) *
               C152159 * C152499) *
              C152526 +
          (((C6387 + C6386 + C6385) * C152084 * C101414 +
            (C6992 + C6993 + C6994) * C152084 * C152404) *
               C152159 * C1401 -
           ((C7757 + C7758 + C7759) * C152084 * C152404 +
            (C6692 + C6691 + C6690) * C152084 * C101414) *
               C152159 * C1402 +
           ((C6695 + C6694 + C6693) * C152084 * C101414 +
            (C6303 * C1695 - C6304 * C1678 - C6303 * C1696 + C6298 * C1714 +
             C6305 * C2239 - C6306 * C2233 - C6305 * C2240 + C6299 * C2245 +
             C6307 * C8867 - C6308 * C8866 - C6307 * C8868 + C6300 * C8869) *
                C152084 * C152404) *
               C152159 * C152499) *
              C152493)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6303 * C144 - C6304 * C136 - C6303 * C145 + C6298 * C160 +
            C6305 * C380 - C6306 * C365 - C6305 * C381 + C6299 * C401 +
            C6307 * C382 - C6308 * C366 - C6307 * C383 + C6300 * C402) *
               C152084 * C101414 +
           (C110085 + C110086 + C110087) * C152084 * C152404) *
              C152159 * C1489 -
          ((C110789 + C110788 + C110787) * C152084 * C152404 +
           (C6307 * C1509 - C6308 * C1498 - C6307 * C1510 + C6300 * C1522 +
            C6305 * C382 - C6306 * C366 - C6305 * C383 + C6299 * C402 +
            C6303 * C380 - C6304 * C365 - C6303 * C381 + C6298 * C401) *
               C152084 * C101414) *
              C152159 * C1490 +
          ((C6303 * C382 - C6304 * C366 - C6303 * C383 + C6298 * C402 +
            C6305 * C1509 - C6306 * C1498 - C6305 * C1510 + C6299 * C1522 +
            C6307 * C1511 - C6308 * C1499 - C6307 * C1512 + C6300 * C1523) *
               C152084 * C101414 +
           (C6303 * C1699 - C6304 * C1680 - C6303 * C1700 + C6298 * C1716 +
            C6305 * C2235 - C6306 * C2231 - C6305 * C2236 + C6299 * C2243 +
            C6307 * C8345 - C6308 * C8336 - C6307 * C8346 + C6300 * C8354) *
               C152084 * C152404) *
              C152159 * C1491 -
          ((C6307 * C9087 - C6308 * C9085 - C6307 * C9088 + C6300 * C9091 +
            C6305 * C8345 - C6306 * C8336 - C6305 * C8346 + C6299 * C8354 +
            C6303 * C2235 - C6304 * C2231 - C6303 * C2236 + C6298 * C2243) *
               C152084 * C152404 +
           (C6307 * C8105 - C6308 * C8100 - C6307 * C8106 + C6300 * C8112 +
            C6305 * C1511 - C6306 * C1499 - C6305 * C1512 + C6299 * C1523 +
            C6303 * C1509 - C6304 * C1498 - C6303 * C1510 + C6298 * C1522) *
               C152084 * C101414) *
              C152159 * C1492 +
          ((C6303 * C1511 - C6304 * C1499 - C6303 * C1512 + C6298 * C1523 +
            C6305 * C8105 - C6306 * C8100 - C6305 * C8106 + C6299 * C8112 +
            C6307 * C8107 - C6308 * C8101 - C6307 * C8108 + C6300 * C8113) *
               C152084 * C101414 +
           (C6303 * C8345 - C6304 * C8336 - C6303 * C8346 + C6298 * C8354 +
            C6305 * C9087 - C6306 * C9085 - C6305 * C9088 + C6299 * C9091 +
            C6307 * C61324 - C6308 * C61323 - C6307 * C61325 + C6300 * C61326) *
               C152084 * C152404) *
              C152159 * C1493) *
         C152113) /
            (p * q * std::sqrt(p + q));
}
